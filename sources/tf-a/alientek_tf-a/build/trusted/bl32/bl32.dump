
/home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/bl32.elf:     file format elf32-littlearm
/home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/bl32.elf
architecture: armv7, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x2fffc760

Program Header:
    LOAD off    0x00000000 vaddr 0x2ffe0000 paddr 0x2ffe0000 align 2**16
         filesz 0x0001d540 memsz 0x0001ed40 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 ro            00010000  2ffed000  2ffed000  0000d000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000540  2fffd000  2fffd000  0001d000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 stacks        00000c00  2fffd540  2fffd540  0001d540  2**6
                  ALLOC
  3 .bss          00000c00  2fffe140  2fffe140  0001d540  2**6
                  ALLOC
  4 .debug_info   000487d1  00000000  00000000  0001d540  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000e432  00000000  00000000  00065d11  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00002448  00000000  00000000  00074148  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000237fc  00000000  00000000  00076590  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000a61f  00000000  00000000  00099d8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      0000005a  00000000  00000000  000a43ab  2**0
                  CONTENTS, READONLY
 10 .ARM.attributes 0000003b  00000000  00000000  000a4405  2**0
                  CONTENTS, READONLY
 11 .debug_loc    0002f014  00000000  00000000  000a4440  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00006658  00000000  00000000  000d3458  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00005cc0  00000000  00000000  000d9ab0  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
2ffed000 l    d  ro	00000000 ro
2fffd000 l    d  .data	00000000 .data
2fffd540 l    d  stacks	00000000 stacks
2fffe140 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/entrypoint.o
2ffed3c0 l     F ro	00000084 sp_min_exit
00000000 l    df *ABS*	00000000 sp_min_main.c
2fffe140 l     O .bss	00000008 sp_min_cpu_ctx_ptr
2fffe148 l     O .bss	00000120 sp_min_smc_context
2fff9f38 l     O ro	0000000c psci_args.7160
00000000 l    df *ABS*	00000000 runtime_svc.c
00000000 l    df *ABS*	00000000 plat_sp_min_common.c
00000000 l    df *ABS*	00000000 std_svc_setup.c
2ffed7b0 l     F ro	0000007c std_svc_smc_handler
2ffed82c l     F ro	00000024 std_svc_setup
2fffc714 l     O ro	00000010 __svc_desc_std_svc
00000000 l    df *ABS*	00000000 context_mgmt.c
00000000 l    df *ABS*	00000000 errata_report.c
00000000 l    df *ABS*	00000000 psci_off.c
00000000 l    df *ABS*	00000000 psci_on.c
00000000 l    df *ABS*	00000000 psci_suspend.c
00000000 l    df *ABS*	00000000 psci_common.c
2fffe268 l     O .bss	00000002 psci_req_local_pwr_states
2fffa140 l     O ro	0000000c psci_state_type_str.7417
00000000 l    df *ABS*	00000000 psci_main.c
00000000 l    df *ABS*	00000000 psci_setup.c
2fffe270 l     O .bss	00000040 psci_ns_context
00000000 l    df *ABS*	00000000 psci_system_off.c
00000000 l    df *ABS*	00000000 psci_mem_protect.c
00000000 l    df *ABS*	00000000 bakery_lock_normal.c
00000000 l    df *ABS*	00000000 stm32mp1_calib.c
2ffeeca8 l     F ro	00000084 trim_table_init
2ffeed2c l     F ro	00000020 csi_get_trimed_cal
2ffeed4c l     F ro	00000028 csi_set_trim
2ffeed74 l     F ro	0000001c hsi_get_trimed_cal
2ffeed90 l     F ro	00000024 hsi_set_trim
2ffeedb4 l     F ro	000001b0 rcc_calibration
2fffe2b0 l     O .bss	00000001 rcc_wakeup
2fffe2b4 l     O .bss	00000004 timer_val
2fffd000 l     O .data	00000022 fbv_csi
2fffd022 l     O .data	00000022 fbv_hsi
2fffd044 l     O .data	000000a8 stm32mp1_clk_cal_csi
2fffd0ec l     O .data	000000a8 stm32mp1_clk_cal_hsi
00000000 l    df *ABS*	00000000 etzpc.c
2fffe2b8 l     O .bss	0000000c etzpc_dev
00000000 l    df *ABS*	00000000 stm32_rng.c
2fffe2c4 l     O .bss	00000008 stm32_rng
00000000 l    df *ABS*	00000000 stm32_rtc.c
2ffef440 l     F ro	00000030 stm32_rtc_read_calendar
2ffef470 l     F ro	0000002c stm32_is_a_leap_year
2ffef49c l     F ro	00000050 stm32_rtc_get_date
2ffef4ec l     F ro	00000050 stm32_rtc_get_time
2fffe2cc l     O .bss	00000004 lock
2fffe2d0 l     O .bss	00000010 rtc_dev
2fffa351 l     O ro	0000000c month_len.6669
00000000 l    df *ABS*	00000000 stm32_tamp.c
2fffe2e0 l     O .bss	0000001c stm32_tamp
00000000 l    df *ABS*	00000000 stm32_timer.c
2ffefbb4 l     F ro	0000007c stm32_timer_config
2ffefc30 l     F ro	0000007a stm32_timer_start_capture.part.0
2fffe2fc l     O .bss	00000020 stm32_timer
2fffa4a0 l     O ro	00000018 __func__.6534
00000000 l    df *ABS*	00000000 sp_min_setup.c
2ffefe24 l     F ro	00000020 stm32mp1_tamper_action
2fffe31c l     O .bss	00000024 bl33_image_ep_info
2fffe340 l     O .bss	00000018 console
2fffd194 l     O .data	00000024 ext_tamp
2fffd1b8 l     O .data	00000030 int_tamp
2fffa678 l     O ro	00000018 tamper_name
00000000 l    df *ABS*	00000000 stm32mp1_low_power.c
2fffe358 l     O .bss	00000001 enter_cstop_done
2fffe35c l     O .bss	00000004 gicc_pmr
2fffe360 l     O .bss	00000400 int_stack
2fffe760 l     O .bss	0000000c sleep_time
2fffa710 l     O ro	00000054 config_pwr
00000000 l    df *ABS*	00000000 stm32mp1_pm.c
2fff03f0 l     F ro	00000002 stm32_pwr_domain_off
2fff03f2 l     F ro	0000001c stm32_validate_power_state
2fff0410 l     F ro	00000018 stm32_validate_ns_entrypoint
2fff0428 l     F ro	0000000c stm32_node_hw_state
2fff0434 l     F ro	00000008 stm32_get_sys_suspend_power_state
2fff043c l     F ro	00000014 stm32_system_reset
2fff0450 l     F ro	00000018 stm32_pwr_domain_suspend
2fff0468 l     F ro	0000003c stm32_system_off
2fff04a4 l     F ro	00000040 stm32_pwr_domain_pwr_down_wfi
2fff04e4 l     F ro	00000014 stm32_pwr_domain_on_finish
2fff04f8 l     F ro	00000084 stm32_pwr_domain_on
2fff057c l     F ro	0000003c stm32_cpu_standby
2fff05b8 l     F ro	00000002 stm32_pwr_domain_suspend_finish
2fffe76c l     O .bss	00000004 cntfrq_core0
2fffe770 l     O .bss	00000004 saved_entrypoint
2fffe774 l     O .bss	00000004 stm32_sec_entrypoint
2fffa784 l     O ro	00000054 stm32_psci_ops
00000000 l    df *ABS*	00000000 stm32mp1_power_config.c
2fffe778 l     O .bss	00000004 deepest_system_suspend_mode
2fffe77c l     O .bss	00000003 pm_dom
2fffe77f l     O .bss	00000007 stm32mp1_supported_soc_modes
2fffe788 l     O .bss	00000004 system_off_mode
00000000 l    df *ABS*	00000000 stm32mp1_shared_resources.c
2fff0718 l     F ro	00000038 decprot2str
2fff0750 l     F ro	00000034 get_gpioz_nbpin
2fff0784 l     F ro	000000b0 register_periph
2fff0834 l     F ro	00000128 register_periph_iomem
2fff095c l     F ro	00000054 check_decprot
2fff09b0 l     F ro	0000003c decprot_periph_attr
2fff09ec l     F ro	00000040 stm32mp_gpio_bank_is_non_secure.part.0
2fffe78c l     O .bss	00000001 registering_locked
2fffe78d l     O .bss	00000014 shres_state
2fffd1e8 l     O .data	00000001 gpioz_nbpin
2fffaa48 l     O ro	00000090 shres2decprot_tbl
2fffaad8 l     O ro	00000050 shres2str_id_tbl
00000000 l    df *ABS*	00000000 stm32mp1_topology.c
2fffab28 l     O ro	00000002 stm32mp1_power_domain_tree_desc
00000000 l    df *ABS*	00000000 gic_common.c
00000000 l    df *ABS*	00000000 gicv2_helpers.c
00000000 l    df *ABS*	00000000 gicv2_main.c
2fffe7a4 l     O .bss	00000004 driver_data
2fffe7a8 l     O .bss	00000004 gic_lock
00000000 l    df *ABS*	00000000 plat_gicv2.c
00000000 l    df *ABS*	00000000 stm32_gic.c
2fff155c l     F ro	00000004 fdt32_to_cpu
2fff1560 l     F ro	00000062 enable_gic_interrupt
2fffe7ac l     O .bss	00000008 stm32_gic
2fffd1ec l     O .data	00000018 platform_gic_data
2fffd204 l     O .data	00000008 target_mask_array
2fffabd8 l     O ro	0000002c stm32_interrupt_props
00000000 l    df *ABS*	00000000 plat_psci_common.c
00000000 l    df *ABS*	00000000 bsec_svc.c
00000000 l    df *ABS*	00000000 low_power_svc.c
00000000 l    df *ABS*	00000000 pwr_svc.c
00000000 l    df *ABS*	00000000 rcc_svc.c
00000000 l    df *ABS*	00000000 stm32mp1_svc_setup.c
2fff1a84 l     F ro	00000004 stm32mp1_svc_setup
2fff1a88 l     F ro	000000f0 stm32mp1_svc_smc_handler
2fffc724 l     O ro	00000010 __svc_desc_stm32mp1_sip_svc
00000000 l    df *ABS*	00000000 base.c
2fff1b78 l     F ro	0000008c discover_list_protocols
2fff1c04 l     F ro	00000024 discover_implementation_version
2fff1c28 l     F ro	00000044 report_message_attributes
2fff1c6c l     F ro	00000028 report_version
2fff1c94 l     F ro	0000002e report_attributes
2fff1cc4 l     F ro	00000054 discover_sub_vendor
2fff1d18 l     F ro	00000054 discover_vendor
2fffac7c l     O ro	0000001c scmi_base_handler_table
00000000 l    df *ABS*	00000000 clock.c
2fff1d90 l     F ro	0000000c confine_array_index
2fff1d9c l     F ro	00000044 report_message_attributes
2fff1de0 l     F ro	00000028 report_version
2fff1e08 l     F ro	00000030 write_rate_desc_array_in_buffer
2fff1e38 l     F ro	00000034 report_attributes
2fff1e6c l     F ro	000000fc scmi_clock_describe_rates
2fff1f68 l     F ro	00000060 scmi_clock_rate_get
2fff1fc8 l     F ro	0000004a scmi_clock_rate_set
2fff2014 l     F ro	00000090 scmi_clock_attributes
2fff20a4 l     F ro	0000004e scmi_clock_config_set
2fffacb4 l     O ro	00000020 scmi_clock_handler_table
00000000 l    df *ABS*	00000000 entry.c
00000000 l    df *ABS*	00000000 reset_domain.c
2fff21bc l     F ro	00000044 report_message_attributes
2fff2200 l     F ro	00000028 report_version
2fff2228 l     F ro	0000002e report_attributes
2fff2258 l     F ro	00000094 reset_domain_attributes
2fff22ec l     F ro	00000078 reset_request
2fffad48 l     O ro	00000014 scmi_rd_handler_table
00000000 l    df *ABS*	00000000 smt.c
2fff2388 l     F ro	000000b0 scmi_proccess_smt
2fffe7b4 l     O .bss	000000b8 fast_smc_payload
2fffe86c l     O .bss	00000004 smt_channels_lock
00000000 l    df *ABS*	00000000 stm32mp1_scmi.c
2fff2478 l     F ro	00000010 find_resource.part.0
2fff2488 l     F ro	00000034 find_clock
2fff24bc l     F ro	00000034 find_rd
2fffd20c l     O .data	00000020 scmi_channel
2fffd22c l     O .data	000000fc stm32_scmi0_clock
2fffd328 l     O .data	00000058 stm32_scmi0_reset_domain
2fffd380 l     O .data	00000024 stm32_scmi1_clock
2fffae98 l     O ro	00000020 agent_resources
2fffaeb8 l     O ro	00000003 plat_protocol_list
2fffaebb l     O ro	00000001 sub_vendor
2fffaebc l     O ro	00000003 vendor
00000000 l    df *ABS*	00000000 tf_log.c
2fffd3a4 l     O .data	00000004 max_log_level
00000000 l    df *ABS*	00000000 multi_console.c
00000000 l    df *ABS*	00000000 plat_log_common.c
2fffaf24 l     O ro	00000014 plat_prefix_str
00000000 l    df *ABS*	00000000 plat_common.c
00000000 l    df *ABS*	00000000 ctzdi2.c
00000000 l    df *ABS*	00000000 udivmoddi4.c
00000000 l    df *ABS*	00000000 stm32mp_common.c
2fffe870 l     O .bss	00000004 lock
00000000 l    df *ABS*	00000000 stm32mp1_private.c
2fff2e60 l     F ro	0000004c get_part_number
2fffe874 l     O .bss	00000004 part_number.7218
2fffaff0 l     O ro	00000078 stm32mp1_mmap
2fffb068 l     O ro	00000084 tzc_source_ip
00000000 l    df *ABS*	00000000 xlat_tables_arch.c
00000000 l    df *ABS*	00000000 xlat_tables_context.c
2fffe880 l     O .bss	00000020 tf_base_xlat_table
2fffe8a0 l     O .bss	00000010 tf_mapped_regions
2fffe8b0 l     O .bss	000000a8 tf_mmap
2fffd3b0 l     O .data	00000048 tf_xlat_ctx
00000000 l    df *ABS*	00000000 xlat_tables_core.c
2fff32e4 l     F ro	00000158 mmap_add_region_check
2fff343c l     F ro	0000001a xlat_clean_dcache_range
2fff3458 l     F ro	00000028 xlat_table_get_index
2fff3480 l     F ro	00000158 xlat_tables_unmap_region
2fff368c l     F ro	000001b4 xlat_tables_map_region
00000000 l    df *ABS*	00000000 xlat_tables_utils.c
00000000 l    df *ABS*	00000000 tzc400.c
2fffe958 l     O .bss	00000008 tzc400
00000000 l    df *ABS*	00000000 delay_timer.c
2fffe960 l     O .bss	00000004 timer_ops
00000000 l    df *ABS*	00000000 generic_delay_timer.c
2fff408c l     F ro	00000008 get_timer_value
2fffe964 l     O .bss	0000000c ops
00000000 l    df *ABS*	00000000 bsec2.c
2fff40f0 l     F ro	00000004 fdt32_to_cpu
2fff40f4 l     F ro	00000018 bsec_lock
2fff410c l     F ro	00000018 bsec_unlock
2fff4124 l     F ro	00000018 otp_bank_offset
2fff413c l     F ro	00000034 bsec_check_error
2fff4278 l     F ro	00000064 bsec_power_safmem
2fffe970 l     O .bss	00000004 bsec_base
2fffe974 l     O .bss	00000004 bsec_spinlock
2fffe978 l     O .bss	0000000c otp_nsec_access
00000000 l    df *ABS*	00000000 stm32mp_clkfunc.c
00000000 l    df *ABS*	00000000 stm32mp1_clk.c
2fff4984 l     F ro	0000001c clock_is_always_on
2fff49a0 l     F ro	000000b8 stm32mp1_read_pll_freq
2fff4a58 l     F ro	00000198 get_clock_rate
2fff4bf0 l     F ro	0000008c stm32mp1_pll_compute_pllxcfgr1
2fff4c7c l     F ro	00000024 stm32mp1_pll_start
2fff4ca0 l     F ro	00000016 stm32mp1_clk_lock
2fff4cb6 l     F ro	00000016 stm32mp1_clk_unlock
2fff4ccc l     F ro	00000080 stm32mp1_pll_stop
2fff4d4c l     F ro	00000022 __clk_enable
2fff4d6e l     F ro	00000024 __clk_disable
2fff4d94 l     F ro	00000034 stm32mp1_clk_get_gated_id
2fff4dc8 l     F ro	00000078 stm32mp1_clk_get_parent
2fff4e40 l     F ro	0000007c __stm32mp1_clk_enable
2fff4ebc l     F ro	00000078 __stm32mp1_clk_disable
2fff4f34 l     F ro	0000006c stm32mp1_set_clkdiv
2fff4fa0 l     F ro	00000080 stm32mp1_set_clksrc
2fff5020 l     F ro	00000088 stm32mp1_pll_output
2fff50a8 l     F ro	00000034 stm32mp1_pll_config_output
2fff50dc l     F ro	00000050 stm32mp1_pll_config
2fff512c l     F ro	00000158 stm32mp1_pll1_config_from_opp_khz
2fff5330 l     F ro	0000021c clk_get_pll1_settings.part.0
2fffe984 l     O .bss	00000004 current_opp_khz
2fffe988 l     O .bss	000000b8 gate_refcounts
2fffea40 l     O .bss	00000004 mcudivr
2fffea44 l     O .bss	00000004 mssckselr
2fffea48 l     O .bss	0000004c pll1_settings
2fffea94 l     O .bss	00000004 pll3cr
2fffea98 l     O .bss	00000004 pll4cr
2fffea9c l     O .bss	00000004 refcount_lock
2fffeaa0 l     O .bss	00000004 reg_lock
2fffeaa4 l     O .bss	00000018 stm32mp1_osc
2fffd3f8 l     O .data	00000038 backup_clock_cfg
2fffd430 l     O .data	00000058 backup_clock_sc_cfg
2fffd488 l     O .data	00000088 backup_mux0_cfg
2fffd510 l     O .data	00000004 backup_mux4_cfg
2fffb6e4 l     O ro	0000001a __func__.7239
2fffb6fe l     O ro	00000003 axiss_parents
2fffb701 l     O ro	00000004 fmc_parents
2fffb705 l     O ro	00000004 i2c12_parents
2fffb709 l     O ro	00000004 i2c35_parents
2fffb70d l     O ro	00000004 i2c46_parents
2fffb711 l     O ro	00000004 mcuss_parents
2fffb715 l     O ro	00000004 mpu_parents
2fffb719 l     O ro	00000022 parent_id_clock_id
2fffb73b l     O ro	00000003 per_parents
2fffb73e l     O ro	00000003 pllncfgr2
2fffb741 l     O ro	00000004 qspi_parents
2fffb745 l     O ro	00000004 rng1_parents
2fffb749 l     O ro	00000004 rtc_parents
2fffb74d l     O ro	00000004 sdmmc12_parents
2fffb751 l     O ro	00000004 sdmmc3_parents
2fffb755 l     O ro	00000006 spi6_parents
2fffb75b l     O ro	00000002 stgen_parents
2fffb75d l     O ro	00000008 stm32mp1_axi_div
2fffb766 l     O ro	00000170 stm32mp1_clk_gate
2fffb8d8 l     O ro	00000080 stm32mp1_clk_pll
2fffb958 l     O ro	00000108 stm32mp1_clk_sel
2fffba88 l     O ro	00000006 usart1_parents
2fffba83 l     O ro	00000005 uart6_parents
2fffba7e l     O ro	00000005 uart234578_parents
2fffba90 l     O ro	00000003 usbphy_parents
2fffba8e l     O ro	00000002 usbo_parents
2fffba60 l     O ro	00000010 stm32mp1_mcu_div
2fffba70 l     O ro	00000008 stm32mp1_mpu_apbx_div
2fffba78 l     O ro	00000006 stm32mp1_pll
00000000 l    df *ABS*	00000000 stm32mp1_ddr_helpers.c
2fff5cf0 l     F ro	00000014 do_sw_handshake
2fff5d04 l     F ro	0000005c do_sw_ack
2fffeabc l     O .bss	00000004 saved_ddr_sr_mode
2fffbaaf l     O ro	0000000a CSWTCH.26
00000000 l    df *ABS*	00000000 stm32_gpio.c
2fff63b0 l     F ro	00000004 fdt32_to_cpu
00000000 l    df *ABS*	00000000 stm32_i2c.c
2fff6718 l     F ro	0000002c i2c_transfer_config.isra.0
2fff6744 l     F ro	00000044 i2c_wait_flag
2fff6788 l     F ro	00000090 i2c_ack_failed
2fff6818 l     F ro	00000042 i2c_wait_txis
2fff685a l     F ro	00000042 i2c_wait_stop
2fff689c l     F ro	00000218 i2c_write
2fff6ab4 l     F ro	000001ec i2c_read.isra.0
2fffbce0 l     O ro	00000060 i2c_specs
00000000 l    df *ABS*	00000000 stm32_iwdg.c
2fffeac0 l     O .bss	00000020 stm32_iwdg
00000000 l    df *ABS*	00000000 stm32mp_pmic.c
2fff755c l     F ro	00000004 fdt32_to_cpu
2fff7560 l     F ro	00000020 dt_get_pmic_node
2fff7580 l     F ro	00000060 dt_pmic_get_regulator_voltage
2fff75e0 l     F ro	00000244 pmic_operate
2fffeae0 l     O .bss	00000024 i2c_handle
2fffeb04 l     O .bss	00000004 pmic_i2c_addr
2fffd52c l     O .data	00000004 i2c_node.6738
2fffd530 l     O .data	00000004 node.6677
2fffd534 l     O .data	00000004 status.6681
00000000 l    df *ABS*	00000000 stpmic1.c
2fff7a18 l     F ro	0000003c get_regulator_data
2fff7a54 l     F ro	0000002a voltage_to_index
2fffeb08 l     O .bss	00000002 pmic_i2c_addr
2fffeb0c l     O .bss	00000004 pmic_i2c_handle
2fffbfac l     O ro	00000080 buck1_voltage_table
2fffc02c l     O ro	0000004a buck2_voltage_table
2fffc076 l     O ro	00000070 buck3_voltage_table
2fffc0e6 l     O ro	0000007a buck4_voltage_table
2fffc160 l     O ro	00000002 fixed_5v_voltage_table
2fffc162 l     O ro	00000032 ldo1_voltage_table
2fffc194 l     O ro	00000032 ldo2_voltage_table
2fffc1c6 l     O ro	00000042 ldo3_voltage_table
2fffc208 l     O ro	00000002 ldo4_voltage_table
2fffc20a l     O ro	0000003e ldo5_voltage_table
2fffc248 l     O ro	00000032 ldo6_voltage_table
2fffc27c l     O ro	000000e0 regulators_table
2fffc35c l     O ro	00000002 vref_ddr_voltage_table
00000000 l    df *ABS*	00000000 stm32mp1_reset.c
00000000 l    df *ABS*	00000000 stm32mp_dt.c
2fff7e38 l     F ro	00000004 fdt32_to_cpu
2fff7e3c l     F ro	00000024 fdt_get_node_parent_address_cells
2fff7e60 l     F ro	0000007c dt_get_stdout_node_offset
2fff7edc l     F ro	000000cc dt_get_opp_freqvolt_from_subnode
2fffeb10 l     O .bss	00000004 fdt_checked
00000000 l    df *ABS*	00000000 stm32mp_shres_helpers.c
2fffeb14 l     O .bss	00000004 shregs_lock
00000000 l    df *ABS*	00000000 stm32mp1_context.c
00000000 l    df *ABS*	00000000 stm32mp1_dbgmcu.c
2fff8698 l     F ro	0000002c stm32mp1_dbgmcu_init
00000000 l    df *ABS*	00000000 stm32mp1_security.c
00000000 l    df *ABS*	00000000 stm32mp1_syscfg.c
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/cpu_data.o
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/cpu_helpers.o
00000004 l       *ABS*	00000000 CPU_MIDR_SIZE
00000004 l       *ABS*	00000000 CPU_RESET_FUNC_SIZE
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_FUNC_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_LOCK_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_PRINTED_SIZE
00000000 l       *ABS*	00000000 CPU_MIDR
00000004 l       *ABS*	00000000 CPU_RESET_FUNC
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS
00000010 l       *ABS*	00000000 CPU_ERRATA_FUNC
00000014 l       *ABS*	00000000 CPU_ERRATA_LOCK
00000018 l       *ABS*	00000000 CPU_ERRATA_PRINTED
0000001c l       *ABS*	00000000 CPU_OPS_SIZE
2fff88fc l       ro	00000000 error_exit
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/spinlock.o
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/psci_helpers.o
2fff89c4 l     F ro	0000003c do_stack_maintenance
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/platform_mp_stack.o
2fffd540 l       stacks	00000000 platform_normal_stacks
00000006 l       *ABS*	00000000 TZ_COUNT
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/debug.o
2fffc589 l       ro	00000000 panic_msg
2fffc59a l       ro	00000000 panic_end
2fffc59d l       ro	00000000 assert_msg1
2fffc5ab l       ro	00000000 assert_msg2
2fff8afc l       ro	00000000 dec_print_loop
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/cache_helpers.o
2fff8bbc l       ro	00000000 exit_loop_cimvac
2fff8ba8 l       ro	00000000 loop_cimvac
2fff8bf8 l       ro	00000000 exit_loop_cmvac
2fff8be4 l       ro	00000000 loop_cmvac
2fff8c34 l       ro	00000000 exit_loop_imvac
2fff8c20 l       ro	00000000 loop_imvac
2fff8c38 l     F ro	0000009c do_dcsw_op
2fff8cbc l       ro	00000000 dcsw_loop_table
2fff8c44 l       ro	00000000 loop1
2fff8c98 l       ro	00000000 level_done
2fff8c78 l       ro	00000000 loop2
2fff8c7c l       ro	00000000 loop3
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/misc_helpers.o
2fff8d60 l       ro	00000000 do_disable_mmu
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/platform_helpers.o
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/stm32_console.o
2fff8dbc l       ro	00000000 core_init_fail
2fff8e10 l       ro	00000000 register_fail
2fff8e5c l       ro	00000000 putc_error
2fff8e28 l       ro	00000000 txe_loop
2fff8e44 l       ro	00000000 tc_loop
2fff8eac l       ro	00000000 flush_error
2fff8e90 l       ro	00000000 txe_loop_3
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/enable_mmu.o
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/cortex_a7.o
00000004 l       *ABS*	00000000 CPU_MIDR_SIZE
00000004 l       *ABS*	00000000 CPU_RESET_FUNC_SIZE
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_FUNC_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_LOCK_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_PRINTED_SIZE
00000000 l       *ABS*	00000000 CPU_MIDR
00000004 l       *ABS*	00000000 CPU_RESET_FUNC
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS
00000010 l       *ABS*	00000000 CPU_ERRATA_FUNC
00000014 l       *ABS*	00000000 CPU_ERRATA_LOCK
00000018 l       *ABS*	00000000 CPU_ERRATA_PRINTED
0000001c l       *ABS*	00000000 CPU_OPS_SIZE
2fff8f54 l     F ro	00000018 cortex_a7_disable_smp
2fff8f6c l     F ro	00000014 cortex_a7_enable_smp
2fff8f80 l     F ro	00000004 cortex_a7_reset_func
2fff8f84 l     F ro	0000002c cortex_a7_core_pwr_dwn
2fff8fb4 l     F ro	00000030 cortex_a7_cluster_pwr_dwn
2fff8fe8 l     F ro	00000004 cortex_a7_errata_report
2fffd538 l       .data	00000000 cortex_a7_errata_lock
2fffd53c l       .data	00000000 cortex_a7_errata_reported
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl32/stm32mp1_helper.o
2fff9004 l       ro	00000000 undef_inst_lbl
2fffc61f l       ro	00000000 abort_str
2fff9034 l       ro	00000000 print_excpetion_info
2fff9018 l       ro	00000000 other_excpetion_lbl
2fffc657 l       ro	00000000 undefined_str
2fffc675 l       ro	00000000 exception_start_str
2fffc688 l       ro	00000000 exception_end_str
2fffc6bc l       ro	00000000 end_error_str
2fffc62d l       ro	00000000 prefetch_abort_str
2fffc6a6 l       ro	00000000 ifsr_str
2fffc6b1 l       ro	00000000 ifar_str
2fffc644 l       ro	00000000 data_abort_str
2fffc690 l       ro	00000000 dfsr_str
2fffc69b l       ro	00000000 dfar_str
2fff9144 l     F ro	00000010 plat_stm32mp1_get_core_pos
00000000 l    df *ABS*	00000000 fdt.c
2fff9278 l     F ro	00000004 fdt32_to_cpu
00000000 l    df *ABS*	00000000 fdt_addresses.c
00000000 l    df *ABS*	00000000 fdt_ro.c
2fff9528 l     F ro	00000004 fdt32_to_cpu
2fff952c l     F ro	00000032 nextprop_
2fff955e l     F ro	00000036 fdt_get_property_by_offset_
2fff96d0 l     F ro	00000078 fdt_get_property_namelen_
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
2fff9b62 l     F ro	00000080 unsigned_num_print
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strnlen.c
00000000 l    df *ABS*	00000000 strrchr.c
00000000 l    df *ABS*	00000000 
00000000 l    df *ABS*	00000000 cpu_data_array.c
2fffc780 l     F ro	00000008 __console_register_from_arm
2fffc788 l     F ro	00000008 __flush_dcache_range_from_thumb
2fffc790 l     F ro	00000008 __print_errata_status_from_thumb
2fffc798 l     F ro	00000008 __spin_unlock_from_thumb
2fffc7a0 l     F ro	00000008 __enable_mmu_direct_svc_mon_from_thumb
2fffc7a8 l     F ro	00000008 __clean_dcache_range_from_thumb
2fffc7b0 l     F ro	00000008 __spin_lock_from_thumb
2fffc7b8 l     F ro	00000008 __psci_do_pwrdown_cache_maintenance_from_thumb
2fff493c g     F ro	00000048 stm32mp_stgen_restore_counter
2fff9d9e g     F ro	00000016 putchar
2fff5d84 g     F ro	000001f4 ddr_sw_self_refresh_exit
2ffed8f8 g     F ro	000000b4 cm_prepare_el3_exit
2fff29b0 g     F ro	0000001c console_set_scope
2fff7b9c g     F ro	00000026 stpmic1_lp_copy_reg
2fff94e0 g     F ro	00000048 fdt_address_cells
2fff4058 g     F ro	0000000a mdelay
2fff2c80 g     F ro	00000018 stm32mp_pwr_regs_lock
2fff92d4 g     F ro	0000003c fdt_offset_ptr
2fff716c g     F ro	00000012 stm32_i2c_mem_read
2fff009c g     F ro	000000a4 sp_min_platform_setup
2fff842a g     F ro	0000001a stm32mp_mmio_clrbits_32_shregs
2fff4728 g     F ro	00000034 bsec_check_nsec_access_rights
2fff57ec g     F ro	00000020 stm32mp1_clk_lp_load_opp_pll1_settings
2ffee592 g     F ro	00000018 psci_migrate_info_up_cpu
2fff2744 g     F ro	000000a8 stm32mp1_init_scmi_server
2fffd514 g     O .data	00000018 stm32mp_osc_node_label
2fff2964 g     F ro	00000040 console_register
2fff0f08 g     F ro	0000000c gicd_set_icenabler
2ffee3a0 g     F ro	000000c4 psci_cpu_suspend
2fff8810 g     F ro	00000034 reset_handler
2ffed2e0 g     F ro	000000d0 sp_min_warm_entrypoint
2fff2438 g     F ro	00000020 scmi_smt_fastcall_smc_entry
2fff8cf8 g     F ro	00000064 zeromem
2fff5318 g     F ro	00000016 stm32mp_clk_get_rate
2fff9e9e g     O ro	00000021 version_string
2ffed444 g     F ro	00000024 smc_get_ctx
2fffc750 g       ro	00000000 __pubsub_psci_suspend_pwrdown_finish_end
2fff438c g     F ro	00000038 bsec_read_sr_lock
2ffee164 g     F ro	00000094 psci_validate_entry_point
2fff0adc g     F ro	00000018 stm32mp_gpio_bank_is_non_secure
2fff3930 g     F ro	00000018 mmap_add_ctx
2fff262e g     F ro	00000044 plat_scmi_clock_set_state
2ffed47c g     F ro	00000024 cm_get_context
2fff9d84 g     F ro	0000001a printf
2fff3948 g     F ro	00000168 mmap_add_dynamic_region_ctx
2fffec88 g     O .bss	00000018 mmu_cfg_params
2fff3d12 g     F ro	00000002 xlat_tables_print
2ffee124 g     F ro	0000002c psci_release_pwr_domain_locks
2ffede04 g     F ro	00000030 psci_validate_power_state
2fff0e44 g     F ro	00000022 plat_core_pos_by_mpidr
2fff55e8 g     F ro	00000038 stm32mp1_round_opp_khz
2fffd000 g       ro	00000000 __RW_START__
2fff303c g     F ro	00000010 stm32mp_etzpc_binding2decprot
2ffef824 g     F ro	00000020 stm32_rtc_is_timestamp_enable
2ffed468 g     F ro	00000014 smc_get_next_ctx
2fff455c g     F ro	00000038 bsec_read_sw_lock
2fff10ec g     F ro	0000002c gicv2_cpuif_enable
2fff26b0 g     F ro	00000018 plat_scmi_rd_count
2ffedd78 g     F ro	0000008c psci_cpu_suspend_finish
2fff72c8 g     F ro	00000040 stm32_iwdg_refresh
2fff87e8 g     F ro	00000010 _cpu_data
2fff9748 g     F ro	0000003e fdt_getprop_namelen
2fff7cc8 g     F ro	0000001a stpmic1_lp_set_mode
2fff2d28 g     F ro	0000001c configure_mmu
2fff24f0 g     F ro	00000020 plat_scmi_get_channel
2fff96a0 g     F ro	00000018 fdt_first_property_offset
2fff323c g     F ro	00000028 mmap_add_dynamic_region
2fff81e0 g     F ro	00000028 dt_get_node_by_compatible
2fff8ab8 g     F ro	0000006c asm_assert
2fff8ce8 g     F ro	00000010 dcsw_op_level1
2fff4594 g     F ro	00000044 bsec_write_otp
2fff8a4c g     F ro	00000034 do_panic
2fff1154 g     F ro	00000044 gicv2_distif_init
2fff8aa8 g     F ro	00000010 report_data_abort
2fff994a g     F ro	00000020 fdt_parent_offset
2fff9b26 g     F ro	0000002c memmove
2fffeb18 g     O .bss	00000080 rt_svc_descs_indices
2ffed5d8 g     F ro	00000084 sp_min_warm_boot
2fff0e86 g     F ro	0000000c gicd_write_isenabler
2fff05bc g     F ro	00000014 plat_setup_psci_ops
2fff315c g     F ro	000000ac setup_mmu_cfg
2fff8a00 g     F ro	00000010 psci_power_down_wfi
2fff1554  w    F ro	00000004 plat_ic_set_interrupt_priority
2ffef17c g     F ro	00000030 etzpc_lock_decprot
2ffed65c g     F ro	00000016 sp_min_fiq
2fff3ab0 g     F ro	0000010c mmap_remove_dynamic_region_ctx
2fff64b4 g     F ro	00000204 dt_set_pinctrl_config
2fff3eb8 g     F ro	0000004c tzc400_disable_filters
2fff8994 g     F ro	00000030 psci_do_pwrup_cache_maintenance
2ffee4ec g     F ro	0000002a psci_affinity_info
2fff98aa g     F ro	0000001a fdt_path_offset
2fff2a64  w    F ro	00000024 plat_log_get_prefix
2ffee518 g     F ro	0000006c psci_migrate
2fff7a80 g     F ro	00000028 stpmic1_register_read
2fff8fec g     F ro	00000060 plat_report_exception
2fff05d0 g     F ro	000000dc stm32mp1_init_lp_states
2fff9060 g     F ro	00000028 plat_report_undef_inst
2ffef9d0 g     F ro	000000dc stm32_tamp_it_handler
2ffef108 g     F ro	00000040 etzpc_configure_decprot
2fff06c0 g     F ro	00000058 stm32mp1_get_lp_soc_mode
2fff9e80 g     O ro	0000001e build_message
2fff5b4c g     F ro	0000004c stm32mp1_clock_stopmode_save
2fff2458 g     F ro	00000020 scmi_smt_init_agent_channel
2ffee7a0 g     F ro	0000022c psci_setup
2fff47fc g     F ro	0000000c fdt_get_rcc_node
2fff3274 g     F ro	0000003c init_xlat_tables
2fff63b4 g     F ro	00000100 set_gpio
2fffd000 g       .data	00000000 __DATA_START__
2fff5588 g     F ro	0000005e stm32mp1_rtc_get_read_twice
2fff2560 g     F ro	00000006 plat_scmi_clock_rates_array
2fff14e8 g     F ro	00000038 gicv2_set_pmr
2ffef878 g     F ro	00000058 stm32_tamp_configure_internal
2fff2da0 g     F ro	00000020 stm32_get_gpio_bank_clock
2fffecc0 g     O .bss	00000004 psci_locks
2fff4260 g     F ro	0000000c bsec_read_debug_conf
2fff8dc4 g     F ro	00000050 console_stm32_register
2fff25aa g     F ro	00000048 plat_scmi_clock_set_rate
2fff8d84  w    F ro	00000004 plat_disable_acp
2fff52cc g     F ro	00000006 stm32mp1_clk_force_enable
2fff0bc4 g     F ro	000000b8 stm32mp_nsec_can_access_reset
2fff270e g     F ro	00000036 plat_scmi_rd_set_state
2ffee08c g     F ro	00000014 psci_find_target_suspend_lvl
2fff3078 g     F ro	00000028 xlat_arch_regime_get_xn_desc
2fff78dc g     F ro	00000108 initialize_pmic_i2c
2fff0efc g     F ro	0000000c gicd_set_isenabler
2fff52b4 g     F ro	0000000c stm32mp1_clk_rcc_regs_unlock
2ffee788 g     F ro	00000016 psci_arch_setup
2fff9a80 g     F ro	00000040 fdt_node_offset_by_compatible
2fff82c0 g     F ro	00000050 dt_get_cpu_regulator_name
2fff27ec g     F ro	00000078 stm32mp1_pm_save_scmi_state
2ffeea28 g     F ro	00000038 psci_system_reset
2fff0f52 g     F ro	00000050 gicv2_spis_configure_defaults
2fff43c4 g     F ro	0000007c bsec_shadow_register
2ffef3a4 g     F ro	0000009c stm32_rng_init
2fff0f14 g     F ro	0000000a gicd_set_ipriorityr
2fff9b10 g     F ro	00000016 memcpy
2ffee150 g     F ro	00000012 psci_validate_mpidr
2ffee464 g     F ro	0000006c psci_system_suspend
2ffed8c8 g     F ro	00000018 cm_init_context_by_index
2fff3f40 g     F ro	000000bc tzc400_it_handler
2ffef040 g     F ro	000000c8 stm32mp1_calib_init
2fff2c58 g     F ro	00000008 stm32mp_ddrphyc_base
2fff8cf8 g     F ro	00000064 zero_normalmem
2ffedf08 g     F ro	0000002c psci_get_parent_pwr_domain_nodes
2fff8d88 g     F ro	00000024 __aeabi_uldivmod
2fff5940 g     F ro	00000050 save_clock_pm_context
2fff79e4 g     F ro	00000034 initialize_pmic
2fff1908 g     F ro	00000094 pwr_scv_handler
2fff8634 g     F ro	00000064 stm32_save_ddr_training_area
2fff7d40 g     F ro	00000014 stpmic1_bind_i2c
2ffee9f0 g     F ro	00000038 psci_system_off
2fff48bc g     F ro	00000070 fdt_get_clock_id_by_name
2fff8a98 g     F ro	00000010 report_prefetch_abort
2fff4440 g     F ro	0000011c bsec_probe
2fff4240 g     F ro	00000020 bsec_read_otp
2fff0e92 g     F ro	0000000c gicd_write_icenabler
2fff15c2 g     F ro	00000016 stm32_gic_pcpu_init
2ffef024 g     F ro	0000001c stm32mp1_calib_start_csi_cal
2fff3230 g     F ro	0000000c mmap_add
2fff7bc2 g     F ro	0000002e stpmic1_register_update
2fff2c60 g     F ro	00000008 stm32mp_pwr_base
2fff2c4a g     F ro	00000006 plat_get_syscnt_freq2
2fff2cd8 g     F ro	00000020 stm32_get_gpio_bank_offset
2fff9220 g     F ro	00000014 plat_panic_handler
2fff874c g     F ro	00000068 stm32mp1_syscfg_enable_io_compensation
2fffc714 g       ro	00000000 __RT_SVC_DESCS_START__
2fff83f4 g     F ro	00000018 stm32mp_unlock_shregs
2fff9602 g     F ro	00000080 fdt_subnode_offset_namelen
2fff61b0 g     F ro	00000018 ddr_read_sr_mode
2fffe140 g       stacks	00000000 __STACKS_END__
2fffc750 g       ro	00000000 __pubsub_psci_suspend_pwrdown_start_end
2fff992c g     F ro	0000001e fdt_node_depth
2fffed00 g       .bss	00000000 __PERCPU_BAKERY_LOCK_END__
2fff2fc4 g     F ro	00000028 stm32_iwdg_get_instance
2fff2aac g     F ro	0000019e __udivmoddi4
2fff8bc0 g     F ro	0000003c clean_dcache_range
2ffefe44 g     F ro	000000d0 sp_min_plat_fiq_handler
2fff8848 g     F ro	00000040 prepare_cpu_pwr_dwn
2ffed7a8  w    F ro	00000006 sp_min_plat_runtime_setup
2fff8114 g     F ro	00000088 dt_fill_device_info
2fff52c0 g     F ro	00000006 stm32mp_clk_enable
2ffee1f8 g     F ro	00000098 psci_warmboot_entrypoint
2ffef148 g     F ro	00000034 etzpc_get_decprot
2fff7d54 g     F ro	00000070 stm32mp_reset_assert_to
2fff90e8 g     F ro	00000048 plat_report_data_abort
2fff8a2c  w    F ro	0000001c plat_set_my_stack
2ffed4c0 g     F ro	00000020 cm_set_context_by_index
2fffc734 g       ro	00000000 __RT_SVC_DESCS_END__
2fff4610 g     F ro	00000038 bsec_read_permanent_lock
2fff93d8 g     F ro	00000024 fdt_check_node_offset_
2fff2864 g     F ro	00000078 stm32mp1_pm_restore_scmi_state
2fff2364 g     F ro	00000024 scmi_msg_get_rd_handler
2fff8b50 g     F ro	00000034 asm_print_hex
2fff252c g     F ro	00000018 plat_scmi_clock_count
2ffee9cc g     F ro	00000024 psci_prepare_next_non_secure_ctx
2fffec40 g     O .bss	00000018 psci_cpu_pd_nodes
00000c00 g       *ABS*	00000000 __BSS_SIZE__
2fff437c g     F ro	00000010 bsec_get_id
2fff8b34 g     F ro	0000001c asm_print_str
2fff8040 g     F ro	0000005c fdt_get_interrupt
2fff9208 g     F ro	00000008 plat_crash_console_flush
2fff2c50 g     F ro	00000008 stm32mp_ddrctrl_base
2fff9e52 g     F ro	00000014 strnlen
2ffee290 g     F ro	0000002c psci_spd_migrate_info
2fff1a38 g     F ro	0000004c rcc_opp_scv_handler
2fff840c g     F ro	0000001e stm32mp_mmio_clrsetbits_32_shregs
2fff9786 g     F ro	00000022 fdt_getprop
2fff87f8 g     F ro	00000014 _cpu_data_by_index
2ffed160 g     F ro	000000cc sp_min_handle_smc
2fff5c34 g     F ro	000000bc stm32mp1_clk_probe
2fff1668 g     F ro	00000138 stm32_gic_enable_spi
2ffee2bc g     F ro	000000b0 psci_print_power_domain_map
2fffc7c0 g       ro	00000000 __RO_END_UNALIGNED__
2fff17a0 g     F ro	00000024 plat_get_target_pwr_state
2fff475c g     F ro	000000a0 fdt_osc_read_freq
2fff29cc g     F ro	00000058 console_putc
2fff5b98 g     F ro	00000098 stm32mp1_clock_stopmode_resume
2fff0a38 g     F ro	00000006 stm32mp_register_non_secure_periph_iomem
2fff0eaa g     F ro	0000000c gicd_write_icfgr
2fff9e66 g     F ro	0000001a strrchr
2ffede54 g     F ro	00000050 psci_is_last_on_cpu
2fff0188 g     F ro	00000098 stm32_exit_cstop
2fff915c g     F ro	00000090 plat_crash_console_init
2fff8b84 g     F ro	0000003c flush_dcache_range
2fff2524 g     F ro	00000008 plat_scmi_protocol_list
2fff15d8 g     F ro	00000090 stm32_gic_init
2fff7180 g     F ro	00000148 stm32_i2c_is_device_ready
2fff2eac g     F ro	00000040 stm32mp_supports_cpu_opp
2fff4064 g     F ro	00000028 timer_init
2fff99ac g     F ro	00000046 fdt_stringlist_contains
2fff7c04 g     F ro	00000014 stpmic1_regulator_enable
2fff2d44 g     F ro	0000001a stm32mp_mask_timer
2fff436c g     F ro	00000010 bsec_get_version
2fff1038 g     F ro	000000b4 gicv2_secure_ppi_sgi_setup_props
2fffc760 g       ro	00000000 sp_min_vector_table
2fff3054 g     F ro	00000006 xlat_get_min_virt_addr_space_size
2fff5620 g     F ro	00000070 stm32mp1_set_opp_khz
2fff1d6c g     F ro	00000024 scmi_msg_get_base_handler
2ffef5ac g     F ro	000001c4 stm32_rtc_diff_calendar
2fff127c g     F ro	00000068 gicv2_set_pe_target_mask
2fff7ad0 g     F ro	00000074 stpmic1_regulator_voltage_get
2fff9be4 g     F ro	000001a0 vprintf
2fff0f4a g     F ro	00000008 gicv2_get_cpuif_id
2fff80c4 g     F ro	00000050 fdt_read_uint32_array
2fff25f2 g     F ro	00000020 plat_scmi_clock_get_rate
2fff305a g     F ro	0000001c is_dcache_enabled
2ffedbbc g     F ro	0000009c psci_cpu_on_finish
2fff8cd4 g     F ro	00000014 dcsw_op_all
2ffee4d0 g     F ro	0000001c psci_cpu_off
2fff9140 g     F ro	00000004 plat_reset_handler
2fff52d8 g     F ro	00000040 stm32mp_clk_is_enabled
2fff4808 g     F ro	0000001e fdt_rcc_read_uint32_default
2fff9682 g     F ro	0000001e fdt_subnode_offset
2ffef1d0 g     F ro	000000f4 etzpc_init
2fff4856 g     F ro	0000001c fdt_rcc_enable_it
2fff88c8 g     F ro	00000038 get_cpu_ops_ptr
2ffefcac g     F ro	00000034 stm32_timer_csi_freq
2fff847a g     F ro	00000038 stm32mp1_pm_save_clock_cfg
2ffed4a0 g     F ro	00000020 cm_get_context_by_index
2ffed8e0 g     F ro	00000018 cm_init_my_context
2fff83dc g     F ro	00000018 stm32mp_lock_shregs
2fff1558 g     F ro	00000004 plat_ic_set_priority_mask
2fff9ad8 g     F ro	0000001c memchr
2fff1548  w    F ro	00000004 plat_ic_acknowledge_interrupt
2fff26c8 g     F ro	00000046 plat_scmi_rd_autonomous
2fff9234 g     F ro	00000044 wfi_svc_int_enable
2ffeff78 g     F ro	00000124 sp_min_early_platform_setup2
2fff30e0 g     F ro	0000003c xlat_arch_current_el
2fff4170 g     F ro	000000d0 bsec_find_otp_name_in_dt
2fff1520 g     F ro	00000014 gicv2_interrupt_set_cfg
2fff98c4 g     F ro	00000068 fdt_supernode_atdepth_offset
2fff2f18 g     F ro	000000ac stm32mp_plat_reset
2fff809c g     F ro	00000028 fdt_read_uint32_default
00000040 g       *ABS*	00000000 __PERCPU_BAKERY_LOCK_SIZE__
2fff20f4 g     F ro	00000020 scmi_msg_get_clock_handler
2fff0a78 g     F ro	00000064 stm32mp1_register_etzpc_decprot
2fff0e70 g     F ro	0000000c gicd_read_icfgr
2fff94b4 g     F ro	0000002a fdt_next_subnode
2ffed9d8 g     F ro	000000b8 psci_do_cpu_off
2fff2de8 g     F ro	00000030 stm32_get_otp_value_from_idx
2fffec80 g     O .bss	00000004 psci_caps
2fff2510 g     F ro	00000008 plat_scmi_vendor_name
2fff5990 g     F ro	00000050 restore_clock_pm_context
2ffed850 g     F ro	00000078 cm_setup_context
2ffef770 g     F ro	0000006c stm32_rtc_get_timestamp
2fff9de2 g     F ro	00000038 strlcpy
2fff9e2a g     F ro	00000028 strncmp
2fff2a88  w    F ro	00000004 bl32_plat_enable_mmu
2fff2144 g     F ro	0000002c scmi_write_response
2fffed40 g       .bss	00000000 __BL32_END__
2fff8568 g     F ro	00000084 stm32_restore_context
2fffd540 g       .data	00000000 __DATA_END__
2ffefd10 g     F ro	00000034 stm32_timer_freq_func
2fff8a88 g     F ro	00000010 report_undef_inst
2ffeef70 g     F ro	0000000c stm32mp1_calib_set_wakeup
2fff822c g     F ro	00000094 dt_get_all_opp_freqvolt
2fff0140 g     F ro	00000002 sp_min_plat_arch_setup
2fffc734 g       ro	00000000 __CPU_OPS_START__
2fff2544 g     F ro	0000001c plat_scmi_clock_get_name
2fff3ffc g     F ro	0000005c udelay
2fff8310 g     F ro	00000030 fdt_get_gpio_bank_pinctrl_node
2fff81c0 g     F ro	0000001e dt_get_stdout_uart_info
2fff5c30 g     F ro	00000002 stm32mp1_dump_clocks_state
2fff93fc g     F ro	00000024 fdt_check_prop_offset_
2fff4826 g     F ro	00000030 fdt_rcc_read_prop
2fff8bfc g     F ro	0000003c inv_dcache_range
2fffd3a8 g     O .data	00000001 console_state
2fff8e1c g     F ro	00000048 console_stm32_core_putc
2ffed000 g     F ro	00000134 sp_min_entrypoint
2ffee654 g     F ro	00000134 psci_smc_handler
2fff8e84 g     F ro	00000030 console_stm32_core_flush
2fff40ac g     F ro	00000044 generic_delay_timer_init
2ffedc58 g     F ro	00000120 psci_cpu_suspend_start
2fff0a40 g     F ro	00000028 stm32mp_register_secure_gpio
2fff426c g     F ro	0000000c bsec_get_status
2ffedea4 g     F ro	00000010 psci_init_req_local_pwr_states
2fff4094 g     F ro	00000018 generic_delay_timer_init_args
2fffed40 g       .bss	00000000 __BAKERY_LOCK_END__
2fff2674 g     F ro	0000003c plat_scmi_rd_get_name
2fff9af4 g     F ro	0000001c memcmp
2fff2c68 g     F ro	00000006 stm32mp_rcc_base
2ffeda90 g     F ro	0000012c psci_cpu_on_start
2fff7308 g     F ro	0000005c stm32_iwdg_it_handler
2ffee074 g     F ro	00000018 psci_find_max_off_lvl
2fff2d5e g     F ro	00000042 stm32mp_wait_cpu_reset
2fff35d8 g     F ro	000000b4 xlat_desc
2fff9818 g     F ro	00000092 fdt_path_offset_namelen
2fff96b8 g     F ro	00000018 fdt_next_property_offset
2fff86c4 g     F ro	00000030 stm32mp1_dbgmcu_get_chip_dev_id
2fff0f1e g     F ro	0000002c gicd_set_icfgr
2fffec58 g     O .bss	00000020 psci_non_cpu_pd_nodes
2fff819c g     F ro	00000024 dt_get_node
2ffef008 g     F ro	0000001c stm32mp1_calib_start_hsi_cal
2fffed40 g       .bss	00000000 __BSS_END__
2fffc750 g       ro	00000000 __CPU_OPS_END__
2fff52d2 g     F ro	00000006 stm32mp1_clk_force_disable
2fff2612 g     F ro	0000001c plat_scmi_clock_get_state
2fff1550  w    F ro	00000004 plat_ic_disable_interrupt
2ffee36c g     F ro	00000004 psci_do_pwrdown_sequence
2fff3e50 g     F ro	00000068 tzc400_enable_filters
2ffef7dc g     F ro	00000048 stm32_rtc_set_tamper_timestamp
2fff897c g     F ro	00000018 psci_do_pwrdown_cache_maintenance
2fff996a g     F ro	00000042 fdt_node_offset_by_phandle
2fff2a8c g     F ro	00000020 __ctzdi2
2fff4874 g     F ro	00000048 fdt_get_clock_id
2fff3d94 g     F ro	000000bc tzc400_configure_region
2ffee370 g     F ro	0000002e psci_cpu_on
2fff0258 g     F ro	00000198 stm32_enter_low_power
2fff85ec g     F ro	0000001c stm32_get_stgen_from_context
2fff7fa8 g     F ro	0000001c dt_open_and_check
2fff0eb6 g     F ro	00000022 gicd_set_igroupr
2fff8d78 g     F ro	00000008 disable_mmu_icache_secure
2ffee0a0 g     F ro	00000052 psci_validate_suspend_req
2ffef554 g     F ro	00000018 stm32_rtc_regs_unlock
2ffee5f4 g     F ro	00000060 psci_features
2fff9b52 g     F ro	00000010 memset
2ffefaac g     F ro	00000108 stm32_tamp_init
2fffecc0 g       .bss	00000000 __BAKERY_LOCK_START__
2ffedeb4 g     F ro	00000054 psci_get_target_local_pwr_states
2fff11fc g     F ro	00000038 gicv2_get_pending_interrupt_id
2fff2cf8 g     F ro	0000002e stm32mp_get_cpu_supply_name
2ffef53c g     F ro	00000018 stm32_rtc_regs_lock
2fff87b4 g     F ro	00000034 stm32mp1_syscfg_disable_io_compensation
2fff8e64 g     F ro	0000001c console_stm32_putc
2fff63a4 g     F ro	0000000c ddr_restore_sr_mode
2fffec78 g     O .bss	00000004 psci_plat_pm_ops
2fff2566 g     F ro	00000044 plat_scmi_clock_rates_by_step
2fff304c g     F ro	00000008 xlat_arch_get_max_supported_pa
2fff2114 g     F ro	00000030 scmi_status_response
2fff32b0 g     F ro	00000034 enable_mmu_svc_mon
2fffc750 g       ro	00000000 __pubsub_psci_suspend_pwrdown_start_start
2fff61c8 g     F ro	000001cc ddr_set_sr_mode
2fff154c  w    F ro	00000004 plat_ic_end_of_interrupt
2ffef8d0 g     F ro	00000100 stm32_tamp_configure_external
2fff97a8 g     F ro	00000044 fdt_get_phandle
2fff0144 g     F ro	00000044 stm32_apply_pmic_suspend_config
2ffed4e0 g     F ro	00000020 get_arm_std_svc_args
2fff9dca g     F ro	00000018 strcmp
2fff7364 g     F ro	000001f8 stm32_iwdg_init
2ffeeb50 g     F ro	00000100 bakery_lock_get
2fff42dc g     F ro	00000090 bsec_permanent_lock_otp
2fff3d14 g     F ro	00000024 tzc400_set_action
2fff7c18 g     F ro	0000005c stpmic1_regulator_voltage_set
2ffeead0 g     F ro	0000004c psci_mem_protect
2fff7bf0 g     F ro	0000000a stpmic1_powerctrl_on
2ffef56c g     F ro	00000040 stm32_rtc_get_calendar
2ffeec50 g     F ro	00000058 bakery_lock_release
2ffeff14 g     F ro	00000064 sp_min_plat_get_bl33_ep_info
2fff8dac g     F ro	00000018 console_stm32_core_init
2fff8d5c g     F ro	0000001c disable_mmu_secure
2fff0e3c g     F ro	00000008 plat_get_power_domain_tree_desc
2fff1364 g     F ro	00000040 gicv2_set_interrupt_priority
2fff6ca0 g     F ro	00000060 stm32_i2c_get_setup_from_fdt
2fff0fa4 g     F ro	00000094 gicv2_secure_spis_configure_props
2fff0e9e g     F ro	0000000c gicd_write_ipriorityr
2fff0c7c g     F ro	000001c0 stm32mp_lock_periph_registering
2fff7b44 g     F ro	00000058 stpmic1_register_write
2fff7aa8 g     F ro	00000028 stpmic1_is_regulator_enabled
2fff8eb4 g     F ro	0000001c console_stm32_flush
2ffee5ac g     F ro	00000048 psci_node_hw_state
2fff6394 g     F ro	00000010 ddr_save_sr_mode
2fff927c g     F ro	00000058 fdt_check_header
2fff147c g     F ro	0000006c gicv2_set_spi_routing
2fff888c g     F ro	00000038 init_cpu_ops
2fff8608 g     F ro	0000002c stm32_are_pll1_settings_valid_in_context
2fff2a24 g     F ro	00000040 console_flush
2fff30d0 g     F ro	00000010 xlat_arch_tlbi_va_sync
2fff52c6 g     F ro	00000006 stm32mp_clk_disable
2fffd000 g       ro	00000000 __RO_END__
2fff95a4 g     F ro	0000005e fdt_get_name
2fff5690 g     F ro	00000130 stm32mp1_clk_compute_all_pll1_settings
2fff0e66 g     F ro	0000000a gicd_read_igroupr
2ffed22c g     F ro	000000b4 sp_min_handle_fiq
2fff29a4 g     F ro	0000000c console_switch_state
2fff890c g     F ro	00000034 print_errata_status
2fff8964 g     F ro	00000018 spin_unlock
2fff948e g     F ro	00000026 fdt_first_subnode
2fff1534  w    F ro	00000014 plat_ic_get_pending_interrupt_id
2fffe140 g       .bss	00000000 __BSS_START__
2fff5a78 g     F ro	000000d4 stm32mp1_clock_resume
2ffefce0 g     F ro	00000030 stm32_timer_hsi_freq
2ffeef7c g     F ro	0000008c stm32mp1_calib_it_handler
2ffed000 g       ro	00000000 __RO_START__
2fff7c98 g     F ro	0000001a stpmic1_regulator_mask_reset_set
2fff3840 g     F ro	000000f0 mmap_add_region_ctx
2fff9214 g     F ro	00000008 plat_crash_console_putc
2fff4648 g     F ro	000000e0 bsec_program_otp
2fffebc0 g     O .bss	00000080 percpu_data
2fff1328 g     F ro	0000003c gicv2_disable_interrupt
2fff199c g     F ro	00000076 rcc_scv_handler
2fff2520 g     F ro	00000004 plat_scmi_protocol_count
2fff9420 g     F ro	0000006e fdt_next_node
2fff18f0 g     F ro	00000018 pm_domain_scv_handler
2fff7bfa g     F ro	0000000a stpmic1_switch_off
2fff8340 g     F ro	0000009c fdt_get_gpioz_nbpins_from_dt
2fff84ec g     F ro	0000007c stm32_save_context
2fff57c0 g     F ro	0000002c stm32mp1_clk_lp_save_opp_pll1_settings
2fff7fc4 g     F ro	00000018 fdt_get_address
2fff8940 g     F ro	00000024 spin_lock
2fff2938 g     F ro	0000002c console_is_registered
2fff0220 g     F ro	00000038 stm32_pwr_down_wfi
2fff5292 g     F ro	00000014 stm32mp1_rcc_is_mckprot
2fff2c98 g     F ro	00000018 stm32mp_pwr_regs_unlock
2fff5d60 g     F ro	00000022 ddr_enable_clock
2ffede34 g     F ro	00000020 psci_query_sys_suspend_pwrstate
2fff8208 g     F ro	00000024 dt_get_ddr_size
2fff311c g     F ro	00000040 is_mmu_enabled_ctx
2fff0a32 g     F ro	00000006 stm32mp_register_secure_periph_iomem
2fff3d38 g     F ro	0000005c tzc400_init
2ffeef64 g     F ro	0000000c stm32mp1_calib_get_wakeup
2fff28dc g     F ro	0000005c tf_log
2fff1410 g     F ro	0000006c gicv2_raise_sgi
2fffc750 g       ro	00000000 __pubsub_psci_cpu_on_finish_start
2fff7cb2 g     F ro	00000016 stpmic1_lp_reg_on_off
2fff0a2c g     F ro	00000006 stm32mp_register_secure_periph
2fff5f78 g     F ro	00000238 ddr_standby_sr_entry
2fff2eec g     F ro	0000002c stm32mp_is_single_core
2fffed40 g       .bss	00000000 __RW_END__
2fff2cb0 g     F ro	00000028 stm32_get_gpio_bank_base
2fff7fdc g     F ro	00000064 fdt_get_status
2fff0a68 g     F ro	00000010 stm32mp_register_non_secure_gpio
2fff52a8 g     F ro	0000000c stm32mp1_clk_rcc_regs_lock
2fff84b2 g     F ro	00000038 stm32mp1_pm_restore_clock_cfg
2fff8444 g     F ro	00000018 stm32mp_mmio_setbits_32_shregs
2fff9594 g     F ro	00000010 fdt_string
2fff9090 g     F ro	00000048 plat_report_prefetch_abort
2fffd540 g       stacks	00000000 __STACKS_START__
2fff86f4 g     F ro	00000058 stm32mp1_security_setup
2ffed674 g     F ro	00000060 handle_runtime_svc
2ffedfb8 g     F ro	000000bc psci_do_state_coordination
2ffeea60 g     F ro	00000070 psci_system_reset2
2fff17c4 g     F ro	0000012c bsec_main
2fff9310 g     F ro	000000c6 fdt_next_tag
2fff3bbc g     F ro	00000154 init_xlat_tables_ctx
2fff6d00 g     F ro	00000450 stm32_i2c_init
2fffc750 g       ro	00000000 __pubsub_psci_suspend_pwrdown_finish_start
2fff554c g     F ro	0000003c stm32mp_clk_timer_get_rate
2ffefd44 g     F ro	000000e0 stm32_timer_init
2fff7150 g     F ro	0000001c stm32_i2c_mem_write
2fff1a12 g     F ro	00000026 rcc_cal_scv_handler
2fff9154 g     F ro	00000008 plat_my_core_pos
2fff97ec g     F ro	0000002c fdt_get_alias_namelen
2fff1198 g     F ro	00000064 gicv2_driver_init
2ffef1ac g     F ro	00000024 etzpc_configure_tzma
2fff492c g     F ro	00000010 stm32mp_stgen_get_counter
2fff2c6e g     F ro	00000010 stm32mp_lock_available
2ffed6d4 g     F ro	000000d4 runtime_svc_init
2fff66b8 g     F ro	00000060 set_gpio_secure_cfg
2fff12e4 g     F ro	00000044 gicv2_enable_interrupt
2fff2170 g     F ro	0000004c scmi_process_message
2fff9e1a g     F ro	00000010 strlen
2fff1118 g     F ro	0000003c gicv2_pcpu_distif_init
2fff7dc4 g     F ro	00000074 stm32mp_reset_deassert_to
2ffed500 g     F ro	000000d8 sp_min_main
2ffee584 g     F ro	0000000e psci_migrate_info_type
2ffef2c4 g     F ro	000000e0 stm32_rng_read
2fff2dc0 g     F ro	00000028 stm32_get_otp_index
2fff30a0 g     F ro	00000030 xlat_arch_tlbi_va
2fff2fec g     F ro	00000050 stm32_iwdg_get_otp_config
2fff1234 g     F ro	00000024 gicv2_acknowledge_interrupt
2fff7824 g     F ro	00000028 dt_pmic_status
2fff1258 g     F ro	00000024 gicv2_end_of_interrupt
2fff2518 g     F ro	00000008 plat_scmi_sub_vendor_name
2fff9ac0 g     F ro	00000018 __assert
2ffeeb1c g     F ro	00000034 psci_mem_chk_range
2fff0ed8 g     F ro	00000024 gicd_clr_igroupr
2fff9db4 g     F ro	00000016 strchr
2fff3d10 g     F ro	00000002 xlat_mmap_print
2fff7ce4 g     F ro	0000005c stpmic1_lp_set_voltage
2fff7c74 g     F ro	00000024 stpmic1_regulator_pull_down_set
2fff8ed4 g     F ro	00000074 enable_mmu_direct_svc_mon
2fff3f04 g     F ro	0000003c tzc400_is_pending_interrupt
2fff99f2 g     F ro	00000066 fdt_stringlist_search
2ffee0f4 g     F ro	00000030 psci_acquire_pwr_domain_locks
2fff9a58 g     F ro	00000028 fdt_node_check_compatible
2fff59e0 g     F ro	00000098 stm32mp1_clock_suspend
2fffc750 g       ro	00000000 __pubsub_psci_cpu_on_finish_end
2fff845c g     F ro	0000001e stm32_clean_context
2fff3264 g     F ro	00000010 mmap_remove_dynamic_region
2fff7860 g     F ro	0000007c dt_pmic_find_supply
2fff5284 g     F ro	0000000e stm32mp1_rcc_is_secure
2fff2e18 g     F ro	00000048 stm32_get_otp_value
2fff580c g     F ro	00000134 stm32mp1_register_clock_parents_secure
2fffec84 g     O .bss	00000004 console_list
2ffedf34 g     F ro	00000084 psci_set_pwr_domains_to_run
2fff13a4 g     F ro	0000006c gicv2_set_interrupt_type
2fff06ac g     F ro	00000014 stm32mp1_set_pm_domain_state
2fff7856 g     F ro	0000000a pmic_set_lp_config
2fff0e7c g     F ro	0000000a gicd_write_igroupr
2ffef844 g     F ro	00000034 stm32_rtc_init
2fff45d8 g     F ro	00000038 bsec_read_sp_lock
2fff0af4 g     F ro	000000d0 stm32mp_nsec_can_access_clock
2fffecc0 g       .bss	00000000 __PERCPU_BAKERY_LOCK_START__
2fff8a10  w    F ro	00000018 plat_get_my_stack
2fff3208 g     F ro	00000028 mmap_add_region
2ffed9ac g     F ro	0000002a errata_needs_reporting
2fffec7c g     O .bss	00000004 psci_spd_pm
2fff784c g     F ro	0000000a pmic_configure_boot_on_regulators



Disassembly of section ro:

2ffed000 <sp_min_entrypoint>:
2ffed000:	e1a09000 	mov	r9, r0
2ffed004:	e1a0a001 	mov	sl, r1
2ffed008:	e1a0b002 	mov	fp, r2
2ffed00c:	e1a0c003 	mov	ip, r3
2ffed010:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffed014:	e3100001 	tst	r0, #1
2ffed018:	0a000002 	beq	2ffed028 <sp_min_entrypoint+0x28>
2ffed01c:	e59f0110 	ldr	r0, [pc, #272]	; 2ffed134 <sp_min_entrypoint+0x134>
2ffed020:	e3a010d4 	mov	r1, #212	; 0xd4
2ffed024:	ea002ea3 	b	2fff8ab8 <asm_assert>
2ffed028:	f1020016 	cps	#22
2ffed02c:	f57ff06f 	isb	sy
2ffed030:	e59f0100 	ldr	r0, [pc, #256]	; 2ffed138 <sp_min_entrypoint+0x138>
2ffed034:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
2ffed038:	ee0c0f30 	mcr	15, 0, r0, cr12, cr0, {1}
2ffed03c:	f57ff06f 	isb	sy
2ffed040:	eb002df2 	bl	2fff8810 <reset_handler>
2ffed044:	e59f10f0 	ldr	r1, [pc, #240]	; 2ffed13c <sp_min_entrypoint+0x13c>
2ffed048:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffed04c:	e1800001 	orr	r0, r0, r1
2ffed050:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffed054:	f57ff06f 	isb	sy
2ffed058:	e3a00c02 	mov	r0, #512	; 0x200
2ffed05c:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed060:	f1080100 	cpsie	a
2ffed064:	f57ff06f 	isb	sy
2ffed068:	ee110f51 	mrc	15, 0, r0, cr1, cr1, {2}
2ffed06c:	e2000807 	and	r0, r0, #458752	; 0x70000
2ffed070:	e3800b03 	orr	r0, r0, #3072	; 0xc00
2ffed074:	ee010f51 	mcr	15, 0, r0, cr1, cr1, {2}
2ffed078:	f57ff06f 	isb	sy
2ffed07c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
2ffed080:	ee010f50 	mcr	15, 0, r0, cr1, cr0, {2}
2ffed084:	f57ff06f 	isb	sy
2ffed088:	e59f00b0 	ldr	r0, [pc, #176]	; 2ffed140 <sp_min_entrypoint+0x140>
2ffed08c:	eee80a10 	vmsr	fpexc, r0
2ffed090:	f57ff06f 	isb	sy
2ffed094:	e3a00020 	mov	r0, #32
2ffed098:	ee090f1c 	mcr	15, 0, r0, cr9, cr12, {0}
2ffed09c:	ee100f11 	mrc	15, 0, r0, cr0, cr1, {0}
2ffed0a0:	e200040f 	and	r0, r0, #251658240	; 0xf000000
2ffed0a4:	e3500401 	cmp	r0, #16777216	; 0x1000000
2ffed0a8:	1a000002 	bne	2ffed0b8 <sp_min_entrypoint+0xb8>
2ffed0ac:	e10f0000 	mrs	r0, CPSR
2ffed0b0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
2ffed0b4:	e12ff000 	msr	CPSR_fsxc, r0
2ffed0b8:	e59f0084 	ldr	r0, [pc, #132]	; 2ffed144 <sp_min_entrypoint+0x144>
2ffed0bc:	e59f1084 	ldr	r1, [pc, #132]	; 2ffed148 <sp_min_entrypoint+0x148>
2ffed0c0:	e0411000 	sub	r1, r1, r0
2ffed0c4:	eb002ecc 	bl	2fff8bfc <inv_dcache_range>
2ffed0c8:	e1a0700c 	mov	r7, ip
2ffed0cc:	e59f0078 	ldr	r0, [pc, #120]	; 2ffed14c <sp_min_entrypoint+0x14c>
2ffed0d0:	e59f1078 	ldr	r1, [pc, #120]	; 2ffed150 <sp_min_entrypoint+0x150>
2ffed0d4:	eb002f07 	bl	2fff8cf8 <zero_normalmem>
2ffed0d8:	e1a0c007 	mov	ip, r7
2ffed0dc:	eb002e52 	bl	2fff8a2c <plat_set_my_stack>
2ffed0e0:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2ffed0e4:	e3844004 	orr	r4, r4, #4
2ffed0e8:	e3c44010 	bic	r4, r4, #16
2ffed0ec:	ee014f11 	mcr	15, 0, r4, cr1, cr1, {0}
2ffed0f0:	e1a00009 	mov	r0, r9
2ffed0f4:	e1a0100a 	mov	r1, sl
2ffed0f8:	e1a0200b 	mov	r2, fp
2ffed0fc:	e1a0300c 	mov	r3, ip
2ffed100:	fa000b9c 	blx	2ffeff78 <sp_min_early_platform_setup2>
2ffed104:	fa000c0d 	blx	2fff0140 <sp_min_plat_arch_setup>
2ffed108:	fa0000fc 	blx	2ffed500 <sp_min_main>
2ffed10c:	e59f0040 	ldr	r0, [pc, #64]	; 2ffed154 <sp_min_entrypoint+0x154>
2ffed110:	e59f1040 	ldr	r1, [pc, #64]	; 2ffed158 <sp_min_entrypoint+0x158>
2ffed114:	e0411000 	sub	r1, r1, r0
2ffed118:	eb002ea8 	bl	2fff8bc0 <clean_dcache_range>
2ffed11c:	e59f0028 	ldr	r0, [pc, #40]	; 2ffed14c <sp_min_entrypoint+0x14c>
2ffed120:	e59f1034 	ldr	r1, [pc, #52]	; 2ffed15c <sp_min_entrypoint+0x15c>
2ffed124:	e0411000 	sub	r1, r1, r0
2ffed128:	eb002ea4 	bl	2fff8bc0 <clean_dcache_range>
2ffed12c:	fa0000cd 	blx	2ffed468 <smc_get_next_ctx>
2ffed130:	ea0000a2 	b	2ffed3c0 <sp_min_exit>
2ffed134:	2fffc541 	.word	0x2fffc541
2ffed138:	2fffc760 	.word	0x2fffc760
2ffed13c:	00001002 	.word	0x00001002
2ffed140:	40000700 	.word	0x40000700
2ffed144:	2fffd000 	.word	0x2fffd000
2ffed148:	2fffed40 	.word	0x2fffed40
2ffed14c:	2fffe140 	.word	0x2fffe140
2ffed150:	00000c00 	.word	0x00000c00
2ffed154:	2fffd000 	.word	0x2fffd000
2ffed158:	2fffd540 	.word	0x2fffd540
2ffed15c:	2fffed40 	.word	0x2fffed40

2ffed160 <sp_min_handle_smc>:
2ffed160:	e58de080 	str	lr, [sp, #128]	; 0x80
2ffed164:	e88d1fff 	stm	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed168:	e1a0000d 	mov	r0, sp
2ffed16c:	e2800034 	add	r0, r0, #52	; 0x34
2ffed170:	e1054200 	mrs	r4, SP_usr
2ffed174:	e1065200 	mrs	r5, LR_usr
2ffed178:	e1406300 	mrs	r6, SPSR_irq
2ffed17c:	e1017300 	mrs	r7, SP_irq
2ffed180:	e1008300 	mrs	r8, LR_irq
2ffed184:	e14e9200 	mrs	r9, SPSR_fiq
2ffed188:	e10da200 	mrs	sl, SP_fiq
2ffed18c:	e10eb200 	mrs	fp, LR_fiq
2ffed190:	e142c300 	mrs	ip, SPSR_svc
2ffed194:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed198:	e1034300 	mrs	r4, SP_svc
2ffed19c:	e1025300 	mrs	r5, LR_svc
2ffed1a0:	e1446300 	mrs	r6, SPSR_abt
2ffed1a4:	e1057300 	mrs	r7, SP_abt
2ffed1a8:	e1048300 	mrs	r8, LR_abt
2ffed1ac:	e1469300 	mrs	r9, SPSR_und
2ffed1b0:	e107a300 	mrs	sl, SP_und
2ffed1b4:	e106b300 	mrs	fp, LR_und
2ffed1b8:	e14fc000 	mrs	ip, SPSR
2ffed1bc:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed1c0:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2ffed1c4:	ee195f1c 	mrc	15, 0, r5, cr9, cr12, {0}
2ffed1c8:	e3140001 	tst	r4, #1
2ffed1cc:	0a000000 	beq	2ffed1d4 <sp_min_handle_smc+0x74>
2ffed1d0:	e58d5088 	str	r5, [sp, #136]	; 0x88
2ffed1d4:	e3855020 	orr	r5, r5, #32
2ffed1d8:	ee095f1c 	mcr	15, 0, r5, cr9, cr12, {0}
2ffed1dc:	f57ff06f 	isb	sy
2ffed1e0:	e58d4084 	str	r4, [sp, #132]	; 0x84
2ffed1e4:	f57ff01f 	clrex
2ffed1e8:	e1a0200d 	mov	r2, sp
2ffed1ec:	e592d07c 	ldr	sp, [r2, #124]	; 0x7c
2ffed1f0:	e5920084 	ldr	r0, [r2, #132]	; 0x84
2ffed1f4:	e2003001 	and	r3, r0, #1
2ffed1f8:	e3c00001 	bic	r0, r0, #1
2ffed1fc:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed200:	f57ff06f 	isb	sy
2ffed204:	e5920000 	ldr	r0, [r2]
2ffed208:	e3100101 	tst	r0, #1073741824	; 0x40000000
2ffed20c:	0a000003 	beq	2ffed220 <sp_min_handle_smc+0xc0>
2ffed210:	e3e00000 	mvn	r0, #0
2ffed214:	e5820000 	str	r0, [r2]
2ffed218:	e1a00002 	mov	r0, r2
2ffed21c:	ea000067 	b	2ffed3c0 <sp_min_exit>
2ffed220:	e3a01000 	mov	r1, #0
2ffed224:	fa000112 	blx	2ffed674 <handle_runtime_svc>
2ffed228:	ea000064 	b	2ffed3c0 <sp_min_exit>

2ffed22c <sp_min_handle_fiq>:
2ffed22c:	e24ee004 	sub	lr, lr, #4
2ffed230:	e58de080 	str	lr, [sp, #128]	; 0x80
2ffed234:	e88d1fff 	stm	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed238:	e1a0000d 	mov	r0, sp
2ffed23c:	e2800034 	add	r0, r0, #52	; 0x34
2ffed240:	e1054200 	mrs	r4, SP_usr
2ffed244:	e1065200 	mrs	r5, LR_usr
2ffed248:	e1406300 	mrs	r6, SPSR_irq
2ffed24c:	e1017300 	mrs	r7, SP_irq
2ffed250:	e1008300 	mrs	r8, LR_irq
2ffed254:	e14e9200 	mrs	r9, SPSR_fiq
2ffed258:	e10da200 	mrs	sl, SP_fiq
2ffed25c:	e10eb200 	mrs	fp, LR_fiq
2ffed260:	e142c300 	mrs	ip, SPSR_svc
2ffed264:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed268:	e1034300 	mrs	r4, SP_svc
2ffed26c:	e1025300 	mrs	r5, LR_svc
2ffed270:	e1446300 	mrs	r6, SPSR_abt
2ffed274:	e1057300 	mrs	r7, SP_abt
2ffed278:	e1048300 	mrs	r8, LR_abt
2ffed27c:	e1469300 	mrs	r9, SPSR_und
2ffed280:	e107a300 	mrs	sl, SP_und
2ffed284:	e106b300 	mrs	fp, LR_und
2ffed288:	e14fc000 	mrs	ip, SPSR
2ffed28c:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed290:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2ffed294:	ee195f1c 	mrc	15, 0, r5, cr9, cr12, {0}
2ffed298:	e3140001 	tst	r4, #1
2ffed29c:	0a000000 	beq	2ffed2a4 <sp_min_handle_fiq+0x78>
2ffed2a0:	e58d5088 	str	r5, [sp, #136]	; 0x88
2ffed2a4:	e3855020 	orr	r5, r5, #32
2ffed2a8:	ee095f1c 	mcr	15, 0, r5, cr9, cr12, {0}
2ffed2ac:	f57ff06f 	isb	sy
2ffed2b0:	e58d4084 	str	r4, [sp, #132]	; 0x84
2ffed2b4:	f57ff01f 	clrex
2ffed2b8:	e1a0200d 	mov	r2, sp
2ffed2bc:	e592d07c 	ldr	sp, [r2, #124]	; 0x7c
2ffed2c0:	e5920084 	ldr	r0, [r2, #132]	; 0x84
2ffed2c4:	e3c00001 	bic	r0, r0, #1
2ffed2c8:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed2cc:	f57ff06f 	isb	sy
2ffed2d0:	e92d000c 	push	{r2, r3}
2ffed2d4:	fa0000e0 	blx	2ffed65c <sp_min_fiq>
2ffed2d8:	e8bd0009 	pop	{r0, r3}
2ffed2dc:	ea000037 	b	2ffed3c0 <sp_min_exit>

2ffed2e0 <sp_min_warm_entrypoint>:
2ffed2e0:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffed2e4:	e3100001 	tst	r0, #1
2ffed2e8:	0a000002 	beq	2ffed2f8 <sp_min_warm_entrypoint+0x18>
2ffed2ec:	e59f00bc 	ldr	r0, [pc, #188]	; 2ffed3b0 <sp_min_warm_entrypoint+0xd0>
2ffed2f0:	e3a010d4 	mov	r1, #212	; 0xd4
2ffed2f4:	ea002def 	b	2fff8ab8 <asm_assert>
2ffed2f8:	f1020016 	cps	#22
2ffed2fc:	f57ff06f 	isb	sy
2ffed300:	e59f00ac 	ldr	r0, [pc, #172]	; 2ffed3b4 <sp_min_warm_entrypoint+0xd4>
2ffed304:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
2ffed308:	ee0c0f30 	mcr	15, 0, r0, cr12, cr0, {1}
2ffed30c:	f57ff06f 	isb	sy
2ffed310:	eb002d3e 	bl	2fff8810 <reset_handler>
2ffed314:	e59f109c 	ldr	r1, [pc, #156]	; 2ffed3b8 <sp_min_warm_entrypoint+0xd8>
2ffed318:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffed31c:	e1800001 	orr	r0, r0, r1
2ffed320:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffed324:	f57ff06f 	isb	sy
2ffed328:	e3a00c02 	mov	r0, #512	; 0x200
2ffed32c:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed330:	f1080100 	cpsie	a
2ffed334:	f57ff06f 	isb	sy
2ffed338:	ee110f51 	mrc	15, 0, r0, cr1, cr1, {2}
2ffed33c:	e2000807 	and	r0, r0, #458752	; 0x70000
2ffed340:	e3800b03 	orr	r0, r0, #3072	; 0xc00
2ffed344:	ee010f51 	mcr	15, 0, r0, cr1, cr1, {2}
2ffed348:	f57ff06f 	isb	sy
2ffed34c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
2ffed350:	ee010f50 	mcr	15, 0, r0, cr1, cr0, {2}
2ffed354:	f57ff06f 	isb	sy
2ffed358:	e59f005c 	ldr	r0, [pc, #92]	; 2ffed3bc <sp_min_warm_entrypoint+0xdc>
2ffed35c:	eee80a10 	vmsr	fpexc, r0
2ffed360:	f57ff06f 	isb	sy
2ffed364:	e3a00020 	mov	r0, #32
2ffed368:	ee090f1c 	mcr	15, 0, r0, cr9, cr12, {0}
2ffed36c:	ee100f11 	mrc	15, 0, r0, cr0, cr1, {0}
2ffed370:	e200040f 	and	r0, r0, #251658240	; 0xf000000
2ffed374:	e3500401 	cmp	r0, #16777216	; 0x1000000
2ffed378:	1a000002 	bne	2ffed388 <sp_min_warm_entrypoint+0xa8>
2ffed37c:	e10f0000 	mrs	r0, CPSR
2ffed380:	e3800602 	orr	r0, r0, #2097152	; 0x200000
2ffed384:	e12ff000 	msr	CPSR_fsxc, r0
2ffed388:	eb002da7 	bl	2fff8a2c <plat_set_my_stack>
2ffed38c:	e3a00001 	mov	r0, #1
2ffed390:	fa0015bc 	blx	2fff2a88 <bl32_plat_enable_mmu>
2ffed394:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffed398:	e3800004 	orr	r0, r0, #4
2ffed39c:	e3c00010 	bic	r0, r0, #16
2ffed3a0:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed3a4:	fa00008b 	blx	2ffed5d8 <sp_min_warm_boot>
2ffed3a8:	fa00002e 	blx	2ffed468 <smc_get_next_ctx>
2ffed3ac:	ea000003 	b	2ffed3c0 <sp_min_exit>
2ffed3b0:	2fffc541 	.word	0x2fffc541
2ffed3b4:	2fffc760 	.word	0x2fffc760
2ffed3b8:	00001002 	.word	0x00001002
2ffed3bc:	40000700 	.word	0x40000700

2ffed3c0 <sp_min_exit>:
2ffed3c0:	e580d07c 	str	sp, [r0, #124]	; 0x7c
2ffed3c4:	e1a0d000 	mov	sp, r0
2ffed3c8:	e5901084 	ldr	r1, [r0, #132]	; 0x84
2ffed3cc:	ee011f11 	mcr	15, 0, r1, cr1, cr1, {0}
2ffed3d0:	f57ff06f 	isb	sy
2ffed3d4:	e3110001 	tst	r1, #1
2ffed3d8:	0a000001 	beq	2ffed3e4 <sp_min_exit+0x24>
2ffed3dc:	e5901088 	ldr	r1, [r0, #136]	; 0x88
2ffed3e0:	ee091f1c 	mcr	15, 0, r1, cr9, cr12, {0}
2ffed3e4:	e2801034 	add	r1, r0, #52	; 0x34
2ffed3e8:	e8b11ff0 	ldm	r1!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed3ec:	e125f204 	msr	SP_usr, r4
2ffed3f0:	e126f205 	msr	LR_usr, r5
2ffed3f4:	e160f306 	msr	SPSR_irq, r6
2ffed3f8:	e121f307 	msr	SP_irq, r7
2ffed3fc:	e120f308 	msr	LR_irq, r8
2ffed400:	e16ef209 	msr	SPSR_fiq, r9
2ffed404:	e12df20a 	msr	SP_fiq, sl
2ffed408:	e12ef20b 	msr	LR_fiq, fp
2ffed40c:	e162f30c 	msr	SPSR_svc, ip
2ffed410:	e8b11ff0 	ldm	r1!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed414:	e123f304 	msr	SP_svc, r4
2ffed418:	e122f305 	msr	LR_svc, r5
2ffed41c:	e164f306 	msr	SPSR_abt, r6
2ffed420:	e125f307 	msr	SP_abt, r7
2ffed424:	e124f308 	msr	LR_abt, r8
2ffed428:	e166f309 	msr	SPSR_und, r9
2ffed42c:	e127f30a 	msr	SP_und, sl
2ffed430:	e126f30b 	msr	LR_und, fp
2ffed434:	e16ff00c 	msr	SPSR_fsxc, ip
2ffed438:	e590e080 	ldr	lr, [r0, #128]	; 0x80
2ffed43c:	e8901fff 	ldm	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed440:	e160006e 	eret

2ffed444 <smc_get_ctx>:
2ffed444:	2801      	cmp	r0, #1
2ffed446:	b508      	push	{r3, lr}
2ffed448:	d003      	beq.n	2ffed452 <smc_get_ctx+0xe>
2ffed44a:	4805      	ldr	r0, [pc, #20]	; (2ffed460 <smc_get_ctx+0x1c>)
2ffed44c:	212a      	movs	r1, #42	; 0x2a
2ffed44e:	f00c fb37 	bl	2fff9ac0 <__assert>
2ffed452:	f00b ee80 	blx	2fff9154 <plat_my_core_pos>
2ffed456:	4b03      	ldr	r3, [pc, #12]	; (2ffed464 <smc_get_ctx+0x20>)
2ffed458:	2290      	movs	r2, #144	; 0x90
2ffed45a:	fb02 3000 	mla	r0, r2, r0, r3
2ffed45e:	bd08      	pop	{r3, pc}
2ffed460:	2fff9ebf 	.word	0x2fff9ebf
2ffed464:	2fffe148 	.word	0x2fffe148

2ffed468 <smc_get_next_ctx>:
2ffed468:	b508      	push	{r3, lr}
2ffed46a:	f00b ee74 	blx	2fff9154 <plat_my_core_pos>
2ffed46e:	4b02      	ldr	r3, [pc, #8]	; (2ffed478 <smc_get_next_ctx+0x10>)
2ffed470:	2290      	movs	r2, #144	; 0x90
2ffed472:	fb02 3000 	mla	r0, r2, r0, r3
2ffed476:	bd08      	pop	{r3, pc}
2ffed478:	2fffe148 	.word	0x2fffe148

2ffed47c <cm_get_context>:
2ffed47c:	2801      	cmp	r0, #1
2ffed47e:	b508      	push	{r3, lr}
2ffed480:	d003      	beq.n	2ffed48a <cm_get_context+0xe>
2ffed482:	4805      	ldr	r0, [pc, #20]	; (2ffed498 <cm_get_context+0x1c>)
2ffed484:	2140      	movs	r1, #64	; 0x40
2ffed486:	f00c fb1b 	bl	2fff9ac0 <__assert>
2ffed48a:	f00b ee64 	blx	2fff9154 <plat_my_core_pos>
2ffed48e:	4b03      	ldr	r3, [pc, #12]	; (2ffed49c <cm_get_context+0x20>)
2ffed490:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2ffed494:	bd08      	pop	{r3, pc}
2ffed496:	bf00      	nop
2ffed498:	2fff9ebf 	.word	0x2fff9ebf
2ffed49c:	2fffe140 	.word	0x2fffe140

2ffed4a0 <cm_get_context_by_index>:
2ffed4a0:	2901      	cmp	r1, #1
2ffed4a2:	b508      	push	{r3, lr}
2ffed4a4:	d003      	beq.n	2ffed4ae <cm_get_context_by_index+0xe>
2ffed4a6:	4804      	ldr	r0, [pc, #16]	; (2ffed4b8 <cm_get_context_by_index+0x18>)
2ffed4a8:	2157      	movs	r1, #87	; 0x57
2ffed4aa:	f00c fb09 	bl	2fff9ac0 <__assert>
2ffed4ae:	4b03      	ldr	r3, [pc, #12]	; (2ffed4bc <cm_get_context_by_index+0x1c>)
2ffed4b0:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2ffed4b4:	bd08      	pop	{r3, pc}
2ffed4b6:	bf00      	nop
2ffed4b8:	2fff9ebf 	.word	0x2fff9ebf
2ffed4bc:	2fffe140 	.word	0x2fffe140

2ffed4c0 <cm_set_context_by_index>:
2ffed4c0:	2a01      	cmp	r2, #1
2ffed4c2:	b508      	push	{r3, lr}
2ffed4c4:	d003      	beq.n	2ffed4ce <cm_set_context_by_index+0xe>
2ffed4c6:	4804      	ldr	r0, [pc, #16]	; (2ffed4d8 <cm_set_context_by_index+0x18>)
2ffed4c8:	2162      	movs	r1, #98	; 0x62
2ffed4ca:	f00c faf9 	bl	2fff9ac0 <__assert>
2ffed4ce:	4b03      	ldr	r3, [pc, #12]	; (2ffed4dc <cm_set_context_by_index+0x1c>)
2ffed4d0:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
2ffed4d4:	bd08      	pop	{r3, pc}
2ffed4d6:	bf00      	nop
2ffed4d8:	2fff9ebf 	.word	0x2fff9ebf
2ffed4dc:	2fffe140 	.word	0x2fffe140

2ffed4e0 <get_arm_std_svc_args>:
2ffed4e0:	b508      	push	{r3, lr}
2ffed4e2:	f64f 73e0 	movw	r3, #65504	; 0xffe0
2ffed4e6:	4298      	cmp	r0, r3
2ffed4e8:	d003      	beq.n	2ffed4f2 <get_arm_std_svc_args+0x12>
2ffed4ea:	4803      	ldr	r0, [pc, #12]	; (2ffed4f8 <get_arm_std_svc_args+0x18>)
2ffed4ec:	219f      	movs	r1, #159	; 0x9f
2ffed4ee:	f00c fae7 	bl	2fff9ac0 <__assert>
2ffed4f2:	4802      	ldr	r0, [pc, #8]	; (2ffed4fc <get_arm_std_svc_args+0x1c>)
2ffed4f4:	bd08      	pop	{r3, pc}
2ffed4f6:	bf00      	nop
2ffed4f8:	2fff9ebf 	.word	0x2fff9ebf
2ffed4fc:	2fff9f38 	.word	0x2fff9f38

2ffed500 <sp_min_main>:
2ffed500:	b570      	push	{r4, r5, r6, lr}
2ffed502:	492d      	ldr	r1, [pc, #180]	; (2ffed5b8 <sp_min_main+0xb8>)
2ffed504:	482d      	ldr	r0, [pc, #180]	; (2ffed5bc <sp_min_main+0xbc>)
2ffed506:	4e2e      	ldr	r6, [pc, #184]	; (2ffed5c0 <sp_min_main+0xc0>)
2ffed508:	f005 f9e8 	bl	2fff28dc <tf_log>
2ffed50c:	492d      	ldr	r1, [pc, #180]	; (2ffed5c4 <sp_min_main+0xc4>)
2ffed50e:	482b      	ldr	r0, [pc, #172]	; (2ffed5bc <sp_min_main+0xbc>)
2ffed510:	f005 f9e4 	bl	2fff28dc <tf_log>
2ffed514:	f002 fdc2 	bl	2fff009c <sp_min_platform_setup>
2ffed518:	482b      	ldr	r0, [pc, #172]	; (2ffed5c8 <sp_min_main+0xc8>)
2ffed51a:	f005 f9df 	bl	2fff28dc <tf_log>
2ffed51e:	f000 f8d9 	bl	2ffed6d4 <runtime_svc_init>
2ffed522:	f00b ee18 	blx	2fff9154 <plat_my_core_pos>
2ffed526:	f856 5020 	ldr.w	r5, [r6, r0, lsl #2]
2ffed52a:	f002 fcf3 	bl	2ffeff14 <sp_min_plat_get_bl33_ep_info>
2ffed52e:	4604      	mov	r4, r0
2ffed530:	b918      	cbnz	r0, 2ffed53a <sp_min_main+0x3a>
2ffed532:	217e      	movs	r1, #126	; 0x7e
2ffed534:	4825      	ldr	r0, [pc, #148]	; (2ffed5cc <sp_min_main+0xcc>)
2ffed536:	f00c fac3 	bl	2fff9ac0 <__assert>
2ffed53a:	6843      	ldr	r3, [r0, #4]
2ffed53c:	07db      	lsls	r3, r3, #31
2ffed53e:	d401      	bmi.n	2ffed544 <sp_min_main+0x44>
2ffed540:	217f      	movs	r1, #127	; 0x7f
2ffed542:	e7f7      	b.n	2ffed534 <sp_min_main+0x34>
2ffed544:	4822      	ldr	r0, [pc, #136]	; (2ffed5d0 <sp_min_main+0xd0>)
2ffed546:	f005 f9c9 	bl	2fff28dc <tf_log>
2ffed54a:	4620      	mov	r0, r4
2ffed54c:	f001 fa3e 	bl	2ffee9cc <psci_prepare_next_non_secure_ctx>
2ffed550:	f00b ee00 	blx	2fff9154 <plat_my_core_pos>
2ffed554:	f856 4020 	ldr.w	r4, [r6, r0, lsl #2]
2ffed558:	f00b edfc 	blx	2fff9154 <plat_my_core_pos>
2ffed55c:	4a1d      	ldr	r2, [pc, #116]	; (2ffed5d4 <sp_min_main+0xd4>)
2ffed55e:	2390      	movs	r3, #144	; 0x90
2ffed560:	6821      	ldr	r1, [r4, #0]
2ffed562:	4358      	muls	r0, r3
2ffed564:	1813      	adds	r3, r2, r0
2ffed566:	5011      	str	r1, [r2, r0]
2ffed568:	6862      	ldr	r2, [r4, #4]
2ffed56a:	605a      	str	r2, [r3, #4]
2ffed56c:	68a2      	ldr	r2, [r4, #8]
2ffed56e:	609a      	str	r2, [r3, #8]
2ffed570:	6922      	ldr	r2, [r4, #16]
2ffed572:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
2ffed576:	69a2      	ldr	r2, [r4, #24]
2ffed578:	679a      	str	r2, [r3, #120]	; 0x78
2ffed57a:	6962      	ldr	r2, [r4, #20]
2ffed57c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
2ffed580:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed584:	f043 0301 	orr.w	r3, r3, #1
2ffed588:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed58c:	f3bf 8f6f 	isb	sy
2ffed590:	69eb      	ldr	r3, [r5, #28]
2ffed592:	ee01 3f10 	mcr	15, 0, r3, cr1, cr0, {0}
2ffed596:	f3bf 8f6f 	isb	sy
2ffed59a:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed59e:	f023 0301 	bic.w	r3, r3, #1
2ffed5a2:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed5a6:	f3bf 8f6f 	isb	sy
2ffed5aa:	f000 f8fd 	bl	2ffed7a8 <sp_min_plat_runtime_setup>
2ffed5ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffed5b2:	f005 ba37 	b.w	2fff2a24 <console_flush>
2ffed5b6:	bf00      	nop
2ffed5b8:	2fff9e9e 	.word	0x2fff9e9e
2ffed5bc:	2fff9ed9 	.word	0x2fff9ed9
2ffed5c0:	2fffe140 	.word	0x2fffe140
2ffed5c4:	2fff9e80 	.word	0x2fff9e80
2ffed5c8:	2fff9ee6 	.word	0x2fff9ee6
2ffed5cc:	2fff9ebf 	.word	0x2fff9ebf
2ffed5d0:	2fff9f0e 	.word	0x2fff9f0e
2ffed5d4:	2fffe148 	.word	0x2fffe148

2ffed5d8 <sp_min_warm_boot>:
2ffed5d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffed5dc:	f00b edba 	blx	2fff9154 <plat_my_core_pos>
2ffed5e0:	4f1c      	ldr	r7, [pc, #112]	; (2ffed654 <sp_min_warm_boot+0x7c>)
2ffed5e2:	4e1d      	ldr	r6, [pc, #116]	; (2ffed658 <sp_min_warm_boot+0x80>)
2ffed5e4:	f857 8020 	ldr.w	r8, [r7, r0, lsl #2]
2ffed5e8:	f000 fe06 	bl	2ffee1f8 <psci_warmboot_entrypoint>
2ffed5ec:	f00b edb2 	blx	2fff9154 <plat_my_core_pos>
2ffed5f0:	2190      	movs	r1, #144	; 0x90
2ffed5f2:	fb01 f500 	mul.w	r5, r1, r0
2ffed5f6:	1974      	adds	r4, r6, r5
2ffed5f8:	4620      	mov	r0, r4
2ffed5fa:	f00b eb7e 	blx	2fff8cf8 <zero_normalmem>
2ffed5fe:	f00b edaa 	blx	2fff9154 <plat_my_core_pos>
2ffed602:	f857 3020 	ldr.w	r3, [r7, r0, lsl #2]
2ffed606:	681a      	ldr	r2, [r3, #0]
2ffed608:	5172      	str	r2, [r6, r5]
2ffed60a:	685a      	ldr	r2, [r3, #4]
2ffed60c:	6062      	str	r2, [r4, #4]
2ffed60e:	689a      	ldr	r2, [r3, #8]
2ffed610:	60a2      	str	r2, [r4, #8]
2ffed612:	691a      	ldr	r2, [r3, #16]
2ffed614:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
2ffed618:	699a      	ldr	r2, [r3, #24]
2ffed61a:	695b      	ldr	r3, [r3, #20]
2ffed61c:	67a2      	str	r2, [r4, #120]	; 0x78
2ffed61e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
2ffed622:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed626:	f043 0301 	orr.w	r3, r3, #1
2ffed62a:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed62e:	f3bf 8f6f 	isb	sy
2ffed632:	f8d8 301c 	ldr.w	r3, [r8, #28]
2ffed636:	ee01 3f10 	mcr	15, 0, r3, cr1, cr0, {0}
2ffed63a:	f3bf 8f6f 	isb	sy
2ffed63e:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed642:	f023 0301 	bic.w	r3, r3, #1
2ffed646:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed64a:	f3bf 8f6f 	isb	sy
2ffed64e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffed652:	bf00      	nop
2ffed654:	2fffe140 	.word	0x2fffe140
2ffed658:	2fffe148 	.word	0x2fffe148

2ffed65c <sp_min_fiq>:
2ffed65c:	b510      	push	{r4, lr}
2ffed65e:	f003 ff73 	bl	2fff1548 <plat_ic_acknowledge_interrupt>
2ffed662:	4604      	mov	r4, r0
2ffed664:	f002 fbee 	bl	2ffefe44 <sp_min_plat_fiq_handler>
2ffed668:	4620      	mov	r0, r4
2ffed66a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed66e:	f003 bf6d 	b.w	2fff154c <plat_ic_end_of_interrupt>
	...

2ffed674 <handle_runtime_svc>:
2ffed674:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffed676:	4614      	mov	r4, r2
2ffed678:	b91a      	cbnz	r2, 2ffed682 <handle_runtime_svc+0xe>
2ffed67a:	4812      	ldr	r0, [pc, #72]	; (2ffed6c4 <handle_runtime_svc+0x50>)
2ffed67c:	212a      	movs	r1, #42	; 0x2a
2ffed67e:	f00c fa1f 	bl	2fff9ac0 <__assert>
2ffed682:	0fc5      	lsrs	r5, r0, #31
2ffed684:	f3c0 6205 	ubfx	r2, r0, #24, #6
2ffed688:	ea42 1585 	orr.w	r5, r2, r5, lsl #6
2ffed68c:	4a0e      	ldr	r2, [pc, #56]	; (2ffed6c8 <handle_runtime_svc+0x54>)
2ffed68e:	5d56      	ldrb	r6, [r2, r5]
2ffed690:	4a0e      	ldr	r2, [pc, #56]	; (2ffed6cc <handle_runtime_svc+0x58>)
2ffed692:	4d0f      	ldr	r5, [pc, #60]	; (2ffed6d0 <handle_runtime_svc+0x5c>)
2ffed694:	1aad      	subs	r5, r5, r2
2ffed696:	ebb6 1f15 	cmp.w	r6, r5, lsr #4
2ffed69a:	d305      	bcc.n	2ffed6a8 <handle_runtime_svc+0x34>
2ffed69c:	4620      	mov	r0, r4
2ffed69e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2ffed6a2:	6023      	str	r3, [r4, #0]
2ffed6a4:	b004      	add	sp, #16
2ffed6a6:	bd70      	pop	{r4, r5, r6, pc}
2ffed6a8:	9303      	str	r3, [sp, #12]
2ffed6aa:	9402      	str	r4, [sp, #8]
2ffed6ac:	9101      	str	r1, [sp, #4]
2ffed6ae:	eb02 1206 	add.w	r2, r2, r6, lsl #4
2ffed6b2:	6923      	ldr	r3, [r4, #16]
2ffed6b4:	9300      	str	r3, [sp, #0]
2ffed6b6:	68d5      	ldr	r5, [r2, #12]
2ffed6b8:	6861      	ldr	r1, [r4, #4]
2ffed6ba:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
2ffed6be:	47a8      	blx	r5
2ffed6c0:	e7f0      	b.n	2ffed6a4 <handle_runtime_svc+0x30>
2ffed6c2:	bf00      	nop
2ffed6c4:	2fff9f44 	.word	0x2fff9f44
2ffed6c8:	2fffeb18 	.word	0x2fffeb18
2ffed6cc:	2fffc714 	.word	0x2fffc714
2ffed6d0:	2fffc734 	.word	0x2fffc734

2ffed6d4 <runtime_svc_init>:
2ffed6d4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffed6d8:	4c2d      	ldr	r4, [pc, #180]	; (2ffed790 <runtime_svc_init+0xbc>)
2ffed6da:	4e2e      	ldr	r6, [pc, #184]	; (2ffed794 <runtime_svc_init+0xc0>)
2ffed6dc:	42b4      	cmp	r4, r6
2ffed6de:	d303      	bcc.n	2ffed6e8 <runtime_svc_init+0x14>
2ffed6e0:	1ba4      	subs	r4, r4, r6
2ffed6e2:	f5b4 6f00 	cmp.w	r4, #2048	; 0x800
2ffed6e6:	d303      	bcc.n	2ffed6f0 <runtime_svc_init+0x1c>
2ffed6e8:	2161      	movs	r1, #97	; 0x61
2ffed6ea:	482b      	ldr	r0, [pc, #172]	; (2ffed798 <runtime_svc_init+0xc4>)
2ffed6ec:	f00c f9e8 	bl	2fff9ac0 <__assert>
2ffed6f0:	2c0f      	cmp	r4, #15
2ffed6f2:	d90f      	bls.n	2ffed714 <runtime_svc_init+0x40>
2ffed6f4:	4829      	ldr	r0, [pc, #164]	; (2ffed79c <runtime_svc_init+0xc8>)
2ffed6f6:	2280      	movs	r2, #128	; 0x80
2ffed6f8:	4f28      	ldr	r7, [pc, #160]	; (2ffed79c <runtime_svc_init+0xc8>)
2ffed6fa:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffed6fe:	0924      	lsrs	r4, r4, #4
2ffed700:	f04f 0900 	mov.w	r9, #0
2ffed704:	f8df 809c 	ldr.w	r8, [pc, #156]	; 2ffed7a4 <runtime_svc_init+0xd0>
2ffed708:	f00c fa23 	bl	2fff9b52 <memset>
2ffed70c:	fa5f fa89 	uxtb.w	sl, r9
2ffed710:	4554      	cmp	r4, sl
2ffed712:	d801      	bhi.n	2ffed718 <runtime_svc_init+0x44>
2ffed714:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffed718:	ea4f 1b0a 	mov.w	fp, sl, lsl #4
2ffed71c:	eb06 150a 	add.w	r5, r6, sl, lsl #4
2ffed720:	f816 200b 	ldrb.w	r2, [r6, fp]
2ffed724:	786b      	ldrb	r3, [r5, #1]
2ffed726:	429a      	cmp	r2, r3
2ffed728:	d808      	bhi.n	2ffed73c <runtime_svc_init+0x68>
2ffed72a:	2b3f      	cmp	r3, #63	; 0x3f
2ffed72c:	d806      	bhi.n	2ffed73c <runtime_svc_init+0x68>
2ffed72e:	78ab      	ldrb	r3, [r5, #2]
2ffed730:	2b01      	cmp	r3, #1
2ffed732:	d803      	bhi.n	2ffed73c <runtime_svc_init+0x68>
2ffed734:	68ab      	ldr	r3, [r5, #8]
2ffed736:	b94b      	cbnz	r3, 2ffed74c <runtime_svc_init+0x78>
2ffed738:	68eb      	ldr	r3, [r5, #12]
2ffed73a:	b983      	cbnz	r3, 2ffed75e <runtime_svc_init+0x8a>
2ffed73c:	4818      	ldr	r0, [pc, #96]	; (2ffed7a0 <runtime_svc_init+0xcc>)
2ffed73e:	4629      	mov	r1, r5
2ffed740:	f005 f8cc 	bl	2fff28dc <tf_log>
2ffed744:	f005 f96e 	bl	2fff2a24 <console_flush>
2ffed748:	f00b e980 	blx	2fff8a4c <do_panic>
2ffed74c:	4798      	blx	r3
2ffed74e:	b130      	cbz	r0, 2ffed75e <runtime_svc_init+0x8a>
2ffed750:	6869      	ldr	r1, [r5, #4]
2ffed752:	4640      	mov	r0, r8
2ffed754:	f005 f8c2 	bl	2fff28dc <tf_log>
2ffed758:	f109 0901 	add.w	r9, r9, #1
2ffed75c:	e7d6      	b.n	2ffed70c <runtime_svc_init+0x38>
2ffed75e:	78ab      	ldrb	r3, [r5, #2]
2ffed760:	f816 100b 	ldrb.w	r1, [r6, fp]
2ffed764:	786a      	ldrb	r2, [r5, #1]
2ffed766:	019b      	lsls	r3, r3, #6
2ffed768:	f001 013f 	and.w	r1, r1, #63	; 0x3f
2ffed76c:	f003 0340 	and.w	r3, r3, #64	; 0x40
2ffed770:	f002 023f 	and.w	r2, r2, #63	; 0x3f
2ffed774:	ea41 0003 	orr.w	r0, r1, r3
2ffed778:	431a      	orrs	r2, r3
2ffed77a:	4290      	cmp	r0, r2
2ffed77c:	d901      	bls.n	2ffed782 <runtime_svc_init+0xae>
2ffed77e:	2195      	movs	r1, #149	; 0x95
2ffed780:	e7b3      	b.n	2ffed6ea <runtime_svc_init+0x16>
2ffed782:	f800 a007 	strb.w	sl, [r0, r7]
2ffed786:	3001      	adds	r0, #1
2ffed788:	b2c3      	uxtb	r3, r0
2ffed78a:	429a      	cmp	r2, r3
2ffed78c:	d2f9      	bcs.n	2ffed782 <runtime_svc_init+0xae>
2ffed78e:	e7e3      	b.n	2ffed758 <runtime_svc_init+0x84>
2ffed790:	2fffc734 	.word	0x2fffc734
2ffed794:	2fffc714 	.word	0x2fffc714
2ffed798:	2fff9f44 	.word	0x2fff9f44
2ffed79c:	2fffeb18 	.word	0x2fffeb18
2ffed7a0:	2fff9f59 	.word	0x2fff9f59
2ffed7a4:	2fff9f81 	.word	0x2fff9f81

2ffed7a8 <sp_min_plat_runtime_setup>:
2ffed7a8:	2002      	movs	r0, #2
2ffed7aa:	f005 b8fb 	b.w	2fff29a4 <console_switch_state>
	...

2ffed7b0 <std_svc_smc_handler>:
2ffed7b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffed7b2:	f64f 76e0 	movw	r6, #65504	; 0xffe0
2ffed7b6:	4230      	tst	r0, r6
2ffed7b8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
2ffed7ba:	d10c      	bne.n	2ffed7d6 <std_svc_smc_handler+0x26>
2ffed7bc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
2ffed7be:	9402      	str	r4, [sp, #8]
2ffed7c0:	9503      	str	r5, [sp, #12]
2ffed7c2:	9d09      	ldr	r5, [sp, #36]	; 0x24
2ffed7c4:	9501      	str	r5, [sp, #4]
2ffed7c6:	9d08      	ldr	r5, [sp, #32]
2ffed7c8:	9500      	str	r5, [sp, #0]
2ffed7ca:	f000 ff43 	bl	2ffee654 <psci_smc_handler>
2ffed7ce:	6020      	str	r0, [r4, #0]
2ffed7d0:	4620      	mov	r0, r4
2ffed7d2:	b004      	add	sp, #16
2ffed7d4:	bd70      	pop	{r4, r5, r6, pc}
2ffed7d6:	4b0f      	ldr	r3, [pc, #60]	; (2ffed814 <std_svc_smc_handler+0x64>)
2ffed7d8:	4298      	cmp	r0, r3
2ffed7da:	d008      	beq.n	2ffed7ee <std_svc_smc_handler+0x3e>
2ffed7dc:	3302      	adds	r3, #2
2ffed7de:	4298      	cmp	r0, r3
2ffed7e0:	d00d      	beq.n	2ffed7fe <std_svc_smc_handler+0x4e>
2ffed7e2:	3b03      	subs	r3, #3
2ffed7e4:	4298      	cmp	r0, r3
2ffed7e6:	d10e      	bne.n	2ffed806 <std_svc_smc_handler+0x56>
2ffed7e8:	2312      	movs	r3, #18
2ffed7ea:	6023      	str	r3, [r4, #0]
2ffed7ec:	e7f0      	b.n	2ffed7d0 <std_svc_smc_handler+0x20>
2ffed7ee:	4b0a      	ldr	r3, [pc, #40]	; (2ffed818 <std_svc_smc_handler+0x68>)
2ffed7f0:	4a0a      	ldr	r2, [pc, #40]	; (2ffed81c <std_svc_smc_handler+0x6c>)
2ffed7f2:	e9c4 3202 	strd	r3, r2, [r4, #8]
2ffed7f6:	4b0a      	ldr	r3, [pc, #40]	; (2ffed820 <std_svc_smc_handler+0x70>)
2ffed7f8:	6063      	str	r3, [r4, #4]
2ffed7fa:	4b0a      	ldr	r3, [pc, #40]	; (2ffed824 <std_svc_smc_handler+0x74>)
2ffed7fc:	e7f5      	b.n	2ffed7ea <std_svc_smc_handler+0x3a>
2ffed7fe:	2301      	movs	r3, #1
2ffed800:	6063      	str	r3, [r4, #4]
2ffed802:	2300      	movs	r3, #0
2ffed804:	e7f1      	b.n	2ffed7ea <std_svc_smc_handler+0x3a>
2ffed806:	4601      	mov	r1, r0
2ffed808:	4807      	ldr	r0, [pc, #28]	; (2ffed828 <std_svc_smc_handler+0x78>)
2ffed80a:	f005 f867 	bl	2fff28dc <tf_log>
2ffed80e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2ffed812:	e7ea      	b.n	2ffed7ea <std_svc_smc_handler+0x3a>
2ffed814:	8400ff01 	.word	0x8400ff01
2ffed818:	fbc02dae 	.word	0xfbc02dae
2ffed81c:	e2f64156 	.word	0xe2f64156
2ffed820:	47e8f863 	.word	0x47e8f863
2ffed824:	108d905b 	.word	0x108d905b
2ffed828:	2fff9fa9 	.word	0x2fff9fa9

2ffed82c <std_svc_setup>:
2ffed82c:	b508      	push	{r3, lr}
2ffed82e:	f64f 70e0 	movw	r0, #65504	; 0xffe0
2ffed832:	f7ff fe55 	bl	2ffed4e0 <get_arm_std_svc_args>
2ffed836:	b918      	cbnz	r0, 2ffed840 <std_svc_setup+0x14>
2ffed838:	4804      	ldr	r0, [pc, #16]	; (2ffed84c <std_svc_setup+0x20>)
2ffed83a:	2126      	movs	r1, #38	; 0x26
2ffed83c:	f00c f940 	bl	2fff9ac0 <__assert>
2ffed840:	f000 ffae 	bl	2ffee7a0 <psci_setup>
2ffed844:	3800      	subs	r0, #0
2ffed846:	bf18      	it	ne
2ffed848:	2001      	movne	r0, #1
2ffed84a:	bd08      	pop	{r3, pc}
2ffed84c:	2fff9fd6 	.word	0x2fff9fd6

2ffed850 <cm_setup_context>:
2ffed850:	b570      	push	{r4, r5, r6, lr}
2ffed852:	460d      	mov	r5, r1
2ffed854:	4604      	mov	r4, r0
2ffed856:	b918      	cbnz	r0, 2ffed860 <cm_setup_context+0x10>
2ffed858:	213e      	movs	r1, #62	; 0x3e
2ffed85a:	481a      	ldr	r0, [pc, #104]	; (2ffed8c4 <cm_setup_context+0x74>)
2ffed85c:	f00c f930 	bl	2fff9ac0 <__assert>
2ffed860:	684b      	ldr	r3, [r1, #4]
2ffed862:	2120      	movs	r1, #32
2ffed864:	f003 0601 	and.w	r6, r3, #1
2ffed868:	f00b ea46 	blx	2fff8cf8 <zero_normalmem>
2ffed86c:	ee11 2f11 	mrc	15, 0, r2, cr1, cr1, {0}
2ffed870:	f422 7280 	bic.w	r2, r2, #256	; 0x100
2ffed874:	f022 0201 	bic.w	r2, r2, #1
2ffed878:	68e9      	ldr	r1, [r5, #12]
2ffed87a:	b18e      	cbz	r6, 2ffed8a0 <cm_setup_context+0x50>
2ffed87c:	686b      	ldr	r3, [r5, #4]
2ffed87e:	f042 0201 	orr.w	r2, r2, #1
2ffed882:	0858      	lsrs	r0, r3, #1
2ffed884:	ea80 2051 	eor.w	r0, r0, r1, lsr #9
2ffed888:	07c0      	lsls	r0, r0, #31
2ffed88a:	d501      	bpl.n	2ffed890 <cm_setup_context+0x40>
2ffed88c:	2163      	movs	r1, #99	; 0x63
2ffed88e:	e7e4      	b.n	2ffed85a <cm_setup_context+0xa>
2ffed890:	061b      	lsls	r3, r3, #24
2ffed892:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
2ffed896:	f443 0345 	orr.w	r3, r3, #12910592	; 0xc50000
2ffed89a:	f043 0338 	orr.w	r3, r3, #56	; 0x38
2ffed89e:	61e3      	str	r3, [r4, #28]
2ffed8a0:	f001 031f 	and.w	r3, r1, #31
2ffed8a4:	4620      	mov	r0, r4
2ffed8a6:	2b1a      	cmp	r3, #26
2ffed8a8:	68ab      	ldr	r3, [r5, #8]
2ffed8aa:	bf08      	it	eq
2ffed8ac:	f442 7280 	orreq.w	r2, r2, #256	; 0x100
2ffed8b0:	6162      	str	r2, [r4, #20]
2ffed8b2:	2210      	movs	r2, #16
2ffed8b4:	61a1      	str	r1, [r4, #24]
2ffed8b6:	f105 0114 	add.w	r1, r5, #20
2ffed8ba:	6123      	str	r3, [r4, #16]
2ffed8bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffed8c0:	f00c b926 	b.w	2fff9b10 <memcpy>
2ffed8c4:	2fff9fff 	.word	0x2fff9fff

2ffed8c8 <cm_init_context_by_index>:
2ffed8c8:	b510      	push	{r4, lr}
2ffed8ca:	460c      	mov	r4, r1
2ffed8cc:	6849      	ldr	r1, [r1, #4]
2ffed8ce:	f001 0101 	and.w	r1, r1, #1
2ffed8d2:	f7ff fde5 	bl	2ffed4a0 <cm_get_context_by_index>
2ffed8d6:	4621      	mov	r1, r4
2ffed8d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed8dc:	f7ff bfb8 	b.w	2ffed850 <cm_setup_context>

2ffed8e0 <cm_init_my_context>:
2ffed8e0:	b510      	push	{r4, lr}
2ffed8e2:	4604      	mov	r4, r0
2ffed8e4:	6840      	ldr	r0, [r0, #4]
2ffed8e6:	f000 0001 	and.w	r0, r0, #1
2ffed8ea:	f7ff fdc7 	bl	2ffed47c <cm_get_context>
2ffed8ee:	4621      	mov	r1, r4
2ffed8f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed8f4:	f7ff bfac 	b.w	2ffed850 <cm_setup_context>

2ffed8f8 <cm_prepare_el3_exit>:
2ffed8f8:	b510      	push	{r4, lr}
2ffed8fa:	4604      	mov	r4, r0
2ffed8fc:	f7ff fdbe 	bl	2ffed47c <cm_get_context>
2ffed900:	b918      	cbnz	r0, 2ffed90a <cm_prepare_el3_exit+0x12>
2ffed902:	4828      	ldr	r0, [pc, #160]	; (2ffed9a4 <cm_prepare_el3_exit+0xac>)
2ffed904:	21b7      	movs	r1, #183	; 0xb7
2ffed906:	f00c f8db 	bl	2fff9ac0 <__assert>
2ffed90a:	2c01      	cmp	r4, #1
2ffed90c:	d11a      	bne.n	2ffed944 <cm_prepare_el3_exit+0x4c>
2ffed90e:	6943      	ldr	r3, [r0, #20]
2ffed910:	f413 7380 	ands.w	r3, r3, #256	; 0x100
2ffed914:	d017      	beq.n	2ffed946 <cm_prepare_el3_exit+0x4e>
2ffed916:	69c2      	ldr	r2, [r0, #28]
2ffed918:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed91c:	f043 0301 	orr.w	r3, r3, #1
2ffed920:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed924:	f3bf 8f6f 	isb	sy
2ffed928:	4b1f      	ldr	r3, [pc, #124]	; (2ffed9a8 <cm_prepare_el3_exit+0xb0>)
2ffed92a:	4313      	orrs	r3, r2
2ffed92c:	ee81 3f10 	mcr	15, 4, r3, cr1, cr0, {0}
2ffed930:	f3bf 8f6f 	isb	sy
2ffed934:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed938:	f023 0301 	bic.w	r3, r3, #1
2ffed93c:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed940:	f3bf 8f6f 	isb	sy
2ffed944:	bd10      	pop	{r4, pc}
2ffed946:	ee10 2f31 	mrc	15, 0, r2, cr0, cr1, {1}
2ffed94a:	f412 4f70 	tst.w	r2, #61440	; 0xf000
2ffed94e:	d0f9      	beq.n	2ffed944 <cm_prepare_el3_exit+0x4c>
2ffed950:	ee11 2f11 	mrc	15, 0, r2, cr1, cr1, {0}
2ffed954:	f042 0201 	orr.w	r2, r2, #1
2ffed958:	ee01 2f11 	mcr	15, 0, r2, cr1, cr1, {0}
2ffed95c:	f3bf 8f6f 	isb	sy
2ffed960:	ee81 3f11 	mcr	15, 4, r3, cr1, cr1, {0}
2ffed964:	f243 32ff 	movw	r2, #13311	; 0x33ff
2ffed968:	ee81 2f51 	mcr	15, 4, r2, cr1, cr1, {2}
2ffed96c:	2203      	movs	r2, #3
2ffed96e:	ee8e 2f11 	mcr	15, 4, r2, cr14, cr1, {0}
2ffed972:	2000      	movs	r0, #0
2ffed974:	2100      	movs	r1, #0
2ffed976:	ec41 0f4e 	mcrr	15, 4, r0, r1, cr14
2ffed97a:	ee10 2f10 	mrc	15, 0, r2, cr0, cr0, {0}
2ffed97e:	ee80 2f10 	mcr	15, 4, r2, cr0, cr0, {0}
2ffed982:	ee10 2fb0 	mrc	15, 0, r2, cr0, cr0, {5}
2ffed986:	ee80 2fb0 	mcr	15, 4, r2, cr0, cr0, {5}
2ffed98a:	ec41 0f62 	mcrr	15, 6, r0, r1, cr2
2ffed98e:	ee19 2f1c 	mrc	15, 0, r2, cr9, cr12, {0}
2ffed992:	f3c2 22c4 	ubfx	r2, r2, #11, #5
2ffed996:	ee81 2f31 	mcr	15, 4, r2, cr1, cr1, {1}
2ffed99a:	ee81 3f71 	mcr	15, 4, r3, cr1, cr1, {3}
2ffed99e:	ee8e 3f32 	mcr	15, 4, r3, cr14, cr2, {1}
2ffed9a2:	e7c5      	b.n	2ffed930 <cm_prepare_el3_exit+0x38>
2ffed9a4:	2fff9fff 	.word	0x2fff9fff
2ffed9a8:	30c50818 	.word	0x30c50818

2ffed9ac <errata_needs_reporting>:
2ffed9ac:	680b      	ldr	r3, [r1, #0]
2ffed9ae:	b570      	push	{r4, r5, r6, lr}
2ffed9b0:	4606      	mov	r6, r0
2ffed9b2:	460c      	mov	r4, r1
2ffed9b4:	b96b      	cbnz	r3, 2ffed9d2 <errata_needs_reporting+0x26>
2ffed9b6:	f00a efc4 	blx	2fff8940 <spin_lock>
2ffed9ba:	6823      	ldr	r3, [r4, #0]
2ffed9bc:	4630      	mov	r0, r6
2ffed9be:	2b00      	cmp	r3, #0
2ffed9c0:	bf03      	ittte	eq
2ffed9c2:	2301      	moveq	r3, #1
2ffed9c4:	2501      	moveq	r5, #1
2ffed9c6:	6023      	streq	r3, [r4, #0]
2ffed9c8:	2500      	movne	r5, #0
2ffed9ca:	f00a efcc 	blx	2fff8964 <spin_unlock>
2ffed9ce:	4628      	mov	r0, r5
2ffed9d0:	bd70      	pop	{r4, r5, r6, pc}
2ffed9d2:	2000      	movs	r0, #0
2ffed9d4:	e7fc      	b.n	2ffed9d0 <errata_needs_reporting+0x24>
	...

2ffed9d8 <psci_do_cpu_off>:
2ffed9d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffed9da:	4605      	mov	r5, r0
2ffed9dc:	4e29      	ldr	r6, [pc, #164]	; (2ffeda84 <psci_do_cpu_off+0xac>)
2ffed9de:	f00b ebba 	blx	2fff9154 <plat_my_core_pos>
2ffed9e2:	2400      	movs	r4, #0
2ffed9e4:	6833      	ldr	r3, [r6, #0]
2ffed9e6:	9401      	str	r4, [sp, #4]
2ffed9e8:	689b      	ldr	r3, [r3, #8]
2ffed9ea:	2b00      	cmp	r3, #0
2ffed9ec:	d038      	beq.n	2ffeda60 <psci_do_cpu_off+0x88>
2ffed9ee:	f240 2302 	movw	r3, #514	; 0x202
2ffed9f2:	aa01      	add	r2, sp, #4
2ffed9f4:	f8ad 3000 	strh.w	r3, [sp]
2ffed9f8:	4629      	mov	r1, r5
2ffed9fa:	f000 fa85 	bl	2ffedf08 <psci_get_parent_pwr_domain_nodes>
2ffed9fe:	a901      	add	r1, sp, #4
2ffeda00:	4628      	mov	r0, r5
2ffeda02:	f000 fb77 	bl	2ffee0f4 <psci_acquire_pwr_domain_locks>
2ffeda06:	4b20      	ldr	r3, [pc, #128]	; (2ffeda88 <psci_do_cpu_off+0xb0>)
2ffeda08:	681b      	ldr	r3, [r3, #0]
2ffeda0a:	bb6b      	cbnz	r3, 2ffeda68 <psci_do_cpu_off+0x90>
2ffeda0c:	4669      	mov	r1, sp
2ffeda0e:	4628      	mov	r0, r5
2ffeda10:	2400      	movs	r4, #0
2ffeda12:	f000 fad1 	bl	2ffedfb8 <psci_do_state_coordination>
2ffeda16:	4668      	mov	r0, sp
2ffeda18:	f000 fb2c 	bl	2ffee074 <psci_find_max_off_lvl>
2ffeda1c:	f000 fca6 	bl	2ffee36c <psci_do_pwrdown_sequence>
2ffeda20:	6833      	ldr	r3, [r6, #0]
2ffeda22:	4668      	mov	r0, sp
2ffeda24:	689b      	ldr	r3, [r3, #8]
2ffeda26:	4798      	blx	r3
2ffeda28:	a901      	add	r1, sp, #4
2ffeda2a:	4628      	mov	r0, r5
2ffeda2c:	f000 fb7a 	bl	2ffee124 <psci_release_pwr_domain_locks>
2ffeda30:	bb2c      	cbnz	r4, 2ffeda7e <psci_do_cpu_off+0xa6>
2ffeda32:	f00a eeda 	blx	2fff87e8 <_cpu_data>
2ffeda36:	2104      	movs	r1, #4
2ffeda38:	4408      	add	r0, r1
2ffeda3a:	f00b e8a4 	blx	2fff8b84 <flush_dcache_range>
2ffeda3e:	f00a eed4 	blx	2fff87e8 <_cpu_data>
2ffeda42:	2301      	movs	r3, #1
2ffeda44:	6043      	str	r3, [r0, #4]
2ffeda46:	f3bf 8f4b 	dsb	ish
2ffeda4a:	f00a eece 	blx	2fff87e8 <_cpu_data>
2ffeda4e:	2104      	movs	r1, #4
2ffeda50:	4408      	add	r0, r1
2ffeda52:	f00b e8d4 	blx	2fff8bfc <inv_dcache_range>
2ffeda56:	6833      	ldr	r3, [r6, #0]
2ffeda58:	6a1b      	ldr	r3, [r3, #32]
2ffeda5a:	b173      	cbz	r3, 2ffeda7a <psci_do_cpu_off+0xa2>
2ffeda5c:	4668      	mov	r0, sp
2ffeda5e:	4798      	blx	r3
2ffeda60:	480a      	ldr	r0, [pc, #40]	; (2ffeda8c <psci_do_cpu_off+0xb4>)
2ffeda62:	2136      	movs	r1, #54	; 0x36
2ffeda64:	f00c f82c 	bl	2fff9ac0 <__assert>
2ffeda68:	685b      	ldr	r3, [r3, #4]
2ffeda6a:	2b00      	cmp	r3, #0
2ffeda6c:	d0ce      	beq.n	2ffeda0c <psci_do_cpu_off+0x34>
2ffeda6e:	4620      	mov	r0, r4
2ffeda70:	4798      	blx	r3
2ffeda72:	4604      	mov	r4, r0
2ffeda74:	2800      	cmp	r0, #0
2ffeda76:	d0c9      	beq.n	2ffeda0c <psci_do_cpu_off+0x34>
2ffeda78:	e7d6      	b.n	2ffeda28 <psci_do_cpu_off+0x50>
2ffeda7a:	f00a efc2 	blx	2fff8a00 <psci_power_down_wfi>
2ffeda7e:	4620      	mov	r0, r4
2ffeda80:	b002      	add	sp, #8
2ffeda82:	bd70      	pop	{r4, r5, r6, pc}
2ffeda84:	2fffec78 	.word	0x2fffec78
2ffeda88:	2fffec7c 	.word	0x2fffec7c
2ffeda8c:	2fffa026 	.word	0x2fffa026

2ffeda90 <psci_cpu_on_start>:
2ffeda90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffeda94:	4605      	mov	r5, r0
2ffeda96:	460f      	mov	r7, r1
2ffeda98:	f003 f9d4 	bl	2fff0e44 <plat_core_pos_by_mpidr>
2ffeda9c:	1e04      	subs	r4, r0, #0
2ffeda9e:	da03      	bge.n	2ffedaa8 <psci_cpu_on_start+0x18>
2ffedaa0:	2143      	movs	r1, #67	; 0x43
2ffedaa2:	4842      	ldr	r0, [pc, #264]	; (2ffedbac <psci_cpu_on_start+0x11c>)
2ffedaa4:	f00c f80c 	bl	2fff9ac0 <__assert>
2ffedaa8:	b90f      	cbnz	r7, 2ffedaae <psci_cpu_on_start+0x1e>
2ffedaaa:	2144      	movs	r1, #68	; 0x44
2ffedaac:	e7f9      	b.n	2ffedaa2 <psci_cpu_on_start+0x12>
2ffedaae:	4a40      	ldr	r2, [pc, #256]	; (2ffedbb0 <psci_cpu_on_start+0x120>)
2ffedab0:	6813      	ldr	r3, [r2, #0]
2ffedab2:	4690      	mov	r8, r2
2ffedab4:	6859      	ldr	r1, [r3, #4]
2ffedab6:	b109      	cbz	r1, 2ffedabc <psci_cpu_on_start+0x2c>
2ffedab8:	695b      	ldr	r3, [r3, #20]
2ffedaba:	b90b      	cbnz	r3, 2ffedac0 <psci_cpu_on_start+0x30>
2ffedabc:	214a      	movs	r1, #74	; 0x4a
2ffedabe:	e7f0      	b.n	2ffedaa2 <psci_cpu_on_start+0x12>
2ffedac0:	4b3c      	ldr	r3, [pc, #240]	; (2ffedbb4 <psci_cpu_on_start+0x124>)
2ffedac2:	260c      	movs	r6, #12
2ffedac4:	fb06 3604 	mla	r6, r6, r4, r3
2ffedac8:	4630      	mov	r0, r6
2ffedaca:	f00a ef3a 	blx	2fff8940 <spin_lock>
2ffedace:	4620      	mov	r0, r4
2ffedad0:	f00a ee92 	blx	2fff87f8 <_cpu_data_by_index>
2ffedad4:	2104      	movs	r1, #4
2ffedad6:	4408      	add	r0, r1
2ffedad8:	f00b e854 	blx	2fff8b84 <flush_dcache_range>
2ffedadc:	4620      	mov	r0, r4
2ffedade:	f00a ee8c 	blx	2fff87f8 <_cpu_data_by_index>
2ffedae2:	6843      	ldr	r3, [r0, #4]
2ffedae4:	2b00      	cmp	r3, #0
2ffedae6:	d05a      	beq.n	2ffedb9e <psci_cpu_on_start+0x10e>
2ffedae8:	2b02      	cmp	r3, #2
2ffedaea:	d05b      	beq.n	2ffedba4 <psci_cpu_on_start+0x114>
2ffedaec:	2b01      	cmp	r3, #1
2ffedaee:	d001      	beq.n	2ffedaf4 <psci_cpu_on_start+0x64>
2ffedaf0:	212d      	movs	r1, #45	; 0x2d
2ffedaf2:	e7d6      	b.n	2ffedaa2 <psci_cpu_on_start+0x12>
2ffedaf4:	4b30      	ldr	r3, [pc, #192]	; (2ffedbb8 <psci_cpu_on_start+0x128>)
2ffedaf6:	681b      	ldr	r3, [r3, #0]
2ffedaf8:	b11b      	cbz	r3, 2ffedb02 <psci_cpu_on_start+0x72>
2ffedafa:	681b      	ldr	r3, [r3, #0]
2ffedafc:	b10b      	cbz	r3, 2ffedb02 <psci_cpu_on_start+0x72>
2ffedafe:	4628      	mov	r0, r5
2ffedb00:	4798      	blx	r3
2ffedb02:	4620      	mov	r0, r4
2ffedb04:	f04f 0902 	mov.w	r9, #2
2ffedb08:	f00a ee76 	blx	2fff87f8 <_cpu_data_by_index>
2ffedb0c:	f8c0 9004 	str.w	r9, [r0, #4]
2ffedb10:	4620      	mov	r0, r4
2ffedb12:	f00a ee72 	blx	2fff87f8 <_cpu_data_by_index>
2ffedb16:	2104      	movs	r1, #4
2ffedb18:	4408      	add	r0, r1
2ffedb1a:	f00b e834 	blx	2fff8b84 <flush_dcache_range>
2ffedb1e:	4620      	mov	r0, r4
2ffedb20:	f00a ee6a 	blx	2fff87f8 <_cpu_data_by_index>
2ffedb24:	6843      	ldr	r3, [r0, #4]
2ffedb26:	454b      	cmp	r3, r9
2ffedb28:	d017      	beq.n	2ffedb5a <psci_cpu_on_start+0xca>
2ffedb2a:	2b01      	cmp	r3, #1
2ffedb2c:	d001      	beq.n	2ffedb32 <psci_cpu_on_start+0xa2>
2ffedb2e:	217f      	movs	r1, #127	; 0x7f
2ffedb30:	e7b7      	b.n	2ffedaa2 <psci_cpu_on_start+0x12>
2ffedb32:	4620      	mov	r0, r4
2ffedb34:	f00a ee60 	blx	2fff87f8 <_cpu_data_by_index>
2ffedb38:	f8c0 9004 	str.w	r9, [r0, #4]
2ffedb3c:	4620      	mov	r0, r4
2ffedb3e:	f00a ee5c 	blx	2fff87f8 <_cpu_data_by_index>
2ffedb42:	2104      	movs	r1, #4
2ffedb44:	4408      	add	r0, r1
2ffedb46:	f00b e81e 	blx	2fff8b84 <flush_dcache_range>
2ffedb4a:	4620      	mov	r0, r4
2ffedb4c:	f00a ee54 	blx	2fff87f8 <_cpu_data_by_index>
2ffedb50:	6843      	ldr	r3, [r0, #4]
2ffedb52:	2b02      	cmp	r3, #2
2ffedb54:	d001      	beq.n	2ffedb5a <psci_cpu_on_start+0xca>
2ffedb56:	2184      	movs	r1, #132	; 0x84
2ffedb58:	e7a3      	b.n	2ffedaa2 <psci_cpu_on_start+0x12>
2ffedb5a:	f8d8 3000 	ldr.w	r3, [r8]
2ffedb5e:	4628      	mov	r0, r5
2ffedb60:	685b      	ldr	r3, [r3, #4]
2ffedb62:	4798      	blx	r3
2ffedb64:	4605      	mov	r5, r0
2ffedb66:	b118      	cbz	r0, 2ffedb70 <psci_cpu_on_start+0xe0>
2ffedb68:	1d83      	adds	r3, r0, #6
2ffedb6a:	d00b      	beq.n	2ffedb84 <psci_cpu_on_start+0xf4>
2ffedb6c:	2191      	movs	r1, #145	; 0x91
2ffedb6e:	e798      	b.n	2ffedaa2 <psci_cpu_on_start+0x12>
2ffedb70:	4639      	mov	r1, r7
2ffedb72:	4620      	mov	r0, r4
2ffedb74:	f7ff fea8 	bl	2ffed8c8 <cm_init_context_by_index>
2ffedb78:	4630      	mov	r0, r6
2ffedb7a:	f00a eef4 	blx	2fff8964 <spin_unlock>
2ffedb7e:	4628      	mov	r0, r5
2ffedb80:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffedb84:	4620      	mov	r0, r4
2ffedb86:	f00a ee38 	blx	2fff87f8 <_cpu_data_by_index>
2ffedb8a:	2301      	movs	r3, #1
2ffedb8c:	6043      	str	r3, [r0, #4]
2ffedb8e:	4620      	mov	r0, r4
2ffedb90:	f00a ee32 	blx	2fff87f8 <_cpu_data_by_index>
2ffedb94:	2104      	movs	r1, #4
2ffedb96:	4408      	add	r0, r1
2ffedb98:	f00a eff4 	blx	2fff8b84 <flush_dcache_range>
2ffedb9c:	e7ec      	b.n	2ffedb78 <psci_cpu_on_start+0xe8>
2ffedb9e:	f06f 0503 	mvn.w	r5, #3
2ffedba2:	e7e9      	b.n	2ffedb78 <psci_cpu_on_start+0xe8>
2ffedba4:	f06f 0504 	mvn.w	r5, #4
2ffedba8:	e7e6      	b.n	2ffedb78 <psci_cpu_on_start+0xe8>
2ffedbaa:	bf00      	nop
2ffedbac:	2fffa03a 	.word	0x2fffa03a
2ffedbb0:	2fffec78 	.word	0x2fffec78
2ffedbb4:	2fffec48 	.word	0x2fffec48
2ffedbb8:	2fffec7c 	.word	0x2fffec7c

2ffedbbc <psci_cpu_on_finish>:
2ffedbbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffedbbe:	4605      	mov	r5, r0
2ffedbc0:	4e1f      	ldr	r6, [pc, #124]	; (2ffedc40 <psci_cpu_on_finish+0x84>)
2ffedbc2:	4608      	mov	r0, r1
2ffedbc4:	460c      	mov	r4, r1
2ffedbc6:	6833      	ldr	r3, [r6, #0]
2ffedbc8:	695b      	ldr	r3, [r3, #20]
2ffedbca:	4798      	blx	r3
2ffedbcc:	f00a eee2 	blx	2fff8994 <psci_do_pwrup_cache_maintenance>
2ffedbd0:	6833      	ldr	r3, [r6, #0]
2ffedbd2:	699b      	ldr	r3, [r3, #24]
2ffedbd4:	b10b      	cbz	r3, 2ffedbda <psci_cpu_on_finish+0x1e>
2ffedbd6:	4620      	mov	r0, r4
2ffedbd8:	4798      	blx	r3
2ffedbda:	4e1a      	ldr	r6, [pc, #104]	; (2ffedc44 <psci_cpu_on_finish+0x88>)
2ffedbdc:	240c      	movs	r4, #12
2ffedbde:	436c      	muls	r4, r5
2ffedbe0:	f000 fdd2 	bl	2ffee788 <psci_arch_setup>
2ffedbe4:	3408      	adds	r4, #8
2ffedbe6:	4434      	add	r4, r6
2ffedbe8:	4620      	mov	r0, r4
2ffedbea:	f00a eeaa 	blx	2fff8940 <spin_lock>
2ffedbee:	4620      	mov	r0, r4
2ffedbf0:	4634      	mov	r4, r6
2ffedbf2:	f00a eeb8 	blx	2fff8964 <spin_unlock>
2ffedbf6:	f00a edf8 	blx	2fff87e8 <_cpu_data>
2ffedbfa:	6843      	ldr	r3, [r0, #4]
2ffedbfc:	2b02      	cmp	r3, #2
2ffedbfe:	d003      	beq.n	2ffedc08 <psci_cpu_on_finish+0x4c>
2ffedc00:	4811      	ldr	r0, [pc, #68]	; (2ffedc48 <psci_cpu_on_finish+0x8c>)
2ffedc02:	21d1      	movs	r1, #209	; 0xd1
2ffedc04:	f00b ff5c 	bl	2fff9ac0 <__assert>
2ffedc08:	4b10      	ldr	r3, [pc, #64]	; (2ffedc4c <psci_cpu_on_finish+0x90>)
2ffedc0a:	681b      	ldr	r3, [r3, #0]
2ffedc0c:	b11b      	cbz	r3, 2ffedc16 <psci_cpu_on_finish+0x5a>
2ffedc0e:	68db      	ldr	r3, [r3, #12]
2ffedc10:	b10b      	cbz	r3, 2ffedc16 <psci_cpu_on_finish+0x5a>
2ffedc12:	2000      	movs	r0, #0
2ffedc14:	4798      	blx	r3
2ffedc16:	4e0e      	ldr	r6, [pc, #56]	; (2ffedc50 <psci_cpu_on_finish+0x94>)
2ffedc18:	4f0e      	ldr	r7, [pc, #56]	; (2ffedc54 <psci_cpu_on_finish+0x98>)
2ffedc1a:	42be      	cmp	r6, r7
2ffedc1c:	d30b      	bcc.n	2ffedc36 <psci_cpu_on_finish+0x7a>
2ffedc1e:	ee10 3fb0 	mrc	15, 0, r3, cr0, cr0, {5}
2ffedc22:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
2ffedc26:	200c      	movs	r0, #12
2ffedc28:	4345      	muls	r5, r0
2ffedc2a:	2001      	movs	r0, #1
2ffedc2c:	5163      	str	r3, [r4, r5]
2ffedc2e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2ffedc32:	f7ff be61 	b.w	2ffed8f8 <cm_prepare_el3_exit>
2ffedc36:	f856 3b04 	ldr.w	r3, [r6], #4
2ffedc3a:	2000      	movs	r0, #0
2ffedc3c:	4798      	blx	r3
2ffedc3e:	e7ec      	b.n	2ffedc1a <psci_cpu_on_finish+0x5e>
2ffedc40:	2fffec78 	.word	0x2fffec78
2ffedc44:	2fffec40 	.word	0x2fffec40
2ffedc48:	2fffa03a 	.word	0x2fffa03a
2ffedc4c:	2fffec7c 	.word	0x2fffec7c
2ffedc50:	2fffc750 	.word	0x2fffc750
2ffedc54:	2fffc750 	.word	0x2fffc750

2ffedc58 <psci_cpu_suspend_start>:
2ffedc58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffedc5c:	b085      	sub	sp, #20
2ffedc5e:	4d41      	ldr	r5, [pc, #260]	; (2ffedd64 <psci_cpu_suspend_start+0x10c>)
2ffedc60:	4616      	mov	r6, r2
2ffedc62:	461f      	mov	r7, r3
2ffedc64:	4682      	mov	sl, r0
2ffedc66:	460c      	mov	r4, r1
2ffedc68:	f00b ea74 	blx	2fff9154 <plat_my_core_pos>
2ffedc6c:	2300      	movs	r3, #0
2ffedc6e:	4681      	mov	r9, r0
2ffedc70:	9302      	str	r3, [sp, #8]
2ffedc72:	682b      	ldr	r3, [r5, #0]
2ffedc74:	691a      	ldr	r2, [r3, #16]
2ffedc76:	b10a      	cbz	r2, 2ffedc7c <psci_cpu_suspend_start+0x24>
2ffedc78:	69db      	ldr	r3, [r3, #28]
2ffedc7a:	b91b      	cbnz	r3, 2ffedc84 <psci_cpu_suspend_start+0x2c>
2ffedc7c:	483a      	ldr	r0, [pc, #232]	; (2ffedd68 <psci_cpu_suspend_start+0x110>)
2ffedc7e:	21a7      	movs	r1, #167	; 0xa7
2ffedc80:	f00b ff1e 	bl	2fff9ac0 <__assert>
2ffedc84:	aa02      	add	r2, sp, #8
2ffedc86:	4621      	mov	r1, r4
2ffedc88:	f000 f93e 	bl	2ffedf08 <psci_get_parent_pwr_domain_nodes>
2ffedc8c:	a902      	add	r1, sp, #8
2ffedc8e:	4620      	mov	r0, r4
2ffedc90:	f000 fa30 	bl	2ffee0f4 <psci_acquire_pwr_domain_locks>
2ffedc94:	ee1c 3f11 	mrc	15, 0, r3, cr12, cr1, {0}
2ffedc98:	2b00      	cmp	r3, #0
2ffedc9a:	d140      	bne.n	2ffedd1e <psci_cpu_suspend_start+0xc6>
2ffedc9c:	4631      	mov	r1, r6
2ffedc9e:	4620      	mov	r0, r4
2ffedca0:	f000 f98a 	bl	2ffedfb8 <psci_do_state_coordination>
2ffedca4:	b31f      	cbz	r7, 2ffedcee <psci_cpu_suspend_start+0x96>
2ffedca6:	f8df b0cc 	ldr.w	fp, [pc, #204]	; 2ffedd74 <psci_cpu_suspend_start+0x11c>
2ffedcaa:	4630      	mov	r0, r6
2ffedcac:	f000 f9e2 	bl	2ffee074 <psci_find_max_off_lvl>
2ffedcb0:	4680      	mov	r8, r0
2ffedcb2:	4b2e      	ldr	r3, [pc, #184]	; (2ffedd6c <psci_cpu_suspend_start+0x114>)
2ffedcb4:	459b      	cmp	fp, r3
2ffedcb6:	d32d      	bcc.n	2ffedd14 <psci_cpu_suspend_start+0xbc>
2ffedcb8:	f00a ed96 	blx	2fff87e8 <_cpu_data>
2ffedcbc:	6084      	str	r4, [r0, #8]
2ffedcbe:	f00a ed94 	blx	2fff87e8 <_cpu_data>
2ffedcc2:	3008      	adds	r0, #8
2ffedcc4:	2104      	movs	r1, #4
2ffedcc6:	f00a ef5e 	blx	2fff8b84 <flush_dcache_range>
2ffedcca:	4b29      	ldr	r3, [pc, #164]	; (2ffedd70 <psci_cpu_suspend_start+0x118>)
2ffedccc:	681b      	ldr	r3, [r3, #0]
2ffedcce:	b11b      	cbz	r3, 2ffedcd8 <psci_cpu_suspend_start+0x80>
2ffedcd0:	689b      	ldr	r3, [r3, #8]
2ffedcd2:	b10b      	cbz	r3, 2ffedcd8 <psci_cpu_suspend_start+0x80>
2ffedcd4:	4640      	mov	r0, r8
2ffedcd6:	4798      	blx	r3
2ffedcd8:	682b      	ldr	r3, [r5, #0]
2ffedcda:	68db      	ldr	r3, [r3, #12]
2ffedcdc:	b10b      	cbz	r3, 2ffedce2 <psci_cpu_suspend_start+0x8a>
2ffedcde:	4630      	mov	r0, r6
2ffedce0:	4798      	blx	r3
2ffedce2:	4650      	mov	r0, sl
2ffedce4:	f7ff fdfc 	bl	2ffed8e0 <cm_init_my_context>
2ffedce8:	4640      	mov	r0, r8
2ffedcea:	f000 fb3f 	bl	2ffee36c <psci_do_pwrdown_sequence>
2ffedcee:	682b      	ldr	r3, [r5, #0]
2ffedcf0:	4630      	mov	r0, r6
2ffedcf2:	f04f 0800 	mov.w	r8, #0
2ffedcf6:	691b      	ldr	r3, [r3, #16]
2ffedcf8:	4798      	blx	r3
2ffedcfa:	a902      	add	r1, sp, #8
2ffedcfc:	4620      	mov	r0, r4
2ffedcfe:	f000 fa11 	bl	2ffee124 <psci_release_pwr_domain_locks>
2ffedd02:	f1b8 0f00 	cmp.w	r8, #0
2ffedd06:	d129      	bne.n	2ffedd5c <psci_cpu_suspend_start+0x104>
2ffedd08:	b177      	cbz	r7, 2ffedd28 <psci_cpu_suspend_start+0xd0>
2ffedd0a:	682b      	ldr	r3, [r5, #0]
2ffedd0c:	6a1b      	ldr	r3, [r3, #32]
2ffedd0e:	b14b      	cbz	r3, 2ffedd24 <psci_cpu_suspend_start+0xcc>
2ffedd10:	4630      	mov	r0, r6
2ffedd12:	4798      	blx	r3
2ffedd14:	f85b 2b04 	ldr.w	r2, [fp], #4
2ffedd18:	2000      	movs	r0, #0
2ffedd1a:	4790      	blx	r2
2ffedd1c:	e7c9      	b.n	2ffedcb2 <psci_cpu_suspend_start+0x5a>
2ffedd1e:	f04f 0801 	mov.w	r8, #1
2ffedd22:	e7ea      	b.n	2ffedcfa <psci_cpu_suspend_start+0xa2>
2ffedd24:	f00a ee6c 	blx	2fff8a00 <psci_power_down_wfi>
2ffedd28:	bf30      	wfi
2ffedd2a:	9703      	str	r7, [sp, #12]
2ffedd2c:	aa03      	add	r2, sp, #12
2ffedd2e:	4621      	mov	r1, r4
2ffedd30:	4648      	mov	r0, r9
2ffedd32:	f000 f8e9 	bl	2ffedf08 <psci_get_parent_pwr_domain_nodes>
2ffedd36:	a903      	add	r1, sp, #12
2ffedd38:	4620      	mov	r0, r4
2ffedd3a:	f000 f9db 	bl	2ffee0f4 <psci_acquire_pwr_domain_locks>
2ffedd3e:	a901      	add	r1, sp, #4
2ffedd40:	4620      	mov	r0, r4
2ffedd42:	f000 f8b7 	bl	2ffedeb4 <psci_get_target_local_pwr_states>
2ffedd46:	682b      	ldr	r3, [r5, #0]
2ffedd48:	a801      	add	r0, sp, #4
2ffedd4a:	69db      	ldr	r3, [r3, #28]
2ffedd4c:	4798      	blx	r3
2ffedd4e:	4620      	mov	r0, r4
2ffedd50:	f000 f8f0 	bl	2ffedf34 <psci_set_pwr_domains_to_run>
2ffedd54:	a903      	add	r1, sp, #12
2ffedd56:	4620      	mov	r0, r4
2ffedd58:	f000 f9e4 	bl	2ffee124 <psci_release_pwr_domain_locks>
2ffedd5c:	b005      	add	sp, #20
2ffedd5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffedd62:	bf00      	nop
2ffedd64:	2fffec78 	.word	0x2fffec78
2ffedd68:	2fffa04d 	.word	0x2fffa04d
2ffedd6c:	2fffc750 	.word	0x2fffc750
2ffedd70:	2fffec7c 	.word	0x2fffec7c
2ffedd74:	2fffc750 	.word	0x2fffc750

2ffedd78 <psci_cpu_suspend_finish>:
2ffedd78:	b538      	push	{r3, r4, r5, lr}
2ffedd7a:	460c      	mov	r4, r1
2ffedd7c:	f00a ed34 	blx	2fff87e8 <_cpu_data>
2ffedd80:	6843      	ldr	r3, [r0, #4]
2ffedd82:	b913      	cbnz	r3, 2ffedd8a <psci_cpu_suspend_finish+0x12>
2ffedd84:	7823      	ldrb	r3, [r4, #0]
2ffedd86:	2b02      	cmp	r3, #2
2ffedd88:	d004      	beq.n	2ffedd94 <psci_cpu_suspend_finish+0x1c>
2ffedd8a:	f240 111d 	movw	r1, #285	; 0x11d
2ffedd8e:	4818      	ldr	r0, [pc, #96]	; (2ffeddf0 <psci_cpu_suspend_finish+0x78>)
2ffedd90:	f00b fe96 	bl	2fff9ac0 <__assert>
2ffedd94:	4b17      	ldr	r3, [pc, #92]	; (2ffeddf4 <psci_cpu_suspend_finish+0x7c>)
2ffedd96:	4620      	mov	r0, r4
2ffedd98:	681b      	ldr	r3, [r3, #0]
2ffedd9a:	69db      	ldr	r3, [r3, #28]
2ffedd9c:	4798      	blx	r3
2ffedd9e:	f00a edfa 	blx	2fff8994 <psci_do_pwrup_cache_maintenance>
2ffedda2:	f004 ff52 	bl	2fff2c4a <plat_get_syscnt_freq2>
2ffedda6:	ee0e 0f10 	mcr	15, 0, r0, cr14, cr0, {0}
2ffeddaa:	4d13      	ldr	r5, [pc, #76]	; (2ffeddf8 <psci_cpu_suspend_finish+0x80>)
2ffeddac:	682b      	ldr	r3, [r5, #0]
2ffeddae:	b163      	cbz	r3, 2ffeddca <psci_cpu_suspend_finish+0x52>
2ffeddb0:	691b      	ldr	r3, [r3, #16]
2ffeddb2:	b153      	cbz	r3, 2ffeddca <psci_cpu_suspend_finish+0x52>
2ffeddb4:	4620      	mov	r0, r4
2ffeddb6:	f000 f95d 	bl	2ffee074 <psci_find_max_off_lvl>
2ffeddba:	2802      	cmp	r0, #2
2ffeddbc:	d102      	bne.n	2ffeddc4 <psci_cpu_suspend_finish+0x4c>
2ffeddbe:	f44f 71a0 	mov.w	r1, #320	; 0x140
2ffeddc2:	e7e4      	b.n	2ffedd8e <psci_cpu_suspend_finish+0x16>
2ffeddc4:	682b      	ldr	r3, [r5, #0]
2ffeddc6:	691b      	ldr	r3, [r3, #16]
2ffeddc8:	4798      	blx	r3
2ffeddca:	4c0c      	ldr	r4, [pc, #48]	; (2ffeddfc <psci_cpu_suspend_finish+0x84>)
2ffeddcc:	f00a ed0c 	blx	2fff87e8 <_cpu_data>
2ffeddd0:	4d0b      	ldr	r5, [pc, #44]	; (2ffede00 <psci_cpu_suspend_finish+0x88>)
2ffeddd2:	2302      	movs	r3, #2
2ffeddd4:	6083      	str	r3, [r0, #8]
2ffeddd6:	42ac      	cmp	r4, r5
2ffeddd8:	d304      	bcc.n	2ffedde4 <psci_cpu_suspend_finish+0x6c>
2ffeddda:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffeddde:	2001      	movs	r0, #1
2ffedde0:	f7ff bd8a 	b.w	2ffed8f8 <cm_prepare_el3_exit>
2ffedde4:	f854 3b04 	ldr.w	r3, [r4], #4
2ffedde8:	2000      	movs	r0, #0
2ffeddea:	4798      	blx	r3
2ffeddec:	e7f3      	b.n	2ffeddd6 <psci_cpu_suspend_finish+0x5e>
2ffeddee:	bf00      	nop
2ffeddf0:	2fffa04d 	.word	0x2fffa04d
2ffeddf4:	2fffec78 	.word	0x2fffec78
2ffeddf8:	2fffec7c 	.word	0x2fffec7c
2ffeddfc:	2fffc750 	.word	0x2fffc750
2ffede00:	2fffc750 	.word	0x2fffc750

2ffede04 <psci_validate_power_state>:
2ffede04:	4b08      	ldr	r3, [pc, #32]	; (2ffede28 <psci_validate_power_state+0x24>)
2ffede06:	b510      	push	{r4, lr}
2ffede08:	4003      	ands	r3, r0
2ffede0a:	b953      	cbnz	r3, 2ffede22 <psci_validate_power_state+0x1e>
2ffede0c:	4b07      	ldr	r3, [pc, #28]	; (2ffede2c <psci_validate_power_state+0x28>)
2ffede0e:	681b      	ldr	r3, [r3, #0]
2ffede10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
2ffede12:	b91b      	cbnz	r3, 2ffede1c <psci_validate_power_state+0x18>
2ffede14:	4806      	ldr	r0, [pc, #24]	; (2ffede30 <psci_validate_power_state+0x2c>)
2ffede16:	2182      	movs	r1, #130	; 0x82
2ffede18:	f00b fe52 	bl	2fff9ac0 <__assert>
2ffede1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffede20:	4718      	bx	r3
2ffede22:	f06f 0001 	mvn.w	r0, #1
2ffede26:	bd10      	pop	{r4, pc}
2ffede28:	fcfe0000 	.word	0xfcfe0000
2ffede2c:	2fffec78 	.word	0x2fffec78
2ffede30:	2fffa065 	.word	0x2fffa065

2ffede34 <psci_query_sys_suspend_pwrstate>:
2ffede34:	4b05      	ldr	r3, [pc, #20]	; (2ffede4c <psci_query_sys_suspend_pwrstate+0x18>)
2ffede36:	b510      	push	{r4, lr}
2ffede38:	681b      	ldr	r3, [r3, #0]
2ffede3a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
2ffede3c:	b91b      	cbnz	r3, 2ffede46 <psci_query_sys_suspend_pwrstate+0x12>
2ffede3e:	4804      	ldr	r0, [pc, #16]	; (2ffede50 <psci_query_sys_suspend_pwrstate+0x1c>)
2ffede40:	2192      	movs	r1, #146	; 0x92
2ffede42:	f00b fe3d 	bl	2fff9ac0 <__assert>
2ffede46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffede4a:	4718      	bx	r3
2ffede4c:	2fffec78 	.word	0x2fffec78
2ffede50:	2fffa065 	.word	0x2fffa065

2ffede54 <psci_is_last_on_cpu>:
2ffede54:	b510      	push	{r4, lr}
2ffede56:	f00b e97e 	blx	2fff9154 <plat_my_core_pos>
2ffede5a:	4604      	mov	r4, r0
2ffede5c:	b138      	cbz	r0, 2ffede6e <psci_is_last_on_cpu+0x1a>
2ffede5e:	2000      	movs	r0, #0
2ffede60:	f00a ecca 	blx	2fff87f8 <_cpu_data_by_index>
2ffede64:	6843      	ldr	r3, [r0, #4]
2ffede66:	2b01      	cmp	r3, #1
2ffede68:	d009      	beq.n	2ffede7e <psci_is_last_on_cpu+0x2a>
2ffede6a:	2000      	movs	r0, #0
2ffede6c:	e00f      	b.n	2ffede8e <psci_is_last_on_cpu+0x3a>
2ffede6e:	f00a ecbc 	blx	2fff87e8 <_cpu_data>
2ffede72:	6843      	ldr	r3, [r0, #4]
2ffede74:	b163      	cbz	r3, 2ffede90 <psci_is_last_on_cpu+0x3c>
2ffede76:	480a      	ldr	r0, [pc, #40]	; (2ffedea0 <psci_is_last_on_cpu+0x4c>)
2ffede78:	21a7      	movs	r1, #167	; 0xa7
2ffede7a:	f00b fe21 	bl	2fff9ac0 <__assert>
2ffede7e:	2c01      	cmp	r4, #1
2ffede80:	d106      	bne.n	2ffede90 <psci_is_last_on_cpu+0x3c>
2ffede82:	f00a ecb2 	blx	2fff87e8 <_cpu_data>
2ffede86:	6843      	ldr	r3, [r0, #4]
2ffede88:	2b00      	cmp	r3, #0
2ffede8a:	d1f4      	bne.n	2ffede76 <psci_is_last_on_cpu+0x22>
2ffede8c:	2001      	movs	r0, #1
2ffede8e:	bd10      	pop	{r4, pc}
2ffede90:	2001      	movs	r0, #1
2ffede92:	f00a ecb2 	blx	2fff87f8 <_cpu_data_by_index>
2ffede96:	6843      	ldr	r3, [r0, #4]
2ffede98:	2b01      	cmp	r3, #1
2ffede9a:	d0f7      	beq.n	2ffede8c <psci_is_last_on_cpu+0x38>
2ffede9c:	e7e5      	b.n	2ffede6a <psci_is_last_on_cpu+0x16>
2ffede9e:	bf00      	nop
2ffedea0:	2fffa065 	.word	0x2fffa065

2ffedea4 <psci_init_req_local_pwr_states>:
2ffedea4:	4b02      	ldr	r3, [pc, #8]	; (2ffedeb0 <psci_init_req_local_pwr_states+0xc>)
2ffedea6:	2202      	movs	r2, #2
2ffedea8:	701a      	strb	r2, [r3, #0]
2ffedeaa:	705a      	strb	r2, [r3, #1]
2ffedeac:	4770      	bx	lr
2ffedeae:	bf00      	nop
2ffedeb0:	2fffe268 	.word	0x2fffe268

2ffedeb4 <psci_get_target_local_pwr_states>:
2ffedeb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffedeb8:	460e      	mov	r6, r1
2ffedeba:	f8df 8048 	ldr.w	r8, [pc, #72]	; 2ffedf04 <psci_get_target_local_pwr_states+0x50>
2ffedebe:	4607      	mov	r7, r0
2ffedec0:	2401      	movs	r4, #1
2ffedec2:	f00a ec92 	blx	2fff87e8 <_cpu_data>
2ffedec6:	7b03      	ldrb	r3, [r0, #12]
2ffedec8:	7033      	strb	r3, [r6, #0]
2ffedeca:	f00b e944 	blx	2fff9154 <plat_my_core_pos>
2ffedece:	4b0c      	ldr	r3, [pc, #48]	; (2ffedf00 <psci_get_target_local_pwr_states+0x4c>)
2ffeded0:	220c      	movs	r2, #12
2ffeded2:	fb02 3000 	mla	r0, r2, r0, r3
2ffeded6:	6845      	ldr	r5, [r0, #4]
2ffeded8:	42bc      	cmp	r4, r7
2ffededa:	d905      	bls.n	2ffedee8 <psci_get_target_local_pwr_states+0x34>
2ffededc:	2c01      	cmp	r4, #1
2ffedede:	bf9c      	itt	ls
2ffedee0:	2300      	movls	r3, #0
2ffedee2:	5533      	strbls	r3, [r6, r4]
2ffedee4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffedee8:	eb08 1505 	add.w	r5, r8, r5, lsl #4
2ffedeec:	2110      	movs	r1, #16
2ffedeee:	4628      	mov	r0, r5
2ffedef0:	f00a ee48 	blx	2fff8b84 <flush_dcache_range>
2ffedef4:	7b2b      	ldrb	r3, [r5, #12]
2ffedef6:	5533      	strb	r3, [r6, r4]
2ffedef8:	3401      	adds	r4, #1
2ffedefa:	68ad      	ldr	r5, [r5, #8]
2ffedefc:	e7ec      	b.n	2ffeded8 <psci_get_target_local_pwr_states+0x24>
2ffedefe:	bf00      	nop
2ffedf00:	2fffec40 	.word	0x2fffec40
2ffedf04:	2fffec58 	.word	0x2fffec58

2ffedf08 <psci_get_parent_pwr_domain_nodes>:
2ffedf08:	4b08      	ldr	r3, [pc, #32]	; (2ffedf2c <psci_get_parent_pwr_domain_nodes+0x24>)
2ffedf0a:	b510      	push	{r4, lr}
2ffedf0c:	240c      	movs	r4, #12
2ffedf0e:	fb04 3000 	mla	r0, r4, r0, r3
2ffedf12:	4c07      	ldr	r4, [pc, #28]	; (2ffedf30 <psci_get_parent_pwr_domain_nodes+0x28>)
2ffedf14:	6843      	ldr	r3, [r0, #4]
2ffedf16:	2001      	movs	r0, #1
2ffedf18:	4288      	cmp	r0, r1
2ffedf1a:	d900      	bls.n	2ffedf1e <psci_get_parent_pwr_domain_nodes+0x16>
2ffedf1c:	bd10      	pop	{r4, pc}
2ffedf1e:	f842 3b04 	str.w	r3, [r2], #4
2ffedf22:	3001      	adds	r0, #1
2ffedf24:	eb04 1303 	add.w	r3, r4, r3, lsl #4
2ffedf28:	689b      	ldr	r3, [r3, #8]
2ffedf2a:	e7f5      	b.n	2ffedf18 <psci_get_parent_pwr_domain_nodes+0x10>
2ffedf2c:	2fffec40 	.word	0x2fffec40
2ffedf30:	2fffec58 	.word	0x2fffec58

2ffedf34 <psci_set_pwr_domains_to_run>:
2ffedf34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffedf38:	4606      	mov	r6, r0
2ffedf3a:	f8df 8074 	ldr.w	r8, [pc, #116]	; 2ffedfb0 <psci_set_pwr_domains_to_run+0x7c>
2ffedf3e:	f00b e90a 	blx	2fff9154 <plat_my_core_pos>
2ffedf42:	4a19      	ldr	r2, [pc, #100]	; (2ffedfa8 <psci_set_pwr_domains_to_run+0x74>)
2ffedf44:	230c      	movs	r3, #12
2ffedf46:	f8df a06c 	ldr.w	sl, [pc, #108]	; 2ffedfb4 <psci_set_pwr_domains_to_run+0x80>
2ffedf4a:	4605      	mov	r5, r0
2ffedf4c:	fb03 2300 	mla	r3, r3, r0, r2
2ffedf50:	2401      	movs	r4, #1
2ffedf52:	6858      	ldr	r0, [r3, #4]
2ffedf54:	42b4      	cmp	r4, r6
2ffedf56:	d90e      	bls.n	2ffedf76 <psci_set_pwr_domains_to_run+0x42>
2ffedf58:	2400      	movs	r4, #0
2ffedf5a:	f00a ec46 	blx	2fff87e8 <_cpu_data>
2ffedf5e:	6044      	str	r4, [r0, #4]
2ffedf60:	f00a ec42 	blx	2fff87e8 <_cpu_data>
2ffedf64:	7304      	strb	r4, [r0, #12]
2ffedf66:	f00a ec40 	blx	2fff87e8 <_cpu_data>
2ffedf6a:	3004      	adds	r0, #4
2ffedf6c:	210c      	movs	r1, #12
2ffedf6e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffedf72:	f00e bc09 	b.w	2fffc788 <__flush_dcache_range_from_thumb>
2ffedf76:	0107      	lsls	r7, r0, #4
2ffedf78:	f04f 0900 	mov.w	r9, #0
2ffedf7c:	eb08 1000 	add.w	r0, r8, r0, lsl #4
2ffedf80:	2110      	movs	r1, #16
2ffedf82:	f880 900c 	strb.w	r9, [r0, #12]
2ffedf86:	f00a edfe 	blx	2fff8b84 <flush_dcache_range>
2ffedf8a:	b91c      	cbnz	r4, 2ffedf94 <psci_set_pwr_domains_to_run+0x60>
2ffedf8c:	4807      	ldr	r0, [pc, #28]	; (2ffedfac <psci_set_pwr_domains_to_run+0x78>)
2ffedf8e:	21d1      	movs	r1, #209	; 0xd1
2ffedf90:	f00b fd96 	bl	2fff9ac0 <__assert>
2ffedf94:	2c01      	cmp	r4, #1
2ffedf96:	d103      	bne.n	2ffedfa0 <psci_set_pwr_domains_to_run+0x6c>
2ffedf98:	2d01      	cmp	r5, #1
2ffedf9a:	bf98      	it	ls
2ffedf9c:	f80a 9005 	strbls.w	r9, [sl, r5]
2ffedfa0:	4447      	add	r7, r8
2ffedfa2:	3401      	adds	r4, #1
2ffedfa4:	68b8      	ldr	r0, [r7, #8]
2ffedfa6:	e7d5      	b.n	2ffedf54 <psci_set_pwr_domains_to_run+0x20>
2ffedfa8:	2fffec40 	.word	0x2fffec40
2ffedfac:	2fffa065 	.word	0x2fffa065
2ffedfb0:	2fffec58 	.word	0x2fffec58
2ffedfb4:	2fffe268 	.word	0x2fffe268

2ffedfb8 <psci_do_state_coordination>:
2ffedfb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffedfbc:	4606      	mov	r6, r0
2ffedfbe:	460d      	mov	r5, r1
2ffedfc0:	f00b e8c8 	blx	2fff9154 <plat_my_core_pos>
2ffedfc4:	2e01      	cmp	r6, #1
2ffedfc6:	4607      	mov	r7, r0
2ffedfc8:	d904      	bls.n	2ffedfd4 <psci_do_state_coordination+0x1c>
2ffedfca:	4826      	ldr	r0, [pc, #152]	; (2ffee064 <psci_do_state_coordination+0xac>)
2ffedfcc:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
2ffedfd0:	f00b fd76 	bl	2fff9ac0 <__assert>
2ffedfd4:	4824      	ldr	r0, [pc, #144]	; (2ffee068 <psci_do_state_coordination+0xb0>)
2ffedfd6:	230c      	movs	r3, #12
2ffedfd8:	f8df 9094 	ldr.w	r9, [pc, #148]	; 2ffee070 <psci_do_state_coordination+0xb8>
2ffedfdc:	fb03 0307 	mla	r3, r3, r7, r0
2ffedfe0:	f8df a088 	ldr.w	sl, [pc, #136]	; 2ffee06c <psci_do_state_coordination+0xb4>
2ffedfe4:	4680      	mov	r8, r0
2ffedfe6:	685c      	ldr	r4, [r3, #4]
2ffedfe8:	2301      	movs	r3, #1
2ffedfea:	42b3      	cmp	r3, r6
2ffedfec:	d815      	bhi.n	2ffee01a <psci_do_state_coordination+0x62>
2ffedfee:	2f01      	cmp	r7, #1
2ffedff0:	f04f 0001 	mov.w	r0, #1
2ffedff4:	ea4f 1404 	mov.w	r4, r4, lsl #4
2ffedff8:	bf98      	it	ls
2ffedffa:	786b      	ldrbls	r3, [r5, #1]
2ffedffc:	f85a 1004 	ldr.w	r1, [sl, r4]
2ffee000:	4454      	add	r4, sl
2ffee002:	bf98      	it	ls
2ffee004:	f809 3007 	strbls.w	r3, [r9, r7]
2ffee008:	2901      	cmp	r1, #1
2ffee00a:	bf94      	ite	ls
2ffee00c:	4449      	addls	r1, r9
2ffee00e:	2100      	movhi	r1, #0
2ffee010:	6862      	ldr	r2, [r4, #4]
2ffee012:	f003 fbc5 	bl	2fff17a0 <plat_get_target_pwr_state>
2ffee016:	7068      	strb	r0, [r5, #1]
2ffee018:	b9b0      	cbnz	r0, 2ffee048 <psci_do_state_coordination+0x90>
2ffee01a:	782c      	ldrb	r4, [r5, #0]
2ffee01c:	f00a ebe4 	blx	2fff87e8 <_cpu_data>
2ffee020:	4f12      	ldr	r7, [pc, #72]	; (2ffee06c <psci_do_state_coordination+0xb4>)
2ffee022:	7304      	strb	r4, [r0, #12]
2ffee024:	f00a ebe0 	blx	2fff87e8 <_cpu_data>
2ffee028:	300c      	adds	r0, #12
2ffee02a:	2101      	movs	r1, #1
2ffee02c:	f00a edaa 	blx	2fff8b84 <flush_dcache_range>
2ffee030:	f00b e890 	blx	2fff9154 <plat_my_core_pos>
2ffee034:	230c      	movs	r3, #12
2ffee036:	fb03 8800 	mla	r8, r3, r0, r8
2ffee03a:	2301      	movs	r3, #1
2ffee03c:	f8d8 4004 	ldr.w	r4, [r8, #4]
2ffee040:	429e      	cmp	r6, r3
2ffee042:	d204      	bcs.n	2ffee04e <psci_do_state_coordination+0x96>
2ffee044:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffee048:	68a4      	ldr	r4, [r4, #8]
2ffee04a:	2302      	movs	r3, #2
2ffee04c:	e7cd      	b.n	2ffedfea <psci_do_state_coordination+0x32>
2ffee04e:	786b      	ldrb	r3, [r5, #1]
2ffee050:	2110      	movs	r1, #16
2ffee052:	eb07 1404 	add.w	r4, r7, r4, lsl #4
2ffee056:	4620      	mov	r0, r4
2ffee058:	7323      	strb	r3, [r4, #12]
2ffee05a:	f00a ed94 	blx	2fff8b84 <flush_dcache_range>
2ffee05e:	68a4      	ldr	r4, [r4, #8]
2ffee060:	2302      	movs	r3, #2
2ffee062:	e7ed      	b.n	2ffee040 <psci_do_state_coordination+0x88>
2ffee064:	2fffa065 	.word	0x2fffa065
2ffee068:	2fffec40 	.word	0x2fffec40
2ffee06c:	2fffec58 	.word	0x2fffec58
2ffee070:	2fffe268 	.word	0x2fffe268

2ffee074 <psci_find_max_off_lvl>:
2ffee074:	7843      	ldrb	r3, [r0, #1]
2ffee076:	2b02      	cmp	r3, #2
2ffee078:	d004      	beq.n	2ffee084 <psci_find_max_off_lvl+0x10>
2ffee07a:	7803      	ldrb	r3, [r0, #0]
2ffee07c:	2b02      	cmp	r3, #2
2ffee07e:	d103      	bne.n	2ffee088 <psci_find_max_off_lvl+0x14>
2ffee080:	2000      	movs	r0, #0
2ffee082:	4770      	bx	lr
2ffee084:	2001      	movs	r0, #1
2ffee086:	4770      	bx	lr
2ffee088:	2002      	movs	r0, #2
2ffee08a:	4770      	bx	lr

2ffee08c <psci_find_target_suspend_lvl>:
2ffee08c:	4603      	mov	r3, r0
2ffee08e:	7840      	ldrb	r0, [r0, #1]
2ffee090:	b910      	cbnz	r0, 2ffee098 <psci_find_target_suspend_lvl+0xc>
2ffee092:	781b      	ldrb	r3, [r3, #0]
2ffee094:	b113      	cbz	r3, 2ffee09c <psci_find_target_suspend_lvl+0x10>
2ffee096:	4770      	bx	lr
2ffee098:	2001      	movs	r0, #1
2ffee09a:	4770      	bx	lr
2ffee09c:	2002      	movs	r0, #2
2ffee09e:	4770      	bx	lr

2ffee0a0 <psci_validate_suspend_req>:
2ffee0a0:	b538      	push	{r3, r4, r5, lr}
2ffee0a2:	4604      	mov	r4, r0
2ffee0a4:	f7ff fff2 	bl	2ffee08c <psci_find_target_suspend_lvl>
2ffee0a8:	2802      	cmp	r0, #2
2ffee0aa:	4602      	mov	r2, r0
2ffee0ac:	d018      	beq.n	2ffee0e0 <psci_validate_suspend_req+0x40>
2ffee0ae:	2500      	movs	r5, #0
2ffee0b0:	2800      	cmp	r0, #0
2ffee0b2:	da0e      	bge.n	2ffee0d2 <psci_validate_suspend_req+0x32>
2ffee0b4:	4620      	mov	r0, r4
2ffee0b6:	f7ff ffdd 	bl	2ffee074 <psci_find_max_off_lvl>
2ffee0ba:	4282      	cmp	r2, r0
2ffee0bc:	bf08      	it	eq
2ffee0be:	2202      	moveq	r2, #2
2ffee0c0:	b9a9      	cbnz	r1, 2ffee0ee <psci_validate_suspend_req+0x4e>
2ffee0c2:	2802      	cmp	r0, #2
2ffee0c4:	d10c      	bne.n	2ffee0e0 <psci_validate_suspend_req+0x40>
2ffee0c6:	2a02      	cmp	r2, #2
2ffee0c8:	bf14      	ite	ne
2ffee0ca:	2000      	movne	r0, #0
2ffee0cc:	f06f 0001 	mvneq.w	r0, #1
2ffee0d0:	bd38      	pop	{r3, r4, r5, pc}
2ffee0d2:	5c23      	ldrb	r3, [r4, r0]
2ffee0d4:	b113      	cbz	r3, 2ffee0dc <psci_validate_suspend_req+0x3c>
2ffee0d6:	2b01      	cmp	r3, #1
2ffee0d8:	d805      	bhi.n	2ffee0e6 <psci_validate_suspend_req+0x46>
2ffee0da:	2301      	movs	r3, #1
2ffee0dc:	429d      	cmp	r5, r3
2ffee0de:	d903      	bls.n	2ffee0e8 <psci_validate_suspend_req+0x48>
2ffee0e0:	f06f 0001 	mvn.w	r0, #1
2ffee0e4:	e7f4      	b.n	2ffee0d0 <psci_validate_suspend_req+0x30>
2ffee0e6:	2302      	movs	r3, #2
2ffee0e8:	3801      	subs	r0, #1
2ffee0ea:	461d      	mov	r5, r3
2ffee0ec:	e7e0      	b.n	2ffee0b0 <psci_validate_suspend_req+0x10>
2ffee0ee:	2000      	movs	r0, #0
2ffee0f0:	e7ee      	b.n	2ffee0d0 <psci_validate_suspend_req+0x30>
	...

2ffee0f4 <psci_acquire_pwr_domain_locks>:
2ffee0f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffee0f6:	460c      	mov	r4, r1
2ffee0f8:	eb01 0580 	add.w	r5, r1, r0, lsl #2
2ffee0fc:	4e07      	ldr	r6, [pc, #28]	; (2ffee11c <psci_acquire_pwr_domain_locks+0x28>)
2ffee0fe:	4f08      	ldr	r7, [pc, #32]	; (2ffee120 <psci_acquire_pwr_domain_locks+0x2c>)
2ffee100:	42ac      	cmp	r4, r5
2ffee102:	d100      	bne.n	2ffee106 <psci_acquire_pwr_domain_locks+0x12>
2ffee104:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffee106:	f854 3b04 	ldr.w	r3, [r4], #4
2ffee10a:	eb07 1303 	add.w	r3, r7, r3, lsl #4
2ffee10e:	7b98      	ldrb	r0, [r3, #14]
2ffee110:	eb06 0040 	add.w	r0, r6, r0, lsl #1
2ffee114:	f000 fd1c 	bl	2ffeeb50 <bakery_lock_get>
2ffee118:	e7f2      	b.n	2ffee100 <psci_acquire_pwr_domain_locks+0xc>
2ffee11a:	bf00      	nop
2ffee11c:	2fffecc0 	.word	0x2fffecc0
2ffee120:	2fffec58 	.word	0x2fffec58

2ffee124 <psci_release_pwr_domain_locks>:
2ffee124:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffee126:	4604      	mov	r4, r0
2ffee128:	4e07      	ldr	r6, [pc, #28]	; (2ffee148 <psci_release_pwr_domain_locks+0x24>)
2ffee12a:	460d      	mov	r5, r1
2ffee12c:	4f07      	ldr	r7, [pc, #28]	; (2ffee14c <psci_release_pwr_domain_locks+0x28>)
2ffee12e:	3c01      	subs	r4, #1
2ffee130:	d200      	bcs.n	2ffee134 <psci_release_pwr_domain_locks+0x10>
2ffee132:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffee134:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
2ffee138:	eb07 1303 	add.w	r3, r7, r3, lsl #4
2ffee13c:	7b98      	ldrb	r0, [r3, #14]
2ffee13e:	eb06 0040 	add.w	r0, r6, r0, lsl #1
2ffee142:	f000 fd85 	bl	2ffeec50 <bakery_lock_release>
2ffee146:	e7f2      	b.n	2ffee12e <psci_release_pwr_domain_locks+0xa>
2ffee148:	2fffecc0 	.word	0x2fffecc0
2ffee14c:	2fffec58 	.word	0x2fffec58

2ffee150 <psci_validate_mpidr>:
2ffee150:	b508      	push	{r3, lr}
2ffee152:	f002 fe77 	bl	2fff0e44 <plat_core_pos_by_mpidr>
2ffee156:	2800      	cmp	r0, #0
2ffee158:	bfb4      	ite	lt
2ffee15a:	f06f 0001 	mvnlt.w	r0, #1
2ffee15e:	2000      	movge	r0, #0
2ffee160:	bd08      	pop	{r3, pc}
	...

2ffee164 <psci_validate_entry_point>:
2ffee164:	4b22      	ldr	r3, [pc, #136]	; (2ffee1f0 <psci_validate_entry_point+0x8c>)
2ffee166:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffee16a:	4605      	mov	r5, r0
2ffee16c:	681b      	ldr	r3, [r3, #0]
2ffee16e:	460c      	mov	r4, r1
2ffee170:	4617      	mov	r7, r2
2ffee172:	6b1b      	ldr	r3, [r3, #48]	; 0x30
2ffee174:	bb93      	cbnz	r3, 2ffee1dc <psci_validate_entry_point+0x78>
2ffee176:	ee11 1f11 	mrc	15, 0, r1, cr1, cr1, {0}
2ffee17a:	f041 0301 	orr.w	r3, r1, #1
2ffee17e:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffee182:	f3bf 8f6f 	isb	sy
2ffee186:	ee11 3f10 	mrc	15, 0, r3, cr1, cr0, {0}
2ffee18a:	f411 7880 	ands.w	r8, r1, #256	; 0x100
2ffee18e:	d12c      	bne.n	2ffee1ea <psci_validate_entry_point+0x86>
2ffee190:	ee01 1f11 	mcr	15, 0, r1, cr1, cr1, {0}
2ffee194:	f3bf 8f6f 	isb	sy
2ffee198:	4a16      	ldr	r2, [pc, #88]	; (2ffee1f4 <psci_validate_entry_point+0x90>)
2ffee19a:	f013 7600 	ands.w	r6, r3, #33554432	; 0x2000000
2ffee19e:	bf14      	ite	ne
2ffee1a0:	2303      	movne	r3, #3
2ffee1a2:	2301      	moveq	r3, #1
2ffee1a4:	e885 001c 	stmia.w	r5, {r2, r3, r4}
2ffee1a8:	f105 0014 	add.w	r0, r5, #20
2ffee1ac:	f04f 0110 	mov.w	r1, #16
2ffee1b0:	bf18      	it	ne
2ffee1b2:	2601      	movne	r6, #1
2ffee1b4:	f00a eda0 	blx	2fff8cf8 <zero_normalmem>
2ffee1b8:	0163      	lsls	r3, r4, #5
2ffee1ba:	f1b8 0f00 	cmp.w	r8, #0
2ffee1be:	616f      	str	r7, [r5, #20]
2ffee1c0:	f003 0320 	and.w	r3, r3, #32
2ffee1c4:	bf14      	ite	ne
2ffee1c6:	240a      	movne	r4, #10
2ffee1c8:	2403      	moveq	r4, #3
2ffee1ca:	4323      	orrs	r3, r4
2ffee1cc:	2000      	movs	r0, #0
2ffee1ce:	ea43 2346 	orr.w	r3, r3, r6, lsl #9
2ffee1d2:	f443 73e8 	orr.w	r3, r3, #464	; 0x1d0
2ffee1d6:	60eb      	str	r3, [r5, #12]
2ffee1d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffee1dc:	4608      	mov	r0, r1
2ffee1de:	4798      	blx	r3
2ffee1e0:	2800      	cmp	r0, #0
2ffee1e2:	d0c8      	beq.n	2ffee176 <psci_validate_entry_point+0x12>
2ffee1e4:	f06f 0008 	mvn.w	r0, #8
2ffee1e8:	e7f6      	b.n	2ffee1d8 <psci_validate_entry_point+0x74>
2ffee1ea:	ee91 3f10 	mrc	15, 4, r3, cr1, cr0, {0}
2ffee1ee:	e7cf      	b.n	2ffee190 <psci_validate_entry_point+0x2c>
2ffee1f0:	2fffec78 	.word	0x2fffec78
2ffee1f4:	00240101 	.word	0x00240101

2ffee1f8 <psci_warmboot_entrypoint>:
2ffee1f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffee1fa:	f00a efac 	blx	2fff9154 <plat_my_core_pos>
2ffee1fe:	4921      	ldr	r1, [pc, #132]	; (2ffee284 <psci_warmboot_entrypoint+0x8c>)
2ffee200:	2300      	movs	r3, #0
2ffee202:	9301      	str	r3, [sp, #4]
2ffee204:	2202      	movs	r2, #2
2ffee206:	4605      	mov	r5, r0
2ffee208:	4668      	mov	r0, sp
2ffee20a:	f00b fc81 	bl	2fff9b10 <memcpy>
2ffee20e:	f00a eaec 	blx	2fff87e8 <_cpu_data>
2ffee212:	6843      	ldr	r3, [r0, #4]
2ffee214:	2b01      	cmp	r3, #1
2ffee216:	d106      	bne.n	2ffee226 <psci_warmboot_entrypoint+0x2e>
2ffee218:	481b      	ldr	r0, [pc, #108]	; (2ffee288 <psci_warmboot_entrypoint+0x90>)
2ffee21a:	f004 fb5f 	bl	2fff28dc <tf_log>
2ffee21e:	f004 fc01 	bl	2fff2a24 <console_flush>
2ffee222:	f00a ec14 	blx	2fff8a4c <do_panic>
2ffee226:	f00a eae0 	blx	2fff87e8 <_cpu_data>
2ffee22a:	6884      	ldr	r4, [r0, #8]
2ffee22c:	2c02      	cmp	r4, #2
2ffee22e:	d005      	beq.n	2ffee23c <psci_warmboot_entrypoint+0x44>
2ffee230:	2c01      	cmp	r4, #1
2ffee232:	d904      	bls.n	2ffee23e <psci_warmboot_entrypoint+0x46>
2ffee234:	4815      	ldr	r0, [pc, #84]	; (2ffee28c <psci_warmboot_entrypoint+0x94>)
2ffee236:	21c4      	movs	r1, #196	; 0xc4
2ffee238:	f00b fc42 	bl	2fff9ac0 <__assert>
2ffee23c:	2401      	movs	r4, #1
2ffee23e:	aa01      	add	r2, sp, #4
2ffee240:	4621      	mov	r1, r4
2ffee242:	4628      	mov	r0, r5
2ffee244:	f7ff fe60 	bl	2ffedf08 <psci_get_parent_pwr_domain_nodes>
2ffee248:	a901      	add	r1, sp, #4
2ffee24a:	4620      	mov	r0, r4
2ffee24c:	f7ff ff52 	bl	2ffee0f4 <psci_acquire_pwr_domain_locks>
2ffee250:	4669      	mov	r1, sp
2ffee252:	4620      	mov	r0, r4
2ffee254:	f7ff fe2e 	bl	2ffedeb4 <psci_get_target_local_pwr_states>
2ffee258:	f00a eac6 	blx	2fff87e8 <_cpu_data>
2ffee25c:	6843      	ldr	r3, [r0, #4]
2ffee25e:	4669      	mov	r1, sp
2ffee260:	4628      	mov	r0, r5
2ffee262:	2b02      	cmp	r3, #2
2ffee264:	d10a      	bne.n	2ffee27c <psci_warmboot_entrypoint+0x84>
2ffee266:	f7ff fca9 	bl	2ffedbbc <psci_cpu_on_finish>
2ffee26a:	4620      	mov	r0, r4
2ffee26c:	f7ff fe62 	bl	2ffedf34 <psci_set_pwr_domains_to_run>
2ffee270:	a901      	add	r1, sp, #4
2ffee272:	4620      	mov	r0, r4
2ffee274:	f7ff ff56 	bl	2ffee124 <psci_release_pwr_domain_locks>
2ffee278:	b003      	add	sp, #12
2ffee27a:	bd30      	pop	{r4, r5, pc}
2ffee27c:	f7ff fd7c 	bl	2ffedd78 <psci_cpu_suspend_finish>
2ffee280:	e7f3      	b.n	2ffee26a <psci_warmboot_entrypoint+0x72>
2ffee282:	bf00      	nop
2ffee284:	2fffa13b 	.word	0x2fffa13b
2ffee288:	2fffa07c 	.word	0x2fffa07c
2ffee28c:	2fffa065 	.word	0x2fffa065

2ffee290 <psci_spd_migrate_info>:
2ffee290:	b508      	push	{r3, lr}
2ffee292:	4b08      	ldr	r3, [pc, #32]	; (2ffee2b4 <psci_spd_migrate_info+0x24>)
2ffee294:	681b      	ldr	r3, [r3, #0]
2ffee296:	b153      	cbz	r3, 2ffee2ae <psci_spd_migrate_info+0x1e>
2ffee298:	699b      	ldr	r3, [r3, #24]
2ffee29a:	b143      	cbz	r3, 2ffee2ae <psci_spd_migrate_info+0x1e>
2ffee29c:	4798      	blx	r3
2ffee29e:	1c43      	adds	r3, r0, #1
2ffee2a0:	2b03      	cmp	r3, #3
2ffee2a2:	d906      	bls.n	2ffee2b2 <psci_spd_migrate_info+0x22>
2ffee2a4:	4804      	ldr	r0, [pc, #16]	; (2ffee2b8 <psci_spd_migrate_info+0x28>)
2ffee2a6:	f240 316d 	movw	r1, #877	; 0x36d
2ffee2aa:	f00b fc09 	bl	2fff9ac0 <__assert>
2ffee2ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffee2b2:	bd08      	pop	{r3, pc}
2ffee2b4:	2fffec7c 	.word	0x2fffec7c
2ffee2b8:	2fffa065 	.word	0x2fffa065

2ffee2bc <psci_print_power_domain_map>:
2ffee2bc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
2ffee2c0:	4c24      	ldr	r4, [pc, #144]	; (2ffee354 <psci_print_power_domain_map+0x98>)
2ffee2c2:	4825      	ldr	r0, [pc, #148]	; (2ffee358 <psci_print_power_domain_map+0x9c>)
2ffee2c4:	f004 fb0a 	bl	2fff28dc <tf_log>
2ffee2c8:	7b23      	ldrb	r3, [r4, #12]
2ffee2ca:	2b00      	cmp	r3, #0
2ffee2cc:	d03b      	beq.n	2ffee346 <psci_print_power_domain_map+0x8a>
2ffee2ce:	2b02      	cmp	r3, #2
2ffee2d0:	bf34      	ite	cc
2ffee2d2:	2201      	movcc	r2, #1
2ffee2d4:	2202      	movcs	r2, #2
2ffee2d6:	4d21      	ldr	r5, [pc, #132]	; (2ffee35c <psci_print_power_domain_map+0xa0>)
2ffee2d8:	9300      	str	r3, [sp, #0]
2ffee2da:	4821      	ldr	r0, [pc, #132]	; (2ffee360 <psci_print_power_domain_map+0xa4>)
2ffee2dc:	f855 3022 	ldr.w	r3, [r5, r2, lsl #2]
2ffee2e0:	7b61      	ldrb	r1, [r4, #13]
2ffee2e2:	68a2      	ldr	r2, [r4, #8]
2ffee2e4:	f004 fafa 	bl	2fff28dc <tf_log>
2ffee2e8:	7f23      	ldrb	r3, [r4, #28]
2ffee2ea:	b373      	cbz	r3, 2ffee34a <psci_print_power_domain_map+0x8e>
2ffee2ec:	2b01      	cmp	r3, #1
2ffee2ee:	bf8c      	ite	hi
2ffee2f0:	2202      	movhi	r2, #2
2ffee2f2:	2201      	movls	r2, #1
2ffee2f4:	9300      	str	r3, [sp, #0]
2ffee2f6:	481a      	ldr	r0, [pc, #104]	; (2ffee360 <psci_print_power_domain_map+0xa4>)
2ffee2f8:	f855 3022 	ldr.w	r3, [r5, r2, lsl #2]
2ffee2fc:	7f61      	ldrb	r1, [r4, #29]
2ffee2fe:	69a2      	ldr	r2, [r4, #24]
2ffee300:	2400      	movs	r4, #0
2ffee302:	4e18      	ldr	r6, [pc, #96]	; (2ffee364 <psci_print_power_domain_map+0xa8>)
2ffee304:	f004 faea 	bl	2fff28dc <tf_log>
2ffee308:	4f17      	ldr	r7, [pc, #92]	; (2ffee368 <psci_print_power_domain_map+0xac>)
2ffee30a:	4620      	mov	r0, r4
2ffee30c:	f00a ea74 	blx	2fff87f8 <_cpu_data_by_index>
2ffee310:	7b03      	ldrb	r3, [r0, #12]
2ffee312:	b11b      	cbz	r3, 2ffee31c <psci_print_power_domain_map+0x60>
2ffee314:	2b01      	cmp	r3, #1
2ffee316:	bf8c      	ite	hi
2ffee318:	2302      	movhi	r3, #2
2ffee31a:	2301      	movls	r3, #1
2ffee31c:	f855 a023 	ldr.w	sl, [r5, r3, lsl #2]
2ffee320:	4620      	mov	r0, r4
2ffee322:	e9d6 8900 	ldrd	r8, r9, [r6]
2ffee326:	360c      	adds	r6, #12
2ffee328:	f00a ea66 	blx	2fff87f8 <_cpu_data_by_index>
2ffee32c:	7b03      	ldrb	r3, [r0, #12]
2ffee32e:	4642      	mov	r2, r8
2ffee330:	4638      	mov	r0, r7
2ffee332:	9302      	str	r3, [sp, #8]
2ffee334:	2300      	movs	r3, #0
2ffee336:	e9cd 9a00 	strd	r9, sl, [sp]
2ffee33a:	f004 facf 	bl	2fff28dc <tf_log>
2ffee33e:	b134      	cbz	r4, 2ffee34e <psci_print_power_domain_map+0x92>
2ffee340:	b004      	add	sp, #16
2ffee342:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffee346:	461a      	mov	r2, r3
2ffee348:	e7c5      	b.n	2ffee2d6 <psci_print_power_domain_map+0x1a>
2ffee34a:	461a      	mov	r2, r3
2ffee34c:	e7d2      	b.n	2ffee2f4 <psci_print_power_domain_map+0x38>
2ffee34e:	2401      	movs	r4, #1
2ffee350:	e7db      	b.n	2ffee30a <psci_print_power_domain_map+0x4e>
2ffee352:	bf00      	nop
2ffee354:	2fffec58 	.word	0x2fffec58
2ffee358:	2fffa09c 	.word	0x2fffa09c
2ffee35c:	2fffa140 	.word	0x2fffa140
2ffee360:	2fffa0b5 	.word	0x2fffa0b5
2ffee364:	2fffec40 	.word	0x2fffec40
2ffee368:	2fffa0f1 	.word	0x2fffa0f1

2ffee36c <psci_do_pwrdown_sequence>:
2ffee36c:	f00e ba24 	b.w	2fffc7b8 <__psci_do_pwrdown_cache_maintenance_from_thumb>

2ffee370 <psci_cpu_on>:
2ffee370:	b570      	push	{r4, r5, r6, lr}
2ffee372:	b08a      	sub	sp, #40	; 0x28
2ffee374:	4604      	mov	r4, r0
2ffee376:	460d      	mov	r5, r1
2ffee378:	4616      	mov	r6, r2
2ffee37a:	f7ff fee9 	bl	2ffee150 <psci_validate_mpidr>
2ffee37e:	b958      	cbnz	r0, 2ffee398 <psci_cpu_on+0x28>
2ffee380:	4632      	mov	r2, r6
2ffee382:	4629      	mov	r1, r5
2ffee384:	a801      	add	r0, sp, #4
2ffee386:	f7ff feed 	bl	2ffee164 <psci_validate_entry_point>
2ffee38a:	b918      	cbnz	r0, 2ffee394 <psci_cpu_on+0x24>
2ffee38c:	a901      	add	r1, sp, #4
2ffee38e:	4620      	mov	r0, r4
2ffee390:	f7ff fb7e 	bl	2ffeda90 <psci_cpu_on_start>
2ffee394:	b00a      	add	sp, #40	; 0x28
2ffee396:	bd70      	pop	{r4, r5, r6, pc}
2ffee398:	f06f 0001 	mvn.w	r0, #1
2ffee39c:	e7fa      	b.n	2ffee394 <psci_cpu_on+0x24>
	...

2ffee3a0 <psci_cpu_suspend>:
2ffee3a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffee3a4:	b08a      	sub	sp, #40	; 0x28
2ffee3a6:	4604      	mov	r4, r0
2ffee3a8:	460f      	mov	r7, r1
2ffee3aa:	492a      	ldr	r1, [pc, #168]	; (2ffee454 <psci_cpu_suspend+0xb4>)
2ffee3ac:	4690      	mov	r8, r2
2ffee3ae:	4668      	mov	r0, sp
2ffee3b0:	2202      	movs	r2, #2
2ffee3b2:	f00b fbad 	bl	2fff9b10 <memcpy>
2ffee3b6:	4669      	mov	r1, sp
2ffee3b8:	4620      	mov	r0, r4
2ffee3ba:	f7ff fd23 	bl	2ffede04 <psci_validate_power_state>
2ffee3be:	b158      	cbz	r0, 2ffee3d8 <psci_cpu_suspend+0x38>
2ffee3c0:	3002      	adds	r0, #2
2ffee3c2:	d105      	bne.n	2ffee3d0 <psci_cpu_suspend+0x30>
2ffee3c4:	f06f 0501 	mvn.w	r5, #1
2ffee3c8:	4628      	mov	r0, r5
2ffee3ca:	b00a      	add	sp, #40	; 0x28
2ffee3cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffee3d0:	2143      	movs	r1, #67	; 0x43
2ffee3d2:	4821      	ldr	r0, [pc, #132]	; (2ffee458 <psci_cpu_suspend+0xb8>)
2ffee3d4:	f00b fb74 	bl	2fff9ac0 <__assert>
2ffee3d8:	f3c4 4400 	ubfx	r4, r4, #16, #1
2ffee3dc:	4668      	mov	r0, sp
2ffee3de:	4621      	mov	r1, r4
2ffee3e0:	f7ff fe5e 	bl	2ffee0a0 <psci_validate_suspend_req>
2ffee3e4:	4605      	mov	r5, r0
2ffee3e6:	b108      	cbz	r0, 2ffee3ec <psci_cpu_suspend+0x4c>
2ffee3e8:	214d      	movs	r1, #77	; 0x4d
2ffee3ea:	e7f2      	b.n	2ffee3d2 <psci_cpu_suspend+0x32>
2ffee3ec:	4668      	mov	r0, sp
2ffee3ee:	f7ff fe4d 	bl	2ffee08c <psci_find_target_suspend_lvl>
2ffee3f2:	2802      	cmp	r0, #2
2ffee3f4:	4606      	mov	r6, r0
2ffee3f6:	d106      	bne.n	2ffee406 <psci_cpu_suspend+0x66>
2ffee3f8:	4818      	ldr	r0, [pc, #96]	; (2ffee45c <psci_cpu_suspend+0xbc>)
2ffee3fa:	f004 fa6f 	bl	2fff28dc <tf_log>
2ffee3fe:	f004 fb11 	bl	2fff2a24 <console_flush>
2ffee402:	f00a eb24 	blx	2fff8a4c <do_panic>
2ffee406:	ea54 0300 	orrs.w	r3, r4, r0
2ffee40a:	d111      	bne.n	2ffee430 <psci_cpu_suspend+0x90>
2ffee40c:	4e14      	ldr	r6, [pc, #80]	; (2ffee460 <psci_cpu_suspend+0xc0>)
2ffee40e:	6833      	ldr	r3, [r6, #0]
2ffee410:	681b      	ldr	r3, [r3, #0]
2ffee412:	2b00      	cmp	r3, #0
2ffee414:	d0d6      	beq.n	2ffee3c4 <psci_cpu_suspend+0x24>
2ffee416:	f89d 4000 	ldrb.w	r4, [sp]
2ffee41a:	f00a e9e6 	blx	2fff87e8 <_cpu_data>
2ffee41e:	6833      	ldr	r3, [r6, #0]
2ffee420:	7304      	strb	r4, [r0, #12]
2ffee422:	4620      	mov	r0, r4
2ffee424:	681b      	ldr	r3, [r3, #0]
2ffee426:	4798      	blx	r3
2ffee428:	f00a e9de 	blx	2fff87e8 <_cpu_data>
2ffee42c:	7305      	strb	r5, [r0, #12]
2ffee42e:	e7cb      	b.n	2ffee3c8 <psci_cpu_suspend+0x28>
2ffee430:	b934      	cbnz	r4, 2ffee440 <psci_cpu_suspend+0xa0>
2ffee432:	4623      	mov	r3, r4
2ffee434:	466a      	mov	r2, sp
2ffee436:	4631      	mov	r1, r6
2ffee438:	a801      	add	r0, sp, #4
2ffee43a:	f7ff fc0d 	bl	2ffedc58 <psci_cpu_suspend_start>
2ffee43e:	e7c3      	b.n	2ffee3c8 <psci_cpu_suspend+0x28>
2ffee440:	4642      	mov	r2, r8
2ffee442:	4639      	mov	r1, r7
2ffee444:	a801      	add	r0, sp, #4
2ffee446:	f7ff fe8d 	bl	2ffee164 <psci_validate_entry_point>
2ffee44a:	2800      	cmp	r0, #0
2ffee44c:	d0f1      	beq.n	2ffee432 <psci_cpu_suspend+0x92>
2ffee44e:	4605      	mov	r5, r0
2ffee450:	e7ba      	b.n	2ffee3c8 <psci_cpu_suspend+0x28>
2ffee452:	bf00      	nop
2ffee454:	2fffa1b4 	.word	0x2fffa1b4
2ffee458:	2fffa14c 	.word	0x2fffa14c
2ffee45c:	2fffa161 	.word	0x2fffa161
2ffee460:	2fffec78 	.word	0x2fffec78

2ffee464 <psci_system_suspend>:
2ffee464:	b530      	push	{r4, r5, lr}
2ffee466:	b08b      	sub	sp, #44	; 0x2c
2ffee468:	4604      	mov	r4, r0
2ffee46a:	460d      	mov	r5, r1
2ffee46c:	f7ff fcf2 	bl	2ffede54 <psci_is_last_on_cpu>
2ffee470:	b920      	cbnz	r0, 2ffee47c <psci_system_suspend+0x18>
2ffee472:	f06f 0402 	mvn.w	r4, #2
2ffee476:	4620      	mov	r0, r4
2ffee478:	b00b      	add	sp, #44	; 0x2c
2ffee47a:	bd30      	pop	{r4, r5, pc}
2ffee47c:	4621      	mov	r1, r4
2ffee47e:	462a      	mov	r2, r5
2ffee480:	a801      	add	r0, sp, #4
2ffee482:	f7ff fe6f 	bl	2ffee164 <psci_validate_entry_point>
2ffee486:	4604      	mov	r4, r0
2ffee488:	2800      	cmp	r0, #0
2ffee48a:	d1f4      	bne.n	2ffee476 <psci_system_suspend+0x12>
2ffee48c:	4668      	mov	r0, sp
2ffee48e:	f7ff fcd1 	bl	2ffede34 <psci_query_sys_suspend_pwrstate>
2ffee492:	4668      	mov	r0, sp
2ffee494:	f7ff fdfa 	bl	2ffee08c <psci_find_target_suspend_lvl>
2ffee498:	2800      	cmp	r0, #0
2ffee49a:	d0ea      	beq.n	2ffee472 <psci_system_suspend+0xe>
2ffee49c:	2101      	movs	r1, #1
2ffee49e:	4668      	mov	r0, sp
2ffee4a0:	f7ff fdfe 	bl	2ffee0a0 <psci_validate_suspend_req>
2ffee4a4:	4604      	mov	r4, r0
2ffee4a6:	b118      	cbz	r0, 2ffee4b0 <psci_system_suspend+0x4c>
2ffee4a8:	21b4      	movs	r1, #180	; 0xb4
2ffee4aa:	4808      	ldr	r0, [pc, #32]	; (2ffee4cc <psci_system_suspend+0x68>)
2ffee4ac:	f00b fb08 	bl	2fff9ac0 <__assert>
2ffee4b0:	f89d 3001 	ldrb.w	r3, [sp, #1]
2ffee4b4:	2b02      	cmp	r3, #2
2ffee4b6:	d001      	beq.n	2ffee4bc <psci_system_suspend+0x58>
2ffee4b8:	21b6      	movs	r1, #182	; 0xb6
2ffee4ba:	e7f6      	b.n	2ffee4aa <psci_system_suspend+0x46>
2ffee4bc:	2301      	movs	r3, #1
2ffee4be:	466a      	mov	r2, sp
2ffee4c0:	4619      	mov	r1, r3
2ffee4c2:	a801      	add	r0, sp, #4
2ffee4c4:	f7ff fbc8 	bl	2ffedc58 <psci_cpu_suspend_start>
2ffee4c8:	e7d5      	b.n	2ffee476 <psci_system_suspend+0x12>
2ffee4ca:	bf00      	nop
2ffee4cc:	2fffa14c 	.word	0x2fffa14c

2ffee4d0 <psci_cpu_off>:
2ffee4d0:	b508      	push	{r3, lr}
2ffee4d2:	2001      	movs	r0, #1
2ffee4d4:	f7ff fa80 	bl	2ffed9d8 <psci_do_cpu_off>
2ffee4d8:	1cc3      	adds	r3, r0, #3
2ffee4da:	d003      	beq.n	2ffee4e4 <psci_cpu_off+0x14>
2ffee4dc:	4802      	ldr	r0, [pc, #8]	; (2ffee4e8 <psci_cpu_off+0x18>)
2ffee4de:	21d6      	movs	r1, #214	; 0xd6
2ffee4e0:	f00b faee 	bl	2fff9ac0 <__assert>
2ffee4e4:	bd08      	pop	{r3, pc}
2ffee4e6:	bf00      	nop
2ffee4e8:	2fffa14c 	.word	0x2fffa14c

2ffee4ec <psci_affinity_info>:
2ffee4ec:	b510      	push	{r4, lr}
2ffee4ee:	b111      	cbz	r1, 2ffee4f6 <psci_affinity_info+0xa>
2ffee4f0:	f06f 0001 	mvn.w	r0, #1
2ffee4f4:	bd10      	pop	{r4, pc}
2ffee4f6:	f002 fca5 	bl	2fff0e44 <plat_core_pos_by_mpidr>
2ffee4fa:	1c43      	adds	r3, r0, #1
2ffee4fc:	4604      	mov	r4, r0
2ffee4fe:	d0f7      	beq.n	2ffee4f0 <psci_affinity_info+0x4>
2ffee500:	f00a e97a 	blx	2fff87f8 <_cpu_data_by_index>
2ffee504:	2104      	movs	r1, #4
2ffee506:	4408      	add	r0, r1
2ffee508:	f00a eb3c 	blx	2fff8b84 <flush_dcache_range>
2ffee50c:	4620      	mov	r0, r4
2ffee50e:	f00a e974 	blx	2fff87f8 <_cpu_data_by_index>
2ffee512:	6840      	ldr	r0, [r0, #4]
2ffee514:	e7ee      	b.n	2ffee4f4 <psci_affinity_info+0x8>
	...

2ffee518 <psci_migrate>:
2ffee518:	b513      	push	{r0, r1, r4, lr}
2ffee51a:	4604      	mov	r4, r0
2ffee51c:	a801      	add	r0, sp, #4
2ffee51e:	f7ff feb7 	bl	2ffee290 <psci_spd_migrate_info>
2ffee522:	b138      	cbz	r0, 2ffee534 <psci_migrate+0x1c>
2ffee524:	2801      	cmp	r0, #1
2ffee526:	bf0c      	ite	eq
2ffee528:	f06f 0002 	mvneq.w	r0, #2
2ffee52c:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
2ffee530:	b002      	add	sp, #8
2ffee532:	bd10      	pop	{r4, pc}
2ffee534:	ee10 3fb0 	mrc	15, 0, r3, cr0, cr0, {5}
2ffee538:	9a01      	ldr	r2, [sp, #4]
2ffee53a:	429a      	cmp	r2, r3
2ffee53c:	d118      	bne.n	2ffee570 <psci_migrate+0x58>
2ffee53e:	4620      	mov	r0, r4
2ffee540:	f7ff fe06 	bl	2ffee150 <psci_validate_mpidr>
2ffee544:	b9b8      	cbnz	r0, 2ffee576 <psci_migrate+0x5e>
2ffee546:	4b0d      	ldr	r3, [pc, #52]	; (2ffee57c <psci_migrate+0x64>)
2ffee548:	681b      	ldr	r3, [r3, #0]
2ffee54a:	b10b      	cbz	r3, 2ffee550 <psci_migrate+0x38>
2ffee54c:	695b      	ldr	r3, [r3, #20]
2ffee54e:	b923      	cbnz	r3, 2ffee55a <psci_migrate+0x42>
2ffee550:	f44f 718a 	mov.w	r1, #276	; 0x114
2ffee554:	480a      	ldr	r0, [pc, #40]	; (2ffee580 <psci_migrate+0x68>)
2ffee556:	f00b fab3 	bl	2fff9ac0 <__assert>
2ffee55a:	ee10 0fb0 	mrc	15, 0, r0, cr0, cr0, {5}
2ffee55e:	4621      	mov	r1, r4
2ffee560:	4798      	blx	r3
2ffee562:	2800      	cmp	r0, #0
2ffee564:	d0e4      	beq.n	2ffee530 <psci_migrate+0x18>
2ffee566:	1d83      	adds	r3, r0, #6
2ffee568:	d0e2      	beq.n	2ffee530 <psci_migrate+0x18>
2ffee56a:	f240 1117 	movw	r1, #279	; 0x117
2ffee56e:	e7f1      	b.n	2ffee554 <psci_migrate+0x3c>
2ffee570:	f06f 0006 	mvn.w	r0, #6
2ffee574:	e7dc      	b.n	2ffee530 <psci_migrate+0x18>
2ffee576:	f06f 0001 	mvn.w	r0, #1
2ffee57a:	e7d9      	b.n	2ffee530 <psci_migrate+0x18>
2ffee57c:	2fffec7c 	.word	0x2fffec7c
2ffee580:	2fffa14c 	.word	0x2fffa14c

2ffee584 <psci_migrate_info_type>:
2ffee584:	b507      	push	{r0, r1, r2, lr}
2ffee586:	a801      	add	r0, sp, #4
2ffee588:	f7ff fe82 	bl	2ffee290 <psci_spd_migrate_info>
2ffee58c:	b003      	add	sp, #12
2ffee58e:	f85d fb04 	ldr.w	pc, [sp], #4

2ffee592 <psci_migrate_info_up_cpu>:
2ffee592:	b507      	push	{r0, r1, r2, lr}
2ffee594:	a801      	add	r0, sp, #4
2ffee596:	f7ff fe7b 	bl	2ffee290 <psci_spd_migrate_info>
2ffee59a:	2801      	cmp	r0, #1
2ffee59c:	bf8c      	ite	hi
2ffee59e:	f06f 0001 	mvnhi.w	r0, #1
2ffee5a2:	9801      	ldrls	r0, [sp, #4]
2ffee5a4:	b003      	add	sp, #12
2ffee5a6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

2ffee5ac <psci_node_hw_state>:
2ffee5ac:	b538      	push	{r3, r4, r5, lr}
2ffee5ae:	4605      	mov	r5, r0
2ffee5b0:	460c      	mov	r4, r1
2ffee5b2:	f7ff fdcd 	bl	2ffee150 <psci_validate_mpidr>
2ffee5b6:	b9a8      	cbnz	r0, 2ffee5e4 <psci_node_hw_state+0x38>
2ffee5b8:	2c01      	cmp	r4, #1
2ffee5ba:	d813      	bhi.n	2ffee5e4 <psci_node_hw_state+0x38>
2ffee5bc:	4b0b      	ldr	r3, [pc, #44]	; (2ffee5ec <psci_node_hw_state+0x40>)
2ffee5be:	681b      	ldr	r3, [r3, #0]
2ffee5c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
2ffee5c2:	b923      	cbnz	r3, 2ffee5ce <psci_node_hw_state+0x22>
2ffee5c4:	f240 1145 	movw	r1, #325	; 0x145
2ffee5c8:	4809      	ldr	r0, [pc, #36]	; (2ffee5f0 <psci_node_hw_state+0x44>)
2ffee5ca:	f00b fa79 	bl	2fff9ac0 <__assert>
2ffee5ce:	4621      	mov	r1, r4
2ffee5d0:	4628      	mov	r0, r5
2ffee5d2:	4798      	blx	r3
2ffee5d4:	1c43      	adds	r3, r0, #1
2ffee5d6:	2b03      	cmp	r3, #3
2ffee5d8:	d906      	bls.n	2ffee5e8 <psci_node_hw_state+0x3c>
2ffee5da:	3002      	adds	r0, #2
2ffee5dc:	d002      	beq.n	2ffee5e4 <psci_node_hw_state+0x38>
2ffee5de:	f240 1147 	movw	r1, #327	; 0x147
2ffee5e2:	e7f1      	b.n	2ffee5c8 <psci_node_hw_state+0x1c>
2ffee5e4:	f06f 0001 	mvn.w	r0, #1
2ffee5e8:	bd38      	pop	{r3, r4, r5, pc}
2ffee5ea:	bf00      	nop
2ffee5ec:	2fffec78 	.word	0x2fffec78
2ffee5f0:	2fffa14c 	.word	0x2fffa14c

2ffee5f4 <psci_features>:
2ffee5f4:	4b16      	ldr	r3, [pc, #88]	; (2ffee650 <psci_features+0x5c>)
2ffee5f6:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
2ffee5fa:	b510      	push	{r4, lr}
2ffee5fc:	681b      	ldr	r3, [r3, #0]
2ffee5fe:	d021      	beq.n	2ffee644 <psci_features+0x50>
2ffee600:	0042      	lsls	r2, r0, #1
2ffee602:	bf42      	ittt	mi
2ffee604:	f023 437f 	bicmi.w	r3, r3, #4278190080	; 0xff000000
2ffee608:	f423 0368 	bicmi.w	r3, r3, #15204352	; 0xe80000
2ffee60c:	f423 431f 	bicmi.w	r3, r3, #40704	; 0x9f00
2ffee610:	f3c0 6205 	ubfx	r2, r0, #24, #6
2ffee614:	bf48      	it	mi
2ffee616:	f023 0345 	bicmi.w	r3, r3, #69	; 0x45
2ffee61a:	2a04      	cmp	r2, #4
2ffee61c:	d114      	bne.n	2ffee648 <psci_features+0x54>
2ffee61e:	0fc2      	lsrs	r2, r0, #31
2ffee620:	f3c0 4107 	ubfx	r1, r0, #16, #8
2ffee624:	d010      	beq.n	2ffee648 <psci_features+0x54>
2ffee626:	f64f 74e0 	movw	r4, #65504	; 0xffe0
2ffee62a:	4004      	ands	r4, r0
2ffee62c:	4321      	orrs	r1, r4
2ffee62e:	d10b      	bne.n	2ffee648 <psci_features+0x54>
2ffee630:	f000 001f 	and.w	r0, r0, #31
2ffee634:	fa02 f000 	lsl.w	r0, r2, r0
2ffee638:	4218      	tst	r0, r3
2ffee63a:	bf0c      	ite	eq
2ffee63c:	f04f 30ff 	moveq.w	r0, #4294967295	; 0xffffffff
2ffee640:	2000      	movne	r0, #0
2ffee642:	bd10      	pop	{r4, pc}
2ffee644:	2000      	movs	r0, #0
2ffee646:	e7fc      	b.n	2ffee642 <psci_features+0x4e>
2ffee648:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffee64c:	e7f9      	b.n	2ffee642 <psci_features+0x4e>
2ffee64e:	bf00      	nop
2ffee650:	2fffec80 	.word	0x2fffec80

2ffee654 <psci_smc_handler>:
2ffee654:	b538      	push	{r3, r4, r5, lr}
2ffee656:	4604      	mov	r4, r0
2ffee658:	4608      	mov	r0, r1
2ffee65a:	4611      	mov	r1, r2
2ffee65c:	461a      	mov	r2, r3
2ffee65e:	9b07      	ldr	r3, [sp, #28]
2ffee660:	07dd      	lsls	r5, r3, #31
2ffee662:	d556      	bpl.n	2ffee712 <psci_smc_handler+0xbe>
2ffee664:	f004 051f 	and.w	r5, r4, #31
2ffee668:	2301      	movs	r3, #1
2ffee66a:	40ab      	lsls	r3, r5
2ffee66c:	4d44      	ldr	r5, [pc, #272]	; (2ffee780 <psci_smc_handler+0x12c>)
2ffee66e:	682d      	ldr	r5, [r5, #0]
2ffee670:	422b      	tst	r3, r5
2ffee672:	d04e      	beq.n	2ffee712 <psci_smc_handler+0xbe>
2ffee674:	0063      	lsls	r3, r4, #1
2ffee676:	d44f      	bmi.n	2ffee718 <psci_smc_handler+0xc4>
2ffee678:	f104 43f8 	add.w	r3, r4, #2080374784	; 0x7c000000
2ffee67c:	2b14      	cmp	r3, #20
2ffee67e:	d844      	bhi.n	2ffee70a <psci_smc_handler+0xb6>
2ffee680:	e8df f003 	tbb	[pc, r3]
2ffee684:	130b0f7a 	.word	0x130b0f7a
2ffee688:	231f1b17 	.word	0x231f1b17
2ffee68c:	4333312f 	.word	0x4333312f
2ffee690:	432b2743 	.word	0x432b2743
2ffee694:	373f4343 	.word	0x373f4343
2ffee698:	3b          	.byte	0x3b
2ffee699:	00          	.byte	0x00
2ffee69a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee69e:	f7ff bf17 	b.w	2ffee4d0 <psci_cpu_off>
2ffee6a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6a6:	f7ff be7b 	b.w	2ffee3a0 <psci_cpu_suspend>
2ffee6aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6ae:	f7ff be5f 	b.w	2ffee370 <psci_cpu_on>
2ffee6b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6b6:	f7ff bf19 	b.w	2ffee4ec <psci_affinity_info>
2ffee6ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6be:	f7ff bf2b 	b.w	2ffee518 <psci_migrate>
2ffee6c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6c6:	f7ff bf5d 	b.w	2ffee584 <psci_migrate_info_type>
2ffee6ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6ce:	f7ff bf60 	b.w	2ffee592 <psci_migrate_info_up_cpu>
2ffee6d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6d6:	f7ff bf69 	b.w	2ffee5ac <psci_node_hw_state>
2ffee6da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6de:	f7ff bec1 	b.w	2ffee464 <psci_system_suspend>
2ffee6e2:	f000 f985 	bl	2ffee9f0 <psci_system_off>
2ffee6e6:	f000 f99f 	bl	2ffeea28 <psci_system_reset>
2ffee6ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6ee:	f7ff bf81 	b.w	2ffee5f4 <psci_features>
2ffee6f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6f6:	f000 b9eb 	b.w	2ffeead0 <psci_mem_protect>
2ffee6fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6fe:	f000 ba0d 	b.w	2ffeeb1c <psci_mem_chk_range>
2ffee702:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee706:	f000 b9ab 	b.w	2ffeea60 <psci_system_reset2>
2ffee70a:	481e      	ldr	r0, [pc, #120]	; (2ffee784 <psci_smc_handler+0x130>)
2ffee70c:	4621      	mov	r1, r4
2ffee70e:	f004 f8e5 	bl	2fff28dc <tf_log>
2ffee712:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffee716:	bd38      	pop	{r3, r4, r5, pc}
2ffee718:	f104 5570 	add.w	r5, r4, #1006632960	; 0x3c000000
2ffee71c:	3d01      	subs	r5, #1
2ffee71e:	2d13      	cmp	r5, #19
2ffee720:	d8f3      	bhi.n	2ffee70a <psci_smc_handler+0xb6>
2ffee722:	a301      	add	r3, pc, #4	; (adr r3, 2ffee728 <psci_smc_handler+0xd4>)
2ffee724:	f853 f025 	ldr.w	pc, [r3, r5, lsl #2]
2ffee728:	2ffee6a3 	.word	0x2ffee6a3
2ffee72c:	2ffee70b 	.word	0x2ffee70b
2ffee730:	2ffee6ab 	.word	0x2ffee6ab
2ffee734:	2ffee6b3 	.word	0x2ffee6b3
2ffee738:	2ffee6bb 	.word	0x2ffee6bb
2ffee73c:	2ffee70b 	.word	0x2ffee70b
2ffee740:	2ffee6cb 	.word	0x2ffee6cb
2ffee744:	2ffee70b 	.word	0x2ffee70b
2ffee748:	2ffee70b 	.word	0x2ffee70b
2ffee74c:	2ffee70b 	.word	0x2ffee70b
2ffee750:	2ffee70b 	.word	0x2ffee70b
2ffee754:	2ffee70b 	.word	0x2ffee70b
2ffee758:	2ffee6d3 	.word	0x2ffee6d3
2ffee75c:	2ffee6db 	.word	0x2ffee6db
2ffee760:	2ffee70b 	.word	0x2ffee70b
2ffee764:	2ffee70b 	.word	0x2ffee70b
2ffee768:	2ffee70b 	.word	0x2ffee70b
2ffee76c:	2ffee703 	.word	0x2ffee703
2ffee770:	2ffee70b 	.word	0x2ffee70b
2ffee774:	2ffee6fb 	.word	0x2ffee6fb
2ffee778:	f04f 1001 	mov.w	r0, #65537	; 0x10001
2ffee77c:	e7cb      	b.n	2ffee716 <psci_smc_handler+0xc2>
2ffee77e:	bf00      	nop
2ffee780:	2fffec80 	.word	0x2fffec80
2ffee784:	2fffa194 	.word	0x2fffa194

2ffee788 <psci_arch_setup>:
2ffee788:	b508      	push	{r3, lr}
2ffee78a:	f004 fa5e 	bl	2fff2c4a <plat_get_syscnt_freq2>
2ffee78e:	ee0e 0f10 	mcr	15, 0, r0, cr14, cr0, {0}
2ffee792:	f00a e87c 	blx	2fff888c <init_cpu_ops>
2ffee796:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffee79a:	f00d bff9 	b.w	2fffc790 <__print_errata_status_from_thumb>
	...

2ffee7a0 <psci_setup>:
2ffee7a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffee7a4:	4605      	mov	r5, r0
2ffee7a6:	b087      	sub	sp, #28
2ffee7a8:	b150      	cbz	r0, 2ffee7c0 <psci_setup+0x20>
2ffee7aa:	8803      	ldrh	r3, [r0, #0]
2ffee7ac:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
2ffee7b0:	d106      	bne.n	2ffee7c0 <psci_setup+0x20>
2ffee7b2:	8843      	ldrh	r3, [r0, #2]
2ffee7b4:	2b0c      	cmp	r3, #12
2ffee7b6:	d103      	bne.n	2ffee7c0 <psci_setup+0x20>
2ffee7b8:	6844      	ldr	r4, [r0, #4]
2ffee7ba:	b90c      	cbnz	r4, 2ffee7c0 <psci_setup+0x20>
2ffee7bc:	6883      	ldr	r3, [r0, #8]
2ffee7be:	b91b      	cbnz	r3, 2ffee7c8 <psci_setup+0x28>
2ffee7c0:	21c1      	movs	r1, #193	; 0xc1
2ffee7c2:	487c      	ldr	r0, [pc, #496]	; (2ffee9b4 <psci_setup+0x214>)
2ffee7c4:	f00b f97c 	bl	2fff9ac0 <__assert>
2ffee7c8:	2701      	movs	r7, #1
2ffee7ca:	f7ff ffdd 	bl	2ffee788 <psci_arch_setup>
2ffee7ce:	46a2      	mov	sl, r4
2ffee7d0:	f002 fb34 	bl	2fff0e3c <plat_get_power_domain_tree_desc>
2ffee7d4:	9002      	str	r0, [sp, #8]
2ffee7d6:	4622      	mov	r2, r4
2ffee7d8:	2302      	movs	r3, #2
2ffee7da:	46bb      	mov	fp, r7
2ffee7dc:	46d0      	mov	r8, sl
2ffee7de:	44ba      	add	sl, r7
2ffee7e0:	2700      	movs	r7, #0
2ffee7e2:	463e      	mov	r6, r7
2ffee7e4:	e01a      	b.n	2ffee81c <psci_setup+0x7c>
2ffee7e6:	f1b8 0f02 	cmp.w	r8, #2
2ffee7ea:	dd01      	ble.n	2ffee7f0 <psci_setup+0x50>
2ffee7ec:	218b      	movs	r1, #139	; 0x8b
2ffee7ee:	e7e8      	b.n	2ffee7c2 <psci_setup+0x22>
2ffee7f0:	9a02      	ldr	r2, [sp, #8]
2ffee7f2:	46b1      	mov	r9, r6
2ffee7f4:	f812 2008 	ldrb.w	r2, [r2, r8]
2ffee7f8:	9201      	str	r2, [sp, #4]
2ffee7fa:	9a01      	ldr	r2, [sp, #4]
2ffee7fc:	1991      	adds	r1, r2, r6
2ffee7fe:	bf2c      	ite	cs
2ffee800:	2201      	movcs	r2, #1
2ffee802:	2200      	movcc	r2, #0
2ffee804:	4589      	cmp	r9, r1
2ffee806:	d349      	bcc.n	2ffee89c <psci_setup+0xfc>
2ffee808:	9901      	ldr	r1, [sp, #4]
2ffee80a:	2a00      	cmp	r2, #0
2ffee80c:	9a01      	ldr	r2, [sp, #4]
2ffee80e:	bf18      	it	ne
2ffee810:	2200      	movne	r2, #0
2ffee812:	440f      	add	r7, r1
2ffee814:	f108 0801 	add.w	r8, r8, #1
2ffee818:	4432      	add	r2, r6
2ffee81a:	4616      	mov	r6, r2
2ffee81c:	45c2      	cmp	sl, r8
2ffee81e:	d1e2      	bne.n	2ffee7e6 <psci_setup+0x46>
2ffee820:	2b01      	cmp	r3, #1
2ffee822:	f04f 0b00 	mov.w	fp, #0
2ffee826:	d171      	bne.n	2ffee90c <psci_setup+0x16c>
2ffee828:	2a02      	cmp	r2, #2
2ffee82a:	d171      	bne.n	2ffee910 <psci_setup+0x170>
2ffee82c:	4c62      	ldr	r4, [pc, #392]	; (2ffee9b8 <psci_setup+0x218>)
2ffee82e:	4619      	mov	r1, r3
2ffee830:	aa05      	add	r2, sp, #20
2ffee832:	4658      	mov	r0, fp
2ffee834:	f7ff fb68 	bl	2ffedf08 <psci_get_parent_pwr_domain_nodes>
2ffee838:	9e05      	ldr	r6, [sp, #20]
2ffee83a:	0133      	lsls	r3, r6, #4
2ffee83c:	b10e      	cbz	r6, 2ffee842 <psci_setup+0xa2>
2ffee83e:	f844 b003 	str.w	fp, [r4, r3]
2ffee842:	4423      	add	r3, r4
2ffee844:	2101      	movs	r1, #1
2ffee846:	4608      	mov	r0, r1
2ffee848:	685a      	ldr	r2, [r3, #4]
2ffee84a:	3201      	adds	r2, #1
2ffee84c:	605a      	str	r2, [r3, #4]
2ffee84e:	aa05      	add	r2, sp, #20
2ffee850:	f7ff fb5a 	bl	2ffedf08 <psci_get_parent_pwr_domain_nodes>
2ffee854:	9b05      	ldr	r3, [sp, #20]
2ffee856:	429e      	cmp	r6, r3
2ffee858:	ea4f 1303 	mov.w	r3, r3, lsl #4
2ffee85c:	bf1c      	itt	ne
2ffee85e:	2201      	movne	r2, #1
2ffee860:	50e2      	strne	r2, [r4, r3]
2ffee862:	441c      	add	r4, r3
2ffee864:	6863      	ldr	r3, [r4, #4]
2ffee866:	3301      	adds	r3, #1
2ffee868:	6063      	str	r3, [r4, #4]
2ffee86a:	ee10 4fb0 	mrc	15, 0, r4, cr0, cr0, {5}
2ffee86e:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
2ffee872:	f00a ec70 	blx	2fff9154 <plat_my_core_pos>
2ffee876:	4a51      	ldr	r2, [pc, #324]	; (2ffee9bc <psci_setup+0x21c>)
2ffee878:	230c      	movs	r3, #12
2ffee87a:	4343      	muls	r3, r0
2ffee87c:	50d4      	str	r4, [r2, r3]
2ffee87e:	4c50      	ldr	r4, [pc, #320]	; (2ffee9c0 <psci_setup+0x220>)
2ffee880:	f7ff fb10 	bl	2ffedea4 <psci_init_req_local_pwr_states>
2ffee884:	2001      	movs	r0, #1
2ffee886:	f7ff fb55 	bl	2ffedf34 <psci_set_pwr_domains_to_run>
2ffee88a:	68a8      	ldr	r0, [r5, #8]
2ffee88c:	4621      	mov	r1, r4
2ffee88e:	f001 fe95 	bl	2fff05bc <plat_setup_psci_ops>
2ffee892:	6823      	ldr	r3, [r4, #0]
2ffee894:	2b00      	cmp	r3, #0
2ffee896:	d13d      	bne.n	2ffee914 <psci_setup+0x174>
2ffee898:	21dd      	movs	r1, #221	; 0xdd
2ffee89a:	e792      	b.n	2ffee7c2 <psci_setup+0x22>
2ffee89c:	f108 30ff 	add.w	r0, r8, #4294967295	; 0xffffffff
2ffee8a0:	fa5f f489 	uxtb.w	r4, r9
2ffee8a4:	f1bb 0f00 	cmp.w	fp, #0
2ffee8a8:	d00c      	beq.n	2ffee8c4 <psci_setup+0x124>
2ffee8aa:	4a43      	ldr	r2, [pc, #268]	; (2ffee9b8 <psci_setup+0x218>)
2ffee8ac:	eb02 1404 	add.w	r4, r2, r4, lsl #4
2ffee8b0:	2201      	movs	r2, #1
2ffee8b2:	7362      	strb	r2, [r4, #13]
2ffee8b4:	2202      	movs	r2, #2
2ffee8b6:	f884 900e 	strb.w	r9, [r4, #14]
2ffee8ba:	60a0      	str	r0, [r4, #8]
2ffee8bc:	7322      	strb	r2, [r4, #12]
2ffee8be:	f109 0901 	add.w	r9, r9, #1
2ffee8c2:	e79a      	b.n	2ffee7fa <psci_setup+0x5a>
2ffee8c4:	9303      	str	r3, [sp, #12]
2ffee8c6:	210c      	movs	r1, #12
2ffee8c8:	fb01 f204 	mul.w	r2, r1, r4
2ffee8cc:	4b3b      	ldr	r3, [pc, #236]	; (2ffee9bc <psci_setup+0x21c>)
2ffee8ce:	eb03 0c02 	add.w	ip, r3, r2
2ffee8d2:	f8cc 0004 	str.w	r0, [ip, #4]
2ffee8d6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffee8da:	5098      	str	r0, [r3, r2]
2ffee8dc:	4620      	mov	r0, r4
2ffee8de:	f009 ef8c 	blx	2fff87f8 <_cpu_data_by_index>
2ffee8e2:	f04f 0c02 	mov.w	ip, #2
2ffee8e6:	2201      	movs	r2, #1
2ffee8e8:	6042      	str	r2, [r0, #4]
2ffee8ea:	210c      	movs	r1, #12
2ffee8ec:	f8c0 c008 	str.w	ip, [r0, #8]
2ffee8f0:	3004      	adds	r0, #4
2ffee8f2:	f880 c008 	strb.w	ip, [r0, #8]
2ffee8f6:	f00a e946 	blx	2fff8b84 <flush_dcache_range>
2ffee8fa:	4b32      	ldr	r3, [pc, #200]	; (2ffee9c4 <psci_setup+0x224>)
2ffee8fc:	2201      	movs	r2, #1
2ffee8fe:	4620      	mov	r0, r4
2ffee900:	eb03 1144 	add.w	r1, r3, r4, lsl #5
2ffee904:	f7fe fddc 	bl	2ffed4c0 <cm_set_context_by_index>
2ffee908:	9b03      	ldr	r3, [sp, #12]
2ffee90a:	e7d8      	b.n	2ffee8be <psci_setup+0x11e>
2ffee90c:	2301      	movs	r3, #1
2ffee90e:	e765      	b.n	2ffee7dc <psci_setup+0x3c>
2ffee910:	21a3      	movs	r1, #163	; 0xa3
2ffee912:	e756      	b.n	2ffee7c2 <psci_setup+0x22>
2ffee914:	2104      	movs	r1, #4
2ffee916:	4620      	mov	r0, r4
2ffee918:	f00a e934 	blx	2fff8b84 <flush_dcache_range>
2ffee91c:	4b2a      	ldr	r3, [pc, #168]	; (2ffee9c8 <psci_setup+0x228>)
2ffee91e:	f240 4211 	movw	r2, #1041	; 0x411
2ffee922:	601a      	str	r2, [r3, #0]
2ffee924:	6822      	ldr	r2, [r4, #0]
2ffee926:	6891      	ldr	r1, [r2, #8]
2ffee928:	b111      	cbz	r1, 2ffee930 <psci_setup+0x190>
2ffee92a:	f240 4115 	movw	r1, #1045	; 0x415
2ffee92e:	6019      	str	r1, [r3, #0]
2ffee930:	6851      	ldr	r1, [r2, #4]
2ffee932:	b129      	cbz	r1, 2ffee940 <psci_setup+0x1a0>
2ffee934:	6951      	ldr	r1, [r2, #20]
2ffee936:	b119      	cbz	r1, 2ffee940 <psci_setup+0x1a0>
2ffee938:	6819      	ldr	r1, [r3, #0]
2ffee93a:	f041 0108 	orr.w	r1, r1, #8
2ffee93e:	6019      	str	r1, [r3, #0]
2ffee940:	6911      	ldr	r1, [r2, #16]
2ffee942:	b161      	cbz	r1, 2ffee95e <psci_setup+0x1be>
2ffee944:	69d1      	ldr	r1, [r2, #28]
2ffee946:	b151      	cbz	r1, 2ffee95e <psci_setup+0x1be>
2ffee948:	6819      	ldr	r1, [r3, #0]
2ffee94a:	f041 0002 	orr.w	r0, r1, #2
2ffee94e:	6018      	str	r0, [r3, #0]
2ffee950:	6b50      	ldr	r0, [r2, #52]	; 0x34
2ffee952:	b120      	cbz	r0, 2ffee95e <psci_setup+0x1be>
2ffee954:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
2ffee958:	f041 0102 	orr.w	r1, r1, #2
2ffee95c:	6019      	str	r1, [r3, #0]
2ffee95e:	6a51      	ldr	r1, [r2, #36]	; 0x24
2ffee960:	b119      	cbz	r1, 2ffee96a <psci_setup+0x1ca>
2ffee962:	6819      	ldr	r1, [r3, #0]
2ffee964:	f441 7180 	orr.w	r1, r1, #256	; 0x100
2ffee968:	6019      	str	r1, [r3, #0]
2ffee96a:	6a91      	ldr	r1, [r2, #40]	; 0x28
2ffee96c:	b119      	cbz	r1, 2ffee976 <psci_setup+0x1d6>
2ffee96e:	6819      	ldr	r1, [r3, #0]
2ffee970:	f441 7100 	orr.w	r1, r1, #512	; 0x200
2ffee974:	6019      	str	r1, [r3, #0]
2ffee976:	6c11      	ldr	r1, [r2, #64]	; 0x40
2ffee978:	b119      	cbz	r1, 2ffee982 <psci_setup+0x1e2>
2ffee97a:	6819      	ldr	r1, [r3, #0]
2ffee97c:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
2ffee980:	6019      	str	r1, [r3, #0]
2ffee982:	6c91      	ldr	r1, [r2, #72]	; 0x48
2ffee984:	b129      	cbz	r1, 2ffee992 <psci_setup+0x1f2>
2ffee986:	6cd1      	ldr	r1, [r2, #76]	; 0x4c
2ffee988:	b119      	cbz	r1, 2ffee992 <psci_setup+0x1f2>
2ffee98a:	6819      	ldr	r1, [r3, #0]
2ffee98c:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
2ffee990:	6019      	str	r1, [r3, #0]
2ffee992:	6c51      	ldr	r1, [r2, #68]	; 0x44
2ffee994:	b119      	cbz	r1, 2ffee99e <psci_setup+0x1fe>
2ffee996:	6819      	ldr	r1, [r3, #0]
2ffee998:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
2ffee99c:	6019      	str	r1, [r3, #0]
2ffee99e:	6d12      	ldr	r2, [r2, #80]	; 0x50
2ffee9a0:	b11a      	cbz	r2, 2ffee9aa <psci_setup+0x20a>
2ffee9a2:	681a      	ldr	r2, [r3, #0]
2ffee9a4:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
2ffee9a8:	601a      	str	r2, [r3, #0]
2ffee9aa:	2000      	movs	r0, #0
2ffee9ac:	b007      	add	sp, #28
2ffee9ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffee9b2:	bf00      	nop
2ffee9b4:	2fffa1b6 	.word	0x2fffa1b6
2ffee9b8:	2fffec58 	.word	0x2fffec58
2ffee9bc:	2fffec40 	.word	0x2fffec40
2ffee9c0:	2fffec78 	.word	0x2fffec78
2ffee9c4:	2fffe270 	.word	0x2fffe270
2ffee9c8:	2fffec80 	.word	0x2fffec80

2ffee9cc <psci_prepare_next_non_secure_ctx>:
2ffee9cc:	b508      	push	{r3, lr}
2ffee9ce:	6843      	ldr	r3, [r0, #4]
2ffee9d0:	07db      	lsls	r3, r3, #31
2ffee9d2:	d404      	bmi.n	2ffee9de <psci_prepare_next_non_secure_ctx+0x12>
2ffee9d4:	4805      	ldr	r0, [pc, #20]	; (2ffee9ec <psci_prepare_next_non_secure_ctx+0x20>)
2ffee9d6:	f44f 7195 	mov.w	r1, #298	; 0x12a
2ffee9da:	f00b f871 	bl	2fff9ac0 <__assert>
2ffee9de:	f7fe ff7f 	bl	2ffed8e0 <cm_init_my_context>
2ffee9e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffee9e6:	2001      	movs	r0, #1
2ffee9e8:	f7fe bf86 	b.w	2ffed8f8 <cm_prepare_el3_exit>
2ffee9ec:	2fffa1b6 	.word	0x2fffa1b6

2ffee9f0 <psci_system_off>:
2ffee9f0:	4c0a      	ldr	r4, [pc, #40]	; (2ffeea1c <psci_system_off+0x2c>)
2ffee9f2:	b508      	push	{r3, lr}
2ffee9f4:	f7ff fc62 	bl	2ffee2bc <psci_print_power_domain_map>
2ffee9f8:	6822      	ldr	r2, [r4, #0]
2ffee9fa:	6a52      	ldr	r2, [r2, #36]	; 0x24
2ffee9fc:	b91a      	cbnz	r2, 2ffeea06 <psci_system_off+0x16>
2ffee9fe:	4808      	ldr	r0, [pc, #32]	; (2ffeea20 <psci_system_off+0x30>)
2ffeea00:	2115      	movs	r1, #21
2ffeea02:	f00b f85d 	bl	2fff9ac0 <__assert>
2ffeea06:	4b07      	ldr	r3, [pc, #28]	; (2ffeea24 <psci_system_off+0x34>)
2ffeea08:	681b      	ldr	r3, [r3, #0]
2ffeea0a:	b113      	cbz	r3, 2ffeea12 <psci_system_off+0x22>
2ffeea0c:	69db      	ldr	r3, [r3, #28]
2ffeea0e:	b103      	cbz	r3, 2ffeea12 <psci_system_off+0x22>
2ffeea10:	4798      	blx	r3
2ffeea12:	f004 f807 	bl	2fff2a24 <console_flush>
2ffeea16:	6823      	ldr	r3, [r4, #0]
2ffeea18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
2ffeea1a:	4798      	blx	r3
2ffeea1c:	2fffec78 	.word	0x2fffec78
2ffeea20:	2fffa1cc 	.word	0x2fffa1cc
2ffeea24:	2fffec7c 	.word	0x2fffec7c

2ffeea28 <psci_system_reset>:
2ffeea28:	4c0a      	ldr	r4, [pc, #40]	; (2ffeea54 <psci_system_reset+0x2c>)
2ffeea2a:	b508      	push	{r3, lr}
2ffeea2c:	f7ff fc46 	bl	2ffee2bc <psci_print_power_domain_map>
2ffeea30:	6822      	ldr	r2, [r4, #0]
2ffeea32:	6a92      	ldr	r2, [r2, #40]	; 0x28
2ffeea34:	b91a      	cbnz	r2, 2ffeea3e <psci_system_reset+0x16>
2ffeea36:	4808      	ldr	r0, [pc, #32]	; (2ffeea58 <psci_system_reset+0x30>)
2ffeea38:	2128      	movs	r1, #40	; 0x28
2ffeea3a:	f00b f841 	bl	2fff9ac0 <__assert>
2ffeea3e:	4b07      	ldr	r3, [pc, #28]	; (2ffeea5c <psci_system_reset+0x34>)
2ffeea40:	681b      	ldr	r3, [r3, #0]
2ffeea42:	b113      	cbz	r3, 2ffeea4a <psci_system_reset+0x22>
2ffeea44:	6a1b      	ldr	r3, [r3, #32]
2ffeea46:	b103      	cbz	r3, 2ffeea4a <psci_system_reset+0x22>
2ffeea48:	4798      	blx	r3
2ffeea4a:	f003 ffeb 	bl	2fff2a24 <console_flush>
2ffeea4e:	6823      	ldr	r3, [r4, #0]
2ffeea50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
2ffeea52:	4798      	blx	r3
2ffeea54:	2fffec78 	.word	0x2fffec78
2ffeea58:	2fffa1cc 	.word	0x2fffa1cc
2ffeea5c:	2fffec7c 	.word	0x2fffec7c

2ffeea60 <psci_system_reset2>:
2ffeea60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffeea64:	460e      	mov	r6, r1
2ffeea66:	4d17      	ldr	r5, [pc, #92]	; (2ffeeac4 <psci_system_reset2+0x64>)
2ffeea68:	4604      	mov	r4, r0
2ffeea6a:	f7ff fc27 	bl	2ffee2bc <psci_print_power_domain_map>
2ffeea6e:	682b      	ldr	r3, [r5, #0]
2ffeea70:	6d19      	ldr	r1, [r3, #80]	; 0x50
2ffeea72:	b919      	cbnz	r1, 2ffeea7c <psci_system_reset2+0x1c>
2ffeea74:	4814      	ldr	r0, [pc, #80]	; (2ffeeac8 <psci_system_reset2+0x68>)
2ffeea76:	213d      	movs	r1, #61	; 0x3d
2ffeea78:	f00b f822 	bl	2fff9ac0 <__assert>
2ffeea7c:	0fe7      	lsrs	r7, r4, #31
2ffeea7e:	d00c      	beq.n	2ffeea9a <psci_system_reset2+0x3a>
2ffeea80:	4b12      	ldr	r3, [pc, #72]	; (2ffeeacc <psci_system_reset2+0x6c>)
2ffeea82:	681b      	ldr	r3, [r3, #0]
2ffeea84:	b9a3      	cbnz	r3, 2ffeeab0 <psci_system_reset2+0x50>
2ffeea86:	f003 ffcd 	bl	2fff2a24 <console_flush>
2ffeea8a:	682b      	ldr	r3, [r5, #0]
2ffeea8c:	4632      	mov	r2, r6
2ffeea8e:	4621      	mov	r1, r4
2ffeea90:	4638      	mov	r0, r7
2ffeea92:	6d1b      	ldr	r3, [r3, #80]	; 0x50
2ffeea94:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffeea98:	4718      	bx	r3
2ffeea9a:	b974      	cbnz	r4, 2ffeeaba <psci_system_reset2+0x5a>
2ffeea9c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
2ffeea9e:	2b00      	cmp	r3, #0
2ffeeaa0:	d0ee      	beq.n	2ffeea80 <psci_system_reset2+0x20>
2ffeeaa2:	4620      	mov	r0, r4
2ffeeaa4:	4798      	blx	r3
2ffeeaa6:	2800      	cmp	r0, #0
2ffeeaa8:	daea      	bge.n	2ffeea80 <psci_system_reset2+0x20>
2ffeeaaa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffeeaae:	e006      	b.n	2ffeeabe <psci_system_reset2+0x5e>
2ffeeab0:	6a1b      	ldr	r3, [r3, #32]
2ffeeab2:	2b00      	cmp	r3, #0
2ffeeab4:	d0e7      	beq.n	2ffeea86 <psci_system_reset2+0x26>
2ffeeab6:	4798      	blx	r3
2ffeeab8:	e7e5      	b.n	2ffeea86 <psci_system_reset2+0x26>
2ffeeaba:	f06f 0001 	mvn.w	r0, #1
2ffeeabe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffeeac2:	bf00      	nop
2ffeeac4:	2fffec78 	.word	0x2fffec78
2ffeeac8:	2fffa1cc 	.word	0x2fffa1cc
2ffeeacc:	2fffec7c 	.word	0x2fffec7c

2ffeead0 <psci_mem_protect>:
2ffeead0:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffeead2:	4604      	mov	r4, r0
2ffeead4:	4d0f      	ldr	r5, [pc, #60]	; (2ffeeb14 <psci_mem_protect+0x44>)
2ffeead6:	682a      	ldr	r2, [r5, #0]
2ffeead8:	6c93      	ldr	r3, [r2, #72]	; 0x48
2ffeeada:	b91b      	cbnz	r3, 2ffeeae4 <psci_mem_protect+0x14>
2ffeeadc:	2112      	movs	r1, #18
2ffeeade:	480e      	ldr	r0, [pc, #56]	; (2ffeeb18 <psci_mem_protect+0x48>)
2ffeeae0:	f00a ffee 	bl	2fff9ac0 <__assert>
2ffeeae4:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
2ffeeae6:	b90a      	cbnz	r2, 2ffeeaec <psci_mem_protect+0x1c>
2ffeeae8:	2113      	movs	r1, #19
2ffeeaea:	e7f8      	b.n	2ffeeade <psci_mem_protect+0xe>
2ffeeaec:	a801      	add	r0, sp, #4
2ffeeaee:	4798      	blx	r3
2ffeeaf0:	2800      	cmp	r0, #0
2ffeeaf2:	da03      	bge.n	2ffeeafc <psci_mem_protect+0x2c>
2ffeeaf4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffeeaf8:	b003      	add	sp, #12
2ffeeafa:	bd30      	pop	{r4, r5, pc}
2ffeeafc:	682b      	ldr	r3, [r5, #0]
2ffeeafe:	4620      	mov	r0, r4
2ffeeb00:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
2ffeeb02:	4798      	blx	r3
2ffeeb04:	2800      	cmp	r0, #0
2ffeeb06:	dbf5      	blt.n	2ffeeaf4 <psci_mem_protect+0x24>
2ffeeb08:	9801      	ldr	r0, [sp, #4]
2ffeeb0a:	3800      	subs	r0, #0
2ffeeb0c:	bf18      	it	ne
2ffeeb0e:	2001      	movne	r0, #1
2ffeeb10:	e7f2      	b.n	2ffeeaf8 <psci_mem_protect+0x28>
2ffeeb12:	bf00      	nop
2ffeeb14:	2fffec78 	.word	0x2fffec78
2ffeeb18:	2fffa1e7 	.word	0x2fffa1e7

2ffeeb1c <psci_mem_chk_range>:
2ffeeb1c:	b510      	push	{r4, lr}
2ffeeb1e:	4c0a      	ldr	r4, [pc, #40]	; (2ffeeb48 <psci_mem_chk_range+0x2c>)
2ffeeb20:	6824      	ldr	r4, [r4, #0]
2ffeeb22:	6c64      	ldr	r4, [r4, #68]	; 0x44
2ffeeb24:	b91c      	cbnz	r4, 2ffeeb2e <psci_mem_chk_range+0x12>
2ffeeb26:	4809      	ldr	r0, [pc, #36]	; (2ffeeb4c <psci_mem_chk_range+0x30>)
2ffeeb28:	2121      	movs	r1, #33	; 0x21
2ffeeb2a:	f00a ffc9 	bl	2fff9ac0 <__assert>
2ffeeb2e:	b911      	cbnz	r1, 2ffeeb36 <psci_mem_chk_range+0x1a>
2ffeeb30:	f06f 0002 	mvn.w	r0, #2
2ffeeb34:	bd10      	pop	{r4, pc}
2ffeeb36:	424b      	negs	r3, r1
2ffeeb38:	4283      	cmp	r3, r0
2ffeeb3a:	d3f9      	bcc.n	2ffeeb30 <psci_mem_chk_range+0x14>
2ffeeb3c:	47a0      	blx	r4
2ffeeb3e:	2800      	cmp	r0, #0
2ffeeb40:	dbf6      	blt.n	2ffeeb30 <psci_mem_chk_range+0x14>
2ffeeb42:	2000      	movs	r0, #0
2ffeeb44:	e7f6      	b.n	2ffeeb34 <psci_mem_chk_range+0x18>
2ffeeb46:	bf00      	nop
2ffeeb48:	2fffec78 	.word	0x2fffec78
2ffeeb4c:	2fffa1e7 	.word	0x2fffa1e7

2ffeeb50 <bakery_lock_get>:
2ffeeb50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffeeb52:	4604      	mov	r4, r0
2ffeeb54:	f00a eafe 	blx	2fff9154 <plat_my_core_pos>
2ffeeb58:	ee11 2f10 	mrc	15, 0, r2, cr1, cr0, {0}
2ffeeb5c:	4e39      	ldr	r6, [pc, #228]	; (2ffeec44 <bakery_lock_get+0xf4>)
2ffeeb5e:	f002 0204 	and.w	r2, r2, #4
2ffeeb62:	4b39      	ldr	r3, [pc, #228]	; (2ffeec48 <bakery_lock_get+0xf8>)
2ffeeb64:	4625      	mov	r5, r4
2ffeeb66:	1af6      	subs	r6, r6, r3
2ffeeb68:	fb06 fc00 	mul.w	ip, r6, r0
2ffeeb6c:	eb1c 0704 	adds.w	r7, ip, r4
2ffeeb70:	d103      	bne.n	2ffeeb7a <bakery_lock_get+0x2a>
2ffeeb72:	216e      	movs	r1, #110	; 0x6e
2ffeeb74:	4835      	ldr	r0, [pc, #212]	; (2ffeec4c <bakery_lock_get+0xfc>)
2ffeeb76:	f00a ffa3 	bl	2fff9ac0 <__assert>
2ffeeb7a:	b10a      	cbz	r2, 2ffeeb80 <bakery_lock_get+0x30>
2ffeeb7c:	ee07 7f3e 	mcr	15, 0, r7, cr7, cr14, {1}
2ffeeb80:	f83c 1004 	ldrh.w	r1, [ip, r4]
2ffeeb84:	f3c1 014e 	ubfx	r1, r1, #1, #15
2ffeeb88:	b109      	cbz	r1, 2ffeeb8e <bakery_lock_get+0x3e>
2ffeeb8a:	2171      	movs	r1, #113	; 0x71
2ffeeb8c:	e7f2      	b.n	2ffeeb74 <bakery_lock_get+0x24>
2ffeeb8e:	2301      	movs	r3, #1
2ffeeb90:	f82c 3004 	strh.w	r3, [ip, r4]
2ffeeb94:	b1f2      	cbz	r2, 2ffeebd4 <bakery_lock_get+0x84>
2ffeeb96:	ee07 7f3a 	mcr	15, 0, r7, cr7, cr10, {1}
2ffeeb9a:	f3bf 8f4b 	dsb	ish
2ffeeb9e:	b1f8      	cbz	r0, 2ffeebe0 <bakery_lock_get+0x90>
2ffeeba0:	b314      	cbz	r4, 2ffeebe8 <bakery_lock_get+0x98>
2ffeeba2:	b9d2      	cbnz	r2, 2ffeebda <bakery_lock_get+0x8a>
2ffeeba4:	8823      	ldrh	r3, [r4, #0]
2ffeeba6:	2801      	cmp	r0, #1
2ffeeba8:	f3c3 034e 	ubfx	r3, r3, #1, #15
2ffeebac:	d119      	bne.n	2ffeebe2 <bakery_lock_get+0x92>
2ffeebae:	3301      	adds	r3, #1
2ffeebb0:	ea4f 0e43 	mov.w	lr, r3, lsl #1
2ffeebb4:	fa1f fe8e 	uxth.w	lr, lr
2ffeebb8:	f82c e004 	strh.w	lr, [ip, r4]
2ffeebbc:	b30a      	cbz	r2, 2ffeec02 <bakery_lock_get+0xb2>
2ffeebbe:	ee07 7f3a 	mcr	15, 0, r7, cr7, cr10, {1}
2ffeebc2:	f3bf 8f4b 	dsb	ish
2ffeebc6:	ea40 2303 	orr.w	r3, r0, r3, lsl #8
2ffeebca:	4288      	cmp	r0, r1
2ffeebcc:	d034      	beq.n	2ffeec38 <bakery_lock_get+0xe8>
2ffeebce:	b9ed      	cbnz	r5, 2ffeec0c <bakery_lock_get+0xbc>
2ffeebd0:	21c1      	movs	r1, #193	; 0xc1
2ffeebd2:	e7cf      	b.n	2ffeeb74 <bakery_lock_get+0x24>
2ffeebd4:	ee07 7f36 	mcr	15, 0, r7, cr7, cr6, {1}
2ffeebd8:	e7df      	b.n	2ffeeb9a <bakery_lock_get+0x4a>
2ffeebda:	ee07 4f3e 	mcr	15, 0, r4, cr7, cr14, {1}
2ffeebde:	e7e1      	b.n	2ffeeba4 <bakery_lock_get+0x54>
2ffeebe0:	4603      	mov	r3, r0
2ffeebe2:	eb14 0e06 	adds.w	lr, r4, r6
2ffeebe6:	d101      	bne.n	2ffeebec <bakery_lock_get+0x9c>
2ffeebe8:	2189      	movs	r1, #137	; 0x89
2ffeebea:	e7c3      	b.n	2ffeeb74 <bakery_lock_get+0x24>
2ffeebec:	b10a      	cbz	r2, 2ffeebf2 <bakery_lock_get+0xa2>
2ffeebee:	ee07 ef3e 	mcr	15, 0, lr, cr7, cr14, {1}
2ffeebf2:	f8be e000 	ldrh.w	lr, [lr]
2ffeebf6:	f3ce 0e4e 	ubfx	lr, lr, #1, #15
2ffeebfa:	4573      	cmp	r3, lr
2ffeebfc:	bf38      	it	cc
2ffeebfe:	4673      	movcc	r3, lr
2ffeec00:	e7d5      	b.n	2ffeebae <bakery_lock_get+0x5e>
2ffeec02:	ee07 7f36 	mcr	15, 0, r7, cr7, cr6, {1}
2ffeec06:	e7dc      	b.n	2ffeebc2 <bakery_lock_get+0x72>
2ffeec08:	2101      	movs	r1, #1
2ffeec0a:	e7de      	b.n	2ffeebca <bakery_lock_get+0x7a>
2ffeec0c:	b10a      	cbz	r2, 2ffeec12 <bakery_lock_get+0xc2>
2ffeec0e:	ee07 5f3e 	mcr	15, 0, r5, cr7, cr14, {1}
2ffeec12:	882f      	ldrh	r7, [r5, #0]
2ffeec14:	b2bc      	uxth	r4, r7
2ffeec16:	07ff      	lsls	r7, r7, #31
2ffeec18:	d4f8      	bmi.n	2ffeec0c <bakery_lock_get+0xbc>
2ffeec1a:	0864      	lsrs	r4, r4, #1
2ffeec1c:	d00c      	beq.n	2ffeec38 <bakery_lock_get+0xe8>
2ffeec1e:	ea41 2704 	orr.w	r7, r1, r4, lsl #8
2ffeec22:	42bb      	cmp	r3, r7
2ffeec24:	d908      	bls.n	2ffeec38 <bakery_lock_get+0xe8>
2ffeec26:	bf20      	wfe
2ffeec28:	b10a      	cbz	r2, 2ffeec2e <bakery_lock_get+0xde>
2ffeec2a:	ee07 5f3e 	mcr	15, 0, r5, cr7, cr14, {1}
2ffeec2e:	882f      	ldrh	r7, [r5, #0]
2ffeec30:	f3c7 074e 	ubfx	r7, r7, #1, #15
2ffeec34:	42bc      	cmp	r4, r7
2ffeec36:	d0f6      	beq.n	2ffeec26 <bakery_lock_get+0xd6>
2ffeec38:	4435      	add	r5, r6
2ffeec3a:	2901      	cmp	r1, #1
2ffeec3c:	d1e4      	bne.n	2ffeec08 <bakery_lock_get+0xb8>
2ffeec3e:	f3bf 8f5f 	dmb	sy
2ffeec42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffeec44:	2fffed00 	.word	0x2fffed00
2ffeec48:	2fffecc0 	.word	0x2fffecc0
2ffeec4c:	2fffa203 	.word	0x2fffa203

2ffeec50 <bakery_lock_release>:
2ffeec50:	b538      	push	{r3, r4, r5, lr}
2ffeec52:	4604      	mov	r4, r0
2ffeec54:	ee11 5f10 	mrc	15, 0, r5, cr1, cr0, {0}
2ffeec58:	f005 0504 	and.w	r5, r5, #4
2ffeec5c:	f00a ea7a 	blx	2fff9154 <plat_my_core_pos>
2ffeec60:	4a0e      	ldr	r2, [pc, #56]	; (2ffeec9c <bakery_lock_release+0x4c>)
2ffeec62:	4b0f      	ldr	r3, [pc, #60]	; (2ffeeca0 <bakery_lock_release+0x50>)
2ffeec64:	1a9b      	subs	r3, r3, r2
2ffeec66:	4343      	muls	r3, r0
2ffeec68:	18e2      	adds	r2, r4, r3
2ffeec6a:	b10d      	cbz	r5, 2ffeec70 <bakery_lock_release+0x20>
2ffeec6c:	ee07 2f3e 	mcr	15, 0, r2, cr7, cr14, {1}
2ffeec70:	5ae1      	ldrh	r1, [r4, r3]
2ffeec72:	f3c1 014e 	ubfx	r1, r1, #1, #15
2ffeec76:	b919      	cbnz	r1, 2ffeec80 <bakery_lock_release+0x30>
2ffeec78:	480a      	ldr	r0, [pc, #40]	; (2ffeeca4 <bakery_lock_release+0x54>)
2ffeec7a:	21ef      	movs	r1, #239	; 0xef
2ffeec7c:	f00a ff20 	bl	2fff9ac0 <__assert>
2ffeec80:	f3bf 8f5e 	dmb	st
2ffeec84:	2100      	movs	r1, #0
2ffeec86:	52e1      	strh	r1, [r4, r3]
2ffeec88:	b12d      	cbz	r5, 2ffeec96 <bakery_lock_release+0x46>
2ffeec8a:	ee07 2f3a 	mcr	15, 0, r2, cr7, cr10, {1}
2ffeec8e:	f3bf 8f4b 	dsb	ish
2ffeec92:	bf40      	sev
2ffeec94:	bd38      	pop	{r3, r4, r5, pc}
2ffeec96:	ee07 2f36 	mcr	15, 0, r2, cr7, cr6, {1}
2ffeec9a:	e7f8      	b.n	2ffeec8e <bakery_lock_release+0x3e>
2ffeec9c:	2fffecc0 	.word	0x2fffecc0
2ffeeca0:	2fffed00 	.word	0x2fffed00
2ffeeca4:	2fffa203 	.word	0x2fffa203

2ffeeca8 <trim_table_init>:
2ffeeca8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeecac:	4604      	mov	r4, r0
2ffeecae:	6843      	ldr	r3, [r0, #4]
2ffeecb0:	2600      	movs	r6, #0
2ffeecb2:	6882      	ldr	r2, [r0, #8]
2ffeecb4:	f8d0 a000 	ldr.w	sl, [r0]
2ffeecb8:	eb03 0902 	add.w	r9, r3, r2
2ffeecbc:	68c2      	ldr	r2, [r0, #12]
2ffeecbe:	eb03 0802 	add.w	r8, r3, r2
2ffeecc2:	f83a 5b02 	ldrh.w	r5, [sl], #2
2ffeecc6:	b13d      	cbz	r5, 2ffeecd8 <trim_table_init+0x30>
2ffeecc8:	f8ba 7000 	ldrh.w	r7, [sl]
2ffeeccc:	45b9      	cmp	r9, r7
2ffeecce:	d901      	bls.n	2ffeecd4 <trim_table_init+0x2c>
2ffeecd0:	45a8      	cmp	r8, r5
2ffeecd2:	d304      	bcc.n	2ffeecde <trim_table_init+0x36>
2ffeecd4:	2e00      	cmp	r6, #0
2ffeecd6:	d0f4      	beq.n	2ffeecc2 <trim_table_init+0x1a>
2ffeecd8:	6126      	str	r6, [r4, #16]
2ffeecda:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeecde:	3701      	adds	r7, #1
2ffeece0:	4547      	cmp	r7, r8
2ffeece2:	bf38      	it	cc
2ffeece4:	4647      	movcc	r7, r8
2ffeece6:	b926      	cbnz	r6, 2ffeecf2 <trim_table_init+0x4a>
2ffeece8:	f8c4 9028 	str.w	r9, [r4, #40]	; 0x28
2ffeecec:	2601      	movs	r6, #1
2ffeecee:	62e7      	str	r7, [r4, #44]	; 0x2c
2ffeecf0:	e7e7      	b.n	2ffeecc2 <trim_table_init+0x1a>
2ffeecf2:	6a23      	ldr	r3, [r4, #32]
2ffeecf4:	1c68      	adds	r0, r5, #1
2ffeecf6:	4798      	blx	r3
2ffeecf8:	69e3      	ldr	r3, [r4, #28]
2ffeecfa:	4798      	blx	r3
2ffeecfc:	4683      	mov	fp, r0
2ffeecfe:	6863      	ldr	r3, [r4, #4]
2ffeed00:	4629      	mov	r1, r5
2ffeed02:	68e2      	ldr	r2, [r4, #12]
2ffeed04:	3d01      	subs	r5, #1
2ffeed06:	4413      	add	r3, r2
2ffeed08:	4299      	cmp	r1, r3
2ffeed0a:	d201      	bcs.n	2ffeed10 <trim_table_init+0x68>
2ffeed0c:	460d      	mov	r5, r1
2ffeed0e:	e006      	b.n	2ffeed1e <trim_table_init+0x76>
2ffeed10:	6a23      	ldr	r3, [r4, #32]
2ffeed12:	4628      	mov	r0, r5
2ffeed14:	4798      	blx	r3
2ffeed16:	69e3      	ldr	r3, [r4, #28]
2ffeed18:	4798      	blx	r3
2ffeed1a:	4583      	cmp	fp, r0
2ffeed1c:	d3ef      	bcc.n	2ffeecfe <trim_table_init+0x56>
2ffeed1e:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
2ffeed22:	3d01      	subs	r5, #1
2ffeed24:	3601      	adds	r6, #1
2ffeed26:	629d      	str	r5, [r3, #40]	; 0x28
2ffeed28:	62df      	str	r7, [r3, #44]	; 0x2c
2ffeed2a:	e7ca      	b.n	2ffeecc2 <trim_table_init+0x1a>

2ffeed2c <csi_get_trimed_cal>:
2ffeed2c:	b508      	push	{r3, lr}
2ffeed2e:	f003 ff9b 	bl	2fff2c68 <stm32mp_rcc_base>
2ffeed32:	4b05      	ldr	r3, [pc, #20]	; (2ffeed48 <csi_get_trimed_cal+0x1c>)
2ffeed34:	69c0      	ldr	r0, [r0, #28]
2ffeed36:	689a      	ldr	r2, [r3, #8]
2ffeed38:	f3c0 2004 	ubfx	r0, r0, #8, #5
2ffeed3c:	685b      	ldr	r3, [r3, #4]
2ffeed3e:	1a80      	subs	r0, r0, r2
2ffeed40:	4418      	add	r0, r3
2ffeed42:	3801      	subs	r0, #1
2ffeed44:	bd08      	pop	{r3, pc}
2ffeed46:	bf00      	nop
2ffeed48:	2fffd044 	.word	0x2fffd044

2ffeed4c <csi_set_trim>:
2ffeed4c:	4b08      	ldr	r3, [pc, #32]	; (2ffeed70 <csi_set_trim+0x24>)
2ffeed4e:	b510      	push	{r4, lr}
2ffeed50:	685c      	ldr	r4, [r3, #4]
2ffeed52:	1b04      	subs	r4, r0, r4
2ffeed54:	6898      	ldr	r0, [r3, #8]
2ffeed56:	4404      	add	r4, r0
2ffeed58:	f003 ff86 	bl	2fff2c68 <stm32mp_rcc_base>
2ffeed5c:	69c3      	ldr	r3, [r0, #28]
2ffeed5e:	3401      	adds	r4, #1
2ffeed60:	0224      	lsls	r4, r4, #8
2ffeed62:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
2ffeed66:	f404 54f8 	and.w	r4, r4, #7936	; 0x1f00
2ffeed6a:	431c      	orrs	r4, r3
2ffeed6c:	61c4      	str	r4, [r0, #28]
2ffeed6e:	bd10      	pop	{r4, pc}
2ffeed70:	2fffd044 	.word	0x2fffd044

2ffeed74 <hsi_get_trimed_cal>:
2ffeed74:	b508      	push	{r3, lr}
2ffeed76:	f003 ff77 	bl	2fff2c68 <stm32mp_rcc_base>
2ffeed7a:	4a04      	ldr	r2, [pc, #16]	; (2ffeed8c <hsi_get_trimed_cal+0x18>)
2ffeed7c:	6983      	ldr	r3, [r0, #24]
2ffeed7e:	6850      	ldr	r0, [r2, #4]
2ffeed80:	f343 2306 	sbfx	r3, r3, #8, #7
2ffeed84:	4418      	add	r0, r3
2ffeed86:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
2ffeed8a:	bd08      	pop	{r3, pc}
2ffeed8c:	2fffd0ec 	.word	0x2fffd0ec

2ffeed90 <hsi_set_trim>:
2ffeed90:	4b07      	ldr	r3, [pc, #28]	; (2ffeedb0 <hsi_set_trim+0x20>)
2ffeed92:	b510      	push	{r4, lr}
2ffeed94:	685c      	ldr	r4, [r3, #4]
2ffeed96:	1b04      	subs	r4, r0, r4
2ffeed98:	f003 ff66 	bl	2fff2c68 <stm32mp_rcc_base>
2ffeed9c:	6983      	ldr	r3, [r0, #24]
2ffeed9e:	0224      	lsls	r4, r4, #8
2ffeeda0:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
2ffeeda4:	f404 44fe 	and.w	r4, r4, #32512	; 0x7f00
2ffeeda8:	431c      	orrs	r4, r3
2ffeedaa:	6184      	str	r4, [r0, #24]
2ffeedac:	bd10      	pop	{r4, pc}
2ffeedae:	bf00      	nop
2ffeedb0:	2fffd0ec 	.word	0x2fffd0ec

2ffeedb4 <rcc_calibration>:
2ffeedb4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeedb8:	4604      	mov	r4, r0
2ffeedba:	69c3      	ldr	r3, [r0, #28]
2ffeedbc:	4798      	blx	r3
2ffeedbe:	6967      	ldr	r7, [r4, #20]
2ffeedc0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2ffeedc4:	69a3      	ldr	r3, [r4, #24]
2ffeedc6:	4606      	mov	r6, r0
2ffeedc8:	437b      	muls	r3, r7
2ffeedca:	fbb3 f3f2 	udiv	r3, r3, r2
2ffeedce:	eba7 0a03 	sub.w	sl, r7, r3
2ffeedd2:	4550      	cmp	r0, sl
2ffeedd4:	441f      	add	r7, r3
2ffeedd6:	d301      	bcc.n	2ffeeddc <rcc_calibration+0x28>
2ffeedd8:	42b8      	cmp	r0, r7
2ffeedda:	d93e      	bls.n	2ffeee5a <rcc_calibration+0xa6>
2ffeeddc:	6a63      	ldr	r3, [r4, #36]	; 0x24
2ffeedde:	4798      	blx	r3
2ffeede0:	4605      	mov	r5, r0
2ffeede2:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffeede6:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffeedea:	4a59      	ldr	r2, [pc, #356]	; (2ffeef50 <rcc_calibration+0x19c>)
2ffeedec:	f242 7110 	movw	r1, #10000	; 0x2710
2ffeedf0:	2300      	movs	r3, #0
2ffeedf2:	fba0 0101 	umull	r0, r1, r0, r1
2ffeedf6:	f009 efc8 	blx	2fff8d88 <__aeabi_uldivmod>
2ffeedfa:	eb10 0308 	adds.w	r3, r0, r8
2ffeedfe:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2ffeee02:	9300      	str	r3, [sp, #0]
2ffeee04:	eb41 0309 	adc.w	r3, r1, r9
2ffeee08:	9301      	str	r3, [sp, #4]
2ffeee0a:	6963      	ldr	r3, [r4, #20]
2ffeee0c:	6922      	ldr	r2, [r4, #16]
2ffeee0e:	42b3      	cmp	r3, r6
2ffeee10:	d80c      	bhi.n	2ffeee2c <rcc_calibration+0x78>
2ffeee12:	4623      	mov	r3, r4
2ffeee14:	2600      	movs	r6, #0
2ffeee16:	4296      	cmp	r6, r2
2ffeee18:	d00d      	beq.n	2ffeee36 <rcc_calibration+0x82>
2ffeee1a:	6a98      	ldr	r0, [r3, #40]	; 0x28
2ffeee1c:	4285      	cmp	r5, r0
2ffeee1e:	d814      	bhi.n	2ffeee4a <rcc_calibration+0x96>
2ffeee20:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
2ffeee22:	3308      	adds	r3, #8
2ffeee24:	428d      	cmp	r5, r1
2ffeee26:	d91d      	bls.n	2ffeee64 <rcc_calibration+0xb0>
2ffeee28:	1e68      	subs	r0, r5, #1
2ffeee2a:	e00e      	b.n	2ffeee4a <rcc_calibration+0x96>
2ffeee2c:	eb04 03c2 	add.w	r3, r4, r2, lsl #3
2ffeee30:	1e51      	subs	r1, r2, #1
2ffeee32:	2900      	cmp	r1, #0
2ffeee34:	da01      	bge.n	2ffeee3a <rcc_calibration+0x86>
2ffeee36:	4628      	mov	r0, r5
2ffeee38:	e007      	b.n	2ffeee4a <rcc_calibration+0x96>
2ffeee3a:	6a58      	ldr	r0, [r3, #36]	; 0x24
2ffeee3c:	4285      	cmp	r5, r0
2ffeee3e:	d304      	bcc.n	2ffeee4a <rcc_calibration+0x96>
2ffeee40:	6a1a      	ldr	r2, [r3, #32]
2ffeee42:	3b08      	subs	r3, #8
2ffeee44:	4295      	cmp	r5, r2
2ffeee46:	d20b      	bcs.n	2ffeee60 <rcc_calibration+0xac>
2ffeee48:	1c68      	adds	r0, r5, #1
2ffeee4a:	6a23      	ldr	r3, [r4, #32]
2ffeee4c:	4681      	mov	r9, r0
2ffeee4e:	4798      	blx	r3
2ffeee50:	69e3      	ldr	r3, [r4, #28]
2ffeee52:	4798      	blx	r3
2ffeee54:	4606      	mov	r6, r0
2ffeee56:	b938      	cbnz	r0, 2ffeee68 <rcc_calibration+0xb4>
2ffeee58:	6160      	str	r0, [r4, #20]
2ffeee5a:	b003      	add	sp, #12
2ffeee5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeee60:	3901      	subs	r1, #1
2ffeee62:	e7e6      	b.n	2ffeee32 <rcc_calibration+0x7e>
2ffeee64:	3601      	adds	r6, #1
2ffeee66:	e7d6      	b.n	2ffeee16 <rcc_calibration+0x62>
2ffeee68:	6963      	ldr	r3, [r4, #20]
2ffeee6a:	4283      	cmp	r3, r0
2ffeee6c:	bf34      	ite	cc
2ffeee6e:	1ac3      	subcc	r3, r0, r3
2ffeee70:	1a1b      	subcs	r3, r3, r0
2ffeee72:	4598      	cmp	r8, r3
2ffeee74:	bf84      	itt	hi
2ffeee76:	4698      	movhi	r8, r3
2ffeee78:	464d      	movhi	r5, r9
2ffeee7a:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffeee7e:	e9dd bc00 	ldrd	fp, ip, [sp]
2ffeee82:	458c      	cmp	ip, r1
2ffeee84:	bf08      	it	eq
2ffeee86:	4583      	cmpeq	fp, r0
2ffeee88:	d301      	bcc.n	2ffeee8e <rcc_calibration+0xda>
2ffeee8a:	4598      	cmp	r8, r3
2ffeee8c:	d0bd      	beq.n	2ffeee0a <rcc_calibration+0x56>
2ffeee8e:	6a23      	ldr	r3, [r4, #32]
2ffeee90:	4628      	mov	r0, r5
2ffeee92:	4798      	blx	r3
2ffeee94:	69e3      	ldr	r3, [r4, #28]
2ffeee96:	4798      	blx	r3
2ffeee98:	4582      	cmp	sl, r0
2ffeee9a:	4602      	mov	r2, r0
2ffeee9c:	d801      	bhi.n	2ffeeea2 <rcc_calibration+0xee>
2ffeee9e:	4287      	cmp	r7, r0
2ffeeea0:	d2db      	bcs.n	2ffeee5a <rcc_calibration+0xa6>
2ffeeea2:	6a21      	ldr	r1, [r4, #32]
2ffeeea4:	462b      	mov	r3, r5
2ffeeea6:	482b      	ldr	r0, [pc, #172]	; (2ffeef54 <rcc_calibration+0x1a0>)
2ffeeea8:	4f2b      	ldr	r7, [pc, #172]	; (2ffeef58 <rcc_calibration+0x1a4>)
2ffeeeaa:	4e2c      	ldr	r6, [pc, #176]	; (2ffeef5c <rcc_calibration+0x1a8>)
2ffeeeac:	42b9      	cmp	r1, r7
2ffeeeae:	bf0c      	ite	eq
2ffeeeb0:	4631      	moveq	r1, r6
2ffeeeb2:	4601      	movne	r1, r0
2ffeeeb4:	482a      	ldr	r0, [pc, #168]	; (2ffeef60 <rcc_calibration+0x1ac>)
2ffeeeb6:	f003 fd11 	bl	2fff28dc <tf_log>
2ffeeeba:	6921      	ldr	r1, [r4, #16]
2ffeeebc:	4622      	mov	r2, r4
2ffeeebe:	2300      	movs	r3, #0
2ffeeec0:	428b      	cmp	r3, r1
2ffeeec2:	d101      	bne.n	2ffeeec8 <rcc_calibration+0x114>
2ffeeec4:	462e      	mov	r6, r5
2ffeeec6:	e007      	b.n	2ffeeed8 <rcc_calibration+0x124>
2ffeeec8:	6a96      	ldr	r6, [r2, #40]	; 0x28
2ffeeeca:	42b5      	cmp	r5, r6
2ffeeecc:	d804      	bhi.n	2ffeeed8 <rcc_calibration+0x124>
2ffeeece:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
2ffeeed0:	3208      	adds	r2, #8
2ffeeed2:	4285      	cmp	r5, r0
2ffeeed4:	d91a      	bls.n	2ffeef0c <rcc_calibration+0x158>
2ffeeed6:	1e6e      	subs	r6, r5, #1
2ffeeed8:	6a23      	ldr	r3, [r4, #32]
2ffeeeda:	4630      	mov	r0, r6
2ffeeedc:	4798      	blx	r3
2ffeeede:	6a22      	ldr	r2, [r4, #32]
2ffeeee0:	491e      	ldr	r1, [pc, #120]	; (2ffeef5c <rcc_calibration+0x1a8>)
2ffeeee2:	4b1c      	ldr	r3, [pc, #112]	; (2ffeef54 <rcc_calibration+0x1a0>)
2ffeeee4:	42ba      	cmp	r2, r7
2ffeeee6:	bf0c      	ite	eq
2ffeeee8:	4688      	moveq	r8, r1
2ffeeeea:	4698      	movne	r8, r3
2ffeeeec:	69e3      	ldr	r3, [r4, #28]
2ffeeeee:	4798      	blx	r3
2ffeeef0:	4602      	mov	r2, r0
2ffeeef2:	4633      	mov	r3, r6
2ffeeef4:	481a      	ldr	r0, [pc, #104]	; (2ffeef60 <rcc_calibration+0x1ac>)
2ffeeef6:	4641      	mov	r1, r8
2ffeeef8:	f003 fcf0 	bl	2fff28dc <tf_log>
2ffeeefc:	6922      	ldr	r2, [r4, #16]
2ffeeefe:	1e53      	subs	r3, r2, #1
2ffeef00:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
2ffeef04:	2b00      	cmp	r3, #0
2ffeef06:	da03      	bge.n	2ffeef10 <rcc_calibration+0x15c>
2ffeef08:	462e      	mov	r6, r5
2ffeef0a:	e009      	b.n	2ffeef20 <rcc_calibration+0x16c>
2ffeef0c:	3301      	adds	r3, #1
2ffeef0e:	e7d7      	b.n	2ffeeec0 <rcc_calibration+0x10c>
2ffeef10:	6a56      	ldr	r6, [r2, #36]	; 0x24
2ffeef12:	42b5      	cmp	r5, r6
2ffeef14:	d304      	bcc.n	2ffeef20 <rcc_calibration+0x16c>
2ffeef16:	6a11      	ldr	r1, [r2, #32]
2ffeef18:	3a08      	subs	r2, #8
2ffeef1a:	428d      	cmp	r5, r1
2ffeef1c:	d215      	bcs.n	2ffeef4a <rcc_calibration+0x196>
2ffeef1e:	1c6e      	adds	r6, r5, #1
2ffeef20:	6a23      	ldr	r3, [r4, #32]
2ffeef22:	4630      	mov	r0, r6
2ffeef24:	4798      	blx	r3
2ffeef26:	6a22      	ldr	r2, [r4, #32]
2ffeef28:	490c      	ldr	r1, [pc, #48]	; (2ffeef5c <rcc_calibration+0x1a8>)
2ffeef2a:	4b0a      	ldr	r3, [pc, #40]	; (2ffeef54 <rcc_calibration+0x1a0>)
2ffeef2c:	42ba      	cmp	r2, r7
2ffeef2e:	bf0c      	ite	eq
2ffeef30:	460f      	moveq	r7, r1
2ffeef32:	461f      	movne	r7, r3
2ffeef34:	69e3      	ldr	r3, [r4, #28]
2ffeef36:	4798      	blx	r3
2ffeef38:	4602      	mov	r2, r0
2ffeef3a:	4633      	mov	r3, r6
2ffeef3c:	4808      	ldr	r0, [pc, #32]	; (2ffeef60 <rcc_calibration+0x1ac>)
2ffeef3e:	4639      	mov	r1, r7
2ffeef40:	b003      	add	sp, #12
2ffeef42:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeef46:	f003 bcc9 	b.w	2fff28dc <tf_log>
2ffeef4a:	3b01      	subs	r3, #1
2ffeef4c:	e7da      	b.n	2ffeef04 <rcc_calibration+0x150>
2ffeef4e:	bf00      	nop
2ffeef50:	000f4240 	.word	0x000f4240
2ffeef54:	2fffa22d 	.word	0x2fffa22d
2ffeef58:	2ffeed91 	.word	0x2ffeed91
2ffeef5c:	2fffa229 	.word	0x2fffa229
2ffeef60:	2fffa231 	.word	0x2fffa231

2ffeef64 <stm32mp1_calib_get_wakeup>:
2ffeef64:	4b01      	ldr	r3, [pc, #4]	; (2ffeef6c <stm32mp1_calib_get_wakeup+0x8>)
2ffeef66:	7818      	ldrb	r0, [r3, #0]
2ffeef68:	4770      	bx	lr
2ffeef6a:	bf00      	nop
2ffeef6c:	2fffe2b0 	.word	0x2fffe2b0

2ffeef70 <stm32mp1_calib_set_wakeup>:
2ffeef70:	4b01      	ldr	r3, [pc, #4]	; (2ffeef78 <stm32mp1_calib_set_wakeup+0x8>)
2ffeef72:	7018      	strb	r0, [r3, #0]
2ffeef74:	4770      	bx	lr
2ffeef76:	bf00      	nop
2ffeef78:	2fffe2b0 	.word	0x2fffe2b0

2ffeef7c <stm32mp1_calib_it_handler>:
2ffeef7c:	b538      	push	{r3, r4, r5, lr}
2ffeef7e:	4605      	mov	r5, r0
2ffeef80:	f003 fe72 	bl	2fff2c68 <stm32mp_rcc_base>
2ffeef84:	2db0      	cmp	r5, #176	; 0xb0
2ffeef86:	4604      	mov	r4, r0
2ffeef88:	d00e      	beq.n	2ffeefa8 <stm32mp1_calib_it_handler+0x2c>
2ffeef8a:	2db1      	cmp	r5, #177	; 0xb1
2ffeef8c:	d11f      	bne.n	2ffeefce <stm32mp1_calib_it_handler+0x52>
2ffeef8e:	2080      	movs	r0, #128	; 0x80
2ffeef90:	f002 fae2 	bl	2fff1558 <plat_ic_set_priority_mask>
2ffeef94:	f8d4 3418 	ldr.w	r3, [r4, #1048]	; 0x418
2ffeef98:	2201      	movs	r2, #1
2ffeef9a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2ffeef9e:	f8c4 3418 	str.w	r3, [r4, #1048]	; 0x418
2ffeefa2:	4b13      	ldr	r3, [pc, #76]	; (2ffeeff0 <stm32mp1_calib_it_handler+0x74>)
2ffeefa4:	701a      	strb	r2, [r3, #0]
2ffeefa6:	bd38      	pop	{r3, r4, r5, pc}
2ffeefa8:	4b11      	ldr	r3, [pc, #68]	; (2ffeeff0 <stm32mp1_calib_it_handler+0x74>)
2ffeefaa:	2200      	movs	r2, #0
2ffeefac:	701a      	strb	r2, [r3, #0]
2ffeefae:	4b11      	ldr	r3, [pc, #68]	; (2ffeeff4 <stm32mp1_calib_it_handler+0x78>)
2ffeefb0:	681a      	ldr	r2, [r3, #0]
2ffeefb2:	0791      	lsls	r1, r2, #30
2ffeefb4:	bf42      	ittt	mi
2ffeefb6:	681a      	ldrmi	r2, [r3, #0]
2ffeefb8:	f042 0202 	orrmi.w	r2, r2, #2
2ffeefbc:	601a      	strmi	r2, [r3, #0]
2ffeefbe:	4b0e      	ldr	r3, [pc, #56]	; (2ffeeff8 <stm32mp1_calib_it_handler+0x7c>)
2ffeefc0:	681a      	ldr	r2, [r3, #0]
2ffeefc2:	0792      	lsls	r2, r2, #30
2ffeefc4:	bf42      	ittt	mi
2ffeefc6:	681a      	ldrmi	r2, [r3, #0]
2ffeefc8:	f042 0202 	orrmi.w	r2, r2, #2
2ffeefcc:	601a      	strmi	r2, [r3, #0]
2ffeefce:	480b      	ldr	r0, [pc, #44]	; (2ffeeffc <stm32mp1_calib_it_handler+0x80>)
2ffeefd0:	6943      	ldr	r3, [r0, #20]
2ffeefd2:	b10b      	cbz	r3, 2ffeefd8 <stm32mp1_calib_it_handler+0x5c>
2ffeefd4:	f7ff feee 	bl	2ffeedb4 <rcc_calibration>
2ffeefd8:	4809      	ldr	r0, [pc, #36]	; (2ffef000 <stm32mp1_calib_it_handler+0x84>)
2ffeefda:	6943      	ldr	r3, [r0, #20]
2ffeefdc:	b10b      	cbz	r3, 2ffeefe2 <stm32mp1_calib_it_handler+0x66>
2ffeefde:	f7ff fee9 	bl	2ffeedb4 <rcc_calibration>
2ffeefe2:	4b08      	ldr	r3, [pc, #32]	; (2ffef004 <stm32mp1_calib_it_handler+0x88>)
2ffeefe4:	681b      	ldr	r3, [r3, #0]
2ffeefe6:	2b00      	cmp	r3, #0
2ffeefe8:	d0dd      	beq.n	2ffeefa6 <stm32mp1_calib_it_handler+0x2a>
2ffeefea:	ee0e 3f12 	mcr	15, 0, r3, cr14, cr2, {0}
2ffeefee:	e7da      	b.n	2ffeefa6 <stm32mp1_calib_it_handler+0x2a>
2ffeeff0:	2fffe2b0 	.word	0x2fffe2b0
2ffeeff4:	5000d04c 	.word	0x5000d04c
2ffeeff8:	5000d050 	.word	0x5000d050
2ffeeffc:	2fffd0ec 	.word	0x2fffd0ec
2ffef000:	2fffd044 	.word	0x2fffd044
2ffef004:	2fffe2b4 	.word	0x2fffe2b4

2ffef008 <stm32mp1_calib_start_hsi_cal>:
2ffef008:	4805      	ldr	r0, [pc, #20]	; (2ffef020 <stm32mp1_calib_start_hsi_cal+0x18>)
2ffef00a:	b508      	push	{r3, lr}
2ffef00c:	6943      	ldr	r3, [r0, #20]
2ffef00e:	b11b      	cbz	r3, 2ffef018 <stm32mp1_calib_start_hsi_cal+0x10>
2ffef010:	f7ff fed0 	bl	2ffeedb4 <rcc_calibration>
2ffef014:	2000      	movs	r0, #0
2ffef016:	bd08      	pop	{r3, pc}
2ffef018:	f06f 0001 	mvn.w	r0, #1
2ffef01c:	e7fb      	b.n	2ffef016 <stm32mp1_calib_start_hsi_cal+0xe>
2ffef01e:	bf00      	nop
2ffef020:	2fffd0ec 	.word	0x2fffd0ec

2ffef024 <stm32mp1_calib_start_csi_cal>:
2ffef024:	4805      	ldr	r0, [pc, #20]	; (2ffef03c <stm32mp1_calib_start_csi_cal+0x18>)
2ffef026:	b508      	push	{r3, lr}
2ffef028:	6943      	ldr	r3, [r0, #20]
2ffef02a:	b11b      	cbz	r3, 2ffef034 <stm32mp1_calib_start_csi_cal+0x10>
2ffef02c:	f7ff fec2 	bl	2ffeedb4 <rcc_calibration>
2ffef030:	2000      	movs	r0, #0
2ffef032:	bd08      	pop	{r3, pc}
2ffef034:	f06f 0001 	mvn.w	r0, #1
2ffef038:	e7fb      	b.n	2ffef032 <stm32mp1_calib_start_csi_cal+0xe>
2ffef03a:	bf00      	nop
2ffef03c:	2fffd044 	.word	0x2fffd044

2ffef040 <stm32mp1_calib_init>:
2ffef040:	b513      	push	{r0, r1, r4, lr}
2ffef042:	a901      	add	r1, sp, #4
2ffef044:	4829      	ldr	r0, [pc, #164]	; (2ffef0ec <stm32mp1_calib_init+0xac>)
2ffef046:	f005 fbee 	bl	2fff4826 <fdt_rcc_read_prop>
2ffef04a:	b1d0      	cbz	r0, 2ffef082 <stm32mp1_calib_init+0x42>
2ffef04c:	4c28      	ldr	r4, [pc, #160]	; (2ffef0f0 <stm32mp1_calib_init+0xb0>)
2ffef04e:	2100      	movs	r1, #0
2ffef050:	f104 001c 	add.w	r0, r4, #28
2ffef054:	f000 fe5c 	bl	2ffefd10 <stm32_timer_freq_func>
2ffef058:	69e3      	ldr	r3, [r4, #28]
2ffef05a:	b193      	cbz	r3, 2ffef082 <stm32mp1_calib_init+0x42>
2ffef05c:	2004      	movs	r0, #4
2ffef05e:	f006 f95b 	bl	2fff5318 <stm32mp_clk_get_rate>
2ffef062:	6160      	str	r0, [r4, #20]
2ffef064:	f003 fe00 	bl	2fff2c68 <stm32mp_rcc_base>
2ffef068:	6983      	ldr	r3, [r0, #24]
2ffef06a:	4620      	mov	r0, r4
2ffef06c:	f3c3 4308 	ubfx	r3, r3, #16, #9
2ffef070:	6063      	str	r3, [r4, #4]
2ffef072:	f7ff fe19 	bl	2ffeeca8 <trim_table_init>
2ffef076:	6860      	ldr	r0, [r4, #4]
2ffef078:	6a23      	ldr	r3, [r4, #32]
2ffef07a:	4798      	blx	r3
2ffef07c:	4620      	mov	r0, r4
2ffef07e:	f7ff fe99 	bl	2ffeedb4 <rcc_calibration>
2ffef082:	481c      	ldr	r0, [pc, #112]	; (2ffef0f4 <stm32mp1_calib_init+0xb4>)
2ffef084:	a901      	add	r1, sp, #4
2ffef086:	f005 fbce 	bl	2fff4826 <fdt_rcc_read_prop>
2ffef08a:	b1d0      	cbz	r0, 2ffef0c2 <stm32mp1_calib_init+0x82>
2ffef08c:	4c1a      	ldr	r4, [pc, #104]	; (2ffef0f8 <stm32mp1_calib_init+0xb8>)
2ffef08e:	2101      	movs	r1, #1
2ffef090:	f104 001c 	add.w	r0, r4, #28
2ffef094:	f000 fe3c 	bl	2ffefd10 <stm32_timer_freq_func>
2ffef098:	69e3      	ldr	r3, [r4, #28]
2ffef09a:	b193      	cbz	r3, 2ffef0c2 <stm32mp1_calib_init+0x82>
2ffef09c:	2001      	movs	r0, #1
2ffef09e:	f006 f93b 	bl	2fff5318 <stm32mp_clk_get_rate>
2ffef0a2:	6160      	str	r0, [r4, #20]
2ffef0a4:	f003 fde0 	bl	2fff2c68 <stm32mp_rcc_base>
2ffef0a8:	69c3      	ldr	r3, [r0, #28]
2ffef0aa:	4620      	mov	r0, r4
2ffef0ac:	f3c3 4307 	ubfx	r3, r3, #16, #8
2ffef0b0:	6063      	str	r3, [r4, #4]
2ffef0b2:	f7ff fdf9 	bl	2ffeeca8 <trim_table_init>
2ffef0b6:	6860      	ldr	r0, [r4, #4]
2ffef0b8:	6a23      	ldr	r3, [r4, #32]
2ffef0ba:	4798      	blx	r3
2ffef0bc:	4620      	mov	r0, r4
2ffef0be:	f7ff fe79 	bl	2ffeedb4 <rcc_calibration>
2ffef0c2:	480e      	ldr	r0, [pc, #56]	; (2ffef0fc <stm32mp1_calib_init+0xbc>)
2ffef0c4:	2100      	movs	r1, #0
2ffef0c6:	f005 fb9f 	bl	2fff4808 <fdt_rcc_read_uint32_default>
2ffef0ca:	4604      	mov	r4, r0
2ffef0cc:	f003 fdbd 	bl	2fff2c4a <plat_get_syscnt_freq2>
2ffef0d0:	4360      	muls	r0, r4
2ffef0d2:	4b0b      	ldr	r3, [pc, #44]	; (2ffef100 <stm32mp1_calib_init+0xc0>)
2ffef0d4:	6018      	str	r0, [r3, #0]
2ffef0d6:	b120      	cbz	r0, 2ffef0e2 <stm32mp1_calib_init+0xa2>
2ffef0d8:	ee0e 0f12 	mcr	15, 0, r0, cr14, cr2, {0}
2ffef0dc:	2301      	movs	r3, #1
2ffef0de:	ee0e 3f32 	mcr	15, 0, r3, cr14, cr2, {1}
2ffef0e2:	4808      	ldr	r0, [pc, #32]	; (2ffef104 <stm32mp1_calib_init+0xc4>)
2ffef0e4:	f005 fbb7 	bl	2fff4856 <fdt_rcc_enable_it>
2ffef0e8:	b002      	add	sp, #8
2ffef0ea:	bd10      	pop	{r4, pc}
2ffef0ec:	2fffa256 	.word	0x2fffa256
2ffef0f0:	2fffd0ec 	.word	0x2fffd0ec
2ffef0f4:	2fffa261 	.word	0x2fffa261
2ffef0f8:	2fffd044 	.word	0x2fffd044
2ffef0fc:	2fffa26c 	.word	0x2fffa26c
2ffef100:	2fffe2b4 	.word	0x2fffe2b4
2ffef104:	2fffa277 	.word	0x2fffa277

2ffef108 <etzpc_configure_decprot>:
2ffef108:	4a0d      	ldr	r2, [pc, #52]	; (2ffef140 <etzpc_configure_decprot+0x38>)
2ffef10a:	b538      	push	{r3, r4, r5, lr}
2ffef10c:	0043      	lsls	r3, r0, #1
2ffef10e:	0905      	lsrs	r5, r0, #4
2ffef110:	f003 041e 	and.w	r4, r3, #30
2ffef114:	f001 0303 	and.w	r3, r1, #3
2ffef118:	7991      	ldrb	r1, [r2, #6]
2ffef11a:	4288      	cmp	r0, r1
2ffef11c:	d303      	bcc.n	2ffef126 <etzpc_configure_decprot+0x1e>
2ffef11e:	4809      	ldr	r0, [pc, #36]	; (2ffef144 <etzpc_configure_decprot+0x3c>)
2ffef120:	2198      	movs	r1, #152	; 0x98
2ffef122:	f00a fccd 	bl	2fff9ac0 <__assert>
2ffef126:	6812      	ldr	r2, [r2, #0]
2ffef128:	2003      	movs	r0, #3
2ffef12a:	40a3      	lsls	r3, r4
2ffef12c:	40a0      	lsls	r0, r4
2ffef12e:	3210      	adds	r2, #16
2ffef130:	f852 1025 	ldr.w	r1, [r2, r5, lsl #2]
2ffef134:	ea21 0100 	bic.w	r1, r1, r0
2ffef138:	4319      	orrs	r1, r3
2ffef13a:	f842 1025 	str.w	r1, [r2, r5, lsl #2]
2ffef13e:	bd38      	pop	{r3, r4, r5, pc}
2ffef140:	2fffe2b8 	.word	0x2fffe2b8
2ffef144:	2fffa27f 	.word	0x2fffa27f

2ffef148 <etzpc_get_decprot>:
2ffef148:	490a      	ldr	r1, [pc, #40]	; (2ffef174 <etzpc_get_decprot+0x2c>)
2ffef14a:	b510      	push	{r4, lr}
2ffef14c:	680a      	ldr	r2, [r1, #0]
2ffef14e:	7989      	ldrb	r1, [r1, #6]
2ffef150:	0043      	lsls	r3, r0, #1
2ffef152:	3210      	adds	r2, #16
2ffef154:	4288      	cmp	r0, r1
2ffef156:	f003 031e 	and.w	r3, r3, #30
2ffef15a:	ea4f 1410 	mov.w	r4, r0, lsr #4
2ffef15e:	d303      	bcc.n	2ffef168 <etzpc_get_decprot+0x20>
2ffef160:	4805      	ldr	r0, [pc, #20]	; (2ffef178 <etzpc_get_decprot+0x30>)
2ffef162:	21ab      	movs	r1, #171	; 0xab
2ffef164:	f00a fcac 	bl	2fff9ac0 <__assert>
2ffef168:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
2ffef16c:	40d8      	lsrs	r0, r3
2ffef16e:	f000 0003 	and.w	r0, r0, #3
2ffef172:	bd10      	pop	{r4, pc}
2ffef174:	2fffe2b8 	.word	0x2fffe2b8
2ffef178:	2fffa27f 	.word	0x2fffa27f

2ffef17c <etzpc_lock_decprot>:
2ffef17c:	4909      	ldr	r1, [pc, #36]	; (2ffef1a4 <etzpc_lock_decprot+0x28>)
2ffef17e:	f000 031f 	and.w	r3, r0, #31
2ffef182:	2201      	movs	r2, #1
2ffef184:	b510      	push	{r4, lr}
2ffef186:	409a      	lsls	r2, r3
2ffef188:	680b      	ldr	r3, [r1, #0]
2ffef18a:	7989      	ldrb	r1, [r1, #6]
2ffef18c:	0944      	lsrs	r4, r0, #5
2ffef18e:	3330      	adds	r3, #48	; 0x30
2ffef190:	4288      	cmp	r0, r1
2ffef192:	d303      	bcc.n	2ffef19c <etzpc_lock_decprot+0x20>
2ffef194:	4804      	ldr	r0, [pc, #16]	; (2ffef1a8 <etzpc_lock_decprot+0x2c>)
2ffef196:	21bd      	movs	r1, #189	; 0xbd
2ffef198:	f00a fc92 	bl	2fff9ac0 <__assert>
2ffef19c:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
2ffef1a0:	bd10      	pop	{r4, pc}
2ffef1a2:	bf00      	nop
2ffef1a4:	2fffe2b8 	.word	0x2fffe2b8
2ffef1a8:	2fffa27f 	.word	0x2fffa27f

2ffef1ac <etzpc_configure_tzma>:
2ffef1ac:	b508      	push	{r3, lr}
2ffef1ae:	4b06      	ldr	r3, [pc, #24]	; (2ffef1c8 <etzpc_configure_tzma+0x1c>)
2ffef1b0:	795a      	ldrb	r2, [r3, #5]
2ffef1b2:	4290      	cmp	r0, r2
2ffef1b4:	d303      	bcc.n	2ffef1be <etzpc_configure_tzma+0x12>
2ffef1b6:	4805      	ldr	r0, [pc, #20]	; (2ffef1cc <etzpc_configure_tzma+0x20>)
2ffef1b8:	21c9      	movs	r1, #201	; 0xc9
2ffef1ba:	f00a fc81 	bl	2fff9ac0 <__assert>
2ffef1be:	681b      	ldr	r3, [r3, #0]
2ffef1c0:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
2ffef1c4:	bd08      	pop	{r3, pc}
2ffef1c6:	bf00      	nop
2ffef1c8:	2fffe2b8 	.word	0x2fffe2b8
2ffef1cc:	2fffa27f 	.word	0x2fffa27f

2ffef1d0 <etzpc_init>:
2ffef1d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2ffef1d4:	b087      	sub	sp, #28
2ffef1d6:	4a36      	ldr	r2, [pc, #216]	; (2ffef2b0 <etzpc_init+0xe0>)
2ffef1d8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffef1dc:	a802      	add	r0, sp, #8
2ffef1de:	f008 ffdd 	bl	2fff819c <dt_get_node>
2ffef1e2:	1e05      	subs	r5, r0, #0
2ffef1e4:	db5d      	blt.n	2ffef2a2 <etzpc_init+0xd2>
2ffef1e6:	9b05      	ldr	r3, [sp, #20]
2ffef1e8:	2b02      	cmp	r3, #2
2ffef1ea:	d15d      	bne.n	2ffef2a8 <etzpc_init+0xd8>
2ffef1ec:	9a02      	ldr	r2, [sp, #8]
2ffef1ee:	2400      	movs	r4, #0
2ffef1f0:	4e30      	ldr	r6, [pc, #192]	; (2ffef2b4 <etzpc_init+0xe4>)
2ffef1f2:	4668      	mov	r0, sp
2ffef1f4:	f8d2 33f0 	ldr.w	r3, [r2, #1008]	; 0x3f0
2ffef1f8:	6032      	str	r2, [r6, #0]
2ffef1fa:	0a19      	lsrs	r1, r3, #8
2ffef1fc:	7173      	strb	r3, [r6, #5]
2ffef1fe:	71b1      	strb	r1, [r6, #6]
2ffef200:	0c19      	lsrs	r1, r3, #16
2ffef202:	0e1b      	lsrs	r3, r3, #24
2ffef204:	7133      	strb	r3, [r6, #4]
2ffef206:	f892 33f4 	ldrb.w	r3, [r2, #1012]	; 0x3f4
2ffef20a:	71f1      	strb	r1, [r6, #7]
2ffef20c:	7233      	strb	r3, [r6, #8]
2ffef20e:	9401      	str	r4, [sp, #4]
2ffef210:	f008 fed8 	bl	2fff7fc4 <fdt_get_address>
2ffef214:	2800      	cmp	r0, #0
2ffef216:	d041      	beq.n	2ffef29c <etzpc_init+0xcc>
2ffef218:	4a27      	ldr	r2, [pc, #156]	; (2ffef2b8 <etzpc_init+0xe8>)
2ffef21a:	4629      	mov	r1, r5
2ffef21c:	9800      	ldr	r0, [sp, #0]
2ffef21e:	ab01      	add	r3, sp, #4
2ffef220:	f00a fab1 	bl	2fff9786 <fdt_getprop>
2ffef224:	4605      	mov	r5, r0
2ffef226:	bbb8      	cbnz	r0, 2ffef298 <etzpc_init+0xc8>
2ffef228:	4824      	ldr	r0, [pc, #144]	; (2ffef2bc <etzpc_init+0xec>)
2ffef22a:	f003 fb57 	bl	2fff28dc <tf_log>
2ffef22e:	2000      	movs	r0, #0
2ffef230:	e02f      	b.n	2ffef292 <etzpc_init+0xc2>
2ffef232:	f3c7 2001 	ubfx	r0, r7, #8, #2
2ffef236:	f003 ff01 	bl	2fff303c <stm32mp_etzpc_binding2decprot>
2ffef23a:	4601      	mov	r1, r0
2ffef23c:	4681      	mov	r9, r0
2ffef23e:	4620      	mov	r0, r4
2ffef240:	f001 fc1a 	bl	2fff0a78 <stm32mp1_register_etzpc_decprot>
2ffef244:	4649      	mov	r1, r9
2ffef246:	4620      	mov	r0, r4
2ffef248:	f7ff ff5e 	bl	2ffef108 <etzpc_configure_decprot>
2ffef24c:	07fb      	lsls	r3, r7, #31
2ffef24e:	d502      	bpl.n	2ffef256 <etzpc_init+0x86>
2ffef250:	4620      	mov	r0, r4
2ffef252:	f7ff ff93 	bl	2ffef17c <etzpc_lock_decprot>
2ffef256:	f108 0801 	add.w	r8, r8, #1
2ffef25a:	9b01      	ldr	r3, [sp, #4]
2ffef25c:	ebb8 0f93 	cmp.w	r8, r3, lsr #2
2ffef260:	d2e5      	bcs.n	2ffef22e <etzpc_init+0x5e>
2ffef262:	f855 3028 	ldr.w	r3, [r5, r8, lsl #2]
2ffef266:	0e1c      	lsrs	r4, r3, #24
2ffef268:	f3c3 2207 	ubfx	r2, r3, #8, #8
2ffef26c:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
2ffef270:	f3c3 4307 	ubfx	r3, r3, #16, #8
2ffef274:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
2ffef278:	ea44 2703 	orr.w	r7, r4, r3, lsl #8
2ffef27c:	79b3      	ldrb	r3, [r6, #6]
2ffef27e:	f3c4 4407 	ubfx	r4, r4, #16, #8
2ffef282:	429c      	cmp	r4, r3
2ffef284:	d3d5      	bcc.n	2ffef232 <etzpc_init+0x62>
2ffef286:	480e      	ldr	r0, [pc, #56]	; (2ffef2c0 <etzpc_init+0xf0>)
2ffef288:	4621      	mov	r1, r4
2ffef28a:	f003 fb27 	bl	2fff28dc <tf_log>
2ffef28e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffef292:	b007      	add	sp, #28
2ffef294:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffef298:	46a0      	mov	r8, r4
2ffef29a:	e7de      	b.n	2ffef25a <etzpc_init+0x8a>
2ffef29c:	f06f 0001 	mvn.w	r0, #1
2ffef2a0:	e7f7      	b.n	2ffef292 <etzpc_init+0xc2>
2ffef2a2:	f06f 0004 	mvn.w	r0, #4
2ffef2a6:	e7f4      	b.n	2ffef292 <etzpc_init+0xc2>
2ffef2a8:	f06f 000c 	mvn.w	r0, #12
2ffef2ac:	e7f1      	b.n	2ffef292 <etzpc_init+0xc2>
2ffef2ae:	bf00      	nop
2ffef2b0:	2fffa298 	.word	0x2fffa298
2ffef2b4:	2fffe2b8 	.word	0x2fffe2b8
2ffef2b8:	2fffa2a7 	.word	0x2fffa2a7
2ffef2bc:	2fffa2b2 	.word	0x2fffa2b2
2ffef2c0:	2fffa2de 	.word	0x2fffa2de

2ffef2c4 <stm32_rng_read>:
2ffef2c4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2ffef2c8:	4606      	mov	r6, r0
2ffef2ca:	4d34      	ldr	r5, [pc, #208]	; (2ffef39c <stm32_rng_read+0xd8>)
2ffef2cc:	460c      	mov	r4, r1
2ffef2ce:	682b      	ldr	r3, [r5, #0]
2ffef2d0:	2b00      	cmp	r3, #0
2ffef2d2:	d05f      	beq.n	2ffef394 <stm32_rng_read+0xd0>
2ffef2d4:	6868      	ldr	r0, [r5, #4]
2ffef2d6:	f005 fff3 	bl	2fff52c0 <stm32mp_clk_enable>
2ffef2da:	682b      	ldr	r3, [r5, #0]
2ffef2dc:	681a      	ldr	r2, [r3, #0]
2ffef2de:	0751      	lsls	r1, r2, #29
2ffef2e0:	d401      	bmi.n	2ffef2e6 <stm32_rng_read+0x22>
2ffef2e2:	2224      	movs	r2, #36	; 0x24
2ffef2e4:	601a      	str	r2, [r3, #0]
2ffef2e6:	4637      	mov	r7, r6
2ffef2e8:	2c00      	cmp	r4, #0
2ffef2ea:	d043      	beq.n	2ffef374 <stm32_rng_read+0xb0>
2ffef2ec:	f242 7810 	movw	r8, #10000	; 0x2710
2ffef2f0:	682b      	ldr	r3, [r5, #0]
2ffef2f2:	685a      	ldr	r2, [r3, #4]
2ffef2f4:	f012 0f44 	tst.w	r2, #68	; 0x44
2ffef2f8:	d01b      	beq.n	2ffef332 <stm32_rng_read+0x6e>
2ffef2fa:	685a      	ldr	r2, [r3, #4]
2ffef2fc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
2ffef300:	605a      	str	r2, [r3, #4]
2ffef302:	f3bf 8f5f 	dmb	sy
2ffef306:	682b      	ldr	r3, [r5, #0]
2ffef308:	f103 0208 	add.w	r2, r3, #8
2ffef30c:	230c      	movs	r3, #12
2ffef30e:	6811      	ldr	r1, [r2, #0]
2ffef310:	3b01      	subs	r3, #1
2ffef312:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
2ffef316:	d1fa      	bne.n	2ffef30e <stm32_rng_read+0x4a>
2ffef318:	f3bf 8f5f 	dmb	sy
2ffef31c:	682b      	ldr	r3, [r5, #0]
2ffef31e:	685b      	ldr	r3, [r3, #4]
2ffef320:	065a      	lsls	r2, r3, #25
2ffef322:	d506      	bpl.n	2ffef332 <stm32_rng_read+0x6e>
2ffef324:	481e      	ldr	r0, [pc, #120]	; (2ffef3a0 <stm32_rng_read+0xdc>)
2ffef326:	f003 fad9 	bl	2fff28dc <tf_log>
2ffef32a:	f003 fb7b 	bl	2fff2a24 <console_flush>
2ffef32e:	f009 eb8e 	blx	2fff8a4c <do_panic>
2ffef332:	200a      	movs	r0, #10
2ffef334:	f004 fe62 	bl	2fff3ffc <udelay>
2ffef338:	f1b8 0801 	subs.w	r8, r8, #1
2ffef33c:	d027      	beq.n	2ffef38e <stm32_rng_read+0xca>
2ffef33e:	682b      	ldr	r3, [r5, #0]
2ffef340:	685b      	ldr	r3, [r3, #4]
2ffef342:	07db      	lsls	r3, r3, #31
2ffef344:	d5d4      	bpl.n	2ffef2f0 <stm32_rng_read+0x2c>
2ffef346:	f04f 0804 	mov.w	r8, #4
2ffef34a:	682b      	ldr	r3, [r5, #0]
2ffef34c:	2c04      	cmp	r4, #4
2ffef34e:	46a1      	mov	r9, r4
2ffef350:	bf28      	it	cs
2ffef352:	f04f 0904 	movcs.w	r9, #4
2ffef356:	689b      	ldr	r3, [r3, #8]
2ffef358:	4638      	mov	r0, r7
2ffef35a:	eba4 0409 	sub.w	r4, r4, r9
2ffef35e:	464a      	mov	r2, r9
2ffef360:	9301      	str	r3, [sp, #4]
2ffef362:	a901      	add	r1, sp, #4
2ffef364:	444f      	add	r7, r9
2ffef366:	f00a fbd3 	bl	2fff9b10 <memcpy>
2ffef36a:	f1b8 0801 	subs.w	r8, r8, #1
2ffef36e:	d0bb      	beq.n	2ffef2e8 <stm32_rng_read+0x24>
2ffef370:	2c00      	cmp	r4, #0
2ffef372:	d1ea      	bne.n	2ffef34a <stm32_rng_read+0x86>
2ffef374:	6868      	ldr	r0, [r5, #4]
2ffef376:	f005 ffa6 	bl	2fff52c6 <stm32mp_clk_disable>
2ffef37a:	b124      	cbz	r4, 2ffef386 <stm32_rng_read+0xc2>
2ffef37c:	1bba      	subs	r2, r7, r6
2ffef37e:	2100      	movs	r1, #0
2ffef380:	4630      	mov	r0, r6
2ffef382:	f00a fbe6 	bl	2fff9b52 <memset>
2ffef386:	4620      	mov	r0, r4
2ffef388:	b003      	add	sp, #12
2ffef38a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffef38e:	f06f 043b 	mvn.w	r4, #59	; 0x3b
2ffef392:	e7ef      	b.n	2ffef374 <stm32_rng_read+0xb0>
2ffef394:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffef398:	e7f5      	b.n	2ffef386 <stm32_rng_read+0xc2>
2ffef39a:	bf00      	nop
2ffef39c:	2fffe2c4 	.word	0x2fffe2c4
2ffef3a0:	2fffa2f2 	.word	0x2fffa2f2

2ffef3a4 <stm32_rng_init>:
2ffef3a4:	b510      	push	{r4, lr}
2ffef3a6:	b086      	sub	sp, #24
2ffef3a8:	a801      	add	r0, sp, #4
2ffef3aa:	f008 fe0b 	bl	2fff7fc4 <fdt_get_address>
2ffef3ae:	b918      	cbnz	r0, 2ffef3b8 <stm32_rng_init+0x14>
2ffef3b0:	f003 fb38 	bl	2fff2a24 <console_flush>
2ffef3b4:	f009 eb4a 	blx	2fff8a4c <do_panic>
2ffef3b8:	4a1d      	ldr	r2, [pc, #116]	; (2ffef430 <stm32_rng_init+0x8c>)
2ffef3ba:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffef3be:	a802      	add	r0, sp, #8
2ffef3c0:	f008 feec 	bl	2fff819c <dt_get_node>
2ffef3c4:	2800      	cmp	r0, #0
2ffef3c6:	db2c      	blt.n	2ffef422 <stm32_rng_init+0x7e>
2ffef3c8:	9b05      	ldr	r3, [sp, #20]
2ffef3ca:	079a      	lsls	r2, r3, #30
2ffef3cc:	d529      	bpl.n	2ffef422 <stm32_rng_init+0x7e>
2ffef3ce:	9802      	ldr	r0, [sp, #8]
2ffef3d0:	4a18      	ldr	r2, [pc, #96]	; (2ffef434 <stm32_rng_init+0x90>)
2ffef3d2:	4290      	cmp	r0, r2
2ffef3d4:	d003      	beq.n	2ffef3de <stm32_rng_init+0x3a>
2ffef3d6:	4818      	ldr	r0, [pc, #96]	; (2ffef438 <stm32_rng_init+0x94>)
2ffef3d8:	219c      	movs	r1, #156	; 0x9c
2ffef3da:	f00a fb71 	bl	2fff9ac0 <__assert>
2ffef3de:	4c17      	ldr	r4, [pc, #92]	; (2ffef43c <stm32_rng_init+0x98>)
2ffef3e0:	07db      	lsls	r3, r3, #31
2ffef3e2:	6020      	str	r0, [r4, #0]
2ffef3e4:	d520      	bpl.n	2ffef428 <stm32_rng_init+0x84>
2ffef3e6:	f001 fb27 	bl	2fff0a38 <stm32mp_register_non_secure_periph_iomem>
2ffef3ea:	9803      	ldr	r0, [sp, #12]
2ffef3ec:	2800      	cmp	r0, #0
2ffef3ee:	dbdf      	blt.n	2ffef3b0 <stm32_rng_init+0xc>
2ffef3f0:	6060      	str	r0, [r4, #4]
2ffef3f2:	f005 ff65 	bl	2fff52c0 <stm32mp_clk_enable>
2ffef3f6:	6860      	ldr	r0, [r4, #4]
2ffef3f8:	f005 ff65 	bl	2fff52c6 <stm32mp_clk_disable>
2ffef3fc:	9804      	ldr	r0, [sp, #16]
2ffef3fe:	2800      	cmp	r0, #0
2ffef400:	db0f      	blt.n	2ffef422 <stm32_rng_init+0x7e>
2ffef402:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffef406:	f008 fca5 	bl	2fff7d54 <stm32mp_reset_assert_to>
2ffef40a:	2800      	cmp	r0, #0
2ffef40c:	d1d0      	bne.n	2ffef3b0 <stm32_rng_init+0xc>
2ffef40e:	2014      	movs	r0, #20
2ffef410:	f004 fdf4 	bl	2fff3ffc <udelay>
2ffef414:	9804      	ldr	r0, [sp, #16]
2ffef416:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffef41a:	f008 fcd3 	bl	2fff7dc4 <stm32mp_reset_deassert_to>
2ffef41e:	2800      	cmp	r0, #0
2ffef420:	d1c6      	bne.n	2ffef3b0 <stm32_rng_init+0xc>
2ffef422:	2000      	movs	r0, #0
2ffef424:	b006      	add	sp, #24
2ffef426:	bd10      	pop	{r4, pc}
2ffef428:	f001 fb03 	bl	2fff0a32 <stm32mp_register_secure_periph_iomem>
2ffef42c:	e7dd      	b.n	2ffef3ea <stm32_rng_init+0x46>
2ffef42e:	bf00      	nop
2ffef430:	2fffa2fe 	.word	0x2fffa2fe
2ffef434:	54003000 	.word	0x54003000
2ffef438:	2fffa30b 	.word	0x2fffa30b
2ffef43c:	2fffe2c4 	.word	0x2fffe2c4

2ffef440 <stm32_rtc_read_calendar>:
2ffef440:	4b0a      	ldr	r3, [pc, #40]	; (2ffef46c <stm32_rtc_read_calendar+0x2c>)
2ffef442:	681a      	ldr	r2, [r3, #0]
2ffef444:	6991      	ldr	r1, [r2, #24]
2ffef446:	0689      	lsls	r1, r1, #26
2ffef448:	d408      	bmi.n	2ffef45c <stm32_rtc_read_calendar+0x1c>
2ffef44a:	68d1      	ldr	r1, [r2, #12]
2ffef44c:	f021 0120 	bic.w	r1, r1, #32
2ffef450:	60d1      	str	r1, [r2, #12]
2ffef452:	681a      	ldr	r2, [r3, #0]
2ffef454:	320c      	adds	r2, #12
2ffef456:	6811      	ldr	r1, [r2, #0]
2ffef458:	0689      	lsls	r1, r1, #26
2ffef45a:	d5fc      	bpl.n	2ffef456 <stm32_rtc_read_calendar+0x16>
2ffef45c:	681b      	ldr	r3, [r3, #0]
2ffef45e:	689a      	ldr	r2, [r3, #8]
2ffef460:	6002      	str	r2, [r0, #0]
2ffef462:	681a      	ldr	r2, [r3, #0]
2ffef464:	6042      	str	r2, [r0, #4]
2ffef466:	685b      	ldr	r3, [r3, #4]
2ffef468:	6083      	str	r3, [r0, #8]
2ffef46a:	4770      	bx	lr
2ffef46c:	2fffe2d0 	.word	0x2fffe2d0

2ffef470 <stm32_is_a_leap_year>:
2ffef470:	0783      	lsls	r3, r0, #30
2ffef472:	d10f      	bne.n	2ffef494 <stm32_is_a_leap_year+0x24>
2ffef474:	2264      	movs	r2, #100	; 0x64
2ffef476:	fbb0 f3f2 	udiv	r3, r0, r2
2ffef47a:	fb02 0313 	mls	r3, r2, r3, r0
2ffef47e:	b95b      	cbnz	r3, 2ffef498 <stm32_is_a_leap_year+0x28>
2ffef480:	f44f 72c8 	mov.w	r2, #400	; 0x190
2ffef484:	fbb0 f3f2 	udiv	r3, r0, r2
2ffef488:	fb02 0013 	mls	r0, r2, r3, r0
2ffef48c:	fab0 f080 	clz	r0, r0
2ffef490:	0940      	lsrs	r0, r0, #5
2ffef492:	4770      	bx	lr
2ffef494:	2000      	movs	r0, #0
2ffef496:	4770      	bx	lr
2ffef498:	2001      	movs	r0, #1
2ffef49a:	4770      	bx	lr

2ffef49c <stm32_rtc_get_date>:
2ffef49c:	b510      	push	{r4, lr}
2ffef49e:	b918      	cbnz	r0, 2ffef4a8 <stm32_rtc_get_date+0xc>
2ffef4a0:	21ac      	movs	r1, #172	; 0xac
2ffef4a2:	4811      	ldr	r0, [pc, #68]	; (2ffef4e8 <stm32_rtc_get_date+0x4c>)
2ffef4a4:	f00a fb0c 	bl	2fff9ac0 <__assert>
2ffef4a8:	b909      	cbnz	r1, 2ffef4ae <stm32_rtc_get_date+0x12>
2ffef4aa:	21ad      	movs	r1, #173	; 0xad
2ffef4ac:	e7f9      	b.n	2ffef4a2 <stm32_rtc_get_date+0x6>
2ffef4ae:	6883      	ldr	r3, [r0, #8]
2ffef4b0:	200a      	movs	r0, #10
2ffef4b2:	f3c3 3242 	ubfx	r2, r3, #13, #3
2ffef4b6:	f003 040f 	and.w	r4, r3, #15
2ffef4ba:	60ca      	str	r2, [r1, #12]
2ffef4bc:	f3c3 1201 	ubfx	r2, r3, #4, #2
2ffef4c0:	fb00 4202 	mla	r2, r0, r2, r4
2ffef4c4:	f3c3 2403 	ubfx	r4, r3, #8, #4
2ffef4c8:	610a      	str	r2, [r1, #16]
2ffef4ca:	f3c3 3200 	ubfx	r2, r3, #12, #1
2ffef4ce:	fb00 4202 	mla	r2, r0, r2, r4
2ffef4d2:	614a      	str	r2, [r1, #20]
2ffef4d4:	f3c3 5203 	ubfx	r2, r3, #20, #4
2ffef4d8:	f3c3 4303 	ubfx	r3, r3, #16, #4
2ffef4dc:	f503 63fa 	add.w	r3, r3, #2000	; 0x7d0
2ffef4e0:	fb00 3302 	mla	r3, r0, r2, r3
2ffef4e4:	618b      	str	r3, [r1, #24]
2ffef4e6:	bd10      	pop	{r4, pc}
2ffef4e8:	2fffa326 	.word	0x2fffa326

2ffef4ec <stm32_rtc_get_time>:
2ffef4ec:	b510      	push	{r4, lr}
2ffef4ee:	b918      	cbnz	r0, 2ffef4f8 <stm32_rtc_get_time+0xc>
2ffef4f0:	2196      	movs	r1, #150	; 0x96
2ffef4f2:	4811      	ldr	r0, [pc, #68]	; (2ffef538 <stm32_rtc_get_time+0x4c>)
2ffef4f4:	f00a fae4 	bl	2fff9ac0 <__assert>
2ffef4f8:	b909      	cbnz	r1, 2ffef4fe <stm32_rtc_get_time+0x12>
2ffef4fa:	2197      	movs	r1, #151	; 0x97
2ffef4fc:	e7f9      	b.n	2ffef4f2 <stm32_rtc_get_time+0x6>
2ffef4fe:	6843      	ldr	r3, [r0, #4]
2ffef500:	240a      	movs	r4, #10
2ffef502:	f3c3 4003 	ubfx	r0, r3, #16, #4
2ffef506:	f3c3 5201 	ubfx	r2, r3, #20, #2
2ffef50a:	fb04 0202 	mla	r2, r4, r2, r0
2ffef50e:	0258      	lsls	r0, r3, #9
2ffef510:	f04f 000a 	mov.w	r0, #10
2ffef514:	f3c3 2403 	ubfx	r4, r3, #8, #4
2ffef518:	bf48      	it	mi
2ffef51a:	320c      	addmi	r2, #12
2ffef51c:	600a      	str	r2, [r1, #0]
2ffef51e:	f3c3 3202 	ubfx	r2, r3, #12, #3
2ffef522:	fb00 4202 	mla	r2, r0, r2, r4
2ffef526:	604a      	str	r2, [r1, #4]
2ffef528:	f3c3 1202 	ubfx	r2, r3, #4, #3
2ffef52c:	f003 030f 	and.w	r3, r3, #15
2ffef530:	fb00 3302 	mla	r3, r0, r2, r3
2ffef534:	608b      	str	r3, [r1, #8]
2ffef536:	bd10      	pop	{r4, pc}
2ffef538:	2fffa326 	.word	0x2fffa326

2ffef53c <stm32_rtc_regs_lock>:
2ffef53c:	b508      	push	{r3, lr}
2ffef53e:	f003 fb96 	bl	2fff2c6e <stm32mp_lock_available>
2ffef542:	b120      	cbz	r0, 2ffef54e <stm32_rtc_regs_lock+0x12>
2ffef544:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffef548:	4801      	ldr	r0, [pc, #4]	; (2ffef550 <stm32_rtc_regs_lock+0x14>)
2ffef54a:	f00d b931 	b.w	2fffc7b0 <__spin_lock_from_thumb>
2ffef54e:	bd08      	pop	{r3, pc}
2ffef550:	2fffe2cc 	.word	0x2fffe2cc

2ffef554 <stm32_rtc_regs_unlock>:
2ffef554:	b508      	push	{r3, lr}
2ffef556:	f003 fb8a 	bl	2fff2c6e <stm32mp_lock_available>
2ffef55a:	b120      	cbz	r0, 2ffef566 <stm32_rtc_regs_unlock+0x12>
2ffef55c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffef560:	4801      	ldr	r0, [pc, #4]	; (2ffef568 <stm32_rtc_regs_unlock+0x14>)
2ffef562:	f00d b919 	b.w	2fffc798 <__spin_unlock_from_thumb>
2ffef566:	bd08      	pop	{r3, pc}
2ffef568:	2fffe2cc 	.word	0x2fffe2cc

2ffef56c <stm32_rtc_get_calendar>:
2ffef56c:	b570      	push	{r4, r5, r6, lr}
2ffef56e:	4604      	mov	r4, r0
2ffef570:	4d0d      	ldr	r5, [pc, #52]	; (2ffef5a8 <stm32_rtc_get_calendar+0x3c>)
2ffef572:	f006 f809 	bl	2fff5588 <stm32mp1_rtc_get_read_twice>
2ffef576:	4606      	mov	r6, r0
2ffef578:	f7ff ffe0 	bl	2ffef53c <stm32_rtc_regs_lock>
2ffef57c:	6868      	ldr	r0, [r5, #4]
2ffef57e:	f005 fe9f 	bl	2fff52c0 <stm32mp_clk_enable>
2ffef582:	4620      	mov	r0, r4
2ffef584:	f7ff ff5c 	bl	2ffef440 <stm32_rtc_read_calendar>
2ffef588:	b13e      	cbz	r6, 2ffef59a <stm32_rtc_get_calendar+0x2e>
2ffef58a:	6866      	ldr	r6, [r4, #4]
2ffef58c:	f7ff ff58 	bl	2ffef440 <stm32_rtc_read_calendar>
2ffef590:	6863      	ldr	r3, [r4, #4]
2ffef592:	42b3      	cmp	r3, r6
2ffef594:	d001      	beq.n	2ffef59a <stm32_rtc_get_calendar+0x2e>
2ffef596:	f7ff ff53 	bl	2ffef440 <stm32_rtc_read_calendar>
2ffef59a:	6868      	ldr	r0, [r5, #4]
2ffef59c:	f005 fe93 	bl	2fff52c6 <stm32mp_clk_disable>
2ffef5a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffef5a4:	f7ff bfd6 	b.w	2ffef554 <stm32_rtc_regs_unlock>
2ffef5a8:	2fffe2d0 	.word	0x2fffe2d0

2ffef5ac <stm32_rtc_diff_calendar>:
2ffef5ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffef5b0:	4607      	mov	r7, r0
2ffef5b2:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 2ffef76c <stm32_rtc_diff_calendar+0x1c0>
2ffef5b6:	b093      	sub	sp, #76	; 0x4c
2ffef5b8:	460e      	mov	r6, r1
2ffef5ba:	f8d8 0004 	ldr.w	r0, [r8, #4]
2ffef5be:	f005 fe7f 	bl	2fff52c0 <stm32mp_clk_enable>
2ffef5c2:	a904      	add	r1, sp, #16
2ffef5c4:	4638      	mov	r0, r7
2ffef5c6:	f7ff ff69 	bl	2ffef49c <stm32_rtc_get_date>
2ffef5ca:	a90b      	add	r1, sp, #44	; 0x2c
2ffef5cc:	4630      	mov	r0, r6
2ffef5ce:	f7ff ff65 	bl	2ffef49c <stm32_rtc_get_date>
2ffef5d2:	a904      	add	r1, sp, #16
2ffef5d4:	4638      	mov	r0, r7
2ffef5d6:	f7ff ff89 	bl	2ffef4ec <stm32_rtc_get_time>
2ffef5da:	a90b      	add	r1, sp, #44	; 0x2c
2ffef5dc:	4630      	mov	r0, r6
2ffef5de:	f7ff ff85 	bl	2ffef4ec <stm32_rtc_get_time>
2ffef5e2:	f8d8 3000 	ldr.w	r3, [r8]
2ffef5e6:	f04f 0c3c 	mov.w	ip, #60	; 0x3c
2ffef5ea:	9904      	ldr	r1, [sp, #16]
2ffef5ec:	691a      	ldr	r2, [r3, #16]
2ffef5ee:	691b      	ldr	r3, [r3, #16]
2ffef5f0:	f3c2 0e0e 	ubfx	lr, r2, #0, #15
2ffef5f4:	9a05      	ldr	r2, [sp, #20]
2ffef5f6:	f3c3 090e 	ubfx	r9, r3, #0, #15
2ffef5fa:	2300      	movs	r3, #0
2ffef5fc:	fbec 2301 	umlal	r2, r3, ip, r1
2ffef600:	980c      	ldr	r0, [sp, #48]	; 0x30
2ffef602:	2100      	movs	r1, #0
2ffef604:	fba2 450c 	umull	r4, r5, r2, ip
2ffef608:	fb0c 5503 	mla	r5, ip, r3, r5
2ffef60c:	9b06      	ldr	r3, [sp, #24]
2ffef60e:	f8cd 8004 	str.w	r8, [sp, #4]
2ffef612:	18e4      	adds	r4, r4, r3
2ffef614:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
2ffef616:	f145 0500 	adc.w	r5, r5, #0
2ffef61a:	fbec 0103 	umlal	r0, r1, ip, r3
2ffef61e:	fba0 230c 	umull	r2, r3, r0, ip
2ffef622:	fb0c 3301 	mla	r3, ip, r1, r3
2ffef626:	990d      	ldr	r1, [sp, #52]	; 0x34
2ffef628:	1852      	adds	r2, r2, r1
2ffef62a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffef62e:	f143 0300 	adc.w	r3, r3, #0
2ffef632:	1aa2      	subs	r2, r4, r2
2ffef634:	eb65 0003 	sbc.w	r0, r5, r3
2ffef638:	fba2 2301 	umull	r2, r3, r2, r1
2ffef63c:	fb01 3300 	mla	r3, r1, r0, r3
2ffef640:	8834      	ldrh	r4, [r6, #0]
2ffef642:	8838      	ldrh	r0, [r7, #0]
2ffef644:	eba9 0404 	sub.w	r4, r9, r4
2ffef648:	f109 0901 	add.w	r9, r9, #1
2ffef64c:	ebae 0000 	sub.w	r0, lr, r0
2ffef650:	f10e 0e01 	add.w	lr, lr, #1
2ffef654:	4348      	muls	r0, r1
2ffef656:	4361      	muls	r1, r4
2ffef658:	fbb0 f0fe 	udiv	r0, r0, lr
2ffef65c:	fbb1 f9f9 	udiv	r9, r1, r9
2ffef660:	ebb0 0009 	subs.w	r0, r0, r9
2ffef664:	eb60 0100 	sbc.w	r1, r0, r0
2ffef668:	eb12 0a00 	adds.w	sl, r2, r0
2ffef66c:	eb43 0b01 	adc.w	fp, r3, r1
2ffef670:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
2ffef674:	9b08      	ldr	r3, [sp, #32]
2ffef676:	9c10      	ldr	r4, [sp, #64]	; 0x40
2ffef678:	454b      	cmp	r3, r9
2ffef67a:	eba3 0109 	sub.w	r1, r3, r9
2ffef67e:	bf38      	it	cc
2ffef680:	4a38      	ldrcc	r2, [pc, #224]	; (2ffef764 <stm32_rtc_diff_calendar+0x1b8>)
2ffef682:	9d09      	ldr	r5, [sp, #36]	; 0x24
2ffef684:	bf3e      	ittt	cc
2ffef686:	1912      	addcc	r2, r2, r4
2ffef688:	f812 2c01 	ldrbcc.w	r2, [r2, #-1]
2ffef68c:	1889      	addcc	r1, r1, r2
2ffef68e:	1c62      	adds	r2, r4, #1
2ffef690:	4295      	cmp	r5, r2
2ffef692:	d90a      	bls.n	2ffef6aa <stm32_rtc_diff_calendar+0xfe>
2ffef694:	4e33      	ldr	r6, [pc, #204]	; (2ffef764 <stm32_rtc_diff_calendar+0x1b8>)
2ffef696:	4610      	mov	r0, r2
2ffef698:	4426      	add	r6, r4
2ffef69a:	280b      	cmp	r0, #11
2ffef69c:	d805      	bhi.n	2ffef6aa <stm32_rtc_diff_calendar+0xfe>
2ffef69e:	f816 7b01 	ldrb.w	r7, [r6], #1
2ffef6a2:	3001      	adds	r0, #1
2ffef6a4:	4285      	cmp	r5, r0
2ffef6a6:	4439      	add	r1, r7
2ffef6a8:	d8f7      	bhi.n	2ffef69a <stm32_rtc_diff_calendar+0xee>
2ffef6aa:	1e60      	subs	r0, r4, #1
2ffef6ac:	4285      	cmp	r5, r0
2ffef6ae:	d213      	bcs.n	2ffef6d8 <stm32_rtc_diff_calendar+0x12c>
2ffef6b0:	4f2c      	ldr	r7, [pc, #176]	; (2ffef764 <stm32_rtc_diff_calendar+0x1b8>)
2ffef6b2:	2601      	movs	r6, #1
2ffef6b4:	4638      	mov	r0, r7
2ffef6b6:	42b5      	cmp	r5, r6
2ffef6b8:	d901      	bls.n	2ffef6be <stm32_rtc_diff_calendar+0x112>
2ffef6ba:	2e0c      	cmp	r6, #12
2ffef6bc:	d101      	bne.n	2ffef6c2 <stm32_rtc_diff_calendar+0x116>
2ffef6be:	4420      	add	r0, r4
2ffef6c0:	e008      	b.n	2ffef6d4 <stm32_rtc_diff_calendar+0x128>
2ffef6c2:	f817 cb01 	ldrb.w	ip, [r7], #1
2ffef6c6:	3601      	adds	r6, #1
2ffef6c8:	4461      	add	r1, ip
2ffef6ca:	e7f4      	b.n	2ffef6b6 <stm32_rtc_diff_calendar+0x10a>
2ffef6cc:	f810 6b01 	ldrb.w	r6, [r0], #1
2ffef6d0:	3201      	adds	r2, #1
2ffef6d2:	4431      	add	r1, r6
2ffef6d4:	2a0b      	cmp	r2, #11
2ffef6d6:	d9f9      	bls.n	2ffef6cc <stm32_rtc_diff_calendar+0x120>
2ffef6d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
2ffef6da:	9f0a      	ldr	r7, [sp, #40]	; 0x28
2ffef6dc:	1c56      	adds	r6, r2, #1
2ffef6de:	42b7      	cmp	r7, r6
2ffef6e0:	d907      	bls.n	2ffef6f2 <stm32_rtc_diff_calendar+0x146>
2ffef6e2:	1ab8      	subs	r0, r7, r2
2ffef6e4:	f240 1c6d 	movw	ip, #365	; 0x16d
2ffef6e8:	fb0c 1100 	mla	r1, ip, r0, r1
2ffef6ec:	f46f 70b6 	mvn.w	r0, #364	; 0x16c
2ffef6f0:	4401      	add	r1, r0
2ffef6f2:	9203      	str	r2, [sp, #12]
2ffef6f4:	9302      	str	r3, [sp, #8]
2ffef6f6:	b179      	cbz	r1, 2ffef718 <stm32_rtc_diff_calendar+0x16c>
2ffef6f8:	4638      	mov	r0, r7
2ffef6fa:	f7ff feb9 	bl	2ffef470 <stm32_is_a_leap_year>
2ffef6fe:	9a03      	ldr	r2, [sp, #12]
2ffef700:	4680      	mov	r8, r0
2ffef702:	9b02      	ldr	r3, [sp, #8]
2ffef704:	4297      	cmp	r7, r2
2ffef706:	d113      	bne.n	2ffef730 <stm32_rtc_diff_calendar+0x184>
2ffef708:	b130      	cbz	r0, 2ffef718 <stm32_rtc_diff_calendar+0x16c>
2ffef70a:	2c02      	cmp	r4, #2
2ffef70c:	d804      	bhi.n	2ffef718 <stm32_rtc_diff_calendar+0x16c>
2ffef70e:	2d02      	cmp	r5, #2
2ffef710:	d902      	bls.n	2ffef718 <stm32_rtc_diff_calendar+0x16c>
2ffef712:	2b1c      	cmp	r3, #28
2ffef714:	d800      	bhi.n	2ffef718 <stm32_rtc_diff_calendar+0x16c>
2ffef716:	3101      	adds	r1, #1
2ffef718:	4b13      	ldr	r3, [pc, #76]	; (2ffef768 <stm32_rtc_diff_calendar+0x1bc>)
2ffef71a:	fbe3 ab01 	umlal	sl, fp, r3, r1
2ffef71e:	9b01      	ldr	r3, [sp, #4]
2ffef720:	6858      	ldr	r0, [r3, #4]
2ffef722:	f005 fdd0 	bl	2fff52c6 <stm32mp_clk_disable>
2ffef726:	4650      	mov	r0, sl
2ffef728:	4659      	mov	r1, fp
2ffef72a:	b013      	add	sp, #76	; 0x4c
2ffef72c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffef730:	4610      	mov	r0, r2
2ffef732:	f7ff fe9d 	bl	2ffef470 <stm32_is_a_leap_year>
2ffef736:	b128      	cbz	r0, 2ffef744 <stm32_rtc_diff_calendar+0x198>
2ffef738:	2c02      	cmp	r4, #2
2ffef73a:	d803      	bhi.n	2ffef744 <stm32_rtc_diff_calendar+0x198>
2ffef73c:	f1b9 0f1c 	cmp.w	r9, #28
2ffef740:	bf98      	it	ls
2ffef742:	3101      	addls	r1, #1
2ffef744:	f1b8 0f00 	cmp.w	r8, #0
2ffef748:	d002      	beq.n	2ffef750 <stm32_rtc_diff_calendar+0x1a4>
2ffef74a:	2d02      	cmp	r5, #2
2ffef74c:	d900      	bls.n	2ffef750 <stm32_rtc_diff_calendar+0x1a4>
2ffef74e:	3101      	adds	r1, #1
2ffef750:	42b7      	cmp	r7, r6
2ffef752:	d9e1      	bls.n	2ffef718 <stm32_rtc_diff_calendar+0x16c>
2ffef754:	4630      	mov	r0, r6
2ffef756:	f7ff fe8b 	bl	2ffef470 <stm32_is_a_leap_year>
2ffef75a:	b100      	cbz	r0, 2ffef75e <stm32_rtc_diff_calendar+0x1b2>
2ffef75c:	3101      	adds	r1, #1
2ffef75e:	3601      	adds	r6, #1
2ffef760:	e7f6      	b.n	2ffef750 <stm32_rtc_diff_calendar+0x1a4>
2ffef762:	bf00      	nop
2ffef764:	2fffa351 	.word	0x2fffa351
2ffef768:	05265c00 	.word	0x05265c00
2ffef76c:	2fffe2d0 	.word	0x2fffe2d0

2ffef770 <stm32_rtc_get_timestamp>:
2ffef770:	b530      	push	{r4, r5, lr}
2ffef772:	b085      	sub	sp, #20
2ffef774:	4c17      	ldr	r4, [pc, #92]	; (2ffef7d4 <stm32_rtc_get_timestamp+0x64>)
2ffef776:	4605      	mov	r5, r0
2ffef778:	f7ff fee0 	bl	2ffef53c <stm32_rtc_regs_lock>
2ffef77c:	6860      	ldr	r0, [r4, #4]
2ffef77e:	f005 fd9f 	bl	2fff52c0 <stm32mp_clk_enable>
2ffef782:	6823      	ldr	r3, [r4, #0]
2ffef784:	6d1a      	ldr	r2, [r3, #80]	; 0x50
2ffef786:	0711      	lsls	r1, r2, #28
2ffef788:	d51d      	bpl.n	2ffef7c6 <stm32_rtc_get_timestamp+0x56>
2ffef78a:	b91d      	cbnz	r5, 2ffef794 <stm32_rtc_get_timestamp+0x24>
2ffef78c:	4812      	ldr	r0, [pc, #72]	; (2ffef7d8 <stm32_rtc_get_timestamp+0x68>)
2ffef78e:	21c1      	movs	r1, #193	; 0xc1
2ffef790:	f00a f996 	bl	2fff9ac0 <__assert>
2ffef794:	6b1a      	ldr	r2, [r3, #48]	; 0x30
2ffef796:	4629      	mov	r1, r5
2ffef798:	a801      	add	r0, sp, #4
2ffef79a:	9202      	str	r2, [sp, #8]
2ffef79c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
2ffef79e:	9303      	str	r3, [sp, #12]
2ffef7a0:	f7ff fea4 	bl	2ffef4ec <stm32_rtc_get_time>
2ffef7a4:	4629      	mov	r1, r5
2ffef7a6:	a801      	add	r0, sp, #4
2ffef7a8:	f7ff fe78 	bl	2ffef49c <stm32_rtc_get_date>
2ffef7ac:	6822      	ldr	r2, [r4, #0]
2ffef7ae:	6dd3      	ldr	r3, [r2, #92]	; 0x5c
2ffef7b0:	f043 0308 	orr.w	r3, r3, #8
2ffef7b4:	65d3      	str	r3, [r2, #92]	; 0x5c
2ffef7b6:	6823      	ldr	r3, [r4, #0]
2ffef7b8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
2ffef7ba:	06d2      	lsls	r2, r2, #27
2ffef7bc:	bf42      	ittt	mi
2ffef7be:	6dda      	ldrmi	r2, [r3, #92]	; 0x5c
2ffef7c0:	f042 0210 	orrmi.w	r2, r2, #16
2ffef7c4:	65da      	strmi	r2, [r3, #92]	; 0x5c
2ffef7c6:	6860      	ldr	r0, [r4, #4]
2ffef7c8:	f005 fd7d 	bl	2fff52c6 <stm32mp_clk_disable>
2ffef7cc:	f7ff fec2 	bl	2ffef554 <stm32_rtc_regs_unlock>
2ffef7d0:	b005      	add	sp, #20
2ffef7d2:	bd30      	pop	{r4, r5, pc}
2ffef7d4:	2fffe2d0 	.word	0x2fffe2d0
2ffef7d8:	2fffa326 	.word	0x2fffa326

2ffef7dc <stm32_rtc_set_tamper_timestamp>:
2ffef7dc:	b510      	push	{r4, lr}
2ffef7de:	f7ff fead 	bl	2ffef53c <stm32_rtc_regs_lock>
2ffef7e2:	4c0f      	ldr	r4, [pc, #60]	; (2ffef820 <stm32_rtc_set_tamper_timestamp+0x44>)
2ffef7e4:	6860      	ldr	r0, [r4, #4]
2ffef7e6:	f005 fd6b 	bl	2fff52c0 <stm32mp_clk_enable>
2ffef7ea:	6823      	ldr	r3, [r4, #0]
2ffef7ec:	22ca      	movs	r2, #202	; 0xca
2ffef7ee:	625a      	str	r2, [r3, #36]	; 0x24
2ffef7f0:	2253      	movs	r2, #83	; 0x53
2ffef7f2:	6823      	ldr	r3, [r4, #0]
2ffef7f4:	625a      	str	r2, [r3, #36]	; 0x24
2ffef7f6:	6822      	ldr	r2, [r4, #0]
2ffef7f8:	6993      	ldr	r3, [r2, #24]
2ffef7fa:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
2ffef7fe:	6193      	str	r3, [r2, #24]
2ffef800:	6822      	ldr	r2, [r4, #0]
2ffef802:	6a13      	ldr	r3, [r2, #32]
2ffef804:	f023 0308 	bic.w	r3, r3, #8
2ffef808:	6213      	str	r3, [r2, #32]
2ffef80a:	22ff      	movs	r2, #255	; 0xff
2ffef80c:	6823      	ldr	r3, [r4, #0]
2ffef80e:	625a      	str	r2, [r3, #36]	; 0x24
2ffef810:	6860      	ldr	r0, [r4, #4]
2ffef812:	f005 fd58 	bl	2fff52c6 <stm32mp_clk_disable>
2ffef816:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef81a:	f7ff be9b 	b.w	2ffef554 <stm32_rtc_regs_unlock>
2ffef81e:	bf00      	nop
2ffef820:	2fffe2d0 	.word	0x2fffe2d0

2ffef824 <stm32_rtc_is_timestamp_enable>:
2ffef824:	b538      	push	{r3, r4, r5, lr}
2ffef826:	4c06      	ldr	r4, [pc, #24]	; (2ffef840 <stm32_rtc_is_timestamp_enable+0x1c>)
2ffef828:	6860      	ldr	r0, [r4, #4]
2ffef82a:	f005 fd49 	bl	2fff52c0 <stm32mp_clk_enable>
2ffef82e:	6823      	ldr	r3, [r4, #0]
2ffef830:	6860      	ldr	r0, [r4, #4]
2ffef832:	699d      	ldr	r5, [r3, #24]
2ffef834:	f005 fd47 	bl	2fff52c6 <stm32mp_clk_disable>
2ffef838:	f3c5 6040 	ubfx	r0, r5, #25, #1
2ffef83c:	bd38      	pop	{r3, r4, r5, pc}
2ffef83e:	bf00      	nop
2ffef840:	2fffe2d0 	.word	0x2fffe2d0

2ffef844 <stm32_rtc_init>:
2ffef844:	b510      	push	{r4, lr}
2ffef846:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffef84a:	4c09      	ldr	r4, [pc, #36]	; (2ffef870 <stm32_rtc_init+0x2c>)
2ffef84c:	4a09      	ldr	r2, [pc, #36]	; (2ffef874 <stm32_rtc_init+0x30>)
2ffef84e:	4620      	mov	r0, r4
2ffef850:	f008 fca4 	bl	2fff819c <dt_get_node>
2ffef854:	2800      	cmp	r0, #0
2ffef856:	db06      	blt.n	2ffef866 <stm32_rtc_init+0x22>
2ffef858:	68e3      	ldr	r3, [r4, #12]
2ffef85a:	6820      	ldr	r0, [r4, #0]
2ffef85c:	2b02      	cmp	r3, #2
2ffef85e:	d103      	bne.n	2ffef868 <stm32_rtc_init+0x24>
2ffef860:	f001 f8e7 	bl	2fff0a32 <stm32mp_register_secure_periph_iomem>
2ffef864:	2000      	movs	r0, #0
2ffef866:	bd10      	pop	{r4, pc}
2ffef868:	f001 f8e6 	bl	2fff0a38 <stm32mp_register_non_secure_periph_iomem>
2ffef86c:	e7fa      	b.n	2ffef864 <stm32_rtc_init+0x20>
2ffef86e:	bf00      	nop
2ffef870:	2fffe2d0 	.word	0x2fffe2d0
2ffef874:	2fffa341 	.word	0x2fffa341

2ffef878 <stm32_tamp_configure_internal>:
2ffef878:	290f      	cmp	r1, #15
2ffef87a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffef87c:	d80e      	bhi.n	2ffef89c <stm32_tamp_configure_internal+0x24>
2ffef87e:	4c12      	ldr	r4, [pc, #72]	; (2ffef8c8 <stm32_tamp_configure_internal+0x50>)
2ffef880:	2500      	movs	r5, #0
2ffef882:	f04f 0e01 	mov.w	lr, #1
2ffef886:	6826      	ldr	r6, [r4, #0]
2ffef888:	f8d4 c008 	ldr.w	ip, [r4, #8]
2ffef88c:	f106 072c 	add.w	r7, r6, #44	; 0x2c
2ffef890:	b2ab      	uxth	r3, r5
2ffef892:	4299      	cmp	r1, r3
2ffef894:	d806      	bhi.n	2ffef8a4 <stm32_tamp_configure_internal+0x2c>
2ffef896:	6160      	str	r0, [r4, #20]
2ffef898:	8221      	strh	r1, [r4, #16]
2ffef89a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffef89c:	480b      	ldr	r0, [pc, #44]	; (2ffef8cc <stm32_tamp_configure_internal+0x54>)
2ffef89e:	21aa      	movs	r1, #170	; 0xaa
2ffef8a0:	f00a f90e 	bl	2fff9ac0 <__assert>
2ffef8a4:	f850 3035 	ldr.w	r3, [r0, r5, lsl #3]
2ffef8a8:	1c5a      	adds	r2, r3, #1
2ffef8aa:	d00b      	beq.n	2ffef8c4 <stm32_tamp_configure_internal+0x4c>
2ffef8ac:	3310      	adds	r3, #16
2ffef8ae:	fa0e f303 	lsl.w	r3, lr, r3
2ffef8b2:	ea1c 0f03 	tst.w	ip, r3
2ffef8b6:	d005      	beq.n	2ffef8c4 <stm32_tamp_configure_internal+0x4c>
2ffef8b8:	6832      	ldr	r2, [r6, #0]
2ffef8ba:	431a      	orrs	r2, r3
2ffef8bc:	6032      	str	r2, [r6, #0]
2ffef8be:	683a      	ldr	r2, [r7, #0]
2ffef8c0:	4313      	orrs	r3, r2
2ffef8c2:	603b      	str	r3, [r7, #0]
2ffef8c4:	3501      	adds	r5, #1
2ffef8c6:	e7e3      	b.n	2ffef890 <stm32_tamp_configure_internal+0x18>
2ffef8c8:	2fffe2e0 	.word	0x2fffe2e0
2ffef8cc:	2fffa35d 	.word	0x2fffa35d

2ffef8d0 <stm32_tamp_configure_external>:
2ffef8d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffef8d4:	2907      	cmp	r1, #7
2ffef8d6:	b085      	sub	sp, #20
2ffef8d8:	4680      	mov	r8, r0
2ffef8da:	460f      	mov	r7, r1
2ffef8dc:	e9cd 2300 	strd	r2, r3, [sp]
2ffef8e0:	d82e      	bhi.n	2ffef940 <stm32_tamp_configure_external+0x70>
2ffef8e2:	4b38      	ldr	r3, [pc, #224]	; (2ffef9c4 <stm32_tamp_configure_external+0xf4>)
2ffef8e4:	4606      	mov	r6, r0
2ffef8e6:	2000      	movs	r0, #0
2ffef8e8:	f04f 0a01 	mov.w	sl, #1
2ffef8ec:	681c      	ldr	r4, [r3, #0]
2ffef8ee:	4602      	mov	r2, r0
2ffef8f0:	4699      	mov	r9, r3
2ffef8f2:	f104 0c2c 	add.w	ip, r4, #44	; 0x2c
2ffef8f6:	f104 0e04 	add.w	lr, r4, #4
2ffef8fa:	b2c3      	uxtb	r3, r0
2ffef8fc:	429f      	cmp	r7, r3
2ffef8fe:	d823      	bhi.n	2ffef948 <stm32_tamp_configure_external+0x78>
2ffef900:	9b00      	ldr	r3, [sp, #0]
2ffef902:	60e3      	str	r3, [r4, #12]
2ffef904:	2a00      	cmp	r2, #0
2ffef906:	d056      	beq.n	2ffef9b6 <stm32_tamp_configure_external+0xe6>
2ffef908:	9b01      	ldr	r3, [sp, #4]
2ffef90a:	2504      	movs	r5, #4
2ffef90c:	431a      	orrs	r2, r3
2ffef90e:	6122      	str	r2, [r4, #16]
2ffef910:	2104      	movs	r1, #4
2ffef912:	a803      	add	r0, sp, #12
2ffef914:	f7ff fcd6 	bl	2ffef2c4 <stm32_rng_read>
2ffef918:	b958      	cbnz	r0, 2ffef932 <stm32_tamp_configure_external+0x62>
2ffef91a:	9b03      	ldr	r3, [sp, #12]
2ffef91c:	3d01      	subs	r5, #1
2ffef91e:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
2ffef922:	6163      	str	r3, [r4, #20]
2ffef924:	d1f4      	bne.n	2ffef910 <stm32_tamp_configure_external+0x40>
2ffef926:	2364      	movs	r3, #100	; 0x64
2ffef928:	69a2      	ldr	r2, [r4, #24]
2ffef92a:	0452      	lsls	r2, r2, #17
2ffef92c:	d541      	bpl.n	2ffef9b2 <stm32_tamp_configure_external+0xe2>
2ffef92e:	2b00      	cmp	r3, #0
2ffef930:	d13d      	bne.n	2ffef9ae <stm32_tamp_configure_external+0xde>
2ffef932:	4825      	ldr	r0, [pc, #148]	; (2ffef9c8 <stm32_tamp_configure_external+0xf8>)
2ffef934:	f002 ffd2 	bl	2fff28dc <tf_log>
2ffef938:	f003 f874 	bl	2fff2a24 <console_flush>
2ffef93c:	f009 e886 	blx	2fff8a4c <do_panic>
2ffef940:	4822      	ldr	r0, [pc, #136]	; (2ffef9cc <stm32_tamp_configure_external+0xfc>)
2ffef942:	21c9      	movs	r1, #201	; 0xc9
2ffef944:	f00a f8bc 	bl	2fff9ac0 <__assert>
2ffef948:	6835      	ldr	r5, [r6, #0]
2ffef94a:	1c69      	adds	r1, r5, #1
2ffef94c:	d01f      	beq.n	2ffef98e <stm32_tamp_configure_external+0xbe>
2ffef94e:	6823      	ldr	r3, [r4, #0]
2ffef950:	fa0a f105 	lsl.w	r1, sl, r5
2ffef954:	430b      	orrs	r3, r1
2ffef956:	6023      	str	r3, [r4, #0]
2ffef958:	7933      	ldrb	r3, [r6, #4]
2ffef95a:	2b01      	cmp	r3, #1
2ffef95c:	d11a      	bne.n	2ffef994 <stm32_tamp_configure_external+0xc4>
2ffef95e:	f105 0b18 	add.w	fp, r5, #24
2ffef962:	fa03 f30b 	lsl.w	r3, r3, fp
2ffef966:	f896 b005 	ldrb.w	fp, [r6, #5]
2ffef96a:	f1bb 0f00 	cmp.w	fp, #0
2ffef96e:	d000      	beq.n	2ffef972 <stm32_tamp_configure_external+0xa2>
2ffef970:	430b      	orrs	r3, r1
2ffef972:	f896 b006 	ldrb.w	fp, [r6, #6]
2ffef976:	f1bb 0f00 	cmp.w	fp, #0
2ffef97a:	d012      	beq.n	2ffef9a2 <stm32_tamp_configure_external+0xd2>
2ffef97c:	3510      	adds	r5, #16
2ffef97e:	fa0a f505 	lsl.w	r5, sl, r5
2ffef982:	432b      	orrs	r3, r5
2ffef984:	f8de 1000 	ldr.w	r1, [lr]
2ffef988:	430b      	orrs	r3, r1
2ffef98a:	f8ce 3000 	str.w	r3, [lr]
2ffef98e:	3001      	adds	r0, #1
2ffef990:	360c      	adds	r6, #12
2ffef992:	e7b2      	b.n	2ffef8fa <stm32_tamp_configure_external+0x2a>
2ffef994:	2b02      	cmp	r3, #2
2ffef996:	f04f 0300 	mov.w	r3, #0
2ffef99a:	bf04      	itt	eq
2ffef99c:	430a      	orreq	r2, r1
2ffef99e:	b2d2      	uxtbeq	r2, r2
2ffef9a0:	e7e1      	b.n	2ffef966 <stm32_tamp_configure_external+0x96>
2ffef9a2:	f8dc 5000 	ldr.w	r5, [ip]
2ffef9a6:	4329      	orrs	r1, r5
2ffef9a8:	f8cc 1000 	str.w	r1, [ip]
2ffef9ac:	e7ea      	b.n	2ffef984 <stm32_tamp_configure_external+0xb4>
2ffef9ae:	3b01      	subs	r3, #1
2ffef9b0:	e7ba      	b.n	2ffef928 <stm32_tamp_configure_external+0x58>
2ffef9b2:	2b00      	cmp	r3, #0
2ffef9b4:	d0bd      	beq.n	2ffef932 <stm32_tamp_configure_external+0x62>
2ffef9b6:	f8c9 8018 	str.w	r8, [r9, #24]
2ffef9ba:	f889 7012 	strb.w	r7, [r9, #18]
2ffef9be:	b005      	add	sp, #20
2ffef9c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffef9c4:	2fffe2e0 	.word	0x2fffe2e0
2ffef9c8:	2fffa37c 	.word	0x2fffa37c
2ffef9cc:	2fffa35d 	.word	0x2fffa35d

2ffef9d0 <stm32_tamp_it_handler>:
2ffef9d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffef9d4:	b08a      	sub	sp, #40	; 0x28
2ffef9d6:	4d32      	ldr	r5, [pc, #200]	; (2ffefaa0 <stm32_tamp_it_handler+0xd0>)
2ffef9d8:	682b      	ldr	r3, [r5, #0]
2ffef9da:	f8d5 9014 	ldr.w	r9, [r5, #20]
2ffef9de:	6b1c      	ldr	r4, [r3, #48]	; 0x30
2ffef9e0:	f8d5 8018 	ldr.w	r8, [r5, #24]
2ffef9e4:	f7ff ff1e 	bl	2ffef824 <stm32_rtc_is_timestamp_enable>
2ffef9e8:	b178      	cbz	r0, 2ffefa0a <stm32_tamp_it_handler+0x3a>
2ffef9ea:	a803      	add	r0, sp, #12
2ffef9ec:	f7ff fec0 	bl	2ffef770 <stm32_rtc_get_timestamp>
2ffef9f0:	482c      	ldr	r0, [pc, #176]	; (2ffefaa4 <stm32_tamp_it_handler+0xd4>)
2ffef9f2:	f002 ff73 	bl	2fff28dc <tf_log>
2ffef9f6:	9b05      	ldr	r3, [sp, #20]
2ffef9f8:	9a08      	ldr	r2, [sp, #32]
2ffef9fa:	9301      	str	r3, [sp, #4]
2ffef9fc:	9b04      	ldr	r3, [sp, #16]
2ffef9fe:	9907      	ldr	r1, [sp, #28]
2ffefa00:	9300      	str	r3, [sp, #0]
2ffefa02:	4829      	ldr	r0, [pc, #164]	; (2ffefaa8 <stm32_tamp_it_handler+0xd8>)
2ffefa04:	9b03      	ldr	r3, [sp, #12]
2ffefa06:	f002 ff69 	bl	2fff28dc <tf_log>
2ffefa0a:	0c23      	lsrs	r3, r4, #16
2ffefa0c:	041b      	lsls	r3, r3, #16
2ffefa0e:	b343      	cbz	r3, 2ffefa62 <stm32_tamp_it_handler+0x92>
2ffefa10:	2700      	movs	r7, #0
2ffefa12:	f04f 0a01 	mov.w	sl, #1
2ffefa16:	8a29      	ldrh	r1, [r5, #16]
2ffefa18:	b2fa      	uxtb	r2, r7
2ffefa1a:	428a      	cmp	r2, r1
2ffefa1c:	d308      	bcc.n	2ffefa30 <stm32_tamp_it_handler+0x60>
2ffefa1e:	f014 0fff 	tst.w	r4, #255	; 0xff
2ffefa22:	d01b      	beq.n	2ffefa5c <stm32_tamp_it_handler+0x8c>
2ffefa24:	2600      	movs	r6, #0
2ffefa26:	f04f 090c 	mov.w	r9, #12
2ffefa2a:	f04f 0a01 	mov.w	sl, #1
2ffefa2e:	e031      	b.n	2ffefa94 <stm32_tamp_it_handler+0xc4>
2ffefa30:	f859 0032 	ldr.w	r0, [r9, r2, lsl #3]
2ffefa34:	eb09 03c2 	add.w	r3, r9, r2, lsl #3
2ffefa38:	f100 0610 	add.w	r6, r0, #16
2ffefa3c:	fa0a f606 	lsl.w	r6, sl, r6
2ffefa40:	4226      	tst	r6, r4
2ffefa42:	d008      	beq.n	2ffefa56 <stm32_tamp_it_handler+0x86>
2ffefa44:	685b      	ldr	r3, [r3, #4]
2ffefa46:	b103      	cbz	r3, 2ffefa4a <stm32_tamp_it_handler+0x7a>
2ffefa48:	4798      	blx	r3
2ffefa4a:	682a      	ldr	r2, [r5, #0]
2ffefa4c:	ea24 0406 	bic.w	r4, r4, r6
2ffefa50:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
2ffefa52:	4333      	orrs	r3, r6
2ffefa54:	63d3      	str	r3, [r2, #60]	; 0x3c
2ffefa56:	3701      	adds	r7, #1
2ffefa58:	2c00      	cmp	r4, #0
2ffefa5a:	d1dc      	bne.n	2ffefa16 <stm32_tamp_it_handler+0x46>
2ffefa5c:	b00a      	add	sp, #40	; 0x28
2ffefa5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffefa62:	2c00      	cmp	r4, #0
2ffefa64:	d1db      	bne.n	2ffefa1e <stm32_tamp_it_handler+0x4e>
2ffefa66:	e7f9      	b.n	2ffefa5c <stm32_tamp_it_handler+0x8c>
2ffefa68:	fb09 f303 	mul.w	r3, r9, r3
2ffefa6c:	f858 0003 	ldr.w	r0, [r8, r3]
2ffefa70:	eb08 0203 	add.w	r2, r8, r3
2ffefa74:	fa0a f700 	lsl.w	r7, sl, r0
2ffefa78:	4227      	tst	r7, r4
2ffefa7a:	d008      	beq.n	2ffefa8e <stm32_tamp_it_handler+0xbe>
2ffefa7c:	6893      	ldr	r3, [r2, #8]
2ffefa7e:	b103      	cbz	r3, 2ffefa82 <stm32_tamp_it_handler+0xb2>
2ffefa80:	4798      	blx	r3
2ffefa82:	682a      	ldr	r2, [r5, #0]
2ffefa84:	ea24 0407 	bic.w	r4, r4, r7
2ffefa88:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
2ffefa8a:	433b      	orrs	r3, r7
2ffefa8c:	63d3      	str	r3, [r2, #60]	; 0x3c
2ffefa8e:	3601      	adds	r6, #1
2ffefa90:	2c00      	cmp	r4, #0
2ffefa92:	d0e3      	beq.n	2ffefa5c <stm32_tamp_it_handler+0x8c>
2ffefa94:	7caa      	ldrb	r2, [r5, #18]
2ffefa96:	b2f3      	uxtb	r3, r6
2ffefa98:	429a      	cmp	r2, r3
2ffefa9a:	d8e5      	bhi.n	2ffefa68 <stm32_tamp_it_handler+0x98>
2ffefa9c:	e7de      	b.n	2ffefa5c <stm32_tamp_it_handler+0x8c>
2ffefa9e:	bf00      	nop
2ffefaa0:	2fffe2e0 	.word	0x2fffe2e0
2ffefaa4:	2fffa3a2 	.word	0x2fffa3a2
2ffefaa8:	2fffa3ba 	.word	0x2fffa3ba

2ffefaac <stm32_tamp_init>:
2ffefaac:	b570      	push	{r4, r5, r6, lr}
2ffefaae:	b086      	sub	sp, #24
2ffefab0:	a801      	add	r0, sp, #4
2ffefab2:	f008 fa87 	bl	2fff7fc4 <fdt_get_address>
2ffefab6:	b918      	cbnz	r0, 2ffefac0 <stm32_tamp_init+0x14>
2ffefab8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffefabc:	b006      	add	sp, #24
2ffefabe:	bd70      	pop	{r4, r5, r6, pc}
2ffefac0:	4a35      	ldr	r2, [pc, #212]	; (2ffefb98 <stm32_tamp_init+0xec>)
2ffefac2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffefac6:	a802      	add	r0, sp, #8
2ffefac8:	f008 fb68 	bl	2fff819c <dt_get_node>
2ffefacc:	1e04      	subs	r4, r0, #0
2ffeface:	dbf3      	blt.n	2ffefab8 <stm32_tamp_init+0xc>
2ffefad0:	9b02      	ldr	r3, [sp, #8]
2ffefad2:	b923      	cbnz	r3, 2ffefade <stm32_tamp_init+0x32>
2ffefad4:	f240 114b 	movw	r1, #331	; 0x14b
2ffefad8:	4830      	ldr	r0, [pc, #192]	; (2ffefb9c <stm32_tamp_init+0xf0>)
2ffefada:	f009 fff1 	bl	2fff9ac0 <__assert>
2ffefade:	9803      	ldr	r0, [sp, #12]
2ffefae0:	1c42      	adds	r2, r0, #1
2ffefae2:	d102      	bne.n	2ffefaea <stm32_tamp_init+0x3e>
2ffefae4:	f44f 71a6 	mov.w	r1, #332	; 0x14c
2ffefae8:	e7f6      	b.n	2ffefad8 <stm32_tamp_init+0x2c>
2ffefaea:	4d2d      	ldr	r5, [pc, #180]	; (2ffefba0 <stm32_tamp_init+0xf4>)
2ffefaec:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
2ffefaf0:	602b      	str	r3, [r5, #0]
2ffefaf2:	6068      	str	r0, [r5, #4]
2ffefaf4:	f005 fbe4 	bl	2fff52c0 <stm32mp_clk_enable>
2ffefaf8:	682a      	ldr	r2, [r5, #0]
2ffefafa:	2300      	movs	r3, #0
2ffefafc:	6013      	str	r3, [r2, #0]
2ffefafe:	6053      	str	r3, [r2, #4]
2ffefb00:	60d3      	str	r3, [r2, #12]
2ffefb02:	6113      	str	r3, [r2, #16]
2ffefb04:	6a11      	ldr	r1, [r2, #32]
2ffefb06:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
2ffefb0a:	6211      	str	r1, [r2, #32]
2ffefb0c:	62d3      	str	r3, [r2, #44]	; 0x2c
2ffefb0e:	63d6      	str	r6, [r2, #60]	; 0x3c
2ffefb10:	6d11      	ldr	r1, [r2, #80]	; 0x50
2ffefb12:	f021 0101 	bic.w	r1, r1, #1
2ffefb16:	6511      	str	r1, [r2, #80]	; 0x50
2ffefb18:	9905      	ldr	r1, [sp, #20]
2ffefb1a:	3902      	subs	r1, #2
2ffefb1c:	2901      	cmp	r1, #1
2ffefb1e:	d839      	bhi.n	2ffefb94 <stm32_tamp_init+0xe8>
2ffefb20:	f8d2 13f0 	ldr.w	r1, [r2, #1008]	; 0x3f0
2ffefb24:	60a9      	str	r1, [r5, #8]
2ffefb26:	f8d2 13ec 	ldr.w	r1, [r2, #1004]	; 0x3ec
2ffefb2a:	f8d2 03f4 	ldr.w	r0, [r2, #1012]	; 0x3f4
2ffefb2e:	60e9      	str	r1, [r5, #12]
2ffefb30:	f411 6f70 	tst.w	r1, #3840	; 0xf00
2ffefb34:	d103      	bne.n	2ffefb3e <stm32_tamp_init+0x92>
2ffefb36:	481b      	ldr	r0, [pc, #108]	; (2ffefba4 <stm32_tamp_init+0xf8>)
2ffefb38:	f002 fed0 	bl	2fff28dc <tf_log>
2ffefb3c:	e7bc      	b.n	2ffefab8 <stm32_tamp_init+0xc>
2ffefb3e:	6a11      	ldr	r1, [r2, #32]
2ffefb40:	9801      	ldr	r0, [sp, #4]
2ffefb42:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
2ffefb46:	6211      	str	r1, [r2, #32]
2ffefb48:	4621      	mov	r1, r4
2ffefb4a:	4a17      	ldr	r2, [pc, #92]	; (2ffefba8 <stm32_tamp_init+0xfc>)
2ffefb4c:	f009 fe1b 	bl	2fff9786 <fdt_getprop>
2ffefb50:	b120      	cbz	r0, 2ffefb5c <stm32_tamp_init+0xb0>
2ffefb52:	682a      	ldr	r2, [r5, #0]
2ffefb54:	6d13      	ldr	r3, [r2, #80]	; 0x50
2ffefb56:	f043 0301 	orr.w	r3, r3, #1
2ffefb5a:	6513      	str	r3, [r2, #80]	; 0x50
2ffefb5c:	2100      	movs	r1, #0
2ffefb5e:	4620      	mov	r0, r4
2ffefb60:	f001 fd82 	bl	2fff1668 <stm32_gic_enable_spi>
2ffefb64:	2800      	cmp	r0, #0
2ffefb66:	da03      	bge.n	2ffefb70 <stm32_tamp_init+0xc4>
2ffefb68:	f002 ff5c 	bl	2fff2a24 <console_flush>
2ffefb6c:	f008 ef6e 	blx	2fff8a4c <do_panic>
2ffefb70:	4a0e      	ldr	r2, [pc, #56]	; (2ffefbac <stm32_tamp_init+0x100>)
2ffefb72:	2300      	movs	r3, #0
2ffefb74:	9801      	ldr	r0, [sp, #4]
2ffefb76:	4621      	mov	r1, r4
2ffefb78:	f009 fe05 	bl	2fff9786 <fdt_getprop>
2ffefb7c:	b140      	cbz	r0, 2ffefb90 <stm32_tamp_init+0xe4>
2ffefb7e:	4a0c      	ldr	r2, [pc, #48]	; (2ffefbb0 <stm32_tamp_init+0x104>)
2ffefb80:	6813      	ldr	r3, [r2, #0]
2ffefb82:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
2ffefb86:	6013      	str	r3, [r2, #0]
2ffefb88:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
2ffefb8a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
2ffefb8e:	66d3      	str	r3, [r2, #108]	; 0x6c
2ffefb90:	2001      	movs	r0, #1
2ffefb92:	e793      	b.n	2ffefabc <stm32_tamp_init+0x10>
2ffefb94:	4618      	mov	r0, r3
2ffefb96:	e791      	b.n	2ffefabc <stm32_tamp_init+0x10>
2ffefb98:	2fffa3dc 	.word	0x2fffa3dc
2ffefb9c:	2fffa35d 	.word	0x2fffa35d
2ffefba0:	2fffe2e0 	.word	0x2fffe2e0
2ffefba4:	2fffa3ea 	.word	0x2fffa3ea
2ffefba8:	2fffa40f 	.word	0x2fffa40f
2ffefbac:	2fffa41c 	.word	0x2fffa41c
2ffefbb0:	5000d014 	.word	0x5000d014

2ffefbb4 <stm32_timer_config>:
2ffefbb4:	b510      	push	{r4, lr}
2ffefbb6:	4604      	mov	r4, r0
2ffefbb8:	6840      	ldr	r0, [r0, #4]
2ffefbba:	f005 fb81 	bl	2fff52c0 <stm32mp_clk_enable>
2ffefbbe:	6860      	ldr	r0, [r4, #4]
2ffefbc0:	f005 fcc4 	bl	2fff554c <stm32mp_clk_timer_get_rate>
2ffefbc4:	4b18      	ldr	r3, [pc, #96]	; (2ffefc28 <stm32_timer_config+0x74>)
2ffefbc6:	60a0      	str	r0, [r4, #8]
2ffefbc8:	4298      	cmp	r0, r3
2ffefbca:	d808      	bhi.n	2ffefbde <stm32_timer_config+0x2a>
2ffefbcc:	4817      	ldr	r0, [pc, #92]	; (2ffefc2c <stm32_timer_config+0x78>)
2ffefbce:	f002 fe85 	bl	2fff28dc <tf_log>
2ffefbd2:	6860      	ldr	r0, [r4, #4]
2ffefbd4:	f005 fb77 	bl	2fff52c6 <stm32mp_clk_disable>
2ffefbd8:	f06f 0015 	mvn.w	r0, #21
2ffefbdc:	bd10      	pop	{r4, pc}
2ffefbde:	6823      	ldr	r3, [r4, #0]
2ffefbe0:	7b21      	ldrb	r1, [r4, #12]
2ffefbe2:	6e9a      	ldr	r2, [r3, #104]	; 0x68
2ffefbe4:	f002 020f 	and.w	r2, r2, #15
2ffefbe8:	428a      	cmp	r2, r1
2ffefbea:	d018      	beq.n	2ffefc1e <stm32_timer_config+0x6a>
2ffefbec:	699a      	ldr	r2, [r3, #24]
2ffefbee:	f022 0203 	bic.w	r2, r2, #3
2ffefbf2:	f042 0201 	orr.w	r2, r2, #1
2ffefbf6:	619a      	str	r2, [r3, #24]
2ffefbf8:	6a1a      	ldr	r2, [r3, #32]
2ffefbfa:	f022 020a 	bic.w	r2, r2, #10
2ffefbfe:	621a      	str	r2, [r3, #32]
2ffefc00:	689a      	ldr	r2, [r3, #8]
2ffefc02:	f022 0277 	bic.w	r2, r2, #119	; 0x77
2ffefc06:	f042 0254 	orr.w	r2, r2, #84	; 0x54
2ffefc0a:	609a      	str	r2, [r3, #8]
2ffefc0c:	6699      	str	r1, [r3, #104]	; 0x68
2ffefc0e:	681a      	ldr	r2, [r3, #0]
2ffefc10:	f042 0201 	orr.w	r2, r2, #1
2ffefc14:	601a      	str	r2, [r3, #0]
2ffefc16:	6a1a      	ldr	r2, [r3, #32]
2ffefc18:	f042 0201 	orr.w	r2, r2, #1
2ffefc1c:	621a      	str	r2, [r3, #32]
2ffefc1e:	6860      	ldr	r0, [r4, #4]
2ffefc20:	f005 fb51 	bl	2fff52c6 <stm32mp_clk_disable>
2ffefc24:	2000      	movs	r0, #0
2ffefc26:	e7d9      	b.n	2ffefbdc <stm32_timer_config+0x28>
2ffefc28:	02faf07f 	.word	0x02faf07f
2ffefc2c:	2fffa42a 	.word	0x2fffa42a

2ffefc30 <stm32_timer_start_capture.part.0>:
2ffefc30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffefc32:	4606      	mov	r6, r0
2ffefc34:	6840      	ldr	r0, [r0, #4]
2ffefc36:	f242 7410 	movw	r4, #10000	; 0x2710
2ffefc3a:	f005 fb41 	bl	2fff52c0 <stm32mp_clk_enable>
2ffefc3e:	6833      	ldr	r3, [r6, #0]
2ffefc40:	2200      	movs	r2, #0
2ffefc42:	611a      	str	r2, [r3, #16]
2ffefc44:	6833      	ldr	r3, [r6, #0]
2ffefc46:	f103 0210 	add.w	r2, r3, #16
2ffefc4a:	691b      	ldr	r3, [r3, #16]
2ffefc4c:	07d9      	lsls	r1, r3, #31
2ffefc4e:	d407      	bmi.n	2ffefc60 <stm32_timer_start_capture.part.0+0x30>
2ffefc50:	b90c      	cbnz	r4, 2ffefc56 <stm32_timer_start_capture.part.0+0x26>
2ffefc52:	4625      	mov	r5, r4
2ffefc54:	e016      	b.n	2ffefc84 <stm32_timer_start_capture.part.0+0x54>
2ffefc56:	200a      	movs	r0, #10
2ffefc58:	3c01      	subs	r4, #1
2ffefc5a:	f004 f9cf 	bl	2fff3ffc <udelay>
2ffefc5e:	e7f1      	b.n	2ffefc44 <stm32_timer_start_capture.part.0+0x14>
2ffefc60:	2500      	movs	r5, #0
2ffefc62:	2c00      	cmp	r4, #0
2ffefc64:	d0f5      	beq.n	2ffefc52 <stm32_timer_start_capture.part.0+0x22>
2ffefc66:	6015      	str	r5, [r2, #0]
2ffefc68:	462f      	mov	r7, r5
2ffefc6a:	f242 7410 	movw	r4, #10000	; 0x2710
2ffefc6e:	e003      	b.n	2ffefc78 <stm32_timer_start_capture.part.0+0x48>
2ffefc70:	200a      	movs	r0, #10
2ffefc72:	3c01      	subs	r4, #1
2ffefc74:	f004 f9c2 	bl	2fff3ffc <udelay>
2ffefc78:	6833      	ldr	r3, [r6, #0]
2ffefc7a:	691a      	ldr	r2, [r3, #16]
2ffefc7c:	0792      	lsls	r2, r2, #30
2ffefc7e:	d409      	bmi.n	2ffefc94 <stm32_timer_start_capture.part.0+0x64>
2ffefc80:	2c00      	cmp	r4, #0
2ffefc82:	d1f5      	bne.n	2ffefc70 <stm32_timer_start_capture.part.0+0x40>
2ffefc84:	6870      	ldr	r0, [r6, #4]
2ffefc86:	f005 fb1e 	bl	2fff52c6 <stm32mp_clk_disable>
2ffefc8a:	2c00      	cmp	r4, #0
2ffefc8c:	bf14      	ite	ne
2ffefc8e:	4628      	movne	r0, r5
2ffefc90:	2000      	moveq	r0, #0
2ffefc92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffefc94:	2c00      	cmp	r4, #0
2ffefc96:	d0f5      	beq.n	2ffefc84 <stm32_timer_start_capture.part.0+0x54>
2ffefc98:	6b5b      	ldr	r3, [r3, #52]	; 0x34
2ffefc9a:	3701      	adds	r7, #1
2ffefc9c:	2f01      	cmp	r7, #1
2ffefc9e:	d101      	bne.n	2ffefca4 <stm32_timer_start_capture.part.0+0x74>
2ffefca0:	461d      	mov	r5, r3
2ffefca2:	e7e2      	b.n	2ffefc6a <stm32_timer_start_capture.part.0+0x3a>
2ffefca4:	42ab      	cmp	r3, r5
2ffefca6:	d1fb      	bne.n	2ffefca0 <stm32_timer_start_capture.part.0+0x70>
2ffefca8:	e7ec      	b.n	2ffefc84 <stm32_timer_start_capture.part.0+0x54>
	...

2ffefcac <stm32_timer_csi_freq>:
2ffefcac:	b510      	push	{r4, lr}
2ffefcae:	4c0b      	ldr	r4, [pc, #44]	; (2ffefcdc <stm32_timer_csi_freq+0x30>)
2ffefcb0:	6923      	ldr	r3, [r4, #16]
2ffefcb2:	b90b      	cbnz	r3, 2ffefcb8 <stm32_timer_csi_freq+0xc>
2ffefcb4:	2000      	movs	r0, #0
2ffefcb6:	bd10      	pop	{r4, pc}
2ffefcb8:	f104 0010 	add.w	r0, r4, #16
2ffefcbc:	f7ff ff7a 	bl	2ffefbb4 <stm32_timer_config>
2ffefcc0:	2800      	cmp	r0, #0
2ffefcc2:	dbf7      	blt.n	2ffefcb4 <stm32_timer_csi_freq+0x8>
2ffefcc4:	f104 0010 	add.w	r0, r4, #16
2ffefcc8:	f7ff ffb2 	bl	2ffefc30 <stm32_timer_start_capture.part.0>
2ffefccc:	2800      	cmp	r0, #0
2ffefcce:	d0f1      	beq.n	2ffefcb4 <stm32_timer_csi_freq+0x8>
2ffefcd0:	69a3      	ldr	r3, [r4, #24]
2ffefcd2:	fbb3 f0f0 	udiv	r0, r3, r0
2ffefcd6:	01c0      	lsls	r0, r0, #7
2ffefcd8:	e7ed      	b.n	2ffefcb6 <stm32_timer_csi_freq+0xa>
2ffefcda:	bf00      	nop
2ffefcdc:	2fffe2fc 	.word	0x2fffe2fc

2ffefce0 <stm32_timer_hsi_freq>:
2ffefce0:	b510      	push	{r4, lr}
2ffefce2:	4c0a      	ldr	r4, [pc, #40]	; (2ffefd0c <stm32_timer_hsi_freq+0x2c>)
2ffefce4:	6823      	ldr	r3, [r4, #0]
2ffefce6:	b90b      	cbnz	r3, 2ffefcec <stm32_timer_hsi_freq+0xc>
2ffefce8:	2000      	movs	r0, #0
2ffefcea:	bd10      	pop	{r4, pc}
2ffefcec:	4620      	mov	r0, r4
2ffefcee:	f7ff ff61 	bl	2ffefbb4 <stm32_timer_config>
2ffefcf2:	2800      	cmp	r0, #0
2ffefcf4:	dbf8      	blt.n	2ffefce8 <stm32_timer_hsi_freq+0x8>
2ffefcf6:	4620      	mov	r0, r4
2ffefcf8:	f7ff ff9a 	bl	2ffefc30 <stm32_timer_start_capture.part.0>
2ffefcfc:	2800      	cmp	r0, #0
2ffefcfe:	d0f3      	beq.n	2ffefce8 <stm32_timer_hsi_freq+0x8>
2ffefd00:	68a3      	ldr	r3, [r4, #8]
2ffefd02:	fbb3 f0f0 	udiv	r0, r3, r0
2ffefd06:	0280      	lsls	r0, r0, #10
2ffefd08:	e7ef      	b.n	2ffefcea <stm32_timer_hsi_freq+0xa>
2ffefd0a:	bf00      	nop
2ffefd0c:	2fffe2fc 	.word	0x2fffe2fc

2ffefd10 <stm32_timer_freq_func>:
2ffefd10:	b508      	push	{r3, lr}
2ffefd12:	4b09      	ldr	r3, [pc, #36]	; (2ffefd38 <stm32_timer_freq_func+0x28>)
2ffefd14:	b129      	cbz	r1, 2ffefd22 <stm32_timer_freq_func+0x12>
2ffefd16:	2901      	cmp	r1, #1
2ffefd18:	d008      	beq.n	2ffefd2c <stm32_timer_freq_func+0x1c>
2ffefd1a:	f002 fe83 	bl	2fff2a24 <console_flush>
2ffefd1e:	f008 ee96 	blx	2fff8a4c <do_panic>
2ffefd22:	681b      	ldr	r3, [r3, #0]
2ffefd24:	b10b      	cbz	r3, 2ffefd2a <stm32_timer_freq_func+0x1a>
2ffefd26:	4b05      	ldr	r3, [pc, #20]	; (2ffefd3c <stm32_timer_freq_func+0x2c>)
2ffefd28:	6003      	str	r3, [r0, #0]
2ffefd2a:	bd08      	pop	{r3, pc}
2ffefd2c:	691b      	ldr	r3, [r3, #16]
2ffefd2e:	2b00      	cmp	r3, #0
2ffefd30:	d0fb      	beq.n	2ffefd2a <stm32_timer_freq_func+0x1a>
2ffefd32:	4b03      	ldr	r3, [pc, #12]	; (2ffefd40 <stm32_timer_freq_func+0x30>)
2ffefd34:	e7f8      	b.n	2ffefd28 <stm32_timer_freq_func+0x18>
2ffefd36:	bf00      	nop
2ffefd38:	2fffe2fc 	.word	0x2fffe2fc
2ffefd3c:	2ffefce1 	.word	0x2ffefce1
2ffefd40:	2ffefcad 	.word	0x2ffefcad

2ffefd44 <stm32_timer_init>:
2ffefd44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2ffefd48:	b087      	sub	sp, #28
2ffefd4a:	a801      	add	r0, sp, #4
2ffefd4c:	f008 f93a 	bl	2fff7fc4 <fdt_get_address>
2ffefd50:	2800      	cmp	r0, #0
2ffefd52:	d058      	beq.n	2ffefe06 <stm32_timer_init+0xc2>
2ffefd54:	4a2d      	ldr	r2, [pc, #180]	; (2ffefe0c <stm32_timer_init+0xc8>)
2ffefd56:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffefd5a:	a802      	add	r0, sp, #8
2ffefd5c:	f008 fa1e 	bl	2fff819c <dt_get_node>
2ffefd60:	1e06      	subs	r6, r0, #0
2ffefd62:	da0b      	bge.n	2ffefd7c <stm32_timer_init+0x38>
2ffefd64:	492a      	ldr	r1, [pc, #168]	; (2ffefe10 <stm32_timer_init+0xcc>)
2ffefd66:	2400      	movs	r4, #0
2ffefd68:	482a      	ldr	r0, [pc, #168]	; (2ffefe14 <stm32_timer_init+0xd0>)
2ffefd6a:	f002 fdb7 	bl	2fff28dc <tf_log>
2ffefd6e:	fab4 f484 	clz	r4, r4
2ffefd72:	0964      	lsrs	r4, r4, #5
2ffefd74:	4260      	negs	r0, r4
2ffefd76:	b007      	add	sp, #28
2ffefd78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffefd7c:	4d26      	ldr	r5, [pc, #152]	; (2ffefe18 <stm32_timer_init+0xd4>)
2ffefd7e:	2400      	movs	r4, #0
2ffefd80:	f8df 809c 	ldr.w	r8, [pc, #156]	; 2ffefe20 <stm32_timer_init+0xdc>
2ffefd84:	f105 0910 	add.w	r9, r5, #16
2ffefd88:	9b05      	ldr	r3, [sp, #20]
2ffefd8a:	2b02      	cmp	r3, #2
2ffefd8c:	d119      	bne.n	2ffefdc2 <stm32_timer_init+0x7e>
2ffefd8e:	9801      	ldr	r0, [sp, #4]
2ffefd90:	2300      	movs	r3, #0
2ffefd92:	4642      	mov	r2, r8
2ffefd94:	4631      	mov	r1, r6
2ffefd96:	3401      	adds	r4, #1
2ffefd98:	f009 fcf5 	bl	2fff9786 <fdt_getprop>
2ffefd9c:	b2e4      	uxtb	r4, r4
2ffefd9e:	4607      	mov	r7, r0
2ffefda0:	b1b8      	cbz	r0, 2ffefdd2 <stm32_timer_init+0x8e>
2ffefda2:	9b02      	ldr	r3, [sp, #8]
2ffefda4:	9803      	ldr	r0, [sp, #12]
2ffefda6:	602b      	str	r3, [r5, #0]
2ffefda8:	6068      	str	r0, [r5, #4]
2ffefdaa:	f005 fbcf 	bl	2fff554c <stm32mp_clk_timer_get_rate>
2ffefdae:	78fb      	ldrb	r3, [r7, #3]
2ffefdb0:	60a8      	str	r0, [r5, #8]
2ffefdb2:	4819      	ldr	r0, [pc, #100]	; (2ffefe18 <stm32_timer_init+0xd4>)
2ffefdb4:	732b      	strb	r3, [r5, #12]
2ffefdb6:	f7ff fefd 	bl	2ffefbb4 <stm32_timer_config>
2ffefdba:	2800      	cmp	r0, #0
2ffefdbc:	da09      	bge.n	2ffefdd2 <stm32_timer_init+0x8e>
2ffefdbe:	2300      	movs	r3, #0
2ffefdc0:	602b      	str	r3, [r5, #0]
2ffefdc2:	4a12      	ldr	r2, [pc, #72]	; (2ffefe0c <stm32_timer_init+0xc8>)
2ffefdc4:	4631      	mov	r1, r6
2ffefdc6:	a802      	add	r0, sp, #8
2ffefdc8:	f008 f9e8 	bl	2fff819c <dt_get_node>
2ffefdcc:	1e06      	subs	r6, r0, #0
2ffefdce:	dadb      	bge.n	2ffefd88 <stm32_timer_init+0x44>
2ffefdd0:	e7cd      	b.n	2ffefd6e <stm32_timer_init+0x2a>
2ffefdd2:	4a12      	ldr	r2, [pc, #72]	; (2ffefe1c <stm32_timer_init+0xd8>)
2ffefdd4:	2300      	movs	r3, #0
2ffefdd6:	9801      	ldr	r0, [sp, #4]
2ffefdd8:	4631      	mov	r1, r6
2ffefdda:	f009 fcd4 	bl	2fff9786 <fdt_getprop>
2ffefdde:	4607      	mov	r7, r0
2ffefde0:	2800      	cmp	r0, #0
2ffefde2:	d0ee      	beq.n	2ffefdc2 <stm32_timer_init+0x7e>
2ffefde4:	9b02      	ldr	r3, [sp, #8]
2ffefde6:	9803      	ldr	r0, [sp, #12]
2ffefde8:	612b      	str	r3, [r5, #16]
2ffefdea:	6168      	str	r0, [r5, #20]
2ffefdec:	f005 fbae 	bl	2fff554c <stm32mp_clk_timer_get_rate>
2ffefdf0:	78fb      	ldrb	r3, [r7, #3]
2ffefdf2:	61a8      	str	r0, [r5, #24]
2ffefdf4:	4648      	mov	r0, r9
2ffefdf6:	772b      	strb	r3, [r5, #28]
2ffefdf8:	f7ff fedc 	bl	2ffefbb4 <stm32_timer_config>
2ffefdfc:	2800      	cmp	r0, #0
2ffefdfe:	bfbc      	itt	lt
2ffefe00:	2300      	movlt	r3, #0
2ffefe02:	612b      	strlt	r3, [r5, #16]
2ffefe04:	e7dd      	b.n	2ffefdc2 <stm32_timer_init+0x7e>
2ffefe06:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffefe0a:	e7b4      	b.n	2ffefd76 <stm32_timer_init+0x32>
2ffefe0c:	2fffa459 	.word	0x2fffa459
2ffefe10:	2fffa4a0 	.word	0x2fffa4a0
2ffefe14:	2fffa469 	.word	0x2fffa469
2ffefe18:	2fffe2fc 	.word	0x2fffe2fc
2ffefe1c:	2fffa48f 	.word	0x2fffa48f
2ffefe20:	2fffa47e 	.word	0x2fffa47e

2ffefe24 <stm32mp1_tamper_action>:
2ffefe24:	b508      	push	{r3, lr}
2ffefe26:	4b05      	ldr	r3, [pc, #20]	; (2ffefe3c <stm32mp1_tamper_action+0x18>)
2ffefe28:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
2ffefe2c:	4804      	ldr	r0, [pc, #16]	; (2ffefe40 <stm32mp1_tamper_action+0x1c>)
2ffefe2e:	f002 fd55 	bl	2fff28dc <tf_log>
2ffefe32:	f009 e990 	blx	2fff9154 <plat_my_core_pos>
2ffefe36:	f003 f86f 	bl	2fff2f18 <stm32mp_plat_reset>
2ffefe3a:	bf00      	nop
2ffefe3c:	2fffa678 	.word	0x2fffa678
2ffefe40:	2fffa4b8 	.word	0x2fffa4b8

2ffefe44 <sp_min_plat_fiq_handler>:
2ffefe44:	b510      	push	{r4, lr}
2ffefe46:	4601      	mov	r1, r0
2ffefe48:	f3c0 0409 	ubfx	r4, r0, #0, #10
2ffefe4c:	2cb1      	cmp	r4, #177	; 0xb1
2ffefe4e:	d818      	bhi.n	2ffefe82 <sp_min_plat_fiq_handler+0x3e>
2ffefe50:	2caf      	cmp	r4, #175	; 0xaf
2ffefe52:	d833      	bhi.n	2ffefebc <sp_min_plat_fiq_handler+0x78>
2ffefe54:	2c1d      	cmp	r4, #29
2ffefe56:	d031      	beq.n	2ffefebc <sp_min_plat_fiq_handler+0x78>
2ffefe58:	2c24      	cmp	r4, #36	; 0x24
2ffefe5a:	d034      	beq.n	2ffefec6 <sp_min_plat_fiq_handler+0x82>
2ffefe5c:	2c09      	cmp	r4, #9
2ffefe5e:	d145      	bne.n	2ffefeec <sp_min_plat_fiq_handler+0xa8>
2ffefe60:	f002 ff70 	bl	2fff2d44 <stm32mp_mask_timer>
2ffefe64:	4620      	mov	r0, r4
2ffefe66:	f001 f9f7 	bl	2fff1258 <gicv2_end_of_interrupt>
2ffefe6a:	f001 fb63 	bl	2fff1534 <plat_ic_get_pending_interrupt_id>
2ffefe6e:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2ffefe72:	4604      	mov	r4, r0
2ffefe74:	d23f      	bcs.n	2ffefef6 <sp_min_plat_fiq_handler+0xb2>
2ffefe76:	f001 f9ef 	bl	2fff1258 <gicv2_end_of_interrupt>
2ffefe7a:	4620      	mov	r0, r4
2ffefe7c:	f001 fb68 	bl	2fff1550 <plat_ic_disable_interrupt>
2ffefe80:	e7f3      	b.n	2ffefe6a <sp_min_plat_fiq_handler+0x26>
2ffefe82:	2ce5      	cmp	r4, #229	; 0xe5
2ffefe84:	d028      	beq.n	2ffefed8 <sp_min_plat_fiq_handler+0x94>
2ffefe86:	d804      	bhi.n	2ffefe92 <sp_min_plat_fiq_handler+0x4e>
2ffefe88:	3cb6      	subs	r4, #182	; 0xb6
2ffefe8a:	2c01      	cmp	r4, #1
2ffefe8c:	d82e      	bhi.n	2ffefeec <sp_min_plat_fiq_handler+0xa8>
2ffefe8e:	f007 fa3b 	bl	2fff7308 <stm32_iwdg_it_handler>
2ffefe92:	2cf4      	cmp	r4, #244	; 0xf4
2ffefe94:	d12a      	bne.n	2ffefeec <sp_min_plat_fiq_handler+0xa8>
2ffefe96:	4819      	ldr	r0, [pc, #100]	; (2ffefefc <sp_min_plat_fiq_handler+0xb8>)
2ffefe98:	f002 fd20 	bl	2fff28dc <tf_log>
2ffefe9c:	4818      	ldr	r0, [pc, #96]	; (2ffeff00 <sp_min_plat_fiq_handler+0xbc>)
2ffefe9e:	f003 ff4b 	bl	2fff3d38 <tzc400_init>
2ffefea2:	ee39 3f70 	mrc	15, 1, r3, cr9, cr0, {3}
2ffefea6:	b1db      	cbz	r3, 2ffefee0 <sp_min_plat_fiq_handler+0x9c>
2ffefea8:	2300      	movs	r3, #0
2ffefeaa:	ee29 3f70 	mcr	15, 1, r3, cr9, cr0, {3}
2ffefeae:	f004 f829 	bl	2fff3f04 <tzc400_is_pending_interrupt>
2ffefeb2:	b1c8      	cbz	r0, 2ffefee8 <sp_min_plat_fiq_handler+0xa4>
2ffefeb4:	4813      	ldr	r0, [pc, #76]	; (2ffeff04 <sp_min_plat_fiq_handler+0xc0>)
2ffefeb6:	f002 fd11 	bl	2fff28dc <tf_log>
2ffefeba:	e009      	b.n	2ffefed0 <sp_min_plat_fiq_handler+0x8c>
2ffefebc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffefec0:	4608      	mov	r0, r1
2ffefec2:	f7ff b85b 	b.w	2ffeef7c <stm32mp1_calib_it_handler>
2ffefec6:	480e      	ldr	r0, [pc, #56]	; (2ffeff00 <sp_min_plat_fiq_handler+0xbc>)
2ffefec8:	f003 ff36 	bl	2fff3d38 <tzc400_init>
2ffefecc:	f004 f838 	bl	2fff3f40 <tzc400_it_handler>
2ffefed0:	f002 fda8 	bl	2fff2a24 <console_flush>
2ffefed4:	f008 edba 	blx	2fff8a4c <do_panic>
2ffefed8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffefedc:	f7ff bd78 	b.w	2ffef9d0 <stm32_tamp_it_handler>
2ffefee0:	4809      	ldr	r0, [pc, #36]	; (2ffeff08 <sp_min_plat_fiq_handler+0xc4>)
2ffefee2:	f002 fcfb 	bl	2fff28dc <tf_log>
2ffefee6:	e7e2      	b.n	2ffefeae <sp_min_plat_fiq_handler+0x6a>
2ffefee8:	4808      	ldr	r0, [pc, #32]	; (2ffeff0c <sp_min_plat_fiq_handler+0xc8>)
2ffefeea:	e7e4      	b.n	2ffefeb6 <sp_min_plat_fiq_handler+0x72>
2ffefeec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffefef0:	4807      	ldr	r0, [pc, #28]	; (2ffeff10 <sp_min_plat_fiq_handler+0xcc>)
2ffefef2:	f002 bcf3 	b.w	2fff28dc <tf_log>
2ffefef6:	f002 ff32 	bl	2fff2d5e <stm32mp_wait_cpu_reset>
2ffefefa:	bf00      	nop
2ffefefc:	2fffa4cb 	.word	0x2fffa4cb
2ffeff00:	5c006000 	.word	0x5c006000
2ffeff04:	2fffa51d 	.word	0x2fffa51d
2ffeff08:	2fffa4ee 	.word	0x2fffa4ee
2ffeff0c:	2fffa542 	.word	0x2fffa542
2ffeff10:	2fffa569 	.word	0x2fffa569

2ffeff14 <sp_min_plat_get_bl33_ep_info>:
2ffeff14:	b570      	push	{r4, r5, r6, lr}
2ffeff16:	4c15      	ldr	r4, [pc, #84]	; (2ffeff6c <sp_min_plat_get_bl33_ep_info+0x58>)
2ffeff18:	68a3      	ldr	r3, [r4, #8]
2ffeff1a:	bb13      	cbnz	r3, 2ffeff62 <sp_min_plat_get_bl33_ep_info+0x4e>
2ffeff1c:	2041      	movs	r0, #65	; 0x41
2ffeff1e:	f005 f9cf 	bl	2fff52c0 <stm32mp_clk_enable>
2ffeff22:	4b13      	ldr	r3, [pc, #76]	; (2ffeff70 <sp_min_plat_get_bl33_ep_info+0x5c>)
2ffeff24:	2041      	movs	r0, #65	; 0x41
2ffeff26:	681e      	ldr	r6, [r3, #0]
2ffeff28:	685d      	ldr	r5, [r3, #4]
2ffeff2a:	f005 f9cc 	bl	2fff52c6 <stm32mp_clk_disable>
2ffeff2e:	f008 fb1b 	bl	2fff8568 <stm32_restore_context>
2ffeff32:	b118      	cbz	r0, 2ffeff3c <sp_min_plat_get_bl33_ep_info+0x28>
2ffeff34:	f002 fd76 	bl	2fff2a24 <console_flush>
2ffeff38:	f008 ed88 	blx	2fff8a4c <do_panic>
2ffeff3c:	2001      	movs	r0, #1
2ffeff3e:	f7fd fa9d 	bl	2ffed47c <cm_get_context>
2ffeff42:	6983      	ldr	r3, [r0, #24]
2ffeff44:	60e3      	str	r3, [r4, #12]
2ffeff46:	4b0b      	ldr	r3, [pc, #44]	; (2ffeff74 <sp_min_plat_get_bl33_ep_info+0x60>)
2ffeff48:	429e      	cmp	r6, r3
2ffeff4a:	d10c      	bne.n	2ffeff66 <sp_min_plat_get_bl33_ep_info+0x52>
2ffeff4c:	f1b5 4f40 	cmp.w	r5, #3221225472	; 0xc0000000
2ffeff50:	d3f0      	bcc.n	2ffeff34 <sp_min_plat_get_bl33_ep_info+0x20>
2ffeff52:	f008 f959 	bl	2fff8208 <dt_get_ddr_size>
2ffeff56:	f100 4040 	add.w	r0, r0, #3221225472	; 0xc0000000
2ffeff5a:	3801      	subs	r0, #1
2ffeff5c:	42a8      	cmp	r0, r5
2ffeff5e:	d3e9      	bcc.n	2ffeff34 <sp_min_plat_get_bl33_ep_info+0x20>
2ffeff60:	60a5      	str	r5, [r4, #8]
2ffeff62:	4802      	ldr	r0, [pc, #8]	; (2ffeff6c <sp_min_plat_get_bl33_ep_info+0x58>)
2ffeff64:	bd70      	pop	{r4, r5, r6, pc}
2ffeff66:	6903      	ldr	r3, [r0, #16]
2ffeff68:	60a3      	str	r3, [r4, #8]
2ffeff6a:	e7fa      	b.n	2ffeff62 <sp_min_plat_get_bl33_ep_info+0x4e>
2ffeff6c:	2fffe31c 	.word	0x2fffe31c
2ffeff70:	5c00a110 	.word	0x5c00a110
2ffeff74:	ca7face0 	.word	0xca7face0

2ffeff78 <sp_min_early_platform_setup2>:
2ffeff78:	b530      	push	{r4, r5, lr}
2ffeff7a:	4604      	mov	r4, r0
2ffeff7c:	b087      	sub	sp, #28
2ffeff7e:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffeff82:	f043 0320 	orr.w	r3, r3, #32
2ffeff86:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffeff8a:	4a3f      	ldr	r2, [pc, #252]	; (2fff0088 <sp_min_early_platform_setup2+0x110>)
2ffeff8c:	2302      	movs	r3, #2
2ffeff8e:	9300      	str	r3, [sp, #0]
2ffeff90:	2100      	movs	r1, #0
2ffeff92:	4b3e      	ldr	r3, [pc, #248]	; (2fff008c <sp_min_early_platform_setup2+0x114>)
2ffeff94:	4610      	mov	r0, r2
2ffeff96:	1a9b      	subs	r3, r3, r2
2ffeff98:	f003 f936 	bl	2fff3208 <mmap_add_region>
2ffeff9c:	f002 fec4 	bl	2fff2d28 <configure_mmu>
2ffeffa0:	b924      	cbnz	r4, 2ffeffac <sp_min_early_platform_setup2+0x34>
2ffeffa2:	f44f 71a5 	mov.w	r1, #330	; 0x14a
2ffeffa6:	483a      	ldr	r0, [pc, #232]	; (2fff0090 <sp_min_early_platform_setup2+0x118>)
2ffeffa8:	f009 fd8a 	bl	2fff9ac0 <__assert>
2ffeffac:	7823      	ldrb	r3, [r4, #0]
2ffeffae:	2b05      	cmp	r3, #5
2ffeffb0:	d002      	beq.n	2ffeffb8 <sp_min_early_platform_setup2+0x40>
2ffeffb2:	f240 114b 	movw	r1, #331	; 0x14b
2ffeffb6:	e7f6      	b.n	2ffeffa6 <sp_min_early_platform_setup2+0x2e>
2ffeffb8:	7863      	ldrb	r3, [r4, #1]
2ffeffba:	2b01      	cmp	r3, #1
2ffeffbc:	d802      	bhi.n	2ffeffc4 <sp_min_early_platform_setup2+0x4c>
2ffeffbe:	f44f 71a6 	mov.w	r1, #332	; 0x14c
2ffeffc2:	e7f0      	b.n	2ffeffa6 <sp_min_early_platform_setup2+0x2e>
2ffeffc4:	68a3      	ldr	r3, [r4, #8]
2ffeffc6:	b153      	cbz	r3, 2ffeffde <sp_min_early_platform_setup2+0x66>
2ffeffc8:	681a      	ldr	r2, [r3, #0]
2ffeffca:	2a05      	cmp	r2, #5
2ffeffcc:	d10f      	bne.n	2ffeffee <sp_min_early_platform_setup2+0x76>
2ffeffce:	689d      	ldr	r5, [r3, #8]
2ffeffd0:	4c30      	ldr	r4, [pc, #192]	; (2fff0094 <sp_min_early_platform_setup2+0x11c>)
2ffeffd2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2ffeffd4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2ffeffd6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2ffeffd8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2ffeffda:	682b      	ldr	r3, [r5, #0]
2ffeffdc:	6023      	str	r3, [r4, #0]
2ffeffde:	f007 ffe3 	bl	2fff7fa8 <dt_open_and_check>
2ffeffe2:	2800      	cmp	r0, #0
2ffeffe4:	da05      	bge.n	2ffefff2 <sp_min_early_platform_setup2+0x7a>
2ffeffe6:	f002 fd1d 	bl	2fff2a24 <console_flush>
2ffeffea:	f008 ed30 	blx	2fff8a4c <do_panic>
2ffeffee:	68db      	ldr	r3, [r3, #12]
2ffefff0:	e7e9      	b.n	2ffeffc6 <sp_min_early_platform_setup2+0x4e>
2ffefff2:	f004 fa25 	bl	2fff4440 <bsec_probe>
2ffefff6:	4604      	mov	r4, r0
2ffefff8:	2800      	cmp	r0, #0
2ffefffa:	d1f4      	bne.n	2ffeffe6 <sp_min_early_platform_setup2+0x6e>
2ffefffc:	f005 fe1a 	bl	2fff5c34 <stm32mp1_clk_probe>
2fff0000:	2800      	cmp	r0, #0
2fff0002:	dbf0      	blt.n	2ffeffe6 <sp_min_early_platform_setup2+0x6e>
2fff0004:	f7ff f8e4 	bl	2ffef1d0 <etzpc_init>
2fff0008:	2800      	cmp	r0, #0
2fff000a:	d1ec      	bne.n	2ffeffe6 <sp_min_early_platform_setup2+0x6e>
2fff000c:	f7ff f8e0 	bl	2ffef1d0 <etzpc_init>
2fff0010:	f240 31ff 	movw	r1, #1023	; 0x3ff
2fff0014:	4620      	mov	r0, r4
2fff0016:	f7ff f8c9 	bl	2ffef1ac <etzpc_configure_tzma>
2fff001a:	213e      	movs	r1, #62	; 0x3e
2fff001c:	2001      	movs	r0, #1
2fff001e:	f7ff f8c5 	bl	2ffef1ac <etzpc_configure_tzma>
2fff0022:	a802      	add	r0, sp, #8
2fff0024:	f008 f8cc 	bl	2fff81c0 <dt_get_stdout_uart_info>
2fff0028:	2800      	cmp	r0, #0
2fff002a:	dd0f      	ble.n	2fff004c <sp_min_early_platform_setup2+0xd4>
2fff002c:	9b05      	ldr	r3, [sp, #20]
2fff002e:	b16b      	cbz	r3, 2fff004c <sp_min_early_platform_setup2+0xd4>
2fff0030:	4b19      	ldr	r3, [pc, #100]	; (2fff0098 <sp_min_early_platform_setup2+0x120>)
2fff0032:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
2fff0036:	9802      	ldr	r0, [sp, #8]
2fff0038:	4621      	mov	r1, r4
2fff003a:	f008 eec4 	blx	2fff8dc4 <console_stm32_register>
2fff003e:	2800      	cmp	r0, #0
2fff0040:	d0d1      	beq.n	2ffeffe6 <sp_min_early_platform_setup2+0x6e>
2fff0042:	4815      	ldr	r0, [pc, #84]	; (2fff0098 <sp_min_early_platform_setup2+0x120>)
2fff0044:	f240 1107 	movw	r1, #263	; 0x107
2fff0048:	f002 fcb2 	bl	2fff29b0 <console_set_scope>
2fff004c:	f007 fbea 	bl	2fff7824 <dt_pmic_status>
2fff0050:	2800      	cmp	r0, #0
2fff0052:	dd01      	ble.n	2fff0058 <sp_min_early_platform_setup2+0xe0>
2fff0054:	f007 fcc6 	bl	2fff79e4 <initialize_pmic>
2fff0058:	f008 fad6 	bl	2fff8608 <stm32_are_pll1_settings_valid_in_context>
2fff005c:	b980      	cbnz	r0, 2fff0080 <sp_min_early_platform_setup2+0x108>
2fff005e:	f007 fbe1 	bl	2fff7824 <dt_pmic_status>
2fff0062:	2800      	cmp	r0, #0
2fff0064:	dd07      	ble.n	2fff0076 <sp_min_early_platform_setup2+0xfe>
2fff0066:	f002 fe47 	bl	2fff2cf8 <stm32mp_get_cpu_supply_name>
2fff006a:	2800      	cmp	r0, #0
2fff006c:	d0bb      	beq.n	2ffeffe6 <sp_min_early_platform_setup2+0x6e>
2fff006e:	f007 fd2f 	bl	2fff7ad0 <stpmic1_regulator_voltage_get>
2fff0072:	1e04      	subs	r4, r0, #0
2fff0074:	dbb7      	blt.n	2ffeffe6 <sp_min_early_platform_setup2+0x6e>
2fff0076:	4620      	mov	r0, r4
2fff0078:	f005 fb0a 	bl	2fff5690 <stm32mp1_clk_compute_all_pll1_settings>
2fff007c:	2800      	cmp	r0, #0
2fff007e:	d1b2      	bne.n	2ffeffe6 <sp_min_early_platform_setup2+0x6e>
2fff0080:	f000 faa6 	bl	2fff05d0 <stm32mp1_init_lp_states>
2fff0084:	b007      	add	sp, #28
2fff0086:	bd30      	pop	{r4, r5, pc}
2fff0088:	2ffed000 	.word	0x2ffed000
2fff008c:	2fffd000 	.word	0x2fffd000
2fff0090:	2fffa594 	.word	0x2fffa594
2fff0094:	2fffe31c 	.word	0x2fffe31c
2fff0098:	2fffe340 	.word	0x2fffe340

2fff009c <sp_min_platform_setup>:
2fff009c:	b508      	push	{r3, lr}
2fff009e:	f006 f979 	bl	2fff6394 <ddr_save_sr_mode>
2fff00a2:	f008 fb27 	bl	2fff86f4 <stm32mp1_security_setup>
2fff00a6:	f004 f801 	bl	2fff40ac <generic_delay_timer_init>
2fff00aa:	f001 fa95 	bl	2fff15d8 <stm32_gic_init>
2fff00ae:	f7ff fbc9 	bl	2ffef844 <stm32_rtc_init>
2fff00b2:	1e01      	subs	r1, r0, #0
2fff00b4:	da02      	bge.n	2fff00bc <sp_min_platform_setup+0x20>
2fff00b6:	481c      	ldr	r0, [pc, #112]	; (2fff0128 <sp_min_platform_setup+0x8c>)
2fff00b8:	f002 fc10 	bl	2fff28dc <tf_log>
2fff00bc:	f7ff f972 	bl	2ffef3a4 <stm32_rng_init>
2fff00c0:	1e01      	subs	r1, r0, #0
2fff00c2:	da02      	bge.n	2fff00ca <sp_min_platform_setup+0x2e>
2fff00c4:	4819      	ldr	r0, [pc, #100]	; (2fff012c <sp_min_platform_setup+0x90>)
2fff00c6:	f002 fc09 	bl	2fff28dc <tf_log>
2fff00ca:	f7ff fcef 	bl	2ffefaac <stm32_tamp_init>
2fff00ce:	2800      	cmp	r0, #0
2fff00d0:	dd0b      	ble.n	2fff00ea <sp_min_platform_setup+0x4e>
2fff00d2:	4817      	ldr	r0, [pc, #92]	; (2fff0130 <sp_min_platform_setup+0x94>)
2fff00d4:	2106      	movs	r1, #6
2fff00d6:	f7ff fbcf 	bl	2ffef878 <stm32_tamp_configure_internal>
2fff00da:	4816      	ldr	r0, [pc, #88]	; (2fff0134 <sp_min_platform_setup+0x98>)
2fff00dc:	2300      	movs	r3, #0
2fff00de:	461a      	mov	r2, r3
2fff00e0:	2103      	movs	r1, #3
2fff00e2:	f7ff fbf5 	bl	2ffef8d0 <stm32_tamp_configure_external>
2fff00e6:	f7ff fb79 	bl	2ffef7dc <stm32_rtc_set_tamper_timestamp>
2fff00ea:	f7ff fe2b 	bl	2ffefd44 <stm32_timer_init>
2fff00ee:	b908      	cbnz	r0, 2fff00f4 <sp_min_platform_setup+0x58>
2fff00f0:	f7fe ffa6 	bl	2ffef040 <stm32mp1_calib_init>
2fff00f4:	f007 f936 	bl	2fff7364 <stm32_iwdg_init>
2fff00f8:	2800      	cmp	r0, #0
2fff00fa:	da03      	bge.n	2fff0104 <sp_min_platform_setup+0x68>
2fff00fc:	f002 fc92 	bl	2fff2a24 <console_flush>
2fff0100:	f008 eca4 	blx	2fff8a4c <do_panic>
2fff0104:	480c      	ldr	r0, [pc, #48]	; (2fff0138 <sp_min_platform_setup+0x9c>)
2fff0106:	f004 fba6 	bl	2fff4856 <fdt_rcc_enable_it>
2fff010a:	1e01      	subs	r1, r0, #0
2fff010c:	da03      	bge.n	2fff0116 <sp_min_platform_setup+0x7a>
2fff010e:	480b      	ldr	r0, [pc, #44]	; (2fff013c <sp_min_platform_setup+0xa0>)
2fff0110:	f002 fbe4 	bl	2fff28dc <tf_log>
2fff0114:	e7f2      	b.n	2fff00fc <sp_min_platform_setup+0x60>
2fff0116:	2106      	movs	r1, #6
2fff0118:	f001 fa1c 	bl	2fff1554 <plat_ic_set_interrupt_priority>
2fff011c:	f000 fdae 	bl	2fff0c7c <stm32mp_lock_periph_registering>
2fff0120:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0124:	f002 bb0e 	b.w	2fff2744 <stm32mp1_init_scmi_server>
2fff0128:	2fffa5bb 	.word	0x2fffa5bb
2fff012c:	2fffa5d6 	.word	0x2fffa5d6
2fff0130:	2fffd1b8 	.word	0x2fffd1b8
2fff0134:	2fffd194 	.word	0x2fffd194
2fff0138:	2fffa5f1 	.word	0x2fffa5f1
2fff013c:	2fffa5f8 	.word	0x2fffa5f8

2fff0140 <sp_min_plat_arch_setup>:
2fff0140:	4770      	bx	lr
	...

2fff0144 <stm32_apply_pmic_suspend_config>:
2fff0144:	4a0e      	ldr	r2, [pc, #56]	; (2fff0180 <stm32_apply_pmic_suspend_config+0x3c>)
2fff0146:	230c      	movs	r3, #12
2fff0148:	2806      	cmp	r0, #6
2fff014a:	fb03 2300 	mla	r3, r3, r0, r2
2fff014e:	b510      	push	{r4, lr}
2fff0150:	689c      	ldr	r4, [r3, #8]
2fff0152:	d903      	bls.n	2fff015c <stm32_apply_pmic_suspend_config+0x18>
2fff0154:	480b      	ldr	r0, [pc, #44]	; (2fff0184 <stm32_apply_pmic_suspend_config+0x40>)
2fff0156:	2162      	movs	r1, #98	; 0x62
2fff0158:	f009 fcb2 	bl	2fff9ac0 <__assert>
2fff015c:	b17c      	cbz	r4, 2fff017e <stm32_apply_pmic_suspend_config+0x3a>
2fff015e:	f007 fbbd 	bl	2fff78dc <initialize_pmic_i2c>
2fff0162:	b918      	cbnz	r0, 2fff016c <stm32_apply_pmic_suspend_config+0x28>
2fff0164:	f002 fc5e 	bl	2fff2a24 <console_flush>
2fff0168:	f008 ec70 	blx	2fff8a4c <do_panic>
2fff016c:	4620      	mov	r0, r4
2fff016e:	f007 fb72 	bl	2fff7856 <pmic_set_lp_config>
2fff0172:	2800      	cmp	r0, #0
2fff0174:	dbf6      	blt.n	2fff0164 <stm32_apply_pmic_suspend_config+0x20>
2fff0176:	f007 fb69 	bl	2fff784c <pmic_configure_boot_on_regulators>
2fff017a:	2800      	cmp	r0, #0
2fff017c:	dbf2      	blt.n	2fff0164 <stm32_apply_pmic_suspend_config+0x20>
2fff017e:	bd10      	pop	{r4, pc}
2fff0180:	2fffa710 	.word	0x2fffa710
2fff0184:	2fffa690 	.word	0x2fffa690

2fff0188 <stm32_exit_cstop>:
2fff0188:	b530      	push	{r4, r5, lr}
2fff018a:	b085      	sub	sp, #20
2fff018c:	f002 fd68 	bl	2fff2c60 <stm32mp_pwr_base>
2fff0190:	4605      	mov	r5, r0
2fff0192:	f002 fd69 	bl	2fff2c68 <stm32mp_rcc_base>
2fff0196:	4b1f      	ldr	r3, [pc, #124]	; (2fff0214 <stm32_exit_cstop+0x8c>)
2fff0198:	4604      	mov	r4, r0
2fff019a:	781a      	ldrb	r2, [r3, #0]
2fff019c:	2a00      	cmp	r2, #0
2fff019e:	d037      	beq.n	2fff0210 <stm32_exit_cstop+0x88>
2fff01a0:	2200      	movs	r2, #0
2fff01a2:	701a      	strb	r2, [r3, #0]
2fff01a4:	f005 fdee 	bl	2fff5d84 <ddr_sw_self_refresh_exit>
2fff01a8:	b118      	cbz	r0, 2fff01b2 <stm32_exit_cstop+0x2a>
2fff01aa:	f002 fc3b 	bl	2fff2a24 <console_flush>
2fff01ae:	f008 ec4e 	blx	2fff8a4c <do_panic>
2fff01b2:	f006 f8f7 	bl	2fff63a4 <ddr_restore_sr_mode>
2fff01b6:	4b18      	ldr	r3, [pc, #96]	; (2fff0218 <stm32_exit_cstop+0x90>)
2fff01b8:	6818      	ldr	r0, [r3, #0]
2fff01ba:	f001 f9cd 	bl	2fff1558 <plat_ic_set_priority_mask>
2fff01be:	f8d4 3414 	ldr.w	r3, [r4, #1044]	; 0x414
2fff01c2:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
2fff01c6:	f8c4 3414 	str.w	r3, [r4, #1044]	; 0x414
2fff01ca:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
2fff01ce:	f043 0303 	orr.w	r3, r3, #3
2fff01d2:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
2fff01d6:	f3bf 8f4f 	dsb	sy
2fff01da:	f3bf 8f6f 	isb	sy
2fff01de:	68ab      	ldr	r3, [r5, #8]
2fff01e0:	a801      	add	r0, sp, #4
2fff01e2:	f023 0303 	bic.w	r3, r3, #3
2fff01e6:	60ab      	str	r3, [r5, #8]
2fff01e8:	f7ff f9c0 	bl	2ffef56c <stm32_rtc_get_calendar>
2fff01ec:	490b      	ldr	r1, [pc, #44]	; (2fff021c <stm32_exit_cstop+0x94>)
2fff01ee:	a801      	add	r0, sp, #4
2fff01f0:	f7ff f9dc 	bl	2ffef5ac <stm32_rtc_diff_calendar>
2fff01f4:	4605      	mov	r5, r0
2fff01f6:	460c      	mov	r4, r1
2fff01f8:	f008 f9f8 	bl	2fff85ec <stm32_get_stgen_from_context>
2fff01fc:	462a      	mov	r2, r5
2fff01fe:	4623      	mov	r3, r4
2fff0200:	f004 fb9c 	bl	2fff493c <stm32mp_stgen_restore_counter>
2fff0204:	f008 faa2 	bl	2fff874c <stm32mp1_syscfg_enable_io_compensation>
2fff0208:	f005 fcc6 	bl	2fff5b98 <stm32mp1_clock_stopmode_resume>
2fff020c:	2800      	cmp	r0, #0
2fff020e:	d1cc      	bne.n	2fff01aa <stm32_exit_cstop+0x22>
2fff0210:	b005      	add	sp, #20
2fff0212:	bd30      	pop	{r4, r5, pc}
2fff0214:	2fffe358 	.word	0x2fffe358
2fff0218:	2fffe35c 	.word	0x2fffe35c
2fff021c:	2fffe760 	.word	0x2fffe760

2fff0220 <stm32_pwr_down_wfi>:
2fff0220:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff0222:	f240 35ff 	movw	r5, #1023	; 0x3ff
2fff0226:	4e0b      	ldr	r6, [pc, #44]	; (2fff0254 <stm32_pwr_down_wfi+0x34>)
2fff0228:	2000      	movs	r0, #0
2fff022a:	462f      	mov	r7, r5
2fff022c:	f7fe fea0 	bl	2ffeef70 <stm32mp1_calib_set_wakeup>
2fff0230:	f7fe fe98 	bl	2ffeef64 <stm32mp1_calib_get_wakeup>
2fff0234:	b968      	cbnz	r0, 2fff0252 <stm32_pwr_down_wfi+0x32>
2fff0236:	4630      	mov	r0, r6
2fff0238:	f008 effc 	blx	2fff9234 <wfi_svc_int_enable>
2fff023c:	f000 fffa 	bl	2fff1234 <gicv2_acknowledge_interrupt>
2fff0240:	42a8      	cmp	r0, r5
2fff0242:	4604      	mov	r4, r0
2fff0244:	d001      	beq.n	2fff024a <stm32_pwr_down_wfi+0x2a>
2fff0246:	f001 f807 	bl	2fff1258 <gicv2_end_of_interrupt>
2fff024a:	f007 f83d 	bl	2fff72c8 <stm32_iwdg_refresh>
2fff024e:	42bc      	cmp	r4, r7
2fff0250:	d0ee      	beq.n	2fff0230 <stm32_pwr_down_wfi+0x10>
2fff0252:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff0254:	2fffe360 	.word	0x2fffe360

2fff0258 <stm32_enter_low_power>:
2fff0258:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2fff025c:	460f      	mov	r7, r1
2fff025e:	4604      	mov	r4, r0
2fff0260:	b1c8      	cbz	r0, 2fff0296 <stm32_enter_low_power+0x3e>
2fff0262:	2806      	cmp	r0, #6
2fff0264:	d12a      	bne.n	2fff02bc <stm32_enter_low_power+0x64>
2fff0266:	2000      	movs	r0, #0
2fff0268:	f005 fe86 	bl	2fff5f78 <ddr_standby_sr_entry>
2fff026c:	b110      	cbz	r0, 2fff0274 <stm32_enter_low_power+0x1c>
2fff026e:	4857      	ldr	r0, [pc, #348]	; (2fff03cc <stm32_enter_low_power+0x174>)
2fff0270:	f002 fb34 	bl	2fff28dc <tf_log>
2fff0274:	f007 fad6 	bl	2fff7824 <dt_pmic_status>
2fff0278:	2800      	cmp	r0, #0
2fff027a:	dd1c      	ble.n	2fff02b6 <stm32_enter_low_power+0x5e>
2fff027c:	f007 fb2e 	bl	2fff78dc <initialize_pmic_i2c>
2fff0280:	b918      	cbnz	r0, 2fff028a <stm32_enter_low_power+0x32>
2fff0282:	f002 fbcf 	bl	2fff2a24 <console_flush>
2fff0286:	f008 ebe2 	blx	2fff8a4c <do_panic>
2fff028a:	f007 fcb6 	bl	2fff7bfa <stpmic1_switch_off>
2fff028e:	2064      	movs	r0, #100	; 0x64
2fff0290:	f003 feb4 	bl	2fff3ffc <udelay>
2fff0294:	e7f5      	b.n	2fff0282 <stm32_enter_low_power+0x2a>
2fff0296:	f002 fce3 	bl	2fff2c60 <stm32mp_pwr_base>
2fff029a:	6903      	ldr	r3, [r0, #16]
2fff029c:	f423 7302 	bic.w	r3, r3, #520	; 0x208
2fff02a0:	f023 0301 	bic.w	r3, r3, #1
2fff02a4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
2fff02a8:	6103      	str	r3, [r0, #16]
2fff02aa:	6803      	ldr	r3, [r0, #0]
2fff02ac:	f023 0307 	bic.w	r3, r3, #7
2fff02b0:	6003      	str	r3, [r0, #0]
2fff02b2:	f7ff ffb5 	bl	2fff0220 <stm32_pwr_down_wfi>
2fff02b6:	b003      	add	sp, #12
2fff02b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff02bc:	f8df 9124 	ldr.w	r9, [pc, #292]	; 2fff03e4 <stm32_enter_low_power+0x18c>
2fff02c0:	230c      	movs	r3, #12
2fff02c2:	4343      	muls	r3, r0
2fff02c4:	f859 8003 	ldr.w	r8, [r9, r3]
2fff02c8:	f002 fcca 	bl	2fff2c60 <stm32mp_pwr_base>
2fff02cc:	4605      	mov	r5, r0
2fff02ce:	f002 fccb 	bl	2fff2c68 <stm32mp_rcc_base>
2fff02d2:	4606      	mov	r6, r0
2fff02d4:	f008 fa6e 	bl	2fff87b4 <stm32mp1_syscfg_disable_io_compensation>
2fff02d8:	2001      	movs	r0, #1
2fff02da:	f005 ff75 	bl	2fff61c8 <ddr_set_sr_mode>
2fff02de:	2001      	movs	r0, #1
2fff02e0:	f008 ecf8 	blx	2fff8cd4 <dcsw_op_all>
2fff02e4:	f008 f8ba 	bl	2fff845c <stm32_clean_context>
2fff02e8:	2c04      	cmp	r4, #4
2fff02ea:	d101      	bne.n	2fff02f0 <stm32_enter_low_power+0x98>
2fff02ec:	f008 f9a2 	bl	2fff8634 <stm32_save_ddr_training_area>
2fff02f0:	f007 fa98 	bl	2fff7824 <dt_pmic_status>
2fff02f4:	2800      	cmp	r0, #0
2fff02f6:	dd06      	ble.n	2fff0306 <stm32_enter_low_power+0xae>
2fff02f8:	4620      	mov	r0, r4
2fff02fa:	f7ff ff23 	bl	2fff0144 <stm32_apply_pmic_suspend_config>
2fff02fe:	2c02      	cmp	r4, #2
2fff0300:	bf08      	it	eq
2fff0302:	f048 0802 	orreq.w	r8, r8, #2
2fff0306:	f8d6 3418 	ldr.w	r3, [r6, #1048]	; 0x418
2fff030a:	220c      	movs	r2, #12
2fff030c:	fb02 9904 	mla	r9, r2, r4, r9
2fff0310:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2fff0314:	f8c6 3418 	str.w	r3, [r6, #1048]	; 0x418
2fff0318:	f8d6 3414 	ldr.w	r3, [r6, #1044]	; 0x414
2fff031c:	f8d9 2004 	ldr.w	r2, [r9, #4]
2fff0320:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2fff0324:	f8c6 3414 	str.w	r3, [r6, #1044]	; 0x414
2fff0328:	692b      	ldr	r3, [r5, #16]
2fff032a:	f423 7302 	bic.w	r3, r3, #520	; 0x208
2fff032e:	f023 0301 	bic.w	r3, r3, #1
2fff0332:	4313      	orrs	r3, r2
2fff0334:	612b      	str	r3, [r5, #16]
2fff0336:	682b      	ldr	r3, [r5, #0]
2fff0338:	f023 0307 	bic.w	r3, r3, #7
2fff033c:	ea43 0308 	orr.w	r3, r3, r8
2fff0340:	602b      	str	r3, [r5, #0]
2fff0342:	4b23      	ldr	r3, [pc, #140]	; (2fff03d0 <stm32_enter_low_power+0x178>)
2fff0344:	f8c6 3418 	str.w	r3, [r6, #1048]	; 0x418
2fff0348:	f8d6 3104 	ldr.w	r3, [r6, #260]	; 0x104
2fff034c:	f043 0303 	orr.w	r3, r3, #3
2fff0350:	f8c6 3104 	str.w	r3, [r6, #260]	; 0x104
2fff0354:	f006 ffb8 	bl	2fff72c8 <stm32_iwdg_refresh>
2fff0358:	2008      	movs	r0, #8
2fff035a:	f001 f8fd 	bl	2fff1558 <plat_ic_set_priority_mask>
2fff035e:	4b1d      	ldr	r3, [pc, #116]	; (2fff03d4 <stm32_enter_low_power+0x17c>)
2fff0360:	6018      	str	r0, [r3, #0]
2fff0362:	a801      	add	r0, sp, #4
2fff0364:	f005 fe08 	bl	2fff5f78 <ddr_standby_sr_entry>
2fff0368:	4606      	mov	r6, r0
2fff036a:	2800      	cmp	r0, #0
2fff036c:	d189      	bne.n	2fff0282 <stm32_enter_low_power+0x2a>
2fff036e:	f8df 9078 	ldr.w	r9, [pc, #120]	; 2fff03e8 <stm32_enter_low_power+0x190>
2fff0372:	2041      	movs	r0, #65	; 0x41
2fff0374:	f8df 8074 	ldr.w	r8, [pc, #116]	; 2fff03ec <stm32_enter_low_power+0x194>
2fff0378:	f004 ffa2 	bl	2fff52c0 <stm32mp_clk_enable>
2fff037c:	f8c9 6000 	str.w	r6, [r9]
2fff0380:	f8c8 6000 	str.w	r6, [r8]
2fff0384:	f005 fbe2 	bl	2fff5b4c <stm32mp1_clock_stopmode_save>
2fff0388:	2c04      	cmp	r4, #4
2fff038a:	d114      	bne.n	2fff03b6 <stm32_enter_low_power+0x15e>
2fff038c:	4b12      	ldr	r3, [pc, #72]	; (2fff03d8 <stm32_enter_low_power+0x180>)
2fff038e:	f8c9 7000 	str.w	r7, [r9]
2fff0392:	f8c8 3000 	str.w	r3, [r8]
2fff0396:	9801      	ldr	r0, [sp, #4]
2fff0398:	f008 f8a8 	bl	2fff84ec <stm32_save_context>
2fff039c:	2800      	cmp	r0, #0
2fff039e:	f47f af70 	bne.w	2fff0282 <stm32_enter_low_power+0x2a>
2fff03a2:	68ab      	ldr	r3, [r5, #8]
2fff03a4:	f105 0208 	add.w	r2, r5, #8
2fff03a8:	f043 0303 	orr.w	r3, r3, #3
2fff03ac:	60ab      	str	r3, [r5, #8]
2fff03ae:	6813      	ldr	r3, [r2, #0]
2fff03b0:	f413 3f40 	tst.w	r3, #196608	; 0x30000
2fff03b4:	d0fb      	beq.n	2fff03ae <stm32_enter_low_power+0x156>
2fff03b6:	2041      	movs	r0, #65	; 0x41
2fff03b8:	f004 ff85 	bl	2fff52c6 <stm32mp_clk_disable>
2fff03bc:	4807      	ldr	r0, [pc, #28]	; (2fff03dc <stm32_enter_low_power+0x184>)
2fff03be:	f7ff f8d5 	bl	2ffef56c <stm32_rtc_get_calendar>
2fff03c2:	4b07      	ldr	r3, [pc, #28]	; (2fff03e0 <stm32_enter_low_power+0x188>)
2fff03c4:	2201      	movs	r2, #1
2fff03c6:	701a      	strb	r2, [r3, #0]
2fff03c8:	e775      	b.n	2fff02b6 <stm32_enter_low_power+0x5e>
2fff03ca:	bf00      	nop
2fff03cc:	2fffa6b6 	.word	0x2fffa6b6
2fff03d0:	00110f1f 	.word	0x00110f1f
2fff03d4:	2fffe35c 	.word	0x2fffe35c
2fff03d8:	ca7face0 	.word	0xca7face0
2fff03dc:	2fffe760 	.word	0x2fffe760
2fff03e0:	2fffe358 	.word	0x2fffe358
2fff03e4:	2fffa710 	.word	0x2fffa710
2fff03e8:	5c00a114 	.word	0x5c00a114
2fff03ec:	5c00a110 	.word	0x5c00a110

2fff03f0 <stm32_pwr_domain_off>:
2fff03f0:	4770      	bx	lr

2fff03f2 <stm32_validate_power_state>:
2fff03f2:	f3c0 4200 	ubfx	r2, r0, #16, #1
2fff03f6:	f3c0 6301 	ubfx	r3, r0, #24, #2
2fff03fa:	b280      	uxth	r0, r0
2fff03fc:	4313      	orrs	r3, r2
2fff03fe:	4318      	orrs	r0, r3
2fff0400:	bf03      	ittte	eq
2fff0402:	7048      	strbeq	r0, [r1, #1]
2fff0404:	2301      	moveq	r3, #1
2fff0406:	700b      	strbeq	r3, [r1, #0]
2fff0408:	f06f 0001 	mvnne.w	r0, #1
2fff040c:	4770      	bx	lr
	...

2fff0410 <stm32_validate_ns_entrypoint>:
2fff0410:	f1b0 4f40 	cmp.w	r0, #3221225472	; 0xc0000000
2fff0414:	bf23      	ittte	cs
2fff0416:	4b03      	ldrcs	r3, [pc, #12]	; (2fff0424 <stm32_validate_ns_entrypoint+0x14>)
2fff0418:	6018      	strcs	r0, [r3, #0]
2fff041a:	2000      	movcs	r0, #0
2fff041c:	f06f 0008 	mvncc.w	r0, #8
2fff0420:	4770      	bx	lr
2fff0422:	bf00      	nop
2fff0424:	2fffe770 	.word	0x2fffe770

2fff0428 <stm32_node_hw_state>:
2fff0428:	2900      	cmp	r1, #0
2fff042a:	bf14      	ite	ne
2fff042c:	f06f 0001 	mvnne.w	r0, #1
2fff0430:	2000      	moveq	r0, #0
2fff0432:	4770      	bx	lr

2fff0434 <stm32_get_sys_suspend_power_state>:
2fff0434:	2302      	movs	r3, #2
2fff0436:	7003      	strb	r3, [r0, #0]
2fff0438:	7043      	strb	r3, [r0, #1]
2fff043a:	4770      	bx	lr

2fff043c <stm32_system_reset>:
2fff043c:	b508      	push	{r3, lr}
2fff043e:	f002 fc13 	bl	2fff2c68 <stm32mp_rcc_base>
2fff0442:	f8d0 3404 	ldr.w	r3, [r0, #1028]	; 0x404
2fff0446:	f043 0301 	orr.w	r3, r3, #1
2fff044a:	f8c0 3404 	str.w	r3, [r0, #1028]	; 0x404
2fff044e:	e7fe      	b.n	2fff044e <stm32_system_reset+0x12>

2fff0450 <stm32_pwr_domain_suspend>:
2fff0450:	b508      	push	{r3, lr}
2fff0452:	2000      	movs	r0, #0
2fff0454:	f000 f934 	bl	2fff06c0 <stm32mp1_get_lp_soc_mode>
2fff0458:	4b02      	ldr	r3, [pc, #8]	; (2fff0464 <stm32_pwr_domain_suspend+0x14>)
2fff045a:	6819      	ldr	r1, [r3, #0]
2fff045c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0460:	f7ff befa 	b.w	2fff0258 <stm32_enter_low_power>
2fff0464:	2fffe770 	.word	0x2fffe770

2fff0468 <stm32_system_off>:
2fff0468:	b508      	push	{r3, lr}
2fff046a:	2001      	movs	r0, #1
2fff046c:	f000 f928 	bl	2fff06c0 <stm32mp1_get_lp_soc_mode>
2fff0470:	4604      	mov	r4, r0
2fff0472:	f002 fd3b 	bl	2fff2eec <stm32mp_is_single_core>
2fff0476:	b958      	cbnz	r0, 2fff0490 <stm32_system_off+0x28>
2fff0478:	f002 fbf6 	bl	2fff2c68 <stm32mp_rcc_base>
2fff047c:	f8d0 3404 	ldr.w	r3, [r0, #1028]	; 0x404
2fff0480:	2101      	movs	r1, #1
2fff0482:	f043 0320 	orr.w	r3, r3, #32
2fff0486:	f8c0 3404 	str.w	r3, [r0, #1028]	; 0x404
2fff048a:	2009      	movs	r0, #9
2fff048c:	f000 ffc0 	bl	2fff1410 <gicv2_raise_sgi>
2fff0490:	2100      	movs	r1, #0
2fff0492:	4620      	mov	r0, r4
2fff0494:	f7ff fee0 	bl	2fff0258 <stm32_enter_low_power>
2fff0498:	f7ff fec2 	bl	2fff0220 <stm32_pwr_down_wfi>
2fff049c:	f002 fac2 	bl	2fff2a24 <console_flush>
2fff04a0:	f008 ead4 	blx	2fff8a4c <do_panic>

2fff04a4 <stm32_pwr_domain_pwr_down_wfi>:
2fff04a4:	b508      	push	{r3, lr}
2fff04a6:	ee10 3fb0 	mrc	15, 0, r3, cr0, cr0, {5}
2fff04aa:	f013 0fff 	tst.w	r3, #255	; 0xff
2fff04ae:	d108      	bne.n	2fff04c2 <stm32_pwr_domain_pwr_down_wfi+0x1e>
2fff04b0:	4b0b      	ldr	r3, [pc, #44]	; (2fff04e0 <stm32_pwr_domain_pwr_down_wfi+0x3c>)
2fff04b2:	681c      	ldr	r4, [r3, #0]
2fff04b4:	f7ff feb4 	bl	2fff0220 <stm32_pwr_down_wfi>
2fff04b8:	f7ff fe66 	bl	2fff0188 <stm32_exit_cstop>
2fff04bc:	f008 ec5c 	blx	2fff8d78 <disable_mmu_icache_secure>
2fff04c0:	47a0      	blx	r4
2fff04c2:	f002 fbd1 	bl	2fff2c68 <stm32mp_rcc_base>
2fff04c6:	2320      	movs	r3, #32
2fff04c8:	f8c0 3404 	str.w	r3, [r0, #1028]	; 0x404
2fff04cc:	f3bf 8f4f 	dsb	sy
2fff04d0:	f3bf 8f6f 	isb	sy
2fff04d4:	bf30      	wfi
2fff04d6:	f002 faa5 	bl	2fff2a24 <console_flush>
2fff04da:	f008 eab8 	blx	2fff8a4c <do_panic>
2fff04de:	bf00      	nop
2fff04e0:	2fffe774 	.word	0x2fffe774

2fff04e4 <stm32_pwr_domain_on_finish>:
2fff04e4:	b508      	push	{r3, lr}
2fff04e6:	f001 f86c 	bl	2fff15c2 <stm32_gic_pcpu_init>
2fff04ea:	4b02      	ldr	r3, [pc, #8]	; (2fff04f4 <stm32_pwr_domain_on_finish+0x10>)
2fff04ec:	681b      	ldr	r3, [r3, #0]
2fff04ee:	ee0e 3f10 	mcr	15, 0, r3, cr14, cr0, {0}
2fff04f2:	bd08      	pop	{r3, pc}
2fff04f4:	2fffe76c 	.word	0x2fffe76c

2fff04f8 <stm32_pwr_domain_on>:
2fff04f8:	b570      	push	{r4, r5, r6, lr}
2fff04fa:	4605      	mov	r5, r0
2fff04fc:	ee10 6fb0 	mrc	15, 0, r6, cr0, cr0, {5}
2fff0500:	f002 fcf4 	bl	2fff2eec <stm32mp_is_single_core>
2fff0504:	4604      	mov	r4, r0
2fff0506:	bb18      	cbnz	r0, 2fff0550 <stm32_pwr_domain_on+0x58>
2fff0508:	42b5      	cmp	r5, r6
2fff050a:	d024      	beq.n	2fff0556 <stm32_pwr_domain_on+0x5e>
2fff050c:	4d15      	ldr	r5, [pc, #84]	; (2fff0564 <stm32_pwr_domain_on+0x6c>)
2fff050e:	2101      	movs	r1, #1
2fff0510:	4e15      	ldr	r6, [pc, #84]	; (2fff0568 <stm32_pwr_domain_on+0x70>)
2fff0512:	6028      	str	r0, [r5, #0]
2fff0514:	f000 ff7c 	bl	2fff1410 <gicv2_raise_sgi>
2fff0518:	200a      	movs	r0, #10
2fff051a:	f003 fd6f 	bl	2fff3ffc <udelay>
2fff051e:	6832      	ldr	r2, [r6, #0]
2fff0520:	4b12      	ldr	r3, [pc, #72]	; (2fff056c <stm32_pwr_domain_on+0x74>)
2fff0522:	429a      	cmp	r2, r3
2fff0524:	d11a      	bne.n	2fff055c <stm32_pwr_domain_on+0x64>
2fff0526:	2041      	movs	r0, #65	; 0x41
2fff0528:	f004 feca 	bl	2fff52c0 <stm32mp_clk_enable>
2fff052c:	ee1e 2f10 	mrc	15, 0, r2, cr14, cr0, {0}
2fff0530:	4b0f      	ldr	r3, [pc, #60]	; (2fff0570 <stm32_pwr_domain_on+0x78>)
2fff0532:	2041      	movs	r0, #65	; 0x41
2fff0534:	601a      	str	r2, [r3, #0]
2fff0536:	6832      	ldr	r2, [r6, #0]
2fff0538:	4b0e      	ldr	r3, [pc, #56]	; (2fff0574 <stm32_pwr_domain_on+0x7c>)
2fff053a:	601a      	str	r2, [r3, #0]
2fff053c:	4b0e      	ldr	r3, [pc, #56]	; (2fff0578 <stm32_pwr_domain_on+0x80>)
2fff053e:	602b      	str	r3, [r5, #0]
2fff0540:	f004 fec1 	bl	2fff52c6 <stm32mp_clk_disable>
2fff0544:	2008      	movs	r0, #8
2fff0546:	2101      	movs	r1, #1
2fff0548:	f000 ff62 	bl	2fff1410 <gicv2_raise_sgi>
2fff054c:	4620      	mov	r0, r4
2fff054e:	bd70      	pop	{r4, r5, r6, pc}
2fff0550:	f06f 0005 	mvn.w	r0, #5
2fff0554:	e7fb      	b.n	2fff054e <stm32_pwr_domain_on+0x56>
2fff0556:	f06f 0001 	mvn.w	r0, #1
2fff055a:	e7f8      	b.n	2fff054e <stm32_pwr_domain_on+0x56>
2fff055c:	f06f 0008 	mvn.w	r0, #8
2fff0560:	e7f5      	b.n	2fff054e <stm32_pwr_domain_on+0x56>
2fff0562:	bf00      	nop
2fff0564:	5c00a110 	.word	0x5c00a110
2fff0568:	2fffe774 	.word	0x2fffe774
2fff056c:	2ffed2e0 	.word	0x2ffed2e0
2fff0570:	2fffe76c 	.word	0x2fffe76c
2fff0574:	5c00a114 	.word	0x5c00a114
2fff0578:	ca7face1 	.word	0xca7face1

2fff057c <stm32_cpu_standby>:
2fff057c:	2801      	cmp	r0, #1
2fff057e:	b510      	push	{r4, lr}
2fff0580:	d003      	beq.n	2fff058a <stm32_cpu_standby+0xe>
2fff0582:	480c      	ldr	r0, [pc, #48]	; (2fff05b4 <stm32_cpu_standby+0x38>)
2fff0584:	2128      	movs	r1, #40	; 0x28
2fff0586:	f009 fa9b 	bl	2fff9ac0 <__assert>
2fff058a:	f3bf 8f4f 	dsb	sy
2fff058e:	f3bf 8f6f 	isb	sy
2fff0592:	f240 34ff 	movw	r4, #1023	; 0x3ff
2fff0596:	bf30      	wfi
2fff0598:	f000 fe4c 	bl	2fff1234 <gicv2_acknowledge_interrupt>
2fff059c:	f2a0 32fe 	subw	r2, r0, #1022	; 0x3fe
2fff05a0:	2a01      	cmp	r2, #1
2fff05a2:	d903      	bls.n	2fff05ac <stm32_cpu_standby+0x30>
2fff05a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff05a8:	f000 be56 	b.w	2fff1258 <gicv2_end_of_interrupt>
2fff05ac:	42a0      	cmp	r0, r4
2fff05ae:	d0f2      	beq.n	2fff0596 <stm32_cpu_standby+0x1a>
2fff05b0:	bd10      	pop	{r4, pc}
2fff05b2:	bf00      	nop
2fff05b4:	2fffa764 	.word	0x2fffa764

2fff05b8 <stm32_pwr_domain_suspend_finish>:
2fff05b8:	4770      	bx	lr
	...

2fff05bc <plat_setup_psci_ops>:
2fff05bc:	4b02      	ldr	r3, [pc, #8]	; (2fff05c8 <plat_setup_psci_ops+0xc>)
2fff05be:	6018      	str	r0, [r3, #0]
2fff05c0:	2000      	movs	r0, #0
2fff05c2:	4b02      	ldr	r3, [pc, #8]	; (2fff05cc <plat_setup_psci_ops+0x10>)
2fff05c4:	600b      	str	r3, [r1, #0]
2fff05c6:	4770      	bx	lr
2fff05c8:	2fffe774 	.word	0x2fffe774
2fff05cc:	2fffa784 	.word	0x2fffa784

2fff05d0 <stm32mp1_init_lp_states>:
2fff05d0:	b530      	push	{r4, r5, lr}
2fff05d2:	b08b      	sub	sp, #44	; 0x2c
2fff05d4:	a801      	add	r0, sp, #4
2fff05d6:	f007 fcf5 	bl	2fff7fc4 <fdt_get_address>
2fff05da:	b938      	cbnz	r0, 2fff05ec <stm32mp1_init_lp_states+0x1c>
2fff05dc:	492a      	ldr	r1, [pc, #168]	; (2fff0688 <stm32mp1_init_lp_states+0xb8>)
2fff05de:	482b      	ldr	r0, [pc, #172]	; (2fff068c <stm32mp1_init_lp_states+0xbc>)
2fff05e0:	f002 f97c 	bl	2fff28dc <tf_log>
2fff05e4:	f002 fa1e 	bl	2fff2a24 <console_flush>
2fff05e8:	f008 ea30 	blx	2fff8a4c <do_panic>
2fff05ec:	4828      	ldr	r0, [pc, #160]	; (2fff0690 <stm32mp1_init_lp_states+0xc0>)
2fff05ee:	f007 fdf7 	bl	2fff81e0 <dt_get_node_by_compatible>
2fff05f2:	1e04      	subs	r4, r0, #0
2fff05f4:	dbf2      	blt.n	2fff05dc <stm32mp1_init_lp_states+0xc>
2fff05f6:	4a24      	ldr	r2, [pc, #144]	; (2fff0688 <stm32mp1_init_lp_states+0xb8>)
2fff05f8:	2300      	movs	r3, #0
2fff05fa:	9801      	ldr	r0, [sp, #4]
2fff05fc:	4621      	mov	r1, r4
2fff05fe:	f009 f8c2 	bl	2fff9786 <fdt_getprop>
2fff0602:	2800      	cmp	r0, #0
2fff0604:	d0ea      	beq.n	2fff05dc <stm32mp1_init_lp_states+0xc>
2fff0606:	6802      	ldr	r2, [r0, #0]
2fff0608:	9801      	ldr	r0, [sp, #4]
2fff060a:	f3c2 2107 	ubfx	r1, r2, #8, #8
2fff060e:	0e13      	lsrs	r3, r2, #24
2fff0610:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2fff0614:	f3c2 4207 	ubfx	r2, r2, #16, #8
2fff0618:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2fff061c:	4621      	mov	r1, r4
2fff061e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2fff0622:	4a1c      	ldr	r2, [pc, #112]	; (2fff0694 <stm32mp1_init_lp_states+0xc4>)
2fff0624:	6013      	str	r3, [r2, #0]
2fff0626:	ab02      	add	r3, sp, #8
2fff0628:	4a1b      	ldr	r2, [pc, #108]	; (2fff0698 <stm32mp1_init_lp_states+0xc8>)
2fff062a:	f009 f8ac 	bl	2fff9786 <fdt_getprop>
2fff062e:	2800      	cmp	r0, #0
2fff0630:	d0d8      	beq.n	2fff05e4 <stm32mp1_init_lp_states+0x14>
2fff0632:	9b02      	ldr	r3, [sp, #8]
2fff0634:	089d      	lsrs	r5, r3, #2
2fff0636:	2b1f      	cmp	r3, #31
2fff0638:	d8d4      	bhi.n	2fff05e4 <stm32mp1_init_lp_states+0x14>
2fff063a:	4917      	ldr	r1, [pc, #92]	; (2fff0698 <stm32mp1_init_lp_states+0xc8>)
2fff063c:	462b      	mov	r3, r5
2fff063e:	aa03      	add	r2, sp, #12
2fff0640:	4620      	mov	r0, r4
2fff0642:	f007 fd3f 	bl	2fff80c4 <fdt_read_uint32_array>
2fff0646:	2800      	cmp	r0, #0
2fff0648:	db0d      	blt.n	2fff0666 <stm32mp1_init_lp_states+0x96>
2fff064a:	4814      	ldr	r0, [pc, #80]	; (2fff069c <stm32mp1_init_lp_states+0xcc>)
2fff064c:	aa03      	add	r2, sp, #12
2fff064e:	2100      	movs	r1, #0
2fff0650:	2401      	movs	r4, #1
2fff0652:	428d      	cmp	r5, r1
2fff0654:	d10b      	bne.n	2fff066e <stm32mp1_init_lp_states+0x9e>
2fff0656:	2306      	movs	r3, #6
2fff0658:	5cc2      	ldrb	r2, [r0, r3]
2fff065a:	2a01      	cmp	r2, #1
2fff065c:	d110      	bne.n	2fff0680 <stm32mp1_init_lp_states+0xb0>
2fff065e:	4a10      	ldr	r2, [pc, #64]	; (2fff06a0 <stm32mp1_init_lp_states+0xd0>)
2fff0660:	6013      	str	r3, [r2, #0]
2fff0662:	b00b      	add	sp, #44	; 0x2c
2fff0664:	bd30      	pop	{r4, r5, pc}
2fff0666:	480f      	ldr	r0, [pc, #60]	; (2fff06a4 <stm32mp1_init_lp_states+0xd4>)
2fff0668:	f002 f938 	bl	2fff28dc <tf_log>
2fff066c:	e7ba      	b.n	2fff05e4 <stm32mp1_init_lp_states+0x14>
2fff066e:	f852 3b04 	ldr.w	r3, [r2], #4
2fff0672:	2b06      	cmp	r3, #6
2fff0674:	d901      	bls.n	2fff067a <stm32mp1_init_lp_states+0xaa>
2fff0676:	480c      	ldr	r0, [pc, #48]	; (2fff06a8 <stm32mp1_init_lp_states+0xd8>)
2fff0678:	e7f6      	b.n	2fff0668 <stm32mp1_init_lp_states+0x98>
2fff067a:	54c4      	strb	r4, [r0, r3]
2fff067c:	3101      	adds	r1, #1
2fff067e:	e7e8      	b.n	2fff0652 <stm32mp1_init_lp_states+0x82>
2fff0680:	3b01      	subs	r3, #1
2fff0682:	d1e9      	bne.n	2fff0658 <stm32mp1_init_lp_states+0x88>
2fff0684:	e7ed      	b.n	2fff0662 <stm32mp1_init_lp_states+0x92>
2fff0686:	bf00      	nop
2fff0688:	2fffa7d8 	.word	0x2fffa7d8
2fff068c:	2fffa7ec 	.word	0x2fffa7ec
2fff0690:	2fffa800 	.word	0x2fffa800
2fff0694:	2fffe788 	.word	0x2fffe788
2fff0698:	2fffa814 	.word	0x2fffa814
2fff069c:	2fffe77f 	.word	0x2fffe77f
2fff06a0:	2fffe778 	.word	0x2fffe778
2fff06a4:	2fffa837 	.word	0x2fffa837
2fff06a8:	2fffa840 	.word	0x2fffa840

2fff06ac <stm32mp1_set_pm_domain_state>:
2fff06ac:	2802      	cmp	r0, #2
2fff06ae:	bf9d      	ittte	ls
2fff06b0:	4b02      	ldrls	r3, [pc, #8]	; (2fff06bc <stm32mp1_set_pm_domain_state+0x10>)
2fff06b2:	5419      	strbls	r1, [r3, r0]
2fff06b4:	2000      	movls	r0, #0
2fff06b6:	f06f 0015 	mvnhi.w	r0, #21
2fff06ba:	4770      	bx	lr
2fff06bc:	2fffe77c 	.word	0x2fffe77c

2fff06c0 <stm32mp1_get_lp_soc_mode>:
2fff06c0:	2801      	cmp	r0, #1
2fff06c2:	b510      	push	{r4, lr}
2fff06c4:	d102      	bne.n	2fff06cc <stm32mp1_get_lp_soc_mode+0xc>
2fff06c6:	4b0f      	ldr	r3, [pc, #60]	; (2fff0704 <stm32mp1_get_lp_soc_mode+0x44>)
2fff06c8:	6818      	ldr	r0, [r3, #0]
2fff06ca:	bd10      	pop	{r4, pc}
2fff06cc:	4b0e      	ldr	r3, [pc, #56]	; (2fff0708 <stm32mp1_get_lp_soc_mode+0x48>)
2fff06ce:	4a0f      	ldr	r2, [pc, #60]	; (2fff070c <stm32mp1_get_lp_soc_mode+0x4c>)
2fff06d0:	6818      	ldr	r0, [r3, #0]
2fff06d2:	7854      	ldrb	r4, [r2, #1]
2fff06d4:	7893      	ldrb	r3, [r2, #2]
2fff06d6:	490e      	ldr	r1, [pc, #56]	; (2fff0710 <stm32mp1_get_lp_soc_mode+0x50>)
2fff06d8:	2800      	cmp	r0, #0
2fff06da:	d0f6      	beq.n	2fff06ca <stm32mp1_get_lp_soc_mode+0xa>
2fff06dc:	2806      	cmp	r0, #6
2fff06de:	d903      	bls.n	2fff06e8 <stm32mp1_get_lp_soc_mode+0x28>
2fff06e0:	480c      	ldr	r0, [pc, #48]	; (2fff0714 <stm32mp1_get_lp_soc_mode+0x54>)
2fff06e2:	218c      	movs	r1, #140	; 0x8c
2fff06e4:	f009 f9ec 	bl	2fff9ac0 <__assert>
2fff06e8:	2804      	cmp	r0, #4
2fff06ea:	d103      	bne.n	2fff06f4 <stm32mp1_get_lp_soc_mode+0x34>
2fff06ec:	b103      	cbz	r3, 2fff06f0 <stm32mp1_get_lp_soc_mode+0x30>
2fff06ee:	b92c      	cbnz	r4, 2fff06fc <stm32mp1_get_lp_soc_mode+0x3c>
2fff06f0:	3801      	subs	r0, #1
2fff06f2:	e7f1      	b.n	2fff06d8 <stm32mp1_get_lp_soc_mode+0x18>
2fff06f4:	2803      	cmp	r0, #3
2fff06f6:	d101      	bne.n	2fff06fc <stm32mp1_get_lp_soc_mode+0x3c>
2fff06f8:	2b00      	cmp	r3, #0
2fff06fa:	d0f9      	beq.n	2fff06f0 <stm32mp1_get_lp_soc_mode+0x30>
2fff06fc:	5c42      	ldrb	r2, [r0, r1]
2fff06fe:	2a01      	cmp	r2, #1
2fff0700:	d1f6      	bne.n	2fff06f0 <stm32mp1_get_lp_soc_mode+0x30>
2fff0702:	e7e2      	b.n	2fff06ca <stm32mp1_get_lp_soc_mode+0xa>
2fff0704:	2fffe788 	.word	0x2fffe788
2fff0708:	2fffe778 	.word	0x2fffe778
2fff070c:	2fffe77c 	.word	0x2fffe77c
2fff0710:	2fffe77f 	.word	0x2fffe77f
2fff0714:	2fffa84f 	.word	0x2fffa84f

2fff0718 <decprot2str>:
2fff0718:	4a0b      	ldr	r2, [pc, #44]	; (2fff0748 <decprot2str+0x30>)
2fff071a:	4601      	mov	r1, r0
2fff071c:	2300      	movs	r3, #0
2fff071e:	4610      	mov	r0, r2
2fff0720:	b510      	push	{r4, lr}
2fff0722:	6854      	ldr	r4, [r2, #4]
2fff0724:	428c      	cmp	r4, r1
2fff0726:	d104      	bne.n	2fff0732 <decprot2str+0x1a>
2fff0728:	220c      	movs	r2, #12
2fff072a:	fb02 0303 	mla	r3, r2, r3, r0
2fff072e:	6898      	ldr	r0, [r3, #8]
2fff0730:	bd10      	pop	{r4, pc}
2fff0732:	3301      	adds	r3, #1
2fff0734:	320c      	adds	r2, #12
2fff0736:	2b0c      	cmp	r3, #12
2fff0738:	d1f3      	bne.n	2fff0722 <decprot2str+0xa>
2fff073a:	4804      	ldr	r0, [pc, #16]	; (2fff074c <decprot2str+0x34>)
2fff073c:	f002 f8ce 	bl	2fff28dc <tf_log>
2fff0740:	f002 f970 	bl	2fff2a24 <console_flush>
2fff0744:	f008 e982 	blx	2fff8a4c <do_panic>
2fff0748:	2fffaa48 	.word	0x2fffaa48
2fff074c:	2fffa878 	.word	0x2fffa878

2fff0750 <get_gpioz_nbpin>:
2fff0750:	b538      	push	{r3, r4, r5, lr}
2fff0752:	4c0a      	ldr	r4, [pc, #40]	; (2fff077c <get_gpioz_nbpin+0x2c>)
2fff0754:	f994 3000 	ldrsb.w	r3, [r4]
2fff0758:	4625      	mov	r5, r4
2fff075a:	2b00      	cmp	r3, #0
2fff075c:	da0a      	bge.n	2fff0774 <get_gpioz_nbpin+0x24>
2fff075e:	f007 fdef 	bl	2fff8340 <fdt_get_gpioz_nbpins_from_dt>
2fff0762:	b240      	sxtb	r0, r0
2fff0764:	7020      	strb	r0, [r4, #0]
2fff0766:	f030 0308 	bics.w	r3, r0, #8
2fff076a:	d003      	beq.n	2fff0774 <get_gpioz_nbpin+0x24>
2fff076c:	4804      	ldr	r0, [pc, #16]	; (2fff0780 <get_gpioz_nbpin+0x30>)
2fff076e:	218e      	movs	r1, #142	; 0x8e
2fff0770:	f009 f9a6 	bl	2fff9ac0 <__assert>
2fff0774:	f995 0000 	ldrsb.w	r0, [r5]
2fff0778:	bd38      	pop	{r3, r4, r5, pc}
2fff077a:	bf00      	nop
2fff077c:	2fffd1e8 	.word	0x2fffd1e8
2fff0780:	2fffa887 	.word	0x2fffa887

2fff0784 <register_periph>:
2fff0784:	2813      	cmp	r0, #19
2fff0786:	b538      	push	{r3, r4, r5, lr}
2fff0788:	460c      	mov	r4, r1
2fff078a:	d817      	bhi.n	2fff07bc <register_periph+0x38>
2fff078c:	4925      	ldr	r1, [pc, #148]	; (2fff0824 <register_periph+0xa0>)
2fff078e:	4b26      	ldr	r3, [pc, #152]	; (2fff0828 <register_periph+0xa4>)
2fff0790:	7809      	ldrb	r1, [r1, #0]
2fff0792:	5c1a      	ldrb	r2, [r3, r0]
2fff0794:	b9b1      	cbnz	r1, 2fff07c4 <register_periph+0x40>
2fff0796:	b10a      	cbz	r2, 2fff079c <register_periph+0x18>
2fff0798:	42a2      	cmp	r2, r4
2fff079a:	d115      	bne.n	2fff07c8 <register_periph+0x44>
2fff079c:	541c      	strb	r4, [r3, r0]
2fff079e:	1e45      	subs	r5, r0, #1
2fff07a0:	2d07      	cmp	r5, #7
2fff07a2:	d815      	bhi.n	2fff07d0 <register_periph+0x4c>
2fff07a4:	f7ff ffd4 	bl	2fff0750 <get_gpioz_nbpin>
2fff07a8:	4285      	cmp	r5, r0
2fff07aa:	d338      	bcc.n	2fff081e <register_periph+0x9a>
2fff07ac:	f7ff ffd0 	bl	2fff0750 <get_gpioz_nbpin>
2fff07b0:	4602      	mov	r2, r0
2fff07b2:	4629      	mov	r1, r5
2fff07b4:	481d      	ldr	r0, [pc, #116]	; (2fff082c <register_periph+0xa8>)
2fff07b6:	f002 f891 	bl	2fff28dc <tf_log>
2fff07ba:	e005      	b.n	2fff07c8 <register_periph+0x44>
2fff07bc:	481c      	ldr	r0, [pc, #112]	; (2fff0830 <register_periph+0xac>)
2fff07be:	2197      	movs	r1, #151	; 0x97
2fff07c0:	f009 f97e 	bl	2fff9ac0 <__assert>
2fff07c4:	42a2      	cmp	r2, r4
2fff07c6:	d02c      	beq.n	2fff0822 <register_periph+0x9e>
2fff07c8:	f002 f92c 	bl	2fff2a24 <console_flush>
2fff07cc:	f008 e93e 	blx	2fff8a4c <do_panic>
2fff07d0:	2c01      	cmp	r4, #1
2fff07d2:	d126      	bne.n	2fff0822 <register_periph+0x9e>
2fff07d4:	2812      	cmp	r0, #18
2fff07d6:	d824      	bhi.n	2fff0822 <register_periph+0x9e>
2fff07d8:	e8df f000 	tbb	[pc, r0]
2fff07dc:	0a0a0a1b 	.word	0x0a0a0a1b
2fff07e0:	0a0a0a0a 	.word	0x0a0a0a0a
2fff07e4:	1d15190a 	.word	0x1d15190a
2fff07e8:	1723230f 	.word	0x1723230f
2fff07ec:	131f      	.short	0x131f
2fff07ee:	11          	.byte	0x11
2fff07ef:	00          	.byte	0x00
2fff07f0:	205f      	movs	r0, #95	; 0x5f
2fff07f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff07f6:	f005 b809 	b.w	2fff580c <stm32mp1_register_clock_parents_secure>
2fff07fa:	2044      	movs	r0, #68	; 0x44
2fff07fc:	e7f9      	b.n	2fff07f2 <register_periph+0x6e>
2fff07fe:	2094      	movs	r0, #148	; 0x94
2fff0800:	e7f7      	b.n	2fff07f2 <register_periph+0x6e>
2fff0802:	2087      	movs	r0, #135	; 0x87
2fff0804:	e7f5      	b.n	2fff07f2 <register_periph+0x6e>
2fff0806:	208c      	movs	r0, #140	; 0x8c
2fff0808:	e7f3      	b.n	2fff07f2 <register_periph+0x6e>
2fff080a:	207c      	movs	r0, #124	; 0x7c
2fff080c:	e7f1      	b.n	2fff07f2 <register_periph+0x6e>
2fff080e:	2061      	movs	r0, #97	; 0x61
2fff0810:	e7ef      	b.n	2fff07f2 <register_periph+0x6e>
2fff0812:	2060      	movs	r0, #96	; 0x60
2fff0814:	e7ed      	b.n	2fff07f2 <register_periph+0x6e>
2fff0816:	208e      	movs	r0, #142	; 0x8e
2fff0818:	e7eb      	b.n	2fff07f2 <register_periph+0x6e>
2fff081a:	20c0      	movs	r0, #192	; 0xc0
2fff081c:	e7e9      	b.n	2fff07f2 <register_periph+0x6e>
2fff081e:	2c01      	cmp	r4, #1
2fff0820:	d0e6      	beq.n	2fff07f0 <register_periph+0x6c>
2fff0822:	bd38      	pop	{r3, r4, r5, pc}
2fff0824:	2fffe78c 	.word	0x2fffe78c
2fff0828:	2fffe78d 	.word	0x2fffe78d
2fff082c:	2fffa8b4 	.word	0x2fffa8b4
2fff0830:	2fffa887 	.word	0x2fffa887

2fff0834 <register_periph_iomem>:
2fff0834:	f1b0 4fb8 	cmp.w	r0, #1543503872	; 0x5c000000
2fff0838:	b508      	push	{r3, lr}
2fff083a:	d060      	beq.n	2fff08fe <register_periph_iomem+0xca>
2fff083c:	d848      	bhi.n	2fff08d0 <register_periph_iomem+0x9c>
2fff083e:	4b38      	ldr	r3, [pc, #224]	; (2fff0920 <register_periph_iomem+0xec>)
2fff0840:	4298      	cmp	r0, r3
2fff0842:	d061      	beq.n	2fff0908 <register_periph_iomem+0xd4>
2fff0844:	d83f      	bhi.n	2fff08c6 <register_periph_iomem+0x92>
2fff0846:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
2fff084a:	4298      	cmp	r0, r3
2fff084c:	d05e      	beq.n	2fff090c <register_periph_iomem+0xd8>
2fff084e:	d814      	bhi.n	2fff087a <register_periph_iomem+0x46>
2fff0850:	4b34      	ldr	r3, [pc, #208]	; (2fff0924 <register_periph_iomem+0xf0>)
2fff0852:	4298      	cmp	r0, r3
2fff0854:	d034      	beq.n	2fff08c0 <register_periph_iomem+0x8c>
2fff0856:	d81f      	bhi.n	2fff0898 <register_periph_iomem+0x64>
2fff0858:	4b33      	ldr	r3, [pc, #204]	; (2fff0928 <register_periph_iomem+0xf4>)
2fff085a:	4298      	cmp	r0, r3
2fff085c:	d030      	beq.n	2fff08c0 <register_periph_iomem+0x8c>
2fff085e:	d810      	bhi.n	2fff0882 <register_periph_iomem+0x4e>
2fff0860:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
2fff0864:	4298      	cmp	r0, r3
2fff0866:	d02b      	beq.n	2fff08c0 <register_periph_iomem+0x8c>
2fff0868:	d804      	bhi.n	2fff0874 <register_periph_iomem+0x40>
2fff086a:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
2fff086e:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
2fff0872:	e000      	b.n	2fff0876 <register_periph_iomem+0x42>
2fff0874:	4b2d      	ldr	r3, [pc, #180]	; (2fff092c <register_periph_iomem+0xf8>)
2fff0876:	4298      	cmp	r0, r3
2fff0878:	d022      	beq.n	2fff08c0 <register_periph_iomem+0x8c>
2fff087a:	f002 f8d3 	bl	2fff2a24 <console_flush>
2fff087e:	f008 e8e6 	blx	2fff8a4c <do_panic>
2fff0882:	4b2b      	ldr	r3, [pc, #172]	; (2fff0930 <register_periph_iomem+0xfc>)
2fff0884:	4298      	cmp	r0, r3
2fff0886:	d01b      	beq.n	2fff08c0 <register_periph_iomem+0x8c>
2fff0888:	d804      	bhi.n	2fff0894 <register_periph_iomem+0x60>
2fff088a:	4b2a      	ldr	r3, [pc, #168]	; (2fff0934 <register_periph_iomem+0x100>)
2fff088c:	4298      	cmp	r0, r3
2fff088e:	d017      	beq.n	2fff08c0 <register_periph_iomem+0x8c>
2fff0890:	4b29      	ldr	r3, [pc, #164]	; (2fff0938 <register_periph_iomem+0x104>)
2fff0892:	e7f0      	b.n	2fff0876 <register_periph_iomem+0x42>
2fff0894:	4b29      	ldr	r3, [pc, #164]	; (2fff093c <register_periph_iomem+0x108>)
2fff0896:	e7ee      	b.n	2fff0876 <register_periph_iomem+0x42>
2fff0898:	4b29      	ldr	r3, [pc, #164]	; (2fff0940 <register_periph_iomem+0x10c>)
2fff089a:	4298      	cmp	r0, r3
2fff089c:	d010      	beq.n	2fff08c0 <register_periph_iomem+0x8c>
2fff089e:	d80c      	bhi.n	2fff08ba <register_periph_iomem+0x86>
2fff08a0:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
2fff08a4:	4298      	cmp	r0, r3
2fff08a6:	d00b      	beq.n	2fff08c0 <register_periph_iomem+0x8c>
2fff08a8:	d805      	bhi.n	2fff08b6 <register_periph_iomem+0x82>
2fff08aa:	f1b0 2f50 	cmp.w	r0, #1342197760	; 0x50005000
2fff08ae:	d007      	beq.n	2fff08c0 <register_periph_iomem+0x8c>
2fff08b0:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
2fff08b4:	e7df      	b.n	2fff0876 <register_periph_iomem+0x42>
2fff08b6:	4b23      	ldr	r3, [pc, #140]	; (2fff0944 <register_periph_iomem+0x110>)
2fff08b8:	e7dd      	b.n	2fff0876 <register_periph_iomem+0x42>
2fff08ba:	4b23      	ldr	r3, [pc, #140]	; (2fff0948 <register_periph_iomem+0x114>)
2fff08bc:	4298      	cmp	r0, r3
2fff08be:	d1d4      	bne.n	2fff086a <register_periph_iomem+0x36>
2fff08c0:	2902      	cmp	r1, #2
2fff08c2:	d1da      	bne.n	2fff087a <register_periph_iomem+0x46>
2fff08c4:	bd08      	pop	{r3, pc}
2fff08c6:	4b21      	ldr	r3, [pc, #132]	; (2fff094c <register_periph_iomem+0x118>)
2fff08c8:	4298      	cmp	r0, r3
2fff08ca:	d021      	beq.n	2fff0910 <register_periph_iomem+0xdc>
2fff08cc:	4b20      	ldr	r3, [pc, #128]	; (2fff0950 <register_periph_iomem+0x11c>)
2fff08ce:	e7d2      	b.n	2fff0876 <register_periph_iomem+0x42>
2fff08d0:	4b20      	ldr	r3, [pc, #128]	; (2fff0954 <register_periph_iomem+0x120>)
2fff08d2:	4298      	cmp	r0, r3
2fff08d4:	d01e      	beq.n	2fff0914 <register_periph_iomem+0xe0>
2fff08d6:	d809      	bhi.n	2fff08ec <register_periph_iomem+0xb8>
2fff08d8:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
2fff08dc:	4298      	cmp	r0, r3
2fff08de:	d01b      	beq.n	2fff0918 <register_periph_iomem+0xe4>
2fff08e0:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
2fff08e4:	4298      	cmp	r0, r3
2fff08e6:	d1c8      	bne.n	2fff087a <register_periph_iomem+0x46>
2fff08e8:	200a      	movs	r0, #10
2fff08ea:	e009      	b.n	2fff0900 <register_periph_iomem+0xcc>
2fff08ec:	4b1a      	ldr	r3, [pc, #104]	; (2fff0958 <register_periph_iomem+0x124>)
2fff08ee:	4298      	cmp	r0, r3
2fff08f0:	d014      	beq.n	2fff091c <register_periph_iomem+0xe8>
2fff08f2:	f503 43a0 	add.w	r3, r3, #20480	; 0x5000
2fff08f6:	4298      	cmp	r0, r3
2fff08f8:	d1bf      	bne.n	2fff087a <register_periph_iomem+0x46>
2fff08fa:	200b      	movs	r0, #11
2fff08fc:	e000      	b.n	2fff0900 <register_periph_iomem+0xcc>
2fff08fe:	2012      	movs	r0, #18
2fff0900:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0904:	f7ff bf3e 	b.w	2fff0784 <register_periph>
2fff0908:	2009      	movs	r0, #9
2fff090a:	e7f9      	b.n	2fff0900 <register_periph_iomem+0xcc>
2fff090c:	2000      	movs	r0, #0
2fff090e:	e7f7      	b.n	2fff0900 <register_periph_iomem+0xcc>
2fff0910:	200f      	movs	r0, #15
2fff0912:	e7f5      	b.n	2fff0900 <register_periph_iomem+0xcc>
2fff0914:	200c      	movs	r0, #12
2fff0916:	e7f3      	b.n	2fff0900 <register_periph_iomem+0xcc>
2fff0918:	2011      	movs	r0, #17
2fff091a:	e7f1      	b.n	2fff0900 <register_periph_iomem+0xcc>
2fff091c:	2010      	movs	r0, #16
2fff091e:	e7ef      	b.n	2fff0900 <register_periph_iomem+0xcc>
2fff0920:	54002000 	.word	0x54002000
2fff0924:	50004000 	.word	0x50004000
2fff0928:	40018000 	.word	0x40018000
2fff092c:	40011000 	.word	0x40011000
2fff0930:	50002000 	.word	0x50002000
2fff0934:	40019000 	.word	0x40019000
2fff0938:	44003000 	.word	0x44003000
2fff093c:	50003000 	.word	0x50003000
2fff0940:	50009000 	.word	0x50009000
2fff0944:	50008000 	.word	0x50008000
2fff0948:	5000c000 	.word	0x5000c000
2fff094c:	54003000 	.word	0x54003000
2fff0950:	5a002000 	.word	0x5a002000
2fff0954:	5c003000 	.word	0x5c003000
2fff0958:	5c004000 	.word	0x5c004000

2fff095c <check_decprot>:
2fff095c:	b570      	push	{r4, r5, r6, lr}
2fff095e:	460c      	mov	r4, r1
2fff0960:	4605      	mov	r5, r0
2fff0962:	f7fe fbf1 	bl	2ffef148 <etzpc_get_decprot>
2fff0966:	42a0      	cmp	r0, r4
2fff0968:	4606      	mov	r6, r0
2fff096a:	d00b      	beq.n	2fff0984 <check_decprot+0x28>
2fff096c:	b164      	cbz	r4, 2fff0988 <check_decprot+0x2c>
2fff096e:	2c03      	cmp	r4, #3
2fff0970:	d115      	bne.n	2fff099e <check_decprot+0x42>
2fff0972:	b938      	cbnz	r0, 2fff0984 <check_decprot+0x28>
2fff0974:	4628      	mov	r0, r5
2fff0976:	f7ff fecf 	bl	2fff0718 <decprot2str>
2fff097a:	4601      	mov	r1, r0
2fff097c:	462a      	mov	r2, r5
2fff097e:	480a      	ldr	r0, [pc, #40]	; (2fff09a8 <check_decprot+0x4c>)
2fff0980:	f001 ffac 	bl	2fff28dc <tf_log>
2fff0984:	2001      	movs	r0, #1
2fff0986:	e009      	b.n	2fff099c <check_decprot+0x40>
2fff0988:	4628      	mov	r0, r5
2fff098a:	f7ff fec5 	bl	2fff0718 <decprot2str>
2fff098e:	4601      	mov	r1, r0
2fff0990:	4633      	mov	r3, r6
2fff0992:	4806      	ldr	r0, [pc, #24]	; (2fff09ac <check_decprot+0x50>)
2fff0994:	462a      	mov	r2, r5
2fff0996:	f001 ffa1 	bl	2fff28dc <tf_log>
2fff099a:	4620      	mov	r0, r4
2fff099c:	bd70      	pop	{r4, r5, r6, pc}
2fff099e:	f002 f841 	bl	2fff2a24 <console_flush>
2fff09a2:	f008 e854 	blx	2fff8a4c <do_panic>
2fff09a6:	bf00      	nop
2fff09a8:	2fffa8df 	.word	0x2fffa8df
2fff09ac:	2fffa904 	.word	0x2fffa904

2fff09b0 <decprot_periph_attr>:
2fff09b0:	b510      	push	{r4, lr}
2fff09b2:	1e44      	subs	r4, r0, #1
2fff09b4:	2c07      	cmp	r4, #7
2fff09b6:	d808      	bhi.n	2fff09ca <decprot_periph_attr+0x1a>
2fff09b8:	f7ff feca 	bl	2fff0750 <get_gpioz_nbpin>
2fff09bc:	42a0      	cmp	r0, r4
2fff09be:	d80b      	bhi.n	2fff09d8 <decprot_periph_attr+0x28>
2fff09c0:	4807      	ldr	r0, [pc, #28]	; (2fff09e0 <decprot_periph_attr+0x30>)
2fff09c2:	f240 2155 	movw	r1, #597	; 0x255
2fff09c6:	f009 f87b 	bl	2fff9ac0 <__assert>
2fff09ca:	4b06      	ldr	r3, [pc, #24]	; (2fff09e4 <decprot_periph_attr+0x34>)
2fff09cc:	2201      	movs	r2, #1
2fff09ce:	701a      	strb	r2, [r3, #0]
2fff09d0:	4b05      	ldr	r3, [pc, #20]	; (2fff09e8 <decprot_periph_attr+0x38>)
2fff09d2:	5c1b      	ldrb	r3, [r3, r0]
2fff09d4:	4293      	cmp	r3, r2
2fff09d6:	d001      	beq.n	2fff09dc <decprot_periph_attr+0x2c>
2fff09d8:	2003      	movs	r0, #3
2fff09da:	bd10      	pop	{r4, pc}
2fff09dc:	2000      	movs	r0, #0
2fff09de:	e7fc      	b.n	2fff09da <decprot_periph_attr+0x2a>
2fff09e0:	2fffa887 	.word	0x2fffa887
2fff09e4:	2fffe78c 	.word	0x2fffe78c
2fff09e8:	2fffe78d 	.word	0x2fffe78d

2fff09ec <stm32mp_gpio_bank_is_non_secure.part.0>:
2fff09ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff09f0:	2400      	movs	r4, #0
2fff09f2:	4e0c      	ldr	r6, [pc, #48]	; (2fff0a24 <stm32mp_gpio_bank_is_non_secure.part.0+0x38>)
2fff09f4:	4625      	mov	r5, r4
2fff09f6:	f8df 8030 	ldr.w	r8, [pc, #48]	; 2fff0a28 <stm32mp_gpio_bank_is_non_secure.part.0+0x3c>
2fff09fa:	2701      	movs	r7, #1
2fff09fc:	f7ff fea8 	bl	2fff0750 <get_gpioz_nbpin>
2fff0a00:	4284      	cmp	r4, r0
2fff0a02:	d306      	bcc.n	2fff0a12 <stm32mp_gpio_bank_is_non_secure.part.0+0x26>
2fff0a04:	f7ff fea4 	bl	2fff0750 <get_gpioz_nbpin>
2fff0a08:	1a2b      	subs	r3, r5, r0
2fff0a0a:	4258      	negs	r0, r3
2fff0a0c:	4158      	adcs	r0, r3
2fff0a0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff0a12:	7037      	strb	r7, [r6, #0]
2fff0a14:	3401      	adds	r4, #1
2fff0a16:	f814 3008 	ldrb.w	r3, [r4, r8]
2fff0a1a:	2b01      	cmp	r3, #1
2fff0a1c:	bf18      	it	ne
2fff0a1e:	3501      	addne	r5, #1
2fff0a20:	e7ec      	b.n	2fff09fc <stm32mp_gpio_bank_is_non_secure.part.0+0x10>
2fff0a22:	bf00      	nop
2fff0a24:	2fffe78c 	.word	0x2fffe78c
2fff0a28:	2fffe78d 	.word	0x2fffe78d

2fff0a2c <stm32mp_register_secure_periph>:
2fff0a2c:	2101      	movs	r1, #1
2fff0a2e:	f7ff bea9 	b.w	2fff0784 <register_periph>

2fff0a32 <stm32mp_register_secure_periph_iomem>:
2fff0a32:	2101      	movs	r1, #1
2fff0a34:	f7ff befe 	b.w	2fff0834 <register_periph_iomem>

2fff0a38 <stm32mp_register_non_secure_periph_iomem>:
2fff0a38:	2102      	movs	r1, #2
2fff0a3a:	f7ff befb 	b.w	2fff0834 <register_periph_iomem>
	...

2fff0a40 <stm32mp_register_secure_gpio>:
2fff0a40:	2819      	cmp	r0, #25
2fff0a42:	b508      	push	{r3, lr}
2fff0a44:	460b      	mov	r3, r1
2fff0a46:	d105      	bne.n	2fff0a54 <stm32mp_register_secure_gpio+0x14>
2fff0a48:	2101      	movs	r1, #1
2fff0a4a:	1858      	adds	r0, r3, r1
2fff0a4c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0a50:	f7ff be98 	b.w	2fff0784 <register_periph>
2fff0a54:	4601      	mov	r1, r0
2fff0a56:	4803      	ldr	r0, [pc, #12]	; (2fff0a64 <stm32mp_register_secure_gpio+0x24>)
2fff0a58:	f001 ff40 	bl	2fff28dc <tf_log>
2fff0a5c:	f001 ffe2 	bl	2fff2a24 <console_flush>
2fff0a60:	f007 eff4 	blx	2fff8a4c <do_panic>
2fff0a64:	2fffa936 	.word	0x2fffa936

2fff0a68 <stm32mp_register_non_secure_gpio>:
2fff0a68:	2819      	cmp	r0, #25
2fff0a6a:	460b      	mov	r3, r1
2fff0a6c:	d103      	bne.n	2fff0a76 <stm32mp_register_non_secure_gpio+0xe>
2fff0a6e:	2102      	movs	r1, #2
2fff0a70:	1c58      	adds	r0, r3, #1
2fff0a72:	f7ff be87 	b.w	2fff0784 <register_periph>
2fff0a76:	4770      	bx	lr

2fff0a78 <stm32mp1_register_etzpc_decprot>:
2fff0a78:	b538      	push	{r3, r4, r5, lr}
2fff0a7a:	b131      	cbz	r1, 2fff0a8a <stm32mp1_register_etzpc_decprot+0x12>
2fff0a7c:	3901      	subs	r1, #1
2fff0a7e:	2902      	cmp	r1, #2
2fff0a80:	d921      	bls.n	2fff0ac6 <stm32mp1_register_etzpc_decprot+0x4e>
2fff0a82:	f001 ffcf 	bl	2fff2a24 <console_flush>
2fff0a86:	f007 efe2 	blx	2fff8a4c <do_panic>
2fff0a8a:	2801      	cmp	r0, #1
2fff0a8c:	d911      	bls.n	2fff0ab2 <stm32mp1_register_etzpc_decprot+0x3a>
2fff0a8e:	f1a0 030a 	sub.w	r3, r0, #10
2fff0a92:	2b01      	cmp	r3, #1
2fff0a94:	d90d      	bls.n	2fff0ab2 <stm32mp1_register_etzpc_decprot+0x3a>
2fff0a96:	2101      	movs	r1, #1
2fff0a98:	4a0f      	ldr	r2, [pc, #60]	; (2fff0ad8 <stm32mp1_register_etzpc_decprot+0x60>)
2fff0a9a:	2300      	movs	r3, #0
2fff0a9c:	4614      	mov	r4, r2
2fff0a9e:	6855      	ldr	r5, [r2, #4]
2fff0aa0:	42a8      	cmp	r0, r5
2fff0aa2:	d107      	bne.n	2fff0ab4 <stm32mp1_register_etzpc_decprot+0x3c>
2fff0aa4:	220c      	movs	r2, #12
2fff0aa6:	4353      	muls	r3, r2
2fff0aa8:	58e0      	ldr	r0, [r4, r3]
2fff0aaa:	1c43      	adds	r3, r0, #1
2fff0aac:	d107      	bne.n	2fff0abe <stm32mp1_register_etzpc_decprot+0x46>
2fff0aae:	2901      	cmp	r1, #1
2fff0ab0:	d0e7      	beq.n	2fff0a82 <stm32mp1_register_etzpc_decprot+0xa>
2fff0ab2:	bd38      	pop	{r3, r4, r5, pc}
2fff0ab4:	3301      	adds	r3, #1
2fff0ab6:	320c      	adds	r2, #12
2fff0ab8:	2b0c      	cmp	r3, #12
2fff0aba:	d1f0      	bne.n	2fff0a9e <stm32mp1_register_etzpc_decprot+0x26>
2fff0abc:	e7f7      	b.n	2fff0aae <stm32mp1_register_etzpc_decprot+0x36>
2fff0abe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff0ac2:	f7ff be5f 	b.w	2fff0784 <register_periph>
2fff0ac6:	2801      	cmp	r0, #1
2fff0ac8:	d9db      	bls.n	2fff0a82 <stm32mp1_register_etzpc_decprot+0xa>
2fff0aca:	f1a0 030a 	sub.w	r3, r0, #10
2fff0ace:	2b01      	cmp	r3, #1
2fff0ad0:	d9d7      	bls.n	2fff0a82 <stm32mp1_register_etzpc_decprot+0xa>
2fff0ad2:	2102      	movs	r1, #2
2fff0ad4:	e7e0      	b.n	2fff0a98 <stm32mp1_register_etzpc_decprot+0x20>
2fff0ad6:	bf00      	nop
2fff0ad8:	2fffaa48 	.word	0x2fffaa48

2fff0adc <stm32mp_gpio_bank_is_non_secure>:
2fff0adc:	4a04      	ldr	r2, [pc, #16]	; (2fff0af0 <stm32mp_gpio_bank_is_non_secure+0x14>)
2fff0ade:	2819      	cmp	r0, #25
2fff0ae0:	f04f 0301 	mov.w	r3, #1
2fff0ae4:	7013      	strb	r3, [r2, #0]
2fff0ae6:	d101      	bne.n	2fff0aec <stm32mp_gpio_bank_is_non_secure+0x10>
2fff0ae8:	f7ff bf80 	b.w	2fff09ec <stm32mp_gpio_bank_is_non_secure.part.0>
2fff0aec:	4618      	mov	r0, r3
2fff0aee:	4770      	bx	lr
2fff0af0:	2fffe78c 	.word	0x2fffe78c

2fff0af4 <stm32mp_nsec_can_access_clock>:
2fff0af4:	2805      	cmp	r0, #5
2fff0af6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff0afa:	d95c      	bls.n	2fff0bb6 <stm32mp_nsec_can_access_clock+0xc2>
2fff0afc:	f1a0 03b4 	sub.w	r3, r0, #180	; 0xb4
2fff0b00:	2b08      	cmp	r3, #8
2fff0b02:	d958      	bls.n	2fff0bb6 <stm32mp_nsec_can_access_clock+0xc2>
2fff0b04:	2887      	cmp	r0, #135	; 0x87
2fff0b06:	d044      	beq.n	2fff0b92 <stm32mp_nsec_can_access_clock+0x9e>
2fff0b08:	d826      	bhi.n	2fff0b58 <stm32mp_nsec_can_access_clock+0x64>
2fff0b0a:	2860      	cmp	r0, #96	; 0x60
2fff0b0c:	d049      	beq.n	2fff0ba2 <stm32mp_nsec_can_access_clock+0xae>
2fff0b0e:	d81d      	bhi.n	2fff0b4c <stm32mp_nsec_can_access_clock+0x58>
2fff0b10:	2845      	cmp	r0, #69	; 0x45
2fff0b12:	d050      	beq.n	2fff0bb6 <stm32mp_nsec_can_access_clock+0xc2>
2fff0b14:	d806      	bhi.n	2fff0b24 <stm32mp_nsec_can_access_clock+0x30>
2fff0b16:	2841      	cmp	r0, #65	; 0x41
2fff0b18:	d04d      	beq.n	2fff0bb6 <stm32mp_nsec_can_access_clock+0xc2>
2fff0b1a:	2844      	cmp	r0, #68	; 0x44
2fff0b1c:	d043      	beq.n	2fff0ba6 <stm32mp_nsec_can_access_clock+0xb2>
2fff0b1e:	2000      	movs	r0, #0
2fff0b20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff0b24:	285f      	cmp	r0, #95	; 0x5f
2fff0b26:	d1fa      	bne.n	2fff0b1e <stm32mp_nsec_can_access_clock+0x2a>
2fff0b28:	4e24      	ldr	r6, [pc, #144]	; (2fff0bbc <stm32mp_nsec_can_access_clock+0xc8>)
2fff0b2a:	2201      	movs	r2, #1
2fff0b2c:	f8df 8090 	ldr.w	r8, [pc, #144]	; 2fff0bc0 <stm32mp_nsec_can_access_clock+0xcc>
2fff0b30:	2500      	movs	r5, #0
2fff0b32:	7032      	strb	r2, [r6, #0]
2fff0b34:	462c      	mov	r4, r5
2fff0b36:	4617      	mov	r7, r2
2fff0b38:	f7ff fe0a 	bl	2fff0750 <get_gpioz_nbpin>
2fff0b3c:	4285      	cmp	r5, r0
2fff0b3e:	d320      	bcc.n	2fff0b82 <stm32mp_nsec_can_access_clock+0x8e>
2fff0b40:	f7ff fe06 	bl	2fff0750 <get_gpioz_nbpin>
2fff0b44:	1a20      	subs	r0, r4, r0
2fff0b46:	bf18      	it	ne
2fff0b48:	2001      	movne	r0, #1
2fff0b4a:	e7e9      	b.n	2fff0b20 <stm32mp_nsec_can_access_clock+0x2c>
2fff0b4c:	2861      	cmp	r0, #97	; 0x61
2fff0b4e:	d02c      	beq.n	2fff0baa <stm32mp_nsec_can_access_clock+0xb6>
2fff0b50:	287c      	cmp	r0, #124	; 0x7c
2fff0b52:	d1e4      	bne.n	2fff0b1e <stm32mp_nsec_can_access_clock+0x2a>
2fff0b54:	230f      	movs	r3, #15
2fff0b56:	e01d      	b.n	2fff0b94 <stm32mp_nsec_can_access_clock+0xa0>
2fff0b58:	2894      	cmp	r0, #148	; 0x94
2fff0b5a:	d028      	beq.n	2fff0bae <stm32mp_nsec_can_access_clock+0xba>
2fff0b5c:	d805      	bhi.n	2fff0b6a <stm32mp_nsec_can_access_clock+0x76>
2fff0b5e:	288c      	cmp	r0, #140	; 0x8c
2fff0b60:	d027      	beq.n	2fff0bb2 <stm32mp_nsec_can_access_clock+0xbe>
2fff0b62:	288e      	cmp	r0, #142	; 0x8e
2fff0b64:	d1db      	bne.n	2fff0b1e <stm32mp_nsec_can_access_clock+0x2a>
2fff0b66:	230b      	movs	r3, #11
2fff0b68:	e014      	b.n	2fff0b94 <stm32mp_nsec_can_access_clock+0xa0>
2fff0b6a:	28c3      	cmp	r0, #195	; 0xc3
2fff0b6c:	d805      	bhi.n	2fff0b7a <stm32mp_nsec_can_access_clock+0x86>
2fff0b6e:	28c1      	cmp	r0, #193	; 0xc1
2fff0b70:	d821      	bhi.n	2fff0bb6 <stm32mp_nsec_can_access_clock+0xc2>
2fff0b72:	28c0      	cmp	r0, #192	; 0xc0
2fff0b74:	d1d3      	bne.n	2fff0b1e <stm32mp_nsec_can_access_clock+0x2a>
2fff0b76:	2310      	movs	r3, #16
2fff0b78:	e00c      	b.n	2fff0b94 <stm32mp_nsec_can_access_clock+0xa0>
2fff0b7a:	28c4      	cmp	r0, #196	; 0xc4
2fff0b7c:	d1cf      	bne.n	2fff0b1e <stm32mp_nsec_can_access_clock+0x2a>
2fff0b7e:	230d      	movs	r3, #13
2fff0b80:	e008      	b.n	2fff0b94 <stm32mp_nsec_can_access_clock+0xa0>
2fff0b82:	7037      	strb	r7, [r6, #0]
2fff0b84:	3501      	adds	r5, #1
2fff0b86:	f815 3008 	ldrb.w	r3, [r5, r8]
2fff0b8a:	2b01      	cmp	r3, #1
2fff0b8c:	bf08      	it	eq
2fff0b8e:	3401      	addeq	r4, #1
2fff0b90:	e7d2      	b.n	2fff0b38 <stm32mp_nsec_can_access_clock+0x44>
2fff0b92:	2311      	movs	r3, #17
2fff0b94:	4a09      	ldr	r2, [pc, #36]	; (2fff0bbc <stm32mp_nsec_can_access_clock+0xc8>)
2fff0b96:	2101      	movs	r1, #1
2fff0b98:	7011      	strb	r1, [r2, #0]
2fff0b9a:	4a09      	ldr	r2, [pc, #36]	; (2fff0bc0 <stm32mp_nsec_can_access_clock+0xcc>)
2fff0b9c:	5cd0      	ldrb	r0, [r2, r3]
2fff0b9e:	1a40      	subs	r0, r0, r1
2fff0ba0:	e7d1      	b.n	2fff0b46 <stm32mp_nsec_can_access_clock+0x52>
2fff0ba2:	2300      	movs	r3, #0
2fff0ba4:	e7f6      	b.n	2fff0b94 <stm32mp_nsec_can_access_clock+0xa0>
2fff0ba6:	230c      	movs	r3, #12
2fff0ba8:	e7f4      	b.n	2fff0b94 <stm32mp_nsec_can_access_clock+0xa0>
2fff0baa:	2309      	movs	r3, #9
2fff0bac:	e7f2      	b.n	2fff0b94 <stm32mp_nsec_can_access_clock+0xa0>
2fff0bae:	2312      	movs	r3, #18
2fff0bb0:	e7f0      	b.n	2fff0b94 <stm32mp_nsec_can_access_clock+0xa0>
2fff0bb2:	230a      	movs	r3, #10
2fff0bb4:	e7ee      	b.n	2fff0b94 <stm32mp_nsec_can_access_clock+0xa0>
2fff0bb6:	2001      	movs	r0, #1
2fff0bb8:	e7b2      	b.n	2fff0b20 <stm32mp_nsec_can_access_clock+0x2c>
2fff0bba:	bf00      	nop
2fff0bbc:	2fffe78c 	.word	0x2fffe78c
2fff0bc0:	2fffe78d 	.word	0x2fffe78d

2fff0bc4 <stm32mp_nsec_can_access_reset>:
2fff0bc4:	f640 4386 	movw	r3, #3206	; 0xc86
2fff0bc8:	4298      	cmp	r0, r3
2fff0bca:	d839      	bhi.n	2fff0c40 <stm32mp_nsec_can_access_reset+0x7c>
2fff0bcc:	f5b0 6f48 	cmp.w	r0, #3200	; 0xc80
2fff0bd0:	d205      	bcs.n	2fff0bde <stm32mp_nsec_can_access_reset+0x1a>
2fff0bd2:	f5a0 6044 	sub.w	r0, r0, #3136	; 0xc40
2fff0bd6:	2804      	cmp	r0, #4
2fff0bd8:	d920      	bls.n	2fff0c1c <stm32mp_nsec_can_access_reset+0x58>
2fff0bda:	2000      	movs	r0, #0
2fff0bdc:	4770      	bx	lr
2fff0bde:	f5a0 6048 	sub.w	r0, r0, #3200	; 0xc80
2fff0be2:	2806      	cmp	r0, #6
2fff0be4:	d8f9      	bhi.n	2fff0bda <stm32mp_nsec_can_access_reset+0x16>
2fff0be6:	a301      	add	r3, pc, #4	; (adr r3, 2fff0bec <stm32mp_nsec_can_access_reset+0x28>)
2fff0be8:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
2fff0bec:	2fff0c53 	.word	0x2fff0c53
2fff0bf0:	2fff0bdb 	.word	0x2fff0bdb
2fff0bf4:	2fff0bdb 	.word	0x2fff0bdb
2fff0bf8:	2fff0bdb 	.word	0x2fff0bdb
2fff0bfc:	2fff0c09 	.word	0x2fff0c09
2fff0c00:	2fff0c69 	.word	0x2fff0c69
2fff0c04:	2fff0c65 	.word	0x2fff0c65
2fff0c08:	2300      	movs	r3, #0
2fff0c0a:	4a1a      	ldr	r2, [pc, #104]	; (2fff0c74 <stm32mp_nsec_can_access_reset+0xb0>)
2fff0c0c:	2101      	movs	r1, #1
2fff0c0e:	7011      	strb	r1, [r2, #0]
2fff0c10:	4a19      	ldr	r2, [pc, #100]	; (2fff0c78 <stm32mp_nsec_can_access_reset+0xb4>)
2fff0c12:	5cd0      	ldrb	r0, [r2, r3]
2fff0c14:	1a40      	subs	r0, r0, r1
2fff0c16:	bf18      	it	ne
2fff0c18:	2001      	movne	r0, #1
2fff0c1a:	4770      	bx	lr
2fff0c1c:	2804      	cmp	r0, #4
2fff0c1e:	d8dc      	bhi.n	2fff0bda <stm32mp_nsec_can_access_reset+0x16>
2fff0c20:	a301      	add	r3, pc, #4	; (adr r3, 2fff0c28 <stm32mp_nsec_can_access_reset+0x64>)
2fff0c22:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
2fff0c26:	bf00      	nop
2fff0c28:	2fff0c6d 	.word	0x2fff0c6d
2fff0c2c:	2fff0bdb 	.word	0x2fff0bdb
2fff0c30:	2fff0c3d 	.word	0x2fff0c3d
2fff0c34:	2fff0c5d 	.word	0x2fff0c5d
2fff0c38:	2fff0c61 	.word	0x2fff0c61
2fff0c3c:	230a      	movs	r3, #10
2fff0c3e:	e7e4      	b.n	2fff0c0a <stm32mp_nsec_can_access_reset+0x46>
2fff0c40:	f5b0 6f50 	cmp.w	r0, #3328	; 0xd00
2fff0c44:	d014      	beq.n	2fff0c70 <stm32mp_nsec_can_access_reset+0xac>
2fff0c46:	f242 0321 	movw	r3, #8225	; 0x2021
2fff0c4a:	4298      	cmp	r0, r3
2fff0c4c:	d1c5      	bne.n	2fff0bda <stm32mp_nsec_can_access_reset+0x16>
2fff0c4e:	230d      	movs	r3, #13
2fff0c50:	e7db      	b.n	2fff0c0a <stm32mp_nsec_can_access_reset+0x46>
2fff0c52:	4b08      	ldr	r3, [pc, #32]	; (2fff0c74 <stm32mp_nsec_can_access_reset+0xb0>)
2fff0c54:	2201      	movs	r2, #1
2fff0c56:	701a      	strb	r2, [r3, #0]
2fff0c58:	f7ff bec8 	b.w	2fff09ec <stm32mp_gpio_bank_is_non_secure.part.0>
2fff0c5c:	230b      	movs	r3, #11
2fff0c5e:	e7d4      	b.n	2fff0c0a <stm32mp_nsec_can_access_reset+0x46>
2fff0c60:	2312      	movs	r3, #18
2fff0c62:	e7d2      	b.n	2fff0c0a <stm32mp_nsec_can_access_reset+0x46>
2fff0c64:	230f      	movs	r3, #15
2fff0c66:	e7d0      	b.n	2fff0c0a <stm32mp_nsec_can_access_reset+0x46>
2fff0c68:	2309      	movs	r3, #9
2fff0c6a:	e7ce      	b.n	2fff0c0a <stm32mp_nsec_can_access_reset+0x46>
2fff0c6c:	2311      	movs	r3, #17
2fff0c6e:	e7cc      	b.n	2fff0c0a <stm32mp_nsec_can_access_reset+0x46>
2fff0c70:	230e      	movs	r3, #14
2fff0c72:	e7ca      	b.n	2fff0c0a <stm32mp_nsec_can_access_reset+0x46>
2fff0c74:	2fffe78c 	.word	0x2fffe78c
2fff0c78:	2fffe78d 	.word	0x2fffe78d

2fff0c7c <stm32mp_lock_periph_registering>:
2fff0c7c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff0c80:	2400      	movs	r4, #0
2fff0c82:	f8df 91a8 	ldr.w	r9, [pc, #424]	; 2fff0e2c <stm32mp_lock_periph_registering+0x1b0>
2fff0c86:	2301      	movs	r3, #1
2fff0c88:	4f61      	ldr	r7, [pc, #388]	; (2fff0e10 <stm32mp_lock_periph_registering+0x194>)
2fff0c8a:	4e62      	ldr	r6, [pc, #392]	; (2fff0e14 <stm32mp_lock_periph_registering+0x198>)
2fff0c8c:	464d      	mov	r5, r9
2fff0c8e:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 2fff0e30 <stm32mp_lock_periph_registering+0x1b4>
2fff0c92:	46cb      	mov	fp, r9
2fff0c94:	f8df a19c 	ldr.w	sl, [pc, #412]	; 2fff0e34 <stm32mp_lock_periph_registering+0x1b8>
2fff0c98:	703b      	strb	r3, [r7, #0]
2fff0c9a:	f815 2b01 	ldrb.w	r2, [r5], #1
2fff0c9e:	2a02      	cmp	r2, #2
2fff0ca0:	d904      	bls.n	2fff0cac <stm32mp_lock_periph_registering+0x30>
2fff0ca2:	f44f 7135 	mov.w	r1, #724	; 0x2d4
2fff0ca6:	485c      	ldr	r0, [pc, #368]	; (2fff0e18 <stm32mp_lock_periph_registering+0x19c>)
2fff0ca8:	f008 ff0a 	bl	2fff9ac0 <__assert>
2fff0cac:	2a01      	cmp	r2, #1
2fff0cae:	d106      	bne.n	2fff0cbe <stm32mp_lock_periph_registering+0x42>
2fff0cb0:	f856 1024 	ldr.w	r1, [r6, r4, lsl #2]
2fff0cb4:	4643      	mov	r3, r8
2fff0cb6:	4622      	mov	r2, r4
2fff0cb8:	4650      	mov	r0, sl
2fff0cba:	f001 fe0f 	bl	2fff28dc <tf_log>
2fff0cbe:	3401      	adds	r4, #1
2fff0cc0:	2c14      	cmp	r4, #20
2fff0cc2:	d1ea      	bne.n	2fff0c9a <stm32mp_lock_periph_registering+0x1e>
2fff0cc4:	f8df a170 	ldr.w	sl, [pc, #368]	; 2fff0e38 <stm32mp_lock_periph_registering+0x1bc>
2fff0cc8:	f004 ffb2 	bl	2fff5c30 <stm32mp1_dump_clocks_state>
2fff0ccc:	2400      	movs	r4, #0
2fff0cce:	f004 fae0 	bl	2fff5292 <stm32mp1_rcc_is_mckprot>
2fff0cd2:	4680      	mov	r8, r0
2fff0cd4:	f004 fad6 	bl	2fff5284 <stm32mp1_rcc_is_secure>
2fff0cd8:	4606      	mov	r6, r0
2fff0cda:	4625      	mov	r5, r4
2fff0cdc:	484f      	ldr	r0, [pc, #316]	; (2fff0e1c <stm32mp_lock_periph_registering+0x1a0>)
2fff0cde:	f819 3b01 	ldrb.w	r3, [r9], #1
2fff0ce2:	2b01      	cmp	r3, #1
2fff0ce4:	d11d      	bne.n	2fff0d22 <stm32mp_lock_periph_registering+0xa6>
2fff0ce6:	2d0d      	cmp	r5, #13
2fff0ce8:	d001      	beq.n	2fff0cee <stm32mp_lock_periph_registering+0x72>
2fff0cea:	2d13      	cmp	r5, #19
2fff0cec:	d109      	bne.n	2fff0d02 <stm32mp_lock_periph_registering+0x86>
2fff0cee:	f1b8 0f00 	cmp.w	r8, #0
2fff0cf2:	f040 8088 	bne.w	2fff0e06 <stm32mp_lock_periph_registering+0x18a>
2fff0cf6:	494a      	ldr	r1, [pc, #296]	; (2fff0e20 <stm32mp_lock_periph_registering+0x1a4>)
2fff0cf8:	4a4a      	ldr	r2, [pc, #296]	; (2fff0e24 <stm32mp_lock_periph_registering+0x1a8>)
2fff0cfa:	2e00      	cmp	r6, #0
2fff0cfc:	bf08      	it	eq
2fff0cfe:	4651      	moveq	r1, sl
2fff0d00:	e007      	b.n	2fff0d12 <stm32mp_lock_periph_registering+0x96>
2fff0d02:	b976      	cbnz	r6, 2fff0d22 <stm32mp_lock_periph_registering+0xa6>
2fff0d04:	4a47      	ldr	r2, [pc, #284]	; (2fff0e24 <stm32mp_lock_periph_registering+0x1a8>)
2fff0d06:	4651      	mov	r1, sl
2fff0d08:	4b47      	ldr	r3, [pc, #284]	; (2fff0e28 <stm32mp_lock_periph_registering+0x1ac>)
2fff0d0a:	f1b8 0f00 	cmp.w	r8, #0
2fff0d0e:	bf18      	it	ne
2fff0d10:	461a      	movne	r2, r3
2fff0d12:	4b40      	ldr	r3, [pc, #256]	; (2fff0e14 <stm32mp_lock_periph_registering+0x198>)
2fff0d14:	3401      	adds	r4, #1
2fff0d16:	9500      	str	r5, [sp, #0]
2fff0d18:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
2fff0d1c:	f001 fdde 	bl	2fff28dc <tf_log>
2fff0d20:	483e      	ldr	r0, [pc, #248]	; (2fff0e1c <stm32mp_lock_periph_registering+0x1a0>)
2fff0d22:	3501      	adds	r5, #1
2fff0d24:	2d14      	cmp	r5, #20
2fff0d26:	d1da      	bne.n	2fff0cde <stm32mp_lock_periph_registering+0x62>
2fff0d28:	b11c      	cbz	r4, 2fff0d32 <stm32mp_lock_periph_registering+0xb6>
2fff0d2a:	f001 fe7b 	bl	2fff2a24 <console_flush>
2fff0d2e:	f007 ee8e 	blx	2fff8a4c <do_panic>
2fff0d32:	783b      	ldrb	r3, [r7, #0]
2fff0d34:	b913      	cbnz	r3, 2fff0d3c <stm32mp_lock_periph_registering+0xc0>
2fff0d36:	f240 2182 	movw	r1, #642	; 0x282
2fff0d3a:	e7b4      	b.n	2fff0ca6 <stm32mp_lock_periph_registering+0x2a>
2fff0d3c:	4621      	mov	r1, r4
2fff0d3e:	4620      	mov	r0, r4
2fff0d40:	f7ff fe0c 	bl	2fff095c <check_decprot>
2fff0d44:	4605      	mov	r5, r0
2fff0d46:	4621      	mov	r1, r4
2fff0d48:	2001      	movs	r0, #1
2fff0d4a:	f7ff fe07 	bl	2fff095c <check_decprot>
2fff0d4e:	4005      	ands	r5, r0
2fff0d50:	2012      	movs	r0, #18
2fff0d52:	b2ed      	uxtb	r5, r5
2fff0d54:	f7ff fe2c 	bl	2fff09b0 <decprot_periph_attr>
2fff0d58:	4601      	mov	r1, r0
2fff0d5a:	2003      	movs	r0, #3
2fff0d5c:	f7ff fdfe 	bl	2fff095c <check_decprot>
2fff0d60:	4005      	ands	r5, r0
2fff0d62:	2011      	movs	r0, #17
2fff0d64:	f7ff fe24 	bl	2fff09b0 <decprot_periph_attr>
2fff0d68:	4601      	mov	r1, r0
2fff0d6a:	2004      	movs	r0, #4
2fff0d6c:	f7ff fdf6 	bl	2fff095c <check_decprot>
2fff0d70:	4005      	ands	r5, r0
2fff0d72:	200a      	movs	r0, #10
2fff0d74:	f7ff fe1c 	bl	2fff09b0 <decprot_periph_attr>
2fff0d78:	4601      	mov	r1, r0
2fff0d7a:	2005      	movs	r0, #5
2fff0d7c:	f7ff fdee 	bl	2fff095c <check_decprot>
2fff0d80:	4005      	ands	r5, r0
2fff0d82:	200f      	movs	r0, #15
2fff0d84:	f7ff fe14 	bl	2fff09b0 <decprot_periph_attr>
2fff0d88:	4601      	mov	r1, r0
2fff0d8a:	2007      	movs	r0, #7
2fff0d8c:	f7ff fde6 	bl	2fff095c <check_decprot>
2fff0d90:	4005      	ands	r5, r0
2fff0d92:	2009      	movs	r0, #9
2fff0d94:	f7ff fe0c 	bl	2fff09b0 <decprot_periph_attr>
2fff0d98:	4601      	mov	r1, r0
2fff0d9a:	2008      	movs	r0, #8
2fff0d9c:	f7ff fdde 	bl	2fff095c <check_decprot>
2fff0da0:	4005      	ands	r5, r0
2fff0da2:	4620      	mov	r0, r4
2fff0da4:	f7ff fe04 	bl	2fff09b0 <decprot_periph_attr>
2fff0da8:	4601      	mov	r1, r0
2fff0daa:	2009      	movs	r0, #9
2fff0dac:	f7ff fdd6 	bl	2fff095c <check_decprot>
2fff0db0:	4005      	ands	r5, r0
2fff0db2:	4621      	mov	r1, r4
2fff0db4:	200a      	movs	r0, #10
2fff0db6:	f7ff fdd1 	bl	2fff095c <check_decprot>
2fff0dba:	4005      	ands	r5, r0
2fff0dbc:	4621      	mov	r1, r4
2fff0dbe:	200b      	movs	r0, #11
2fff0dc0:	f7ff fdcc 	bl	2fff095c <check_decprot>
2fff0dc4:	4005      	ands	r5, r0
2fff0dc6:	200b      	movs	r0, #11
2fff0dc8:	f7ff fdf2 	bl	2fff09b0 <decprot_periph_attr>
2fff0dcc:	4601      	mov	r1, r0
2fff0dce:	200c      	movs	r0, #12
2fff0dd0:	f7ff fdc4 	bl	2fff095c <check_decprot>
2fff0dd4:	2d00      	cmp	r5, #0
2fff0dd6:	d0a8      	beq.n	2fff0d2a <stm32mp_lock_periph_registering+0xae>
2fff0dd8:	2800      	cmp	r0, #0
2fff0dda:	d0a6      	beq.n	2fff0d2a <stm32mp_lock_periph_registering+0xae>
2fff0ddc:	2601      	movs	r6, #1
2fff0dde:	f7ff fcb7 	bl	2fff0750 <get_gpioz_nbpin>
2fff0de2:	4284      	cmp	r4, r0
2fff0de4:	d302      	bcc.n	2fff0dec <stm32mp_lock_periph_registering+0x170>
2fff0de6:	b003      	add	sp, #12
2fff0de8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff0dec:	703e      	strb	r6, [r7, #0]
2fff0dee:	1c65      	adds	r5, r4, #1
2fff0df0:	4621      	mov	r1, r4
2fff0df2:	2019      	movs	r0, #25
2fff0df4:	f81b 2005 	ldrb.w	r2, [fp, r5]
2fff0df8:	462c      	mov	r4, r5
2fff0dfa:	1e53      	subs	r3, r2, #1
2fff0dfc:	425a      	negs	r2, r3
2fff0dfe:	415a      	adcs	r2, r3
2fff0e00:	f005 fc5a 	bl	2fff66b8 <set_gpio_secure_cfg>
2fff0e04:	e7eb      	b.n	2fff0dde <stm32mp_lock_periph_registering+0x162>
2fff0e06:	2e00      	cmp	r6, #0
2fff0e08:	d18b      	bne.n	2fff0d22 <stm32mp_lock_periph_registering+0xa6>
2fff0e0a:	4a07      	ldr	r2, [pc, #28]	; (2fff0e28 <stm32mp_lock_periph_registering+0x1ac>)
2fff0e0c:	4651      	mov	r1, sl
2fff0e0e:	e780      	b.n	2fff0d12 <stm32mp_lock_periph_registering+0x96>
2fff0e10:	2fffe78c 	.word	0x2fffe78c
2fff0e14:	2fffaad8 	.word	0x2fffaad8
2fff0e18:	2fffa887 	.word	0x2fffa887
2fff0e1c:	2fffa987 	.word	0x2fffa987
2fff0e20:	2fffa95b 	.word	0x2fffa95b
2fff0e24:	2fffa962 	.word	0x2fffa962
2fff0e28:	2fffa966 	.word	0x2fffa966
2fff0e2c:	2fffe78d 	.word	0x2fffe78d
2fff0e30:	2fffa96a 	.word	0x2fffa96a
2fff0e34:	2fffa971 	.word	0x2fffa971
2fff0e38:	2fffa957 	.word	0x2fffa957

2fff0e3c <plat_get_power_domain_tree_desc>:
2fff0e3c:	4800      	ldr	r0, [pc, #0]	; (2fff0e40 <plat_get_power_domain_tree_desc+0x4>)
2fff0e3e:	4770      	bx	lr
2fff0e40:	2fffab28 	.word	0x2fffab28

2fff0e44 <plat_core_pos_by_mpidr>:
2fff0e44:	f410 0f7f 	tst.w	r0, #16711680	; 0xff0000
2fff0e48:	d10a      	bne.n	2fff0e60 <plat_core_pos_by_mpidr+0x1c>
2fff0e4a:	f3c0 2207 	ubfx	r2, r0, #8, #8
2fff0e4e:	b2c3      	uxtb	r3, r0
2fff0e50:	f000 00fe 	and.w	r0, r0, #254	; 0xfe
2fff0e54:	4302      	orrs	r2, r0
2fff0e56:	bf0c      	ite	eq
2fff0e58:	4618      	moveq	r0, r3
2fff0e5a:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
2fff0e5e:	4770      	bx	lr
2fff0e60:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff0e64:	4770      	bx	lr

2fff0e66 <gicd_read_igroupr>:
2fff0e66:	0949      	lsrs	r1, r1, #5
2fff0e68:	3080      	adds	r0, #128	; 0x80
2fff0e6a:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
2fff0e6e:	4770      	bx	lr

2fff0e70 <gicd_read_icfgr>:
2fff0e70:	0909      	lsrs	r1, r1, #4
2fff0e72:	f500 6040 	add.w	r0, r0, #3072	; 0xc00
2fff0e76:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
2fff0e7a:	4770      	bx	lr

2fff0e7c <gicd_write_igroupr>:
2fff0e7c:	0949      	lsrs	r1, r1, #5
2fff0e7e:	3080      	adds	r0, #128	; 0x80
2fff0e80:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2fff0e84:	4770      	bx	lr

2fff0e86 <gicd_write_isenabler>:
2fff0e86:	0949      	lsrs	r1, r1, #5
2fff0e88:	f500 7080 	add.w	r0, r0, #256	; 0x100
2fff0e8c:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2fff0e90:	4770      	bx	lr

2fff0e92 <gicd_write_icenabler>:
2fff0e92:	0949      	lsrs	r1, r1, #5
2fff0e94:	f500 70c0 	add.w	r0, r0, #384	; 0x180
2fff0e98:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2fff0e9c:	4770      	bx	lr

2fff0e9e <gicd_write_ipriorityr>:
2fff0e9e:	f021 0103 	bic.w	r1, r1, #3
2fff0ea2:	f500 6080 	add.w	r0, r0, #1024	; 0x400
2fff0ea6:	500a      	str	r2, [r1, r0]
2fff0ea8:	4770      	bx	lr

2fff0eaa <gicd_write_icfgr>:
2fff0eaa:	0909      	lsrs	r1, r1, #4
2fff0eac:	f500 6040 	add.w	r0, r0, #3072	; 0xc00
2fff0eb0:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2fff0eb4:	4770      	bx	lr

2fff0eb6 <gicd_set_igroupr>:
2fff0eb6:	b510      	push	{r4, lr}
2fff0eb8:	460b      	mov	r3, r1
2fff0eba:	4604      	mov	r4, r0
2fff0ebc:	f7ff ffd3 	bl	2fff0e66 <gicd_read_igroupr>
2fff0ec0:	f003 021f 	and.w	r2, r3, #31
2fff0ec4:	2101      	movs	r1, #1
2fff0ec6:	fa01 f202 	lsl.w	r2, r1, r2
2fff0eca:	4619      	mov	r1, r3
2fff0ecc:	4302      	orrs	r2, r0
2fff0ece:	4620      	mov	r0, r4
2fff0ed0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff0ed4:	f7ff bfd2 	b.w	2fff0e7c <gicd_write_igroupr>

2fff0ed8 <gicd_clr_igroupr>:
2fff0ed8:	b510      	push	{r4, lr}
2fff0eda:	460b      	mov	r3, r1
2fff0edc:	4604      	mov	r4, r0
2fff0ede:	f7ff ffc2 	bl	2fff0e66 <gicd_read_igroupr>
2fff0ee2:	f003 021f 	and.w	r2, r3, #31
2fff0ee6:	2101      	movs	r1, #1
2fff0ee8:	fa01 f202 	lsl.w	r2, r1, r2
2fff0eec:	4619      	mov	r1, r3
2fff0eee:	ea20 0202 	bic.w	r2, r0, r2
2fff0ef2:	4620      	mov	r0, r4
2fff0ef4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff0ef8:	f7ff bfc0 	b.w	2fff0e7c <gicd_write_igroupr>

2fff0efc <gicd_set_isenabler>:
2fff0efc:	f001 031f 	and.w	r3, r1, #31
2fff0f00:	2201      	movs	r2, #1
2fff0f02:	409a      	lsls	r2, r3
2fff0f04:	f7ff bfbf 	b.w	2fff0e86 <gicd_write_isenabler>

2fff0f08 <gicd_set_icenabler>:
2fff0f08:	f001 031f 	and.w	r3, r1, #31
2fff0f0c:	2201      	movs	r2, #1
2fff0f0e:	409a      	lsls	r2, r3
2fff0f10:	f7ff bfbf 	b.w	2fff0e92 <gicd_write_icenabler>

2fff0f14 <gicd_set_ipriorityr>:
2fff0f14:	f501 6180 	add.w	r1, r1, #1024	; 0x400
2fff0f18:	b2d2      	uxtb	r2, r2
2fff0f1a:	540a      	strb	r2, [r1, r0]
2fff0f1c:	4770      	bx	lr

2fff0f1e <gicd_set_icfgr>:
2fff0f1e:	b538      	push	{r3, r4, r5, lr}
2fff0f20:	460b      	mov	r3, r1
2fff0f22:	004c      	lsls	r4, r1, #1
2fff0f24:	4605      	mov	r5, r0
2fff0f26:	f004 041e 	and.w	r4, r4, #30
2fff0f2a:	f7ff ffa1 	bl	2fff0e70 <gicd_read_icfgr>
2fff0f2e:	2103      	movs	r1, #3
2fff0f30:	f002 0203 	and.w	r2, r2, #3
2fff0f34:	40a1      	lsls	r1, r4
2fff0f36:	ea20 0001 	bic.w	r0, r0, r1
2fff0f3a:	4619      	mov	r1, r3
2fff0f3c:	40a2      	lsls	r2, r4
2fff0f3e:	4302      	orrs	r2, r0
2fff0f40:	4628      	mov	r0, r5
2fff0f42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff0f46:	f7ff bfb0 	b.w	2fff0eaa <gicd_write_icfgr>

2fff0f4a <gicv2_get_cpuif_id>:
2fff0f4a:	f8d0 0800 	ldr.w	r0, [r0, #2048]	; 0x800
2fff0f4e:	b2c0      	uxtb	r0, r0
2fff0f50:	4770      	bx	lr

2fff0f52 <gicv2_spis_configure_defaults>:
2fff0f52:	b570      	push	{r4, r5, r6, lr}
2fff0f54:	4605      	mov	r5, r0
2fff0f56:	6844      	ldr	r4, [r0, #4]
2fff0f58:	2620      	movs	r6, #32
2fff0f5a:	f004 041f 	and.w	r4, r4, #31
2fff0f5e:	3401      	adds	r4, #1
2fff0f60:	0164      	lsls	r4, r4, #5
2fff0f62:	42a6      	cmp	r6, r4
2fff0f64:	d306      	bcc.n	2fff0f74 <gicv2_spis_configure_defaults+0x22>
2fff0f66:	2620      	movs	r6, #32
2fff0f68:	42a6      	cmp	r6, r4
2fff0f6a:	d30b      	bcc.n	2fff0f84 <gicv2_spis_configure_defaults+0x32>
2fff0f6c:	2620      	movs	r6, #32
2fff0f6e:	42a6      	cmp	r6, r4
2fff0f70:	d310      	bcc.n	2fff0f94 <gicv2_spis_configure_defaults+0x42>
2fff0f72:	bd70      	pop	{r4, r5, r6, pc}
2fff0f74:	4631      	mov	r1, r6
2fff0f76:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
2fff0f7a:	4628      	mov	r0, r5
2fff0f7c:	3620      	adds	r6, #32
2fff0f7e:	f7ff ff7d 	bl	2fff0e7c <gicd_write_igroupr>
2fff0f82:	e7ee      	b.n	2fff0f62 <gicv2_spis_configure_defaults+0x10>
2fff0f84:	4631      	mov	r1, r6
2fff0f86:	f04f 3280 	mov.w	r2, #2155905152	; 0x80808080
2fff0f8a:	4628      	mov	r0, r5
2fff0f8c:	3604      	adds	r6, #4
2fff0f8e:	f7ff ff86 	bl	2fff0e9e <gicd_write_ipriorityr>
2fff0f92:	e7e9      	b.n	2fff0f68 <gicv2_spis_configure_defaults+0x16>
2fff0f94:	4631      	mov	r1, r6
2fff0f96:	2200      	movs	r2, #0
2fff0f98:	4628      	mov	r0, r5
2fff0f9a:	3610      	adds	r6, #16
2fff0f9c:	f7ff ff85 	bl	2fff0eaa <gicd_write_icfgr>
2fff0fa0:	e7e5      	b.n	2fff0f6e <gicv2_spis_configure_defaults+0x1c>
	...

2fff0fa4 <gicv2_secure_spis_configure_props>:
2fff0fa4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff0fa8:	4605      	mov	r5, r0
2fff0faa:	460c      	mov	r4, r1
2fff0fac:	4690      	mov	r8, r2
2fff0fae:	2a00      	cmp	r2, #0
2fff0fb0:	d03e      	beq.n	2fff1030 <gicv2_secure_spis_configure_props+0x8c>
2fff0fb2:	b919      	cbnz	r1, 2fff0fbc <gicv2_secure_spis_configure_props+0x18>
2fff0fb4:	2183      	movs	r1, #131	; 0x83
2fff0fb6:	481f      	ldr	r0, [pc, #124]	; (2fff1034 <gicv2_secure_spis_configure_props+0x90>)
2fff0fb8:	f008 fd82 	bl	2fff9ac0 <__assert>
2fff0fbc:	2600      	movs	r6, #0
2fff0fbe:	f500 6900 	add.w	r9, r0, #2048	; 0x800
2fff0fc2:	f834 1026 	ldrh.w	r1, [r4, r6, lsl #2]
2fff0fc6:	00b7      	lsls	r7, r6, #2
2fff0fc8:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff0fcc:	eb04 0a86 	add.w	sl, r4, r6, lsl #2
2fff0fd0:	291f      	cmp	r1, #31
2fff0fd2:	d92a      	bls.n	2fff102a <gicv2_secure_spis_configure_props+0x86>
2fff0fd4:	f89a 3002 	ldrb.w	r3, [sl, #2]
2fff0fd8:	f013 0f0c 	tst.w	r3, #12
2fff0fdc:	d001      	beq.n	2fff0fe2 <gicv2_secure_spis_configure_props+0x3e>
2fff0fde:	218c      	movs	r1, #140	; 0x8c
2fff0fe0:	e7e9      	b.n	2fff0fb6 <gicv2_secure_spis_configure_props+0x12>
2fff0fe2:	4628      	mov	r0, r5
2fff0fe4:	f7ff ff78 	bl	2fff0ed8 <gicd_clr_igroupr>
2fff0fe8:	59e2      	ldr	r2, [r4, r7]
2fff0fea:	4628      	mov	r0, r5
2fff0fec:	5be1      	ldrh	r1, [r4, r7]
2fff0fee:	f3c2 2287 	ubfx	r2, r2, #10, #8
2fff0ff2:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff0ff6:	f7ff ff8d 	bl	2fff0f14 <gicd_set_ipriorityr>
2fff0ffa:	5be3      	ldrh	r3, [r4, r7]
2fff0ffc:	4628      	mov	r0, r5
2fff0ffe:	f8d9 2000 	ldr.w	r2, [r9]
2fff1002:	f3c3 0309 	ubfx	r3, r3, #0, #10
2fff1006:	b2d2      	uxtb	r2, r2
2fff1008:	f803 2009 	strb.w	r2, [r3, r9]
2fff100c:	f89a 2002 	ldrb.w	r2, [sl, #2]
2fff1010:	5be1      	ldrh	r1, [r4, r7]
2fff1012:	f3c2 1201 	ubfx	r2, r2, #4, #2
2fff1016:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff101a:	f7ff ff80 	bl	2fff0f1e <gicd_set_icfgr>
2fff101e:	5be1      	ldrh	r1, [r4, r7]
2fff1020:	4628      	mov	r0, r5
2fff1022:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff1026:	f7ff ff69 	bl	2fff0efc <gicd_set_isenabler>
2fff102a:	3601      	adds	r6, #1
2fff102c:	45b0      	cmp	r8, r6
2fff102e:	d1c8      	bne.n	2fff0fc2 <gicv2_secure_spis_configure_props+0x1e>
2fff1030:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff1034:	2fffab2a 	.word	0x2fffab2a

2fff1038 <gicv2_secure_ppi_sgi_setup_props>:
2fff1038:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff103c:	4604      	mov	r4, r0
2fff103e:	460d      	mov	r5, r1
2fff1040:	4690      	mov	r8, r2
2fff1042:	b122      	cbz	r2, 2fff104e <gicv2_secure_ppi_sgi_setup_props+0x16>
2fff1044:	b919      	cbnz	r1, 2fff104e <gicv2_secure_ppi_sgi_setup_props+0x16>
2fff1046:	21ad      	movs	r1, #173	; 0xad
2fff1048:	4827      	ldr	r0, [pc, #156]	; (2fff10e8 <gicv2_secure_ppi_sgi_setup_props+0xb0>)
2fff104a:	f008 fd39 	bl	2fff9ac0 <__assert>
2fff104e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
2fff1052:	2100      	movs	r1, #0
2fff1054:	4620      	mov	r0, r4
2fff1056:	2600      	movs	r6, #0
2fff1058:	f7ff ff1b 	bl	2fff0e92 <gicd_write_icenabler>
2fff105c:	4631      	mov	r1, r6
2fff105e:	f04f 3280 	mov.w	r2, #2155905152	; 0x80808080
2fff1062:	4620      	mov	r0, r4
2fff1064:	3604      	adds	r6, #4
2fff1066:	f7ff ff1a 	bl	2fff0e9e <gicd_write_ipriorityr>
2fff106a:	2e20      	cmp	r6, #32
2fff106c:	d1f6      	bne.n	2fff105c <gicv2_secure_ppi_sgi_setup_props+0x24>
2fff106e:	2700      	movs	r7, #0
2fff1070:	f04f 0901 	mov.w	r9, #1
2fff1074:	463e      	mov	r6, r7
2fff1076:	4546      	cmp	r6, r8
2fff1078:	d10b      	bne.n	2fff1092 <gicv2_secure_ppi_sgi_setup_props+0x5a>
2fff107a:	43fa      	mvns	r2, r7
2fff107c:	4620      	mov	r0, r4
2fff107e:	2100      	movs	r1, #0
2fff1080:	f7ff fefc 	bl	2fff0e7c <gicd_write_igroupr>
2fff1084:	463a      	mov	r2, r7
2fff1086:	4620      	mov	r0, r4
2fff1088:	2100      	movs	r1, #0
2fff108a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff108e:	f7ff befa 	b.w	2fff0e86 <gicd_write_isenabler>
2fff1092:	f835 1026 	ldrh.w	r1, [r5, r6, lsl #2]
2fff1096:	ea4f 0a86 	mov.w	sl, r6, lsl #2
2fff109a:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff109e:	eb05 0386 	add.w	r3, r5, r6, lsl #2
2fff10a2:	291f      	cmp	r1, #31
2fff10a4:	d81e      	bhi.n	2fff10e4 <gicv2_secure_ppi_sgi_setup_props+0xac>
2fff10a6:	789a      	ldrb	r2, [r3, #2]
2fff10a8:	f012 0f0c 	tst.w	r2, #12
2fff10ac:	d001      	beq.n	2fff10b2 <gicv2_secure_ppi_sgi_setup_props+0x7a>
2fff10ae:	21c1      	movs	r1, #193	; 0xc1
2fff10b0:	e7ca      	b.n	2fff1048 <gicv2_secure_ppi_sgi_setup_props+0x10>
2fff10b2:	f501 737c 	add.w	r3, r1, #1008	; 0x3f0
2fff10b6:	f3c3 0309 	ubfx	r3, r3, #0, #10
2fff10ba:	2b0f      	cmp	r3, #15
2fff10bc:	d804      	bhi.n	2fff10c8 <gicv2_secure_ppi_sgi_setup_props+0x90>
2fff10be:	f3c2 1201 	ubfx	r2, r2, #4, #2
2fff10c2:	4620      	mov	r0, r4
2fff10c4:	f7ff ff2b 	bl	2fff0f1e <gicd_set_icfgr>
2fff10c8:	f835 100a 	ldrh.w	r1, [r5, sl]
2fff10cc:	4620      	mov	r0, r4
2fff10ce:	f855 200a 	ldr.w	r2, [r5, sl]
2fff10d2:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff10d6:	f3c2 2287 	ubfx	r2, r2, #10, #8
2fff10da:	fa09 f301 	lsl.w	r3, r9, r1
2fff10de:	431f      	orrs	r7, r3
2fff10e0:	f7ff ff18 	bl	2fff0f14 <gicd_set_ipriorityr>
2fff10e4:	3601      	adds	r6, #1
2fff10e6:	e7c6      	b.n	2fff1076 <gicv2_secure_ppi_sgi_setup_props+0x3e>
2fff10e8:	2fffab2a 	.word	0x2fffab2a

2fff10ec <gicv2_cpuif_enable>:
2fff10ec:	b508      	push	{r3, lr}
2fff10ee:	4b08      	ldr	r3, [pc, #32]	; (2fff1110 <gicv2_cpuif_enable+0x24>)
2fff10f0:	681b      	ldr	r3, [r3, #0]
2fff10f2:	b91b      	cbnz	r3, 2fff10fc <gicv2_cpuif_enable+0x10>
2fff10f4:	2126      	movs	r1, #38	; 0x26
2fff10f6:	4807      	ldr	r0, [pc, #28]	; (2fff1114 <gicv2_cpuif_enable+0x28>)
2fff10f8:	f008 fce2 	bl	2fff9ac0 <__assert>
2fff10fc:	685b      	ldr	r3, [r3, #4]
2fff10fe:	b90b      	cbnz	r3, 2fff1104 <gicv2_cpuif_enable+0x18>
2fff1100:	2127      	movs	r1, #39	; 0x27
2fff1102:	e7f8      	b.n	2fff10f6 <gicv2_cpuif_enable+0xa>
2fff1104:	22ff      	movs	r2, #255	; 0xff
2fff1106:	605a      	str	r2, [r3, #4]
2fff1108:	f240 12e9 	movw	r2, #489	; 0x1e9
2fff110c:	601a      	str	r2, [r3, #0]
2fff110e:	bd08      	pop	{r3, pc}
2fff1110:	2fffe7a4 	.word	0x2fffe7a4
2fff1114:	2fffab4d 	.word	0x2fffab4d

2fff1118 <gicv2_pcpu_distif_init>:
2fff1118:	b510      	push	{r4, lr}
2fff111a:	4c0c      	ldr	r4, [pc, #48]	; (2fff114c <gicv2_pcpu_distif_init+0x34>)
2fff111c:	6823      	ldr	r3, [r4, #0]
2fff111e:	b91b      	cbnz	r3, 2fff1128 <gicv2_pcpu_distif_init+0x10>
2fff1120:	2150      	movs	r1, #80	; 0x50
2fff1122:	480b      	ldr	r0, [pc, #44]	; (2fff1150 <gicv2_pcpu_distif_init+0x38>)
2fff1124:	f008 fccc 	bl	2fff9ac0 <__assert>
2fff1128:	6818      	ldr	r0, [r3, #0]
2fff112a:	b908      	cbnz	r0, 2fff1130 <gicv2_pcpu_distif_init+0x18>
2fff112c:	2151      	movs	r1, #81	; 0x51
2fff112e:	e7f8      	b.n	2fff1122 <gicv2_pcpu_distif_init+0xa>
2fff1130:	695a      	ldr	r2, [r3, #20]
2fff1132:	6919      	ldr	r1, [r3, #16]
2fff1134:	f7ff ff80 	bl	2fff1038 <gicv2_secure_ppi_sgi_setup_props>
2fff1138:	6823      	ldr	r3, [r4, #0]
2fff113a:	681a      	ldr	r2, [r3, #0]
2fff113c:	6813      	ldr	r3, [r2, #0]
2fff113e:	07d9      	lsls	r1, r3, #31
2fff1140:	bf5c      	itt	pl
2fff1142:	f043 0301 	orrpl.w	r3, r3, #1
2fff1146:	6013      	strpl	r3, [r2, #0]
2fff1148:	bd10      	pop	{r4, pc}
2fff114a:	bf00      	nop
2fff114c:	2fffe7a4 	.word	0x2fffe7a4
2fff1150:	2fffab4d 	.word	0x2fffab4d

2fff1154 <gicv2_distif_init>:
2fff1154:	b538      	push	{r3, r4, r5, lr}
2fff1156:	4d0e      	ldr	r5, [pc, #56]	; (2fff1190 <gicv2_distif_init+0x3c>)
2fff1158:	682b      	ldr	r3, [r5, #0]
2fff115a:	b91b      	cbnz	r3, 2fff1164 <gicv2_distif_init+0x10>
2fff115c:	2168      	movs	r1, #104	; 0x68
2fff115e:	480d      	ldr	r0, [pc, #52]	; (2fff1194 <gicv2_distif_init+0x40>)
2fff1160:	f008 fcae 	bl	2fff9ac0 <__assert>
2fff1164:	6818      	ldr	r0, [r3, #0]
2fff1166:	b908      	cbnz	r0, 2fff116c <gicv2_distif_init+0x18>
2fff1168:	2169      	movs	r1, #105	; 0x69
2fff116a:	e7f8      	b.n	2fff115e <gicv2_distif_init+0xa>
2fff116c:	6804      	ldr	r4, [r0, #0]
2fff116e:	f024 0303 	bic.w	r3, r4, #3
2fff1172:	f044 0401 	orr.w	r4, r4, #1
2fff1176:	6003      	str	r3, [r0, #0]
2fff1178:	f7ff feeb 	bl	2fff0f52 <gicv2_spis_configure_defaults>
2fff117c:	682b      	ldr	r3, [r5, #0]
2fff117e:	695a      	ldr	r2, [r3, #20]
2fff1180:	6919      	ldr	r1, [r3, #16]
2fff1182:	6818      	ldr	r0, [r3, #0]
2fff1184:	f7ff ff0e 	bl	2fff0fa4 <gicv2_secure_spis_configure_props>
2fff1188:	682b      	ldr	r3, [r5, #0]
2fff118a:	681b      	ldr	r3, [r3, #0]
2fff118c:	601c      	str	r4, [r3, #0]
2fff118e:	bd38      	pop	{r3, r4, r5, pc}
2fff1190:	2fffe7a4 	.word	0x2fffe7a4
2fff1194:	2fffab4d 	.word	0x2fffab4d

2fff1198 <gicv2_driver_init>:
2fff1198:	b510      	push	{r4, lr}
2fff119a:	b918      	cbnz	r0, 2fff11a4 <gicv2_driver_init+0xc>
2fff119c:	2183      	movs	r1, #131	; 0x83
2fff119e:	4814      	ldr	r0, [pc, #80]	; (2fff11f0 <gicv2_driver_init+0x58>)
2fff11a0:	f008 fc8e 	bl	2fff9ac0 <__assert>
2fff11a4:	6802      	ldr	r2, [r0, #0]
2fff11a6:	b90a      	cbnz	r2, 2fff11ac <gicv2_driver_init+0x14>
2fff11a8:	2184      	movs	r1, #132	; 0x84
2fff11aa:	e7f8      	b.n	2fff119e <gicv2_driver_init+0x6>
2fff11ac:	6841      	ldr	r1, [r0, #4]
2fff11ae:	b909      	cbnz	r1, 2fff11b4 <gicv2_driver_init+0x1c>
2fff11b0:	2185      	movs	r1, #133	; 0x85
2fff11b2:	e7f4      	b.n	2fff119e <gicv2_driver_init+0x6>
2fff11b4:	6941      	ldr	r1, [r0, #20]
2fff11b6:	b119      	cbz	r1, 2fff11c0 <gicv2_driver_init+0x28>
2fff11b8:	6901      	ldr	r1, [r0, #16]
2fff11ba:	b909      	cbnz	r1, 2fff11c0 <gicv2_driver_init+0x28>
2fff11bc:	2187      	movs	r1, #135	; 0x87
2fff11be:	e7ee      	b.n	2fff119e <gicv2_driver_init+0x6>
2fff11c0:	f8d2 2fe8 	ldr.w	r2, [r2, #4072]	; 0xfe8
2fff11c4:	f3c2 1203 	ubfx	r2, r2, #4, #4
2fff11c8:	3a01      	subs	r2, #1
2fff11ca:	2a01      	cmp	r2, #1
2fff11cc:	d901      	bls.n	2fff11d2 <gicv2_driver_init+0x3a>
2fff11ce:	219a      	movs	r1, #154	; 0x9a
2fff11d0:	e7e5      	b.n	2fff119e <gicv2_driver_init+0x6>
2fff11d2:	4c08      	ldr	r4, [pc, #32]	; (2fff11f4 <gicv2_driver_init+0x5c>)
2fff11d4:	2104      	movs	r1, #4
2fff11d6:	6020      	str	r0, [r4, #0]
2fff11d8:	4620      	mov	r0, r4
2fff11da:	f007 ecd4 	blx	2fff8b84 <flush_dcache_range>
2fff11de:	6820      	ldr	r0, [r4, #0]
2fff11e0:	2118      	movs	r1, #24
2fff11e2:	f007 ecd0 	blx	2fff8b84 <flush_dcache_range>
2fff11e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff11ea:	4803      	ldr	r0, [pc, #12]	; (2fff11f8 <gicv2_driver_init+0x60>)
2fff11ec:	f001 bb76 	b.w	2fff28dc <tf_log>
2fff11f0:	2fffab4d 	.word	0x2fffab4d
2fff11f4:	2fffe7a4 	.word	0x2fffe7a4
2fff11f8:	2fffab6d 	.word	0x2fffab6d

2fff11fc <gicv2_get_pending_interrupt_id>:
2fff11fc:	b508      	push	{r3, lr}
2fff11fe:	4b0b      	ldr	r3, [pc, #44]	; (2fff122c <gicv2_get_pending_interrupt_id+0x30>)
2fff1200:	681b      	ldr	r3, [r3, #0]
2fff1202:	b91b      	cbnz	r3, 2fff120c <gicv2_get_pending_interrupt_id+0x10>
2fff1204:	21d5      	movs	r1, #213	; 0xd5
2fff1206:	480a      	ldr	r0, [pc, #40]	; (2fff1230 <gicv2_get_pending_interrupt_id+0x34>)
2fff1208:	f008 fc5a 	bl	2fff9ac0 <__assert>
2fff120c:	685b      	ldr	r3, [r3, #4]
2fff120e:	b90b      	cbnz	r3, 2fff1214 <gicv2_get_pending_interrupt_id+0x18>
2fff1210:	21d6      	movs	r1, #214	; 0xd6
2fff1212:	e7f8      	b.n	2fff1206 <gicv2_get_pending_interrupt_id+0xa>
2fff1214:	6998      	ldr	r0, [r3, #24]
2fff1216:	f240 32fe 	movw	r2, #1022	; 0x3fe
2fff121a:	f3c0 0009 	ubfx	r0, r0, #0, #10
2fff121e:	4290      	cmp	r0, r2
2fff1220:	bf04      	itt	eq
2fff1222:	6a98      	ldreq	r0, [r3, #40]	; 0x28
2fff1224:	f3c0 0009 	ubfxeq	r0, r0, #0, #10
2fff1228:	bd08      	pop	{r3, pc}
2fff122a:	bf00      	nop
2fff122c:	2fffe7a4 	.word	0x2fffe7a4
2fff1230:	2fffab4d 	.word	0x2fffab4d

2fff1234 <gicv2_acknowledge_interrupt>:
2fff1234:	b508      	push	{r3, lr}
2fff1236:	4b06      	ldr	r3, [pc, #24]	; (2fff1250 <gicv2_acknowledge_interrupt+0x1c>)
2fff1238:	681b      	ldr	r3, [r3, #0]
2fff123a:	b91b      	cbnz	r3, 2fff1244 <gicv2_acknowledge_interrupt+0x10>
2fff123c:	21eb      	movs	r1, #235	; 0xeb
2fff123e:	4805      	ldr	r0, [pc, #20]	; (2fff1254 <gicv2_acknowledge_interrupt+0x20>)
2fff1240:	f008 fc3e 	bl	2fff9ac0 <__assert>
2fff1244:	685b      	ldr	r3, [r3, #4]
2fff1246:	b90b      	cbnz	r3, 2fff124c <gicv2_acknowledge_interrupt+0x18>
2fff1248:	21ec      	movs	r1, #236	; 0xec
2fff124a:	e7f8      	b.n	2fff123e <gicv2_acknowledge_interrupt+0xa>
2fff124c:	68d8      	ldr	r0, [r3, #12]
2fff124e:	bd08      	pop	{r3, pc}
2fff1250:	2fffe7a4 	.word	0x2fffe7a4
2fff1254:	2fffab4d 	.word	0x2fffab4d

2fff1258 <gicv2_end_of_interrupt>:
2fff1258:	b508      	push	{r3, lr}
2fff125a:	4b06      	ldr	r3, [pc, #24]	; (2fff1274 <gicv2_end_of_interrupt+0x1c>)
2fff125c:	681b      	ldr	r3, [r3, #0]
2fff125e:	b91b      	cbnz	r3, 2fff1268 <gicv2_end_of_interrupt+0x10>
2fff1260:	21f7      	movs	r1, #247	; 0xf7
2fff1262:	4805      	ldr	r0, [pc, #20]	; (2fff1278 <gicv2_end_of_interrupt+0x20>)
2fff1264:	f008 fc2c 	bl	2fff9ac0 <__assert>
2fff1268:	685b      	ldr	r3, [r3, #4]
2fff126a:	b90b      	cbnz	r3, 2fff1270 <gicv2_end_of_interrupt+0x18>
2fff126c:	21f8      	movs	r1, #248	; 0xf8
2fff126e:	e7f8      	b.n	2fff1262 <gicv2_end_of_interrupt+0xa>
2fff1270:	6118      	str	r0, [r3, #16]
2fff1272:	bd08      	pop	{r3, pc}
2fff1274:	2fffe7a4 	.word	0x2fffe7a4
2fff1278:	2fffab4d 	.word	0x2fffab4d

2fff127c <gicv2_set_pe_target_mask>:
2fff127c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff127e:	4604      	mov	r4, r0
2fff1280:	4e16      	ldr	r6, [pc, #88]	; (2fff12dc <gicv2_set_pe_target_mask+0x60>)
2fff1282:	6833      	ldr	r3, [r6, #0]
2fff1284:	b923      	cbnz	r3, 2fff1290 <gicv2_set_pe_target_mask+0x14>
2fff1286:	f240 111f 	movw	r1, #287	; 0x11f
2fff128a:	4815      	ldr	r0, [pc, #84]	; (2fff12e0 <gicv2_set_pe_target_mask+0x64>)
2fff128c:	f008 fc18 	bl	2fff9ac0 <__assert>
2fff1290:	6818      	ldr	r0, [r3, #0]
2fff1292:	b910      	cbnz	r0, 2fff129a <gicv2_set_pe_target_mask+0x1e>
2fff1294:	f44f 7190 	mov.w	r1, #288	; 0x120
2fff1298:	e7f7      	b.n	2fff128a <gicv2_set_pe_target_mask+0xe>
2fff129a:	689d      	ldr	r5, [r3, #8]
2fff129c:	b915      	cbnz	r5, 2fff12a4 <gicv2_set_pe_target_mask+0x28>
2fff129e:	f240 1121 	movw	r1, #289	; 0x121
2fff12a2:	e7f2      	b.n	2fff128a <gicv2_set_pe_target_mask+0xe>
2fff12a4:	2c07      	cmp	r4, #7
2fff12a6:	d902      	bls.n	2fff12ae <gicv2_set_pe_target_mask+0x32>
2fff12a8:	f44f 7191 	mov.w	r1, #290	; 0x122
2fff12ac:	e7ed      	b.n	2fff128a <gicv2_set_pe_target_mask+0xe>
2fff12ae:	68db      	ldr	r3, [r3, #12]
2fff12b0:	42a3      	cmp	r3, r4
2fff12b2:	d802      	bhi.n	2fff12ba <gicv2_set_pe_target_mask+0x3e>
2fff12b4:	f240 1123 	movw	r1, #291	; 0x123
2fff12b8:	e7e7      	b.n	2fff128a <gicv2_set_pe_target_mask+0xe>
2fff12ba:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
2fff12be:	00a7      	lsls	r7, r4, #2
2fff12c0:	b95b      	cbnz	r3, 2fff12da <gicv2_set_pe_target_mask+0x5e>
2fff12c2:	f7ff fe42 	bl	2fff0f4a <gicv2_get_cpuif_id>
2fff12c6:	6833      	ldr	r3, [r6, #0]
2fff12c8:	2104      	movs	r1, #4
2fff12ca:	f845 0024 	str.w	r0, [r5, r4, lsl #2]
2fff12ce:	6898      	ldr	r0, [r3, #8]
2fff12d0:	4438      	add	r0, r7
2fff12d2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2fff12d6:	f00b ba57 	b.w	2fffc788 <__flush_dcache_range_from_thumb>
2fff12da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff12dc:	2fffe7a4 	.word	0x2fffe7a4
2fff12e0:	2fffab4d 	.word	0x2fffab4d

2fff12e4 <gicv2_enable_interrupt>:
2fff12e4:	b508      	push	{r3, lr}
2fff12e6:	4601      	mov	r1, r0
2fff12e8:	4b0d      	ldr	r3, [pc, #52]	; (2fff1320 <gicv2_enable_interrupt+0x3c>)
2fff12ea:	681a      	ldr	r2, [r3, #0]
2fff12ec:	b922      	cbnz	r2, 2fff12f8 <gicv2_enable_interrupt+0x14>
2fff12ee:	f240 1151 	movw	r1, #337	; 0x151
2fff12f2:	480c      	ldr	r0, [pc, #48]	; (2fff1324 <gicv2_enable_interrupt+0x40>)
2fff12f4:	f008 fbe4 	bl	2fff9ac0 <__assert>
2fff12f8:	6812      	ldr	r2, [r2, #0]
2fff12fa:	b912      	cbnz	r2, 2fff1302 <gicv2_enable_interrupt+0x1e>
2fff12fc:	f44f 71a9 	mov.w	r1, #338	; 0x152
2fff1300:	e7f7      	b.n	2fff12f2 <gicv2_enable_interrupt+0xe>
2fff1302:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2fff1306:	d302      	bcc.n	2fff130e <gicv2_enable_interrupt+0x2a>
2fff1308:	f240 1153 	movw	r1, #339	; 0x153
2fff130c:	e7f1      	b.n	2fff12f2 <gicv2_enable_interrupt+0xe>
2fff130e:	f3bf 8f4a 	dsb	ishst
2fff1312:	681b      	ldr	r3, [r3, #0]
2fff1314:	6818      	ldr	r0, [r3, #0]
2fff1316:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff131a:	f7ff bdef 	b.w	2fff0efc <gicd_set_isenabler>
2fff131e:	bf00      	nop
2fff1320:	2fffe7a4 	.word	0x2fffe7a4
2fff1324:	2fffab4d 	.word	0x2fffab4d

2fff1328 <gicv2_disable_interrupt>:
2fff1328:	b508      	push	{r3, lr}
2fff132a:	4601      	mov	r1, r0
2fff132c:	4b0b      	ldr	r3, [pc, #44]	; (2fff135c <gicv2_disable_interrupt+0x34>)
2fff132e:	681b      	ldr	r3, [r3, #0]
2fff1330:	b923      	cbnz	r3, 2fff133c <gicv2_disable_interrupt+0x14>
2fff1332:	f44f 71b1 	mov.w	r1, #354	; 0x162
2fff1336:	480a      	ldr	r0, [pc, #40]	; (2fff1360 <gicv2_disable_interrupt+0x38>)
2fff1338:	f008 fbc2 	bl	2fff9ac0 <__assert>
2fff133c:	6818      	ldr	r0, [r3, #0]
2fff133e:	b910      	cbnz	r0, 2fff1346 <gicv2_disable_interrupt+0x1e>
2fff1340:	f240 1163 	movw	r1, #355	; 0x163
2fff1344:	e7f7      	b.n	2fff1336 <gicv2_disable_interrupt+0xe>
2fff1346:	f5b1 7f7f 	cmp.w	r1, #1020	; 0x3fc
2fff134a:	d302      	bcc.n	2fff1352 <gicv2_disable_interrupt+0x2a>
2fff134c:	f44f 71b2 	mov.w	r1, #356	; 0x164
2fff1350:	e7f1      	b.n	2fff1336 <gicv2_disable_interrupt+0xe>
2fff1352:	f7ff fdd9 	bl	2fff0f08 <gicd_set_icenabler>
2fff1356:	f3bf 8f4a 	dsb	ishst
2fff135a:	bd08      	pop	{r3, pc}
2fff135c:	2fffe7a4 	.word	0x2fffe7a4
2fff1360:	2fffab4d 	.word	0x2fffab4d

2fff1364 <gicv2_set_interrupt_priority>:
2fff1364:	460a      	mov	r2, r1
2fff1366:	490d      	ldr	r1, [pc, #52]	; (2fff139c <gicv2_set_interrupt_priority+0x38>)
2fff1368:	b508      	push	{r3, lr}
2fff136a:	4603      	mov	r3, r0
2fff136c:	6809      	ldr	r1, [r1, #0]
2fff136e:	b921      	cbnz	r1, 2fff137a <gicv2_set_interrupt_priority+0x16>
2fff1370:	f44f 71ba 	mov.w	r1, #372	; 0x174
2fff1374:	480a      	ldr	r0, [pc, #40]	; (2fff13a0 <gicv2_set_interrupt_priority+0x3c>)
2fff1376:	f008 fba3 	bl	2fff9ac0 <__assert>
2fff137a:	6808      	ldr	r0, [r1, #0]
2fff137c:	b910      	cbnz	r0, 2fff1384 <gicv2_set_interrupt_priority+0x20>
2fff137e:	f240 1175 	movw	r1, #373	; 0x175
2fff1382:	e7f7      	b.n	2fff1374 <gicv2_set_interrupt_priority+0x10>
2fff1384:	f5b3 7f7f 	cmp.w	r3, #1020	; 0x3fc
2fff1388:	d302      	bcc.n	2fff1390 <gicv2_set_interrupt_priority+0x2c>
2fff138a:	f44f 71bb 	mov.w	r1, #374	; 0x176
2fff138e:	e7f1      	b.n	2fff1374 <gicv2_set_interrupt_priority+0x10>
2fff1390:	4619      	mov	r1, r3
2fff1392:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff1396:	f7ff bdbd 	b.w	2fff0f14 <gicd_set_ipriorityr>
2fff139a:	bf00      	nop
2fff139c:	2fffe7a4 	.word	0x2fffe7a4
2fff13a0:	2fffab4d 	.word	0x2fffab4d

2fff13a4 <gicv2_set_interrupt_type>:
2fff13a4:	b570      	push	{r4, r5, r6, lr}
2fff13a6:	4604      	mov	r4, r0
2fff13a8:	4e16      	ldr	r6, [pc, #88]	; (2fff1404 <gicv2_set_interrupt_type+0x60>)
2fff13aa:	460d      	mov	r5, r1
2fff13ac:	6833      	ldr	r3, [r6, #0]
2fff13ae:	b923      	cbnz	r3, 2fff13ba <gicv2_set_interrupt_type+0x16>
2fff13b0:	f240 1181 	movw	r1, #385	; 0x181
2fff13b4:	4814      	ldr	r0, [pc, #80]	; (2fff1408 <gicv2_set_interrupt_type+0x64>)
2fff13b6:	f008 fb83 	bl	2fff9ac0 <__assert>
2fff13ba:	681b      	ldr	r3, [r3, #0]
2fff13bc:	b913      	cbnz	r3, 2fff13c4 <gicv2_set_interrupt_type+0x20>
2fff13be:	f44f 71c1 	mov.w	r1, #386	; 0x182
2fff13c2:	e7f7      	b.n	2fff13b4 <gicv2_set_interrupt_type+0x10>
2fff13c4:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2fff13c8:	d302      	bcc.n	2fff13d0 <gicv2_set_interrupt_type+0x2c>
2fff13ca:	f240 1183 	movw	r1, #387	; 0x183
2fff13ce:	e7f1      	b.n	2fff13b4 <gicv2_set_interrupt_type+0x10>
2fff13d0:	480e      	ldr	r0, [pc, #56]	; (2fff140c <gicv2_set_interrupt_type+0x68>)
2fff13d2:	f007 eab6 	blx	2fff8940 <spin_lock>
2fff13d6:	b15d      	cbz	r5, 2fff13f0 <gicv2_set_interrupt_type+0x4c>
2fff13d8:	2d01      	cmp	r5, #1
2fff13da:	d10f      	bne.n	2fff13fc <gicv2_set_interrupt_type+0x58>
2fff13dc:	6833      	ldr	r3, [r6, #0]
2fff13de:	4621      	mov	r1, r4
2fff13e0:	6818      	ldr	r0, [r3, #0]
2fff13e2:	f7ff fd68 	bl	2fff0eb6 <gicd_set_igroupr>
2fff13e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff13ea:	4808      	ldr	r0, [pc, #32]	; (2fff140c <gicv2_set_interrupt_type+0x68>)
2fff13ec:	f00b b9d4 	b.w	2fffc798 <__spin_unlock_from_thumb>
2fff13f0:	6833      	ldr	r3, [r6, #0]
2fff13f2:	4621      	mov	r1, r4
2fff13f4:	6818      	ldr	r0, [r3, #0]
2fff13f6:	f7ff fd6f 	bl	2fff0ed8 <gicd_clr_igroupr>
2fff13fa:	e7f4      	b.n	2fff13e6 <gicv2_set_interrupt_type+0x42>
2fff13fc:	f240 118f 	movw	r1, #399	; 0x18f
2fff1400:	e7d8      	b.n	2fff13b4 <gicv2_set_interrupt_type+0x10>
2fff1402:	bf00      	nop
2fff1404:	2fffe7a4 	.word	0x2fffe7a4
2fff1408:	2fffab4d 	.word	0x2fffab4d
2fff140c:	2fffe7a8 	.word	0x2fffe7a8

2fff1410 <gicv2_raise_sgi>:
2fff1410:	4a18      	ldr	r2, [pc, #96]	; (2fff1474 <gicv2_raise_sgi+0x64>)
2fff1412:	b510      	push	{r4, lr}
2fff1414:	6813      	ldr	r3, [r2, #0]
2fff1416:	b923      	cbnz	r3, 2fff1422 <gicv2_raise_sgi+0x12>
2fff1418:	f240 119f 	movw	r1, #415	; 0x19f
2fff141c:	4816      	ldr	r0, [pc, #88]	; (2fff1478 <gicv2_raise_sgi+0x68>)
2fff141e:	f008 fb4f 	bl	2fff9ac0 <__assert>
2fff1422:	2907      	cmp	r1, #7
2fff1424:	d902      	bls.n	2fff142c <gicv2_raise_sgi+0x1c>
2fff1426:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
2fff142a:	e7f7      	b.n	2fff141c <gicv2_raise_sgi+0xc>
2fff142c:	681c      	ldr	r4, [r3, #0]
2fff142e:	b914      	cbnz	r4, 2fff1436 <gicv2_raise_sgi+0x26>
2fff1430:	f240 11a1 	movw	r1, #417	; 0x1a1
2fff1434:	e7f2      	b.n	2fff141c <gicv2_raise_sgi+0xc>
2fff1436:	689c      	ldr	r4, [r3, #8]
2fff1438:	b914      	cbnz	r4, 2fff1440 <gicv2_raise_sgi+0x30>
2fff143a:	f240 11a7 	movw	r1, #423	; 0x1a7
2fff143e:	e7ed      	b.n	2fff141c <gicv2_raise_sgi+0xc>
2fff1440:	68db      	ldr	r3, [r3, #12]
2fff1442:	4299      	cmp	r1, r3
2fff1444:	d302      	bcc.n	2fff144c <gicv2_raise_sgi+0x3c>
2fff1446:	f44f 71d4 	mov.w	r1, #424	; 0x1a8
2fff144a:	e7e7      	b.n	2fff141c <gicv2_raise_sgi+0xc>
2fff144c:	f854 3021 	ldr.w	r3, [r4, r1, lsl #2]
2fff1450:	b913      	cbnz	r3, 2fff1458 <gicv2_raise_sgi+0x48>
2fff1452:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
2fff1456:	e7e1      	b.n	2fff141c <gicv2_raise_sgi+0xc>
2fff1458:	041b      	lsls	r3, r3, #16
2fff145a:	f000 000f 	and.w	r0, r0, #15
2fff145e:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
2fff1462:	4303      	orrs	r3, r0
2fff1464:	f3bf 8f4a 	dsb	ishst
2fff1468:	6812      	ldr	r2, [r2, #0]
2fff146a:	6812      	ldr	r2, [r2, #0]
2fff146c:	f8c2 3f00 	str.w	r3, [r2, #3840]	; 0xf00
2fff1470:	bd10      	pop	{r4, pc}
2fff1472:	bf00      	nop
2fff1474:	2fffe7a4 	.word	0x2fffe7a4
2fff1478:	2fffab4d 	.word	0x2fffab4d

2fff147c <gicv2_set_spi_routing>:
2fff147c:	4b18      	ldr	r3, [pc, #96]	; (2fff14e0 <gicv2_set_spi_routing+0x64>)
2fff147e:	b510      	push	{r4, lr}
2fff1480:	681a      	ldr	r2, [r3, #0]
2fff1482:	b922      	cbnz	r2, 2fff148e <gicv2_set_spi_routing+0x12>
2fff1484:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
2fff1488:	4816      	ldr	r0, [pc, #88]	; (2fff14e4 <gicv2_set_spi_routing+0x68>)
2fff148a:	f008 fb19 	bl	2fff9ac0 <__assert>
2fff148e:	6813      	ldr	r3, [r2, #0]
2fff1490:	b913      	cbnz	r3, 2fff1498 <gicv2_set_spi_routing+0x1c>
2fff1492:	f240 11c3 	movw	r1, #451	; 0x1c3
2fff1496:	e7f7      	b.n	2fff1488 <gicv2_set_spi_routing+0xc>
2fff1498:	f1a0 0420 	sub.w	r4, r0, #32
2fff149c:	f5b4 7f77 	cmp.w	r4, #988	; 0x3dc
2fff14a0:	d302      	bcc.n	2fff14a8 <gicv2_set_spi_routing+0x2c>
2fff14a2:	f240 11c5 	movw	r1, #453	; 0x1c5
2fff14a6:	e7ef      	b.n	2fff1488 <gicv2_set_spi_routing+0xc>
2fff14a8:	6894      	ldr	r4, [r2, #8]
2fff14aa:	b914      	cbnz	r4, 2fff14b2 <gicv2_set_spi_routing+0x36>
2fff14ac:	f240 11cb 	movw	r1, #459	; 0x1cb
2fff14b0:	e7ea      	b.n	2fff1488 <gicv2_set_spi_routing+0xc>
2fff14b2:	2907      	cmp	r1, #7
2fff14b4:	d902      	bls.n	2fff14bc <gicv2_set_spi_routing+0x40>
2fff14b6:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
2fff14ba:	e7e5      	b.n	2fff1488 <gicv2_set_spi_routing+0xc>
2fff14bc:	68d2      	ldr	r2, [r2, #12]
2fff14be:	4291      	cmp	r1, r2
2fff14c0:	d302      	bcc.n	2fff14c8 <gicv2_set_spi_routing+0x4c>
2fff14c2:	f240 11cd 	movw	r1, #461	; 0x1cd
2fff14c6:	e7df      	b.n	2fff1488 <gicv2_set_spi_routing+0xc>
2fff14c8:	f854 2021 	ldr.w	r2, [r4, r1, lsl #2]
2fff14cc:	b912      	cbnz	r2, 2fff14d4 <gicv2_set_spi_routing+0x58>
2fff14ce:	f240 11d5 	movw	r1, #469	; 0x1d5
2fff14d2:	e7d9      	b.n	2fff1488 <gicv2_set_spi_routing+0xc>
2fff14d4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
2fff14d8:	b2d2      	uxtb	r2, r2
2fff14da:	541a      	strb	r2, [r3, r0]
2fff14dc:	bd10      	pop	{r4, pc}
2fff14de:	bf00      	nop
2fff14e0:	2fffe7a4 	.word	0x2fffe7a4
2fff14e4:	2fffab4d 	.word	0x2fffab4d

2fff14e8 <gicv2_set_pmr>:
2fff14e8:	4a0b      	ldr	r2, [pc, #44]	; (2fff1518 <gicv2_set_pmr+0x30>)
2fff14ea:	b508      	push	{r3, lr}
2fff14ec:	4603      	mov	r3, r0
2fff14ee:	6811      	ldr	r1, [r2, #0]
2fff14f0:	b921      	cbnz	r1, 2fff14fc <gicv2_set_pmr+0x14>
2fff14f2:	f240 2109 	movw	r1, #521	; 0x209
2fff14f6:	4809      	ldr	r0, [pc, #36]	; (2fff151c <gicv2_set_pmr+0x34>)
2fff14f8:	f008 fae2 	bl	2fff9ac0 <__assert>
2fff14fc:	6849      	ldr	r1, [r1, #4]
2fff14fe:	b911      	cbnz	r1, 2fff1506 <gicv2_set_pmr+0x1e>
2fff1500:	f240 210a 	movw	r1, #522	; 0x20a
2fff1504:	e7f7      	b.n	2fff14f6 <gicv2_set_pmr+0xe>
2fff1506:	6848      	ldr	r0, [r1, #4]
2fff1508:	f3bf 8f5a 	dmb	ishst
2fff150c:	6812      	ldr	r2, [r2, #0]
2fff150e:	6852      	ldr	r2, [r2, #4]
2fff1510:	6053      	str	r3, [r2, #4]
2fff1512:	f3bf 8f4a 	dsb	ishst
2fff1516:	bd08      	pop	{r3, pc}
2fff1518:	2fffe7a4 	.word	0x2fffe7a4
2fff151c:	2fffab4d 	.word	0x2fffab4d

2fff1520 <gicv2_interrupt_set_cfg>:
2fff1520:	4b03      	ldr	r3, [pc, #12]	; (2fff1530 <gicv2_interrupt_set_cfg+0x10>)
2fff1522:	460a      	mov	r2, r1
2fff1524:	4601      	mov	r1, r0
2fff1526:	681b      	ldr	r3, [r3, #0]
2fff1528:	6818      	ldr	r0, [r3, #0]
2fff152a:	f7ff bcf8 	b.w	2fff0f1e <gicd_set_icfgr>
2fff152e:	bf00      	nop
2fff1530:	2fffe7a4 	.word	0x2fffe7a4

2fff1534 <plat_ic_get_pending_interrupt_id>:
2fff1534:	b508      	push	{r3, lr}
2fff1536:	f7ff fe61 	bl	2fff11fc <gicv2_get_pending_interrupt_id>
2fff153a:	f240 33ff 	movw	r3, #1023	; 0x3ff
2fff153e:	4298      	cmp	r0, r3
2fff1540:	bf08      	it	eq
2fff1542:	f04f 30ff 	moveq.w	r0, #4294967295	; 0xffffffff
2fff1546:	bd08      	pop	{r3, pc}

2fff1548 <plat_ic_acknowledge_interrupt>:
2fff1548:	f7ff be74 	b.w	2fff1234 <gicv2_acknowledge_interrupt>

2fff154c <plat_ic_end_of_interrupt>:
2fff154c:	f7ff be84 	b.w	2fff1258 <gicv2_end_of_interrupt>

2fff1550 <plat_ic_disable_interrupt>:
2fff1550:	f7ff beea 	b.w	2fff1328 <gicv2_disable_interrupt>

2fff1554 <plat_ic_set_interrupt_priority>:
2fff1554:	f7ff bf06 	b.w	2fff1364 <gicv2_set_interrupt_priority>

2fff1558 <plat_ic_set_priority_mask>:
2fff1558:	f7ff bfc6 	b.w	2fff14e8 <gicv2_set_pmr>

2fff155c <fdt32_to_cpu>:
2fff155c:	ba00      	rev	r0, r0
2fff155e:	4770      	bx	lr

2fff1560 <enable_gic_interrupt>:
2fff1560:	b538      	push	{r3, r4, r5, lr}
2fff1562:	4603      	mov	r3, r0
2fff1564:	6800      	ldr	r0, [r0, #0]
2fff1566:	f7ff fff9 	bl	2fff155c <fdt32_to_cpu>
2fff156a:	b340      	cbz	r0, 2fff15be <enable_gic_interrupt+0x5e>
2fff156c:	2801      	cmp	r0, #1
2fff156e:	bf14      	ite	ne
2fff1570:	2400      	movne	r4, #0
2fff1572:	2410      	moveq	r4, #16
2fff1574:	6858      	ldr	r0, [r3, #4]
2fff1576:	f7ff fff1 	bl	2fff155c <fdt32_to_cpu>
2fff157a:	4404      	add	r4, r0
2fff157c:	6898      	ldr	r0, [r3, #8]
2fff157e:	f7ff ffed 	bl	2fff155c <fdt32_to_cpu>
2fff1582:	2803      	cmp	r0, #3
2fff1584:	f1a4 0320 	sub.w	r3, r4, #32
2fff1588:	bf94      	ite	ls
2fff158a:	2502      	movls	r5, #2
2fff158c:	2500      	movhi	r5, #0
2fff158e:	f5b3 7f77 	cmp.w	r3, #988	; 0x3dc
2fff1592:	d212      	bcs.n	2fff15ba <enable_gic_interrupt+0x5a>
2fff1594:	2100      	movs	r1, #0
2fff1596:	4620      	mov	r0, r4
2fff1598:	f7ff ff04 	bl	2fff13a4 <gicv2_set_interrupt_type>
2fff159c:	2110      	movs	r1, #16
2fff159e:	4620      	mov	r0, r4
2fff15a0:	f7ff fee0 	bl	2fff1364 <gicv2_set_interrupt_priority>
2fff15a4:	2100      	movs	r1, #0
2fff15a6:	4620      	mov	r0, r4
2fff15a8:	f7ff ff68 	bl	2fff147c <gicv2_set_spi_routing>
2fff15ac:	4620      	mov	r0, r4
2fff15ae:	4629      	mov	r1, r5
2fff15b0:	f7ff ffb6 	bl	2fff1520 <gicv2_interrupt_set_cfg>
2fff15b4:	4620      	mov	r0, r4
2fff15b6:	f7ff fe95 	bl	2fff12e4 <gicv2_enable_interrupt>
2fff15ba:	4620      	mov	r0, r4
2fff15bc:	bd38      	pop	{r3, r4, r5, pc}
2fff15be:	2420      	movs	r4, #32
2fff15c0:	e7d8      	b.n	2fff1574 <enable_gic_interrupt+0x14>

2fff15c2 <stm32_gic_pcpu_init>:
2fff15c2:	b508      	push	{r3, lr}
2fff15c4:	f7ff fda8 	bl	2fff1118 <gicv2_pcpu_distif_init>
2fff15c8:	f007 edc4 	blx	2fff9154 <plat_my_core_pos>
2fff15cc:	f7ff fe56 	bl	2fff127c <gicv2_set_pe_target_mask>
2fff15d0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff15d4:	f7ff bd8a 	b.w	2fff10ec <gicv2_cpuif_enable>

2fff15d8 <stm32_gic_init>:
2fff15d8:	b570      	push	{r4, r5, r6, lr}
2fff15da:	b086      	sub	sp, #24
2fff15dc:	a801      	add	r0, sp, #4
2fff15de:	f006 fcf1 	bl	2fff7fc4 <fdt_get_address>
2fff15e2:	b918      	cbnz	r0, 2fff15ec <stm32_gic_init+0x14>
2fff15e4:	f001 fa1e 	bl	2fff2a24 <console_flush>
2fff15e8:	f007 ea30 	blx	2fff8a4c <do_panic>
2fff15ec:	4a19      	ldr	r2, [pc, #100]	; (2fff1654 <stm32_gic_init+0x7c>)
2fff15ee:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff15f2:	a802      	add	r0, sp, #8
2fff15f4:	f006 fdd2 	bl	2fff819c <dt_get_node>
2fff15f8:	1e04      	subs	r4, r0, #0
2fff15fa:	dbf3      	blt.n	2fff15e4 <stm32_gic_init+0xc>
2fff15fc:	9b02      	ldr	r3, [sp, #8]
2fff15fe:	4621      	mov	r1, r4
2fff1600:	4d15      	ldr	r5, [pc, #84]	; (2fff1658 <stm32_gic_init+0x80>)
2fff1602:	4a16      	ldr	r2, [pc, #88]	; (2fff165c <stm32_gic_init+0x84>)
2fff1604:	602b      	str	r3, [r5, #0]
2fff1606:	2300      	movs	r3, #0
2fff1608:	9801      	ldr	r0, [sp, #4]
2fff160a:	f008 f8bc 	bl	2fff9786 <fdt_getprop>
2fff160e:	2800      	cmp	r0, #0
2fff1610:	d0e8      	beq.n	2fff15e4 <stm32_gic_init+0xc>
2fff1612:	6880      	ldr	r0, [r0, #8]
2fff1614:	f7ff ffa2 	bl	2fff155c <fdt32_to_cpu>
2fff1618:	6068      	str	r0, [r5, #4]
2fff161a:	2300      	movs	r3, #0
2fff161c:	4a10      	ldr	r2, [pc, #64]	; (2fff1660 <stm32_gic_init+0x88>)
2fff161e:	4621      	mov	r1, r4
2fff1620:	9801      	ldr	r0, [sp, #4]
2fff1622:	f008 f8b0 	bl	2fff9786 <fdt_getprop>
2fff1626:	2800      	cmp	r0, #0
2fff1628:	d0dc      	beq.n	2fff15e4 <stm32_gic_init+0xc>
2fff162a:	6800      	ldr	r0, [r0, #0]
2fff162c:	4e0d      	ldr	r6, [pc, #52]	; (2fff1664 <stm32_gic_init+0x8c>)
2fff162e:	f7ff ff95 	bl	2fff155c <fdt32_to_cpu>
2fff1632:	4621      	mov	r1, r4
2fff1634:	6030      	str	r0, [r6, #0]
2fff1636:	9801      	ldr	r0, [sp, #4]
2fff1638:	f008 f8b6 	bl	2fff97a8 <fdt_get_phandle>
2fff163c:	6070      	str	r0, [r6, #4]
2fff163e:	2800      	cmp	r0, #0
2fff1640:	d0d0      	beq.n	2fff15e4 <stm32_gic_init+0xc>
2fff1642:	4628      	mov	r0, r5
2fff1644:	f7ff fda8 	bl	2fff1198 <gicv2_driver_init>
2fff1648:	f7ff fd84 	bl	2fff1154 <gicv2_distif_init>
2fff164c:	f7ff ffb9 	bl	2fff15c2 <stm32_gic_pcpu_init>
2fff1650:	b006      	add	sp, #24
2fff1652:	bd70      	pop	{r4, r5, r6, pc}
2fff1654:	2fffab8c 	.word	0x2fffab8c
2fff1658:	2fffd1ec 	.word	0x2fffd1ec
2fff165c:	2fffa810 	.word	0x2fffa810
2fff1660:	2fffab9e 	.word	0x2fffab9e
2fff1664:	2fffe7ac 	.word	0x2fffe7ac

2fff1668 <stm32_gic_enable_spi>:
2fff1668:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2fff166c:	b087      	sub	sp, #28
2fff166e:	4606      	mov	r6, r0
2fff1670:	a802      	add	r0, sp, #8
2fff1672:	460c      	mov	r4, r1
2fff1674:	f006 fca6 	bl	2fff7fc4 <fdt_get_address>
2fff1678:	b918      	cbnz	r0, 2fff1682 <stm32_gic_enable_spi+0x1a>
2fff167a:	f001 f9d3 	bl	2fff2a24 <console_flush>
2fff167e:	f007 e9e6 	blx	2fff8a4c <do_panic>
2fff1682:	4a42      	ldr	r2, [pc, #264]	; (2fff178c <stm32_gic_enable_spi+0x124>)
2fff1684:	2300      	movs	r3, #0
2fff1686:	9802      	ldr	r0, [sp, #8]
2fff1688:	4631      	mov	r1, r6
2fff168a:	f008 f87c 	bl	2fff9786 <fdt_getprop>
2fff168e:	b130      	cbz	r0, 2fff169e <stm32_gic_enable_spi+0x36>
2fff1690:	4b3f      	ldr	r3, [pc, #252]	; (2fff1790 <stm32_gic_enable_spi+0x128>)
2fff1692:	6800      	ldr	r0, [r0, #0]
2fff1694:	685b      	ldr	r3, [r3, #4]
2fff1696:	f7ff ff61 	bl	2fff155c <fdt32_to_cpu>
2fff169a:	4283      	cmp	r3, r0
2fff169c:	d173      	bne.n	2fff1786 <stm32_gic_enable_spi+0x11e>
2fff169e:	b37c      	cbz	r4, 2fff1700 <stm32_gic_enable_spi+0x98>
2fff16a0:	4630      	mov	r0, r6
2fff16a2:	f006 fc9b 	bl	2fff7fdc <fdt_get_status>
2fff16a6:	2802      	cmp	r0, #2
2fff16a8:	4623      	mov	r3, r4
2fff16aa:	9802      	ldr	r0, [sp, #8]
2fff16ac:	4631      	mov	r1, r6
2fff16ae:	bf0c      	ite	eq
2fff16b0:	4a38      	ldreq	r2, [pc, #224]	; (2fff1794 <stm32_gic_enable_spi+0x12c>)
2fff16b2:	4a39      	ldrne	r2, [pc, #228]	; (2fff1798 <stm32_gic_enable_spi+0x130>)
2fff16b4:	f008 f99d 	bl	2fff99f2 <fdt_stringlist_search>
2fff16b8:	2800      	cmp	r0, #0
2fff16ba:	4604      	mov	r4, r0
2fff16bc:	db1c      	blt.n	2fff16f8 <stm32_gic_enable_spi+0x90>
2fff16be:	4605      	mov	r5, r0
2fff16c0:	f10d 0307 	add.w	r3, sp, #7
2fff16c4:	aa03      	add	r2, sp, #12
2fff16c6:	a904      	add	r1, sp, #16
2fff16c8:	4630      	mov	r0, r6
2fff16ca:	f006 fcb9 	bl	2fff8040 <fdt_get_interrupt>
2fff16ce:	1e04      	subs	r4, r0, #0
2fff16d0:	db12      	blt.n	2fff16f8 <stm32_gic_enable_spi+0x90>
2fff16d2:	9f03      	ldr	r7, [sp, #12]
2fff16d4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff16d8:	9b04      	ldr	r3, [sp, #16]
2fff16da:	2600      	movs	r6, #0
2fff16dc:	f027 0703 	bic.w	r7, r7, #3
2fff16e0:	441f      	add	r7, r3
2fff16e2:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 2fff1790 <stm32_gic_enable_spi+0x128>
2fff16e6:	f8df 90b4 	ldr.w	r9, [pc, #180]	; 2fff179c <stm32_gic_enable_spi+0x134>
2fff16ea:	9b04      	ldr	r3, [sp, #16]
2fff16ec:	42bb      	cmp	r3, r7
2fff16ee:	d203      	bcs.n	2fff16f8 <stm32_gic_enable_spi+0x90>
2fff16f0:	42b5      	cmp	r5, r6
2fff16f2:	da08      	bge.n	2fff1706 <stm32_gic_enable_spi+0x9e>
2fff16f4:	1c6a      	adds	r2, r5, #1
2fff16f6:	d006      	beq.n	2fff1706 <stm32_gic_enable_spi+0x9e>
2fff16f8:	4620      	mov	r0, r4
2fff16fa:	b007      	add	sp, #28
2fff16fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff1700:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff1704:	e7dc      	b.n	2fff16c0 <stm32_gic_enable_spi+0x58>
2fff1706:	f89d 2007 	ldrb.w	r2, [sp, #7]
2fff170a:	b942      	cbnz	r2, 2fff171e <stm32_gic_enable_spi+0xb6>
2fff170c:	1c68      	adds	r0, r5, #1
2fff170e:	d001      	beq.n	2fff1714 <stm32_gic_enable_spi+0xac>
2fff1710:	42b5      	cmp	r5, r6
2fff1712:	d112      	bne.n	2fff173a <stm32_gic_enable_spi+0xd2>
2fff1714:	4618      	mov	r0, r3
2fff1716:	f7ff ff23 	bl	2fff1560 <enable_gic_interrupt>
2fff171a:	4604      	mov	r4, r0
2fff171c:	e00d      	b.n	2fff173a <stm32_gic_enable_spi+0xd2>
2fff171e:	6818      	ldr	r0, [r3, #0]
2fff1720:	f7ff ff1c 	bl	2fff155c <fdt32_to_cpu>
2fff1724:	f8d8 2004 	ldr.w	r2, [r8, #4]
2fff1728:	4290      	cmp	r0, r2
2fff172a:	d10e      	bne.n	2fff174a <stm32_gic_enable_spi+0xe2>
2fff172c:	1c69      	adds	r1, r5, #1
2fff172e:	f103 0004 	add.w	r0, r3, #4
2fff1732:	9004      	str	r0, [sp, #16]
2fff1734:	d0ef      	beq.n	2fff1716 <stm32_gic_enable_spi+0xae>
2fff1736:	42b5      	cmp	r5, r6
2fff1738:	d0ed      	beq.n	2fff1716 <stm32_gic_enable_spi+0xae>
2fff173a:	f8d8 2000 	ldr.w	r2, [r8]
2fff173e:	9b04      	ldr	r3, [sp, #16]
2fff1740:	eb03 0382 	add.w	r3, r3, r2, lsl #2
2fff1744:	9304      	str	r3, [sp, #16]
2fff1746:	3601      	adds	r6, #1
2fff1748:	e7cf      	b.n	2fff16ea <stm32_gic_enable_spi+0x82>
2fff174a:	a805      	add	r0, sp, #20
2fff174c:	f006 fc3a 	bl	2fff7fc4 <fdt_get_address>
2fff1750:	2800      	cmp	r0, #0
2fff1752:	d092      	beq.n	2fff167a <stm32_gic_enable_spi+0x12>
2fff1754:	9b04      	ldr	r3, [sp, #16]
2fff1756:	6818      	ldr	r0, [r3, #0]
2fff1758:	f7ff ff00 	bl	2fff155c <fdt32_to_cpu>
2fff175c:	4601      	mov	r1, r0
2fff175e:	9805      	ldr	r0, [sp, #20]
2fff1760:	f008 f903 	bl	2fff996a <fdt_node_offset_by_phandle>
2fff1764:	1e01      	subs	r1, r0, #0
2fff1766:	db88      	blt.n	2fff167a <stm32_gic_enable_spi+0x12>
2fff1768:	9805      	ldr	r0, [sp, #20]
2fff176a:	2300      	movs	r3, #0
2fff176c:	464a      	mov	r2, r9
2fff176e:	f008 f80a 	bl	2fff9786 <fdt_getprop>
2fff1772:	2800      	cmp	r0, #0
2fff1774:	d081      	beq.n	2fff167a <stm32_gic_enable_spi+0x12>
2fff1776:	6800      	ldr	r0, [r0, #0]
2fff1778:	f7ff fef0 	bl	2fff155c <fdt32_to_cpu>
2fff177c:	9b04      	ldr	r3, [sp, #16]
2fff177e:	3001      	adds	r0, #1
2fff1780:	eb03 0380 	add.w	r3, r3, r0, lsl #2
2fff1784:	e7de      	b.n	2fff1744 <stm32_gic_enable_spi+0xdc>
2fff1786:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff178a:	e7b5      	b.n	2fff16f8 <stm32_gic_enable_spi+0x90>
2fff178c:	2fffabaf 	.word	0x2fffabaf
2fff1790:	2fffe7ac 	.word	0x2fffe7ac
2fff1794:	2fffabc7 	.word	0x2fffabc7
2fff1798:	2fffabc0 	.word	0x2fffabc0
2fff179c:	2fffab9e 	.word	0x2fffab9e

2fff17a0 <plat_get_target_pwr_state>:
2fff17a0:	b508      	push	{r3, lr}
2fff17a2:	b91a      	cbnz	r2, 2fff17ac <plat_get_target_pwr_state+0xc>
2fff17a4:	4806      	ldr	r0, [pc, #24]	; (2fff17c0 <plat_get_target_pwr_state+0x20>)
2fff17a6:	219d      	movs	r1, #157	; 0x9d
2fff17a8:	f008 f98a 	bl	2fff9ac0 <__assert>
2fff17ac:	440a      	add	r2, r1
2fff17ae:	2002      	movs	r0, #2
2fff17b0:	f811 3b01 	ldrb.w	r3, [r1], #1
2fff17b4:	4298      	cmp	r0, r3
2fff17b6:	bf28      	it	cs
2fff17b8:	4618      	movcs	r0, r3
2fff17ba:	428a      	cmp	r2, r1
2fff17bc:	d1f8      	bne.n	2fff17b0 <plat_get_target_pwr_state+0x10>
2fff17be:	bd08      	pop	{r3, pc}
2fff17c0:	2fffac04 	.word	0x2fffac04

2fff17c4 <bsec_main>:
2fff17c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff17c6:	461e      	mov	r6, r3
2fff17c8:	2300      	movs	r3, #0
2fff17ca:	4604      	mov	r4, r0
2fff17cc:	9301      	str	r3, [sp, #4]
2fff17ce:	1f43      	subs	r3, r0, #5
2fff17d0:	2b01      	cmp	r3, #1
2fff17d2:	460d      	mov	r5, r1
2fff17d4:	4617      	mov	r7, r2
2fff17d6:	d802      	bhi.n	2fff17de <bsec_main+0x1a>
2fff17d8:	f06f 0402 	mvn.w	r4, #2
2fff17dc:	e02c      	b.n	2fff1838 <bsec_main+0x74>
2fff17de:	4608      	mov	r0, r1
2fff17e0:	f002 ffa2 	bl	2fff4728 <bsec_check_nsec_access_rights>
2fff17e4:	2800      	cmp	r0, #0
2fff17e6:	d1f7      	bne.n	2fff17d8 <bsec_main+0x14>
2fff17e8:	3c01      	subs	r4, #1
2fff17ea:	2c06      	cmp	r4, #6
2fff17ec:	d8f4      	bhi.n	2fff17d8 <bsec_main+0x14>
2fff17ee:	a301      	add	r3, pc, #4	; (adr r3, 2fff17f4 <bsec_main+0x30>)
2fff17f0:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
2fff17f4:	2fff1811 	.word	0x2fff1811
2fff17f8:	2fff181f 	.word	0x2fff181f
2fff17fc:	2fff18a9 	.word	0x2fff18a9
2fff1800:	2fff18b7 	.word	0x2fff18b7
2fff1804:	2fff17d9 	.word	0x2fff17d9
2fff1808:	2fff17d9 	.word	0x2fff17d9
2fff180c:	2fff18e3 	.word	0x2fff18e3
2fff1810:	4629      	mov	r1, r5
2fff1812:	4630      	mov	r0, r6
2fff1814:	f002 fd14 	bl	2fff4240 <bsec_read_otp>
2fff1818:	4604      	mov	r4, r0
2fff181a:	b168      	cbz	r0, 2fff1838 <bsec_main+0x74>
2fff181c:	e00a      	b.n	2fff1834 <bsec_main+0x70>
2fff181e:	2d08      	cmp	r5, #8
2fff1820:	f04f 0300 	mov.w	r3, #0
2fff1824:	6033      	str	r3, [r6, #0]
2fff1826:	d113      	bne.n	2fff1850 <bsec_main+0x8c>
2fff1828:	4629      	mov	r1, r5
2fff182a:	a801      	add	r0, sp, #4
2fff182c:	f002 fd08 	bl	2fff4240 <bsec_read_otp>
2fff1830:	4604      	mov	r4, r0
2fff1832:	b120      	cbz	r0, 2fff183e <bsec_main+0x7a>
2fff1834:	f06f 0401 	mvn.w	r4, #1
2fff1838:	4620      	mov	r0, r4
2fff183a:	b003      	add	sp, #12
2fff183c:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff183e:	9b01      	ldr	r3, [sp, #4]
2fff1840:	f407 7240 	and.w	r2, r7, #768	; 0x300
2fff1844:	f413 7340 	ands.w	r3, r3, #768	; 0x300
2fff1848:	d107      	bne.n	2fff185a <bsec_main+0x96>
2fff184a:	b96a      	cbnz	r2, 2fff1868 <bsec_main+0xa4>
2fff184c:	2300      	movs	r3, #0
2fff184e:	6033      	str	r3, [r6, #0]
2fff1850:	4629      	mov	r1, r5
2fff1852:	4638      	mov	r0, r7
2fff1854:	f002 fef8 	bl	2fff4648 <bsec_program_otp>
2fff1858:	e7de      	b.n	2fff1818 <bsec_main+0x54>
2fff185a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
2fff185e:	d1f4      	bne.n	2fff184a <bsec_main+0x86>
2fff1860:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
2fff1864:	d1f1      	bne.n	2fff184a <bsec_main+0x86>
2fff1866:	e7f1      	b.n	2fff184c <bsec_main+0x88>
2fff1868:	05bb      	lsls	r3, r7, #22
2fff186a:	d41a      	bmi.n	2fff18a2 <bsec_main+0xde>
2fff186c:	4b1f      	ldr	r3, [pc, #124]	; (2fff18ec <bsec_main+0x128>)
2fff186e:	2118      	movs	r1, #24
2fff1870:	f8d3 0094 	ldr.w	r0, [r3, #148]	; 0x94
2fff1874:	f103 53da 	add.w	r3, r3, #457179136	; 0x1b400000
2fff1878:	f503 23ca 	add.w	r3, r3, #413696	; 0x65000
2fff187c:	f503 639b 	add.w	r3, r3, #1240	; 0x4d8
2fff1880:	6003      	str	r3, [r0, #0]
2fff1882:	f007 e980 	blx	2fff8b84 <flush_dcache_range>
2fff1886:	f005 ffcd 	bl	2fff7824 <dt_pmic_status>
2fff188a:	2800      	cmp	r0, #0
2fff188c:	dc01      	bgt.n	2fff1892 <bsec_main+0xce>
2fff188e:	2301      	movs	r3, #1
2fff1890:	e7dd      	b.n	2fff184e <bsec_main+0x8a>
2fff1892:	f006 f8a7 	bl	2fff79e4 <initialize_pmic>
2fff1896:	f001 fa2f 	bl	2fff2cf8 <stm32mp_get_cpu_supply_name>
2fff189a:	b110      	cbz	r0, 2fff18a2 <bsec_main+0xde>
2fff189c:	f006 f9fc 	bl	2fff7c98 <stpmic1_regulator_mask_reset_set>
2fff18a0:	e7f5      	b.n	2fff188e <bsec_main+0xca>
2fff18a2:	2302      	movs	r3, #2
2fff18a4:	6033      	str	r3, [r6, #0]
2fff18a6:	e7c7      	b.n	2fff1838 <bsec_main+0x74>
2fff18a8:	4629      	mov	r1, r5
2fff18aa:	4638      	mov	r0, r7
2fff18ac:	2300      	movs	r3, #0
2fff18ae:	6033      	str	r3, [r6, #0]
2fff18b0:	f002 fe70 	bl	2fff4594 <bsec_write_otp>
2fff18b4:	e7b0      	b.n	2fff1818 <bsec_main+0x54>
2fff18b6:	2300      	movs	r3, #0
2fff18b8:	4629      	mov	r1, r5
2fff18ba:	6033      	str	r3, [r6, #0]
2fff18bc:	a801      	add	r0, sp, #4
2fff18be:	f002 fcbf 	bl	2fff4240 <bsec_read_otp>
2fff18c2:	2800      	cmp	r0, #0
2fff18c4:	d1b6      	bne.n	2fff1834 <bsec_main+0x70>
2fff18c6:	4628      	mov	r0, r5
2fff18c8:	f002 fd7c 	bl	2fff43c4 <bsec_shadow_register>
2fff18cc:	2800      	cmp	r0, #0
2fff18ce:	d1b1      	bne.n	2fff1834 <bsec_main+0x70>
2fff18d0:	4629      	mov	r1, r5
2fff18d2:	4630      	mov	r0, r6
2fff18d4:	f002 fcb4 	bl	2fff4240 <bsec_read_otp>
2fff18d8:	2800      	cmp	r0, #0
2fff18da:	d1ab      	bne.n	2fff1834 <bsec_main+0x70>
2fff18dc:	9801      	ldr	r0, [sp, #4]
2fff18de:	4629      	mov	r1, r5
2fff18e0:	e7e6      	b.n	2fff18b0 <bsec_main+0xec>
2fff18e2:	4628      	mov	r0, r5
2fff18e4:	f002 fcfa 	bl	2fff42dc <bsec_permanent_lock_otp>
2fff18e8:	e796      	b.n	2fff1818 <bsec_main+0x54>
2fff18ea:	bf00      	nop
2fff18ec:	2ffc0078 	.word	0x2ffc0078

2fff18f0 <pm_domain_scv_handler>:
2fff18f0:	3900      	subs	r1, #0
2fff18f2:	bf18      	it	ne
2fff18f4:	2101      	movne	r1, #1
2fff18f6:	b508      	push	{r3, lr}
2fff18f8:	f7fe fed8 	bl	2fff06ac <stm32mp1_set_pm_domain_state>
2fff18fc:	2800      	cmp	r0, #0
2fff18fe:	bfb4      	ite	lt
2fff1900:	f06f 0001 	mvnlt.w	r0, #1
2fff1904:	2000      	movge	r0, #0
2fff1906:	bd08      	pop	{r3, pc}

2fff1908 <pwr_scv_handler>:
2fff1908:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff190c:	4607      	mov	r7, r0
2fff190e:	f421 767f 	bic.w	r6, r1, #1020	; 0x3fc
2fff1912:	460c      	mov	r4, r1
2fff1914:	f026 0603 	bic.w	r6, r6, #3
2fff1918:	4615      	mov	r5, r2
2fff191a:	b12e      	cbz	r6, 2fff1928 <pwr_scv_handler+0x20>
2fff191c:	f001 f9a0 	bl	2fff2c60 <stm32mp_pwr_base>
2fff1920:	4286      	cmp	r6, r0
2fff1922:	d132      	bne.n	2fff198a <pwr_scv_handler+0x82>
2fff1924:	f3c4 0409 	ubfx	r4, r4, #0, #10
2fff1928:	2c20      	cmp	r4, #32
2fff192a:	d01c      	beq.n	2fff1966 <pwr_scv_handler+0x5e>
2fff192c:	2c28      	cmp	r4, #40	; 0x28
2fff192e:	d01d      	beq.n	2fff196c <pwr_scv_handler+0x64>
2fff1930:	2c0c      	cmp	r4, #12
2fff1932:	d123      	bne.n	2fff197c <pwr_scv_handler+0x74>
2fff1934:	f8df 905c 	ldr.w	r9, [pc, #92]	; 2fff1994 <pwr_scv_handler+0x8c>
2fff1938:	ea05 0509 	and.w	r5, r5, r9
2fff193c:	f001 f990 	bl	2fff2c60 <stm32mp_pwr_base>
2fff1940:	eb04 0800 	add.w	r8, r4, r0
2fff1944:	4606      	mov	r6, r0
2fff1946:	f001 f99b 	bl	2fff2c80 <stm32mp_pwr_regs_lock>
2fff194a:	2f02      	cmp	r7, #2
2fff194c:	d011      	beq.n	2fff1972 <pwr_scv_handler+0x6a>
2fff194e:	2f03      	cmp	r7, #3
2fff1950:	d016      	beq.n	2fff1980 <pwr_scv_handler+0x78>
2fff1952:	2f01      	cmp	r7, #1
2fff1954:	d110      	bne.n	2fff1978 <pwr_scv_handler+0x70>
2fff1956:	f8d8 2000 	ldr.w	r2, [r8]
2fff195a:	ea22 0209 	bic.w	r2, r2, r9
2fff195e:	4315      	orrs	r5, r2
2fff1960:	f8c8 5000 	str.w	r5, [r8]
2fff1964:	e008      	b.n	2fff1978 <pwr_scv_handler+0x70>
2fff1966:	f8df 9030 	ldr.w	r9, [pc, #48]	; 2fff1998 <pwr_scv_handler+0x90>
2fff196a:	e7e5      	b.n	2fff1938 <pwr_scv_handler+0x30>
2fff196c:	f04f 093f 	mov.w	r9, #63	; 0x3f
2fff1970:	e7e2      	b.n	2fff1938 <pwr_scv_handler+0x30>
2fff1972:	59a2      	ldr	r2, [r4, r6]
2fff1974:	4315      	orrs	r5, r2
2fff1976:	51a5      	str	r5, [r4, r6]
2fff1978:	f001 f98e 	bl	2fff2c98 <stm32mp_pwr_regs_unlock>
2fff197c:	2000      	movs	r0, #0
2fff197e:	e006      	b.n	2fff198e <pwr_scv_handler+0x86>
2fff1980:	f8d8 2000 	ldr.w	r2, [r8]
2fff1984:	ea22 0505 	bic.w	r5, r2, r5
2fff1988:	e7ea      	b.n	2fff1960 <pwr_scv_handler+0x58>
2fff198a:	f06f 0002 	mvn.w	r0, #2
2fff198e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff1992:	bf00      	nop
2fff1994:	51000300 	.word	0x51000300
2fff1998:	0fff3f3f 	.word	0x0fff3f3f

2fff199c <rcc_scv_handler>:
2fff199c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff199e:	4606      	mov	r6, r0
2fff19a0:	f421 677f 	bic.w	r7, r1, #4080	; 0xff0
2fff19a4:	460c      	mov	r4, r1
2fff19a6:	f027 070f 	bic.w	r7, r7, #15
2fff19aa:	4615      	mov	r5, r2
2fff19ac:	b12f      	cbz	r7, 2fff19ba <rcc_scv_handler+0x1e>
2fff19ae:	f001 f95b 	bl	2fff2c68 <stm32mp_rcc_base>
2fff19b2:	4287      	cmp	r7, r0
2fff19b4:	d12a      	bne.n	2fff1a0c <rcc_scv_handler+0x70>
2fff19b6:	f3c4 040b 	ubfx	r4, r4, #0, #12
2fff19ba:	f240 4314 	movw	r3, #1044	; 0x414
2fff19be:	429c      	cmp	r4, r3
2fff19c0:	d009      	beq.n	2fff19d6 <rcc_scv_handler+0x3a>
2fff19c2:	f5b4 6f83 	cmp.w	r4, #1048	; 0x418
2fff19c6:	d006      	beq.n	2fff19d6 <rcc_scv_handler+0x3a>
2fff19c8:	f5b4 7f86 	cmp.w	r4, #268	; 0x10c
2fff19cc:	d016      	beq.n	2fff19fc <rcc_scv_handler+0x60>
2fff19ce:	f001 f829 	bl	2fff2a24 <console_flush>
2fff19d2:	f007 e83c 	blx	2fff8a4c <do_panic>
2fff19d6:	f44f 1780 	mov.w	r7, #1048576	; 0x100000
2fff19da:	f001 f945 	bl	2fff2c68 <stm32mp_rcc_base>
2fff19de:	4420      	add	r0, r4
2fff19e0:	2e02      	cmp	r6, #2
2fff19e2:	ea05 0107 	and.w	r1, r5, r7
2fff19e6:	d00b      	beq.n	2fff1a00 <rcc_scv_handler+0x64>
2fff19e8:	2e03      	cmp	r6, #3
2fff19ea:	d00c      	beq.n	2fff1a06 <rcc_scv_handler+0x6a>
2fff19ec:	2e01      	cmp	r6, #1
2fff19ee:	d103      	bne.n	2fff19f8 <rcc_scv_handler+0x5c>
2fff19f0:	460a      	mov	r2, r1
2fff19f2:	4639      	mov	r1, r7
2fff19f4:	f006 fd0a 	bl	2fff840c <stm32mp_mmio_clrsetbits_32_shregs>
2fff19f8:	2000      	movs	r0, #0
2fff19fa:	e009      	b.n	2fff1a10 <rcc_scv_handler+0x74>
2fff19fc:	2701      	movs	r7, #1
2fff19fe:	e7ec      	b.n	2fff19da <rcc_scv_handler+0x3e>
2fff1a00:	f006 fd20 	bl	2fff8444 <stm32mp_mmio_setbits_32_shregs>
2fff1a04:	e7f8      	b.n	2fff19f8 <rcc_scv_handler+0x5c>
2fff1a06:	f006 fd10 	bl	2fff842a <stm32mp_mmio_clrbits_32_shregs>
2fff1a0a:	e7f5      	b.n	2fff19f8 <rcc_scv_handler+0x5c>
2fff1a0c:	f06f 0002 	mvn.w	r0, #2
2fff1a10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

2fff1a12 <rcc_cal_scv_handler>:
2fff1a12:	2801      	cmp	r0, #1
2fff1a14:	b508      	push	{r3, lr}
2fff1a16:	d004      	beq.n	2fff1a22 <rcc_cal_scv_handler+0x10>
2fff1a18:	2804      	cmp	r0, #4
2fff1a1a:	d00a      	beq.n	2fff1a32 <rcc_cal_scv_handler+0x20>
2fff1a1c:	f06f 0002 	mvn.w	r0, #2
2fff1a20:	bd08      	pop	{r3, pc}
2fff1a22:	f7fd faff 	bl	2ffef024 <stm32mp1_calib_start_csi_cal>
2fff1a26:	b110      	cbz	r0, 2fff1a2e <rcc_cal_scv_handler+0x1c>
2fff1a28:	f06f 0001 	mvn.w	r0, #1
2fff1a2c:	e7f8      	b.n	2fff1a20 <rcc_cal_scv_handler+0xe>
2fff1a2e:	2000      	movs	r0, #0
2fff1a30:	e7f6      	b.n	2fff1a20 <rcc_cal_scv_handler+0xe>
2fff1a32:	f7fd fae9 	bl	2ffef008 <stm32mp1_calib_start_hsi_cal>
2fff1a36:	e7f6      	b.n	2fff1a26 <rcc_cal_scv_handler+0x14>

2fff1a38 <rcc_opp_scv_handler>:
2fff1a38:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff1a3a:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
2fff1a3e:	4604      	mov	r4, r0
2fff1a40:	4616      	mov	r6, r2
2fff1a42:	fbb1 f0f5 	udiv	r0, r1, r5
2fff1a46:	9001      	str	r0, [sp, #4]
2fff1a48:	b134      	cbz	r4, 2fff1a58 <rcc_opp_scv_handler+0x20>
2fff1a4a:	2c01      	cmp	r4, #1
2fff1a4c:	d00b      	beq.n	2fff1a66 <rcc_opp_scv_handler+0x2e>
2fff1a4e:	f06f 0402 	mvn.w	r4, #2
2fff1a52:	4620      	mov	r0, r4
2fff1a54:	b002      	add	sp, #8
2fff1a56:	bd70      	pop	{r4, r5, r6, pc}
2fff1a58:	f003 fde2 	bl	2fff5620 <stm32mp1_set_opp_khz>
2fff1a5c:	2800      	cmp	r0, #0
2fff1a5e:	d0f8      	beq.n	2fff1a52 <rcc_opp_scv_handler+0x1a>
2fff1a60:	f06f 0401 	mvn.w	r4, #1
2fff1a64:	e7f5      	b.n	2fff1a52 <rcc_opp_scv_handler+0x1a>
2fff1a66:	a801      	add	r0, sp, #4
2fff1a68:	f003 fdbe 	bl	2fff55e8 <stm32mp1_round_opp_khz>
2fff1a6c:	4604      	mov	r4, r0
2fff1a6e:	2800      	cmp	r0, #0
2fff1a70:	d1f6      	bne.n	2fff1a60 <rcc_opp_scv_handler+0x28>
2fff1a72:	9b01      	ldr	r3, [sp, #4]
2fff1a74:	4a02      	ldr	r2, [pc, #8]	; (2fff1a80 <rcc_opp_scv_handler+0x48>)
2fff1a76:	4293      	cmp	r3, r2
2fff1a78:	d8f2      	bhi.n	2fff1a60 <rcc_opp_scv_handler+0x28>
2fff1a7a:	435d      	muls	r5, r3
2fff1a7c:	6035      	str	r5, [r6, #0]
2fff1a7e:	e7e8      	b.n	2fff1a52 <rcc_opp_scv_handler+0x1a>
2fff1a80:	00418937 	.word	0x00418937

2fff1a84 <stm32mp1_svc_setup>:
2fff1a84:	2000      	movs	r0, #0
2fff1a86:	4770      	bx	lr

2fff1a88 <stm32mp1_svc_smc_handler>:
2fff1a88:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff1a8a:	4606      	mov	r6, r0
2fff1a8c:	9d08      	ldr	r5, [sp, #32]
2fff1a8e:	4608      	mov	r0, r1
2fff1a90:	4611      	mov	r1, r2
2fff1a92:	461a      	mov	r2, r3
2fff1a94:	4b32      	ldr	r3, [pc, #200]	; (2fff1b60 <stm32mp1_svc_smc_handler+0xd8>)
2fff1a96:	2400      	movs	r4, #0
2fff1a98:	9401      	str	r4, [sp, #4]
2fff1a9a:	429e      	cmp	r6, r3
2fff1a9c:	d80f      	bhi.n	2fff1abe <stm32mp1_svc_smc_handler+0x36>
2fff1a9e:	3b0a      	subs	r3, #10
2fff1aa0:	429e      	cmp	r6, r3
2fff1aa2:	d917      	bls.n	2fff1ad4 <stm32mp1_svc_smc_handler+0x4c>
2fff1aa4:	f106 43fc 	add.w	r3, r6, #2113929216	; 0x7e000000
2fff1aa8:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
2fff1aac:	2b09      	cmp	r3, #9
2fff1aae:	d811      	bhi.n	2fff1ad4 <stm32mp1_svc_smc_handler+0x4c>
2fff1ab0:	e8df f003 	tbb	[pc, r3]
2fff1ab4:	232b3227 	.word	0x232b3227
2fff1ab8:	10101010 	.word	0x10101010
2fff1abc:	2e35      	.short	0x2e35
2fff1abe:	4b29      	ldr	r3, [pc, #164]	; (2fff1b64 <stm32mp1_svc_smc_handler+0xdc>)
2fff1ac0:	429e      	cmp	r6, r3
2fff1ac2:	d04a      	beq.n	2fff1b5a <stm32mp1_svc_smc_handler+0xd2>
2fff1ac4:	d80d      	bhi.n	2fff1ae2 <stm32mp1_svc_smc_handler+0x5a>
2fff1ac6:	f5a3 435f 	sub.w	r3, r3, #57088	; 0xdf00
2fff1aca:	429e      	cmp	r6, r3
2fff1acc:	d02a      	beq.n	2fff1b24 <stm32mp1_svc_smc_handler+0x9c>
2fff1ace:	3301      	adds	r3, #1
2fff1ad0:	429e      	cmp	r6, r3
2fff1ad2:	d02c      	beq.n	2fff1b2e <stm32mp1_svc_smc_handler+0xa6>
2fff1ad4:	4824      	ldr	r0, [pc, #144]	; (2fff1b68 <stm32mp1_svc_smc_handler+0xe0>)
2fff1ad6:	4631      	mov	r1, r6
2fff1ad8:	f000 ff00 	bl	2fff28dc <tf_log>
2fff1adc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff1ae0:	e011      	b.n	2fff1b06 <stm32mp1_svc_smc_handler+0x7e>
2fff1ae2:	4b22      	ldr	r3, [pc, #136]	; (2fff1b6c <stm32mp1_svc_smc_handler+0xe4>)
2fff1ae4:	429e      	cmp	r6, r3
2fff1ae6:	d024      	beq.n	2fff1b32 <stm32mp1_svc_smc_handler+0xaa>
2fff1ae8:	3302      	adds	r3, #2
2fff1aea:	429e      	cmp	r6, r3
2fff1aec:	d1f2      	bne.n	2fff1ad4 <stm32mp1_svc_smc_handler+0x4c>
2fff1aee:	4620      	mov	r0, r4
2fff1af0:	2301      	movs	r3, #1
2fff1af2:	9301      	str	r3, [sp, #4]
2fff1af4:	9b01      	ldr	r3, [sp, #4]
2fff1af6:	606b      	str	r3, [r5, #4]
2fff1af8:	e005      	b.n	2fff1b06 <stm32mp1_svc_smc_handler+0x7e>
2fff1afa:	ab01      	add	r3, sp, #4
2fff1afc:	f7ff fe62 	bl	2fff17c4 <bsec_main>
2fff1b00:	e7f8      	b.n	2fff1af4 <stm32mp1_svc_smc_handler+0x6c>
2fff1b02:	f7ff ff4b 	bl	2fff199c <rcc_scv_handler>
2fff1b06:	6028      	str	r0, [r5, #0]
2fff1b08:	e024      	b.n	2fff1b54 <stm32mp1_svc_smc_handler+0xcc>
2fff1b0a:	f7ff ff82 	bl	2fff1a12 <rcc_cal_scv_handler>
2fff1b0e:	e7fa      	b.n	2fff1b06 <stm32mp1_svc_smc_handler+0x7e>
2fff1b10:	aa01      	add	r2, sp, #4
2fff1b12:	f7ff ff91 	bl	2fff1a38 <rcc_opp_scv_handler>
2fff1b16:	e7ed      	b.n	2fff1af4 <stm32mp1_svc_smc_handler+0x6c>
2fff1b18:	f7ff fef6 	bl	2fff1908 <pwr_scv_handler>
2fff1b1c:	e7f3      	b.n	2fff1b06 <stm32mp1_svc_smc_handler+0x7e>
2fff1b1e:	f7ff fee7 	bl	2fff18f0 <pm_domain_scv_handler>
2fff1b22:	e7f0      	b.n	2fff1b06 <stm32mp1_svc_smc_handler+0x7e>
2fff1b24:	4620      	mov	r0, r4
2fff1b26:	f000 fc87 	bl	2fff2438 <scmi_smt_fastcall_smc_entry>
2fff1b2a:	4620      	mov	r0, r4
2fff1b2c:	e7eb      	b.n	2fff1b06 <stm32mp1_svc_smc_handler+0x7e>
2fff1b2e:	2001      	movs	r0, #1
2fff1b30:	e7f9      	b.n	2fff1b26 <stm32mp1_svc_smc_handler+0x9e>
2fff1b32:	4b0f      	ldr	r3, [pc, #60]	; (2fff1b70 <stm32mp1_svc_smc_handler+0xe8>)
2fff1b34:	60eb      	str	r3, [r5, #12]
2fff1b36:	f103 5361 	add.w	r3, r3, #943718400	; 0x38400000
2fff1b3a:	f503 130f 	add.w	r3, r3, #2342912	; 0x23c000
2fff1b3e:	f603 2331 	addw	r3, r3, #2609	; 0xa31
2fff1b42:	60ab      	str	r3, [r5, #8]
2fff1b44:	f1a3 7344 	sub.w	r3, r3, #51380224	; 0x3100000
2fff1b48:	f5a3 33e1 	sub.w	r3, r3, #115200	; 0x1c200
2fff1b4c:	3b96      	subs	r3, #150	; 0x96
2fff1b4e:	606b      	str	r3, [r5, #4]
2fff1b50:	4b08      	ldr	r3, [pc, #32]	; (2fff1b74 <stm32mp1_svc_smc_handler+0xec>)
2fff1b52:	602b      	str	r3, [r5, #0]
2fff1b54:	4628      	mov	r0, r5
2fff1b56:	b002      	add	sp, #8
2fff1b58:	bd70      	pop	{r4, r5, r6, pc}
2fff1b5a:	200d      	movs	r0, #13
2fff1b5c:	e7d3      	b.n	2fff1b06 <stm32mp1_svc_smc_handler+0x7e>
2fff1b5e:	bf00      	nop
2fff1b60:	82001009 	.word	0x82001009
2fff1b64:	8200ff00 	.word	0x8200ff00
2fff1b68:	2fffac23 	.word	0x2fffac23
2fff1b6c:	8200ff01 	.word	0x8200ff01
2fff1b70:	14c29459 	.word	0x14c29459
2fff1b74:	50aa78a7 	.word	0x50aa78a7

2fff1b78 <discover_list_protocols>:
2fff1b78:	6903      	ldr	r3, [r0, #16]
2fff1b7a:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff1b7c:	2b04      	cmp	r3, #4
2fff1b7e:	b087      	sub	sp, #28
2fff1b80:	f04f 0400 	mov.w	r4, #0
2fff1b84:	4605      	mov	r5, r0
2fff1b86:	e9cd 4400 	strd	r4, r4, [sp]
2fff1b8a:	e9cd 4402 	strd	r4, r4, [sp, #8]
2fff1b8e:	9404      	str	r4, [sp, #16]
2fff1b90:	9405      	str	r4, [sp, #20]
2fff1b92:	d005      	beq.n	2fff1ba0 <discover_list_protocols+0x28>
2fff1b94:	f06f 0109 	mvn.w	r1, #9
2fff1b98:	f000 fabc 	bl	2fff2114 <scmi_status_response>
2fff1b9c:	b007      	add	sp, #28
2fff1b9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff1ba0:	6983      	ldr	r3, [r0, #24]
2fff1ba2:	2b10      	cmp	r3, #16
2fff1ba4:	d803      	bhi.n	2fff1bae <discover_list_protocols+0x36>
2fff1ba6:	4816      	ldr	r0, [pc, #88]	; (2fff1c00 <discover_list_protocols+0x88>)
2fff1ba8:	2198      	movs	r1, #152	; 0x98
2fff1baa:	f007 ff89 	bl	2fff9ac0 <__assert>
2fff1bae:	68c7      	ldr	r7, [r0, #12]
2fff1bb0:	6800      	ldr	r0, [r0, #0]
2fff1bb2:	f000 fcb7 	bl	2fff2524 <plat_scmi_protocol_list>
2fff1bb6:	4606      	mov	r6, r0
2fff1bb8:	b9d8      	cbnz	r0, 2fff1bf2 <discover_list_protocols+0x7a>
2fff1bba:	4604      	mov	r4, r0
2fff1bbc:	683b      	ldr	r3, [r7, #0]
2fff1bbe:	42a3      	cmp	r3, r4
2fff1bc0:	d21b      	bcs.n	2fff1bfa <discover_list_protocols+0x82>
2fff1bc2:	1ae4      	subs	r4, r4, r3
2fff1bc4:	2c08      	cmp	r4, #8
2fff1bc6:	bf28      	it	cs
2fff1bc8:	2408      	movcs	r4, #8
2fff1bca:	9401      	str	r4, [sp, #4]
2fff1bcc:	2208      	movs	r2, #8
2fff1bce:	eb0d 0002 	add.w	r0, sp, r2
2fff1bd2:	4669      	mov	r1, sp
2fff1bd4:	f007 ff9c 	bl	2fff9b10 <memcpy>
2fff1bd8:	6839      	ldr	r1, [r7, #0]
2fff1bda:	4622      	mov	r2, r4
2fff1bdc:	a804      	add	r0, sp, #16
2fff1bde:	4431      	add	r1, r6
2fff1be0:	f007 ff96 	bl	2fff9b10 <memcpy>
2fff1be4:	2210      	movs	r2, #16
2fff1be6:	a902      	add	r1, sp, #8
2fff1be8:	4628      	mov	r0, r5
2fff1bea:	f000 faab 	bl	2fff2144 <scmi_write_response>
2fff1bee:	e7d5      	b.n	2fff1b9c <discover_list_protocols+0x24>
2fff1bf0:	3401      	adds	r4, #1
2fff1bf2:	5d33      	ldrb	r3, [r6, r4]
2fff1bf4:	2b00      	cmp	r3, #0
2fff1bf6:	d1fb      	bne.n	2fff1bf0 <discover_list_protocols+0x78>
2fff1bf8:	e7e0      	b.n	2fff1bbc <discover_list_protocols+0x44>
2fff1bfa:	2400      	movs	r4, #0
2fff1bfc:	e7e5      	b.n	2fff1bca <discover_list_protocols+0x52>
2fff1bfe:	bf00      	nop
2fff1c00:	2fffac60 	.word	0x2fffac60

2fff1c04 <discover_implementation_version>:
2fff1c04:	2300      	movs	r3, #0
2fff1c06:	b507      	push	{r0, r1, r2, lr}
2fff1c08:	e9cd 3300 	strd	r3, r3, [sp]
2fff1c0c:	6903      	ldr	r3, [r0, #16]
2fff1c0e:	b133      	cbz	r3, 2fff1c1e <discover_implementation_version+0x1a>
2fff1c10:	f06f 0109 	mvn.w	r1, #9
2fff1c14:	f000 fa7e 	bl	2fff2114 <scmi_status_response>
2fff1c18:	b003      	add	sp, #12
2fff1c1a:	f85d fb04 	ldr.w	pc, [sp], #4
2fff1c1e:	2208      	movs	r2, #8
2fff1c20:	4669      	mov	r1, sp
2fff1c22:	f000 fa8f 	bl	2fff2144 <scmi_write_response>
2fff1c26:	e7f7      	b.n	2fff1c18 <discover_implementation_version+0x14>

2fff1c28 <report_message_attributes>:
2fff1c28:	b507      	push	{r0, r1, r2, lr}
2fff1c2a:	2200      	movs	r2, #0
2fff1c2c:	e9cd 2200 	strd	r2, r2, [sp]
2fff1c30:	6902      	ldr	r2, [r0, #16]
2fff1c32:	4603      	mov	r3, r0
2fff1c34:	68c1      	ldr	r1, [r0, #12]
2fff1c36:	2a04      	cmp	r2, #4
2fff1c38:	d004      	beq.n	2fff1c44 <report_message_attributes+0x1c>
2fff1c3a:	f06f 0109 	mvn.w	r1, #9
2fff1c3e:	f000 fa69 	bl	2fff2114 <scmi_status_response>
2fff1c42:	e00a      	b.n	2fff1c5a <report_message_attributes+0x32>
2fff1c44:	680a      	ldr	r2, [r1, #0]
2fff1c46:	2a06      	cmp	r2, #6
2fff1c48:	d80a      	bhi.n	2fff1c60 <report_message_attributes+0x38>
2fff1c4a:	4907      	ldr	r1, [pc, #28]	; (2fff1c68 <report_message_attributes+0x40>)
2fff1c4c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
2fff1c50:	b132      	cbz	r2, 2fff1c60 <report_message_attributes+0x38>
2fff1c52:	2208      	movs	r2, #8
2fff1c54:	4669      	mov	r1, sp
2fff1c56:	f000 fa75 	bl	2fff2144 <scmi_write_response>
2fff1c5a:	b003      	add	sp, #12
2fff1c5c:	f85d fb04 	ldr.w	pc, [sp], #4
2fff1c60:	f06f 0103 	mvn.w	r1, #3
2fff1c64:	4618      	mov	r0, r3
2fff1c66:	e7ea      	b.n	2fff1c3e <report_message_attributes+0x16>
2fff1c68:	2fffac7c 	.word	0x2fffac7c

2fff1c6c <report_version>:
2fff1c6c:	f44f 3300 	mov.w	r3, #131072	; 0x20000
2fff1c70:	b507      	push	{r0, r1, r2, lr}
2fff1c72:	2200      	movs	r2, #0
2fff1c74:	e9cd 2300 	strd	r2, r3, [sp]
2fff1c78:	6903      	ldr	r3, [r0, #16]
2fff1c7a:	b133      	cbz	r3, 2fff1c8a <report_version+0x1e>
2fff1c7c:	f06f 0109 	mvn.w	r1, #9
2fff1c80:	f000 fa48 	bl	2fff2114 <scmi_status_response>
2fff1c84:	b003      	add	sp, #12
2fff1c86:	f85d fb04 	ldr.w	pc, [sp], #4
2fff1c8a:	2208      	movs	r2, #8
2fff1c8c:	4669      	mov	r1, sp
2fff1c8e:	f000 fa59 	bl	2fff2144 <scmi_write_response>
2fff1c92:	e7f7      	b.n	2fff1c84 <report_version+0x18>

2fff1c94 <report_attributes>:
2fff1c94:	b513      	push	{r0, r1, r4, lr}
2fff1c96:	4604      	mov	r4, r0
2fff1c98:	f000 fc42 	bl	2fff2520 <plat_scmi_protocol_count>
2fff1c9c:	2300      	movs	r3, #0
2fff1c9e:	b2c0      	uxtb	r0, r0
2fff1ca0:	9300      	str	r3, [sp, #0]
2fff1ca2:	6923      	ldr	r3, [r4, #16]
2fff1ca4:	9001      	str	r0, [sp, #4]
2fff1ca6:	b133      	cbz	r3, 2fff1cb6 <report_attributes+0x22>
2fff1ca8:	f06f 0109 	mvn.w	r1, #9
2fff1cac:	4620      	mov	r0, r4
2fff1cae:	f000 fa31 	bl	2fff2114 <scmi_status_response>
2fff1cb2:	b002      	add	sp, #8
2fff1cb4:	bd10      	pop	{r4, pc}
2fff1cb6:	2208      	movs	r2, #8
2fff1cb8:	4669      	mov	r1, sp
2fff1cba:	4620      	mov	r0, r4
2fff1cbc:	f000 fa42 	bl	2fff2144 <scmi_write_response>
2fff1cc0:	e7f7      	b.n	2fff1cb2 <report_attributes+0x1e>
	...

2fff1cc4 <discover_sub_vendor>:
2fff1cc4:	b530      	push	{r4, r5, lr}
2fff1cc6:	b087      	sub	sp, #28
2fff1cc8:	4604      	mov	r4, r0
2fff1cca:	f000 fc25 	bl	2fff2518 <plat_scmi_sub_vendor_name>
2fff1cce:	4605      	mov	r5, r0
2fff1cd0:	2214      	movs	r2, #20
2fff1cd2:	2100      	movs	r1, #0
2fff1cd4:	a801      	add	r0, sp, #4
2fff1cd6:	f007 ff3c 	bl	2fff9b52 <memset>
2fff1cda:	6923      	ldr	r3, [r4, #16]
2fff1cdc:	b133      	cbz	r3, 2fff1cec <discover_sub_vendor+0x28>
2fff1cde:	f06f 0109 	mvn.w	r1, #9
2fff1ce2:	4620      	mov	r0, r4
2fff1ce4:	f000 fa16 	bl	2fff2114 <scmi_status_response>
2fff1ce8:	b007      	add	sp, #28
2fff1cea:	bd30      	pop	{r4, r5, pc}
2fff1cec:	4628      	mov	r0, r5
2fff1cee:	f008 f894 	bl	2fff9e1a <strlen>
2fff1cf2:	280f      	cmp	r0, #15
2fff1cf4:	d903      	bls.n	2fff1cfe <discover_sub_vendor+0x3a>
2fff1cf6:	4807      	ldr	r0, [pc, #28]	; (2fff1d14 <discover_sub_vendor+0x50>)
2fff1cf8:	2166      	movs	r1, #102	; 0x66
2fff1cfa:	f007 fee1 	bl	2fff9ac0 <__assert>
2fff1cfe:	4629      	mov	r1, r5
2fff1d00:	2210      	movs	r2, #16
2fff1d02:	a802      	add	r0, sp, #8
2fff1d04:	f008 f86d 	bl	2fff9de2 <strlcpy>
2fff1d08:	2214      	movs	r2, #20
2fff1d0a:	a901      	add	r1, sp, #4
2fff1d0c:	4620      	mov	r0, r4
2fff1d0e:	f000 fa19 	bl	2fff2144 <scmi_write_response>
2fff1d12:	e7e9      	b.n	2fff1ce8 <discover_sub_vendor+0x24>
2fff1d14:	2fffac60 	.word	0x2fffac60

2fff1d18 <discover_vendor>:
2fff1d18:	b530      	push	{r4, r5, lr}
2fff1d1a:	b087      	sub	sp, #28
2fff1d1c:	4604      	mov	r4, r0
2fff1d1e:	f000 fbf7 	bl	2fff2510 <plat_scmi_vendor_name>
2fff1d22:	4605      	mov	r5, r0
2fff1d24:	2214      	movs	r2, #20
2fff1d26:	2100      	movs	r1, #0
2fff1d28:	a801      	add	r0, sp, #4
2fff1d2a:	f007 ff12 	bl	2fff9b52 <memset>
2fff1d2e:	6923      	ldr	r3, [r4, #16]
2fff1d30:	b133      	cbz	r3, 2fff1d40 <discover_vendor+0x28>
2fff1d32:	f06f 0109 	mvn.w	r1, #9
2fff1d36:	4620      	mov	r0, r4
2fff1d38:	f000 f9ec 	bl	2fff2114 <scmi_status_response>
2fff1d3c:	b007      	add	sp, #28
2fff1d3e:	bd30      	pop	{r4, r5, pc}
2fff1d40:	4628      	mov	r0, r5
2fff1d42:	f008 f86a 	bl	2fff9e1a <strlen>
2fff1d46:	280f      	cmp	r0, #15
2fff1d48:	d903      	bls.n	2fff1d52 <discover_vendor+0x3a>
2fff1d4a:	4807      	ldr	r0, [pc, #28]	; (2fff1d68 <discover_vendor+0x50>)
2fff1d4c:	2155      	movs	r1, #85	; 0x55
2fff1d4e:	f007 feb7 	bl	2fff9ac0 <__assert>
2fff1d52:	4629      	mov	r1, r5
2fff1d54:	2210      	movs	r2, #16
2fff1d56:	a802      	add	r0, sp, #8
2fff1d58:	f008 f843 	bl	2fff9de2 <strlcpy>
2fff1d5c:	2214      	movs	r2, #20
2fff1d5e:	a901      	add	r1, sp, #4
2fff1d60:	4620      	mov	r0, r4
2fff1d62:	f000 f9ef 	bl	2fff2144 <scmi_write_response>
2fff1d66:	e7e9      	b.n	2fff1d3c <discover_vendor+0x24>
2fff1d68:	2fffac60 	.word	0x2fffac60

2fff1d6c <scmi_msg_get_base_handler>:
2fff1d6c:	6883      	ldr	r3, [r0, #8]
2fff1d6e:	2b06      	cmp	r3, #6
2fff1d70:	d809      	bhi.n	2fff1d86 <scmi_msg_get_base_handler+0x1a>
2fff1d72:	2207      	movs	r2, #7
2fff1d74:	4293      	cmp	r3, r2
2fff1d76:	bf28      	it	cs
2fff1d78:	2300      	movcs	r3, #0
2fff1d7a:	f3af 8014 	csdb
2fff1d7e:	4a03      	ldr	r2, [pc, #12]	; (2fff1d8c <scmi_msg_get_base_handler+0x20>)
2fff1d80:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
2fff1d84:	4770      	bx	lr
2fff1d86:	2000      	movs	r0, #0
2fff1d88:	4770      	bx	lr
2fff1d8a:	bf00      	nop
2fff1d8c:	2fffac7c 	.word	0x2fffac7c

2fff1d90 <confine_array_index>:
2fff1d90:	4288      	cmp	r0, r1
2fff1d92:	bf28      	it	cs
2fff1d94:	2000      	movcs	r0, #0
2fff1d96:	f3af 8014 	csdb
2fff1d9a:	4770      	bx	lr

2fff1d9c <report_message_attributes>:
2fff1d9c:	b507      	push	{r0, r1, r2, lr}
2fff1d9e:	2200      	movs	r2, #0
2fff1da0:	e9cd 2200 	strd	r2, r2, [sp]
2fff1da4:	6902      	ldr	r2, [r0, #16]
2fff1da6:	4603      	mov	r3, r0
2fff1da8:	68c1      	ldr	r1, [r0, #12]
2fff1daa:	2a04      	cmp	r2, #4
2fff1dac:	d004      	beq.n	2fff1db8 <report_message_attributes+0x1c>
2fff1dae:	f06f 0109 	mvn.w	r1, #9
2fff1db2:	f000 f9af 	bl	2fff2114 <scmi_status_response>
2fff1db6:	e00a      	b.n	2fff1dce <report_message_attributes+0x32>
2fff1db8:	680a      	ldr	r2, [r1, #0]
2fff1dba:	2a07      	cmp	r2, #7
2fff1dbc:	d80a      	bhi.n	2fff1dd4 <report_message_attributes+0x38>
2fff1dbe:	4907      	ldr	r1, [pc, #28]	; (2fff1ddc <report_message_attributes+0x40>)
2fff1dc0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
2fff1dc4:	b132      	cbz	r2, 2fff1dd4 <report_message_attributes+0x38>
2fff1dc6:	2208      	movs	r2, #8
2fff1dc8:	4669      	mov	r1, sp
2fff1dca:	f000 f9bb 	bl	2fff2144 <scmi_write_response>
2fff1dce:	b003      	add	sp, #12
2fff1dd0:	f85d fb04 	ldr.w	pc, [sp], #4
2fff1dd4:	f06f 0103 	mvn.w	r1, #3
2fff1dd8:	4618      	mov	r0, r3
2fff1dda:	e7ea      	b.n	2fff1db2 <report_message_attributes+0x16>
2fff1ddc:	2fffacb4 	.word	0x2fffacb4

2fff1de0 <report_version>:
2fff1de0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
2fff1de4:	b507      	push	{r0, r1, r2, lr}
2fff1de6:	2200      	movs	r2, #0
2fff1de8:	e9cd 2300 	strd	r2, r3, [sp]
2fff1dec:	6903      	ldr	r3, [r0, #16]
2fff1dee:	b133      	cbz	r3, 2fff1dfe <report_version+0x1e>
2fff1df0:	f06f 0109 	mvn.w	r1, #9
2fff1df4:	f000 f98e 	bl	2fff2114 <scmi_status_response>
2fff1df8:	b003      	add	sp, #12
2fff1dfa:	f85d fb04 	ldr.w	pc, [sp], #4
2fff1dfe:	2208      	movs	r2, #8
2fff1e00:	4669      	mov	r1, sp
2fff1e02:	f000 f99f 	bl	2fff2144 <scmi_write_response>
2fff1e06:	e7f7      	b.n	2fff1df8 <report_version+0x18>

2fff1e08 <write_rate_desc_array_in_buffer>:
2fff1e08:	f010 0303 	ands.w	r3, r0, #3
2fff1e0c:	b570      	push	{r4, r5, r6, lr}
2fff1e0e:	d104      	bne.n	2fff1e1a <write_rate_desc_array_in_buffer+0x12>
2fff1e10:	1d04      	adds	r4, r0, #4
2fff1e12:	461d      	mov	r5, r3
2fff1e14:	4293      	cmp	r3, r2
2fff1e16:	d105      	bne.n	2fff1e24 <write_rate_desc_array_in_buffer+0x1c>
2fff1e18:	bd70      	pop	{r4, r5, r6, pc}
2fff1e1a:	4806      	ldr	r0, [pc, #24]	; (2fff1e34 <write_rate_desc_array_in_buffer+0x2c>)
2fff1e1c:	f240 1111 	movw	r1, #273	; 0x111
2fff1e20:	f007 fe4e 	bl	2fff9ac0 <__assert>
2fff1e24:	f851 6023 	ldr.w	r6, [r1, r3, lsl #2]
2fff1e28:	f840 6033 	str.w	r6, [r0, r3, lsl #3]
2fff1e2c:	f844 5033 	str.w	r5, [r4, r3, lsl #3]
2fff1e30:	3301      	adds	r3, #1
2fff1e32:	e7ef      	b.n	2fff1e14 <write_rate_desc_array_in_buffer+0xc>
2fff1e34:	2fffac98 	.word	0x2fffac98

2fff1e38 <report_attributes>:
2fff1e38:	b513      	push	{r0, r1, r4, lr}
2fff1e3a:	4604      	mov	r4, r0
2fff1e3c:	6800      	ldr	r0, [r0, #0]
2fff1e3e:	f000 fb75 	bl	2fff252c <plat_scmi_clock_count>
2fff1e42:	2300      	movs	r3, #0
2fff1e44:	b280      	uxth	r0, r0
2fff1e46:	9300      	str	r3, [sp, #0]
2fff1e48:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
2fff1e4c:	6923      	ldr	r3, [r4, #16]
2fff1e4e:	9001      	str	r0, [sp, #4]
2fff1e50:	b133      	cbz	r3, 2fff1e60 <report_attributes+0x28>
2fff1e52:	f06f 0109 	mvn.w	r1, #9
2fff1e56:	4620      	mov	r0, r4
2fff1e58:	f000 f95c 	bl	2fff2114 <scmi_status_response>
2fff1e5c:	b002      	add	sp, #8
2fff1e5e:	bd10      	pop	{r4, pc}
2fff1e60:	2208      	movs	r2, #8
2fff1e62:	4669      	mov	r1, sp
2fff1e64:	4620      	mov	r0, r4
2fff1e66:	f000 f96d 	bl	2fff2144 <scmi_write_response>
2fff1e6a:	e7f7      	b.n	2fff1e5c <report_attributes+0x24>

2fff1e6c <scmi_clock_describe_rates>:
2fff1e6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2fff1e70:	b08f      	sub	sp, #60	; 0x3c
2fff1e72:	f8d0 8010 	ldr.w	r8, [r0, #16]
2fff1e76:	2600      	movs	r6, #0
2fff1e78:	f8d0 900c 	ldr.w	r9, [r0, #12]
2fff1e7c:	4604      	mov	r4, r0
2fff1e7e:	f1b8 0f08 	cmp.w	r8, #8
2fff1e82:	e9cd 6602 	strd	r6, r6, [sp, #8]
2fff1e86:	d004      	beq.n	2fff1e92 <scmi_clock_describe_rates+0x26>
2fff1e88:	f06f 0109 	mvn.w	r1, #9
2fff1e8c:	f000 f942 	bl	2fff2114 <scmi_status_response>
2fff1e90:	e048      	b.n	2fff1f24 <scmi_clock_describe_rates+0xb8>
2fff1e92:	f8d9 5000 	ldr.w	r5, [r9]
2fff1e96:	6800      	ldr	r0, [r0, #0]
2fff1e98:	f000 fb48 	bl	2fff252c <plat_scmi_clock_count>
2fff1e9c:	4285      	cmp	r5, r0
2fff1e9e:	d303      	bcc.n	2fff1ea8 <scmi_clock_describe_rates+0x3c>
2fff1ea0:	f06f 0101 	mvn.w	r1, #1
2fff1ea4:	4620      	mov	r0, r4
2fff1ea6:	e7f1      	b.n	2fff1e8c <scmi_clock_describe_rates+0x20>
2fff1ea8:	f8d9 5000 	ldr.w	r5, [r9]
2fff1eac:	6820      	ldr	r0, [r4, #0]
2fff1eae:	f000 fb3d 	bl	2fff252c <plat_scmi_clock_count>
2fff1eb2:	4601      	mov	r1, r0
2fff1eb4:	4628      	mov	r0, r5
2fff1eb6:	f7ff ff6b 	bl	2fff1d90 <confine_array_index>
2fff1eba:	4601      	mov	r1, r0
2fff1ebc:	4607      	mov	r7, r0
2fff1ebe:	6820      	ldr	r0, [r4, #0]
2fff1ec0:	466b      	mov	r3, sp
2fff1ec2:	4632      	mov	r2, r6
2fff1ec4:	f000 fb4c 	bl	2fff2560 <plat_scmi_clock_rates_array>
2fff1ec8:	4605      	mov	r5, r0
2fff1eca:	bb70      	cbnz	r0, 2fff1f2a <scmi_clock_describe_rates+0xbe>
2fff1ecc:	f8d9 3004 	ldr.w	r3, [r9, #4]
2fff1ed0:	aa04      	add	r2, sp, #16
2fff1ed2:	9e00      	ldr	r6, [sp, #0]
2fff1ed4:	4639      	mov	r1, r7
2fff1ed6:	6820      	ldr	r0, [r4, #0]
2fff1ed8:	1af6      	subs	r6, r6, r3
2fff1eda:	ab01      	add	r3, sp, #4
2fff1edc:	2e0a      	cmp	r6, #10
2fff1ede:	46b1      	mov	r9, r6
2fff1ee0:	bf28      	it	cs
2fff1ee2:	f04f 090a 	movcs.w	r9, #10
2fff1ee6:	f8cd 9004 	str.w	r9, [sp, #4]
2fff1eea:	f000 fb39 	bl	2fff2560 <plat_scmi_clock_rates_array>
2fff1eee:	4605      	mov	r5, r0
2fff1ef0:	2800      	cmp	r0, #0
2fff1ef2:	d137      	bne.n	2fff1f64 <scmi_clock_describe_rates+0xf8>
2fff1ef4:	6960      	ldr	r0, [r4, #20]
2fff1ef6:	a904      	add	r1, sp, #16
2fff1ef8:	9a01      	ldr	r2, [sp, #4]
2fff1efa:	eba6 0609 	sub.w	r6, r6, r9
2fff1efe:	3008      	adds	r0, #8
2fff1f00:	f7ff ff82 	bl	2fff1e08 <write_rate_desc_array_in_buffer>
2fff1f04:	9b01      	ldr	r3, [sp, #4]
2fff1f06:	4642      	mov	r2, r8
2fff1f08:	6960      	ldr	r0, [r4, #20]
2fff1f0a:	a902      	add	r1, sp, #8
2fff1f0c:	f3c3 030b 	ubfx	r3, r3, #0, #12
2fff1f10:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
2fff1f14:	e9cd 5302 	strd	r5, r3, [sp, #8]
2fff1f18:	f007 fdfa 	bl	2fff9b10 <memcpy>
2fff1f1c:	9b01      	ldr	r3, [sp, #4]
2fff1f1e:	3301      	adds	r3, #1
2fff1f20:	00db      	lsls	r3, r3, #3
2fff1f22:	61e3      	str	r3, [r4, #28]
2fff1f24:	b00f      	add	sp, #60	; 0x3c
2fff1f26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff1f2a:	1c43      	adds	r3, r0, #1
2fff1f2c:	d11a      	bne.n	2fff1f64 <scmi_clock_describe_rates+0xf8>
2fff1f2e:	6820      	ldr	r0, [r4, #0]
2fff1f30:	aa04      	add	r2, sp, #16
2fff1f32:	9606      	str	r6, [sp, #24]
2fff1f34:	4639      	mov	r1, r7
2fff1f36:	e9cd 6604 	strd	r6, r6, [sp, #16]
2fff1f3a:	f000 fb14 	bl	2fff2566 <plat_scmi_clock_rates_by_step>
2fff1f3e:	4605      	mov	r5, r0
2fff1f40:	b980      	cbnz	r0, 2fff1f64 <scmi_clock_describe_rates+0xf8>
2fff1f42:	6960      	ldr	r0, [r4, #20]
2fff1f44:	2203      	movs	r2, #3
2fff1f46:	a904      	add	r1, sp, #16
2fff1f48:	3008      	adds	r0, #8
2fff1f4a:	f7ff ff5d 	bl	2fff1e08 <write_rate_desc_array_in_buffer>
2fff1f4e:	6960      	ldr	r0, [r4, #20]
2fff1f50:	f241 0303 	movw	r3, #4099	; 0x1003
2fff1f54:	4642      	mov	r2, r8
2fff1f56:	a902      	add	r1, sp, #8
2fff1f58:	e9cd 5302 	strd	r5, r3, [sp, #8]
2fff1f5c:	f007 fdd8 	bl	2fff9b10 <memcpy>
2fff1f60:	2320      	movs	r3, #32
2fff1f62:	e7de      	b.n	2fff1f22 <scmi_clock_describe_rates+0xb6>
2fff1f64:	4629      	mov	r1, r5
2fff1f66:	e79d      	b.n	2fff1ea4 <scmi_clock_describe_rates+0x38>

2fff1f68 <scmi_clock_rate_get>:
2fff1f68:	6903      	ldr	r3, [r0, #16]
2fff1f6a:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff1f6c:	2b04      	cmp	r3, #4
2fff1f6e:	68c6      	ldr	r6, [r0, #12]
2fff1f70:	b085      	sub	sp, #20
2fff1f72:	f04f 0500 	mov.w	r5, #0
2fff1f76:	4604      	mov	r4, r0
2fff1f78:	9501      	str	r5, [sp, #4]
2fff1f7a:	9502      	str	r5, [sp, #8]
2fff1f7c:	9503      	str	r5, [sp, #12]
2fff1f7e:	d005      	beq.n	2fff1f8c <scmi_clock_rate_get+0x24>
2fff1f80:	f06f 0109 	mvn.w	r1, #9
2fff1f84:	f000 f8c6 	bl	2fff2114 <scmi_status_response>
2fff1f88:	b005      	add	sp, #20
2fff1f8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff1f8c:	6837      	ldr	r7, [r6, #0]
2fff1f8e:	6800      	ldr	r0, [r0, #0]
2fff1f90:	f000 facc 	bl	2fff252c <plat_scmi_clock_count>
2fff1f94:	4287      	cmp	r7, r0
2fff1f96:	d303      	bcc.n	2fff1fa0 <scmi_clock_rate_get+0x38>
2fff1f98:	f06f 0101 	mvn.w	r1, #1
2fff1f9c:	4620      	mov	r0, r4
2fff1f9e:	e7f1      	b.n	2fff1f84 <scmi_clock_rate_get+0x1c>
2fff1fa0:	6836      	ldr	r6, [r6, #0]
2fff1fa2:	6820      	ldr	r0, [r4, #0]
2fff1fa4:	f000 fac2 	bl	2fff252c <plat_scmi_clock_count>
2fff1fa8:	4601      	mov	r1, r0
2fff1faa:	4630      	mov	r0, r6
2fff1fac:	f7ff fef0 	bl	2fff1d90 <confine_array_index>
2fff1fb0:	4601      	mov	r1, r0
2fff1fb2:	6820      	ldr	r0, [r4, #0]
2fff1fb4:	f000 fb1d 	bl	2fff25f2 <plat_scmi_clock_get_rate>
2fff1fb8:	9002      	str	r0, [sp, #8]
2fff1fba:	220c      	movs	r2, #12
2fff1fbc:	9503      	str	r5, [sp, #12]
2fff1fbe:	a901      	add	r1, sp, #4
2fff1fc0:	4620      	mov	r0, r4
2fff1fc2:	f000 f8bf 	bl	2fff2144 <scmi_write_response>
2fff1fc6:	e7df      	b.n	2fff1f88 <scmi_clock_rate_get+0x20>

2fff1fc8 <scmi_clock_rate_set>:
2fff1fc8:	6903      	ldr	r3, [r0, #16]
2fff1fca:	b570      	push	{r4, r5, r6, lr}
2fff1fcc:	2b10      	cmp	r3, #16
2fff1fce:	4604      	mov	r4, r0
2fff1fd0:	d005      	beq.n	2fff1fde <scmi_clock_rate_set+0x16>
2fff1fd2:	f06f 0109 	mvn.w	r1, #9
2fff1fd6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff1fda:	f000 b89b 	b.w	2fff2114 <scmi_status_response>
2fff1fde:	68c5      	ldr	r5, [r0, #12]
2fff1fe0:	6800      	ldr	r0, [r0, #0]
2fff1fe2:	686e      	ldr	r6, [r5, #4]
2fff1fe4:	f000 faa2 	bl	2fff252c <plat_scmi_clock_count>
2fff1fe8:	4286      	cmp	r6, r0
2fff1fea:	d303      	bcc.n	2fff1ff4 <scmi_clock_rate_set+0x2c>
2fff1fec:	f06f 0101 	mvn.w	r1, #1
2fff1ff0:	4620      	mov	r0, r4
2fff1ff2:	e7f0      	b.n	2fff1fd6 <scmi_clock_rate_set+0xe>
2fff1ff4:	686e      	ldr	r6, [r5, #4]
2fff1ff6:	6820      	ldr	r0, [r4, #0]
2fff1ff8:	f000 fa98 	bl	2fff252c <plat_scmi_clock_count>
2fff1ffc:	4601      	mov	r1, r0
2fff1ffe:	4630      	mov	r0, r6
2fff2000:	f7ff fec6 	bl	2fff1d90 <confine_array_index>
2fff2004:	68aa      	ldr	r2, [r5, #8]
2fff2006:	4601      	mov	r1, r0
2fff2008:	6820      	ldr	r0, [r4, #0]
2fff200a:	f000 face 	bl	2fff25aa <plat_scmi_clock_set_rate>
2fff200e:	4601      	mov	r1, r0
2fff2010:	e7ee      	b.n	2fff1ff0 <scmi_clock_rate_set+0x28>
	...

2fff2014 <scmi_clock_attributes>:
2fff2014:	b570      	push	{r4, r5, r6, lr}
2fff2016:	4604      	mov	r4, r0
2fff2018:	68c5      	ldr	r5, [r0, #12]
2fff201a:	b086      	sub	sp, #24
2fff201c:	2218      	movs	r2, #24
2fff201e:	2100      	movs	r1, #0
2fff2020:	4668      	mov	r0, sp
2fff2022:	f007 fd96 	bl	2fff9b52 <memset>
2fff2026:	6923      	ldr	r3, [r4, #16]
2fff2028:	2b04      	cmp	r3, #4
2fff202a:	d006      	beq.n	2fff203a <scmi_clock_attributes+0x26>
2fff202c:	f06f 0109 	mvn.w	r1, #9
2fff2030:	4620      	mov	r0, r4
2fff2032:	f000 f86f 	bl	2fff2114 <scmi_status_response>
2fff2036:	b006      	add	sp, #24
2fff2038:	bd70      	pop	{r4, r5, r6, pc}
2fff203a:	682e      	ldr	r6, [r5, #0]
2fff203c:	6820      	ldr	r0, [r4, #0]
2fff203e:	f000 fa75 	bl	2fff252c <plat_scmi_clock_count>
2fff2042:	4286      	cmp	r6, r0
2fff2044:	d302      	bcc.n	2fff204c <scmi_clock_attributes+0x38>
2fff2046:	f06f 0101 	mvn.w	r1, #1
2fff204a:	e7f1      	b.n	2fff2030 <scmi_clock_attributes+0x1c>
2fff204c:	682d      	ldr	r5, [r5, #0]
2fff204e:	6820      	ldr	r0, [r4, #0]
2fff2050:	f000 fa6c 	bl	2fff252c <plat_scmi_clock_count>
2fff2054:	4601      	mov	r1, r0
2fff2056:	4628      	mov	r0, r5
2fff2058:	f7ff fe9a 	bl	2fff1d90 <confine_array_index>
2fff205c:	4601      	mov	r1, r0
2fff205e:	4605      	mov	r5, r0
2fff2060:	6820      	ldr	r0, [r4, #0]
2fff2062:	f000 fa6f 	bl	2fff2544 <plat_scmi_clock_get_name>
2fff2066:	4606      	mov	r6, r0
2fff2068:	b910      	cbnz	r0, 2fff2070 <scmi_clock_attributes+0x5c>
2fff206a:	f06f 0103 	mvn.w	r1, #3
2fff206e:	e7df      	b.n	2fff2030 <scmi_clock_attributes+0x1c>
2fff2070:	f007 fed3 	bl	2fff9e1a <strlen>
2fff2074:	280f      	cmp	r0, #15
2fff2076:	d903      	bls.n	2fff2080 <scmi_clock_attributes+0x6c>
2fff2078:	4809      	ldr	r0, [pc, #36]	; (2fff20a0 <scmi_clock_attributes+0x8c>)
2fff207a:	21a0      	movs	r1, #160	; 0xa0
2fff207c:	f007 fd20 	bl	2fff9ac0 <__assert>
2fff2080:	2210      	movs	r2, #16
2fff2082:	4631      	mov	r1, r6
2fff2084:	a802      	add	r0, sp, #8
2fff2086:	f007 feac 	bl	2fff9de2 <strlcpy>
2fff208a:	6820      	ldr	r0, [r4, #0]
2fff208c:	4629      	mov	r1, r5
2fff208e:	f000 fac0 	bl	2fff2612 <plat_scmi_clock_get_state>
2fff2092:	9001      	str	r0, [sp, #4]
2fff2094:	2218      	movs	r2, #24
2fff2096:	4669      	mov	r1, sp
2fff2098:	4620      	mov	r0, r4
2fff209a:	f000 f853 	bl	2fff2144 <scmi_write_response>
2fff209e:	e7ca      	b.n	2fff2036 <scmi_clock_attributes+0x22>
2fff20a0:	2fffac98 	.word	0x2fffac98

2fff20a4 <scmi_clock_config_set>:
2fff20a4:	6903      	ldr	r3, [r0, #16]
2fff20a6:	b570      	push	{r4, r5, r6, lr}
2fff20a8:	2b08      	cmp	r3, #8
2fff20aa:	4604      	mov	r4, r0
2fff20ac:	d005      	beq.n	2fff20ba <scmi_clock_config_set+0x16>
2fff20ae:	f06f 0109 	mvn.w	r1, #9
2fff20b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff20b6:	f000 b82d 	b.w	2fff2114 <scmi_status_response>
2fff20ba:	68c5      	ldr	r5, [r0, #12]
2fff20bc:	6800      	ldr	r0, [r0, #0]
2fff20be:	682e      	ldr	r6, [r5, #0]
2fff20c0:	f000 fa34 	bl	2fff252c <plat_scmi_clock_count>
2fff20c4:	4286      	cmp	r6, r0
2fff20c6:	d303      	bcc.n	2fff20d0 <scmi_clock_config_set+0x2c>
2fff20c8:	f06f 0101 	mvn.w	r1, #1
2fff20cc:	4620      	mov	r0, r4
2fff20ce:	e7f0      	b.n	2fff20b2 <scmi_clock_config_set+0xe>
2fff20d0:	682e      	ldr	r6, [r5, #0]
2fff20d2:	6820      	ldr	r0, [r4, #0]
2fff20d4:	f000 fa2a 	bl	2fff252c <plat_scmi_clock_count>
2fff20d8:	4601      	mov	r1, r0
2fff20da:	4630      	mov	r0, r6
2fff20dc:	f7ff fe58 	bl	2fff1d90 <confine_array_index>
2fff20e0:	686a      	ldr	r2, [r5, #4]
2fff20e2:	4601      	mov	r1, r0
2fff20e4:	6820      	ldr	r0, [r4, #0]
2fff20e6:	f002 0201 	and.w	r2, r2, #1
2fff20ea:	f000 faa0 	bl	2fff262e <plat_scmi_clock_set_state>
2fff20ee:	4601      	mov	r1, r0
2fff20f0:	e7ec      	b.n	2fff20cc <scmi_clock_config_set+0x28>
	...

2fff20f4 <scmi_msg_get_clock_handler>:
2fff20f4:	6880      	ldr	r0, [r0, #8]
2fff20f6:	b508      	push	{r3, lr}
2fff20f8:	2807      	cmp	r0, #7
2fff20fa:	d806      	bhi.n	2fff210a <scmi_msg_get_clock_handler+0x16>
2fff20fc:	2108      	movs	r1, #8
2fff20fe:	f7ff fe47 	bl	2fff1d90 <confine_array_index>
2fff2102:	4b03      	ldr	r3, [pc, #12]	; (2fff2110 <scmi_msg_get_clock_handler+0x1c>)
2fff2104:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2fff2108:	bd08      	pop	{r3, pc}
2fff210a:	2000      	movs	r0, #0
2fff210c:	e7fc      	b.n	2fff2108 <scmi_msg_get_clock_handler+0x14>
2fff210e:	bf00      	nop
2fff2110:	2fffacb4 	.word	0x2fffacb4

2fff2114 <scmi_status_response>:
2fff2114:	b513      	push	{r0, r1, r4, lr}
2fff2116:	4604      	mov	r4, r0
2fff2118:	6940      	ldr	r0, [r0, #20]
2fff211a:	9101      	str	r1, [sp, #4]
2fff211c:	b110      	cbz	r0, 2fff2124 <scmi_status_response+0x10>
2fff211e:	69a3      	ldr	r3, [r4, #24]
2fff2120:	2b03      	cmp	r3, #3
2fff2122:	d803      	bhi.n	2fff212c <scmi_status_response+0x18>
2fff2124:	4806      	ldr	r0, [pc, #24]	; (2fff2140 <scmi_status_response+0x2c>)
2fff2126:	2110      	movs	r1, #16
2fff2128:	f007 fcca 	bl	2fff9ac0 <__assert>
2fff212c:	2204      	movs	r2, #4
2fff212e:	eb0d 0102 	add.w	r1, sp, r2
2fff2132:	f007 fced 	bl	2fff9b10 <memcpy>
2fff2136:	2304      	movs	r3, #4
2fff2138:	61e3      	str	r3, [r4, #28]
2fff213a:	b002      	add	sp, #8
2fff213c:	bd10      	pop	{r4, pc}
2fff213e:	bf00      	nop
2fff2140:	2fffacd4 	.word	0x2fffacd4

2fff2144 <scmi_write_response>:
2fff2144:	b538      	push	{r3, r4, r5, lr}
2fff2146:	4604      	mov	r4, r0
2fff2148:	4615      	mov	r5, r2
2fff214a:	b131      	cbz	r1, 2fff215a <scmi_write_response+0x16>
2fff214c:	2a03      	cmp	r2, #3
2fff214e:	d904      	bls.n	2fff215a <scmi_write_response+0x16>
2fff2150:	6983      	ldr	r3, [r0, #24]
2fff2152:	4293      	cmp	r3, r2
2fff2154:	d301      	bcc.n	2fff215a <scmi_write_response+0x16>
2fff2156:	6940      	ldr	r0, [r0, #20]
2fff2158:	b918      	cbnz	r0, 2fff2162 <scmi_write_response+0x1e>
2fff215a:	4804      	ldr	r0, [pc, #16]	; (2fff216c <scmi_write_response+0x28>)
2fff215c:	211d      	movs	r1, #29
2fff215e:	f007 fcaf 	bl	2fff9ac0 <__assert>
2fff2162:	f007 fcd5 	bl	2fff9b10 <memcpy>
2fff2166:	61e5      	str	r5, [r4, #28]
2fff2168:	bd38      	pop	{r3, r4, r5, pc}
2fff216a:	bf00      	nop
2fff216c:	2fffacd4 	.word	0x2fffacd4

2fff2170 <scmi_process_message>:
2fff2170:	6843      	ldr	r3, [r0, #4]
2fff2172:	b510      	push	{r4, lr}
2fff2174:	2b14      	cmp	r3, #20
2fff2176:	4604      	mov	r4, r0
2fff2178:	d00b      	beq.n	2fff2192 <scmi_process_message+0x22>
2fff217a:	2b16      	cmp	r3, #22
2fff217c:	d00c      	beq.n	2fff2198 <scmi_process_message+0x28>
2fff217e:	2b10      	cmp	r3, #16
2fff2180:	d10d      	bne.n	2fff219e <scmi_process_message+0x2e>
2fff2182:	f7ff fdf3 	bl	2fff1d6c <scmi_msg_get_base_handler>
2fff2186:	4603      	mov	r3, r0
2fff2188:	b148      	cbz	r0, 2fff219e <scmi_process_message+0x2e>
2fff218a:	4620      	mov	r0, r4
2fff218c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff2190:	4718      	bx	r3
2fff2192:	f7ff ffaf 	bl	2fff20f4 <scmi_msg_get_clock_handler>
2fff2196:	e7f6      	b.n	2fff2186 <scmi_process_message+0x16>
2fff2198:	f000 f8e4 	bl	2fff2364 <scmi_msg_get_rd_handler>
2fff219c:	e7f3      	b.n	2fff2186 <scmi_process_message+0x16>
2fff219e:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
2fff21a2:	4805      	ldr	r0, [pc, #20]	; (2fff21b8 <scmi_process_message+0x48>)
2fff21a4:	f000 fb9a 	bl	2fff28dc <tf_log>
2fff21a8:	4620      	mov	r0, r4
2fff21aa:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff21ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff21b2:	f7ff bfaf 	b.w	2fff2114 <scmi_status_response>
2fff21b6:	bf00      	nop
2fff21b8:	2fffacf0 	.word	0x2fffacf0

2fff21bc <report_message_attributes>:
2fff21bc:	b507      	push	{r0, r1, r2, lr}
2fff21be:	2200      	movs	r2, #0
2fff21c0:	e9cd 2200 	strd	r2, r2, [sp]
2fff21c4:	6902      	ldr	r2, [r0, #16]
2fff21c6:	4603      	mov	r3, r0
2fff21c8:	68c1      	ldr	r1, [r0, #12]
2fff21ca:	2a04      	cmp	r2, #4
2fff21cc:	d004      	beq.n	2fff21d8 <report_message_attributes+0x1c>
2fff21ce:	f06f 0109 	mvn.w	r1, #9
2fff21d2:	f7ff ff9f 	bl	2fff2114 <scmi_status_response>
2fff21d6:	e00a      	b.n	2fff21ee <report_message_attributes+0x32>
2fff21d8:	680a      	ldr	r2, [r1, #0]
2fff21da:	2a04      	cmp	r2, #4
2fff21dc:	d80a      	bhi.n	2fff21f4 <report_message_attributes+0x38>
2fff21de:	4907      	ldr	r1, [pc, #28]	; (2fff21fc <report_message_attributes+0x40>)
2fff21e0:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
2fff21e4:	b132      	cbz	r2, 2fff21f4 <report_message_attributes+0x38>
2fff21e6:	2208      	movs	r2, #8
2fff21e8:	4669      	mov	r1, sp
2fff21ea:	f7ff ffab 	bl	2fff2144 <scmi_write_response>
2fff21ee:	b003      	add	sp, #12
2fff21f0:	f85d fb04 	ldr.w	pc, [sp], #4
2fff21f4:	f06f 0103 	mvn.w	r1, #3
2fff21f8:	4618      	mov	r0, r3
2fff21fa:	e7ea      	b.n	2fff21d2 <report_message_attributes+0x16>
2fff21fc:	2fffad48 	.word	0x2fffad48

2fff2200 <report_version>:
2fff2200:	f44f 3380 	mov.w	r3, #65536	; 0x10000
2fff2204:	b507      	push	{r0, r1, r2, lr}
2fff2206:	2200      	movs	r2, #0
2fff2208:	e9cd 2300 	strd	r2, r3, [sp]
2fff220c:	6903      	ldr	r3, [r0, #16]
2fff220e:	b133      	cbz	r3, 2fff221e <report_version+0x1e>
2fff2210:	f06f 0109 	mvn.w	r1, #9
2fff2214:	f7ff ff7e 	bl	2fff2114 <scmi_status_response>
2fff2218:	b003      	add	sp, #12
2fff221a:	f85d fb04 	ldr.w	pc, [sp], #4
2fff221e:	2208      	movs	r2, #8
2fff2220:	4669      	mov	r1, sp
2fff2222:	f7ff ff8f 	bl	2fff2144 <scmi_write_response>
2fff2226:	e7f7      	b.n	2fff2218 <report_version+0x18>

2fff2228 <report_attributes>:
2fff2228:	b513      	push	{r0, r1, r4, lr}
2fff222a:	4604      	mov	r4, r0
2fff222c:	6800      	ldr	r0, [r0, #0]
2fff222e:	2300      	movs	r3, #0
2fff2230:	9300      	str	r3, [sp, #0]
2fff2232:	f000 fa3d 	bl	2fff26b0 <plat_scmi_rd_count>
2fff2236:	6923      	ldr	r3, [r4, #16]
2fff2238:	9001      	str	r0, [sp, #4]
2fff223a:	b133      	cbz	r3, 2fff224a <report_attributes+0x22>
2fff223c:	f06f 0109 	mvn.w	r1, #9
2fff2240:	4620      	mov	r0, r4
2fff2242:	f7ff ff67 	bl	2fff2114 <scmi_status_response>
2fff2246:	b002      	add	sp, #8
2fff2248:	bd10      	pop	{r4, pc}
2fff224a:	2208      	movs	r2, #8
2fff224c:	4669      	mov	r1, sp
2fff224e:	4620      	mov	r0, r4
2fff2250:	f7ff ff78 	bl	2fff2144 <scmi_write_response>
2fff2254:	e7f7      	b.n	2fff2246 <report_attributes+0x1e>
	...

2fff2258 <reset_domain_attributes>:
2fff2258:	6903      	ldr	r3, [r0, #16]
2fff225a:	b570      	push	{r4, r5, r6, lr}
2fff225c:	2b04      	cmp	r3, #4
2fff225e:	b088      	sub	sp, #32
2fff2260:	4604      	mov	r4, r0
2fff2262:	d005      	beq.n	2fff2270 <reset_domain_attributes+0x18>
2fff2264:	f06f 0109 	mvn.w	r1, #9
2fff2268:	f7ff ff54 	bl	2fff2114 <scmi_status_response>
2fff226c:	b008      	add	sp, #32
2fff226e:	bd70      	pop	{r4, r5, r6, pc}
2fff2270:	68c5      	ldr	r5, [r0, #12]
2fff2272:	6800      	ldr	r0, [r0, #0]
2fff2274:	682e      	ldr	r6, [r5, #0]
2fff2276:	f000 fa1b 	bl	2fff26b0 <plat_scmi_rd_count>
2fff227a:	4286      	cmp	r6, r0
2fff227c:	d303      	bcc.n	2fff2286 <reset_domain_attributes+0x2e>
2fff227e:	f06f 0101 	mvn.w	r1, #1
2fff2282:	4620      	mov	r0, r4
2fff2284:	e7f0      	b.n	2fff2268 <reset_domain_attributes+0x10>
2fff2286:	682d      	ldr	r5, [r5, #0]
2fff2288:	6820      	ldr	r0, [r4, #0]
2fff228a:	f000 fa11 	bl	2fff26b0 <plat_scmi_rd_count>
2fff228e:	4629      	mov	r1, r5
2fff2290:	4281      	cmp	r1, r0
2fff2292:	bf28      	it	cs
2fff2294:	2100      	movcs	r1, #0
2fff2296:	f3af 8014 	csdb
2fff229a:	6820      	ldr	r0, [r4, #0]
2fff229c:	f000 f9ea 	bl	2fff2674 <plat_scmi_rd_get_name>
2fff22a0:	4605      	mov	r5, r0
2fff22a2:	b910      	cbnz	r0, 2fff22aa <reset_domain_attributes+0x52>
2fff22a4:	f06f 0103 	mvn.w	r1, #3
2fff22a8:	e7eb      	b.n	2fff2282 <reset_domain_attributes+0x2a>
2fff22aa:	211c      	movs	r1, #28
2fff22ac:	a801      	add	r0, sp, #4
2fff22ae:	f006 ed24 	blx	2fff8cf8 <zero_normalmem>
2fff22b2:	2300      	movs	r3, #0
2fff22b4:	4628      	mov	r0, r5
2fff22b6:	9301      	str	r3, [sp, #4]
2fff22b8:	9302      	str	r3, [sp, #8]
2fff22ba:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
2fff22be:	9303      	str	r3, [sp, #12]
2fff22c0:	f007 fdab 	bl	2fff9e1a <strlen>
2fff22c4:	280f      	cmp	r0, #15
2fff22c6:	d903      	bls.n	2fff22d0 <reset_domain_attributes+0x78>
2fff22c8:	4807      	ldr	r0, [pc, #28]	; (2fff22e8 <reset_domain_attributes+0x90>)
2fff22ca:	2182      	movs	r1, #130	; 0x82
2fff22cc:	f007 fbf8 	bl	2fff9ac0 <__assert>
2fff22d0:	2210      	movs	r2, #16
2fff22d2:	4629      	mov	r1, r5
2fff22d4:	eb0d 0002 	add.w	r0, sp, r2
2fff22d8:	f007 fd83 	bl	2fff9de2 <strlcpy>
2fff22dc:	221c      	movs	r2, #28
2fff22de:	a901      	add	r1, sp, #4
2fff22e0:	4620      	mov	r0, r4
2fff22e2:	f7ff ff2f 	bl	2fff2144 <scmi_write_response>
2fff22e6:	e7c1      	b.n	2fff226c <reset_domain_attributes+0x14>
2fff22e8:	2fffad24 	.word	0x2fffad24

2fff22ec <reset_request>:
2fff22ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff22ee:	2300      	movs	r3, #0
2fff22f0:	68c6      	ldr	r6, [r0, #12]
2fff22f2:	4604      	mov	r4, r0
2fff22f4:	6800      	ldr	r0, [r0, #0]
2fff22f6:	6835      	ldr	r5, [r6, #0]
2fff22f8:	9301      	str	r3, [sp, #4]
2fff22fa:	f000 f9d9 	bl	2fff26b0 <plat_scmi_rd_count>
2fff22fe:	4285      	cmp	r5, r0
2fff2300:	bf28      	it	cs
2fff2302:	2500      	movcs	r5, #0
2fff2304:	f3af 8014 	csdb
2fff2308:	6923      	ldr	r3, [r4, #16]
2fff230a:	2b0c      	cmp	r3, #12
2fff230c:	d006      	beq.n	2fff231c <reset_request+0x30>
2fff230e:	f06f 0109 	mvn.w	r1, #9
2fff2312:	4620      	mov	r0, r4
2fff2314:	f7ff fefe 	bl	2fff2114 <scmi_status_response>
2fff2318:	b003      	add	sp, #12
2fff231a:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff231c:	6837      	ldr	r7, [r6, #0]
2fff231e:	6820      	ldr	r0, [r4, #0]
2fff2320:	f000 f9c6 	bl	2fff26b0 <plat_scmi_rd_count>
2fff2324:	4287      	cmp	r7, r0
2fff2326:	d302      	bcc.n	2fff232e <reset_request+0x42>
2fff2328:	f06f 0103 	mvn.w	r1, #3
2fff232c:	e7f1      	b.n	2fff2312 <reset_request+0x26>
2fff232e:	6872      	ldr	r2, [r6, #4]
2fff2330:	6820      	ldr	r0, [r4, #0]
2fff2332:	07d3      	lsls	r3, r2, #31
2fff2334:	d50e      	bpl.n	2fff2354 <reset_request+0x68>
2fff2336:	68b2      	ldr	r2, [r6, #8]
2fff2338:	4629      	mov	r1, r5
2fff233a:	f000 f9c5 	bl	2fff26c8 <plat_scmi_rd_autonomous>
2fff233e:	9001      	str	r0, [sp, #4]
2fff2340:	9901      	ldr	r1, [sp, #4]
2fff2342:	2900      	cmp	r1, #0
2fff2344:	d1e5      	bne.n	2fff2312 <reset_request+0x26>
2fff2346:	2204      	movs	r2, #4
2fff2348:	4620      	mov	r0, r4
2fff234a:	eb0d 0102 	add.w	r1, sp, r2
2fff234e:	f7ff fef9 	bl	2fff2144 <scmi_write_response>
2fff2352:	e7e1      	b.n	2fff2318 <reset_request+0x2c>
2fff2354:	f012 0202 	ands.w	r2, r2, #2
2fff2358:	4629      	mov	r1, r5
2fff235a:	bf18      	it	ne
2fff235c:	2201      	movne	r2, #1
2fff235e:	f000 f9d6 	bl	2fff270e <plat_scmi_rd_set_state>
2fff2362:	e7ec      	b.n	2fff233e <reset_request+0x52>

2fff2364 <scmi_msg_get_rd_handler>:
2fff2364:	6883      	ldr	r3, [r0, #8]
2fff2366:	2b04      	cmp	r3, #4
2fff2368:	d809      	bhi.n	2fff237e <scmi_msg_get_rd_handler+0x1a>
2fff236a:	2205      	movs	r2, #5
2fff236c:	4293      	cmp	r3, r2
2fff236e:	bf28      	it	cs
2fff2370:	2300      	movcs	r3, #0
2fff2372:	f3af 8014 	csdb
2fff2376:	4a03      	ldr	r2, [pc, #12]	; (2fff2384 <scmi_msg_get_rd_handler+0x20>)
2fff2378:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
2fff237c:	4770      	bx	lr
2fff237e:	2000      	movs	r0, #0
2fff2380:	4770      	bx	lr
2fff2382:	bf00      	nop
2fff2384:	2fffad48 	.word	0x2fffad48

2fff2388 <scmi_proccess_smt>:
2fff2388:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff238c:	b088      	sub	sp, #32
2fff238e:	4680      	mov	r8, r0
2fff2390:	4689      	mov	r9, r1
2fff2392:	f000 f8ad 	bl	2fff24f0 <plat_scmi_get_channel>
2fff2396:	4605      	mov	r5, r0
2fff2398:	2800      	cmp	r0, #0
2fff239a:	d041      	beq.n	2fff2420 <scmi_proccess_smt+0x98>
2fff239c:	6804      	ldr	r4, [r0, #0]
2fff239e:	b91c      	cbnz	r4, 2fff23a8 <scmi_proccess_smt+0x20>
2fff23a0:	217b      	movs	r1, #123	; 0x7b
2fff23a2:	4823      	ldr	r0, [pc, #140]	; (2fff2430 <scmi_proccess_smt+0xa8>)
2fff23a4:	f007 fb8c 	bl	2fff9ac0 <__assert>
2fff23a8:	4822      	ldr	r0, [pc, #136]	; (2fff2434 <scmi_proccess_smt+0xac>)
2fff23aa:	f8d4 a004 	ldr.w	sl, [r4, #4]
2fff23ae:	f006 eac8 	blx	2fff8940 <spin_lock>
2fff23b2:	7a2f      	ldrb	r7, [r5, #8]
2fff23b4:	b90f      	cbnz	r7, 2fff23ba <scmi_proccess_smt+0x32>
2fff23b6:	2301      	movs	r3, #1
2fff23b8:	722b      	strb	r3, [r5, #8]
2fff23ba:	481e      	ldr	r0, [pc, #120]	; (2fff2434 <scmi_proccess_smt+0xac>)
2fff23bc:	f006 ead2 	blx	2fff8964 <spin_unlock>
2fff23c0:	bb8f      	cbnz	r7, 2fff2426 <scmi_proccess_smt+0x9e>
2fff23c2:	6966      	ldr	r6, [r4, #20]
2fff23c4:	3e04      	subs	r6, #4
2fff23c6:	2e5c      	cmp	r6, #92	; 0x5c
2fff23c8:	d82d      	bhi.n	2fff2426 <scmi_proccess_smt+0x9e>
2fff23ca:	f01a 0f03 	tst.w	sl, #3
2fff23ce:	d12a      	bne.n	2fff2426 <scmi_proccess_smt+0x9e>
2fff23d0:	2120      	movs	r1, #32
2fff23d2:	4668      	mov	r0, sp
2fff23d4:	f006 ec90 	blx	2fff8cf8 <zero_normalmem>
2fff23d8:	686b      	ldr	r3, [r5, #4]
2fff23da:	f104 011c 	add.w	r1, r4, #28
2fff23de:	f8cd 900c 	str.w	r9, [sp, #12]
2fff23e2:	9604      	str	r6, [sp, #16]
2fff23e4:	3b20      	subs	r3, #32
2fff23e6:	9105      	str	r1, [sp, #20]
2fff23e8:	2b03      	cmp	r3, #3
2fff23ea:	9306      	str	r3, [sp, #24]
2fff23ec:	d801      	bhi.n	2fff23f2 <scmi_proccess_smt+0x6a>
2fff23ee:	2199      	movs	r1, #153	; 0x99
2fff23f0:	e7d7      	b.n	2fff23a2 <scmi_proccess_smt+0x1a>
2fff23f2:	4632      	mov	r2, r6
2fff23f4:	4648      	mov	r0, r9
2fff23f6:	f007 fb8b 	bl	2fff9b10 <memcpy>
2fff23fa:	69a3      	ldr	r3, [r4, #24]
2fff23fc:	4668      	mov	r0, sp
2fff23fe:	f8cd 8000 	str.w	r8, [sp]
2fff2402:	f3c3 2287 	ubfx	r2, r3, #10, #8
2fff2406:	b2db      	uxtb	r3, r3
2fff2408:	9302      	str	r3, [sp, #8]
2fff240a:	9201      	str	r2, [sp, #4]
2fff240c:	f7ff feb0 	bl	2fff2170 <scmi_process_message>
2fff2410:	9b07      	ldr	r3, [sp, #28]
2fff2412:	3304      	adds	r3, #4
2fff2414:	6163      	str	r3, [r4, #20]
2fff2416:	6863      	ldr	r3, [r4, #4]
2fff2418:	722f      	strb	r7, [r5, #8]
2fff241a:	f043 0301 	orr.w	r3, r3, #1
2fff241e:	6063      	str	r3, [r4, #4]
2fff2420:	b008      	add	sp, #32
2fff2422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff2426:	6863      	ldr	r3, [r4, #4]
2fff2428:	f043 0303 	orr.w	r3, r3, #3
2fff242c:	e7f7      	b.n	2fff241e <scmi_proccess_smt+0x96>
2fff242e:	bf00      	nop
2fff2430:	2fffad5c 	.word	0x2fffad5c
2fff2434:	2fffe86c 	.word	0x2fffe86c

2fff2438 <scmi_smt_fastcall_smc_entry>:
2fff2438:	b510      	push	{r4, lr}
2fff243a:	4604      	mov	r4, r0
2fff243c:	f006 ee8a 	blx	2fff9154 <plat_my_core_pos>
2fff2440:	4b04      	ldr	r3, [pc, #16]	; (2fff2454 <scmi_smt_fastcall_smc_entry+0x1c>)
2fff2442:	215c      	movs	r1, #92	; 0x5c
2fff2444:	fb01 3100 	mla	r1, r1, r0, r3
2fff2448:	4620      	mov	r0, r4
2fff244a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff244e:	f7ff bf9b 	b.w	2fff2388 <scmi_proccess_smt>
2fff2452:	bf00      	nop
2fff2454:	2fffe7b4 	.word	0x2fffe7b4

2fff2458 <scmi_smt_init_agent_channel>:
2fff2458:	b510      	push	{r4, lr}
2fff245a:	b148      	cbz	r0, 2fff2470 <scmi_smt_init_agent_channel+0x18>
2fff245c:	6804      	ldr	r4, [r0, #0]
2fff245e:	b13c      	cbz	r4, 2fff2470 <scmi_smt_init_agent_channel+0x18>
2fff2460:	2220      	movs	r2, #32
2fff2462:	2100      	movs	r1, #0
2fff2464:	4620      	mov	r0, r4
2fff2466:	f007 fb74 	bl	2fff9b52 <memset>
2fff246a:	2301      	movs	r3, #1
2fff246c:	6063      	str	r3, [r4, #4]
2fff246e:	bd10      	pop	{r4, pc}
2fff2470:	f000 fad8 	bl	2fff2a24 <console_flush>
2fff2474:	f006 eaea 	blx	2fff8a4c <do_panic>

2fff2478 <find_resource.part.0>:
2fff2478:	4802      	ldr	r0, [pc, #8]	; (2fff2484 <find_resource.part.0+0xc>)
2fff247a:	219b      	movs	r1, #155	; 0x9b
2fff247c:	b508      	push	{r3, lr}
2fff247e:	f007 fb1f 	bl	2fff9ac0 <__assert>
2fff2482:	bf00      	nop
2fff2484:	2fffad76 	.word	0x2fffad76

2fff2488 <find_clock>:
2fff2488:	2801      	cmp	r0, #1
2fff248a:	b510      	push	{r4, lr}
2fff248c:	d809      	bhi.n	2fff24a2 <find_clock+0x1a>
2fff248e:	4a0a      	ldr	r2, [pc, #40]	; (2fff24b8 <find_clock+0x30>)
2fff2490:	2300      	movs	r3, #0
2fff2492:	0104      	lsls	r4, r0, #4
2fff2494:	eb02 1000 	add.w	r0, r2, r0, lsl #4
2fff2498:	6840      	ldr	r0, [r0, #4]
2fff249a:	4283      	cmp	r3, r0
2fff249c:	d103      	bne.n	2fff24a6 <find_clock+0x1e>
2fff249e:	2000      	movs	r0, #0
2fff24a0:	e007      	b.n	2fff24b2 <find_clock+0x2a>
2fff24a2:	f7ff ffe9 	bl	2fff2478 <find_resource.part.0>
2fff24a6:	4299      	cmp	r1, r3
2fff24a8:	d104      	bne.n	2fff24b4 <find_clock+0x2c>
2fff24aa:	5910      	ldr	r0, [r2, r4]
2fff24ac:	230c      	movs	r3, #12
2fff24ae:	fb03 0001 	mla	r0, r3, r1, r0
2fff24b2:	bd10      	pop	{r4, pc}
2fff24b4:	3301      	adds	r3, #1
2fff24b6:	e7f0      	b.n	2fff249a <find_clock+0x12>
2fff24b8:	2fffae98 	.word	0x2fffae98

2fff24bc <find_rd>:
2fff24bc:	2801      	cmp	r0, #1
2fff24be:	b510      	push	{r4, lr}
2fff24c0:	d809      	bhi.n	2fff24d6 <find_rd+0x1a>
2fff24c2:	4b0a      	ldr	r3, [pc, #40]	; (2fff24ec <find_rd+0x30>)
2fff24c4:	2200      	movs	r2, #0
2fff24c6:	0104      	lsls	r4, r0, #4
2fff24c8:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff24cc:	68c0      	ldr	r0, [r0, #12]
2fff24ce:	4282      	cmp	r2, r0
2fff24d0:	d103      	bne.n	2fff24da <find_rd+0x1e>
2fff24d2:	2000      	movs	r0, #0
2fff24d4:	e007      	b.n	2fff24e6 <find_rd+0x2a>
2fff24d6:	f7ff ffcf 	bl	2fff2478 <find_resource.part.0>
2fff24da:	4291      	cmp	r1, r2
2fff24dc:	d104      	bne.n	2fff24e8 <find_rd+0x2c>
2fff24de:	4423      	add	r3, r4
2fff24e0:	6898      	ldr	r0, [r3, #8]
2fff24e2:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
2fff24e6:	bd10      	pop	{r4, pc}
2fff24e8:	3201      	adds	r2, #1
2fff24ea:	e7f0      	b.n	2fff24ce <find_rd+0x12>
2fff24ec:	2fffae98 	.word	0x2fffae98

2fff24f0 <plat_scmi_get_channel>:
2fff24f0:	2801      	cmp	r0, #1
2fff24f2:	b508      	push	{r3, lr}
2fff24f4:	d903      	bls.n	2fff24fe <plat_scmi_get_channel+0xe>
2fff24f6:	4804      	ldr	r0, [pc, #16]	; (2fff2508 <plat_scmi_get_channel+0x18>)
2fff24f8:	2147      	movs	r1, #71	; 0x47
2fff24fa:	f007 fae1 	bl	2fff9ac0 <__assert>
2fff24fe:	4b03      	ldr	r3, [pc, #12]	; (2fff250c <plat_scmi_get_channel+0x1c>)
2fff2500:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff2504:	bd08      	pop	{r3, pc}
2fff2506:	bf00      	nop
2fff2508:	2fffad76 	.word	0x2fffad76
2fff250c:	2fffd20c 	.word	0x2fffd20c

2fff2510 <plat_scmi_vendor_name>:
2fff2510:	4800      	ldr	r0, [pc, #0]	; (2fff2514 <plat_scmi_vendor_name+0x4>)
2fff2512:	4770      	bx	lr
2fff2514:	2fffaebc 	.word	0x2fffaebc

2fff2518 <plat_scmi_sub_vendor_name>:
2fff2518:	4800      	ldr	r0, [pc, #0]	; (2fff251c <plat_scmi_sub_vendor_name+0x4>)
2fff251a:	4770      	bx	lr
2fff251c:	2fffaebb 	.word	0x2fffaebb

2fff2520 <plat_scmi_protocol_count>:
2fff2520:	2002      	movs	r0, #2
2fff2522:	4770      	bx	lr

2fff2524 <plat_scmi_protocol_list>:
2fff2524:	4800      	ldr	r0, [pc, #0]	; (2fff2528 <plat_scmi_protocol_list+0x4>)
2fff2526:	4770      	bx	lr
2fff2528:	2fffaeb8 	.word	0x2fffaeb8

2fff252c <plat_scmi_clock_count>:
2fff252c:	2801      	cmp	r0, #1
2fff252e:	b508      	push	{r3, lr}
2fff2530:	d901      	bls.n	2fff2536 <plat_scmi_clock_count+0xa>
2fff2532:	f7ff ffa1 	bl	2fff2478 <find_resource.part.0>
2fff2536:	4b02      	ldr	r3, [pc, #8]	; (2fff2540 <plat_scmi_clock_count+0x14>)
2fff2538:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff253c:	6840      	ldr	r0, [r0, #4]
2fff253e:	bd08      	pop	{r3, pc}
2fff2540:	2fffae98 	.word	0x2fffae98

2fff2544 <plat_scmi_clock_get_name>:
2fff2544:	b510      	push	{r4, lr}
2fff2546:	f7ff ff9f 	bl	2fff2488 <find_clock>
2fff254a:	4604      	mov	r4, r0
2fff254c:	b908      	cbnz	r0, 2fff2552 <plat_scmi_clock_get_name+0xe>
2fff254e:	2000      	movs	r0, #0
2fff2550:	bd10      	pop	{r4, pc}
2fff2552:	6800      	ldr	r0, [r0, #0]
2fff2554:	f7fe face 	bl	2fff0af4 <stm32mp_nsec_can_access_clock>
2fff2558:	2800      	cmp	r0, #0
2fff255a:	d0f8      	beq.n	2fff254e <plat_scmi_clock_get_name+0xa>
2fff255c:	6860      	ldr	r0, [r4, #4]
2fff255e:	e7f7      	b.n	2fff2550 <plat_scmi_clock_get_name+0xc>

2fff2560 <plat_scmi_clock_rates_array>:
2fff2560:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff2564:	4770      	bx	lr

2fff2566 <plat_scmi_clock_rates_by_step>:
2fff2566:	b570      	push	{r4, r5, r6, lr}
2fff2568:	460e      	mov	r6, r1
2fff256a:	4614      	mov	r4, r2
2fff256c:	f7ff ff8c 	bl	2fff2488 <find_clock>
2fff2570:	4605      	mov	r5, r0
2fff2572:	b1a0      	cbz	r0, 2fff259e <plat_scmi_clock_rates_by_step+0x38>
2fff2574:	6800      	ldr	r0, [r0, #0]
2fff2576:	f7fe fabd 	bl	2fff0af4 <stm32mp_nsec_can_access_clock>
2fff257a:	b198      	cbz	r0, 2fff25a4 <plat_scmi_clock_rates_by_step+0x3e>
2fff257c:	2e07      	cmp	r6, #7
2fff257e:	d106      	bne.n	2fff258e <plat_scmi_clock_rates_by_step+0x28>
2fff2580:	2000      	movs	r0, #0
2fff2582:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
2fff2586:	2301      	movs	r3, #1
2fff2588:	e884 000d 	stmia.w	r4, {r0, r2, r3}
2fff258c:	bd70      	pop	{r4, r5, r6, pc}
2fff258e:	6828      	ldr	r0, [r5, #0]
2fff2590:	f002 fec2 	bl	2fff5318 <stm32mp_clk_get_rate>
2fff2594:	6020      	str	r0, [r4, #0]
2fff2596:	6060      	str	r0, [r4, #4]
2fff2598:	2000      	movs	r0, #0
2fff259a:	60a0      	str	r0, [r4, #8]
2fff259c:	e7f6      	b.n	2fff258c <plat_scmi_clock_rates_by_step+0x26>
2fff259e:	f06f 0003 	mvn.w	r0, #3
2fff25a2:	e7f3      	b.n	2fff258c <plat_scmi_clock_rates_by_step+0x26>
2fff25a4:	f06f 0002 	mvn.w	r0, #2
2fff25a8:	e7f0      	b.n	2fff258c <plat_scmi_clock_rates_by_step+0x26>

2fff25aa <plat_scmi_clock_set_rate>:
2fff25aa:	b570      	push	{r4, r5, r6, lr}
2fff25ac:	460e      	mov	r6, r1
2fff25ae:	4615      	mov	r5, r2
2fff25b0:	f7ff ff6a 	bl	2fff2488 <find_clock>
2fff25b4:	4604      	mov	r4, r0
2fff25b6:	b1b0      	cbz	r0, 2fff25e6 <plat_scmi_clock_set_rate+0x3c>
2fff25b8:	6800      	ldr	r0, [r0, #0]
2fff25ba:	f7fe fa9b 	bl	2fff0af4 <stm32mp_nsec_can_access_clock>
2fff25be:	b1a8      	cbz	r0, 2fff25ec <plat_scmi_clock_set_rate+0x42>
2fff25c0:	2e07      	cmp	r6, #7
2fff25c2:	d108      	bne.n	2fff25d6 <plat_scmi_clock_set_rate+0x2c>
2fff25c4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
2fff25c8:	fbb5 f0f0 	udiv	r0, r5, r0
2fff25cc:	f003 f828 	bl	2fff5620 <stm32mp1_set_opp_khz>
2fff25d0:	b930      	cbnz	r0, 2fff25e0 <plat_scmi_clock_set_rate+0x36>
2fff25d2:	2000      	movs	r0, #0
2fff25d4:	bd70      	pop	{r4, r5, r6, pc}
2fff25d6:	6820      	ldr	r0, [r4, #0]
2fff25d8:	f002 fe9e 	bl	2fff5318 <stm32mp_clk_get_rate>
2fff25dc:	42a8      	cmp	r0, r5
2fff25de:	d0f8      	beq.n	2fff25d2 <plat_scmi_clock_set_rate+0x28>
2fff25e0:	f06f 0001 	mvn.w	r0, #1
2fff25e4:	e7f6      	b.n	2fff25d4 <plat_scmi_clock_set_rate+0x2a>
2fff25e6:	f06f 0003 	mvn.w	r0, #3
2fff25ea:	e7f3      	b.n	2fff25d4 <plat_scmi_clock_set_rate+0x2a>
2fff25ec:	f06f 0002 	mvn.w	r0, #2
2fff25f0:	e7f0      	b.n	2fff25d4 <plat_scmi_clock_set_rate+0x2a>

2fff25f2 <plat_scmi_clock_get_rate>:
2fff25f2:	b510      	push	{r4, lr}
2fff25f4:	f7ff ff48 	bl	2fff2488 <find_clock>
2fff25f8:	4604      	mov	r4, r0
2fff25fa:	b140      	cbz	r0, 2fff260e <plat_scmi_clock_get_rate+0x1c>
2fff25fc:	6800      	ldr	r0, [r0, #0]
2fff25fe:	f7fe fa79 	bl	2fff0af4 <stm32mp_nsec_can_access_clock>
2fff2602:	b120      	cbz	r0, 2fff260e <plat_scmi_clock_get_rate+0x1c>
2fff2604:	6820      	ldr	r0, [r4, #0]
2fff2606:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff260a:	f002 be85 	b.w	2fff5318 <stm32mp_clk_get_rate>
2fff260e:	2000      	movs	r0, #0
2fff2610:	bd10      	pop	{r4, pc}

2fff2612 <plat_scmi_clock_get_state>:
2fff2612:	b510      	push	{r4, lr}
2fff2614:	f7ff ff38 	bl	2fff2488 <find_clock>
2fff2618:	4604      	mov	r4, r0
2fff261a:	b908      	cbnz	r0, 2fff2620 <plat_scmi_clock_get_state+0xe>
2fff261c:	2000      	movs	r0, #0
2fff261e:	bd10      	pop	{r4, pc}
2fff2620:	6800      	ldr	r0, [r0, #0]
2fff2622:	f7fe fa67 	bl	2fff0af4 <stm32mp_nsec_can_access_clock>
2fff2626:	2800      	cmp	r0, #0
2fff2628:	d0f8      	beq.n	2fff261c <plat_scmi_clock_get_state+0xa>
2fff262a:	7a20      	ldrb	r0, [r4, #8]
2fff262c:	e7f7      	b.n	2fff261e <plat_scmi_clock_get_state+0xc>

2fff262e <plat_scmi_clock_set_state>:
2fff262e:	b570      	push	{r4, r5, r6, lr}
2fff2630:	4616      	mov	r6, r2
2fff2632:	f7ff ff29 	bl	2fff2488 <find_clock>
2fff2636:	4605      	mov	r5, r0
2fff2638:	b1a8      	cbz	r0, 2fff2666 <plat_scmi_clock_set_state+0x38>
2fff263a:	6800      	ldr	r0, [r0, #0]
2fff263c:	f7fe fa5a 	bl	2fff0af4 <stm32mp_nsec_can_access_clock>
2fff2640:	b1a0      	cbz	r0, 2fff266c <plat_scmi_clock_set_state+0x3e>
2fff2642:	7a2c      	ldrb	r4, [r5, #8]
2fff2644:	b13e      	cbz	r6, 2fff2656 <plat_scmi_clock_set_state+0x28>
2fff2646:	b964      	cbnz	r4, 2fff2662 <plat_scmi_clock_set_state+0x34>
2fff2648:	6828      	ldr	r0, [r5, #0]
2fff264a:	f002 fe39 	bl	2fff52c0 <stm32mp_clk_enable>
2fff264e:	2301      	movs	r3, #1
2fff2650:	722b      	strb	r3, [r5, #8]
2fff2652:	4620      	mov	r0, r4
2fff2654:	e009      	b.n	2fff266a <plat_scmi_clock_set_state+0x3c>
2fff2656:	2c00      	cmp	r4, #0
2fff2658:	d0fb      	beq.n	2fff2652 <plat_scmi_clock_set_state+0x24>
2fff265a:	6828      	ldr	r0, [r5, #0]
2fff265c:	f002 fe33 	bl	2fff52c6 <stm32mp_clk_disable>
2fff2660:	722e      	strb	r6, [r5, #8]
2fff2662:	2000      	movs	r0, #0
2fff2664:	e001      	b.n	2fff266a <plat_scmi_clock_set_state+0x3c>
2fff2666:	f06f 0003 	mvn.w	r0, #3
2fff266a:	bd70      	pop	{r4, r5, r6, pc}
2fff266c:	f06f 0002 	mvn.w	r0, #2
2fff2670:	e7fb      	b.n	2fff266a <plat_scmi_clock_set_state+0x3c>
	...

2fff2674 <plat_scmi_rd_get_name>:
2fff2674:	2801      	cmp	r0, #1
2fff2676:	b510      	push	{r4, lr}
2fff2678:	d809      	bhi.n	2fff268e <plat_scmi_rd_get_name+0x1a>
2fff267a:	4b0c      	ldr	r3, [pc, #48]	; (2fff26ac <plat_scmi_rd_get_name+0x38>)
2fff267c:	2200      	movs	r2, #0
2fff267e:	0104      	lsls	r4, r0, #4
2fff2680:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff2684:	68c0      	ldr	r0, [r0, #12]
2fff2686:	4282      	cmp	r2, r0
2fff2688:	d103      	bne.n	2fff2692 <plat_scmi_rd_get_name+0x1e>
2fff268a:	2000      	movs	r0, #0
2fff268c:	e008      	b.n	2fff26a0 <plat_scmi_rd_get_name+0x2c>
2fff268e:	f7ff fef3 	bl	2fff2478 <find_resource.part.0>
2fff2692:	4291      	cmp	r1, r2
2fff2694:	d105      	bne.n	2fff26a2 <plat_scmi_rd_get_name+0x2e>
2fff2696:	4423      	add	r3, r4
2fff2698:	6898      	ldr	r0, [r3, #8]
2fff269a:	eb10 00c1 	adds.w	r0, r0, r1, lsl #3
2fff269e:	d102      	bne.n	2fff26a6 <plat_scmi_rd_get_name+0x32>
2fff26a0:	bd10      	pop	{r4, pc}
2fff26a2:	3201      	adds	r2, #1
2fff26a4:	e7ef      	b.n	2fff2686 <plat_scmi_rd_get_name+0x12>
2fff26a6:	6840      	ldr	r0, [r0, #4]
2fff26a8:	e7fa      	b.n	2fff26a0 <plat_scmi_rd_get_name+0x2c>
2fff26aa:	bf00      	nop
2fff26ac:	2fffae98 	.word	0x2fffae98

2fff26b0 <plat_scmi_rd_count>:
2fff26b0:	2801      	cmp	r0, #1
2fff26b2:	b508      	push	{r3, lr}
2fff26b4:	d901      	bls.n	2fff26ba <plat_scmi_rd_count+0xa>
2fff26b6:	f7ff fedf 	bl	2fff2478 <find_resource.part.0>
2fff26ba:	4b02      	ldr	r3, [pc, #8]	; (2fff26c4 <plat_scmi_rd_count+0x14>)
2fff26bc:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff26c0:	68c0      	ldr	r0, [r0, #12]
2fff26c2:	bd08      	pop	{r3, pc}
2fff26c4:	2fffae98 	.word	0x2fffae98

2fff26c8 <plat_scmi_rd_autonomous>:
2fff26c8:	b538      	push	{r3, r4, r5, lr}
2fff26ca:	4615      	mov	r5, r2
2fff26cc:	f7ff fef6 	bl	2fff24bc <find_rd>
2fff26d0:	4604      	mov	r4, r0
2fff26d2:	b198      	cbz	r0, 2fff26fc <plat_scmi_rd_autonomous+0x34>
2fff26d4:	6800      	ldr	r0, [r0, #0]
2fff26d6:	f7fe fa75 	bl	2fff0bc4 <stm32mp_nsec_can_access_reset>
2fff26da:	b190      	cbz	r0, 2fff2702 <plat_scmi_rd_autonomous+0x3a>
2fff26dc:	b9a5      	cbnz	r5, 2fff2708 <plat_scmi_rd_autonomous+0x40>
2fff26de:	6820      	ldr	r0, [r4, #0]
2fff26e0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff26e4:	f005 fb36 	bl	2fff7d54 <stm32mp_reset_assert_to>
2fff26e8:	b928      	cbnz	r0, 2fff26f6 <plat_scmi_rd_autonomous+0x2e>
2fff26ea:	6820      	ldr	r0, [r4, #0]
2fff26ec:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff26f0:	f005 fb68 	bl	2fff7dc4 <stm32mp_reset_deassert_to>
2fff26f4:	b108      	cbz	r0, 2fff26fa <plat_scmi_rd_autonomous+0x32>
2fff26f6:	f06f 0008 	mvn.w	r0, #8
2fff26fa:	bd38      	pop	{r3, r4, r5, pc}
2fff26fc:	f06f 0003 	mvn.w	r0, #3
2fff2700:	e7fb      	b.n	2fff26fa <plat_scmi_rd_autonomous+0x32>
2fff2702:	f06f 0002 	mvn.w	r0, #2
2fff2706:	e7f8      	b.n	2fff26fa <plat_scmi_rd_autonomous+0x32>
2fff2708:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff270c:	e7f5      	b.n	2fff26fa <plat_scmi_rd_autonomous+0x32>

2fff270e <plat_scmi_rd_set_state>:
2fff270e:	b538      	push	{r3, r4, r5, lr}
2fff2710:	4614      	mov	r4, r2
2fff2712:	f7ff fed3 	bl	2fff24bc <find_rd>
2fff2716:	4605      	mov	r5, r0
2fff2718:	b170      	cbz	r0, 2fff2738 <plat_scmi_rd_set_state+0x2a>
2fff271a:	6800      	ldr	r0, [r0, #0]
2fff271c:	f7fe fa52 	bl	2fff0bc4 <stm32mp_nsec_can_access_reset>
2fff2720:	b168      	cbz	r0, 2fff273e <plat_scmi_rd_set_state+0x30>
2fff2722:	6828      	ldr	r0, [r5, #0]
2fff2724:	b124      	cbz	r4, 2fff2730 <plat_scmi_rd_set_state+0x22>
2fff2726:	2100      	movs	r1, #0
2fff2728:	f005 fb14 	bl	2fff7d54 <stm32mp_reset_assert_to>
2fff272c:	2000      	movs	r0, #0
2fff272e:	bd38      	pop	{r3, r4, r5, pc}
2fff2730:	4621      	mov	r1, r4
2fff2732:	f005 fb47 	bl	2fff7dc4 <stm32mp_reset_deassert_to>
2fff2736:	e7f9      	b.n	2fff272c <plat_scmi_rd_set_state+0x1e>
2fff2738:	f06f 0003 	mvn.w	r0, #3
2fff273c:	e7f7      	b.n	2fff272e <plat_scmi_rd_set_state+0x20>
2fff273e:	f06f 0002 	mvn.w	r0, #2
2fff2742:	e7f4      	b.n	2fff272e <plat_scmi_rd_set_state+0x20>

2fff2744 <stm32mp1_init_scmi_server>:
2fff2744:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff2748:	2700      	movs	r7, #0
2fff274a:	4823      	ldr	r0, [pc, #140]	; (2fff27d8 <stm32mp1_init_scmi_server+0x94>)
2fff274c:	f04f 080c 	mov.w	r8, #12
2fff2750:	4c22      	ldr	r4, [pc, #136]	; (2fff27dc <stm32mp1_init_scmi_server+0x98>)
2fff2752:	f7ff fe81 	bl	2fff2458 <scmi_smt_init_agent_channel>
2fff2756:	4822      	ldr	r0, [pc, #136]	; (2fff27e0 <stm32mp1_init_scmi_server+0x9c>)
2fff2758:	f7ff fe7e 	bl	2fff2458 <scmi_smt_init_agent_channel>
2fff275c:	2500      	movs	r5, #0
2fff275e:	e020      	b.n	2fff27a2 <stm32mp1_init_scmi_server+0x5e>
2fff2760:	fb08 f605 	mul.w	r6, r8, r5
2fff2764:	f8d4 9000 	ldr.w	r9, [r4]
2fff2768:	eb09 0a06 	add.w	sl, r9, r6
2fff276c:	f8da 0004 	ldr.w	r0, [sl, #4]
2fff2770:	b930      	cbnz	r0, 2fff2780 <stm32mp1_init_scmi_server+0x3c>
2fff2772:	481c      	ldr	r0, [pc, #112]	; (2fff27e4 <stm32mp1_init_scmi_server+0xa0>)
2fff2774:	f000 f8b2 	bl	2fff28dc <tf_log>
2fff2778:	f000 f954 	bl	2fff2a24 <console_flush>
2fff277c:	f006 e966 	blx	2fff8a4c <do_panic>
2fff2780:	f007 fb4b 	bl	2fff9e1a <strlen>
2fff2784:	280f      	cmp	r0, #15
2fff2786:	d8f4      	bhi.n	2fff2772 <stm32mp1_init_scmi_server+0x2e>
2fff2788:	f89a 3008 	ldrb.w	r3, [sl, #8]
2fff278c:	b143      	cbz	r3, 2fff27a0 <stm32mp1_init_scmi_server+0x5c>
2fff278e:	f859 0006 	ldr.w	r0, [r9, r6]
2fff2792:	f7fe f9af 	bl	2fff0af4 <stm32mp_nsec_can_access_clock>
2fff2796:	b118      	cbz	r0, 2fff27a0 <stm32mp1_init_scmi_server+0x5c>
2fff2798:	f859 0006 	ldr.w	r0, [r9, r6]
2fff279c:	f002 fd90 	bl	2fff52c0 <stm32mp_clk_enable>
2fff27a0:	3501      	adds	r5, #1
2fff27a2:	6863      	ldr	r3, [r4, #4]
2fff27a4:	42ab      	cmp	r3, r5
2fff27a6:	d8db      	bhi.n	2fff2760 <stm32mp1_init_scmi_server+0x1c>
2fff27a8:	2500      	movs	r5, #0
2fff27aa:	68e3      	ldr	r3, [r4, #12]
2fff27ac:	42ab      	cmp	r3, r5
2fff27ae:	d803      	bhi.n	2fff27b8 <stm32mp1_init_scmi_server+0x74>
2fff27b0:	3410      	adds	r4, #16
2fff27b2:	b977      	cbnz	r7, 2fff27d2 <stm32mp1_init_scmi_server+0x8e>
2fff27b4:	2701      	movs	r7, #1
2fff27b6:	e7d1      	b.n	2fff275c <stm32mp1_init_scmi_server+0x18>
2fff27b8:	68a3      	ldr	r3, [r4, #8]
2fff27ba:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
2fff27be:	6858      	ldr	r0, [r3, #4]
2fff27c0:	b908      	cbnz	r0, 2fff27c6 <stm32mp1_init_scmi_server+0x82>
2fff27c2:	4809      	ldr	r0, [pc, #36]	; (2fff27e8 <stm32mp1_init_scmi_server+0xa4>)
2fff27c4:	e7d6      	b.n	2fff2774 <stm32mp1_init_scmi_server+0x30>
2fff27c6:	f007 fb28 	bl	2fff9e1a <strlen>
2fff27ca:	280f      	cmp	r0, #15
2fff27cc:	d8f9      	bhi.n	2fff27c2 <stm32mp1_init_scmi_server+0x7e>
2fff27ce:	3501      	adds	r5, #1
2fff27d0:	e7eb      	b.n	2fff27aa <stm32mp1_init_scmi_server+0x66>
2fff27d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff27d6:	bf00      	nop
2fff27d8:	2fffd20c 	.word	0x2fffd20c
2fff27dc:	2fffae98 	.word	0x2fffae98
2fff27e0:	2fffd21c 	.word	0x2fffd21c
2fff27e4:	2fffad97 	.word	0x2fffad97
2fff27e8:	2fffadb1 	.word	0x2fffadb1

2fff27ec <stm32mp1_pm_save_scmi_state>:
2fff27ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff27ee:	460d      	mov	r5, r1
2fff27f0:	4604      	mov	r4, r0
2fff27f2:	2701      	movs	r7, #1
2fff27f4:	f006 ea80 	blx	2fff8cf8 <zero_normalmem>
2fff27f8:	4918      	ldr	r1, [pc, #96]	; (2fff285c <stm32mp1_pm_save_scmi_state+0x70>)
2fff27fa:	2300      	movs	r3, #0
2fff27fc:	ebb5 0fd3 	cmp.w	r5, r3, lsr #3
2fff2800:	ea4f 00d3 	mov.w	r0, r3, lsr #3
2fff2804:	d318      	bcc.n	2fff2838 <stm32mp1_pm_save_scmi_state+0x4c>
2fff2806:	7a0a      	ldrb	r2, [r1, #8]
2fff2808:	b962      	cbnz	r2, 2fff2824 <stm32mp1_pm_save_scmi_state+0x38>
2fff280a:	3301      	adds	r3, #1
2fff280c:	310c      	adds	r1, #12
2fff280e:	2b15      	cmp	r3, #21
2fff2810:	d1f4      	bne.n	2fff27fc <stm32mp1_pm_save_scmi_state+0x10>
2fff2812:	4913      	ldr	r1, [pc, #76]	; (2fff2860 <stm32mp1_pm_save_scmi_state+0x74>)
2fff2814:	2200      	movs	r2, #0
2fff2816:	200c      	movs	r0, #12
2fff2818:	2601      	movs	r6, #1
2fff281a:	2a03      	cmp	r2, #3
2fff281c:	f102 0315 	add.w	r3, r2, #21
2fff2820:	d108      	bne.n	2fff2834 <stm32mp1_pm_save_scmi_state+0x48>
2fff2822:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff2824:	5c26      	ldrb	r6, [r4, r0]
2fff2826:	f003 0207 	and.w	r2, r3, #7
2fff282a:	fa07 f202 	lsl.w	r2, r7, r2
2fff282e:	4332      	orrs	r2, r6
2fff2830:	5422      	strb	r2, [r4, r0]
2fff2832:	e7ea      	b.n	2fff280a <stm32mp1_pm_save_scmi_state+0x1e>
2fff2834:	2d01      	cmp	r5, #1
2fff2836:	d803      	bhi.n	2fff2840 <stm32mp1_pm_save_scmi_state+0x54>
2fff2838:	f000 f8f4 	bl	2fff2a24 <console_flush>
2fff283c:	f006 e906 	blx	2fff8a4c <do_panic>
2fff2840:	fb00 1702 	mla	r7, r0, r2, r1
2fff2844:	7a3f      	ldrb	r7, [r7, #8]
2fff2846:	b137      	cbz	r7, 2fff2856 <stm32mp1_pm_save_scmi_state+0x6a>
2fff2848:	78a7      	ldrb	r7, [r4, #2]
2fff284a:	f003 0307 	and.w	r3, r3, #7
2fff284e:	fa06 f303 	lsl.w	r3, r6, r3
2fff2852:	433b      	orrs	r3, r7
2fff2854:	70a3      	strb	r3, [r4, #2]
2fff2856:	3201      	adds	r2, #1
2fff2858:	e7df      	b.n	2fff281a <stm32mp1_pm_save_scmi_state+0x2e>
2fff285a:	bf00      	nop
2fff285c:	2fffd22c 	.word	0x2fffd22c
2fff2860:	2fffd380 	.word	0x2fffd380

2fff2864 <stm32mp1_pm_restore_scmi_state>:
2fff2864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff2866:	2200      	movs	r2, #0
2fff2868:	4c19      	ldr	r4, [pc, #100]	; (2fff28d0 <stm32mp1_pm_restore_scmi_state+0x6c>)
2fff286a:	2601      	movs	r6, #1
2fff286c:	08d5      	lsrs	r5, r2, #3
2fff286e:	f002 0707 	and.w	r7, r2, #7
2fff2872:	5d43      	ldrb	r3, [r0, r5]
2fff2874:	40fb      	lsrs	r3, r7
2fff2876:	f013 0301 	ands.w	r3, r3, #1
2fff287a:	d011      	beq.n	2fff28a0 <stm32mp1_pm_restore_scmi_state+0x3c>
2fff287c:	7226      	strb	r6, [r4, #8]
2fff287e:	42a9      	cmp	r1, r5
2fff2880:	f104 040c 	add.w	r4, r4, #12
2fff2884:	d31c      	bcc.n	2fff28c0 <stm32mp1_pm_restore_scmi_state+0x5c>
2fff2886:	3201      	adds	r2, #1
2fff2888:	2a15      	cmp	r2, #21
2fff288a:	d1ef      	bne.n	2fff286c <stm32mp1_pm_restore_scmi_state+0x8>
2fff288c:	4e11      	ldr	r6, [pc, #68]	; (2fff28d4 <stm32mp1_pm_restore_scmi_state+0x70>)
2fff288e:	2200      	movs	r2, #0
2fff2890:	270c      	movs	r7, #12
2fff2892:	f04f 0c01 	mov.w	ip, #1
2fff2896:	2a03      	cmp	r2, #3
2fff2898:	f102 0415 	add.w	r4, r2, #21
2fff289c:	d102      	bne.n	2fff28a4 <stm32mp1_pm_restore_scmi_state+0x40>
2fff289e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff28a0:	7223      	strb	r3, [r4, #8]
2fff28a2:	e7ec      	b.n	2fff287e <stm32mp1_pm_restore_scmi_state+0x1a>
2fff28a4:	7883      	ldrb	r3, [r0, #2]
2fff28a6:	f004 0407 	and.w	r4, r4, #7
2fff28aa:	fb07 6502 	mla	r5, r7, r2, r6
2fff28ae:	40e3      	lsrs	r3, r4
2fff28b0:	f013 0301 	ands.w	r3, r3, #1
2fff28b4:	bf0c      	ite	eq
2fff28b6:	722b      	strbeq	r3, [r5, #8]
2fff28b8:	f885 c008 	strbne.w	ip, [r5, #8]
2fff28bc:	2901      	cmp	r1, #1
2fff28be:	d804      	bhi.n	2fff28ca <stm32mp1_pm_restore_scmi_state+0x66>
2fff28c0:	4805      	ldr	r0, [pc, #20]	; (2fff28d8 <stm32mp1_pm_restore_scmi_state+0x74>)
2fff28c2:	f240 2142 	movw	r1, #578	; 0x242
2fff28c6:	f007 f8fb 	bl	2fff9ac0 <__assert>
2fff28ca:	3201      	adds	r2, #1
2fff28cc:	e7e3      	b.n	2fff2896 <stm32mp1_pm_restore_scmi_state+0x32>
2fff28ce:	bf00      	nop
2fff28d0:	2fffd22c 	.word	0x2fffd22c
2fff28d4:	2fffd380 	.word	0x2fffd380
2fff28d8:	2fffad76 	.word	0x2fffad76

2fff28dc <tf_log>:
2fff28dc:	b40f      	push	{r0, r1, r2, r3}
2fff28de:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff28e0:	9d06      	ldr	r5, [sp, #24]
2fff28e2:	7828      	ldrb	r0, [r5, #0]
2fff28e4:	1e43      	subs	r3, r0, #1
2fff28e6:	2b31      	cmp	r3, #49	; 0x31
2fff28e8:	d903      	bls.n	2fff28f2 <tf_log+0x16>
2fff28ea:	2122      	movs	r1, #34	; 0x22
2fff28ec:	4810      	ldr	r0, [pc, #64]	; (2fff2930 <tf_log+0x54>)
2fff28ee:	f007 f8e7 	bl	2fff9ac0 <__assert>
2fff28f2:	220a      	movs	r2, #10
2fff28f4:	fbb0 f3f2 	udiv	r3, r0, r2
2fff28f8:	fb02 0313 	mls	r3, r2, r3, r0
2fff28fc:	b10b      	cbz	r3, 2fff2902 <tf_log+0x26>
2fff28fe:	2123      	movs	r1, #35	; 0x23
2fff2900:	e7f4      	b.n	2fff28ec <tf_log+0x10>
2fff2902:	4b0c      	ldr	r3, [pc, #48]	; (2fff2934 <tf_log+0x58>)
2fff2904:	681b      	ldr	r3, [r3, #0]
2fff2906:	4283      	cmp	r3, r0
2fff2908:	d30a      	bcc.n	2fff2920 <tf_log+0x44>
2fff290a:	f000 f8ab 	bl	2fff2a64 <plat_log_get_prefix>
2fff290e:	1e44      	subs	r4, r0, #1
2fff2910:	f814 0f01 	ldrb.w	r0, [r4, #1]!
2fff2914:	b948      	cbnz	r0, 2fff292a <tf_log+0x4e>
2fff2916:	a907      	add	r1, sp, #28
2fff2918:	1c68      	adds	r0, r5, #1
2fff291a:	9101      	str	r1, [sp, #4]
2fff291c:	f007 f962 	bl	2fff9be4 <vprintf>
2fff2920:	b003      	add	sp, #12
2fff2922:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2fff2926:	b004      	add	sp, #16
2fff2928:	4770      	bx	lr
2fff292a:	f007 fa38 	bl	2fff9d9e <putchar>
2fff292e:	e7ef      	b.n	2fff2910 <tf_log+0x34>
2fff2930:	2fffaebf 	.word	0x2fffaebf
2fff2934:	2fffd3a4 	.word	0x2fffd3a4

2fff2938 <console_is_registered>:
2fff2938:	b508      	push	{r3, lr}
2fff293a:	4603      	mov	r3, r0
2fff293c:	b918      	cbnz	r0, 2fff2946 <console_is_registered+0xe>
2fff293e:	4807      	ldr	r0, [pc, #28]	; (2fff295c <console_is_registered+0x24>)
2fff2940:	2134      	movs	r1, #52	; 0x34
2fff2942:	f007 f8bd 	bl	2fff9ac0 <__assert>
2fff2946:	4a06      	ldr	r2, [pc, #24]	; (2fff2960 <console_is_registered+0x28>)
2fff2948:	6810      	ldr	r0, [r2, #0]
2fff294a:	b900      	cbnz	r0, 2fff294e <console_is_registered+0x16>
2fff294c:	bd08      	pop	{r3, pc}
2fff294e:	4298      	cmp	r0, r3
2fff2950:	d001      	beq.n	2fff2956 <console_is_registered+0x1e>
2fff2952:	6800      	ldr	r0, [r0, #0]
2fff2954:	e7f9      	b.n	2fff294a <console_is_registered+0x12>
2fff2956:	2001      	movs	r0, #1
2fff2958:	e7f8      	b.n	2fff294c <console_is_registered+0x14>
2fff295a:	bf00      	nop
2fff295c:	2fffaecf 	.word	0x2fffaecf
2fff2960:	2fffec84 	.word	0x2fffec84

2fff2964 <console_register>:
2fff2964:	4b0b      	ldr	r3, [pc, #44]	; (2fff2994 <console_register+0x30>)
2fff2966:	b510      	push	{r4, lr}
2fff2968:	4604      	mov	r4, r0
2fff296a:	4298      	cmp	r0, r3
2fff296c:	d306      	bcc.n	2fff297c <console_register+0x18>
2fff296e:	4b0a      	ldr	r3, [pc, #40]	; (2fff2998 <console_register+0x34>)
2fff2970:	4298      	cmp	r0, r3
2fff2972:	d203      	bcs.n	2fff297c <console_register+0x18>
2fff2974:	4809      	ldr	r0, [pc, #36]	; (2fff299c <console_register+0x38>)
2fff2976:	2114      	movs	r1, #20
2fff2978:	f007 f8a2 	bl	2fff9ac0 <__assert>
2fff297c:	4620      	mov	r0, r4
2fff297e:	f7ff ffdb 	bl	2fff2938 <console_is_registered>
2fff2982:	2801      	cmp	r0, #1
2fff2984:	f04f 0001 	mov.w	r0, #1
2fff2988:	bf1f      	itttt	ne
2fff298a:	4b05      	ldrne	r3, [pc, #20]	; (2fff29a0 <console_register+0x3c>)
2fff298c:	681a      	ldrne	r2, [r3, #0]
2fff298e:	6022      	strne	r2, [r4, #0]
2fff2990:	601c      	strne	r4, [r3, #0]
2fff2992:	bd10      	pop	{r4, pc}
2fff2994:	2fffd540 	.word	0x2fffd540
2fff2998:	2fffe140 	.word	0x2fffe140
2fff299c:	2fffaecf 	.word	0x2fffaecf
2fff29a0:	2fffec84 	.word	0x2fffec84

2fff29a4 <console_switch_state>:
2fff29a4:	4b01      	ldr	r3, [pc, #4]	; (2fff29ac <console_switch_state+0x8>)
2fff29a6:	7018      	strb	r0, [r3, #0]
2fff29a8:	4770      	bx	lr
2fff29aa:	bf00      	nop
2fff29ac:	2fffd3a8 	.word	0x2fffd3a8

2fff29b0 <console_set_scope>:
2fff29b0:	b508      	push	{r3, lr}
2fff29b2:	b918      	cbnz	r0, 2fff29bc <console_set_scope+0xc>
2fff29b4:	4804      	ldr	r0, [pc, #16]	; (2fff29c8 <console_set_scope+0x18>)
2fff29b6:	2144      	movs	r1, #68	; 0x44
2fff29b8:	f007 f882 	bl	2fff9ac0 <__assert>
2fff29bc:	6843      	ldr	r3, [r0, #4]
2fff29be:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
2fff29c2:	4319      	orrs	r1, r3
2fff29c4:	6041      	str	r1, [r0, #4]
2fff29c6:	bd08      	pop	{r3, pc}
2fff29c8:	2fffaecf 	.word	0x2fffaecf

2fff29cc <console_putc>:
2fff29cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff29ce:	4606      	mov	r6, r0
2fff29d0:	4b12      	ldr	r3, [pc, #72]	; (2fff2a1c <console_putc+0x50>)
2fff29d2:	f06f 057f 	mvn.w	r5, #127	; 0x7f
2fff29d6:	4f12      	ldr	r7, [pc, #72]	; (2fff2a20 <console_putc+0x54>)
2fff29d8:	681c      	ldr	r4, [r3, #0]
2fff29da:	b90c      	cbnz	r4, 2fff29e0 <console_putc+0x14>
2fff29dc:	4628      	mov	r0, r5
2fff29de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff29e0:	6862      	ldr	r2, [r4, #4]
2fff29e2:	783b      	ldrb	r3, [r7, #0]
2fff29e4:	4213      	tst	r3, r2
2fff29e6:	d00d      	beq.n	2fff2a04 <console_putc+0x38>
2fff29e8:	68a3      	ldr	r3, [r4, #8]
2fff29ea:	b15b      	cbz	r3, 2fff2a04 <console_putc+0x38>
2fff29ec:	2e0a      	cmp	r6, #10
2fff29ee:	d00b      	beq.n	2fff2a08 <console_putc+0x3c>
2fff29f0:	68a3      	ldr	r3, [r4, #8]
2fff29f2:	4621      	mov	r1, r4
2fff29f4:	4630      	mov	r0, r6
2fff29f6:	4798      	blx	r3
2fff29f8:	f115 0f80 	cmn.w	r5, #128	; 0x80
2fff29fc:	d00c      	beq.n	2fff2a18 <console_putc+0x4c>
2fff29fe:	4285      	cmp	r5, r0
2fff2a00:	bfa8      	it	ge
2fff2a02:	4605      	movge	r5, r0
2fff2a04:	6824      	ldr	r4, [r4, #0]
2fff2a06:	e7e8      	b.n	2fff29da <console_putc+0xe>
2fff2a08:	05d2      	lsls	r2, r2, #23
2fff2a0a:	d5f1      	bpl.n	2fff29f0 <console_putc+0x24>
2fff2a0c:	4621      	mov	r1, r4
2fff2a0e:	200d      	movs	r0, #13
2fff2a10:	4798      	blx	r3
2fff2a12:	2800      	cmp	r0, #0
2fff2a14:	daec      	bge.n	2fff29f0 <console_putc+0x24>
2fff2a16:	e7ef      	b.n	2fff29f8 <console_putc+0x2c>
2fff2a18:	4605      	mov	r5, r0
2fff2a1a:	e7f3      	b.n	2fff2a04 <console_putc+0x38>
2fff2a1c:	2fffec84 	.word	0x2fffec84
2fff2a20:	2fffd3a8 	.word	0x2fffd3a8

2fff2a24 <console_flush>:
2fff2a24:	4b0d      	ldr	r3, [pc, #52]	; (2fff2a5c <console_flush+0x38>)
2fff2a26:	b570      	push	{r4, r5, r6, lr}
2fff2a28:	f06f 057f 	mvn.w	r5, #127	; 0x7f
2fff2a2c:	681c      	ldr	r4, [r3, #0]
2fff2a2e:	4e0c      	ldr	r6, [pc, #48]	; (2fff2a60 <console_flush+0x3c>)
2fff2a30:	b90c      	cbnz	r4, 2fff2a36 <console_flush+0x12>
2fff2a32:	4628      	mov	r0, r5
2fff2a34:	bd70      	pop	{r4, r5, r6, pc}
2fff2a36:	7832      	ldrb	r2, [r6, #0]
2fff2a38:	6863      	ldr	r3, [r4, #4]
2fff2a3a:	421a      	tst	r2, r3
2fff2a3c:	d009      	beq.n	2fff2a52 <console_flush+0x2e>
2fff2a3e:	6923      	ldr	r3, [r4, #16]
2fff2a40:	b13b      	cbz	r3, 2fff2a52 <console_flush+0x2e>
2fff2a42:	4620      	mov	r0, r4
2fff2a44:	4798      	blx	r3
2fff2a46:	f115 0f80 	cmn.w	r5, #128	; 0x80
2fff2a4a:	d004      	beq.n	2fff2a56 <console_flush+0x32>
2fff2a4c:	4285      	cmp	r5, r0
2fff2a4e:	bfa8      	it	ge
2fff2a50:	4605      	movge	r5, r0
2fff2a52:	6824      	ldr	r4, [r4, #0]
2fff2a54:	e7ec      	b.n	2fff2a30 <console_flush+0xc>
2fff2a56:	4605      	mov	r5, r0
2fff2a58:	e7fb      	b.n	2fff2a52 <console_flush+0x2e>
2fff2a5a:	bf00      	nop
2fff2a5c:	2fffec84 	.word	0x2fffec84
2fff2a60:	2fffd3a8 	.word	0x2fffd3a8

2fff2a64 <plat_log_get_prefix>:
2fff2a64:	2832      	cmp	r0, #50	; 0x32
2fff2a66:	f04f 030a 	mov.w	r3, #10
2fff2a6a:	bf28      	it	cs
2fff2a6c:	2032      	movcs	r0, #50	; 0x32
2fff2a6e:	280a      	cmp	r0, #10
2fff2a70:	bf38      	it	cc
2fff2a72:	200a      	movcc	r0, #10
2fff2a74:	fbb0 f0f3 	udiv	r0, r0, r3
2fff2a78:	4b02      	ldr	r3, [pc, #8]	; (2fff2a84 <plat_log_get_prefix+0x20>)
2fff2a7a:	3801      	subs	r0, #1
2fff2a7c:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2fff2a80:	4770      	bx	lr
2fff2a82:	bf00      	nop
2fff2a84:	2fffaf24 	.word	0x2fffaf24

2fff2a88 <bl32_plat_enable_mmu>:
2fff2a88:	f000 bc12 	b.w	2fff32b0 <enable_mmu_svc_mon>

2fff2a8c <__ctzdi2>:
2fff2a8c:	fab0 f380 	clz	r3, r0
2fff2a90:	095b      	lsrs	r3, r3, #5
2fff2a92:	425a      	negs	r2, r3
2fff2a94:	3b01      	subs	r3, #1
2fff2a96:	4003      	ands	r3, r0
2fff2a98:	4011      	ands	r1, r2
2fff2a9a:	430b      	orrs	r3, r1
2fff2a9c:	f002 0020 	and.w	r0, r2, #32
2fff2aa0:	fa93 f3a3 	rbit	r3, r3
2fff2aa4:	fab3 f383 	clz	r3, r3
2fff2aa8:	4418      	add	r0, r3
2fff2aaa:	4770      	bx	lr

2fff2aac <__udivmoddi4>:
2fff2aac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff2ab0:	9e08      	ldr	r6, [sp, #32]
2fff2ab2:	b981      	cbnz	r1, 2fff2ad6 <__udivmoddi4+0x2a>
2fff2ab4:	b953      	cbnz	r3, 2fff2acc <__udivmoddi4+0x20>
2fff2ab6:	fbb0 f1f2 	udiv	r1, r0, r2
2fff2aba:	b11e      	cbz	r6, 2fff2ac4 <__udivmoddi4+0x18>
2fff2abc:	fb01 0012 	mls	r0, r1, r2, r0
2fff2ac0:	e9c6 0300 	strd	r0, r3, [r6]
2fff2ac4:	4608      	mov	r0, r1
2fff2ac6:	2100      	movs	r1, #0
2fff2ac8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff2acc:	b10e      	cbz	r6, 2fff2ad2 <__udivmoddi4+0x26>
2fff2ace:	e9c6 0100 	strd	r0, r1, [r6]
2fff2ad2:	4608      	mov	r0, r1
2fff2ad4:	e7f8      	b.n	2fff2ac8 <__udivmoddi4+0x1c>
2fff2ad6:	2a00      	cmp	r2, #0
2fff2ad8:	d164      	bne.n	2fff2ba4 <__udivmoddi4+0xf8>
2fff2ada:	b903      	cbnz	r3, 2fff2ade <__udivmoddi4+0x32>
2fff2adc:	deff      	udf	#255	; 0xff
2fff2ade:	b940      	cbnz	r0, 2fff2af2 <__udivmoddi4+0x46>
2fff2ae0:	fbb1 f2f3 	udiv	r2, r1, r3
2fff2ae4:	b11e      	cbz	r6, 2fff2aee <__udivmoddi4+0x42>
2fff2ae6:	fb02 1113 	mls	r1, r2, r3, r1
2fff2aea:	e9c6 0100 	strd	r0, r1, [r6]
2fff2aee:	4610      	mov	r0, r2
2fff2af0:	e7e9      	b.n	2fff2ac6 <__udivmoddi4+0x1a>
2fff2af2:	1e5c      	subs	r4, r3, #1
2fff2af4:	421c      	tst	r4, r3
2fff2af6:	d10a      	bne.n	2fff2b0e <__udivmoddi4+0x62>
2fff2af8:	b116      	cbz	r6, 2fff2b00 <__udivmoddi4+0x54>
2fff2afa:	400c      	ands	r4, r1
2fff2afc:	e9c6 0400 	strd	r0, r4, [r6]
2fff2b00:	fa93 f0a3 	rbit	r0, r3
2fff2b04:	fab0 f080 	clz	r0, r0
2fff2b08:	fa21 f000 	lsr.w	r0, r1, r0
2fff2b0c:	e7db      	b.n	2fff2ac6 <__udivmoddi4+0x1a>
2fff2b0e:	fab3 f483 	clz	r4, r3
2fff2b12:	fab1 f581 	clz	r5, r1
2fff2b16:	1b64      	subs	r4, r4, r5
2fff2b18:	2c1e      	cmp	r4, #30
2fff2b1a:	d907      	bls.n	2fff2b2c <__udivmoddi4+0x80>
2fff2b1c:	2e00      	cmp	r6, #0
2fff2b1e:	f000 8092 	beq.w	2fff2c46 <__udivmoddi4+0x19a>
2fff2b22:	e9c6 0100 	strd	r0, r1, [r6]
2fff2b26:	2000      	movs	r0, #0
2fff2b28:	4601      	mov	r1, r0
2fff2b2a:	e7cd      	b.n	2fff2ac8 <__udivmoddi4+0x1c>
2fff2b2c:	f104 0e01 	add.w	lr, r4, #1
2fff2b30:	f1c4 041f 	rsb	r4, r4, #31
2fff2b34:	4694      	mov	ip, r2
2fff2b36:	fa00 f704 	lsl.w	r7, r0, r4
2fff2b3a:	fa01 f404 	lsl.w	r4, r1, r4
2fff2b3e:	fa20 f00e 	lsr.w	r0, r0, lr
2fff2b42:	fa21 f80e 	lsr.w	r8, r1, lr
2fff2b46:	ea44 0100 	orr.w	r1, r4, r0
2fff2b4a:	f04f 0900 	mov.w	r9, #0
2fff2b4e:	ea4f 7ad7 	mov.w	sl, r7, lsr #31
2fff2b52:	0fcd      	lsrs	r5, r1, #31
2fff2b54:	ea4f 70dc 	mov.w	r0, ip, lsr #31
2fff2b58:	ea4a 0441 	orr.w	r4, sl, r1, lsl #1
2fff2b5c:	ea40 0747 	orr.w	r7, r0, r7, lsl #1
2fff2b60:	ea45 0048 	orr.w	r0, r5, r8, lsl #1
2fff2b64:	43e5      	mvns	r5, r4
2fff2b66:	43c1      	mvns	r1, r0
2fff2b68:	18ad      	adds	r5, r5, r2
2fff2b6a:	eb41 0503 	adc.w	r5, r1, r3
2fff2b6e:	ea49 0c4c 	orr.w	ip, r9, ip, lsl #1
2fff2b72:	ea02 71e5 	and.w	r1, r2, r5, asr #31
2fff2b76:	1a64      	subs	r4, r4, r1
2fff2b78:	ea4f 79d5 	mov.w	r9, r5, lsr #31
2fff2b7c:	4621      	mov	r1, r4
2fff2b7e:	ea03 75e5 	and.w	r5, r3, r5, asr #31
2fff2b82:	eb60 0505 	sbc.w	r5, r0, r5
2fff2b86:	f1be 0e01 	subs.w	lr, lr, #1
2fff2b8a:	46a8      	mov	r8, r5
2fff2b8c:	d1df      	bne.n	2fff2b4e <__udivmoddi4+0xa2>
2fff2b8e:	eb1c 030c 	adds.w	r3, ip, ip
2fff2b92:	eb47 0107 	adc.w	r1, r7, r7
2fff2b96:	ea49 004c 	orr.w	r0, r9, ip, lsl #1
2fff2b9a:	2e00      	cmp	r6, #0
2fff2b9c:	d094      	beq.n	2fff2ac8 <__udivmoddi4+0x1c>
2fff2b9e:	e9c6 4500 	strd	r4, r5, [r6]
2fff2ba2:	e791      	b.n	2fff2ac8 <__udivmoddi4+0x1c>
2fff2ba4:	2b00      	cmp	r3, #0
2fff2ba6:	d13e      	bne.n	2fff2c26 <__udivmoddi4+0x17a>
2fff2ba8:	1e54      	subs	r4, r2, #1
2fff2baa:	ea14 0502 	ands.w	r5, r4, r2
2fff2bae:	d112      	bne.n	2fff2bd6 <__udivmoddi4+0x12a>
2fff2bb0:	b116      	cbz	r6, 2fff2bb8 <__udivmoddi4+0x10c>
2fff2bb2:	4004      	ands	r4, r0
2fff2bb4:	e9c6 4500 	strd	r4, r5, [r6]
2fff2bb8:	2a01      	cmp	r2, #1
2fff2bba:	d085      	beq.n	2fff2ac8 <__udivmoddi4+0x1c>
2fff2bbc:	fa92 f2a2 	rbit	r2, r2
2fff2bc0:	fab2 f282 	clz	r2, r2
2fff2bc4:	f1c2 0420 	rsb	r4, r2, #32
2fff2bc8:	fa21 f702 	lsr.w	r7, r1, r2
2fff2bcc:	40d0      	lsrs	r0, r2
2fff2bce:	40a1      	lsls	r1, r4
2fff2bd0:	4308      	orrs	r0, r1
2fff2bd2:	4639      	mov	r1, r7
2fff2bd4:	e778      	b.n	2fff2ac8 <__udivmoddi4+0x1c>
2fff2bd6:	fab1 f481 	clz	r4, r1
2fff2bda:	fab2 f582 	clz	r5, r2
2fff2bde:	1b2d      	subs	r5, r5, r4
2fff2be0:	1c6c      	adds	r4, r5, #1
2fff2be2:	f105 0e21 	add.w	lr, r5, #33	; 0x21
2fff2be6:	d103      	bne.n	2fff2bf0 <__udivmoddi4+0x144>
2fff2be8:	469c      	mov	ip, r3
2fff2bea:	4607      	mov	r7, r0
2fff2bec:	4698      	mov	r8, r3
2fff2bee:	e7ac      	b.n	2fff2b4a <__udivmoddi4+0x9e>
2fff2bf0:	f1be 0f1f 	cmp.w	lr, #31
2fff2bf4:	d80b      	bhi.n	2fff2c0e <__udivmoddi4+0x162>
2fff2bf6:	469c      	mov	ip, r3
2fff2bf8:	fa21 f80e 	lsr.w	r8, r1, lr
2fff2bfc:	f1ce 0420 	rsb	r4, lr, #32
2fff2c00:	fa00 f704 	lsl.w	r7, r0, r4
2fff2c04:	40a1      	lsls	r1, r4
2fff2c06:	fa20 f00e 	lsr.w	r0, r0, lr
2fff2c0a:	4301      	orrs	r1, r0
2fff2c0c:	e79d      	b.n	2fff2b4a <__udivmoddi4+0x9e>
2fff2c0e:	f1ce 0440 	rsb	r4, lr, #64	; 0x40
2fff2c12:	3501      	adds	r5, #1
2fff2c14:	4698      	mov	r8, r3
2fff2c16:	fa01 f704 	lsl.w	r7, r1, r4
2fff2c1a:	fa00 fc04 	lsl.w	ip, r0, r4
2fff2c1e:	40e8      	lsrs	r0, r5
2fff2c20:	4307      	orrs	r7, r0
2fff2c22:	40e9      	lsrs	r1, r5
2fff2c24:	e791      	b.n	2fff2b4a <__udivmoddi4+0x9e>
2fff2c26:	fab3 f483 	clz	r4, r3
2fff2c2a:	fab1 f581 	clz	r5, r1
2fff2c2e:	1b64      	subs	r4, r4, r5
2fff2c30:	2c1f      	cmp	r4, #31
2fff2c32:	f63f af73 	bhi.w	2fff2b1c <__udivmoddi4+0x70>
2fff2c36:	f104 0e01 	add.w	lr, r4, #1
2fff2c3a:	f04f 0c00 	mov.w	ip, #0
2fff2c3e:	d1db      	bne.n	2fff2bf8 <__udivmoddi4+0x14c>
2fff2c40:	4607      	mov	r7, r0
2fff2c42:	46e0      	mov	r8, ip
2fff2c44:	e781      	b.n	2fff2b4a <__udivmoddi4+0x9e>
2fff2c46:	4630      	mov	r0, r6
2fff2c48:	e76e      	b.n	2fff2b28 <__udivmoddi4+0x7c>

2fff2c4a <plat_get_syscnt_freq2>:
2fff2c4a:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff2c4e:	4770      	bx	lr

2fff2c50 <stm32mp_ddrctrl_base>:
2fff2c50:	4800      	ldr	r0, [pc, #0]	; (2fff2c54 <stm32mp_ddrctrl_base+0x4>)
2fff2c52:	4770      	bx	lr
2fff2c54:	5a003000 	.word	0x5a003000

2fff2c58 <stm32mp_ddrphyc_base>:
2fff2c58:	4800      	ldr	r0, [pc, #0]	; (2fff2c5c <stm32mp_ddrphyc_base+0x4>)
2fff2c5a:	4770      	bx	lr
2fff2c5c:	5a004000 	.word	0x5a004000

2fff2c60 <stm32mp_pwr_base>:
2fff2c60:	4800      	ldr	r0, [pc, #0]	; (2fff2c64 <stm32mp_pwr_base+0x4>)
2fff2c62:	4770      	bx	lr
2fff2c64:	50001000 	.word	0x50001000

2fff2c68 <stm32mp_rcc_base>:
2fff2c68:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
2fff2c6c:	4770      	bx	lr

2fff2c6e <stm32mp_lock_available>:
2fff2c6e:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff2c72:	f000 0005 	and.w	r0, r0, #5
2fff2c76:	1f43      	subs	r3, r0, #5
2fff2c78:	4258      	negs	r0, r3
2fff2c7a:	4158      	adcs	r0, r3
2fff2c7c:	4770      	bx	lr
	...

2fff2c80 <stm32mp_pwr_regs_lock>:
2fff2c80:	b508      	push	{r3, lr}
2fff2c82:	f7ff fff4 	bl	2fff2c6e <stm32mp_lock_available>
2fff2c86:	b120      	cbz	r0, 2fff2c92 <stm32mp_pwr_regs_lock+0x12>
2fff2c88:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff2c8c:	4801      	ldr	r0, [pc, #4]	; (2fff2c94 <stm32mp_pwr_regs_lock+0x14>)
2fff2c8e:	f009 bd8f 	b.w	2fffc7b0 <__spin_lock_from_thumb>
2fff2c92:	bd08      	pop	{r3, pc}
2fff2c94:	2fffe870 	.word	0x2fffe870

2fff2c98 <stm32mp_pwr_regs_unlock>:
2fff2c98:	b508      	push	{r3, lr}
2fff2c9a:	f7ff ffe8 	bl	2fff2c6e <stm32mp_lock_available>
2fff2c9e:	b120      	cbz	r0, 2fff2caa <stm32mp_pwr_regs_unlock+0x12>
2fff2ca0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff2ca4:	4801      	ldr	r0, [pc, #4]	; (2fff2cac <stm32mp_pwr_regs_unlock+0x14>)
2fff2ca6:	f009 bd77 	b.w	2fffc798 <__spin_unlock_from_thumb>
2fff2caa:	bd08      	pop	{r3, pc}
2fff2cac:	2fffe870 	.word	0x2fffe870

2fff2cb0 <stm32_get_gpio_bank_base>:
2fff2cb0:	2819      	cmp	r0, #25
2fff2cb2:	b508      	push	{r3, lr}
2fff2cb4:	d00a      	beq.n	2fff2ccc <stm32_get_gpio_bank_base+0x1c>
2fff2cb6:	280a      	cmp	r0, #10
2fff2cb8:	d903      	bls.n	2fff2cc2 <stm32_get_gpio_bank_base+0x12>
2fff2cba:	4805      	ldr	r0, [pc, #20]	; (2fff2cd0 <stm32_get_gpio_bank_base+0x20>)
2fff2cbc:	2164      	movs	r1, #100	; 0x64
2fff2cbe:	f006 feff 	bl	2fff9ac0 <__assert>
2fff2cc2:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
2fff2cc6:	3002      	adds	r0, #2
2fff2cc8:	0300      	lsls	r0, r0, #12
2fff2cca:	bd08      	pop	{r3, pc}
2fff2ccc:	4801      	ldr	r0, [pc, #4]	; (2fff2cd4 <stm32_get_gpio_bank_base+0x24>)
2fff2cce:	e7fc      	b.n	2fff2cca <stm32_get_gpio_bank_base+0x1a>
2fff2cd0:	2fffaf38 	.word	0x2fffaf38
2fff2cd4:	54004000 	.word	0x54004000

2fff2cd8 <stm32_get_gpio_bank_offset>:
2fff2cd8:	2819      	cmp	r0, #25
2fff2cda:	b508      	push	{r3, lr}
2fff2cdc:	d007      	beq.n	2fff2cee <stm32_get_gpio_bank_offset+0x16>
2fff2cde:	280a      	cmp	r0, #10
2fff2ce0:	d903      	bls.n	2fff2cea <stm32_get_gpio_bank_offset+0x12>
2fff2ce2:	4804      	ldr	r0, [pc, #16]	; (2fff2cf4 <stm32_get_gpio_bank_offset+0x1c>)
2fff2ce4:	216f      	movs	r1, #111	; 0x6f
2fff2ce6:	f006 feeb 	bl	2fff9ac0 <__assert>
2fff2cea:	0300      	lsls	r0, r0, #12
2fff2cec:	bd08      	pop	{r3, pc}
2fff2cee:	2000      	movs	r0, #0
2fff2cf0:	e7fc      	b.n	2fff2cec <stm32_get_gpio_bank_offset+0x14>
2fff2cf2:	bf00      	nop
2fff2cf4:	2fffaf38 	.word	0x2fffaf38

2fff2cf8 <stm32mp_get_cpu_supply_name>:
2fff2cf8:	b513      	push	{r0, r1, r4, lr}
2fff2cfa:	2300      	movs	r3, #0
2fff2cfc:	9301      	str	r3, [sp, #4]
2fff2cfe:	f005 fadf 	bl	2fff82c0 <dt_get_cpu_regulator_name>
2fff2d02:	4604      	mov	r4, r0
2fff2d04:	b910      	cbnz	r0, 2fff2d0c <stm32mp_get_cpu_supply_name+0x14>
2fff2d06:	2000      	movs	r0, #0
2fff2d08:	b002      	add	sp, #8
2fff2d0a:	bd10      	pop	{r4, pc}
2fff2d0c:	f004 fd8a 	bl	2fff7824 <dt_pmic_status>
2fff2d10:	2800      	cmp	r0, #0
2fff2d12:	dc01      	bgt.n	2fff2d18 <stm32mp_get_cpu_supply_name+0x20>
2fff2d14:	9801      	ldr	r0, [sp, #4]
2fff2d16:	e7f7      	b.n	2fff2d08 <stm32mp_get_cpu_supply_name+0x10>
2fff2d18:	4621      	mov	r1, r4
2fff2d1a:	a801      	add	r0, sp, #4
2fff2d1c:	f004 fda0 	bl	2fff7860 <dt_pmic_find_supply>
2fff2d20:	2800      	cmp	r0, #0
2fff2d22:	d0f7      	beq.n	2fff2d14 <stm32mp_get_cpu_supply_name+0x1c>
2fff2d24:	e7ef      	b.n	2fff2d06 <stm32mp_get_cpu_supply_name+0xe>
	...

2fff2d28 <configure_mmu>:
2fff2d28:	4805      	ldr	r0, [pc, #20]	; (2fff2d40 <configure_mmu+0x18>)
2fff2d2a:	b508      	push	{r3, lr}
2fff2d2c:	f000 fa80 	bl	2fff3230 <mmap_add>
2fff2d30:	f000 faa0 	bl	2fff3274 <init_xlat_tables>
2fff2d34:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff2d38:	2000      	movs	r0, #0
2fff2d3a:	f000 bab9 	b.w	2fff32b0 <enable_mmu_svc_mon>
2fff2d3e:	bf00      	nop
2fff2d40:	2fffaff0 	.word	0x2fffaff0

2fff2d44 <stm32mp_mask_timer>:
2fff2d44:	ee1e 3f32 	mrc	15, 0, r3, cr14, cr2, {1}
2fff2d48:	f043 0302 	orr.w	r3, r3, #2
2fff2d4c:	ee0e 3f32 	mcr	15, 0, r3, cr14, cr2, {1}
2fff2d50:	ee1e 3f33 	mrc	15, 0, r3, cr14, cr3, {1}
2fff2d54:	f043 0302 	orr.w	r3, r3, #2
2fff2d58:	ee0e 3f33 	mcr	15, 0, r3, cr14, cr3, {1}
2fff2d5c:	4770      	bx	lr

2fff2d5e <stm32mp_wait_cpu_reset>:
2fff2d5e:	2001      	movs	r0, #1
2fff2d60:	b508      	push	{r3, lr}
2fff2d62:	f005 efb8 	blx	2fff8cd4 <dcsw_op_all>
2fff2d66:	ee11 3f10 	mrc	15, 0, r3, cr1, cr0, {0}
2fff2d6a:	f023 0304 	bic.w	r3, r3, #4
2fff2d6e:	ee01 3f10 	mcr	15, 0, r3, cr1, cr0, {0}
2fff2d72:	2001      	movs	r0, #1
2fff2d74:	f005 efae 	blx	2fff8cd4 <dcsw_op_all>
2fff2d78:	f3bf 8f2f 	clrex
2fff2d7c:	f3bf 8f4f 	dsb	sy
2fff2d80:	f3bf 8f6f 	isb	sy
2fff2d84:	f7fe fbd6 	bl	2fff1534 <plat_ic_get_pending_interrupt_id>
2fff2d88:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2fff2d8c:	4604      	mov	r4, r0
2fff2d8e:	d205      	bcs.n	2fff2d9c <stm32mp_wait_cpu_reset+0x3e>
2fff2d90:	f7fe fa62 	bl	2fff1258 <gicv2_end_of_interrupt>
2fff2d94:	4620      	mov	r0, r4
2fff2d96:	f7fe fbdb 	bl	2fff1550 <plat_ic_disable_interrupt>
2fff2d9a:	e7f3      	b.n	2fff2d84 <stm32mp_wait_cpu_reset+0x26>
2fff2d9c:	bf30      	wfi
2fff2d9e:	e7f1      	b.n	2fff2d84 <stm32mp_wait_cpu_reset+0x26>

2fff2da0 <stm32_get_gpio_bank_clock>:
2fff2da0:	2819      	cmp	r0, #25
2fff2da2:	b508      	push	{r3, lr}
2fff2da4:	d008      	beq.n	2fff2db8 <stm32_get_gpio_bank_clock+0x18>
2fff2da6:	280a      	cmp	r0, #10
2fff2da8:	d904      	bls.n	2fff2db4 <stm32_get_gpio_bank_clock+0x14>
2fff2daa:	4804      	ldr	r0, [pc, #16]	; (2fff2dbc <stm32_get_gpio_bank_clock+0x1c>)
2fff2dac:	f240 112b 	movw	r1, #299	; 0x12b
2fff2db0:	f006 fe86 	bl	2fff9ac0 <__assert>
2fff2db4:	3054      	adds	r0, #84	; 0x54
2fff2db6:	bd08      	pop	{r3, pc}
2fff2db8:	205f      	movs	r0, #95	; 0x5f
2fff2dba:	e7fc      	b.n	2fff2db6 <stm32_get_gpio_bank_clock+0x16>
2fff2dbc:	2fffaf58 	.word	0x2fffaf58

2fff2dc0 <stm32_get_otp_index>:
2fff2dc0:	b508      	push	{r3, lr}
2fff2dc2:	b920      	cbnz	r0, 2fff2dce <stm32_get_otp_index+0xe>
2fff2dc4:	f240 1133 	movw	r1, #307	; 0x133
2fff2dc8:	4806      	ldr	r0, [pc, #24]	; (2fff2de4 <stm32_get_otp_index+0x24>)
2fff2dca:	f006 fe79 	bl	2fff9ac0 <__assert>
2fff2dce:	b911      	cbnz	r1, 2fff2dd6 <stm32_get_otp_index+0x16>
2fff2dd0:	f44f 719a 	mov.w	r1, #308	; 0x134
2fff2dd4:	e7f8      	b.n	2fff2dc8 <stm32_get_otp_index+0x8>
2fff2dd6:	f001 f9cb 	bl	2fff4170 <bsec_find_otp_name_in_dt>
2fff2dda:	3800      	subs	r0, #0
2fff2ddc:	bf18      	it	ne
2fff2dde:	2001      	movne	r0, #1
2fff2de0:	4240      	negs	r0, r0
2fff2de2:	bd08      	pop	{r3, pc}
2fff2de4:	2fffaf58 	.word	0x2fffaf58

2fff2de8 <stm32_get_otp_value_from_idx>:
2fff2de8:	b510      	push	{r4, lr}
2fff2dea:	4604      	mov	r4, r0
2fff2dec:	4608      	mov	r0, r1
2fff2dee:	b921      	cbnz	r1, 2fff2dfa <stm32_get_otp_value_from_idx+0x12>
2fff2df0:	4807      	ldr	r0, [pc, #28]	; (2fff2e10 <stm32_get_otp_value_from_idx+0x28>)
2fff2df2:	f44f 71aa 	mov.w	r1, #340	; 0x154
2fff2df6:	f006 fe63 	bl	2fff9ac0 <__assert>
2fff2dfa:	4621      	mov	r1, r4
2fff2dfc:	f001 fa20 	bl	2fff4240 <bsec_read_otp>
2fff2e00:	b128      	cbz	r0, 2fff2e0e <stm32_get_otp_value_from_idx+0x26>
2fff2e02:	4804      	ldr	r0, [pc, #16]	; (2fff2e14 <stm32_get_otp_value_from_idx+0x2c>)
2fff2e04:	4621      	mov	r1, r4
2fff2e06:	f7ff fd69 	bl	2fff28dc <tf_log>
2fff2e0a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff2e0e:	bd10      	pop	{r4, pc}
2fff2e10:	2fffaf58 	.word	0x2fffaf58
2fff2e14:	2fffaf7c 	.word	0x2fffaf7c

2fff2e18 <stm32_get_otp_value>:
2fff2e18:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff2e1a:	460d      	mov	r5, r1
2fff2e1c:	4604      	mov	r4, r0
2fff2e1e:	b920      	cbnz	r0, 2fff2e2a <stm32_get_otp_value+0x12>
2fff2e20:	f240 1141 	movw	r1, #321	; 0x141
2fff2e24:	480c      	ldr	r0, [pc, #48]	; (2fff2e58 <stm32_get_otp_value+0x40>)
2fff2e26:	f006 fe4b 	bl	2fff9ac0 <__assert>
2fff2e2a:	b911      	cbnz	r1, 2fff2e32 <stm32_get_otp_value+0x1a>
2fff2e2c:	f44f 71a1 	mov.w	r1, #322	; 0x142
2fff2e30:	e7f8      	b.n	2fff2e24 <stm32_get_otp_value+0xc>
2fff2e32:	2200      	movs	r2, #0
2fff2e34:	a901      	add	r1, sp, #4
2fff2e36:	f7ff ffc3 	bl	2fff2dc0 <stm32_get_otp_index>
2fff2e3a:	b940      	cbnz	r0, 2fff2e4e <stm32_get_otp_value+0x36>
2fff2e3c:	9801      	ldr	r0, [sp, #4]
2fff2e3e:	4629      	mov	r1, r5
2fff2e40:	f7ff ffd2 	bl	2fff2de8 <stm32_get_otp_value_from_idx>
2fff2e44:	b128      	cbz	r0, 2fff2e52 <stm32_get_otp_value+0x3a>
2fff2e46:	4805      	ldr	r0, [pc, #20]	; (2fff2e5c <stm32_get_otp_value+0x44>)
2fff2e48:	4621      	mov	r1, r4
2fff2e4a:	f7ff fd47 	bl	2fff28dc <tf_log>
2fff2e4e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff2e52:	b003      	add	sp, #12
2fff2e54:	bd30      	pop	{r4, r5, pc}
2fff2e56:	bf00      	nop
2fff2e58:	2fffaf58 	.word	0x2fffaf58
2fff2e5c:	2fffaf96 	.word	0x2fffaf96

2fff2e60 <get_part_number>:
2fff2e60:	b513      	push	{r0, r1, r4, lr}
2fff2e62:	4c0f      	ldr	r4, [pc, #60]	; (2fff2ea0 <get_part_number+0x40>)
2fff2e64:	6820      	ldr	r0, [r4, #0]
2fff2e66:	b9c0      	cbnz	r0, 2fff2e9a <get_part_number+0x3a>
2fff2e68:	a801      	add	r0, sp, #4
2fff2e6a:	f005 fc2b 	bl	2fff86c4 <stm32mp1_dbgmcu_get_chip_dev_id>
2fff2e6e:	2800      	cmp	r0, #0
2fff2e70:	da05      	bge.n	2fff2e7e <get_part_number+0x1e>
2fff2e72:	480c      	ldr	r0, [pc, #48]	; (2fff2ea4 <get_part_number+0x44>)
2fff2e74:	f7ff fd32 	bl	2fff28dc <tf_log>
2fff2e78:	f44f 63a0 	mov.w	r3, #1280	; 0x500
2fff2e7c:	9301      	str	r3, [sp, #4]
2fff2e7e:	4908      	ldr	r1, [pc, #32]	; (2fff2ea0 <get_part_number+0x40>)
2fff2e80:	4809      	ldr	r0, [pc, #36]	; (2fff2ea8 <get_part_number+0x48>)
2fff2e82:	f7ff ffc9 	bl	2fff2e18 <stm32_get_otp_value>
2fff2e86:	b118      	cbz	r0, 2fff2e90 <get_part_number+0x30>
2fff2e88:	f7ff fdcc 	bl	2fff2a24 <console_flush>
2fff2e8c:	f005 edde 	blx	2fff8a4c <do_panic>
2fff2e90:	7820      	ldrb	r0, [r4, #0]
2fff2e92:	9b01      	ldr	r3, [sp, #4]
2fff2e94:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
2fff2e98:	6020      	str	r0, [r4, #0]
2fff2e9a:	b002      	add	sp, #8
2fff2e9c:	bd10      	pop	{r4, pc}
2fff2e9e:	bf00      	nop
2fff2ea0:	2fffe874 	.word	0x2fffe874
2fff2ea4:	2fffafac 	.word	0x2fffafac
2fff2ea8:	2fffafd2 	.word	0x2fffafd2

2fff2eac <stm32mp_supports_cpu_opp>:
2fff2eac:	1e43      	subs	r3, r0, #1
2fff2eae:	2b01      	cmp	r3, #1
2fff2eb0:	b510      	push	{r4, lr}
2fff2eb2:	4604      	mov	r4, r0
2fff2eb4:	d814      	bhi.n	2fff2ee0 <stm32mp_supports_cpu_opp+0x34>
2fff2eb6:	f7ff ffd3 	bl	2fff2e60 <get_part_number>
2fff2eba:	4b0b      	ldr	r3, [pc, #44]	; (2fff2ee8 <stm32mp_supports_cpu_opp+0x3c>)
2fff2ebc:	4298      	cmp	r0, r3
2fff2ebe:	d80b      	bhi.n	2fff2ed8 <stm32mp_supports_cpu_opp+0x2c>
2fff2ec0:	3b02      	subs	r3, #2
2fff2ec2:	4298      	cmp	r0, r3
2fff2ec4:	d80e      	bhi.n	2fff2ee4 <stm32mp_supports_cpu_opp+0x38>
2fff2ec6:	f100 437b 	add.w	r3, r0, #4211081216	; 0xfb000000
2fff2eca:	3b80      	subs	r3, #128	; 0x80
2fff2ecc:	2b01      	cmp	r3, #1
2fff2ece:	d909      	bls.n	2fff2ee4 <stm32mp_supports_cpu_opp+0x38>
2fff2ed0:	1e63      	subs	r3, r4, #1
2fff2ed2:	4258      	negs	r0, r3
2fff2ed4:	4158      	adcs	r0, r3
2fff2ed6:	bd10      	pop	{r4, pc}
2fff2ed8:	f100 437b 	add.w	r3, r0, #4211081216	; 0xfb000000
2fff2edc:	3bae      	subs	r3, #174	; 0xae
2fff2ede:	e7f5      	b.n	2fff2ecc <stm32mp_supports_cpu_opp+0x20>
2fff2ee0:	2000      	movs	r0, #0
2fff2ee2:	e7f8      	b.n	2fff2ed6 <stm32mp_supports_cpu_opp+0x2a>
2fff2ee4:	2001      	movs	r0, #1
2fff2ee6:	e7f6      	b.n	2fff2ed6 <stm32mp_supports_cpu_opp+0x2a>
2fff2ee8:	050000a5 	.word	0x050000a5

2fff2eec <stm32mp_is_single_core>:
2fff2eec:	b508      	push	{r3, lr}
2fff2eee:	f7ff ffb7 	bl	2fff2e60 <get_part_number>
2fff2ef2:	4b08      	ldr	r3, [pc, #32]	; (2fff2f14 <stm32mp_is_single_core+0x28>)
2fff2ef4:	4298      	cmp	r0, r3
2fff2ef6:	d805      	bhi.n	2fff2f04 <stm32mp_is_single_core+0x18>
2fff2ef8:	3b02      	subs	r3, #2
2fff2efa:	4298      	cmp	r0, r3
2fff2efc:	bf94      	ite	ls
2fff2efe:	2000      	movls	r0, #0
2fff2f00:	2001      	movhi	r0, #1
2fff2f02:	bd08      	pop	{r3, pc}
2fff2f04:	f100 407b 	add.w	r0, r0, #4211081216	; 0xfb000000
2fff2f08:	38ae      	subs	r0, #174	; 0xae
2fff2f0a:	2801      	cmp	r0, #1
2fff2f0c:	bf8c      	ite	hi
2fff2f0e:	2000      	movhi	r0, #0
2fff2f10:	2001      	movls	r0, #1
2fff2f12:	e7f6      	b.n	2fff2f02 <stm32mp_is_single_core+0x16>
2fff2f14:	0500002f 	.word	0x0500002f

2fff2f18 <stm32mp_plat_reset>:
2fff2f18:	b580      	push	{r7, lr}
2fff2f1a:	2600      	movs	r6, #0
2fff2f1c:	4c28      	ldr	r4, [pc, #160]	; (2fff2fc0 <stm32mp_plat_reset+0xa8>)
2fff2f1e:	f640 47c5 	movw	r7, #3269	; 0xcc5
2fff2f22:	4605      	mov	r5, r0
2fff2f24:	f7ff ff0e 	bl	2fff2d44 <stm32mp_mask_timer>
2fff2f28:	6860      	ldr	r0, [r4, #4]
2fff2f2a:	f002 f9d5 	bl	2fff52d8 <stm32mp_clk_is_enabled>
2fff2f2e:	b198      	cbz	r0, 2fff2f58 <stm32mp_plat_reset+0x40>
2fff2f30:	68a0      	ldr	r0, [r4, #8]
2fff2f32:	2860      	cmp	r0, #96	; 0x60
2fff2f34:	d10c      	bne.n	2fff2f50 <stm32mp_plat_reset+0x38>
2fff2f36:	f8d4 8000 	ldr.w	r8, [r4]
2fff2f3a:	45b8      	cmp	r8, r7
2fff2f3c:	d126      	bne.n	2fff2f8c <stm32mp_plat_reset+0x74>
2fff2f3e:	f7ff fe93 	bl	2fff2c68 <stm32mp_rcc_base>
2fff2f42:	f8d0 3198 	ldr.w	r3, [r0, #408]	; 0x198
2fff2f46:	f043 0320 	orr.w	r3, r3, #32
2fff2f4a:	f8c0 3198 	str.w	r3, [r0, #408]	; 0x198
2fff2f4e:	e003      	b.n	2fff2f58 <stm32mp_plat_reset+0x40>
2fff2f50:	f7fc f8fa 	bl	2ffef148 <etzpc_get_decprot>
2fff2f54:	2802      	cmp	r0, #2
2fff2f56:	d1ee      	bne.n	2fff2f36 <stm32mp_plat_reset+0x1e>
2fff2f58:	3601      	adds	r6, #1
2fff2f5a:	340c      	adds	r4, #12
2fff2f5c:	2e0b      	cmp	r6, #11
2fff2f5e:	d1e3      	bne.n	2fff2f28 <stm32mp_plat_reset+0x10>
2fff2f60:	f7ff ffc4 	bl	2fff2eec <stm32mp_is_single_core>
2fff2f64:	bb20      	cbnz	r0, 2fff2fb0 <stm32mp_plat_reset+0x98>
2fff2f66:	fab5 f185 	clz	r1, r5
2fff2f6a:	2009      	movs	r0, #9
2fff2f6c:	2530      	movs	r5, #48	; 0x30
2fff2f6e:	0949      	lsrs	r1, r1, #5
2fff2f70:	f7fe fa4e 	bl	2fff1410 <gicv2_raise_sgi>
2fff2f74:	f7fe fade 	bl	2fff1534 <plat_ic_get_pending_interrupt_id>
2fff2f78:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2fff2f7c:	4604      	mov	r4, r0
2fff2f7e:	d219      	bcs.n	2fff2fb4 <stm32mp_plat_reset+0x9c>
2fff2f80:	f7fe f96a 	bl	2fff1258 <gicv2_end_of_interrupt>
2fff2f84:	4620      	mov	r0, r4
2fff2f86:	f7fe fae3 	bl	2fff1550 <plat_ic_disable_interrupt>
2fff2f8a:	e7f3      	b.n	2fff2f74 <stm32mp_plat_reset+0x5c>
2fff2f8c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff2f90:	4640      	mov	r0, r8
2fff2f92:	f004 fedf 	bl	2fff7d54 <stm32mp_reset_assert_to>
2fff2f96:	b118      	cbz	r0, 2fff2fa0 <stm32mp_plat_reset+0x88>
2fff2f98:	f7ff fd44 	bl	2fff2a24 <console_flush>
2fff2f9c:	f005 ed56 	blx	2fff8a4c <do_panic>
2fff2fa0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff2fa4:	4640      	mov	r0, r8
2fff2fa6:	f004 ff0d 	bl	2fff7dc4 <stm32mp_reset_deassert_to>
2fff2faa:	2800      	cmp	r0, #0
2fff2fac:	d0d4      	beq.n	2fff2f58 <stm32mp_plat_reset+0x40>
2fff2fae:	e7f3      	b.n	2fff2f98 <stm32mp_plat_reset+0x80>
2fff2fb0:	2510      	movs	r5, #16
2fff2fb2:	e7df      	b.n	2fff2f74 <stm32mp_plat_reset+0x5c>
2fff2fb4:	f7ff fe58 	bl	2fff2c68 <stm32mp_rcc_base>
2fff2fb8:	f8c0 5404 	str.w	r5, [r0, #1028]	; 0x404
2fff2fbc:	f7ff fecf 	bl	2fff2d5e <stm32mp_wait_cpu_reset>
2fff2fc0:	2fffb068 	.word	0x2fffb068

2fff2fc4 <stm32_iwdg_get_instance>:
2fff2fc4:	b508      	push	{r3, lr}
2fff2fc6:	4b07      	ldr	r3, [pc, #28]	; (2fff2fe4 <stm32_iwdg_get_instance+0x20>)
2fff2fc8:	4298      	cmp	r0, r3
2fff2fca:	d006      	beq.n	2fff2fda <stm32_iwdg_get_instance+0x16>
2fff2fcc:	4b06      	ldr	r3, [pc, #24]	; (2fff2fe8 <stm32_iwdg_get_instance+0x24>)
2fff2fce:	4298      	cmp	r0, r3
2fff2fd0:	d005      	beq.n	2fff2fde <stm32_iwdg_get_instance+0x1a>
2fff2fd2:	f7ff fd27 	bl	2fff2a24 <console_flush>
2fff2fd6:	f005 ed3a 	blx	2fff8a4c <do_panic>
2fff2fda:	2001      	movs	r0, #1
2fff2fdc:	bd08      	pop	{r3, pc}
2fff2fde:	2000      	movs	r0, #0
2fff2fe0:	e7fc      	b.n	2fff2fdc <stm32_iwdg_get_instance+0x18>
2fff2fe2:	bf00      	nop
2fff2fe4:	5a002000 	.word	0x5a002000
2fff2fe8:	5c003000 	.word	0x5c003000

2fff2fec <stm32_iwdg_get_otp_config>:
2fff2fec:	b513      	push	{r0, r1, r4, lr}
2fff2fee:	4604      	mov	r4, r0
2fff2ff0:	4811      	ldr	r0, [pc, #68]	; (2fff3038 <stm32_iwdg_get_otp_config+0x4c>)
2fff2ff2:	a901      	add	r1, sp, #4
2fff2ff4:	f7ff ff10 	bl	2fff2e18 <stm32_get_otp_value>
2fff2ff8:	b118      	cbz	r0, 2fff3002 <stm32_iwdg_get_otp_config+0x16>
2fff2ffa:	f7ff fd13 	bl	2fff2a24 <console_flush>
2fff2ffe:	f005 ed26 	blx	2fff8a4c <do_panic>
2fff3002:	9a01      	ldr	r2, [sp, #4]
2fff3004:	2301      	movs	r3, #1
2fff3006:	1ce1      	adds	r1, r4, #3
2fff3008:	fa03 f101 	lsl.w	r1, r3, r1
2fff300c:	4211      	tst	r1, r2
2fff300e:	f104 0105 	add.w	r1, r4, #5
2fff3012:	f104 0407 	add.w	r4, r4, #7
2fff3016:	bf18      	it	ne
2fff3018:	4618      	movne	r0, r3
2fff301a:	fa03 f101 	lsl.w	r1, r3, r1
2fff301e:	bf08      	it	eq
2fff3020:	2000      	moveq	r0, #0
2fff3022:	40a3      	lsls	r3, r4
2fff3024:	4211      	tst	r1, r2
2fff3026:	bf18      	it	ne
2fff3028:	f040 0002 	orrne.w	r0, r0, #2
2fff302c:	4213      	tst	r3, r2
2fff302e:	bf18      	it	ne
2fff3030:	f040 0004 	orrne.w	r0, r0, #4
2fff3034:	b002      	add	sp, #8
2fff3036:	bd10      	pop	{r4, pc}
2fff3038:	2fffafe2 	.word	0x2fffafe2

2fff303c <stm32mp_etzpc_binding2decprot>:
2fff303c:	2803      	cmp	r0, #3
2fff303e:	b508      	push	{r3, lr}
2fff3040:	d903      	bls.n	2fff304a <stm32mp_etzpc_binding2decprot+0xe>
2fff3042:	f7ff fcef 	bl	2fff2a24 <console_flush>
2fff3046:	f005 ed02 	blx	2fff8a4c <do_panic>
2fff304a:	bd08      	pop	{r3, pc}

2fff304c <xlat_arch_get_max_supported_pa>:
2fff304c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff3050:	21ff      	movs	r1, #255	; 0xff
2fff3052:	4770      	bx	lr

2fff3054 <xlat_get_min_virt_addr_space_size>:
2fff3054:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
2fff3058:	4770      	bx	lr

2fff305a <is_dcache_enabled>:
2fff305a:	f3ef 8300 	mrs	r3, CPSR
2fff305e:	f003 031f 	and.w	r3, r3, #31
2fff3062:	2b1a      	cmp	r3, #26
2fff3064:	d104      	bne.n	2fff3070 <is_dcache_enabled+0x16>
2fff3066:	ee91 0f10 	mrc	15, 4, r0, cr1, cr0, {0}
2fff306a:	f3c0 0080 	ubfx	r0, r0, #2, #1
2fff306e:	4770      	bx	lr
2fff3070:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff3074:	e7f9      	b.n	2fff306a <is_dcache_enabled+0x10>
	...

2fff3078 <xlat_arch_regime_get_xn_desc>:
2fff3078:	2801      	cmp	r0, #1
2fff307a:	b508      	push	{r3, lr}
2fff307c:	d005      	beq.n	2fff308a <xlat_arch_regime_get_xn_desc+0x12>
2fff307e:	2802      	cmp	r0, #2
2fff3080:	d007      	beq.n	2fff3092 <xlat_arch_regime_get_xn_desc+0x1a>
2fff3082:	4806      	ldr	r0, [pc, #24]	; (2fff309c <xlat_arch_regime_get_xn_desc+0x24>)
2fff3084:	2154      	movs	r1, #84	; 0x54
2fff3086:	f006 fd1b 	bl	2fff9ac0 <__assert>
2fff308a:	2000      	movs	r0, #0
2fff308c:	f44f 01c0 	mov.w	r1, #6291456	; 0x600000
2fff3090:	bd08      	pop	{r3, pc}
2fff3092:	2000      	movs	r0, #0
2fff3094:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
2fff3098:	e7fa      	b.n	2fff3090 <xlat_arch_regime_get_xn_desc+0x18>
2fff309a:	bf00      	nop
2fff309c:	2fffb0ec 	.word	0x2fffb0ec

2fff30a0 <xlat_arch_tlbi_va>:
2fff30a0:	b508      	push	{r3, lr}
2fff30a2:	f3bf 8f4a 	dsb	ishst
2fff30a6:	f420 607f 	bic.w	r0, r0, #4080	; 0xff0
2fff30aa:	2901      	cmp	r1, #1
2fff30ac:	f020 000f 	bic.w	r0, r0, #15
2fff30b0:	d102      	bne.n	2fff30b8 <xlat_arch_tlbi_va+0x18>
2fff30b2:	ee08 0f73 	mcr	15, 0, r0, cr8, cr3, {3}
2fff30b6:	bd08      	pop	{r3, pc}
2fff30b8:	2902      	cmp	r1, #2
2fff30ba:	d003      	beq.n	2fff30c4 <xlat_arch_tlbi_va+0x24>
2fff30bc:	4803      	ldr	r0, [pc, #12]	; (2fff30cc <xlat_arch_tlbi_va+0x2c>)
2fff30be:	2164      	movs	r1, #100	; 0x64
2fff30c0:	f006 fcfe 	bl	2fff9ac0 <__assert>
2fff30c4:	ee88 0f33 	mcr	15, 4, r0, cr8, cr3, {1}
2fff30c8:	e7f5      	b.n	2fff30b6 <xlat_arch_tlbi_va+0x16>
2fff30ca:	bf00      	nop
2fff30cc:	2fffb0ec 	.word	0x2fffb0ec

2fff30d0 <xlat_arch_tlbi_va_sync>:
2fff30d0:	2300      	movs	r3, #0
2fff30d2:	ee07 3fd1 	mcr	15, 0, r3, cr7, cr1, {6}
2fff30d6:	f3bf 8f4b 	dsb	ish
2fff30da:	f3bf 8f6f 	isb	sy
2fff30de:	4770      	bx	lr

2fff30e0 <xlat_arch_current_el>:
2fff30e0:	b508      	push	{r3, lr}
2fff30e2:	f3ef 8300 	mrs	r3, CPSR
2fff30e6:	f003 031f 	and.w	r3, r3, #31
2fff30ea:	2b1a      	cmp	r3, #26
2fff30ec:	d00f      	beq.n	2fff310e <xlat_arch_current_el+0x2e>
2fff30ee:	f3ef 8300 	mrs	r3, CPSR
2fff30f2:	f003 031f 	and.w	r3, r3, #31
2fff30f6:	2b13      	cmp	r3, #19
2fff30f8:	d00b      	beq.n	2fff3112 <xlat_arch_current_el+0x32>
2fff30fa:	f3ef 8300 	mrs	r3, CPSR
2fff30fe:	f003 031f 	and.w	r3, r3, #31
2fff3102:	2b16      	cmp	r3, #22
2fff3104:	d005      	beq.n	2fff3112 <xlat_arch_current_el+0x32>
2fff3106:	4804      	ldr	r0, [pc, #16]	; (2fff3118 <xlat_arch_current_el+0x38>)
2fff3108:	2188      	movs	r1, #136	; 0x88
2fff310a:	f006 fcd9 	bl	2fff9ac0 <__assert>
2fff310e:	2002      	movs	r0, #2
2fff3110:	bd08      	pop	{r3, pc}
2fff3112:	2001      	movs	r0, #1
2fff3114:	e7fc      	b.n	2fff3110 <xlat_arch_current_el+0x30>
2fff3116:	bf00      	nop
2fff3118:	2fffb0ec 	.word	0x2fffb0ec

2fff311c <is_mmu_enabled_ctx>:
2fff311c:	b508      	push	{r3, lr}
2fff311e:	6c43      	ldr	r3, [r0, #68]	; 0x44
2fff3120:	2b01      	cmp	r3, #1
2fff3122:	d10c      	bne.n	2fff313e <is_mmu_enabled_ctx+0x22>
2fff3124:	f7ff ffdc 	bl	2fff30e0 <xlat_arch_current_el>
2fff3128:	2801      	cmp	r0, #1
2fff312a:	d003      	beq.n	2fff3134 <is_mmu_enabled_ctx+0x18>
2fff312c:	213d      	movs	r1, #61	; 0x3d
2fff312e:	480a      	ldr	r0, [pc, #40]	; (2fff3158 <is_mmu_enabled_ctx+0x3c>)
2fff3130:	f006 fcc6 	bl	2fff9ac0 <__assert>
2fff3134:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff3138:	f000 0001 	and.w	r0, r0, #1
2fff313c:	bd08      	pop	{r3, pc}
2fff313e:	2b02      	cmp	r3, #2
2fff3140:	d001      	beq.n	2fff3146 <is_mmu_enabled_ctx+0x2a>
2fff3142:	2140      	movs	r1, #64	; 0x40
2fff3144:	e7f3      	b.n	2fff312e <is_mmu_enabled_ctx+0x12>
2fff3146:	f7ff ffcb 	bl	2fff30e0 <xlat_arch_current_el>
2fff314a:	2802      	cmp	r0, #2
2fff314c:	d001      	beq.n	2fff3152 <is_mmu_enabled_ctx+0x36>
2fff314e:	2141      	movs	r1, #65	; 0x41
2fff3150:	e7ed      	b.n	2fff312e <is_mmu_enabled_ctx+0x12>
2fff3152:	ee91 0f10 	mrc	15, 4, r0, cr1, cr0, {0}
2fff3156:	e7ef      	b.n	2fff3138 <is_mmu_enabled_ctx+0x1c>
2fff3158:	2fffb0ec 	.word	0x2fffb0ec

2fff315c <setup_mmu_cfg>:
2fff315c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff315e:	4616      	mov	r6, r2
2fff3160:	9a09      	ldr	r2, [sp, #36]	; 0x24
2fff3162:	460f      	mov	r7, r1
2fff3164:	9908      	ldr	r1, [sp, #32]
2fff3166:	4604      	mov	r4, r0
2fff3168:	2a01      	cmp	r2, #1
2fff316a:	d10f      	bne.n	2fff318c <setup_mmu_cfg+0x30>
2fff316c:	f3ef 8200 	mrs	r2, CPSR
2fff3170:	f002 021f 	and.w	r2, r2, #31
2fff3174:	2a13      	cmp	r2, #19
2fff3176:	d015      	beq.n	2fff31a4 <setup_mmu_cfg+0x48>
2fff3178:	f3ef 8200 	mrs	r2, CPSR
2fff317c:	f002 021f 	and.w	r2, r2, #31
2fff3180:	2a16      	cmp	r2, #22
2fff3182:	d00f      	beq.n	2fff31a4 <setup_mmu_cfg+0x48>
2fff3184:	21b1      	movs	r1, #177	; 0xb1
2fff3186:	481c      	ldr	r0, [pc, #112]	; (2fff31f8 <setup_mmu_cfg+0x9c>)
2fff3188:	f006 fc9a 	bl	2fff9ac0 <__assert>
2fff318c:	2a02      	cmp	r2, #2
2fff318e:	d001      	beq.n	2fff3194 <setup_mmu_cfg+0x38>
2fff3190:	21b8      	movs	r1, #184	; 0xb8
2fff3192:	e7f8      	b.n	2fff3186 <setup_mmu_cfg+0x2a>
2fff3194:	f3ef 8200 	mrs	r2, CPSR
2fff3198:	f002 021f 	and.w	r2, r2, #31
2fff319c:	2a1a      	cmp	r2, #26
2fff319e:	d00a      	beq.n	2fff31b6 <setup_mmu_cfg+0x5a>
2fff31a0:	21b9      	movs	r1, #185	; 0xb9
2fff31a2:	e7f0      	b.n	2fff3186 <setup_mmu_cfg+0x2a>
2fff31a4:	4d15      	ldr	r5, [pc, #84]	; (2fff31fc <setup_mmu_cfg+0xa0>)
2fff31a6:	1c4a      	adds	r2, r1, #1
2fff31a8:	d010      	beq.n	2fff31cc <setup_mmu_cfg+0x70>
2fff31aa:	1c48      	adds	r0, r1, #1
2fff31ac:	f1b0 7f00 	cmp.w	r0, #33554432	; 0x2000000
2fff31b0:	d203      	bcs.n	2fff31ba <setup_mmu_cfg+0x5e>
2fff31b2:	21cc      	movs	r1, #204	; 0xcc
2fff31b4:	e7e7      	b.n	2fff3186 <setup_mmu_cfg+0x2a>
2fff31b6:	4d12      	ldr	r5, [pc, #72]	; (2fff3200 <setup_mmu_cfg+0xa4>)
2fff31b8:	e7f5      	b.n	2fff31a6 <setup_mmu_cfg+0x4a>
2fff31ba:	4001      	ands	r1, r0
2fff31bc:	d001      	beq.n	2fff31c2 <setup_mmu_cfg+0x66>
2fff31be:	21d0      	movs	r1, #208	; 0xd0
2fff31c0:	e7e1      	b.n	2fff3186 <setup_mmu_cfg+0x2a>
2fff31c2:	f7ff fc63 	bl	2fff2a8c <__ctzdi2>
2fff31c6:	f1c0 0020 	rsb	r0, r0, #32
2fff31ca:	4305      	orrs	r5, r0
2fff31cc:	07bb      	lsls	r3, r7, #30
2fff31ce:	bf58      	it	pl
2fff31d0:	f445 5554 	orrpl.w	r5, r5, #13568	; 0x3500
2fff31d4:	ee10 3fd2 	mrc	15, 0, r3, cr0, cr2, {6}
2fff31d8:	480a      	ldr	r0, [pc, #40]	; (2fff3204 <setup_mmu_cfg+0xa8>)
2fff31da:	f413 4f70 	tst.w	r3, #61440	; 0xf000
2fff31de:	bf18      	it	ne
2fff31e0:	f046 0601 	orrne.w	r6, r6, #1
2fff31e4:	2300      	movs	r3, #0
2fff31e6:	2100      	movs	r1, #0
2fff31e8:	e9c4 0100 	strd	r0, r1, [r4]
2fff31ec:	e9c4 5302 	strd	r5, r3, [r4, #8]
2fff31f0:	e9c4 6304 	strd	r6, r3, [r4, #16]
2fff31f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff31f6:	bf00      	nop
2fff31f8:	2fffb0ec 	.word	0x2fffb0ec
2fff31fc:	80800000 	.word	0x80800000
2fff3200:	80803500 	.word	0x80803500
2fff3204:	004404ff 	.word	0x004404ff

2fff3208 <mmap_add_region>:
2fff3208:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2fff320a:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff320e:	9b08      	ldr	r3, [sp, #32]
2fff3210:	e9cd 0100 	strd	r0, r1, [sp]
2fff3214:	9304      	str	r3, [sp, #16]
2fff3216:	4669      	mov	r1, sp
2fff3218:	4804      	ldr	r0, [pc, #16]	; (2fff322c <mmap_add_region+0x24>)
2fff321a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
2fff321e:	9305      	str	r3, [sp, #20]
2fff3220:	f000 fb0e 	bl	2fff3840 <mmap_add_region_ctx>
2fff3224:	b007      	add	sp, #28
2fff3226:	f85d fb04 	ldr.w	pc, [sp], #4
2fff322a:	bf00      	nop
2fff322c:	2fffd3b0 	.word	0x2fffd3b0

2fff3230 <mmap_add>:
2fff3230:	4601      	mov	r1, r0
2fff3232:	4801      	ldr	r0, [pc, #4]	; (2fff3238 <mmap_add+0x8>)
2fff3234:	f000 bb7c 	b.w	2fff3930 <mmap_add_ctx>
2fff3238:	2fffd3b0 	.word	0x2fffd3b0

2fff323c <mmap_add_dynamic_region>:
2fff323c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2fff323e:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff3242:	9b08      	ldr	r3, [sp, #32]
2fff3244:	e9cd 0100 	strd	r0, r1, [sp]
2fff3248:	9304      	str	r3, [sp, #16]
2fff324a:	4669      	mov	r1, sp
2fff324c:	4804      	ldr	r0, [pc, #16]	; (2fff3260 <mmap_add_dynamic_region+0x24>)
2fff324e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
2fff3252:	9305      	str	r3, [sp, #20]
2fff3254:	f000 fb78 	bl	2fff3948 <mmap_add_dynamic_region_ctx>
2fff3258:	b007      	add	sp, #28
2fff325a:	f85d fb04 	ldr.w	pc, [sp], #4
2fff325e:	bf00      	nop
2fff3260:	2fffd3b0 	.word	0x2fffd3b0

2fff3264 <mmap_remove_dynamic_region>:
2fff3264:	460a      	mov	r2, r1
2fff3266:	4601      	mov	r1, r0
2fff3268:	4801      	ldr	r0, [pc, #4]	; (2fff3270 <mmap_remove_dynamic_region+0xc>)
2fff326a:	f000 bc21 	b.w	2fff3ab0 <mmap_remove_dynamic_region_ctx>
2fff326e:	bf00      	nop
2fff3270:	2fffd3b0 	.word	0x2fffd3b0

2fff3274 <init_xlat_tables>:
2fff3274:	b510      	push	{r4, lr}
2fff3276:	4c0c      	ldr	r4, [pc, #48]	; (2fff32a8 <init_xlat_tables+0x34>)
2fff3278:	6c63      	ldr	r3, [r4, #68]	; 0x44
2fff327a:	3301      	adds	r3, #1
2fff327c:	d003      	beq.n	2fff3286 <init_xlat_tables+0x12>
2fff327e:	2160      	movs	r1, #96	; 0x60
2fff3280:	480a      	ldr	r0, [pc, #40]	; (2fff32ac <init_xlat_tables+0x38>)
2fff3282:	f006 fc1d 	bl	2fff9ac0 <__assert>
2fff3286:	f7ff ff2b 	bl	2fff30e0 <xlat_arch_current_el>
2fff328a:	2801      	cmp	r0, #1
2fff328c:	d105      	bne.n	2fff329a <init_xlat_tables+0x26>
2fff328e:	6460      	str	r0, [r4, #68]	; 0x44
2fff3290:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff3294:	4804      	ldr	r0, [pc, #16]	; (2fff32a8 <init_xlat_tables+0x34>)
2fff3296:	f000 bc91 	b.w	2fff3bbc <init_xlat_tables_ctx>
2fff329a:	2802      	cmp	r0, #2
2fff329c:	d0f7      	beq.n	2fff328e <init_xlat_tables+0x1a>
2fff329e:	2803      	cmp	r0, #3
2fff32a0:	d0f5      	beq.n	2fff328e <init_xlat_tables+0x1a>
2fff32a2:	2169      	movs	r1, #105	; 0x69
2fff32a4:	e7ec      	b.n	2fff3280 <init_xlat_tables+0xc>
2fff32a6:	bf00      	nop
2fff32a8:	2fffd3b0 	.word	0x2fffd3b0
2fff32ac:	2fffb11a 	.word	0x2fffb11a

2fff32b0 <enable_mmu_svc_mon>:
2fff32b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff32b2:	2201      	movs	r2, #1
2fff32b4:	4b09      	ldr	r3, [pc, #36]	; (2fff32dc <enable_mmu_svc_mon+0x2c>)
2fff32b6:	4604      	mov	r4, r0
2fff32b8:	9203      	str	r2, [sp, #12]
2fff32ba:	689a      	ldr	r2, [r3, #8]
2fff32bc:	9202      	str	r2, [sp, #8]
2fff32be:	e9d3 0100 	ldrd	r0, r1, [r3]
2fff32c2:	e9cd 0100 	strd	r0, r1, [sp]
2fff32c6:	4806      	ldr	r0, [pc, #24]	; (2fff32e0 <enable_mmu_svc_mon+0x30>)
2fff32c8:	4621      	mov	r1, r4
2fff32ca:	6a5a      	ldr	r2, [r3, #36]	; 0x24
2fff32cc:	f7ff ff46 	bl	2fff315c <setup_mmu_cfg>
2fff32d0:	4620      	mov	r0, r4
2fff32d2:	b004      	add	sp, #16
2fff32d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff32d8:	f009 ba62 	b.w	2fffc7a0 <__enable_mmu_direct_svc_mon_from_thumb>
2fff32dc:	2fffd3b0 	.word	0x2fffd3b0
2fff32e0:	2fffec88 	.word	0x2fffec88

2fff32e4 <mmap_add_region_check>:
2fff32e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff32e8:	2700      	movs	r7, #0
2fff32ea:	e9d1 8900 	ldrd	r8, r9, [r1]
2fff32ee:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
2fff32f2:	f3c8 060b 	ubfx	r6, r8, #0, #12
2fff32f6:	f118 3aff 	adds.w	sl, r8, #4294967295	; 0xffffffff
2fff32fa:	f149 3bff 	adc.w	fp, r9, #4294967295	; 0xffffffff
2fff32fe:	b089      	sub	sp, #36	; 0x24
2fff3300:	eb1a 0a05 	adds.w	sl, sl, r5
2fff3304:	f14b 0b00 	adc.w	fp, fp, #0
2fff3308:	433e      	orrs	r6, r7
2fff330a:	eb02 0405 	add.w	r4, r2, r5
2fff330e:	694b      	ldr	r3, [r1, #20]
2fff3310:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
2fff3314:	e9cd ab00 	strd	sl, fp, [sp]
2fff3318:	f040 8082 	bne.w	2fff3420 <mmap_add_region_check+0x13c>
2fff331c:	ea42 0605 	orr.w	r6, r2, r5
2fff3320:	f3c6 060b 	ubfx	r6, r6, #0, #12
2fff3324:	2e00      	cmp	r6, #0
2fff3326:	d17b      	bne.n	2fff3420 <mmap_add_region_check+0x13c>
2fff3328:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
2fff332c:	d005      	beq.n	2fff333a <mmap_add_region_check+0x56>
2fff332e:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
2fff3332:	d002      	beq.n	2fff333a <mmap_add_region_check+0x56>
2fff3334:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
2fff3338:	d172      	bne.n	2fff3420 <mmap_add_region_check+0x13c>
2fff333a:	e9dd 6700 	ldrd	r6, r7, [sp]
2fff333e:	454f      	cmp	r7, r9
2fff3340:	bf08      	it	eq
2fff3342:	4546      	cmpeq	r6, r8
2fff3344:	d36f      	bcc.n	2fff3426 <mmap_add_region_check+0x142>
2fff3346:	42a2      	cmp	r2, r4
2fff3348:	d86d      	bhi.n	2fff3426 <mmap_add_region_check+0x142>
2fff334a:	6883      	ldr	r3, [r0, #8]
2fff334c:	42a3      	cmp	r3, r4
2fff334e:	d36a      	bcc.n	2fff3426 <mmap_add_region_check+0x142>
2fff3350:	e9d0 6700 	ldrd	r6, r7, [r0]
2fff3354:	e9dd ab00 	ldrd	sl, fp, [sp]
2fff3358:	455f      	cmp	r7, fp
2fff335a:	bf08      	it	eq
2fff335c:	4556      	cmpeq	r6, sl
2fff335e:	d362      	bcc.n	2fff3426 <mmap_add_region_check+0x142>
2fff3360:	68c3      	ldr	r3, [r0, #12]
2fff3362:	2618      	movs	r6, #24
2fff3364:	6900      	ldr	r0, [r0, #16]
2fff3366:	fb06 3000 	mla	r0, r6, r0, r3
2fff336a:	f850 0c0c 	ldr.w	r0, [r0, #-12]
2fff336e:	2800      	cmp	r0, #0
2fff3370:	d15c      	bne.n	2fff342c <mmap_add_region_check+0x148>
2fff3372:	ebb2 0008 	subs.w	r0, r2, r8
2fff3376:	4433      	add	r3, r6
2fff3378:	9006      	str	r0, [sp, #24]
2fff337a:	eb69 0049 	sbc.w	r0, r9, r9, lsl #1
2fff337e:	9007      	str	r0, [sp, #28]
2fff3380:	f853 0c0c 	ldr.w	r0, [r3, #-12]
2fff3384:	b910      	cbnz	r0, 2fff338c <mmap_add_region_check+0xa8>
2fff3386:	b009      	add	sp, #36	; 0x24
2fff3388:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff338c:	f853 cc10 	ldr.w	ip, [r3, #-16]
2fff3390:	4594      	cmp	ip, r2
2fff3392:	eb0c 0e00 	add.w	lr, ip, r0
2fff3396:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
2fff339a:	d820      	bhi.n	2fff33de <mmap_add_region_check+0xfa>
2fff339c:	4574      	cmp	r4, lr
2fff339e:	d920      	bls.n	2fff33e2 <mmap_add_region_check+0xfe>
2fff33a0:	4594      	cmp	ip, r2
2fff33a2:	d01e      	beq.n	2fff33e2 <mmap_add_region_check+0xfe>
2fff33a4:	e953 ab06 	ldrd	sl, fp, [r3, #-24]
2fff33a8:	e9dd 6700 	ldrd	r6, r7, [sp]
2fff33ac:	455f      	cmp	r7, fp
2fff33ae:	bf08      	it	eq
2fff33b0:	4556      	cmpeq	r6, sl
2fff33b2:	d33e      	bcc.n	2fff3432 <mmap_add_region_check+0x14e>
2fff33b4:	f11a 36ff 	adds.w	r6, sl, #4294967295	; 0xffffffff
2fff33b8:	9604      	str	r6, [sp, #16]
2fff33ba:	f14b 36ff 	adc.w	r6, fp, #4294967295	; 0xffffffff
2fff33be:	9605      	str	r6, [sp, #20]
2fff33c0:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
2fff33c4:	1836      	adds	r6, r6, r0
2fff33c6:	f147 0700 	adc.w	r7, r7, #0
2fff33ca:	45a4      	cmp	ip, r4
2fff33cc:	d801      	bhi.n	2fff33d2 <mmap_add_region_check+0xee>
2fff33ce:	4572      	cmp	r2, lr
2fff33d0:	d923      	bls.n	2fff341a <mmap_add_region_check+0x136>
2fff33d2:	454f      	cmp	r7, r9
2fff33d4:	bf08      	it	eq
2fff33d6:	4546      	cmpeq	r6, r8
2fff33d8:	d21f      	bcs.n	2fff341a <mmap_add_region_check+0x136>
2fff33da:	3318      	adds	r3, #24
2fff33dc:	e7d0      	b.n	2fff3380 <mmap_add_region_check+0x9c>
2fff33de:	4574      	cmp	r4, lr
2fff33e0:	d3e0      	bcc.n	2fff33a4 <mmap_add_region_check+0xc0>
2fff33e2:	690e      	ldr	r6, [r1, #16]
2fff33e4:	2e00      	cmp	r6, #0
2fff33e6:	db18      	blt.n	2fff341a <mmap_add_region_check+0x136>
2fff33e8:	f853 6c08 	ldr.w	r6, [r3, #-8]
2fff33ec:	2e00      	cmp	r6, #0
2fff33ee:	db14      	blt.n	2fff341a <mmap_add_region_check+0x136>
2fff33f0:	e953 6706 	ldrd	r6, r7, [r3, #-24]
2fff33f4:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
2fff33f8:	ebbc 0606 	subs.w	r6, ip, r6
2fff33fc:	46e6      	mov	lr, ip
2fff33fe:	9602      	str	r6, [sp, #8]
2fff3400:	eb67 0647 	sbc.w	r6, r7, r7, lsl #1
2fff3404:	9603      	str	r6, [sp, #12]
2fff3406:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
2fff340a:	455f      	cmp	r7, fp
2fff340c:	bf08      	it	eq
2fff340e:	4556      	cmpeq	r6, sl
2fff3410:	d103      	bne.n	2fff341a <mmap_add_region_check+0x136>
2fff3412:	4594      	cmp	ip, r2
2fff3414:	d1e1      	bne.n	2fff33da <mmap_add_region_check+0xf6>
2fff3416:	42a8      	cmp	r0, r5
2fff3418:	d1df      	bne.n	2fff33da <mmap_add_region_check+0xf6>
2fff341a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff341e:	e7b2      	b.n	2fff3386 <mmap_add_region_check+0xa2>
2fff3420:	f06f 0015 	mvn.w	r0, #21
2fff3424:	e7af      	b.n	2fff3386 <mmap_add_region_check+0xa2>
2fff3426:	f06f 0021 	mvn.w	r0, #33	; 0x21
2fff342a:	e7ac      	b.n	2fff3386 <mmap_add_region_check+0xa2>
2fff342c:	f06f 000b 	mvn.w	r0, #11
2fff3430:	e7a9      	b.n	2fff3386 <mmap_add_region_check+0xa2>
2fff3432:	45a4      	cmp	ip, r4
2fff3434:	d8d1      	bhi.n	2fff33da <mmap_add_region_check+0xf6>
2fff3436:	4572      	cmp	r2, lr
2fff3438:	d8cf      	bhi.n	2fff33da <mmap_add_region_check+0xf6>
2fff343a:	e7ee      	b.n	2fff341a <mmap_add_region_check+0x136>

2fff343c <xlat_clean_dcache_range>:
2fff343c:	b538      	push	{r3, r4, r5, lr}
2fff343e:	4604      	mov	r4, r0
2fff3440:	460d      	mov	r5, r1
2fff3442:	f7ff fe0a 	bl	2fff305a <is_dcache_enabled>
2fff3446:	b128      	cbz	r0, 2fff3454 <xlat_clean_dcache_range+0x18>
2fff3448:	4629      	mov	r1, r5
2fff344a:	4620      	mov	r0, r4
2fff344c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff3450:	f009 b9aa 	b.w	2fffc7a8 <__clean_dcache_range_from_thumb>
2fff3454:	bd38      	pop	{r3, r4, r5, pc}
	...

2fff3458 <xlat_table_get_index>:
2fff3458:	4603      	mov	r3, r0
2fff345a:	b510      	push	{r4, lr}
2fff345c:	6984      	ldr	r4, [r0, #24]
2fff345e:	2000      	movs	r0, #0
2fff3460:	4284      	cmp	r4, r0
2fff3462:	dc03      	bgt.n	2fff346c <xlat_table_get_index+0x14>
2fff3464:	4805      	ldr	r0, [pc, #20]	; (2fff347c <xlat_table_get_index+0x24>)
2fff3466:	2135      	movs	r1, #53	; 0x35
2fff3468:	f006 fb2a 	bl	2fff9ac0 <__assert>
2fff346c:	695a      	ldr	r2, [r3, #20]
2fff346e:	eb02 3200 	add.w	r2, r2, r0, lsl #12
2fff3472:	4291      	cmp	r1, r2
2fff3474:	d001      	beq.n	2fff347a <xlat_table_get_index+0x22>
2fff3476:	3001      	adds	r0, #1
2fff3478:	e7f2      	b.n	2fff3460 <xlat_table_get_index+0x8>
2fff347a:	bd10      	pop	{r4, pc}
2fff347c:	2fffb143 	.word	0x2fffb143

2fff3480 <xlat_tables_unmap_region>:
2fff3480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff3484:	b089      	sub	sp, #36	; 0x24
2fff3486:	469a      	mov	sl, r3
2fff3488:	460e      	mov	r6, r1
2fff348a:	9f13      	ldr	r7, [sp, #76]	; 0x4c
2fff348c:	4605      	mov	r5, r0
2fff348e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
2fff3490:	4611      	mov	r1, r2
2fff3492:	42bb      	cmp	r3, r7
2fff3494:	d801      	bhi.n	2fff349a <xlat_tables_unmap_region+0x1a>
2fff3496:	2f03      	cmp	r7, #3
2fff3498:	d904      	bls.n	2fff34a4 <xlat_tables_unmap_region+0x24>
2fff349a:	f240 115f 	movw	r1, #351	; 0x15f
2fff349e:	484d      	ldr	r0, [pc, #308]	; (2fff35d4 <xlat_tables_unmap_region+0x154>)
2fff34a0:	f006 fb0e 	bl	2fff9ac0 <__assert>
2fff34a4:	e9d6 2302 	ldrd	r2, r3, [r6, #8]
2fff34a8:	f06f 0408 	mvn.w	r4, #8
2fff34ac:	f04f 0901 	mov.w	r9, #1
2fff34b0:	4413      	add	r3, r2
2fff34b2:	437c      	muls	r4, r7
2fff34b4:	428a      	cmp	r2, r1
2fff34b6:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
2fff34ba:	9306      	str	r3, [sp, #24]
2fff34bc:	f104 0327 	add.w	r3, r4, #39	; 0x27
2fff34c0:	bf98      	it	ls
2fff34c2:	460a      	movls	r2, r1
2fff34c4:	fa09 f003 	lsl.w	r0, r9, r3
2fff34c8:	9005      	str	r0, [sp, #20]
2fff34ca:	bf84      	itt	hi
2fff34cc:	4240      	neghi	r0, r0
2fff34ce:	4002      	andhi	r2, r0
2fff34d0:	1a54      	subs	r4, r2, r1
2fff34d2:	40dc      	lsrs	r4, r3
2fff34d4:	eb0a 08c4 	add.w	r8, sl, r4, lsl #3
2fff34d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
2fff34da:	429c      	cmp	r4, r3
2fff34dc:	d26a      	bcs.n	2fff35b4 <xlat_tables_unmap_region+0x134>
2fff34de:	9b05      	ldr	r3, [sp, #20]
2fff34e0:	eb02 0b03 	add.w	fp, r2, r3
2fff34e4:	f8d8 3000 	ldr.w	r3, [r8]
2fff34e8:	f003 0103 	and.w	r1, r3, #3
2fff34ec:	9102      	str	r1, [sp, #8]
2fff34ee:	2100      	movs	r1, #0
2fff34f0:	9103      	str	r1, [sp, #12]
2fff34f2:	e9d6 1002 	ldrd	r1, r0, [r6, #8]
2fff34f6:	428a      	cmp	r2, r1
2fff34f8:	eb01 0c00 	add.w	ip, r1, r0
2fff34fc:	f10b 30ff 	add.w	r0, fp, #4294967295	; 0xffffffff
2fff3500:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
2fff3504:	d317      	bcc.n	2fff3536 <xlat_tables_unmap_region+0xb6>
2fff3506:	4584      	cmp	ip, r0
2fff3508:	d315      	bcc.n	2fff3536 <xlat_tables_unmap_region+0xb6>
2fff350a:	2f03      	cmp	r7, #3
2fff350c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
2fff3510:	d106      	bne.n	2fff3520 <xlat_tables_unmap_region+0xa0>
2fff3512:	2900      	cmp	r1, #0
2fff3514:	bf08      	it	eq
2fff3516:	2803      	cmpeq	r0, #3
2fff3518:	d03e      	beq.n	2fff3598 <xlat_tables_unmap_region+0x118>
2fff351a:	f44f 7196 	mov.w	r1, #300	; 0x12c
2fff351e:	e7be      	b.n	2fff349e <xlat_tables_unmap_region+0x1e>
2fff3520:	2900      	cmp	r1, #0
2fff3522:	bf08      	it	eq
2fff3524:	2803      	cmpeq	r0, #3
2fff3526:	d01a      	beq.n	2fff355e <xlat_tables_unmap_region+0xde>
2fff3528:	2900      	cmp	r1, #0
2fff352a:	bf08      	it	eq
2fff352c:	2801      	cmpeq	r0, #1
2fff352e:	d033      	beq.n	2fff3598 <xlat_tables_unmap_region+0x118>
2fff3530:	f240 113b 	movw	r1, #315	; 0x13b
2fff3534:	e7b3      	b.n	2fff349e <xlat_tables_unmap_region+0x1e>
2fff3536:	4281      	cmp	r1, r0
2fff3538:	d901      	bls.n	2fff353e <xlat_tables_unmap_region+0xbe>
2fff353a:	4562      	cmp	r2, ip
2fff353c:	d834      	bhi.n	2fff35a8 <xlat_tables_unmap_region+0x128>
2fff353e:	2f03      	cmp	r7, #3
2fff3540:	d102      	bne.n	2fff3548 <xlat_tables_unmap_region+0xc8>
2fff3542:	f44f 71a5 	mov.w	r1, #330	; 0x14a
2fff3546:	e7aa      	b.n	2fff349e <xlat_tables_unmap_region+0x1e>
2fff3548:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
2fff354c:	2900      	cmp	r1, #0
2fff354e:	bf08      	it	eq
2fff3550:	2803      	cmpeq	r0, #3
2fff3552:	d004      	beq.n	2fff355e <xlat_tables_unmap_region+0xde>
2fff3554:	f240 114b 	movw	r1, #331	; 0x14b
2fff3558:	e7a1      	b.n	2fff349e <xlat_tables_unmap_region+0x1e>
2fff355a:	465a      	mov	r2, fp
2fff355c:	e7bc      	b.n	2fff34d8 <xlat_tables_unmap_region+0x58>
2fff355e:	f423 697f 	bic.w	r9, r3, #4080	; 0xff0
2fff3562:	1c79      	adds	r1, r7, #1
2fff3564:	f029 090f 	bic.w	r9, r9, #15
2fff3568:	4628      	mov	r0, r5
2fff356a:	9101      	str	r1, [sp, #4]
2fff356c:	f44f 7100 	mov.w	r1, #512	; 0x200
2fff3570:	9100      	str	r1, [sp, #0]
2fff3572:	464b      	mov	r3, r9
2fff3574:	9207      	str	r2, [sp, #28]
2fff3576:	4631      	mov	r1, r6
2fff3578:	f7ff ff82 	bl	2fff3480 <xlat_tables_unmap_region>
2fff357c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
2fff3580:	4648      	mov	r0, r9
2fff3582:	f7ff ff5b 	bl	2fff343c <xlat_clean_dcache_range>
2fff3586:	4649      	mov	r1, r9
2fff3588:	4628      	mov	r0, r5
2fff358a:	f7ff ff65 	bl	2fff3458 <xlat_table_get_index>
2fff358e:	69eb      	ldr	r3, [r5, #28]
2fff3590:	9a07      	ldr	r2, [sp, #28]
2fff3592:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
2fff3596:	b93b      	cbnz	r3, 2fff35a8 <xlat_tables_unmap_region+0x128>
2fff3598:	2000      	movs	r0, #0
2fff359a:	2100      	movs	r1, #0
2fff359c:	e9c8 0100 	strd	r0, r1, [r8]
2fff35a0:	6c69      	ldr	r1, [r5, #68]	; 0x44
2fff35a2:	4610      	mov	r0, r2
2fff35a4:	f7ff fd7c 	bl	2fff30a0 <xlat_arch_tlbi_va>
2fff35a8:	9b06      	ldr	r3, [sp, #24]
2fff35aa:	3401      	adds	r4, #1
2fff35ac:	f108 0808 	add.w	r8, r8, #8
2fff35b0:	459b      	cmp	fp, r3
2fff35b2:	d3d2      	bcc.n	2fff355a <xlat_tables_unmap_region+0xda>
2fff35b4:	6beb      	ldr	r3, [r5, #60]	; 0x3c
2fff35b6:	42bb      	cmp	r3, r7
2fff35b8:	d209      	bcs.n	2fff35ce <xlat_tables_unmap_region+0x14e>
2fff35ba:	4651      	mov	r1, sl
2fff35bc:	4628      	mov	r0, r5
2fff35be:	f7ff ff4b 	bl	2fff3458 <xlat_table_get_index>
2fff35c2:	69ea      	ldr	r2, [r5, #28]
2fff35c4:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
2fff35c8:	3b01      	subs	r3, #1
2fff35ca:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
2fff35ce:	b009      	add	sp, #36	; 0x24
2fff35d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff35d4:	2fffb143 	.word	0x2fffb143

2fff35d8 <xlat_desc>:
2fff35d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff35da:	468c      	mov	ip, r1
2fff35dc:	9c06      	ldr	r4, [sp, #24]
2fff35de:	f06f 0108 	mvn.w	r1, #8
2fff35e2:	2700      	movs	r7, #0
2fff35e4:	4361      	muls	r1, r4
2fff35e6:	f101 0527 	add.w	r5, r1, #39	; 0x27
2fff35ea:	2101      	movs	r1, #1
2fff35ec:	40a9      	lsls	r1, r5
2fff35ee:	3901      	subs	r1, #1
2fff35f0:	ea01 0602 	and.w	r6, r1, r2
2fff35f4:	ea56 0107 	orrs.w	r1, r6, r7
2fff35f8:	d003      	beq.n	2fff3602 <xlat_desc+0x2a>
2fff35fa:	2172      	movs	r1, #114	; 0x72
2fff35fc:	4822      	ldr	r0, [pc, #136]	; (2fff3688 <xlat_desc+0xb0>)
2fff35fe:	f006 fa5f 	bl	2fff9ac0 <__assert>
2fff3602:	6c40      	ldr	r0, [r0, #68]	; 0x44
2fff3604:	2c03      	cmp	r4, #3
2fff3606:	ea4f 044c 	mov.w	r4, ip, lsl #1
2fff360a:	bf0c      	ite	eq
2fff360c:	2103      	moveq	r1, #3
2fff360e:	2101      	movne	r1, #1
2fff3610:	f004 0420 	and.w	r4, r4, #32
2fff3614:	4314      	orrs	r4, r2
2fff3616:	f01c 0f08 	tst.w	ip, #8
2fff361a:	ea44 0401 	orr.w	r4, r4, r1
2fff361e:	bf08      	it	eq
2fff3620:	2680      	moveq	r6, #128	; 0x80
2fff3622:	ea44 0406 	orr.w	r4, r4, r6
2fff3626:	bf08      	it	eq
2fff3628:	2700      	moveq	r7, #0
2fff362a:	ea43 0507 	orr.w	r5, r3, r7
2fff362e:	2801      	cmp	r0, #1
2fff3630:	d10f      	bne.n	2fff3652 <xlat_desc+0x7a>
2fff3632:	f01c 0f40 	tst.w	ip, #64	; 0x40
2fff3636:	d111      	bne.n	2fff365c <xlat_desc+0x84>
2fff3638:	f444 6480 	orr.w	r4, r4, #1024	; 0x400
2fff363c:	f01c 0607 	ands.w	r6, ip, #7
2fff3640:	4629      	mov	r1, r5
2fff3642:	d10e      	bne.n	2fff3662 <xlat_desc+0x8a>
2fff3644:	f7ff fd18 	bl	2fff3078 <xlat_arch_regime_get_xn_desc>
2fff3648:	4304      	orrs	r4, r0
2fff364a:	4329      	orrs	r1, r5
2fff364c:	f444 7001 	orr.w	r0, r4, #516	; 0x204
2fff3650:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff3652:	1e83      	subs	r3, r0, #2
2fff3654:	2b01      	cmp	r3, #1
2fff3656:	d901      	bls.n	2fff365c <xlat_desc+0x84>
2fff3658:	2194      	movs	r1, #148	; 0x94
2fff365a:	e7cf      	b.n	2fff35fc <xlat_desc+0x24>
2fff365c:	f444 6488 	orr.w	r4, r4, #1088	; 0x440
2fff3660:	e7ec      	b.n	2fff363c <xlat_desc+0x64>
2fff3662:	f01c 0f28 	tst.w	ip, #40	; 0x28
2fff3666:	d003      	beq.n	2fff3670 <xlat_desc+0x98>
2fff3668:	f7ff fd06 	bl	2fff3078 <xlat_arch_regime_get_xn_desc>
2fff366c:	4304      	orrs	r4, r0
2fff366e:	4329      	orrs	r1, r5
2fff3670:	2e02      	cmp	r6, #2
2fff3672:	d102      	bne.n	2fff367a <xlat_desc+0xa2>
2fff3674:	f444 7040 	orr.w	r0, r4, #768	; 0x300
2fff3678:	e7ea      	b.n	2fff3650 <xlat_desc+0x78>
2fff367a:	2e01      	cmp	r6, #1
2fff367c:	d001      	beq.n	2fff3682 <xlat_desc+0xaa>
2fff367e:	21d4      	movs	r1, #212	; 0xd4
2fff3680:	e7bc      	b.n	2fff35fc <xlat_desc+0x24>
2fff3682:	f444 7002 	orr.w	r0, r4, #520	; 0x208
2fff3686:	e7e3      	b.n	2fff3650 <xlat_desc+0x78>
2fff3688:	2fffb143 	.word	0x2fffb143

2fff368c <xlat_tables_map_region>:
2fff368c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff3690:	b08b      	sub	sp, #44	; 0x2c
2fff3692:	460f      	mov	r7, r1
2fff3694:	4606      	mov	r6, r0
2fff3696:	f8dd 8054 	ldr.w	r8, [sp, #84]	; 0x54
2fff369a:	461d      	mov	r5, r3
2fff369c:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
2fff369e:	4541      	cmp	r1, r8
2fff36a0:	d802      	bhi.n	2fff36a8 <xlat_tables_map_region+0x1c>
2fff36a2:	f1b8 0f03 	cmp.w	r8, #3
2fff36a6:	d904      	bls.n	2fff36b2 <xlat_tables_map_region+0x26>
2fff36a8:	f44f 710d 	mov.w	r1, #564	; 0x234
2fff36ac:	4863      	ldr	r0, [pc, #396]	; (2fff383c <xlat_tables_map_region+0x1b0>)
2fff36ae:	f006 fa07 	bl	2fff9ac0 <__assert>
2fff36b2:	e9d7 0302 	ldrd	r0, r3, [r7, #8]
2fff36b6:	f04f 0b01 	mov.w	fp, #1
2fff36ba:	4403      	add	r3, r0
2fff36bc:	4290      	cmp	r0, r2
2fff36be:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
2fff36c2:	9307      	str	r3, [sp, #28]
2fff36c4:	f06f 0308 	mvn.w	r3, #8
2fff36c8:	fb03 f308 	mul.w	r3, r3, r8
2fff36cc:	bf98      	it	ls
2fff36ce:	4614      	movls	r4, r2
2fff36d0:	f103 0327 	add.w	r3, r3, #39	; 0x27
2fff36d4:	9303      	str	r3, [sp, #12]
2fff36d6:	fa0b fb03 	lsl.w	fp, fp, r3
2fff36da:	bf88      	it	hi
2fff36dc:	f1cb 0400 	rsbhi	r4, fp, #0
2fff36e0:	9b03      	ldr	r3, [sp, #12]
2fff36e2:	bf88      	it	hi
2fff36e4:	4004      	andhi	r4, r0
2fff36e6:	1aa2      	subs	r2, r4, r2
2fff36e8:	4541      	cmp	r1, r8
2fff36ea:	fa22 fa03 	lsr.w	sl, r2, r3
2fff36ee:	d209      	bcs.n	2fff3704 <xlat_tables_map_region+0x78>
2fff36f0:	4629      	mov	r1, r5
2fff36f2:	4630      	mov	r0, r6
2fff36f4:	f7ff feb0 	bl	2fff3458 <xlat_table_get_index>
2fff36f8:	69f2      	ldr	r2, [r6, #28]
2fff36fa:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
2fff36fe:	3301      	adds	r3, #1
2fff3700:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
2fff3704:	eb05 05ca 	add.w	r5, r5, sl, lsl #3
2fff3708:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
2fff370c:	9308      	str	r3, [sp, #32]
2fff370e:	f108 0301 	add.w	r3, r8, #1
2fff3712:	9306      	str	r3, [sp, #24]
2fff3714:	e055      	b.n	2fff37c2 <xlat_tables_map_region+0x136>
2fff3716:	f8d7 c008 	ldr.w	ip, [r7, #8]
2fff371a:	68fb      	ldr	r3, [r7, #12]
2fff371c:	6828      	ldr	r0, [r5, #0]
2fff371e:	45a4      	cmp	ip, r4
2fff3720:	4463      	add	r3, ip
2fff3722:	f000 0103 	and.w	r1, r0, #3
2fff3726:	eb04 090b 	add.w	r9, r4, fp
2fff372a:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
2fff372e:	f109 32ff 	add.w	r2, r9, #4294967295	; 0xffffffff
2fff3732:	d850      	bhi.n	2fff37d6 <xlat_tables_map_region+0x14a>
2fff3734:	4293      	cmp	r3, r2
2fff3736:	d34e      	bcc.n	2fff37d6 <xlat_tables_map_region+0x14a>
2fff3738:	e9d7 2300 	ldrd	r2, r3, [r7]
2fff373c:	ebb2 020c 	subs.w	r2, r2, ip
2fff3740:	f163 0300 	sbc.w	r3, r3, #0
2fff3744:	1912      	adds	r2, r2, r4
2fff3746:	f143 0300 	adc.w	r3, r3, #0
2fff374a:	f1b8 0f03 	cmp.w	r8, #3
2fff374e:	d105      	bne.n	2fff375c <xlat_tables_map_region+0xd0>
2fff3750:	2903      	cmp	r1, #3
2fff3752:	d02f      	beq.n	2fff37b4 <xlat_tables_map_region+0x128>
2fff3754:	b331      	cbz	r1, 2fff37a4 <xlat_tables_map_region+0x118>
2fff3756:	f240 11cb 	movw	r1, #459	; 0x1cb
2fff375a:	e7a7      	b.n	2fff36ac <xlat_tables_map_region+0x20>
2fff375c:	2903      	cmp	r1, #3
2fff375e:	d068      	beq.n	2fff3832 <xlat_tables_map_region+0x1a6>
2fff3760:	2900      	cmp	r1, #0
2fff3762:	d133      	bne.n	2fff37cc <xlat_tables_map_region+0x140>
2fff3764:	9808      	ldr	r0, [sp, #32]
2fff3766:	4010      	ands	r0, r2
2fff3768:	e9cd 0104 	strd	r0, r1, [sp, #16]
2fff376c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
2fff3770:	4301      	orrs	r1, r0
2fff3772:	d010      	beq.n	2fff3796 <xlat_tables_map_region+0x10a>
2fff3774:	69b1      	ldr	r1, [r6, #24]
2fff3776:	2300      	movs	r3, #0
2fff3778:	428b      	cmp	r3, r1
2fff377a:	da08      	bge.n	2fff378e <xlat_tables_map_region+0x102>
2fff377c:	69f2      	ldr	r2, [r6, #28]
2fff377e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
2fff3782:	2a00      	cmp	r2, #0
2fff3784:	d138      	bne.n	2fff37f8 <xlat_tables_map_region+0x16c>
2fff3786:	6971      	ldr	r1, [r6, #20]
2fff3788:	eb11 3303 	adds.w	r3, r1, r3, lsl #12
2fff378c:	d136      	bne.n	2fff37fc <xlat_tables_map_region+0x170>
2fff378e:	4620      	mov	r0, r4
2fff3790:	b00b      	add	sp, #44	; 0x2c
2fff3792:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff3796:	f1b8 0f00 	cmp.w	r8, #0
2fff379a:	d0eb      	beq.n	2fff3774 <xlat_tables_map_region+0xe8>
2fff379c:	6979      	ldr	r1, [r7, #20]
2fff379e:	9803      	ldr	r0, [sp, #12]
2fff37a0:	40c1      	lsrs	r1, r0
2fff37a2:	d0e7      	beq.n	2fff3774 <xlat_tables_map_region+0xe8>
2fff37a4:	6939      	ldr	r1, [r7, #16]
2fff37a6:	4630      	mov	r0, r6
2fff37a8:	f8cd 8000 	str.w	r8, [sp]
2fff37ac:	f7ff ff14 	bl	2fff35d8 <xlat_desc>
2fff37b0:	e9c5 0100 	strd	r0, r1, [r5]
2fff37b4:	9b07      	ldr	r3, [sp, #28]
2fff37b6:	f10a 0a01 	add.w	sl, sl, #1
2fff37ba:	3508      	adds	r5, #8
2fff37bc:	464c      	mov	r4, r9
2fff37be:	454b      	cmp	r3, r9
2fff37c0:	d902      	bls.n	2fff37c8 <xlat_tables_map_region+0x13c>
2fff37c2:	9b14      	ldr	r3, [sp, #80]	; 0x50
2fff37c4:	459a      	cmp	sl, r3
2fff37c6:	d3a6      	bcc.n	2fff3716 <xlat_tables_map_region+0x8a>
2fff37c8:	3c01      	subs	r4, #1
2fff37ca:	e7e0      	b.n	2fff378e <xlat_tables_map_region+0x102>
2fff37cc:	2901      	cmp	r1, #1
2fff37ce:	d0f1      	beq.n	2fff37b4 <xlat_tables_map_region+0x128>
2fff37d0:	f44f 71f9 	mov.w	r1, #498	; 0x1f2
2fff37d4:	e76a      	b.n	2fff36ac <xlat_tables_map_region+0x20>
2fff37d6:	4594      	cmp	ip, r2
2fff37d8:	d901      	bls.n	2fff37de <xlat_tables_map_region+0x152>
2fff37da:	429c      	cmp	r4, r3
2fff37dc:	d8ea      	bhi.n	2fff37b4 <xlat_tables_map_region+0x128>
2fff37de:	f1b8 0f03 	cmp.w	r8, #3
2fff37e2:	d102      	bne.n	2fff37ea <xlat_tables_map_region+0x15e>
2fff37e4:	f240 2107 	movw	r1, #519	; 0x207
2fff37e8:	e760      	b.n	2fff36ac <xlat_tables_map_region+0x20>
2fff37ea:	2900      	cmp	r1, #0
2fff37ec:	d0c2      	beq.n	2fff3774 <xlat_tables_map_region+0xe8>
2fff37ee:	2903      	cmp	r1, #3
2fff37f0:	d01f      	beq.n	2fff3832 <xlat_tables_map_region+0x1a6>
2fff37f2:	f240 2112 	movw	r1, #530	; 0x212
2fff37f6:	e759      	b.n	2fff36ac <xlat_tables_map_region+0x20>
2fff37f8:	3301      	adds	r3, #1
2fff37fa:	e7bd      	b.n	2fff3778 <xlat_tables_map_region+0xec>
2fff37fc:	f043 0103 	orr.w	r1, r3, #3
2fff3800:	e9c5 1200 	strd	r1, r2, [r5]
2fff3804:	9a06      	ldr	r2, [sp, #24]
2fff3806:	4639      	mov	r1, r7
2fff3808:	9309      	str	r3, [sp, #36]	; 0x24
2fff380a:	4630      	mov	r0, r6
2fff380c:	9201      	str	r2, [sp, #4]
2fff380e:	f44f 7200 	mov.w	r2, #512	; 0x200
2fff3812:	9200      	str	r2, [sp, #0]
2fff3814:	4622      	mov	r2, r4
2fff3816:	f7ff ff39 	bl	2fff368c <xlat_tables_map_region>
2fff381a:	9b09      	ldr	r3, [sp, #36]	; 0x24
2fff381c:	4604      	mov	r4, r0
2fff381e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
2fff3822:	4618      	mov	r0, r3
2fff3824:	f7ff fe0a 	bl	2fff343c <xlat_clean_dcache_range>
2fff3828:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
2fff382c:	429c      	cmp	r4, r3
2fff382e:	d0c1      	beq.n	2fff37b4 <xlat_tables_map_region+0x128>
2fff3830:	e7ad      	b.n	2fff378e <xlat_tables_map_region+0x102>
2fff3832:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
2fff3836:	f023 030f 	bic.w	r3, r3, #15
2fff383a:	e7e3      	b.n	2fff3804 <xlat_tables_map_region+0x178>
2fff383c:	2fffb143 	.word	0x2fffb143

2fff3840 <mmap_add_region_ctx>:
2fff3840:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff3844:	4606      	mov	r6, r0
2fff3846:	f8d1 a00c 	ldr.w	sl, [r1, #12]
2fff384a:	460d      	mov	r5, r1
2fff384c:	f1ba 0f00 	cmp.w	sl, #0
2fff3850:	d057      	beq.n	2fff3902 <mmap_add_region_ctx+0xc2>
2fff3852:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
2fff3856:	b123      	cbz	r3, 2fff3862 <mmap_add_region_ctx+0x22>
2fff3858:	f240 3107 	movw	r1, #775	; 0x307
2fff385c:	4832      	ldr	r0, [pc, #200]	; (2fff3928 <mmap_add_region_ctx+0xe8>)
2fff385e:	f006 f92f 	bl	2fff9ac0 <__assert>
2fff3862:	f7ff fd3f 	bl	2fff32e4 <mmap_add_region_check>
2fff3866:	4601      	mov	r1, r0
2fff3868:	b9e8      	cbnz	r0, 2fff38a6 <mmap_add_region_ctx+0x66>
2fff386a:	68a9      	ldr	r1, [r5, #8]
2fff386c:	68f2      	ldr	r2, [r6, #12]
2fff386e:	4451      	add	r1, sl
2fff3870:	1e4f      	subs	r7, r1, #1
2fff3872:	4614      	mov	r4, r2
2fff3874:	e9d4 3002 	ldrd	r3, r0, [r4, #8]
2fff3878:	4403      	add	r3, r0
2fff387a:	3b01      	subs	r3, #1
2fff387c:	42bb      	cmp	r3, r7
2fff387e:	d200      	bcs.n	2fff3882 <mmap_add_region_ctx+0x42>
2fff3880:	b9b8      	cbnz	r0, 2fff38b2 <mmap_add_region_ctx+0x72>
2fff3882:	e9d4 3002 	ldrd	r3, r0, [r4, #8]
2fff3886:	4403      	add	r3, r0
2fff3888:	4299      	cmp	r1, r3
2fff388a:	d014      	beq.n	2fff38b6 <mmap_add_region_ctx+0x76>
2fff388c:	6933      	ldr	r3, [r6, #16]
2fff388e:	f04f 0818 	mov.w	r8, #24
2fff3892:	fb08 2803 	mla	r8, r8, r3, r2
2fff3896:	68d3      	ldr	r3, [r2, #12]
2fff3898:	2b00      	cmp	r3, #0
2fff389a:	d035      	beq.n	2fff3908 <mmap_add_region_ctx+0xc8>
2fff389c:	4542      	cmp	r2, r8
2fff389e:	d310      	bcc.n	2fff38c2 <mmap_add_region_ctx+0x82>
2fff38a0:	f240 313f 	movw	r1, #831	; 0x33f
2fff38a4:	e7da      	b.n	2fff385c <mmap_add_region_ctx+0x1c>
2fff38a6:	4821      	ldr	r0, [pc, #132]	; (2fff392c <mmap_add_region_ctx+0xec>)
2fff38a8:	f7ff f818 	bl	2fff28dc <tf_log>
2fff38ac:	f44f 7143 	mov.w	r1, #780	; 0x30c
2fff38b0:	e7d4      	b.n	2fff385c <mmap_add_region_ctx+0x1c>
2fff38b2:	3418      	adds	r4, #24
2fff38b4:	e7de      	b.n	2fff3874 <mmap_add_region_ctx+0x34>
2fff38b6:	2800      	cmp	r0, #0
2fff38b8:	d0e8      	beq.n	2fff388c <mmap_add_region_ctx+0x4c>
2fff38ba:	4582      	cmp	sl, r0
2fff38bc:	d9e6      	bls.n	2fff388c <mmap_add_region_ctx+0x4c>
2fff38be:	3418      	adds	r4, #24
2fff38c0:	e7df      	b.n	2fff3882 <mmap_add_region_ctx+0x42>
2fff38c2:	3218      	adds	r2, #24
2fff38c4:	e7e7      	b.n	2fff3896 <mmap_add_region_ctx+0x56>
2fff38c6:	f119 33ff 	adds.w	r3, r9, #4294967295	; 0xffffffff
2fff38ca:	9300      	str	r3, [sp, #0]
2fff38cc:	f14b 33ff 	adc.w	r3, fp, #4294967295	; 0xffffffff
2fff38d0:	9301      	str	r3, [sp, #4]
2fff38d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2fff38d4:	e9dd 8900 	ldrd	r8, r9, [sp]
2fff38d8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2fff38da:	eb18 080a 	adds.w	r8, r8, sl
2fff38de:	e9d6 230c 	ldrd	r2, r3, [r6, #48]	; 0x30
2fff38e2:	f149 0900 	adc.w	r9, r9, #0
2fff38e6:	454b      	cmp	r3, r9
2fff38e8:	e895 0003 	ldmia.w	r5, {r0, r1}
2fff38ec:	bf08      	it	eq
2fff38ee:	4542      	cmpeq	r2, r8
2fff38f0:	e884 0003 	stmia.w	r4, {r0, r1}
2fff38f4:	d201      	bcs.n	2fff38fa <mmap_add_region_ctx+0xba>
2fff38f6:	e9c6 890c 	strd	r8, r9, [r6, #48]	; 0x30
2fff38fa:	6bb3      	ldr	r3, [r6, #56]	; 0x38
2fff38fc:	42bb      	cmp	r3, r7
2fff38fe:	d200      	bcs.n	2fff3902 <mmap_add_region_ctx+0xc2>
2fff3900:	63b7      	str	r7, [r6, #56]	; 0x38
2fff3902:	b003      	add	sp, #12
2fff3904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff3908:	1b12      	subs	r2, r2, r4
2fff390a:	4621      	mov	r1, r4
2fff390c:	f104 0018 	add.w	r0, r4, #24
2fff3910:	e9d5 9b00 	ldrd	r9, fp, [r5]
2fff3914:	f006 f907 	bl	2fff9b26 <memmove>
2fff3918:	f8d8 300c 	ldr.w	r3, [r8, #12]
2fff391c:	2b00      	cmp	r3, #0
2fff391e:	d0d2      	beq.n	2fff38c6 <mmap_add_region_ctx+0x86>
2fff3920:	f240 314b 	movw	r1, #843	; 0x34b
2fff3924:	e79a      	b.n	2fff385c <mmap_add_region_ctx+0x1c>
2fff3926:	bf00      	nop
2fff3928:	2fffb143 	.word	0x2fffb143
2fff392c:	2fffb169 	.word	0x2fffb169

2fff3930 <mmap_add_ctx>:
2fff3930:	b538      	push	{r3, r4, r5, lr}
2fff3932:	4605      	mov	r5, r0
2fff3934:	460c      	mov	r4, r1
2fff3936:	6963      	ldr	r3, [r4, #20]
2fff3938:	b903      	cbnz	r3, 2fff393c <mmap_add_ctx+0xc>
2fff393a:	bd38      	pop	{r3, r4, r5, pc}
2fff393c:	4621      	mov	r1, r4
2fff393e:	4628      	mov	r0, r5
2fff3940:	3418      	adds	r4, #24
2fff3942:	f7ff ff7d 	bl	2fff3840 <mmap_add_region_ctx>
2fff3946:	e7f6      	b.n	2fff3936 <mmap_add_ctx+0x6>

2fff3948 <mmap_add_dynamic_region_ctx>:
2fff3948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff394c:	b08f      	sub	sp, #60	; 0x3c
2fff394e:	68cb      	ldr	r3, [r1, #12]
2fff3950:	4604      	mov	r4, r0
2fff3952:	460d      	mov	r5, r1
2fff3954:	9303      	str	r3, [sp, #12]
2fff3956:	b92b      	cbnz	r3, 2fff3964 <mmap_add_dynamic_region_ctx+0x1c>
2fff3958:	f04f 0a00 	mov.w	sl, #0
2fff395c:	4650      	mov	r0, sl
2fff395e:	b00f      	add	sp, #60	; 0x3c
2fff3960:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff3964:	680b      	ldr	r3, [r1, #0]
2fff3966:	f8d0 b00c 	ldr.w	fp, [r0, #12]
2fff396a:	9306      	str	r3, [sp, #24]
2fff396c:	684b      	ldr	r3, [r1, #4]
2fff396e:	f8d0 9010 	ldr.w	r9, [r0, #16]
2fff3972:	9307      	str	r3, [sp, #28]
2fff3974:	690b      	ldr	r3, [r1, #16]
2fff3976:	688e      	ldr	r6, [r1, #8]
2fff3978:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff397c:	610b      	str	r3, [r1, #16]
2fff397e:	f7ff fcb1 	bl	2fff32e4 <mmap_add_region_check>
2fff3982:	4682      	mov	sl, r0
2fff3984:	2800      	cmp	r0, #0
2fff3986:	d1e9      	bne.n	2fff395c <mmap_add_dynamic_region_ctx+0x14>
2fff3988:	9b03      	ldr	r3, [sp, #12]
2fff398a:	1999      	adds	r1, r3, r6
2fff398c:	465b      	mov	r3, fp
2fff398e:	1e4e      	subs	r6, r1, #1
2fff3990:	e9d3 2002 	ldrd	r2, r0, [r3, #8]
2fff3994:	4698      	mov	r8, r3
2fff3996:	3318      	adds	r3, #24
2fff3998:	4402      	add	r2, r0
2fff399a:	3a01      	subs	r2, #1
2fff399c:	42b2      	cmp	r2, r6
2fff399e:	d201      	bcs.n	2fff39a4 <mmap_add_dynamic_region_ctx+0x5c>
2fff39a0:	2800      	cmp	r0, #0
2fff39a2:	d1f5      	bne.n	2fff3990 <mmap_add_dynamic_region_ctx+0x48>
2fff39a4:	e9d8 3202 	ldrd	r3, r2, [r8, #8]
2fff39a8:	4647      	mov	r7, r8
2fff39aa:	f108 0818 	add.w	r8, r8, #24
2fff39ae:	4413      	add	r3, r2
2fff39b0:	4299      	cmp	r1, r3
2fff39b2:	d103      	bne.n	2fff39bc <mmap_add_dynamic_region_ctx+0x74>
2fff39b4:	b112      	cbz	r2, 2fff39bc <mmap_add_dynamic_region_ctx+0x74>
2fff39b6:	9b03      	ldr	r3, [sp, #12]
2fff39b8:	4293      	cmp	r3, r2
2fff39ba:	d8f3      	bhi.n	2fff39a4 <mmap_add_dynamic_region_ctx+0x5c>
2fff39bc:	2318      	movs	r3, #24
2fff39be:	4639      	mov	r1, r7
2fff39c0:	fb03 b909 	mla	r9, r3, r9, fp
2fff39c4:	4640      	mov	r0, r8
2fff39c6:	eba9 0b07 	sub.w	fp, r9, r7
2fff39ca:	465a      	mov	r2, fp
2fff39cc:	f006 f8ab 	bl	2fff9b26 <memmove>
2fff39d0:	f8d9 900c 	ldr.w	r9, [r9, #12]
2fff39d4:	f1b9 0f00 	cmp.w	r9, #0
2fff39d8:	d004      	beq.n	2fff39e4 <mmap_add_dynamic_region_ctx+0x9c>
2fff39da:	4834      	ldr	r0, [pc, #208]	; (2fff3aac <mmap_add_dynamic_region_ctx+0x164>)
2fff39dc:	f240 31d6 	movw	r1, #982	; 0x3d6
2fff39e0:	f006 f86e 	bl	2fff9ac0 <__assert>
2fff39e4:	46ae      	mov	lr, r5
2fff39e6:	46bc      	mov	ip, r7
2fff39e8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
2fff39ec:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
2fff39f0:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
2fff39f4:	e89e 0003 	ldmia.w	lr, {r0, r1}
2fff39f8:	e88c 0003 	stmia.w	ip, {r0, r1}
2fff39fc:	2b00      	cmp	r3, #0
2fff39fe:	d039      	beq.n	2fff3a74 <mmap_add_dynamic_region_ctx+0x12c>
2fff3a00:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff3a02:	464a      	mov	r2, r9
2fff3a04:	4639      	mov	r1, r7
2fff3a06:	4620      	mov	r0, r4
2fff3a08:	9301      	str	r3, [sp, #4]
2fff3a0a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff3a0c:	9300      	str	r3, [sp, #0]
2fff3a0e:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff3a10:	f7ff fe3c 	bl	2fff368c <xlat_tables_map_region>
2fff3a14:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff3a16:	4606      	mov	r6, r0
2fff3a18:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff3a1a:	00c9      	lsls	r1, r1, #3
2fff3a1c:	f7ff fd0e 	bl	2fff343c <xlat_clean_dcache_range>
2fff3a20:	e9d7 3202 	ldrd	r3, r2, [r7, #8]
2fff3a24:	4413      	add	r3, r2
2fff3a26:	3b01      	subs	r3, #1
2fff3a28:	42b3      	cmp	r3, r6
2fff3a2a:	d021      	beq.n	2fff3a70 <mmap_add_dynamic_region_ctx+0x128>
2fff3a2c:	465a      	mov	r2, fp
2fff3a2e:	4641      	mov	r1, r8
2fff3a30:	4638      	mov	r0, r7
2fff3a32:	f006 f878 	bl	2fff9b26 <memmove>
2fff3a36:	68ad      	ldr	r5, [r5, #8]
2fff3a38:	42b5      	cmp	r5, r6
2fff3a3a:	d216      	bcs.n	2fff3a6a <mmap_add_dynamic_region_ctx+0x122>
2fff3a3c:	1b76      	subs	r6, r6, r5
2fff3a3e:	2218      	movs	r2, #24
2fff3a40:	4649      	mov	r1, r9
2fff3a42:	a808      	add	r0, sp, #32
2fff3a44:	f006 f885 	bl	2fff9b52 <memset>
2fff3a48:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff3a4a:	a908      	add	r1, sp, #32
2fff3a4c:	950a      	str	r5, [sp, #40]	; 0x28
2fff3a4e:	4620      	mov	r0, r4
2fff3a50:	9301      	str	r3, [sp, #4]
2fff3a52:	464a      	mov	r2, r9
2fff3a54:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff3a56:	960b      	str	r6, [sp, #44]	; 0x2c
2fff3a58:	9300      	str	r3, [sp, #0]
2fff3a5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff3a5c:	f7ff fd10 	bl	2fff3480 <xlat_tables_unmap_region>
2fff3a60:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff3a62:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff3a64:	00c9      	lsls	r1, r1, #3
2fff3a66:	f7ff fce9 	bl	2fff343c <xlat_clean_dcache_range>
2fff3a6a:	f06f 0a0b 	mvn.w	sl, #11
2fff3a6e:	e775      	b.n	2fff395c <mmap_add_dynamic_region_ctx+0x14>
2fff3a70:	f3bf 8f4a 	dsb	ishst
2fff3a74:	9b06      	ldr	r3, [sp, #24]
2fff3a76:	f113 33ff 	adds.w	r3, r3, #4294967295	; 0xffffffff
2fff3a7a:	9304      	str	r3, [sp, #16]
2fff3a7c:	9b07      	ldr	r3, [sp, #28]
2fff3a7e:	f143 33ff 	adc.w	r3, r3, #4294967295	; 0xffffffff
2fff3a82:	9305      	str	r3, [sp, #20]
2fff3a84:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
2fff3a88:	9b03      	ldr	r3, [sp, #12]
2fff3a8a:	18c0      	adds	r0, r0, r3
2fff3a8c:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2fff3a90:	f141 0100 	adc.w	r1, r1, #0
2fff3a94:	428b      	cmp	r3, r1
2fff3a96:	bf08      	it	eq
2fff3a98:	4282      	cmpeq	r2, r0
2fff3a9a:	d201      	bcs.n	2fff3aa0 <mmap_add_dynamic_region_ctx+0x158>
2fff3a9c:	e9c4 010c 	strd	r0, r1, [r4, #48]	; 0x30
2fff3aa0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
2fff3aa2:	42b3      	cmp	r3, r6
2fff3aa4:	f4bf af58 	bcs.w	2fff3958 <mmap_add_dynamic_region_ctx+0x10>
2fff3aa8:	63a6      	str	r6, [r4, #56]	; 0x38
2fff3aaa:	e757      	b.n	2fff395c <mmap_add_dynamic_region_ctx+0x14>
2fff3aac:	2fffb143 	.word	0x2fffb143

2fff3ab0 <mmap_remove_dynamic_region_ctx>:
2fff3ab0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff3ab4:	2318      	movs	r3, #24
2fff3ab6:	68c5      	ldr	r5, [r0, #12]
2fff3ab8:	b087      	sub	sp, #28
2fff3aba:	6907      	ldr	r7, [r0, #16]
2fff3abc:	4604      	mov	r4, r0
2fff3abe:	fb03 5707 	mla	r7, r3, r7, r5
2fff3ac2:	68fb      	ldr	r3, [r7, #12]
2fff3ac4:	b153      	cbz	r3, 2fff3adc <mmap_remove_dynamic_region_ctx+0x2c>
2fff3ac6:	483c      	ldr	r0, [pc, #240]	; (2fff3bb8 <mmap_remove_dynamic_region_ctx+0x108>)
2fff3ac8:	f240 413a 	movw	r1, #1082	; 0x43a
2fff3acc:	f005 fff8 	bl	2fff9ac0 <__assert>
2fff3ad0:	68a8      	ldr	r0, [r5, #8]
2fff3ad2:	4288      	cmp	r0, r1
2fff3ad4:	d101      	bne.n	2fff3ada <mmap_remove_dynamic_region_ctx+0x2a>
2fff3ad6:	4293      	cmp	r3, r2
2fff3ad8:	d068      	beq.n	2fff3bac <mmap_remove_dynamic_region_ctx+0xfc>
2fff3ada:	3518      	adds	r5, #24
2fff3adc:	68eb      	ldr	r3, [r5, #12]
2fff3ade:	2b00      	cmp	r3, #0
2fff3ae0:	d1f6      	bne.n	2fff3ad0 <mmap_remove_dynamic_region_ctx+0x20>
2fff3ae2:	f06f 0015 	mvn.w	r0, #21
2fff3ae6:	b007      	add	sp, #28
2fff3ae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff3aec:	6ba3      	ldr	r3, [r4, #56]	; 0x38
2fff3aee:	3901      	subs	r1, #1
2fff3af0:	188e      	adds	r6, r1, r2
2fff3af2:	e9d5 0100 	ldrd	r0, r1, [r5]
2fff3af6:	9303      	str	r3, [sp, #12]
2fff3af8:	1880      	adds	r0, r0, r2
2fff3afa:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2fff3afe:	f141 0100 	adc.w	r1, r1, #0
2fff3b02:	f110 3aff 	adds.w	sl, r0, #4294967295	; 0xffffffff
2fff3b06:	e9cd 2304 	strd	r2, r3, [sp, #16]
2fff3b0a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
2fff3b0e:	f141 3bff 	adc.w	fp, r1, #4294967295	; 0xffffffff
2fff3b12:	b183      	cbz	r3, 2fff3b36 <mmap_remove_dynamic_region_ctx+0x86>
2fff3b14:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff3b16:	2200      	movs	r2, #0
2fff3b18:	4629      	mov	r1, r5
2fff3b1a:	4620      	mov	r0, r4
2fff3b1c:	9301      	str	r3, [sp, #4]
2fff3b1e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff3b20:	9300      	str	r3, [sp, #0]
2fff3b22:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff3b24:	f7ff fcac 	bl	2fff3480 <xlat_tables_unmap_region>
2fff3b28:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff3b2a:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff3b2c:	00c9      	lsls	r1, r1, #3
2fff3b2e:	f7ff fc85 	bl	2fff343c <xlat_clean_dcache_range>
2fff3b32:	f7ff facd 	bl	2fff30d0 <xlat_arch_tlbi_va_sync>
2fff3b36:	1b7a      	subs	r2, r7, r5
2fff3b38:	f105 0118 	add.w	r1, r5, #24
2fff3b3c:	4628      	mov	r0, r5
2fff3b3e:	f005 fff2 	bl	2fff9b26 <memmove>
2fff3b42:	9b03      	ldr	r3, [sp, #12]
2fff3b44:	429e      	cmp	r6, r3
2fff3b46:	d00f      	beq.n	2fff3b68 <mmap_remove_dynamic_region_ctx+0xb8>
2fff3b48:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
2fff3b4c:	459b      	cmp	fp, r3
2fff3b4e:	bf08      	it	eq
2fff3b50:	4592      	cmpeq	sl, r2
2fff3b52:	d107      	bne.n	2fff3b64 <mmap_remove_dynamic_region_ctx+0xb4>
2fff3b54:	68e1      	ldr	r1, [r4, #12]
2fff3b56:	2200      	movs	r2, #0
2fff3b58:	2300      	movs	r3, #0
2fff3b5a:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
2fff3b5e:	68ca      	ldr	r2, [r1, #12]
2fff3b60:	3118      	adds	r1, #24
2fff3b62:	b982      	cbnz	r2, 2fff3b86 <mmap_remove_dynamic_region_ctx+0xd6>
2fff3b64:	2000      	movs	r0, #0
2fff3b66:	e7be      	b.n	2fff3ae6 <mmap_remove_dynamic_region_ctx+0x36>
2fff3b68:	68e2      	ldr	r2, [r4, #12]
2fff3b6a:	2300      	movs	r3, #0
2fff3b6c:	63a3      	str	r3, [r4, #56]	; 0x38
2fff3b6e:	68d3      	ldr	r3, [r2, #12]
2fff3b70:	2b00      	cmp	r3, #0
2fff3b72:	d0e9      	beq.n	2fff3b48 <mmap_remove_dynamic_region_ctx+0x98>
2fff3b74:	6891      	ldr	r1, [r2, #8]
2fff3b76:	3218      	adds	r2, #24
2fff3b78:	440b      	add	r3, r1
2fff3b7a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
2fff3b7c:	3b01      	subs	r3, #1
2fff3b7e:	428b      	cmp	r3, r1
2fff3b80:	bf88      	it	hi
2fff3b82:	63a3      	strhi	r3, [r4, #56]	; 0x38
2fff3b84:	e7f3      	b.n	2fff3b6e <mmap_remove_dynamic_region_ctx+0xbe>
2fff3b86:	e951 3006 	ldrd	r3, r0, [r1, #-24]
2fff3b8a:	f113 38ff 	adds.w	r8, r3, #4294967295	; 0xffffffff
2fff3b8e:	f140 39ff 	adc.w	r9, r0, #4294967295	; 0xffffffff
2fff3b92:	eb18 0602 	adds.w	r6, r8, r2
2fff3b96:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2fff3b9a:	f149 0700 	adc.w	r7, r9, #0
2fff3b9e:	42bb      	cmp	r3, r7
2fff3ba0:	bf08      	it	eq
2fff3ba2:	42b2      	cmpeq	r2, r6
2fff3ba4:	d2db      	bcs.n	2fff3b5e <mmap_remove_dynamic_region_ctx+0xae>
2fff3ba6:	e9c4 670c 	strd	r6, r7, [r4, #48]	; 0x30
2fff3baa:	e7d8      	b.n	2fff3b5e <mmap_remove_dynamic_region_ctx+0xae>
2fff3bac:	692b      	ldr	r3, [r5, #16]
2fff3bae:	2b00      	cmp	r3, #0
2fff3bb0:	db9c      	blt.n	2fff3aec <mmap_remove_dynamic_region_ctx+0x3c>
2fff3bb2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff3bb6:	e796      	b.n	2fff3ae6 <mmap_remove_dynamic_region_ctx+0x36>
2fff3bb8:	2fffb143 	.word	0x2fffb143

2fff3bbc <init_xlat_tables_ctx>:
2fff3bbc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff3bbe:	4604      	mov	r4, r0
2fff3bc0:	b920      	cbnz	r0, 2fff3bcc <init_xlat_tables_ctx+0x10>
2fff3bc2:	f240 4199 	movw	r1, #1177	; 0x499
2fff3bc6:	484f      	ldr	r0, [pc, #316]	; (2fff3d04 <init_xlat_tables_ctx+0x148>)
2fff3bc8:	f005 ff7a 	bl	2fff9ac0 <__assert>
2fff3bcc:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
2fff3bd0:	b113      	cbz	r3, 2fff3bd8 <init_xlat_tables_ctx+0x1c>
2fff3bd2:	f240 419a 	movw	r1, #1178	; 0x49a
2fff3bd6:	e7f6      	b.n	2fff3bc6 <init_xlat_tables_ctx+0xa>
2fff3bd8:	6c43      	ldr	r3, [r0, #68]	; 0x44
2fff3bda:	3b01      	subs	r3, #1
2fff3bdc:	2b02      	cmp	r3, #2
2fff3bde:	d902      	bls.n	2fff3be6 <init_xlat_tables_ctx+0x2a>
2fff3be0:	f240 419b 	movw	r1, #1179	; 0x49b
2fff3be4:	e7ef      	b.n	2fff3bc6 <init_xlat_tables_ctx+0xa>
2fff3be6:	f7ff fa99 	bl	2fff311c <is_mmu_enabled_ctx>
2fff3bea:	b110      	cbz	r0, 2fff3bf2 <init_xlat_tables_ctx+0x36>
2fff3bec:	f240 419e 	movw	r1, #1182	; 0x49e
2fff3bf0:	e7e9      	b.n	2fff3bc6 <init_xlat_tables_ctx+0xa>
2fff3bf2:	e9d4 6502 	ldrd	r6, r5, [r4, #8]
2fff3bf6:	f7ff fa2d 	bl	2fff3054 <xlat_get_min_virt_addr_space_size>
2fff3bfa:	3801      	subs	r0, #1
2fff3bfc:	4286      	cmp	r6, r0
2fff3bfe:	d202      	bcs.n	2fff3c06 <init_xlat_tables_ctx+0x4a>
2fff3c00:	f240 41a2 	movw	r1, #1186	; 0x4a2
2fff3c04:	e7df      	b.n	2fff3bc6 <init_xlat_tables_ctx+0xa>
2fff3c06:	68a3      	ldr	r3, [r4, #8]
2fff3c08:	1c5e      	adds	r6, r3, #1
2fff3c0a:	401e      	ands	r6, r3
2fff3c0c:	d002      	beq.n	2fff3c14 <init_xlat_tables_ctx+0x58>
2fff3c0e:	f240 41a5 	movw	r1, #1189	; 0x4a5
2fff3c12:	e7d8      	b.n	2fff3bc6 <init_xlat_tables_ctx+0xa>
2fff3c14:	4628      	mov	r0, r5
2fff3c16:	f000 f87b 	bl	2fff3d10 <xlat_mmap_print>
2fff3c1a:	483b      	ldr	r0, [pc, #236]	; (2fff3d08 <init_xlat_tables_ctx+0x14c>)
2fff3c1c:	f44f 4180 	mov.w	r1, #16384	; 0x4000
2fff3c20:	f004 efec 	blx	2fff8bfc <inv_dcache_range>
2fff3c24:	6aa2      	ldr	r2, [r4, #40]	; 0x28
2fff3c26:	2000      	movs	r0, #0
2fff3c28:	2100      	movs	r1, #0
2fff3c2a:	42b2      	cmp	r2, r6
2fff3c2c:	d113      	bne.n	2fff3c56 <init_xlat_tables_ctx+0x9a>
2fff3c2e:	2300      	movs	r3, #0
2fff3c30:	2000      	movs	r0, #0
2fff3c32:	461f      	mov	r7, r3
2fff3c34:	2100      	movs	r1, #0
2fff3c36:	69a2      	ldr	r2, [r4, #24]
2fff3c38:	429a      	cmp	r2, r3
2fff3c3a:	dc13      	bgt.n	2fff3c64 <init_xlat_tables_ctx+0xa8>
2fff3c3c:	68eb      	ldr	r3, [r5, #12]
2fff3c3e:	bb0b      	cbnz	r3, 2fff3c84 <init_xlat_tables_ctx+0xc8>
2fff3c40:	e9d4 6700 	ldrd	r6, r7, [r4]
2fff3c44:	f7ff fa02 	bl	2fff304c <xlat_arch_get_max_supported_pa>
2fff3c48:	42b9      	cmp	r1, r7
2fff3c4a:	bf08      	it	eq
2fff3c4c:	42b0      	cmpeq	r0, r6
2fff3c4e:	d23d      	bcs.n	2fff3ccc <init_xlat_tables_ctx+0x110>
2fff3c50:	f240 41cd 	movw	r1, #1229	; 0x4cd
2fff3c54:	e7b7      	b.n	2fff3bc6 <init_xlat_tables_ctx+0xa>
2fff3c56:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff3c58:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
2fff3c5c:	3601      	adds	r6, #1
2fff3c5e:	e9c3 0100 	strd	r0, r1, [r3]
2fff3c62:	e7e2      	b.n	2fff3c2a <init_xlat_tables_ctx+0x6e>
2fff3c64:	69e2      	ldr	r2, [r4, #28]
2fff3c66:	f842 7023 	str.w	r7, [r2, r3, lsl #2]
2fff3c6a:	6962      	ldr	r2, [r4, #20]
2fff3c6c:	eb02 3203 	add.w	r2, r2, r3, lsl #12
2fff3c70:	f1a2 0608 	sub.w	r6, r2, #8
2fff3c74:	f602 72f8 	addw	r2, r2, #4088	; 0xff8
2fff3c78:	e9e6 0102 	strd	r0, r1, [r6, #8]!
2fff3c7c:	42b2      	cmp	r2, r6
2fff3c7e:	d1fb      	bne.n	2fff3c78 <init_xlat_tables_ctx+0xbc>
2fff3c80:	3301      	adds	r3, #1
2fff3c82:	e7d8      	b.n	2fff3c36 <init_xlat_tables_ctx+0x7a>
2fff3c84:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff3c86:	2200      	movs	r2, #0
2fff3c88:	4629      	mov	r1, r5
2fff3c8a:	4620      	mov	r0, r4
2fff3c8c:	9301      	str	r3, [sp, #4]
2fff3c8e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff3c90:	9300      	str	r3, [sp, #0]
2fff3c92:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff3c94:	f7ff fcfa 	bl	2fff368c <xlat_tables_map_region>
2fff3c98:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff3c9a:	4606      	mov	r6, r0
2fff3c9c:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff3c9e:	00c9      	lsls	r1, r1, #3
2fff3ca0:	f7ff fbcc 	bl	2fff343c <xlat_clean_dcache_range>
2fff3ca4:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
2fff3ca8:	188b      	adds	r3, r1, r2
2fff3caa:	3b01      	subs	r3, #1
2fff3cac:	42b3      	cmp	r3, r6
2fff3cae:	d00b      	beq.n	2fff3cc8 <init_xlat_tables_ctx+0x10c>
2fff3cb0:	692b      	ldr	r3, [r5, #16]
2fff3cb2:	4816      	ldr	r0, [pc, #88]	; (2fff3d0c <init_xlat_tables_ctx+0x150>)
2fff3cb4:	e9cd 2300 	strd	r2, r3, [sp]
2fff3cb8:	e9d5 2300 	ldrd	r2, r3, [r5]
2fff3cbc:	f7fe fe0e 	bl	2fff28dc <tf_log>
2fff3cc0:	f7fe feb0 	bl	2fff2a24 <console_flush>
2fff3cc4:	f004 eec2 	blx	2fff8a4c <do_panic>
2fff3cc8:	3518      	adds	r5, #24
2fff3cca:	e7b7      	b.n	2fff3c3c <init_xlat_tables_ctx+0x80>
2fff3ccc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
2fff3cce:	68a3      	ldr	r3, [r4, #8]
2fff3cd0:	429a      	cmp	r2, r3
2fff3cd2:	d902      	bls.n	2fff3cda <init_xlat_tables_ctx+0x11e>
2fff3cd4:	f240 41ce 	movw	r1, #1230	; 0x4ce
2fff3cd8:	e775      	b.n	2fff3bc6 <init_xlat_tables_ctx+0xa>
2fff3cda:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2fff3cde:	e9d4 0100 	ldrd	r0, r1, [r4]
2fff3ce2:	4299      	cmp	r1, r3
2fff3ce4:	bf08      	it	eq
2fff3ce6:	4290      	cmpeq	r0, r2
2fff3ce8:	d202      	bcs.n	2fff3cf0 <init_xlat_tables_ctx+0x134>
2fff3cea:	f240 41cf 	movw	r1, #1231	; 0x4cf
2fff3cee:	e76a      	b.n	2fff3bc6 <init_xlat_tables_ctx+0xa>
2fff3cf0:	2301      	movs	r3, #1
2fff3cf2:	4620      	mov	r0, r4
2fff3cf4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
2fff3cf8:	b003      	add	sp, #12
2fff3cfa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
2fff3cfe:	f000 b808 	b.w	2fff3d12 <xlat_tables_print>
2fff3d02:	bf00      	nop
2fff3d04:	2fffb143 	.word	0x2fffb143
2fff3d08:	2ffd2000 	.word	0x2ffd2000
2fff3d0c:	2fffb194 	.word	0x2fffb194

2fff3d10 <xlat_mmap_print>:
2fff3d10:	4770      	bx	lr

2fff3d12 <xlat_tables_print>:
2fff3d12:	4770      	bx	lr

2fff3d14 <tzc400_set_action>:
2fff3d14:	b508      	push	{r3, lr}
2fff3d16:	4b06      	ldr	r3, [pc, #24]	; (2fff3d30 <tzc400_set_action+0x1c>)
2fff3d18:	681b      	ldr	r3, [r3, #0]
2fff3d1a:	b91b      	cbnz	r3, 2fff3d24 <tzc400_set_action+0x10>
2fff3d1c:	2194      	movs	r1, #148	; 0x94
2fff3d1e:	4805      	ldr	r0, [pc, #20]	; (2fff3d34 <tzc400_set_action+0x20>)
2fff3d20:	f005 fece 	bl	2fff9ac0 <__assert>
2fff3d24:	2803      	cmp	r0, #3
2fff3d26:	d901      	bls.n	2fff3d2c <tzc400_set_action+0x18>
2fff3d28:	2195      	movs	r1, #149	; 0x95
2fff3d2a:	e7f8      	b.n	2fff3d1e <tzc400_set_action+0xa>
2fff3d2c:	6058      	str	r0, [r3, #4]
2fff3d2e:	bd08      	pop	{r3, pc}
2fff3d30:	2fffe958 	.word	0x2fffe958
2fff3d34:	2fffb1e3 	.word	0x2fffb1e3

2fff3d38 <tzc400_init>:
2fff3d38:	b508      	push	{r3, lr}
2fff3d3a:	b918      	cbnz	r0, 2fff3d44 <tzc400_init+0xc>
2fff3d3c:	4812      	ldr	r0, [pc, #72]	; (2fff3d88 <tzc400_init+0x50>)
2fff3d3e:	21a6      	movs	r1, #166	; 0xa6
2fff3d40:	f005 febe 	bl	2fff9ac0 <__assert>
2fff3d44:	f8d0 3fe0 	ldr.w	r3, [r0, #4064]	; 0xfe0
2fff3d48:	f8d0 1fe4 	ldr.w	r1, [r0, #4068]	; 0xfe4
2fff3d4c:	4a0f      	ldr	r2, [pc, #60]	; (2fff3d8c <tzc400_init+0x54>)
2fff3d4e:	0209      	lsls	r1, r1, #8
2fff3d50:	6010      	str	r0, [r2, #0]
2fff3d52:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
2fff3d56:	4319      	orrs	r1, r3
2fff3d58:	f5b1 6f8c 	cmp.w	r1, #1120	; 0x460
2fff3d5c:	d006      	beq.n	2fff3d6c <tzc400_init+0x34>
2fff3d5e:	480c      	ldr	r0, [pc, #48]	; (2fff3d90 <tzc400_init+0x58>)
2fff3d60:	f7fe fdbc 	bl	2fff28dc <tf_log>
2fff3d64:	f7fe fe5e 	bl	2fff2a24 <console_flush>
2fff3d68:	f004 ee70 	blx	2fff8a4c <do_panic>
2fff3d6c:	6803      	ldr	r3, [r0, #0]
2fff3d6e:	f3c3 6101 	ubfx	r1, r3, #24, #2
2fff3d72:	3101      	adds	r1, #1
2fff3d74:	7151      	strb	r1, [r2, #5]
2fff3d76:	f3c3 2105 	ubfx	r1, r3, #8, #6
2fff3d7a:	f003 031f 	and.w	r3, r3, #31
2fff3d7e:	3101      	adds	r1, #1
2fff3d80:	3301      	adds	r3, #1
2fff3d82:	7111      	strb	r1, [r2, #4]
2fff3d84:	7193      	strb	r3, [r2, #6]
2fff3d86:	bd08      	pop	{r3, pc}
2fff3d88:	2fffb1e3 	.word	0x2fffb1e3
2fff3d8c:	2fffe958 	.word	0x2fffe958
2fff3d90:	2fffb1fc 	.word	0x2fffb1fc

2fff3d94 <tzc400_configure_region>:
2fff3d94:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff3d98:	4690      	mov	r8, r2
2fff3d9a:	4a2b      	ldr	r2, [pc, #172]	; (2fff3e48 <tzc400_configure_region+0xb4>)
2fff3d9c:	4699      	mov	r9, r3
2fff3d9e:	e9dd 450a 	ldrd	r4, r5, [sp, #40]	; 0x28
2fff3da2:	6813      	ldr	r3, [r2, #0]
2fff3da4:	b91b      	cbnz	r3, 2fff3dae <tzc400_configure_region+0x1a>
2fff3da6:	21d9      	movs	r1, #217	; 0xd9
2fff3da8:	4828      	ldr	r0, [pc, #160]	; (2fff3e4c <tzc400_configure_region+0xb8>)
2fff3daa:	f005 fe89 	bl	2fff9ac0 <__assert>
2fff3dae:	f892 c005 	ldrb.w	ip, [r2, #5]
2fff3db2:	fa30 fc0c 	lsrs.w	ip, r0, ip
2fff3db6:	d102      	bne.n	2fff3dbe <tzc400_configure_region+0x2a>
2fff3db8:	7996      	ldrb	r6, [r2, #6]
2fff3dba:	428e      	cmp	r6, r1
2fff3dbc:	d801      	bhi.n	2fff3dc2 <tzc400_configure_region+0x2e>
2fff3dbe:	21dc      	movs	r1, #220	; 0xdc
2fff3dc0:	e7f2      	b.n	2fff3da8 <tzc400_configure_region+0x14>
2fff3dc2:	7912      	ldrb	r2, [r2, #4]
2fff3dc4:	f04f 3eff 	mov.w	lr, #4294967295	; 0xffffffff
2fff3dc8:	f1c2 0b40 	rsb	fp, r2, #64	; 0x40
2fff3dcc:	f1a2 0a20 	sub.w	sl, r2, #32
2fff3dd0:	f1c2 0220 	rsb	r2, r2, #32
2fff3dd4:	fa2e f60b 	lsr.w	r6, lr, fp
2fff3dd8:	fa0e fa0a 	lsl.w	sl, lr, sl
2fff3ddc:	ea46 060a 	orr.w	r6, r6, sl
2fff3de0:	fa2e f202 	lsr.w	r2, lr, r2
2fff3de4:	fa2e f70b 	lsr.w	r7, lr, fp
2fff3de8:	4316      	orrs	r6, r2
2fff3dea:	42af      	cmp	r7, r5
2fff3dec:	bf08      	it	eq
2fff3dee:	42a6      	cmpeq	r6, r4
2fff3df0:	d303      	bcc.n	2fff3dfa <tzc400_configure_region+0x66>
2fff3df2:	45a9      	cmp	r9, r5
2fff3df4:	bf08      	it	eq
2fff3df6:	45a0      	cmpeq	r8, r4
2fff3df8:	d301      	bcc.n	2fff3dfe <tzc400_configure_region+0x6a>
2fff3dfa:	21e3      	movs	r1, #227	; 0xe3
2fff3dfc:	e7d4      	b.n	2fff3da8 <tzc400_configure_region+0x14>
2fff3dfe:	1c62      	adds	r2, r4, #1
2fff3e00:	4667      	mov	r7, ip
2fff3e02:	ea42 0208 	orr.w	r2, r2, r8
2fff3e06:	f3c2 060b 	ubfx	r6, r2, #0, #12
2fff3e0a:	ea56 0207 	orrs.w	r2, r6, r7
2fff3e0e:	d001      	beq.n	2fff3e14 <tzc400_configure_region+0x80>
2fff3e10:	21e7      	movs	r1, #231	; 0xe7
2fff3e12:	e7c9      	b.n	2fff3da8 <tzc400_configure_region+0x14>
2fff3e14:	9a0c      	ldr	r2, [sp, #48]	; 0x30
2fff3e16:	2a03      	cmp	r2, #3
2fff3e18:	d901      	bls.n	2fff3e1e <tzc400_configure_region+0x8a>
2fff3e1a:	21e9      	movs	r1, #233	; 0xe9
2fff3e1c:	e7c4      	b.n	2fff3da8 <tzc400_configure_region+0x14>
2fff3e1e:	eb03 1141 	add.w	r1, r3, r1, lsl #5
2fff3e22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
2fff3e24:	f8c1 8100 	str.w	r8, [r1, #256]	; 0x100
2fff3e28:	ea40 7083 	orr.w	r0, r0, r3, lsl #30
2fff3e2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2fff3e2e:	f8c1 9104 	str.w	r9, [r1, #260]	; 0x104
2fff3e32:	f8c1 4108 	str.w	r4, [r1, #264]	; 0x108
2fff3e36:	f8c1 510c 	str.w	r5, [r1, #268]	; 0x10c
2fff3e3a:	f8c1 0110 	str.w	r0, [r1, #272]	; 0x110
2fff3e3e:	f8c1 3114 	str.w	r3, [r1, #276]	; 0x114
2fff3e42:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff3e46:	bf00      	nop
2fff3e48:	2fffe958 	.word	0x2fffe958
2fff3e4c:	2fffb1e3 	.word	0x2fffb1e3

2fff3e50 <tzc400_enable_filters>:
2fff3e50:	4a16      	ldr	r2, [pc, #88]	; (2fff3eac <tzc400_enable_filters+0x5c>)
2fff3e52:	b570      	push	{r4, r5, r6, lr}
2fff3e54:	6813      	ldr	r3, [r2, #0]
2fff3e56:	b12b      	cbz	r3, 2fff3e64 <tzc400_enable_filters+0x14>
2fff3e58:	7954      	ldrb	r4, [r2, #5]
2fff3e5a:	2100      	movs	r1, #0
2fff3e5c:	2501      	movs	r5, #1
2fff3e5e:	428c      	cmp	r4, r1
2fff3e60:	d804      	bhi.n	2fff3e6c <tzc400_enable_filters+0x1c>
2fff3e62:	bd70      	pop	{r4, r5, r6, pc}
2fff3e64:	4812      	ldr	r0, [pc, #72]	; (2fff3eb0 <tzc400_enable_filters+0x60>)
2fff3e66:	21f4      	movs	r1, #244	; 0xf4
2fff3e68:	f005 fe2a 	bl	2fff9ac0 <__assert>
2fff3e6c:	689a      	ldr	r2, [r3, #8]
2fff3e6e:	f103 0608 	add.w	r6, r3, #8
2fff3e72:	f3c2 4203 	ubfx	r2, r2, #16, #4
2fff3e76:	40ca      	lsrs	r2, r1
2fff3e78:	07d2      	lsls	r2, r2, #31
2fff3e7a:	d506      	bpl.n	2fff3e8a <tzc400_enable_filters+0x3a>
2fff3e7c:	480d      	ldr	r0, [pc, #52]	; (2fff3eb4 <tzc400_enable_filters+0x64>)
2fff3e7e:	f7fe fd2d 	bl	2fff28dc <tf_log>
2fff3e82:	f7fe fdcf 	bl	2fff2a24 <console_flush>
2fff3e86:	f004 ede2 	blx	2fff8a4c <do_panic>
2fff3e8a:	6898      	ldr	r0, [r3, #8]
2fff3e8c:	fa05 f201 	lsl.w	r2, r5, r1
2fff3e90:	f3c0 4003 	ubfx	r0, r0, #16, #4
2fff3e94:	4302      	orrs	r2, r0
2fff3e96:	f002 000f 	and.w	r0, r2, #15
2fff3e9a:	6098      	str	r0, [r3, #8]
2fff3e9c:	6830      	ldr	r0, [r6, #0]
2fff3e9e:	f3c0 4003 	ubfx	r0, r0, #16, #4
2fff3ea2:	4282      	cmp	r2, r0
2fff3ea4:	d1fa      	bne.n	2fff3e9c <tzc400_enable_filters+0x4c>
2fff3ea6:	3101      	adds	r1, #1
2fff3ea8:	e7d9      	b.n	2fff3e5e <tzc400_enable_filters+0xe>
2fff3eaa:	bf00      	nop
2fff3eac:	2fffe958 	.word	0x2fffe958
2fff3eb0:	2fffb1e3 	.word	0x2fffb1e3
2fff3eb4:	2fffb220 	.word	0x2fffb220

2fff3eb8 <tzc400_disable_filters>:
2fff3eb8:	4b10      	ldr	r3, [pc, #64]	; (2fff3efc <tzc400_disable_filters+0x44>)
2fff3eba:	b570      	push	{r4, r5, r6, lr}
2fff3ebc:	6818      	ldr	r0, [r3, #0]
2fff3ebe:	b128      	cbz	r0, 2fff3ecc <tzc400_disable_filters+0x14>
2fff3ec0:	795c      	ldrb	r4, [r3, #5]
2fff3ec2:	2100      	movs	r1, #0
2fff3ec4:	2501      	movs	r5, #1
2fff3ec6:	428c      	cmp	r4, r1
2fff3ec8:	d805      	bhi.n	2fff3ed6 <tzc400_disable_filters+0x1e>
2fff3eca:	bd70      	pop	{r4, r5, r6, pc}
2fff3ecc:	480c      	ldr	r0, [pc, #48]	; (2fff3f00 <tzc400_disable_filters+0x48>)
2fff3ece:	f240 110f 	movw	r1, #271	; 0x10f
2fff3ed2:	f005 fdf5 	bl	2fff9ac0 <__assert>
2fff3ed6:	6882      	ldr	r2, [r0, #8]
2fff3ed8:	f100 0608 	add.w	r6, r0, #8
2fff3edc:	fa05 f301 	lsl.w	r3, r5, r1
2fff3ee0:	0c12      	lsrs	r2, r2, #16
2fff3ee2:	ea22 0303 	bic.w	r3, r2, r3
2fff3ee6:	f003 030f 	and.w	r3, r3, #15
2fff3eea:	6083      	str	r3, [r0, #8]
2fff3eec:	6832      	ldr	r2, [r6, #0]
2fff3eee:	f3c2 4203 	ubfx	r2, r2, #16, #4
2fff3ef2:	4293      	cmp	r3, r2
2fff3ef4:	d1fa      	bne.n	2fff3eec <tzc400_disable_filters+0x34>
2fff3ef6:	3101      	adds	r1, #1
2fff3ef8:	e7e5      	b.n	2fff3ec6 <tzc400_disable_filters+0xe>
2fff3efa:	bf00      	nop
2fff3efc:	2fffe958 	.word	0x2fffe958
2fff3f00:	2fffb1e3 	.word	0x2fffb1e3

2fff3f04 <tzc400_is_pending_interrupt>:
2fff3f04:	b538      	push	{r3, r4, r5, lr}
2fff3f06:	4b0c      	ldr	r3, [pc, #48]	; (2fff3f38 <tzc400_is_pending_interrupt+0x34>)
2fff3f08:	681a      	ldr	r2, [r3, #0]
2fff3f0a:	b132      	cbz	r2, 2fff3f1a <tzc400_is_pending_interrupt+0x16>
2fff3f0c:	7959      	ldrb	r1, [r3, #5]
2fff3f0e:	2001      	movs	r0, #1
2fff3f10:	2300      	movs	r3, #0
2fff3f12:	4299      	cmp	r1, r3
2fff3f14:	d806      	bhi.n	2fff3f24 <tzc400_is_pending_interrupt+0x20>
2fff3f16:	2000      	movs	r0, #0
2fff3f18:	bd38      	pop	{r3, r4, r5, pc}
2fff3f1a:	4808      	ldr	r0, [pc, #32]	; (2fff3f3c <tzc400_is_pending_interrupt+0x38>)
2fff3f1c:	f240 1127 	movw	r1, #295	; 0x127
2fff3f20:	f005 fdce 	bl	2fff9ac0 <__assert>
2fff3f24:	6914      	ldr	r4, [r2, #16]
2fff3f26:	fa00 f503 	lsl.w	r5, r0, r3
2fff3f2a:	4225      	tst	r5, r4
2fff3f2c:	d101      	bne.n	2fff3f32 <tzc400_is_pending_interrupt+0x2e>
2fff3f2e:	3301      	adds	r3, #1
2fff3f30:	e7ef      	b.n	2fff3f12 <tzc400_is_pending_interrupt+0xe>
2fff3f32:	2001      	movs	r0, #1
2fff3f34:	e7f0      	b.n	2fff3f18 <tzc400_is_pending_interrupt+0x14>
2fff3f36:	bf00      	nop
2fff3f38:	2fffe958 	.word	0x2fffe958
2fff3f3c:	2fffb1e3 	.word	0x2fffb1e3

2fff3f40 <tzc400_it_handler>:
2fff3f40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff3f42:	4e24      	ldr	r6, [pc, #144]	; (2fff3fd4 <tzc400_it_handler+0x94>)
2fff3f44:	6832      	ldr	r2, [r6, #0]
2fff3f46:	7971      	ldrb	r1, [r6, #5]
2fff3f48:	2a00      	cmp	r2, #0
2fff3f4a:	d132      	bne.n	2fff3fb2 <tzc400_it_handler+0x72>
2fff3f4c:	4822      	ldr	r0, [pc, #136]	; (2fff3fd8 <tzc400_it_handler+0x98>)
2fff3f4e:	f240 1139 	movw	r1, #313	; 0x139
2fff3f52:	f005 fdb5 	bl	2fff9ac0 <__assert>
2fff3f56:	6915      	ldr	r5, [r2, #16]
2fff3f58:	fa00 f703 	lsl.w	r7, r0, r3
2fff3f5c:	422f      	tst	r7, r5
2fff3f5e:	bf18      	it	ne
2fff3f60:	461c      	movne	r4, r3
2fff3f62:	3301      	adds	r3, #1
2fff3f64:	428b      	cmp	r3, r1
2fff3f66:	d228      	bcs.n	2fff3fba <tzc400_it_handler+0x7a>
2fff3f68:	428c      	cmp	r4, r1
2fff3f6a:	d0f4      	beq.n	2fff3f56 <tzc400_it_handler+0x16>
2fff3f6c:	b374      	cbz	r4, 2fff3fcc <tzc400_it_handler+0x8c>
2fff3f6e:	6b11      	ldr	r1, [r2, #48]	; 0x30
2fff3f70:	481a      	ldr	r0, [pc, #104]	; (2fff3fdc <tzc400_it_handler+0x9c>)
2fff3f72:	f7fe fcb3 	bl	2fff28dc <tf_log>
2fff3f76:	6833      	ldr	r3, [r6, #0]
2fff3f78:	b354      	cbz	r4, 2fff3fd0 <tzc400_it_handler+0x90>
2fff3f7a:	6b9d      	ldr	r5, [r3, #56]	; 0x38
2fff3f7c:	f015 0f15 	tst.w	r5, #21
2fff3f80:	bf0c      	ite	eq
2fff3f82:	4817      	ldreq	r0, [pc, #92]	; (2fff3fe0 <tzc400_it_handler+0xa0>)
2fff3f84:	4817      	ldrne	r0, [pc, #92]	; (2fff3fe4 <tzc400_it_handler+0xa4>)
2fff3f86:	f7fe fca9 	bl	2fff28dc <tf_log>
2fff3f8a:	f015 0f14 	tst.w	r5, #20
2fff3f8e:	bf0c      	ite	eq
2fff3f90:	4815      	ldreq	r0, [pc, #84]	; (2fff3fe8 <tzc400_it_handler+0xa8>)
2fff3f92:	4816      	ldrne	r0, [pc, #88]	; (2fff3fec <tzc400_it_handler+0xac>)
2fff3f94:	f7fe fca2 	bl	2fff28dc <tf_log>
2fff3f98:	f015 0f18 	tst.w	r5, #24
2fff3f9c:	bf0c      	ite	eq
2fff3f9e:	4814      	ldreq	r0, [pc, #80]	; (2fff3ff0 <tzc400_it_handler+0xb0>)
2fff3fa0:	4814      	ldrne	r0, [pc, #80]	; (2fff3ff4 <tzc400_it_handler+0xb4>)
2fff3fa2:	f7fe fc9b 	bl	2fff28dc <tf_log>
2fff3fa6:	2301      	movs	r3, #1
2fff3fa8:	fa03 f404 	lsl.w	r4, r3, r4
2fff3fac:	6833      	ldr	r3, [r6, #0]
2fff3fae:	615c      	str	r4, [r3, #20]
2fff3fb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff3fb2:	460c      	mov	r4, r1
2fff3fb4:	2300      	movs	r3, #0
2fff3fb6:	2001      	movs	r0, #1
2fff3fb8:	e7d4      	b.n	2fff3f64 <tzc400_it_handler+0x24>
2fff3fba:	428c      	cmp	r4, r1
2fff3fbc:	d1d6      	bne.n	2fff3f6c <tzc400_it_handler+0x2c>
2fff3fbe:	480e      	ldr	r0, [pc, #56]	; (2fff3ff8 <tzc400_it_handler+0xb8>)
2fff3fc0:	f7fe fc8c 	bl	2fff28dc <tf_log>
2fff3fc4:	f7fe fd2e 	bl	2fff2a24 <console_flush>
2fff3fc8:	f004 ed40 	blx	2fff8a4c <do_panic>
2fff3fcc:	6a11      	ldr	r1, [r2, #32]
2fff3fce:	e7cf      	b.n	2fff3f70 <tzc400_it_handler+0x30>
2fff3fd0:	6a9d      	ldr	r5, [r3, #40]	; 0x28
2fff3fd2:	e7d3      	b.n	2fff3f7c <tzc400_it_handler+0x3c>
2fff3fd4:	2fffe958 	.word	0x2fffe958
2fff3fd8:	2fffb1e3 	.word	0x2fffb1e3
2fff3fdc:	2fffb266 	.word	0x2fffb266
2fff3fe0:	2fffb285 	.word	0x2fffb285
2fff3fe4:	2fffb293 	.word	0x2fffb293
2fff3fe8:	2fffb29d 	.word	0x2fffb29d
2fff3fec:	2fffb2aa 	.word	0x2fffb2aa
2fff3ff0:	2fffb2b9 	.word	0x2fffb2b9
2fff3ff4:	2fffb2c1 	.word	0x2fffb2c1
2fff3ff8:	2fffb250 	.word	0x2fffb250

2fff3ffc <udelay>:
2fff3ffc:	b570      	push	{r4, r5, r6, lr}
2fff3ffe:	4604      	mov	r4, r0
2fff4000:	4d13      	ldr	r5, [pc, #76]	; (2fff4050 <udelay+0x54>)
2fff4002:	682b      	ldr	r3, [r5, #0]
2fff4004:	b12b      	cbz	r3, 2fff4012 <udelay+0x16>
2fff4006:	685a      	ldr	r2, [r3, #4]
2fff4008:	b11a      	cbz	r2, 2fff4012 <udelay+0x16>
2fff400a:	6899      	ldr	r1, [r3, #8]
2fff400c:	b109      	cbz	r1, 2fff4012 <udelay+0x16>
2fff400e:	681a      	ldr	r2, [r3, #0]
2fff4010:	b91a      	cbnz	r2, 2fff401a <udelay+0x1e>
2fff4012:	2119      	movs	r1, #25
2fff4014:	480f      	ldr	r0, [pc, #60]	; (2fff4054 <udelay+0x58>)
2fff4016:	f005 fd53 	bl	2fff9ac0 <__assert>
2fff401a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff401e:	fbb3 f3f1 	udiv	r3, r3, r1
2fff4022:	4283      	cmp	r3, r0
2fff4024:	d801      	bhi.n	2fff402a <udelay+0x2e>
2fff4026:	2120      	movs	r1, #32
2fff4028:	e7f4      	b.n	2fff4014 <udelay+0x18>
2fff402a:	4790      	blx	r2
2fff402c:	682a      	ldr	r2, [r5, #0]
2fff402e:	4606      	mov	r6, r0
2fff4030:	6853      	ldr	r3, [r2, #4]
2fff4032:	6892      	ldr	r2, [r2, #8]
2fff4034:	1e58      	subs	r0, r3, #1
2fff4036:	fb02 0404 	mla	r4, r2, r4, r0
2fff403a:	fbb4 f4f3 	udiv	r4, r4, r3
2fff403e:	3401      	adds	r4, #1
2fff4040:	682b      	ldr	r3, [r5, #0]
2fff4042:	681b      	ldr	r3, [r3, #0]
2fff4044:	4798      	blx	r3
2fff4046:	1a33      	subs	r3, r6, r0
2fff4048:	429c      	cmp	r4, r3
2fff404a:	d8f9      	bhi.n	2fff4040 <udelay+0x44>
2fff404c:	bd70      	pop	{r4, r5, r6, pc}
2fff404e:	bf00      	nop
2fff4050:	2fffe960 	.word	0x2fffe960
2fff4054:	2fffb2ca 	.word	0x2fffb2ca

2fff4058 <mdelay>:
2fff4058:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff405c:	4358      	muls	r0, r3
2fff405e:	f7ff bfcd 	b.w	2fff3ffc <udelay>
	...

2fff4064 <timer_init>:
2fff4064:	b508      	push	{r3, lr}
2fff4066:	b128      	cbz	r0, 2fff4074 <timer_init+0x10>
2fff4068:	6843      	ldr	r3, [r0, #4]
2fff406a:	b11b      	cbz	r3, 2fff4074 <timer_init+0x10>
2fff406c:	6883      	ldr	r3, [r0, #8]
2fff406e:	b10b      	cbz	r3, 2fff4074 <timer_init+0x10>
2fff4070:	6803      	ldr	r3, [r0, #0]
2fff4072:	b91b      	cbnz	r3, 2fff407c <timer_init+0x18>
2fff4074:	4803      	ldr	r0, [pc, #12]	; (2fff4084 <timer_init+0x20>)
2fff4076:	2142      	movs	r1, #66	; 0x42
2fff4078:	f005 fd22 	bl	2fff9ac0 <__assert>
2fff407c:	4b02      	ldr	r3, [pc, #8]	; (2fff4088 <timer_init+0x24>)
2fff407e:	6018      	str	r0, [r3, #0]
2fff4080:	bd08      	pop	{r3, pc}
2fff4082:	bf00      	nop
2fff4084:	2fffb2ca 	.word	0x2fffb2ca
2fff4088:	2fffe960 	.word	0x2fffe960

2fff408c <get_timer_value>:
2fff408c:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff4090:	43c0      	mvns	r0, r0
2fff4092:	4770      	bx	lr

2fff4094 <generic_delay_timer_init_args>:
2fff4094:	4b03      	ldr	r3, [pc, #12]	; (2fff40a4 <generic_delay_timer_init_args+0x10>)
2fff4096:	4a04      	ldr	r2, [pc, #16]	; (2fff40a8 <generic_delay_timer_init_args+0x14>)
2fff4098:	6058      	str	r0, [r3, #4]
2fff409a:	4618      	mov	r0, r3
2fff409c:	601a      	str	r2, [r3, #0]
2fff409e:	6099      	str	r1, [r3, #8]
2fff40a0:	f7ff bfe0 	b.w	2fff4064 <timer_init>
2fff40a4:	2fffe964 	.word	0x2fffe964
2fff40a8:	2fff408d 	.word	0x2fff408d

2fff40ac <generic_delay_timer_init>:
2fff40ac:	b538      	push	{r3, r4, r5, lr}
2fff40ae:	ee10 3f31 	mrc	15, 0, r3, cr0, cr1, {1}
2fff40b2:	f413 2f70 	tst.w	r3, #983040	; 0xf0000
2fff40b6:	d103      	bne.n	2fff40c0 <generic_delay_timer_init+0x14>
2fff40b8:	480b      	ldr	r0, [pc, #44]	; (2fff40e8 <generic_delay_timer_init+0x3c>)
2fff40ba:	212f      	movs	r1, #47	; 0x2f
2fff40bc:	f005 fd00 	bl	2fff9ac0 <__assert>
2fff40c0:	f7fe fdc3 	bl	2fff2c4a <plat_get_syscnt_freq2>
2fff40c4:	4601      	mov	r1, r0
2fff40c6:	2206      	movs	r2, #6
2fff40c8:	4808      	ldr	r0, [pc, #32]	; (2fff40ec <generic_delay_timer_init+0x40>)
2fff40ca:	230a      	movs	r3, #10
2fff40cc:	fbb1 f4f3 	udiv	r4, r1, r3
2fff40d0:	fb03 1514 	mls	r5, r3, r4, r1
2fff40d4:	b925      	cbnz	r5, 2fff40e0 <generic_delay_timer_init+0x34>
2fff40d6:	3a01      	subs	r2, #1
2fff40d8:	4621      	mov	r1, r4
2fff40da:	fbb0 f0f3 	udiv	r0, r0, r3
2fff40de:	d1f5      	bne.n	2fff40cc <generic_delay_timer_init+0x20>
2fff40e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff40e4:	f7ff bfd6 	b.w	2fff4094 <generic_delay_timer_init_args>
2fff40e8:	2fffb2ec 	.word	0x2fffb2ec
2fff40ec:	000f4240 	.word	0x000f4240

2fff40f0 <fdt32_to_cpu>:
2fff40f0:	ba00      	rev	r0, r0
2fff40f2:	4770      	bx	lr

2fff40f4 <bsec_lock>:
2fff40f4:	b508      	push	{r3, lr}
2fff40f6:	f7fe fdba 	bl	2fff2c6e <stm32mp_lock_available>
2fff40fa:	b120      	cbz	r0, 2fff4106 <bsec_lock+0x12>
2fff40fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff4100:	4801      	ldr	r0, [pc, #4]	; (2fff4108 <bsec_lock+0x14>)
2fff4102:	f008 bb55 	b.w	2fffc7b0 <__spin_lock_from_thumb>
2fff4106:	bd08      	pop	{r3, pc}
2fff4108:	2fffe974 	.word	0x2fffe974

2fff410c <bsec_unlock>:
2fff410c:	b508      	push	{r3, lr}
2fff410e:	f7fe fdae 	bl	2fff2c6e <stm32mp_lock_available>
2fff4112:	b120      	cbz	r0, 2fff411e <bsec_unlock+0x12>
2fff4114:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff4118:	4801      	ldr	r0, [pc, #4]	; (2fff4120 <bsec_unlock+0x14>)
2fff411a:	f008 bb3d 	b.w	2fffc798 <__spin_unlock_from_thumb>
2fff411e:	bd08      	pop	{r3, pc}
2fff4120:	2fffe974 	.word	0x2fffe974

2fff4124 <otp_bank_offset>:
2fff4124:	285f      	cmp	r0, #95	; 0x5f
2fff4126:	b508      	push	{r3, lr}
2fff4128:	d903      	bls.n	2fff4132 <otp_bank_offset+0xe>
2fff412a:	4803      	ldr	r0, [pc, #12]	; (2fff4138 <otp_bank_offset+0x14>)
2fff412c:	2191      	movs	r1, #145	; 0x91
2fff412e:	f005 fcc7 	bl	2fff9ac0 <__assert>
2fff4132:	0940      	lsrs	r0, r0, #5
2fff4134:	0080      	lsls	r0, r0, #2
2fff4136:	bd08      	pop	{r3, pc}
2fff4138:	2fffb316 	.word	0x2fffb316

2fff413c <bsec_check_error>:
2fff413c:	b538      	push	{r3, r4, r5, lr}
2fff413e:	f000 031f 	and.w	r3, r0, #31
2fff4142:	2401      	movs	r4, #1
2fff4144:	460d      	mov	r5, r1
2fff4146:	409c      	lsls	r4, r3
2fff4148:	f7ff ffec 	bl	2fff4124 <otp_bank_offset>
2fff414c:	4b07      	ldr	r3, [pc, #28]	; (2fff416c <bsec_check_error+0x30>)
2fff414e:	681b      	ldr	r3, [r3, #0]
2fff4150:	4403      	add	r3, r0
2fff4152:	6b58      	ldr	r0, [r3, #52]	; 0x34
2fff4154:	4020      	ands	r0, r4
2fff4156:	d106      	bne.n	2fff4166 <bsec_check_error+0x2a>
2fff4158:	b125      	cbz	r5, 2fff4164 <bsec_check_error+0x28>
2fff415a:	69d8      	ldr	r0, [r3, #28]
2fff415c:	4020      	ands	r0, r4
2fff415e:	bf18      	it	ne
2fff4160:	f06f 0001 	mvnne.w	r0, #1
2fff4164:	bd38      	pop	{r3, r4, r5, pc}
2fff4166:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff416a:	e7fb      	b.n	2fff4164 <bsec_check_error+0x28>
2fff416c:	2fffe970 	.word	0x2fffe970

2fff4170 <bsec_find_otp_name_in_dt>:
2fff4170:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff4172:	460f      	mov	r7, r1
2fff4174:	4616      	mov	r6, r2
2fff4176:	4604      	mov	r4, r0
2fff4178:	2800      	cmp	r0, #0
2fff417a:	d052      	beq.n	2fff4222 <bsec_find_otp_name_in_dt+0xb2>
2fff417c:	2900      	cmp	r1, #0
2fff417e:	d050      	beq.n	2fff4222 <bsec_find_otp_name_in_dt+0xb2>
2fff4180:	4668      	mov	r0, sp
2fff4182:	f003 ff1f 	bl	2fff7fc4 <fdt_get_address>
2fff4186:	b918      	cbnz	r0, 2fff4190 <bsec_find_otp_name_in_dt+0x20>
2fff4188:	f7fe fc4c 	bl	2fff2a24 <console_flush>
2fff418c:	f004 ec5e 	blx	2fff8a4c <do_panic>
2fff4190:	4825      	ldr	r0, [pc, #148]	; (2fff4228 <bsec_find_otp_name_in_dt+0xb8>)
2fff4192:	f004 f825 	bl	2fff81e0 <dt_get_node_by_compatible>
2fff4196:	1e05      	subs	r5, r0, #0
2fff4198:	da04      	bge.n	2fff41a4 <bsec_find_otp_name_in_dt+0x34>
2fff419a:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff419e:	4620      	mov	r0, r4
2fff41a0:	b003      	add	sp, #12
2fff41a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff41a4:	4a21      	ldr	r2, [pc, #132]	; (2fff422c <bsec_find_otp_name_in_dt+0xbc>)
2fff41a6:	4623      	mov	r3, r4
2fff41a8:	9800      	ldr	r0, [sp, #0]
2fff41aa:	4629      	mov	r1, r5
2fff41ac:	f005 fc21 	bl	2fff99f2 <fdt_stringlist_search>
2fff41b0:	1e04      	subs	r4, r0, #0
2fff41b2:	dbf2      	blt.n	2fff419a <bsec_find_otp_name_in_dt+0x2a>
2fff41b4:	4a1e      	ldr	r2, [pc, #120]	; (2fff4230 <bsec_find_otp_name_in_dt+0xc0>)
2fff41b6:	ab01      	add	r3, sp, #4
2fff41b8:	9800      	ldr	r0, [sp, #0]
2fff41ba:	4629      	mov	r1, r5
2fff41bc:	f005 fae3 	bl	2fff9786 <fdt_getprop>
2fff41c0:	2800      	cmp	r0, #0
2fff41c2:	d0ea      	beq.n	2fff419a <bsec_find_otp_name_in_dt+0x2a>
2fff41c4:	9b01      	ldr	r3, [sp, #4]
2fff41c6:	ebb3 0f84 	cmp.w	r3, r4, lsl #2
2fff41ca:	dbe6      	blt.n	2fff419a <bsec_find_otp_name_in_dt+0x2a>
2fff41cc:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
2fff41d0:	f7ff ff8e 	bl	2fff40f0 <fdt32_to_cpu>
2fff41d4:	4601      	mov	r1, r0
2fff41d6:	9800      	ldr	r0, [sp, #0]
2fff41d8:	f005 fbc7 	bl	2fff996a <fdt_node_offset_by_phandle>
2fff41dc:	1e01      	subs	r1, r0, #0
2fff41de:	da03      	bge.n	2fff41e8 <bsec_find_otp_name_in_dt+0x78>
2fff41e0:	4814      	ldr	r0, [pc, #80]	; (2fff4234 <bsec_find_otp_name_in_dt+0xc4>)
2fff41e2:	f7fe fb7b 	bl	2fff28dc <tf_log>
2fff41e6:	e7d8      	b.n	2fff419a <bsec_find_otp_name_in_dt+0x2a>
2fff41e8:	4a13      	ldr	r2, [pc, #76]	; (2fff4238 <bsec_find_otp_name_in_dt+0xc8>)
2fff41ea:	ab01      	add	r3, sp, #4
2fff41ec:	9800      	ldr	r0, [sp, #0]
2fff41ee:	f005 faca 	bl	2fff9786 <fdt_getprop>
2fff41f2:	4605      	mov	r5, r0
2fff41f4:	2800      	cmp	r0, #0
2fff41f6:	d0f3      	beq.n	2fff41e0 <bsec_find_otp_name_in_dt+0x70>
2fff41f8:	9b01      	ldr	r3, [sp, #4]
2fff41fa:	2b08      	cmp	r3, #8
2fff41fc:	d1f0      	bne.n	2fff41e0 <bsec_find_otp_name_in_dt+0x70>
2fff41fe:	6800      	ldr	r0, [r0, #0]
2fff4200:	f7ff ff76 	bl	2fff40f0 <fdt32_to_cpu>
2fff4204:	f010 0403 	ands.w	r4, r0, #3
2fff4208:	d001      	beq.n	2fff420e <bsec_find_otp_name_in_dt+0x9e>
2fff420a:	480c      	ldr	r0, [pc, #48]	; (2fff423c <bsec_find_otp_name_in_dt+0xcc>)
2fff420c:	e7e9      	b.n	2fff41e2 <bsec_find_otp_name_in_dt+0x72>
2fff420e:	0880      	lsrs	r0, r0, #2
2fff4210:	6038      	str	r0, [r7, #0]
2fff4212:	2e00      	cmp	r6, #0
2fff4214:	d0c3      	beq.n	2fff419e <bsec_find_otp_name_in_dt+0x2e>
2fff4216:	6868      	ldr	r0, [r5, #4]
2fff4218:	f7ff ff6a 	bl	2fff40f0 <fdt32_to_cpu>
2fff421c:	00c0      	lsls	r0, r0, #3
2fff421e:	6030      	str	r0, [r6, #0]
2fff4220:	e7bd      	b.n	2fff419e <bsec_find_otp_name_in_dt+0x2e>
2fff4222:	f06f 0403 	mvn.w	r4, #3
2fff4226:	e7ba      	b.n	2fff419e <bsec_find_otp_name_in_dt+0x2e>
2fff4228:	2fffb32e 	.word	0x2fffb32e
2fff422c:	2fffb344 	.word	0x2fffb344
2fff4230:	2fffb355 	.word	0x2fffb355
2fff4234:	2fffb361 	.word	0x2fffb361
2fff4238:	2fffa810 	.word	0x2fffa810
2fff423c:	2fffb388 	.word	0x2fffb388

2fff4240 <bsec_read_otp>:
2fff4240:	295f      	cmp	r1, #95	; 0x5f
2fff4242:	bf9f      	itttt	ls
2fff4244:	4b05      	ldrls	r3, [pc, #20]	; (2fff425c <bsec_read_otp+0x1c>)
2fff4246:	681b      	ldrls	r3, [r3, #0]
2fff4248:	f503 7300 	addls.w	r3, r3, #512	; 0x200
2fff424c:	f853 3021 	ldrls.w	r3, [r3, r1, lsl #2]
2fff4250:	bf9a      	itte	ls
2fff4252:	6003      	strls	r3, [r0, #0]
2fff4254:	2000      	movls	r0, #0
2fff4256:	f06f 0003 	mvnhi.w	r0, #3
2fff425a:	4770      	bx	lr
2fff425c:	2fffe970 	.word	0x2fffe970

2fff4260 <bsec_read_debug_conf>:
2fff4260:	4b01      	ldr	r3, [pc, #4]	; (2fff4268 <bsec_read_debug_conf+0x8>)
2fff4262:	681b      	ldr	r3, [r3, #0]
2fff4264:	6958      	ldr	r0, [r3, #20]
2fff4266:	4770      	bx	lr
2fff4268:	2fffe970 	.word	0x2fffe970

2fff426c <bsec_get_status>:
2fff426c:	4b01      	ldr	r3, [pc, #4]	; (2fff4274 <bsec_get_status+0x8>)
2fff426e:	681b      	ldr	r3, [r3, #0]
2fff4270:	68d8      	ldr	r0, [r3, #12]
2fff4272:	4770      	bx	lr
2fff4274:	2fffe970 	.word	0x2fffe970

2fff4278 <bsec_power_safmem>:
2fff4278:	b510      	push	{r4, lr}
2fff427a:	4604      	mov	r4, r0
2fff427c:	f7ff ff3a 	bl	2fff40f4 <bsec_lock>
2fff4280:	4b15      	ldr	r3, [pc, #84]	; (2fff42d8 <bsec_power_safmem+0x60>)
2fff4282:	681a      	ldr	r2, [r3, #0]
2fff4284:	6813      	ldr	r3, [r2, #0]
2fff4286:	b164      	cbz	r4, 2fff42a2 <bsec_power_safmem+0x2a>
2fff4288:	f043 0301 	orr.w	r3, r3, #1
2fff428c:	6013      	str	r3, [r2, #0]
2fff428e:	b9bc      	cbnz	r4, 2fff42c0 <bsec_power_safmem+0x48>
2fff4290:	f64f 74ff 	movw	r4, #65535	; 0xffff
2fff4294:	f7ff ffea 	bl	2fff426c <bsec_get_status>
2fff4298:	0683      	lsls	r3, r0, #26
2fff429a:	d514      	bpl.n	2fff42c6 <bsec_power_safmem+0x4e>
2fff429c:	b15c      	cbz	r4, 2fff42b6 <bsec_power_safmem+0x3e>
2fff429e:	3c01      	subs	r4, #1
2fff42a0:	e7f8      	b.n	2fff4294 <bsec_power_safmem+0x1c>
2fff42a2:	f023 0301 	bic.w	r3, r3, #1
2fff42a6:	e7f1      	b.n	2fff428c <bsec_power_safmem+0x14>
2fff42a8:	3c01      	subs	r4, #1
2fff42aa:	f7ff ffdf 	bl	2fff426c <bsec_get_status>
2fff42ae:	0682      	lsls	r2, r0, #26
2fff42b0:	d409      	bmi.n	2fff42c6 <bsec_power_safmem+0x4e>
2fff42b2:	2c00      	cmp	r4, #0
2fff42b4:	d1f8      	bne.n	2fff42a8 <bsec_power_safmem+0x30>
2fff42b6:	f7ff ff29 	bl	2fff410c <bsec_unlock>
2fff42ba:	f06f 0006 	mvn.w	r0, #6
2fff42be:	bd10      	pop	{r4, pc}
2fff42c0:	f64f 74ff 	movw	r4, #65535	; 0xffff
2fff42c4:	e7f1      	b.n	2fff42aa <bsec_power_safmem+0x32>
2fff42c6:	f7ff ff21 	bl	2fff410c <bsec_unlock>
2fff42ca:	2c00      	cmp	r4, #0
2fff42cc:	bf14      	ite	ne
2fff42ce:	2000      	movne	r0, #0
2fff42d0:	f06f 0006 	mvneq.w	r0, #6
2fff42d4:	e7f3      	b.n	2fff42be <bsec_power_safmem+0x46>
2fff42d6:	bf00      	nop
2fff42d8:	2fffe970 	.word	0x2fffe970

2fff42dc <bsec_permanent_lock_otp>:
2fff42dc:	285f      	cmp	r0, #95	; 0x5f
2fff42de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff42e0:	4605      	mov	r5, r0
2fff42e2:	d83d      	bhi.n	2fff4360 <bsec_permanent_lock_otp+0x84>
2fff42e4:	f7ff ffc2 	bl	2fff426c <bsec_get_status>
2fff42e8:	0682      	lsls	r2, r0, #26
2fff42ea:	d434      	bmi.n	2fff4356 <bsec_permanent_lock_otp+0x7a>
2fff42ec:	2001      	movs	r0, #1
2fff42ee:	f7ff ffc3 	bl	2fff4278 <bsec_power_safmem>
2fff42f2:	4604      	mov	r4, r0
2fff42f4:	2800      	cmp	r0, #0
2fff42f6:	d135      	bne.n	2fff4364 <bsec_permanent_lock_otp+0x88>
2fff42f8:	2701      	movs	r7, #1
2fff42fa:	2d1f      	cmp	r5, #31
2fff42fc:	bf95      	itete	ls
2fff42fe:	006e      	lslls	r6, r5, #1
2fff4300:	f005 030f 	andhi.w	r3, r5, #15
2fff4304:	f006 030e 	andls.w	r3, r6, #14
2fff4308:	2601      	movhi	r6, #1
2fff430a:	bf8d      	iteet	hi
2fff430c:	092c      	lsrhi	r4, r5, #4
2fff430e:	2603      	movls	r6, #3
2fff4310:	08ec      	lsrls	r4, r5, #3
2fff4312:	3402      	addhi	r4, #2
2fff4314:	409e      	lsls	r6, r3
2fff4316:	f7ff feed 	bl	2fff40f4 <bsec_lock>
2fff431a:	4b13      	ldr	r3, [pc, #76]	; (2fff4368 <bsec_permanent_lock_otp+0x8c>)
2fff431c:	f444 7440 	orr.w	r4, r4, #768	; 0x300
2fff4320:	681b      	ldr	r3, [r3, #0]
2fff4322:	609e      	str	r6, [r3, #8]
2fff4324:	605c      	str	r4, [r3, #4]
2fff4326:	f7ff ffa1 	bl	2fff426c <bsec_get_status>
2fff432a:	0703      	lsls	r3, r0, #28
2fff432c:	d4fb      	bmi.n	2fff4326 <bsec_permanent_lock_otp+0x4a>
2fff432e:	f7ff ff9d 	bl	2fff426c <bsec_get_status>
2fff4332:	f010 0110 	ands.w	r1, r0, #16
2fff4336:	d110      	bne.n	2fff435a <bsec_permanent_lock_otp+0x7e>
2fff4338:	4628      	mov	r0, r5
2fff433a:	f7ff feff 	bl	2fff413c <bsec_check_error>
2fff433e:	4604      	mov	r4, r0
2fff4340:	f7ff fee4 	bl	2fff410c <bsec_unlock>
2fff4344:	b177      	cbz	r7, 2fff4364 <bsec_permanent_lock_otp+0x88>
2fff4346:	2000      	movs	r0, #0
2fff4348:	f7ff ff96 	bl	2fff4278 <bsec_power_safmem>
2fff434c:	b150      	cbz	r0, 2fff4364 <bsec_permanent_lock_otp+0x88>
2fff434e:	f7fe fb69 	bl	2fff2a24 <console_flush>
2fff4352:	f004 eb7c 	blx	2fff8a4c <do_panic>
2fff4356:	2700      	movs	r7, #0
2fff4358:	e7cf      	b.n	2fff42fa <bsec_permanent_lock_otp+0x1e>
2fff435a:	f06f 0404 	mvn.w	r4, #4
2fff435e:	e7ef      	b.n	2fff4340 <bsec_permanent_lock_otp+0x64>
2fff4360:	f06f 0403 	mvn.w	r4, #3
2fff4364:	4620      	mov	r0, r4
2fff4366:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff4368:	2fffe970 	.word	0x2fffe970

2fff436c <bsec_get_version>:
2fff436c:	4b02      	ldr	r3, [pc, #8]	; (2fff4378 <bsec_get_version+0xc>)
2fff436e:	681b      	ldr	r3, [r3, #0]
2fff4370:	f8d3 0ff4 	ldr.w	r0, [r3, #4084]	; 0xff4
2fff4374:	4770      	bx	lr
2fff4376:	bf00      	nop
2fff4378:	2fffe970 	.word	0x2fffe970

2fff437c <bsec_get_id>:
2fff437c:	4b02      	ldr	r3, [pc, #8]	; (2fff4388 <bsec_get_id+0xc>)
2fff437e:	681b      	ldr	r3, [r3, #0]
2fff4380:	f8d3 0ff8 	ldr.w	r0, [r3, #4088]	; 0xff8
2fff4384:	4770      	bx	lr
2fff4386:	bf00      	nop
2fff4388:	2fffe970 	.word	0x2fffe970

2fff438c <bsec_read_sr_lock>:
2fff438c:	b538      	push	{r3, r4, r5, lr}
2fff438e:	4604      	mov	r4, r0
2fff4390:	460d      	mov	r5, r1
2fff4392:	f7ff fec7 	bl	2fff4124 <otp_bank_offset>
2fff4396:	f004 021f 	and.w	r2, r4, #31
2fff439a:	2301      	movs	r3, #1
2fff439c:	2c5f      	cmp	r4, #95	; 0x5f
2fff439e:	fa03 f302 	lsl.w	r3, r3, r2
2fff43a2:	d80a      	bhi.n	2fff43ba <bsec_read_sr_lock+0x2e>
2fff43a4:	4a06      	ldr	r2, [pc, #24]	; (2fff43c0 <bsec_read_sr_lock+0x34>)
2fff43a6:	6812      	ldr	r2, [r2, #0]
2fff43a8:	3294      	adds	r2, #148	; 0x94
2fff43aa:	5812      	ldr	r2, [r2, r0]
2fff43ac:	2000      	movs	r0, #0
2fff43ae:	4213      	tst	r3, r2
2fff43b0:	bf14      	ite	ne
2fff43b2:	2301      	movne	r3, #1
2fff43b4:	2300      	moveq	r3, #0
2fff43b6:	702b      	strb	r3, [r5, #0]
2fff43b8:	bd38      	pop	{r3, r4, r5, pc}
2fff43ba:	f06f 0003 	mvn.w	r0, #3
2fff43be:	e7fb      	b.n	2fff43b8 <bsec_read_sr_lock+0x2c>
2fff43c0:	2fffe970 	.word	0x2fffe970

2fff43c4 <bsec_shadow_register>:
2fff43c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff43c6:	f10d 0107 	add.w	r1, sp, #7
2fff43ca:	4605      	mov	r5, r0
2fff43cc:	f7ff ffde 	bl	2fff438c <bsec_read_sr_lock>
2fff43d0:	4604      	mov	r4, r0
2fff43d2:	b138      	cbz	r0, 2fff43e4 <bsec_shadow_register+0x20>
2fff43d4:	4602      	mov	r2, r0
2fff43d6:	4629      	mov	r1, r5
2fff43d8:	4817      	ldr	r0, [pc, #92]	; (2fff4438 <bsec_shadow_register+0x74>)
2fff43da:	f7fe fa7f 	bl	2fff28dc <tf_log>
2fff43de:	4620      	mov	r0, r4
2fff43e0:	b003      	add	sp, #12
2fff43e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff43e4:	f7ff ff42 	bl	2fff426c <bsec_get_status>
2fff43e8:	0683      	lsls	r3, r0, #26
2fff43ea:	d422      	bmi.n	2fff4432 <bsec_shadow_register+0x6e>
2fff43ec:	2001      	movs	r0, #1
2fff43ee:	f7ff ff43 	bl	2fff4278 <bsec_power_safmem>
2fff43f2:	4604      	mov	r4, r0
2fff43f4:	2800      	cmp	r0, #0
2fff43f6:	d1f2      	bne.n	2fff43de <bsec_shadow_register+0x1a>
2fff43f8:	2701      	movs	r7, #1
2fff43fa:	f7ff fe7b 	bl	2fff40f4 <bsec_lock>
2fff43fe:	4b0f      	ldr	r3, [pc, #60]	; (2fff443c <bsec_shadow_register+0x78>)
2fff4400:	681b      	ldr	r3, [r3, #0]
2fff4402:	605d      	str	r5, [r3, #4]
2fff4404:	f7ff ff32 	bl	2fff426c <bsec_get_status>
2fff4408:	f010 0608 	ands.w	r6, r0, #8
2fff440c:	d1fa      	bne.n	2fff4404 <bsec_shadow_register+0x40>
2fff440e:	2101      	movs	r1, #1
2fff4410:	4628      	mov	r0, r5
2fff4412:	f7ff fe93 	bl	2fff413c <bsec_check_error>
2fff4416:	4604      	mov	r4, r0
2fff4418:	f7ff fe78 	bl	2fff410c <bsec_unlock>
2fff441c:	2f00      	cmp	r7, #0
2fff441e:	d0de      	beq.n	2fff43de <bsec_shadow_register+0x1a>
2fff4420:	4630      	mov	r0, r6
2fff4422:	f7ff ff29 	bl	2fff4278 <bsec_power_safmem>
2fff4426:	2800      	cmp	r0, #0
2fff4428:	d0d9      	beq.n	2fff43de <bsec_shadow_register+0x1a>
2fff442a:	f7fe fafb 	bl	2fff2a24 <console_flush>
2fff442e:	f004 eb0e 	blx	2fff8a4c <do_panic>
2fff4432:	4627      	mov	r7, r4
2fff4434:	e7e1      	b.n	2fff43fa <bsec_shadow_register+0x36>
2fff4436:	bf00      	nop
2fff4438:	2fffb3b3 	.word	0x2fffb3b3
2fff443c:	2fffe970 	.word	0x2fffe970

2fff4440 <bsec_probe>:
2fff4440:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff4444:	b086      	sub	sp, #24
2fff4446:	a801      	add	r0, sp, #4
2fff4448:	f003 fdbc 	bl	2fff7fc4 <fdt_get_address>
2fff444c:	b918      	cbnz	r0, 2fff4456 <bsec_probe+0x16>
2fff444e:	f7fe fae9 	bl	2fff2a24 <console_flush>
2fff4452:	f004 eafc 	blx	2fff8a4c <do_panic>
2fff4456:	4a39      	ldr	r2, [pc, #228]	; (2fff453c <bsec_probe+0xfc>)
2fff4458:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff445c:	a802      	add	r0, sp, #8
2fff445e:	f003 fe9d 	bl	2fff819c <dt_get_node>
2fff4462:	ea40 71e0 	orr.w	r1, r0, r0, asr #31
2fff4466:	2800      	cmp	r0, #0
2fff4468:	dbf1      	blt.n	2fff444e <bsec_probe+0xe>
2fff446a:	4b35      	ldr	r3, [pc, #212]	; (2fff4540 <bsec_probe+0x100>)
2fff446c:	9a02      	ldr	r2, [sp, #8]
2fff446e:	601a      	str	r2, [r3, #0]
2fff4470:	f7ff ff7c 	bl	2fff436c <bsec_get_version>
2fff4474:	b2c0      	uxtb	r0, r0
2fff4476:	2811      	cmp	r0, #17
2fff4478:	d1e9      	bne.n	2fff444e <bsec_probe+0xe>
2fff447a:	f7ff ff7f 	bl	2fff437c <bsec_get_id>
2fff447e:	4b31      	ldr	r3, [pc, #196]	; (2fff4544 <bsec_probe+0x104>)
2fff4480:	4298      	cmp	r0, r3
2fff4482:	d1e4      	bne.n	2fff444e <bsec_probe+0xe>
2fff4484:	f8dd 8004 	ldr.w	r8, [sp, #4]
2fff4488:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 2fff4554 <bsec_probe+0x114>
2fff448c:	f8df 90c8 	ldr.w	r9, [pc, #200]	; 2fff4558 <bsec_probe+0x118>
2fff4490:	4640      	mov	r0, r8
2fff4492:	f004 fffc 	bl	2fff948e <fdt_first_subnode>
2fff4496:	4606      	mov	r6, r0
2fff4498:	2e00      	cmp	r6, #0
2fff449a:	da03      	bge.n	2fff44a4 <bsec_probe+0x64>
2fff449c:	2000      	movs	r0, #0
2fff449e:	b006      	add	sp, #24
2fff44a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff44a4:	2300      	movs	r3, #0
2fff44a6:	4652      	mov	r2, sl
2fff44a8:	4631      	mov	r1, r6
2fff44aa:	4640      	mov	r0, r8
2fff44ac:	f005 f96b 	bl	2fff9786 <fdt_getprop>
2fff44b0:	4603      	mov	r3, r0
2fff44b2:	2800      	cmp	r0, #0
2fff44b4:	d0cb      	beq.n	2fff444e <bsec_probe+0xe>
2fff44b6:	6800      	ldr	r0, [r0, #0]
2fff44b8:	f7ff fe1a 	bl	2fff40f0 <fdt32_to_cpu>
2fff44bc:	4604      	mov	r4, r0
2fff44be:	6858      	ldr	r0, [r3, #4]
2fff44c0:	f7ff fe16 	bl	2fff40f0 <fdt32_to_cpu>
2fff44c4:	2c7f      	cmp	r4, #127	; 0x7f
2fff44c6:	4607      	mov	r7, r0
2fff44c8:	d90e      	bls.n	2fff44e8 <bsec_probe+0xa8>
2fff44ca:	08a5      	lsrs	r5, r4, #2
2fff44cc:	4a1e      	ldr	r2, [pc, #120]	; (2fff4548 <bsec_probe+0x108>)
2fff44ce:	2300      	movs	r3, #0
2fff44d0:	4631      	mov	r1, r6
2fff44d2:	4640      	mov	r0, r8
2fff44d4:	f005 f957 	bl	2fff9786 <fdt_getprop>
2fff44d8:	b168      	cbz	r0, 2fff44f6 <bsec_probe+0xb6>
2fff44da:	433c      	orrs	r4, r7
2fff44dc:	07a3      	lsls	r3, r4, #30
2fff44de:	d017      	beq.n	2fff4510 <bsec_probe+0xd0>
2fff44e0:	481a      	ldr	r0, [pc, #104]	; (2fff454c <bsec_probe+0x10c>)
2fff44e2:	f7fe f9fb 	bl	2fff28dc <tf_log>
2fff44e6:	e7b2      	b.n	2fff444e <bsec_probe+0xe>
2fff44e8:	4427      	add	r7, r4
2fff44ea:	1e7b      	subs	r3, r7, #1
2fff44ec:	f043 0303 	orr.w	r3, r3, #3
2fff44f0:	3301      	adds	r3, #1
2fff44f2:	2b83      	cmp	r3, #131	; 0x83
2fff44f4:	d805      	bhi.n	2fff4502 <bsec_probe+0xc2>
2fff44f6:	4631      	mov	r1, r6
2fff44f8:	4640      	mov	r0, r8
2fff44fa:	f004 ffdb 	bl	2fff94b4 <fdt_next_subnode>
2fff44fe:	4606      	mov	r6, r0
2fff4500:	e7ca      	b.n	2fff4498 <bsec_probe+0x58>
2fff4502:	4813      	ldr	r0, [pc, #76]	; (2fff4550 <bsec_probe+0x110>)
2fff4504:	3f80      	subs	r7, #128	; 0x80
2fff4506:	2480      	movs	r4, #128	; 0x80
2fff4508:	2520      	movs	r5, #32
2fff450a:	f7fe f9e7 	bl	2fff28dc <tf_log>
2fff450e:	e7dd      	b.n	2fff44cc <bsec_probe+0x8c>
2fff4510:	eb05 0797 	add.w	r7, r5, r7, lsr #2
2fff4514:	2401      	movs	r4, #1
2fff4516:	42bd      	cmp	r5, r7
2fff4518:	d2ed      	bcs.n	2fff44f6 <bsec_probe+0xb6>
2fff451a:	0969      	lsrs	r1, r5, #5
2fff451c:	f005 031f 	and.w	r3, r5, #31
2fff4520:	4628      	mov	r0, r5
2fff4522:	f859 2021 	ldr.w	r2, [r9, r1, lsl #2]
2fff4526:	fa04 f303 	lsl.w	r3, r4, r3
2fff452a:	4313      	orrs	r3, r2
2fff452c:	f849 3021 	str.w	r3, [r9, r1, lsl #2]
2fff4530:	f7ff ff48 	bl	2fff43c4 <bsec_shadow_register>
2fff4534:	2800      	cmp	r0, #0
2fff4536:	d18a      	bne.n	2fff444e <bsec_probe+0xe>
2fff4538:	3501      	adds	r5, #1
2fff453a:	e7ec      	b.n	2fff4516 <bsec_probe+0xd6>
2fff453c:	2fffb3dc 	.word	0x2fffb3dc
2fff4540:	2fffe970 	.word	0x2fffe970
2fff4544:	00100032 	.word	0x00100032
2fff4548:	2fffb411 	.word	0x2fffb411
2fff454c:	2fffb423 	.word	0x2fffb423
2fff4550:	2fffb3ee 	.word	0x2fffb3ee
2fff4554:	2fffa810 	.word	0x2fffa810
2fff4558:	2fffe978 	.word	0x2fffe978

2fff455c <bsec_read_sw_lock>:
2fff455c:	b538      	push	{r3, r4, r5, lr}
2fff455e:	4604      	mov	r4, r0
2fff4560:	460d      	mov	r5, r1
2fff4562:	f7ff fddf 	bl	2fff4124 <otp_bank_offset>
2fff4566:	f004 021f 	and.w	r2, r4, #31
2fff456a:	2301      	movs	r3, #1
2fff456c:	2c5f      	cmp	r4, #95	; 0x5f
2fff456e:	fa03 f302 	lsl.w	r3, r3, r2
2fff4572:	d80a      	bhi.n	2fff458a <bsec_read_sw_lock+0x2e>
2fff4574:	4a06      	ldr	r2, [pc, #24]	; (2fff4590 <bsec_read_sw_lock+0x34>)
2fff4576:	6812      	ldr	r2, [r2, #0]
2fff4578:	327c      	adds	r2, #124	; 0x7c
2fff457a:	5812      	ldr	r2, [r2, r0]
2fff457c:	2000      	movs	r0, #0
2fff457e:	4213      	tst	r3, r2
2fff4580:	bf14      	ite	ne
2fff4582:	2301      	movne	r3, #1
2fff4584:	2300      	moveq	r3, #0
2fff4586:	702b      	strb	r3, [r5, #0]
2fff4588:	bd38      	pop	{r3, r4, r5, pc}
2fff458a:	f06f 0003 	mvn.w	r0, #3
2fff458e:	e7fb      	b.n	2fff4588 <bsec_read_sw_lock+0x2c>
2fff4590:	2fffe970 	.word	0x2fffe970

2fff4594 <bsec_write_otp>:
2fff4594:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff4596:	460d      	mov	r5, r1
2fff4598:	4606      	mov	r6, r0
2fff459a:	f10d 0107 	add.w	r1, sp, #7
2fff459e:	4628      	mov	r0, r5
2fff45a0:	f7ff ffdc 	bl	2fff455c <bsec_read_sw_lock>
2fff45a4:	4604      	mov	r4, r0
2fff45a6:	b138      	cbz	r0, 2fff45b8 <bsec_write_otp+0x24>
2fff45a8:	4602      	mov	r2, r0
2fff45aa:	4629      	mov	r1, r5
2fff45ac:	4808      	ldr	r0, [pc, #32]	; (2fff45d0 <bsec_write_otp+0x3c>)
2fff45ae:	f7fe f995 	bl	2fff28dc <tf_log>
2fff45b2:	4620      	mov	r0, r4
2fff45b4:	b002      	add	sp, #8
2fff45b6:	bd70      	pop	{r4, r5, r6, pc}
2fff45b8:	f7ff fd9c 	bl	2fff40f4 <bsec_lock>
2fff45bc:	4b05      	ldr	r3, [pc, #20]	; (2fff45d4 <bsec_write_otp+0x40>)
2fff45be:	681b      	ldr	r3, [r3, #0]
2fff45c0:	f503 7300 	add.w	r3, r3, #512	; 0x200
2fff45c4:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
2fff45c8:	f7ff fda0 	bl	2fff410c <bsec_unlock>
2fff45cc:	e7f1      	b.n	2fff45b2 <bsec_write_otp+0x1e>
2fff45ce:	bf00      	nop
2fff45d0:	2fffb43e 	.word	0x2fffb43e
2fff45d4:	2fffe970 	.word	0x2fffe970

2fff45d8 <bsec_read_sp_lock>:
2fff45d8:	b538      	push	{r3, r4, r5, lr}
2fff45da:	4604      	mov	r4, r0
2fff45dc:	460d      	mov	r5, r1
2fff45de:	f7ff fda1 	bl	2fff4124 <otp_bank_offset>
2fff45e2:	f004 021f 	and.w	r2, r4, #31
2fff45e6:	2301      	movs	r3, #1
2fff45e8:	2c5f      	cmp	r4, #95	; 0x5f
2fff45ea:	fa03 f302 	lsl.w	r3, r3, r2
2fff45ee:	d80a      	bhi.n	2fff4606 <bsec_read_sp_lock+0x2e>
2fff45f0:	4a06      	ldr	r2, [pc, #24]	; (2fff460c <bsec_read_sp_lock+0x34>)
2fff45f2:	6812      	ldr	r2, [r2, #0]
2fff45f4:	3264      	adds	r2, #100	; 0x64
2fff45f6:	5812      	ldr	r2, [r2, r0]
2fff45f8:	2000      	movs	r0, #0
2fff45fa:	4213      	tst	r3, r2
2fff45fc:	bf14      	ite	ne
2fff45fe:	2301      	movne	r3, #1
2fff4600:	2300      	moveq	r3, #0
2fff4602:	702b      	strb	r3, [r5, #0]
2fff4604:	bd38      	pop	{r3, r4, r5, pc}
2fff4606:	f06f 0003 	mvn.w	r0, #3
2fff460a:	e7fb      	b.n	2fff4604 <bsec_read_sp_lock+0x2c>
2fff460c:	2fffe970 	.word	0x2fffe970

2fff4610 <bsec_read_permanent_lock>:
2fff4610:	b538      	push	{r3, r4, r5, lr}
2fff4612:	4604      	mov	r4, r0
2fff4614:	460d      	mov	r5, r1
2fff4616:	f7ff fd85 	bl	2fff4124 <otp_bank_offset>
2fff461a:	f004 021f 	and.w	r2, r4, #31
2fff461e:	2301      	movs	r3, #1
2fff4620:	2c5f      	cmp	r4, #95	; 0x5f
2fff4622:	fa03 f302 	lsl.w	r3, r3, r2
2fff4626:	d80a      	bhi.n	2fff463e <bsec_read_permanent_lock+0x2e>
2fff4628:	4a06      	ldr	r2, [pc, #24]	; (2fff4644 <bsec_read_permanent_lock+0x34>)
2fff462a:	6812      	ldr	r2, [r2, #0]
2fff462c:	324c      	adds	r2, #76	; 0x4c
2fff462e:	5812      	ldr	r2, [r2, r0]
2fff4630:	2000      	movs	r0, #0
2fff4632:	4213      	tst	r3, r2
2fff4634:	bf14      	ite	ne
2fff4636:	2301      	movne	r3, #1
2fff4638:	2300      	moveq	r3, #0
2fff463a:	702b      	strb	r3, [r5, #0]
2fff463c:	bd38      	pop	{r3, r4, r5, pc}
2fff463e:	f06f 0003 	mvn.w	r0, #3
2fff4642:	e7fb      	b.n	2fff463c <bsec_read_permanent_lock+0x2c>
2fff4644:	2fffe970 	.word	0x2fffe970

2fff4648 <bsec_program_otp>:
2fff4648:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff464c:	460d      	mov	r5, r1
2fff464e:	4607      	mov	r7, r0
2fff4650:	f10d 0106 	add.w	r1, sp, #6
2fff4654:	4628      	mov	r0, r5
2fff4656:	f7ff ffbf 	bl	2fff45d8 <bsec_read_sp_lock>
2fff465a:	4604      	mov	r4, r0
2fff465c:	b140      	cbz	r0, 2fff4670 <bsec_program_otp+0x28>
2fff465e:	4602      	mov	r2, r0
2fff4660:	4629      	mov	r1, r5
2fff4662:	482c      	ldr	r0, [pc, #176]	; (2fff4714 <bsec_program_otp+0xcc>)
2fff4664:	f7fe f93a 	bl	2fff28dc <tf_log>
2fff4668:	4620      	mov	r0, r4
2fff466a:	b002      	add	sp, #8
2fff466c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff4670:	f10d 0107 	add.w	r1, sp, #7
2fff4674:	4628      	mov	r0, r5
2fff4676:	f7ff ffcb 	bl	2fff4610 <bsec_read_permanent_lock>
2fff467a:	4604      	mov	r4, r0
2fff467c:	b118      	cbz	r0, 2fff4686 <bsec_program_otp+0x3e>
2fff467e:	4602      	mov	r2, r0
2fff4680:	4629      	mov	r1, r5
2fff4682:	4825      	ldr	r0, [pc, #148]	; (2fff4718 <bsec_program_otp+0xd0>)
2fff4684:	e7ee      	b.n	2fff4664 <bsec_program_otp+0x1c>
2fff4686:	f89d 3006 	ldrb.w	r3, [sp, #6]
2fff468a:	b923      	cbnz	r3, 2fff4696 <bsec_program_otp+0x4e>
2fff468c:	f89d 8007 	ldrb.w	r8, [sp, #7]
2fff4690:	f1b8 0f00 	cmp.w	r8, #0
2fff4694:	d005      	beq.n	2fff46a2 <bsec_program_otp+0x5a>
2fff4696:	4821      	ldr	r0, [pc, #132]	; (2fff471c <bsec_program_otp+0xd4>)
2fff4698:	f06f 0404 	mvn.w	r4, #4
2fff469c:	f7fe f91e 	bl	2fff28dc <tf_log>
2fff46a0:	e7e2      	b.n	2fff4668 <bsec_program_otp+0x20>
2fff46a2:	4e1f      	ldr	r6, [pc, #124]	; (2fff4720 <bsec_program_otp+0xd8>)
2fff46a4:	6832      	ldr	r2, [r6, #0]
2fff46a6:	6912      	ldr	r2, [r2, #16]
2fff46a8:	0710      	lsls	r0, r2, #28
2fff46aa:	d502      	bpl.n	2fff46b2 <bsec_program_otp+0x6a>
2fff46ac:	481d      	ldr	r0, [pc, #116]	; (2fff4724 <bsec_program_otp+0xdc>)
2fff46ae:	f7fe f915 	bl	2fff28dc <tf_log>
2fff46b2:	f7ff fddb 	bl	2fff426c <bsec_get_status>
2fff46b6:	0681      	lsls	r1, r0, #26
2fff46b8:	d407      	bmi.n	2fff46ca <bsec_program_otp+0x82>
2fff46ba:	2001      	movs	r0, #1
2fff46bc:	f7ff fddc 	bl	2fff4278 <bsec_power_safmem>
2fff46c0:	4604      	mov	r4, r0
2fff46c2:	2800      	cmp	r0, #0
2fff46c4:	d1d0      	bne.n	2fff4668 <bsec_program_otp+0x20>
2fff46c6:	f04f 0801 	mov.w	r8, #1
2fff46ca:	f7ff fd13 	bl	2fff40f4 <bsec_lock>
2fff46ce:	6833      	ldr	r3, [r6, #0]
2fff46d0:	f445 7280 	orr.w	r2, r5, #256	; 0x100
2fff46d4:	609f      	str	r7, [r3, #8]
2fff46d6:	605a      	str	r2, [r3, #4]
2fff46d8:	f7ff fdc8 	bl	2fff426c <bsec_get_status>
2fff46dc:	0702      	lsls	r2, r0, #28
2fff46de:	d4fb      	bmi.n	2fff46d8 <bsec_program_otp+0x90>
2fff46e0:	f7ff fdc4 	bl	2fff426c <bsec_get_status>
2fff46e4:	06c3      	lsls	r3, r0, #27
2fff46e6:	d412      	bmi.n	2fff470e <bsec_program_otp+0xc6>
2fff46e8:	2101      	movs	r1, #1
2fff46ea:	4628      	mov	r0, r5
2fff46ec:	f7ff fd26 	bl	2fff413c <bsec_check_error>
2fff46f0:	4604      	mov	r4, r0
2fff46f2:	f7ff fd0b 	bl	2fff410c <bsec_unlock>
2fff46f6:	f1b8 0f00 	cmp.w	r8, #0
2fff46fa:	d0b5      	beq.n	2fff4668 <bsec_program_otp+0x20>
2fff46fc:	2000      	movs	r0, #0
2fff46fe:	f7ff fdbb 	bl	2fff4278 <bsec_power_safmem>
2fff4702:	2800      	cmp	r0, #0
2fff4704:	d0b0      	beq.n	2fff4668 <bsec_program_otp+0x20>
2fff4706:	f7fe f98d 	bl	2fff2a24 <console_flush>
2fff470a:	f004 e9a0 	blx	2fff8a4c <do_panic>
2fff470e:	f06f 0404 	mvn.w	r4, #4
2fff4712:	e7ee      	b.n	2fff46f2 <bsec_program_otp+0xaa>
2fff4714:	2fffb468 	.word	0x2fffb468
2fff4718:	2fffb491 	.word	0x2fffb491
2fff471c:	2fffb4b8 	.word	0x2fffb4b8
2fff4720:	2fffe970 	.word	0x2fffe970
2fff4724:	2fffb4e1 	.word	0x2fffb4e1

2fff4728 <bsec_check_nsec_access_rights>:
2fff4728:	285f      	cmp	r0, #95	; 0x5f
2fff472a:	d810      	bhi.n	2fff474e <bsec_check_nsec_access_rights+0x26>
2fff472c:	281f      	cmp	r0, #31
2fff472e:	d911      	bls.n	2fff4754 <bsec_check_nsec_access_rights+0x2c>
2fff4730:	0942      	lsrs	r2, r0, #5
2fff4732:	2301      	movs	r3, #1
2fff4734:	f000 001f 	and.w	r0, r0, #31
2fff4738:	fa03 f000 	lsl.w	r0, r3, r0
2fff473c:	4b06      	ldr	r3, [pc, #24]	; (2fff4758 <bsec_check_nsec_access_rights+0x30>)
2fff473e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
2fff4742:	4218      	tst	r0, r3
2fff4744:	bf0c      	ite	eq
2fff4746:	f04f 30ff 	moveq.w	r0, #4294967295	; 0xffffffff
2fff474a:	2000      	movne	r0, #0
2fff474c:	4770      	bx	lr
2fff474e:	f06f 0003 	mvn.w	r0, #3
2fff4752:	4770      	bx	lr
2fff4754:	2000      	movs	r0, #0
2fff4756:	4770      	bx	lr
2fff4758:	2fffe978 	.word	0x2fffe978

2fff475c <fdt_osc_read_freq>:
2fff475c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff475e:	4607      	mov	r7, r0
2fff4760:	4668      	mov	r0, sp
2fff4762:	460e      	mov	r6, r1
2fff4764:	f003 fc2e 	bl	2fff7fc4 <fdt_get_address>
2fff4768:	2800      	cmp	r0, #0
2fff476a:	d03d      	beq.n	2fff47e8 <fdt_osc_read_freq+0x8c>
2fff476c:	4921      	ldr	r1, [pc, #132]	; (2fff47f4 <fdt_osc_read_freq+0x98>)
2fff476e:	9800      	ldr	r0, [sp, #0]
2fff4770:	f005 f89b 	bl	2fff98aa <fdt_path_offset>
2fff4774:	1e01      	subs	r1, r0, #0
2fff4776:	db3a      	blt.n	2fff47ee <fdt_osc_read_freq+0x92>
2fff4778:	9800      	ldr	r0, [sp, #0]
2fff477a:	f004 fe88 	bl	2fff948e <fdt_first_subnode>
2fff477e:	2800      	cmp	r0, #0
2fff4780:	4605      	mov	r5, r0
2fff4782:	da02      	bge.n	2fff478a <fdt_osc_read_freq+0x2e>
2fff4784:	2400      	movs	r4, #0
2fff4786:	6034      	str	r4, [r6, #0]
2fff4788:	e006      	b.n	2fff4798 <fdt_osc_read_freq+0x3c>
2fff478a:	9800      	ldr	r0, [sp, #0]
2fff478c:	aa01      	add	r2, sp, #4
2fff478e:	4629      	mov	r1, r5
2fff4790:	f004 ff08 	bl	2fff95a4 <fdt_get_name>
2fff4794:	b918      	cbnz	r0, 2fff479e <fdt_osc_read_freq+0x42>
2fff4796:	9c01      	ldr	r4, [sp, #4]
2fff4798:	4620      	mov	r0, r4
2fff479a:	b003      	add	sp, #12
2fff479c:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff479e:	9a01      	ldr	r2, [sp, #4]
2fff47a0:	4639      	mov	r1, r7
2fff47a2:	f005 fb42 	bl	2fff9e2a <strncmp>
2fff47a6:	4604      	mov	r4, r0
2fff47a8:	b9c8      	cbnz	r0, 2fff47de <fdt_osc_read_freq+0x82>
2fff47aa:	4628      	mov	r0, r5
2fff47ac:	f003 fc16 	bl	2fff7fdc <fdt_get_status>
2fff47b0:	b1a8      	cbz	r0, 2fff47de <fdt_osc_read_freq+0x82>
2fff47b2:	4a11      	ldr	r2, [pc, #68]	; (2fff47f8 <fdt_osc_read_freq+0x9c>)
2fff47b4:	ab01      	add	r3, sp, #4
2fff47b6:	9800      	ldr	r0, [sp, #0]
2fff47b8:	4629      	mov	r1, r5
2fff47ba:	f004 ffe4 	bl	2fff9786 <fdt_getprop>
2fff47be:	2800      	cmp	r0, #0
2fff47c0:	d0e9      	beq.n	2fff4796 <fdt_osc_read_freq+0x3a>
2fff47c2:	6802      	ldr	r2, [r0, #0]
2fff47c4:	0e13      	lsrs	r3, r2, #24
2fff47c6:	f3c2 2107 	ubfx	r1, r2, #8, #8
2fff47ca:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2fff47ce:	f3c2 4207 	ubfx	r2, r2, #16, #8
2fff47d2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2fff47d6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2fff47da:	6033      	str	r3, [r6, #0]
2fff47dc:	e7dc      	b.n	2fff4798 <fdt_osc_read_freq+0x3c>
2fff47de:	9800      	ldr	r0, [sp, #0]
2fff47e0:	4629      	mov	r1, r5
2fff47e2:	f004 fe67 	bl	2fff94b4 <fdt_next_subnode>
2fff47e6:	e7ca      	b.n	2fff477e <fdt_osc_read_freq+0x22>
2fff47e8:	f06f 0401 	mvn.w	r4, #1
2fff47ec:	e7d4      	b.n	2fff4798 <fdt_osc_read_freq+0x3c>
2fff47ee:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff47f2:	e7d1      	b.n	2fff4798 <fdt_osc_read_freq+0x3c>
2fff47f4:	2fffb510 	.word	0x2fffb510
2fff47f8:	2fffb518 	.word	0x2fffb518

2fff47fc <fdt_get_rcc_node>:
2fff47fc:	4801      	ldr	r0, [pc, #4]	; (2fff4804 <fdt_get_rcc_node+0x8>)
2fff47fe:	f003 bcef 	b.w	2fff81e0 <dt_get_node_by_compatible>
2fff4802:	bf00      	nop
2fff4804:	2fffb528 	.word	0x2fffb528

2fff4808 <fdt_rcc_read_uint32_default>:
2fff4808:	b538      	push	{r3, r4, r5, lr}
2fff480a:	4605      	mov	r5, r0
2fff480c:	460c      	mov	r4, r1
2fff480e:	f7ff fff5 	bl	2fff47fc <fdt_get_rcc_node>
2fff4812:	2800      	cmp	r0, #0
2fff4814:	db05      	blt.n	2fff4822 <fdt_rcc_read_uint32_default+0x1a>
2fff4816:	4622      	mov	r2, r4
2fff4818:	4629      	mov	r1, r5
2fff481a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff481e:	f003 bc3d 	b.w	2fff809c <fdt_read_uint32_default>
2fff4822:	4620      	mov	r0, r4
2fff4824:	bd38      	pop	{r3, r4, r5, pc}

2fff4826 <fdt_rcc_read_prop>:
2fff4826:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff4828:	4605      	mov	r5, r0
2fff482a:	a801      	add	r0, sp, #4
2fff482c:	460c      	mov	r4, r1
2fff482e:	f003 fbc9 	bl	2fff7fc4 <fdt_get_address>
2fff4832:	b910      	cbnz	r0, 2fff483a <fdt_rcc_read_prop+0x14>
2fff4834:	2000      	movs	r0, #0
2fff4836:	b003      	add	sp, #12
2fff4838:	bd30      	pop	{r4, r5, pc}
2fff483a:	f7ff ffdf 	bl	2fff47fc <fdt_get_rcc_node>
2fff483e:	1e01      	subs	r1, r0, #0
2fff4840:	dbf8      	blt.n	2fff4834 <fdt_rcc_read_prop+0xe>
2fff4842:	9801      	ldr	r0, [sp, #4]
2fff4844:	466b      	mov	r3, sp
2fff4846:	462a      	mov	r2, r5
2fff4848:	f004 ff9d 	bl	2fff9786 <fdt_getprop>
2fff484c:	2800      	cmp	r0, #0
2fff484e:	d0f2      	beq.n	2fff4836 <fdt_rcc_read_prop+0x10>
2fff4850:	9b00      	ldr	r3, [sp, #0]
2fff4852:	6023      	str	r3, [r4, #0]
2fff4854:	e7ef      	b.n	2fff4836 <fdt_rcc_read_prop+0x10>

2fff4856 <fdt_rcc_enable_it>:
2fff4856:	b510      	push	{r4, lr}
2fff4858:	4604      	mov	r4, r0
2fff485a:	f7ff ffcf 	bl	2fff47fc <fdt_get_rcc_node>
2fff485e:	2800      	cmp	r0, #0
2fff4860:	db04      	blt.n	2fff486c <fdt_rcc_enable_it+0x16>
2fff4862:	4621      	mov	r1, r4
2fff4864:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff4868:	f7fc befe 	b.w	2fff1668 <stm32_gic_enable_spi>
2fff486c:	f06f 0012 	mvn.w	r0, #18
2fff4870:	bd10      	pop	{r4, pc}
	...

2fff4874 <fdt_get_clock_id>:
2fff4874:	b513      	push	{r0, r1, r4, lr}
2fff4876:	4604      	mov	r4, r0
2fff4878:	a801      	add	r0, sp, #4
2fff487a:	f003 fba3 	bl	2fff7fc4 <fdt_get_address>
2fff487e:	b1a0      	cbz	r0, 2fff48aa <fdt_get_clock_id+0x36>
2fff4880:	4a0d      	ldr	r2, [pc, #52]	; (2fff48b8 <fdt_get_clock_id+0x44>)
2fff4882:	2300      	movs	r3, #0
2fff4884:	9801      	ldr	r0, [sp, #4]
2fff4886:	4621      	mov	r1, r4
2fff4888:	f004 ff7d 	bl	2fff9786 <fdt_getprop>
2fff488c:	b180      	cbz	r0, 2fff48b0 <fdt_get_clock_id+0x3c>
2fff488e:	6843      	ldr	r3, [r0, #4]
2fff4890:	0e18      	lsrs	r0, r3, #24
2fff4892:	f3c3 2207 	ubfx	r2, r3, #8, #8
2fff4896:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
2fff489a:	f3c3 4307 	ubfx	r3, r3, #16, #8
2fff489e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
2fff48a2:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
2fff48a6:	b002      	add	sp, #8
2fff48a8:	bd10      	pop	{r4, pc}
2fff48aa:	f06f 0001 	mvn.w	r0, #1
2fff48ae:	e7fa      	b.n	2fff48a6 <fdt_get_clock_id+0x32>
2fff48b0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff48b4:	e7f7      	b.n	2fff48a6 <fdt_get_clock_id+0x32>
2fff48b6:	bf00      	nop
2fff48b8:	2fffb511 	.word	0x2fffb511

2fff48bc <fdt_get_clock_id_by_name>:
2fff48bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff48be:	4605      	mov	r5, r0
2fff48c0:	4668      	mov	r0, sp
2fff48c2:	460c      	mov	r4, r1
2fff48c4:	f003 fb7e 	bl	2fff7fc4 <fdt_get_address>
2fff48c8:	b318      	cbz	r0, 2fff4912 <fdt_get_clock_id_by_name+0x56>
2fff48ca:	4a16      	ldr	r2, [pc, #88]	; (2fff4924 <fdt_get_clock_id_by_name+0x68>)
2fff48cc:	4623      	mov	r3, r4
2fff48ce:	9800      	ldr	r0, [sp, #0]
2fff48d0:	4629      	mov	r1, r5
2fff48d2:	f005 f88e 	bl	2fff99f2 <fdt_stringlist_search>
2fff48d6:	1e04      	subs	r4, r0, #0
2fff48d8:	db18      	blt.n	2fff490c <fdt_get_clock_id_by_name+0x50>
2fff48da:	4a13      	ldr	r2, [pc, #76]	; (2fff4928 <fdt_get_clock_id_by_name+0x6c>)
2fff48dc:	ab01      	add	r3, sp, #4
2fff48de:	9800      	ldr	r0, [sp, #0]
2fff48e0:	4629      	mov	r1, r5
2fff48e2:	f004 ff50 	bl	2fff9786 <fdt_getprop>
2fff48e6:	b1b8      	cbz	r0, 2fff4918 <fdt_get_clock_id_by_name+0x5c>
2fff48e8:	9b01      	ldr	r3, [sp, #4]
2fff48ea:	ebb3 0f84 	cmp.w	r3, r4, lsl #2
2fff48ee:	db16      	blt.n	2fff491e <fdt_get_clock_id_by_name+0x62>
2fff48f0:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
2fff48f4:	6840      	ldr	r0, [r0, #4]
2fff48f6:	0e04      	lsrs	r4, r0, #24
2fff48f8:	f3c0 2307 	ubfx	r3, r0, #8, #8
2fff48fc:	ea44 6400 	orr.w	r4, r4, r0, lsl #24
2fff4900:	f3c0 4007 	ubfx	r0, r0, #16, #8
2fff4904:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
2fff4908:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
2fff490c:	4620      	mov	r0, r4
2fff490e:	b003      	add	sp, #12
2fff4910:	bd30      	pop	{r4, r5, pc}
2fff4912:	f06f 0401 	mvn.w	r4, #1
2fff4916:	e7f9      	b.n	2fff490c <fdt_get_clock_id_by_name+0x50>
2fff4918:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff491c:	e7f6      	b.n	2fff490c <fdt_get_clock_id_by_name+0x50>
2fff491e:	f06f 040e 	mvn.w	r4, #14
2fff4922:	e7f3      	b.n	2fff490c <fdt_get_clock_id_by_name+0x50>
2fff4924:	2fffb538 	.word	0x2fffb538
2fff4928:	2fffb511 	.word	0x2fffb511

2fff492c <stm32mp_stgen_get_counter>:
2fff492c:	4b02      	ldr	r3, [pc, #8]	; (2fff4938 <stm32mp_stgen_get_counter+0xc>)
2fff492e:	6819      	ldr	r1, [r3, #0]
2fff4930:	f853 0c04 	ldr.w	r0, [r3, #-4]
2fff4934:	4770      	bx	lr
2fff4936:	bf00      	nop
2fff4938:	5c00800c 	.word	0x5c00800c

2fff493c <stm32mp_stgen_restore_counter>:
2fff493c:	b570      	push	{r4, r5, r6, lr}
2fff493e:	460d      	mov	r5, r1
2fff4940:	490d      	ldr	r1, [pc, #52]	; (2fff4978 <stm32mp_stgen_restore_counter+0x3c>)
2fff4942:	4604      	mov	r4, r0
2fff4944:	680e      	ldr	r6, [r1, #0]
2fff4946:	fba6 0102 	umull	r0, r1, r6, r2
2fff494a:	fb06 1103 	mla	r1, r6, r3, r1
2fff494e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2fff4952:	2300      	movs	r3, #0
2fff4954:	f004 ea18 	blx	2fff8d88 <__aeabi_uldivmod>
2fff4958:	4b08      	ldr	r3, [pc, #32]	; (2fff497c <stm32mp_stgen_restore_counter+0x40>)
2fff495a:	1900      	adds	r0, r0, r4
2fff495c:	681a      	ldr	r2, [r3, #0]
2fff495e:	eb45 0101 	adc.w	r1, r5, r1
2fff4962:	f022 0201 	bic.w	r2, r2, #1
2fff4966:	601a      	str	r2, [r3, #0]
2fff4968:	4a05      	ldr	r2, [pc, #20]	; (2fff4980 <stm32mp_stgen_restore_counter+0x44>)
2fff496a:	6010      	str	r0, [r2, #0]
2fff496c:	6051      	str	r1, [r2, #4]
2fff496e:	681a      	ldr	r2, [r3, #0]
2fff4970:	f042 0201 	orr.w	r2, r2, #1
2fff4974:	601a      	str	r2, [r3, #0]
2fff4976:	bd70      	pop	{r4, r5, r6, pc}
2fff4978:	5c008020 	.word	0x5c008020
2fff497c:	5c008000 	.word	0x5c008000
2fff4980:	5c008008 	.word	0x5c008008

2fff4984 <clock_is_always_on>:
2fff4984:	2805      	cmp	r0, #5
2fff4986:	d909      	bls.n	2fff499c <clock_is_always_on+0x18>
2fff4988:	f1a0 03b4 	sub.w	r3, r0, #180	; 0xb4
2fff498c:	2b08      	cmp	r3, #8
2fff498e:	d905      	bls.n	2fff499c <clock_is_always_on+0x18>
2fff4990:	38c2      	subs	r0, #194	; 0xc2
2fff4992:	2802      	cmp	r0, #2
2fff4994:	bf8c      	ite	hi
2fff4996:	2000      	movhi	r0, #0
2fff4998:	2001      	movls	r0, #1
2fff499a:	4770      	bx	lr
2fff499c:	2001      	movs	r0, #1
2fff499e:	4770      	bx	lr

2fff49a0 <stm32mp1_read_pll_freq>:
2fff49a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff49a4:	4606      	mov	r6, r0
2fff49a6:	f8df 90ac 	ldr.w	r9, [pc, #172]	; 2fff4a54 <stm32mp1_read_pll_freq+0xb4>
2fff49aa:	460c      	mov	r4, r1
2fff49ac:	f7fe f95c 	bl	2fff2c68 <stm32mp_rcc_base>
2fff49b0:	eb09 1746 	add.w	r7, r9, r6, lsl #5
2fff49b4:	893b      	ldrh	r3, [r7, #8]
2fff49b6:	581d      	ldr	r5, [r3, r0]
2fff49b8:	4b24      	ldr	r3, [pc, #144]	; (2fff4a4c <stm32mp1_read_pll_freq+0xac>)
2fff49ba:	5d18      	ldrb	r0, [r3, r4]
2fff49bc:	40c5      	lsrs	r5, r0
2fff49be:	f7fe f953 	bl	2fff2c68 <stm32mp_rcc_base>
2fff49c2:	88fb      	ldrh	r3, [r7, #6]
2fff49c4:	f005 057f 	and.w	r5, r5, #127	; 0x7f
2fff49c8:	581c      	ldr	r4, [r3, r0]
2fff49ca:	897b      	ldrh	r3, [r7, #10]
2fff49cc:	f853 8000 	ldr.w	r8, [r3, r0]
2fff49d0:	f7fe f94a 	bl	2fff2c68 <stm32mp_rcc_base>
2fff49d4:	88bb      	ldrh	r3, [r7, #4]
2fff49d6:	581b      	ldr	r3, [r3, r0]
2fff49d8:	f003 0303 	and.w	r3, r3, #3
2fff49dc:	eb03 00c6 	add.w	r0, r3, r6, lsl #3
2fff49e0:	3004      	adds	r0, #4
2fff49e2:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
2fff49e6:	f3c4 0008 	ubfx	r0, r4, #0, #9
2fff49ea:	2b05      	cmp	r3, #5
2fff49ec:	bf8e      	itee	hi
2fff49ee:	2300      	movhi	r3, #0
2fff49f0:	4a17      	ldrls	r2, [pc, #92]	; (2fff4a50 <stm32mp1_read_pll_freq+0xb0>)
2fff49f2:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
2fff49f6:	f418 3f80 	tst.w	r8, #65536	; 0x10000
2fff49fa:	f3c4 4205 	ubfx	r2, r4, #16, #6
2fff49fe:	d01e      	beq.n	2fff4a3e <stm32mp1_read_pll_freq+0x9e>
2fff4a00:	f3c8 08cc 	ubfx	r8, r8, #3, #13
2fff4a04:	3001      	adds	r0, #1
2fff4a06:	bf2c      	ite	cs
2fff4a08:	2101      	movcs	r1, #1
2fff4a0a:	2100      	movcc	r1, #0
2fff4a0c:	0346      	lsls	r6, r0, #13
2fff4a0e:	034f      	lsls	r7, r1, #13
2fff4a10:	eb16 0608 	adds.w	r6, r6, r8
2fff4a14:	ea47 47d0 	orr.w	r7, r7, r0, lsr #19
2fff4a18:	f147 0700 	adc.w	r7, r7, #0
2fff4a1c:	3201      	adds	r2, #1
2fff4a1e:	fba3 0106 	umull	r0, r1, r3, r6
2fff4a22:	fb03 1107 	mla	r1, r3, r7, r1
2fff4a26:	bf2c      	ite	cs
2fff4a28:	2301      	movcs	r3, #1
2fff4a2a:	2300      	movcc	r3, #0
2fff4a2c:	0352      	lsls	r2, r2, #13
2fff4a2e:	035b      	lsls	r3, r3, #13
2fff4a30:	f004 e9aa 	blx	2fff8d88 <__aeabi_uldivmod>
2fff4a34:	3501      	adds	r5, #1
2fff4a36:	fbb0 f0f5 	udiv	r0, r0, r5
2fff4a3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff4a3e:	fb00 3303 	mla	r3, r0, r3, r3
2fff4a42:	1c50      	adds	r0, r2, #1
2fff4a44:	fbb3 f0f0 	udiv	r0, r3, r0
2fff4a48:	e7f4      	b.n	2fff4a34 <stm32mp1_read_pll_freq+0x94>
2fff4a4a:	bf00      	nop
2fff4a4c:	2fffb73e 	.word	0x2fffb73e
2fff4a50:	2fffeaa4 	.word	0x2fffeaa4
2fff4a54:	2fffb8d8 	.word	0x2fffb8d8

2fff4a58 <get_clock_rate>:
2fff4a58:	b538      	push	{r3, r4, r5, lr}
2fff4a5a:	4605      	mov	r5, r0
2fff4a5c:	f7fe f904 	bl	2fff2c68 <stm32mp_rcc_base>
2fff4a60:	4604      	mov	r4, r0
2fff4a62:	2d21      	cmp	r5, #33	; 0x21
2fff4a64:	f200 8091 	bhi.w	2fff4b8a <get_clock_rate+0x132>
2fff4a68:	e8df f005 	tbb	[pc, r5]
2fff4a6c:	98911f1c 	.word	0x98911f1c
2fff4a70:	1f1c8f9b 	.word	0x1f1c8f9b
2fff4a74:	9e229194 	.word	0x9e229194
2fff4a78:	a8a5a2a0 	.word	0xa8a5a2a0
2fff4a7c:	b1afadaa 	.word	0xb1afadaa
2fff4a80:	5633b6b4 	.word	0x5633b6b4
2fff4a84:	33335656 	.word	0x33335656
2fff4a88:	13853333 	.word	0x13853333
2fff4a8c:	1156      	.short	0x1156
2fff4a8e:	4853      	ldr	r0, [pc, #332]	; (2fff4bdc <get_clock_rate+0x184>)
2fff4a90:	bd38      	pop	{r3, r4, r5, pc}
2fff4a92:	6a03      	ldr	r3, [r0, #32]
2fff4a94:	f003 0307 	and.w	r3, r3, #7
2fff4a98:	2b03      	cmp	r3, #3
2fff4a9a:	d876      	bhi.n	2fff4b8a <get_clock_rate+0x132>
2fff4a9c:	e8df f003 	tbb	[pc, r3]
2fff4aa0:	0e080502 	.word	0x0e080502
2fff4aa4:	4b4e      	ldr	r3, [pc, #312]	; (2fff4be0 <get_clock_rate+0x188>)
2fff4aa6:	6818      	ldr	r0, [r3, #0]
2fff4aa8:	e7f2      	b.n	2fff4a90 <get_clock_rate+0x38>
2fff4aaa:	4b4d      	ldr	r3, [pc, #308]	; (2fff4be0 <get_clock_rate+0x188>)
2fff4aac:	6858      	ldr	r0, [r3, #4]
2fff4aae:	e7ef      	b.n	2fff4a90 <get_clock_rate+0x38>
2fff4ab0:	2100      	movs	r1, #0
2fff4ab2:	2000      	movs	r0, #0
2fff4ab4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff4ab8:	f7ff bf72 	b.w	2fff49a0 <stm32mp1_read_pll_freq>
2fff4abc:	2100      	movs	r1, #0
2fff4abe:	4608      	mov	r0, r1
2fff4ac0:	f7ff ff6e 	bl	2fff49a0 <stm32mp1_read_pll_freq>
2fff4ac4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff4ac6:	4a47      	ldr	r2, [pc, #284]	; (2fff4be4 <get_clock_rate+0x18c>)
2fff4ac8:	f003 0307 	and.w	r3, r3, #7
2fff4acc:	5cd3      	ldrb	r3, [r2, r3]
2fff4ace:	40d8      	lsrs	r0, r3
2fff4ad0:	e7de      	b.n	2fff4a90 <get_clock_rate+0x38>
2fff4ad2:	6a43      	ldr	r3, [r0, #36]	; 0x24
2fff4ad4:	f003 0307 	and.w	r3, r3, #7
2fff4ad8:	2b01      	cmp	r3, #1
2fff4ada:	d011      	beq.n	2fff4b00 <get_clock_rate+0xa8>
2fff4adc:	2b02      	cmp	r3, #2
2fff4ade:	d012      	beq.n	2fff4b06 <get_clock_rate+0xae>
2fff4ae0:	b9b3      	cbnz	r3, 2fff4b10 <get_clock_rate+0xb8>
2fff4ae2:	4b3f      	ldr	r3, [pc, #252]	; (2fff4be0 <get_clock_rate+0x188>)
2fff4ae4:	6818      	ldr	r0, [r3, #0]
2fff4ae6:	6b23      	ldr	r3, [r4, #48]	; 0x30
2fff4ae8:	2d1a      	cmp	r5, #26
2fff4aea:	4a3f      	ldr	r2, [pc, #252]	; (2fff4be8 <get_clock_rate+0x190>)
2fff4aec:	f003 0307 	and.w	r3, r3, #7
2fff4af0:	5cd3      	ldrb	r3, [r2, r3]
2fff4af2:	fbb0 f0f3 	udiv	r0, r0, r3
2fff4af6:	d00d      	beq.n	2fff4b14 <get_clock_rate+0xbc>
2fff4af8:	2d1b      	cmp	r5, #27
2fff4afa:	d1c9      	bne.n	2fff4a90 <get_clock_rate+0x38>
2fff4afc:	6c23      	ldr	r3, [r4, #64]	; 0x40
2fff4afe:	e7e2      	b.n	2fff4ac6 <get_clock_rate+0x6e>
2fff4b00:	4b37      	ldr	r3, [pc, #220]	; (2fff4be0 <get_clock_rate+0x188>)
2fff4b02:	6858      	ldr	r0, [r3, #4]
2fff4b04:	e7ef      	b.n	2fff4ae6 <get_clock_rate+0x8e>
2fff4b06:	2100      	movs	r1, #0
2fff4b08:	2001      	movs	r0, #1
2fff4b0a:	f7ff ff49 	bl	2fff49a0 <stm32mp1_read_pll_freq>
2fff4b0e:	e7ea      	b.n	2fff4ae6 <get_clock_rate+0x8e>
2fff4b10:	2000      	movs	r0, #0
2fff4b12:	e7e8      	b.n	2fff4ae6 <get_clock_rate+0x8e>
2fff4b14:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff4b16:	e7d6      	b.n	2fff4ac6 <get_clock_rate+0x6e>
2fff4b18:	6c83      	ldr	r3, [r0, #72]	; 0x48
2fff4b1a:	f003 0307 	and.w	r3, r3, #7
2fff4b1e:	2b03      	cmp	r3, #3
2fff4b20:	d821      	bhi.n	2fff4b66 <get_clock_rate+0x10e>
2fff4b22:	e8df f003 	tbb	[pc, r3]
2fff4b26:	1502      	.short	0x1502
2fff4b28:	1b18      	.short	0x1b18
2fff4b2a:	4b2d      	ldr	r3, [pc, #180]	; (2fff4be0 <get_clock_rate+0x188>)
2fff4b2c:	6818      	ldr	r0, [r3, #0]
2fff4b2e:	f8d4 3830 	ldr.w	r3, [r4, #2096]	; 0x830
2fff4b32:	2d18      	cmp	r5, #24
2fff4b34:	4a2d      	ldr	r2, [pc, #180]	; (2fff4bec <get_clock_rate+0x194>)
2fff4b36:	f003 030f 	and.w	r3, r3, #15
2fff4b3a:	5cd3      	ldrb	r3, [r2, r3]
2fff4b3c:	fa20 f003 	lsr.w	r0, r0, r3
2fff4b40:	d013      	beq.n	2fff4b6a <get_clock_rate+0x112>
2fff4b42:	2d19      	cmp	r5, #25
2fff4b44:	d014      	beq.n	2fff4b70 <get_clock_rate+0x118>
2fff4b46:	2d17      	cmp	r5, #23
2fff4b48:	d1a2      	bne.n	2fff4a90 <get_clock_rate+0x38>
2fff4b4a:	f8d4 3834 	ldr.w	r3, [r4, #2100]	; 0x834
2fff4b4e:	e7ba      	b.n	2fff4ac6 <get_clock_rate+0x6e>
2fff4b50:	4b23      	ldr	r3, [pc, #140]	; (2fff4be0 <get_clock_rate+0x188>)
2fff4b52:	6858      	ldr	r0, [r3, #4]
2fff4b54:	e7eb      	b.n	2fff4b2e <get_clock_rate+0xd6>
2fff4b56:	4b22      	ldr	r3, [pc, #136]	; (2fff4be0 <get_clock_rate+0x188>)
2fff4b58:	6898      	ldr	r0, [r3, #8]
2fff4b5a:	e7e8      	b.n	2fff4b2e <get_clock_rate+0xd6>
2fff4b5c:	2100      	movs	r1, #0
2fff4b5e:	2002      	movs	r0, #2
2fff4b60:	f7ff ff1e 	bl	2fff49a0 <stm32mp1_read_pll_freq>
2fff4b64:	e7e3      	b.n	2fff4b2e <get_clock_rate+0xd6>
2fff4b66:	2000      	movs	r0, #0
2fff4b68:	e7e1      	b.n	2fff4b2e <get_clock_rate+0xd6>
2fff4b6a:	f8d4 3838 	ldr.w	r3, [r4, #2104]	; 0x838
2fff4b6e:	e7aa      	b.n	2fff4ac6 <get_clock_rate+0x6e>
2fff4b70:	f8d4 383c 	ldr.w	r3, [r4, #2108]	; 0x83c
2fff4b74:	e7a7      	b.n	2fff4ac6 <get_clock_rate+0x6e>
2fff4b76:	f8d0 30d0 	ldr.w	r3, [r0, #208]	; 0xd0
2fff4b7a:	f003 0307 	and.w	r3, r3, #7
2fff4b7e:	2b01      	cmp	r3, #1
2fff4b80:	d005      	beq.n	2fff4b8e <get_clock_rate+0x136>
2fff4b82:	2b02      	cmp	r3, #2
2fff4b84:	d091      	beq.n	2fff4aaa <get_clock_rate+0x52>
2fff4b86:	2b00      	cmp	r3, #0
2fff4b88:	d08c      	beq.n	2fff4aa4 <get_clock_rate+0x4c>
2fff4b8a:	2000      	movs	r0, #0
2fff4b8c:	e780      	b.n	2fff4a90 <get_clock_rate+0x38>
2fff4b8e:	4b14      	ldr	r3, [pc, #80]	; (2fff4be0 <get_clock_rate+0x188>)
2fff4b90:	6898      	ldr	r0, [r3, #8]
2fff4b92:	e77d      	b.n	2fff4a90 <get_clock_rate+0x38>
2fff4b94:	4b12      	ldr	r3, [pc, #72]	; (2fff4be0 <get_clock_rate+0x188>)
2fff4b96:	6858      	ldr	r0, [r3, #4]
2fff4b98:	0840      	lsrs	r0, r0, #1
2fff4b9a:	e779      	b.n	2fff4a90 <get_clock_rate+0x38>
2fff4b9c:	4b10      	ldr	r3, [pc, #64]	; (2fff4be0 <get_clock_rate+0x188>)
2fff4b9e:	68d8      	ldr	r0, [r3, #12]
2fff4ba0:	e776      	b.n	2fff4a90 <get_clock_rate+0x38>
2fff4ba2:	4b0f      	ldr	r3, [pc, #60]	; (2fff4be0 <get_clock_rate+0x188>)
2fff4ba4:	6918      	ldr	r0, [r3, #16]
2fff4ba6:	e773      	b.n	2fff4a90 <get_clock_rate+0x38>
2fff4ba8:	2101      	movs	r1, #1
2fff4baa:	e782      	b.n	2fff4ab2 <get_clock_rate+0x5a>
2fff4bac:	2102      	movs	r1, #2
2fff4bae:	e780      	b.n	2fff4ab2 <get_clock_rate+0x5a>
2fff4bb0:	2100      	movs	r1, #0
2fff4bb2:	2001      	movs	r0, #1
2fff4bb4:	e77e      	b.n	2fff4ab4 <get_clock_rate+0x5c>
2fff4bb6:	2101      	movs	r1, #1
2fff4bb8:	4608      	mov	r0, r1
2fff4bba:	e77b      	b.n	2fff4ab4 <get_clock_rate+0x5c>
2fff4bbc:	2102      	movs	r1, #2
2fff4bbe:	e7f8      	b.n	2fff4bb2 <get_clock_rate+0x15a>
2fff4bc0:	2100      	movs	r1, #0
2fff4bc2:	2002      	movs	r0, #2
2fff4bc4:	e776      	b.n	2fff4ab4 <get_clock_rate+0x5c>
2fff4bc6:	2101      	movs	r1, #1
2fff4bc8:	e7fb      	b.n	2fff4bc2 <get_clock_rate+0x16a>
2fff4bca:	2102      	movs	r1, #2
2fff4bcc:	e7f4      	b.n	2fff4bb8 <get_clock_rate+0x160>
2fff4bce:	2100      	movs	r1, #0
2fff4bd0:	2003      	movs	r0, #3
2fff4bd2:	e76f      	b.n	2fff4ab4 <get_clock_rate+0x5c>
2fff4bd4:	2101      	movs	r1, #1
2fff4bd6:	e7fb      	b.n	2fff4bd0 <get_clock_rate+0x178>
2fff4bd8:	2102      	movs	r1, #2
2fff4bda:	e7f9      	b.n	2fff4bd0 <get_clock_rate+0x178>
2fff4bdc:	02dc6c00 	.word	0x02dc6c00
2fff4be0:	2fffeaa4 	.word	0x2fffeaa4
2fff4be4:	2fffba70 	.word	0x2fffba70
2fff4be8:	2fffb75d 	.word	0x2fffb75d
2fff4bec:	2fffba60 	.word	0x2fffba60

2fff4bf0 <stm32mp1_pll_compute_pllxcfgr1>:
2fff4bf0:	b570      	push	{r4, r5, r6, lr}
2fff4bf2:	4605      	mov	r5, r0
2fff4bf4:	460c      	mov	r4, r1
2fff4bf6:	4616      	mov	r6, r2
2fff4bf8:	f7fe f836 	bl	2fff2c68 <stm32mp_rcc_base>
2fff4bfc:	88ab      	ldrh	r3, [r5, #4]
2fff4bfe:	6829      	ldr	r1, [r5, #0]
2fff4c00:	581b      	ldr	r3, [r3, r0]
2fff4c02:	481a      	ldr	r0, [pc, #104]	; (2fff4c6c <stm32mp1_pll_compute_pllxcfgr1+0x7c>)
2fff4c04:	f003 0303 	and.w	r3, r3, #3
2fff4c08:	3304      	adds	r3, #4
2fff4c0a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
2fff4c0e:	2b05      	cmp	r3, #5
2fff4c10:	bf8e      	itee	hi
2fff4c12:	2300      	movhi	r3, #0
2fff4c14:	4a16      	ldrls	r2, [pc, #88]	; (2fff4c70 <stm32mp1_pll_compute_pllxcfgr1+0x80>)
2fff4c16:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
2fff4c1a:	6822      	ldr	r2, [r4, #0]
2fff4c1c:	3201      	adds	r2, #1
2fff4c1e:	fbb3 f3f2 	udiv	r3, r3, r2
2fff4c22:	eb01 0241 	add.w	r2, r1, r1, lsl #1
2fff4c26:	1885      	adds	r5, r0, r2
2fff4c28:	5c80      	ldrb	r0, [r0, r2]
2fff4c2a:	4a12      	ldr	r2, [pc, #72]	; (2fff4c74 <stm32mp1_pll_compute_pllxcfgr1+0x84>)
2fff4c2c:	4350      	muls	r0, r2
2fff4c2e:	4298      	cmp	r0, r3
2fff4c30:	d819      	bhi.n	2fff4c66 <stm32mp1_pll_compute_pllxcfgr1+0x76>
2fff4c32:	7868      	ldrb	r0, [r5, #1]
2fff4c34:	4342      	muls	r2, r0
2fff4c36:	429a      	cmp	r2, r3
2fff4c38:	d315      	bcc.n	2fff4c66 <stm32mp1_pll_compute_pllxcfgr1+0x76>
2fff4c3a:	b991      	cbnz	r1, 2fff4c62 <stm32mp1_pll_compute_pllxcfgr1+0x72>
2fff4c3c:	480e      	ldr	r0, [pc, #56]	; (2fff4c78 <stm32mp1_pll_compute_pllxcfgr1+0x88>)
2fff4c3e:	4283      	cmp	r3, r0
2fff4c40:	bf34      	ite	cc
2fff4c42:	2000      	movcc	r0, #0
2fff4c44:	2001      	movcs	r0, #1
2fff4c46:	6863      	ldr	r3, [r4, #4]
2fff4c48:	f3c3 0208 	ubfx	r2, r3, #0, #9
2fff4c4c:	6032      	str	r2, [r6, #0]
2fff4c4e:	6823      	ldr	r3, [r4, #0]
2fff4c50:	041b      	lsls	r3, r3, #16
2fff4c52:	f403 137c 	and.w	r3, r3, #4128768	; 0x3f0000
2fff4c56:	4313      	orrs	r3, r2
2fff4c58:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
2fff4c5c:	2000      	movs	r0, #0
2fff4c5e:	6033      	str	r3, [r6, #0]
2fff4c60:	bd70      	pop	{r4, r5, r6, pc}
2fff4c62:	2000      	movs	r0, #0
2fff4c64:	e7ef      	b.n	2fff4c46 <stm32mp1_pll_compute_pllxcfgr1+0x56>
2fff4c66:	f06f 0015 	mvn.w	r0, #21
2fff4c6a:	e7f9      	b.n	2fff4c60 <stm32mp1_pll_compute_pllxcfgr1+0x70>
2fff4c6c:	2fffba78 	.word	0x2fffba78
2fff4c70:	2fffeaa4 	.word	0x2fffeaa4
2fff4c74:	000f4240 	.word	0x000f4240
2fff4c78:	007a1200 	.word	0x007a1200

2fff4c7c <stm32mp1_pll_start>:
2fff4c7c:	b510      	push	{r4, lr}
2fff4c7e:	4604      	mov	r4, r0
2fff4c80:	f7fd fff2 	bl	2fff2c68 <stm32mp_rcc_base>
2fff4c84:	4b05      	ldr	r3, [pc, #20]	; (2fff4c9c <stm32mp1_pll_start+0x20>)
2fff4c86:	eb03 1344 	add.w	r3, r3, r4, lsl #5
2fff4c8a:	899a      	ldrh	r2, [r3, #12]
2fff4c8c:	5813      	ldr	r3, [r2, r0]
2fff4c8e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
2fff4c92:	f043 0301 	orr.w	r3, r3, #1
2fff4c96:	5013      	str	r3, [r2, r0]
2fff4c98:	bd10      	pop	{r4, pc}
2fff4c9a:	bf00      	nop
2fff4c9c:	2fffb8d8 	.word	0x2fffb8d8

2fff4ca0 <stm32mp1_clk_lock>:
2fff4ca0:	b510      	push	{r4, lr}
2fff4ca2:	4604      	mov	r4, r0
2fff4ca4:	f7fd ffe3 	bl	2fff2c6e <stm32mp_lock_available>
2fff4ca8:	b120      	cbz	r0, 2fff4cb4 <stm32mp1_clk_lock+0x14>
2fff4caa:	4620      	mov	r0, r4
2fff4cac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff4cb0:	f007 bd7e 	b.w	2fffc7b0 <__spin_lock_from_thumb>
2fff4cb4:	bd10      	pop	{r4, pc}

2fff4cb6 <stm32mp1_clk_unlock>:
2fff4cb6:	b510      	push	{r4, lr}
2fff4cb8:	4604      	mov	r4, r0
2fff4cba:	f7fd ffd8 	bl	2fff2c6e <stm32mp_lock_available>
2fff4cbe:	b120      	cbz	r0, 2fff4cca <stm32mp1_clk_unlock+0x14>
2fff4cc0:	4620      	mov	r0, r4
2fff4cc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff4cc6:	f007 bd67 	b.w	2fffc798 <__spin_unlock_from_thumb>
2fff4cca:	bd10      	pop	{r4, pc}

2fff4ccc <stm32mp1_pll_stop>:
2fff4ccc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff4cd0:	4682      	mov	sl, r0
2fff4cd2:	f7fd ffc9 	bl	2fff2c68 <stm32mp_rcc_base>
2fff4cd6:	4b19      	ldr	r3, [pc, #100]	; (2fff4d3c <stm32mp1_pll_stop+0x70>)
2fff4cd8:	4604      	mov	r4, r0
2fff4cda:	eb03 134a 	add.w	r3, r3, sl, lsl #5
2fff4cde:	899d      	ldrh	r5, [r3, #12]
2fff4ce0:	582b      	ldr	r3, [r5, r0]
2fff4ce2:	eb05 0b00 	add.w	fp, r5, r0
2fff4ce6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
2fff4cea:	502b      	str	r3, [r5, r0]
2fff4cec:	582b      	ldr	r3, [r5, r0]
2fff4cee:	f023 0301 	bic.w	r3, r3, #1
2fff4cf2:	502b      	str	r3, [r5, r0]
2fff4cf4:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff4cf8:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff4cfc:	4910      	ldr	r1, [pc, #64]	; (2fff4d40 <stm32mp1_pll_stop+0x74>)
2fff4cfe:	2300      	movs	r3, #0
2fff4d00:	4a10      	ldr	r2, [pc, #64]	; (2fff4d44 <stm32mp1_pll_stop+0x78>)
2fff4d02:	fba0 0101 	umull	r0, r1, r0, r1
2fff4d06:	f004 e840 	blx	2fff8d88 <__aeabi_uldivmod>
2fff4d0a:	eb10 0806 	adds.w	r8, r0, r6
2fff4d0e:	eb41 0907 	adc.w	r9, r1, r7
2fff4d12:	f8db 0000 	ldr.w	r0, [fp]
2fff4d16:	f010 0002 	ands.w	r0, r0, #2
2fff4d1a:	d00d      	beq.n	2fff4d38 <stm32mp1_pll_stop+0x6c>
2fff4d1c:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff4d20:	4599      	cmp	r9, r3
2fff4d22:	bf08      	it	eq
2fff4d24:	4590      	cmpeq	r8, r2
2fff4d26:	d2f4      	bcs.n	2fff4d12 <stm32mp1_pll_stop+0x46>
2fff4d28:	4807      	ldr	r0, [pc, #28]	; (2fff4d48 <stm32mp1_pll_stop+0x7c>)
2fff4d2a:	465a      	mov	r2, fp
2fff4d2c:	592b      	ldr	r3, [r5, r4]
2fff4d2e:	4651      	mov	r1, sl
2fff4d30:	f7fd fdd4 	bl	2fff28dc <tf_log>
2fff4d34:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff4d38:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff4d3c:	2fffb8d8 	.word	0x2fffb8d8
2fff4d40:	00030d40 	.word	0x00030d40
2fff4d44:	000f4240 	.word	0x000f4240
2fff4d48:	2fffb544 	.word	0x2fffb544

2fff4d4c <__clk_enable>:
2fff4d4c:	b538      	push	{r3, r4, r5, lr}
2fff4d4e:	4604      	mov	r4, r0
2fff4d50:	f7fd ff8a 	bl	2fff2c68 <stm32mp_rcc_base>
2fff4d54:	78a2      	ldrb	r2, [r4, #2]
2fff4d56:	2101      	movs	r1, #1
2fff4d58:	7925      	ldrb	r5, [r4, #4]
2fff4d5a:	8823      	ldrh	r3, [r4, #0]
2fff4d5c:	4091      	lsls	r1, r2
2fff4d5e:	b10d      	cbz	r5, 2fff4d64 <__clk_enable+0x18>
2fff4d60:	5019      	str	r1, [r3, r0]
2fff4d62:	bd38      	pop	{r3, r4, r5, pc}
2fff4d64:	4418      	add	r0, r3
2fff4d66:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff4d6a:	f003 bb6b 	b.w	2fff8444 <stm32mp_mmio_setbits_32_shregs>

2fff4d6e <__clk_disable>:
2fff4d6e:	b538      	push	{r3, r4, r5, lr}
2fff4d70:	4604      	mov	r4, r0
2fff4d72:	f7fd ff79 	bl	2fff2c68 <stm32mp_rcc_base>
2fff4d76:	78a2      	ldrb	r2, [r4, #2]
2fff4d78:	2101      	movs	r1, #1
2fff4d7a:	7925      	ldrb	r5, [r4, #4]
2fff4d7c:	8823      	ldrh	r3, [r4, #0]
2fff4d7e:	4091      	lsls	r1, r2
2fff4d80:	b115      	cbz	r5, 2fff4d88 <__clk_disable+0x1a>
2fff4d82:	3304      	adds	r3, #4
2fff4d84:	5019      	str	r1, [r3, r0]
2fff4d86:	bd38      	pop	{r3, r4, r5, pc}
2fff4d88:	4418      	add	r0, r3
2fff4d8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff4d8e:	f003 bb4c 	b.w	2fff842a <stm32mp_mmio_clrbits_32_shregs>
	...

2fff4d94 <stm32mp1_clk_get_gated_id>:
2fff4d94:	4602      	mov	r2, r0
2fff4d96:	2000      	movs	r0, #0
2fff4d98:	b508      	push	{r3, lr}
2fff4d9a:	4b08      	ldr	r3, [pc, #32]	; (2fff4dbc <stm32mp1_clk_get_gated_id+0x28>)
2fff4d9c:	eb03 01c0 	add.w	r1, r3, r0, lsl #3
2fff4da0:	78c9      	ldrb	r1, [r1, #3]
2fff4da2:	4291      	cmp	r1, r2
2fff4da4:	d008      	beq.n	2fff4db8 <stm32mp1_clk_get_gated_id+0x24>
2fff4da6:	3001      	adds	r0, #1
2fff4da8:	282e      	cmp	r0, #46	; 0x2e
2fff4daa:	d1f7      	bne.n	2fff4d9c <stm32mp1_clk_get_gated_id+0x8>
2fff4dac:	4804      	ldr	r0, [pc, #16]	; (2fff4dc0 <stm32mp1_clk_get_gated_id+0x2c>)
2fff4dae:	4905      	ldr	r1, [pc, #20]	; (2fff4dc4 <stm32mp1_clk_get_gated_id+0x30>)
2fff4db0:	f7fd fd94 	bl	2fff28dc <tf_log>
2fff4db4:	f06f 0015 	mvn.w	r0, #21
2fff4db8:	bd08      	pop	{r3, pc}
2fff4dba:	bf00      	nop
2fff4dbc:	2fffb766 	.word	0x2fffb766
2fff4dc0:	2fffb566 	.word	0x2fffb566
2fff4dc4:	2fffb6e4 	.word	0x2fffb6e4

2fff4dc8 <stm32mp1_clk_get_parent>:
2fff4dc8:	b538      	push	{r3, r4, r5, lr}
2fff4dca:	4604      	mov	r4, r0
2fff4dcc:	f7fd ff4c 	bl	2fff2c68 <stm32mp_rcc_base>
2fff4dd0:	4b18      	ldr	r3, [pc, #96]	; (2fff4e34 <stm32mp1_clk_get_parent+0x6c>)
2fff4dd2:	4605      	mov	r5, r0
2fff4dd4:	2000      	movs	r0, #0
2fff4dd6:	f813 2b01 	ldrb.w	r2, [r3], #1
2fff4dda:	4294      	cmp	r4, r2
2fff4ddc:	d026      	beq.n	2fff4e2c <stm32mp1_clk_get_parent+0x64>
2fff4dde:	3001      	adds	r0, #1
2fff4de0:	2822      	cmp	r0, #34	; 0x22
2fff4de2:	d1f8      	bne.n	2fff4dd6 <stm32mp1_clk_get_parent+0xe>
2fff4de4:	4620      	mov	r0, r4
2fff4de6:	f7ff ffd5 	bl	2fff4d94 <stm32mp1_clk_get_gated_id>
2fff4dea:	1e03      	subs	r3, r0, #0
2fff4dec:	da03      	bge.n	2fff4df6 <stm32mp1_clk_get_parent+0x2e>
2fff4dee:	f7fd fe19 	bl	2fff2a24 <console_flush>
2fff4df2:	f003 ee2c 	blx	2fff8a4c <do_panic>
2fff4df6:	4a10      	ldr	r2, [pc, #64]	; (2fff4e38 <stm32mp1_clk_get_parent+0x70>)
2fff4df8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
2fff4dfc:	79d8      	ldrb	r0, [r3, #7]
2fff4dfe:	2821      	cmp	r0, #33	; 0x21
2fff4e00:	d914      	bls.n	2fff4e2c <stm32mp1_clk_get_parent+0x64>
2fff4e02:	799a      	ldrb	r2, [r3, #6]
2fff4e04:	2aff      	cmp	r2, #255	; 0xff
2fff4e06:	d012      	beq.n	2fff4e2e <stm32mp1_clk_get_parent+0x66>
2fff4e08:	2a15      	cmp	r2, #21
2fff4e0a:	d8f0      	bhi.n	2fff4dee <stm32mp1_clk_get_parent+0x26>
2fff4e0c:	490b      	ldr	r1, [pc, #44]	; (2fff4e3c <stm32mp1_clk_get_parent+0x74>)
2fff4e0e:	230c      	movs	r3, #12
2fff4e10:	4353      	muls	r3, r2
2fff4e12:	18ca      	adds	r2, r1, r3
2fff4e14:	5acb      	ldrh	r3, [r1, r3]
2fff4e16:	7891      	ldrb	r1, [r2, #2]
2fff4e18:	5958      	ldr	r0, [r3, r5]
2fff4e1a:	78d3      	ldrb	r3, [r2, #3]
2fff4e1c:	408b      	lsls	r3, r1
2fff4e1e:	4003      	ands	r3, r0
2fff4e20:	40cb      	lsrs	r3, r1
2fff4e22:	7911      	ldrb	r1, [r2, #4]
2fff4e24:	4299      	cmp	r1, r3
2fff4e26:	d902      	bls.n	2fff4e2e <stm32mp1_clk_get_parent+0x66>
2fff4e28:	6892      	ldr	r2, [r2, #8]
2fff4e2a:	5cd0      	ldrb	r0, [r2, r3]
2fff4e2c:	bd38      	pop	{r3, r4, r5, pc}
2fff4e2e:	f06f 0015 	mvn.w	r0, #21
2fff4e32:	e7fb      	b.n	2fff4e2c <stm32mp1_clk_get_parent+0x64>
2fff4e34:	2fffb719 	.word	0x2fffb719
2fff4e38:	2fffb766 	.word	0x2fffb766
2fff4e3c:	2fffb958 	.word	0x2fffb958

2fff4e40 <__stm32mp1_clk_enable>:
2fff4e40:	b570      	push	{r4, r5, r6, lr}
2fff4e42:	4605      	mov	r5, r0
2fff4e44:	460e      	mov	r6, r1
2fff4e46:	f7ff fd9d 	bl	2fff4984 <clock_is_always_on>
2fff4e4a:	bb70      	cbnz	r0, 2fff4eaa <__stm32mp1_clk_enable+0x6a>
2fff4e4c:	4628      	mov	r0, r5
2fff4e4e:	f7ff ffa1 	bl	2fff4d94 <stm32mp1_clk_get_gated_id>
2fff4e52:	1e04      	subs	r4, r0, #0
2fff4e54:	da07      	bge.n	2fff4e66 <__stm32mp1_clk_enable+0x26>
2fff4e56:	4815      	ldr	r0, [pc, #84]	; (2fff4eac <__stm32mp1_clk_enable+0x6c>)
2fff4e58:	4629      	mov	r1, r5
2fff4e5a:	f7fd fd3f 	bl	2fff28dc <tf_log>
2fff4e5e:	f7fd fde1 	bl	2fff2a24 <console_flush>
2fff4e62:	f003 edf4 	blx	2fff8a4c <do_panic>
2fff4e66:	4d12      	ldr	r5, [pc, #72]	; (2fff4eb0 <__stm32mp1_clk_enable+0x70>)
2fff4e68:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
2fff4e6c:	b926      	cbnz	r6, 2fff4e78 <__stm32mp1_clk_enable+0x38>
2fff4e6e:	4628      	mov	r0, r5
2fff4e70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff4e74:	f7ff bf6a 	b.w	2fff4d4c <__clk_enable>
2fff4e78:	796b      	ldrb	r3, [r5, #5]
2fff4e7a:	2b00      	cmp	r3, #0
2fff4e7c:	d0f7      	beq.n	2fff4e6e <__stm32mp1_clk_enable+0x2e>
2fff4e7e:	4e0d      	ldr	r6, [pc, #52]	; (2fff4eb4 <__stm32mp1_clk_enable+0x74>)
2fff4e80:	480d      	ldr	r0, [pc, #52]	; (2fff4eb8 <__stm32mp1_clk_enable+0x78>)
2fff4e82:	f7ff ff0d 	bl	2fff4ca0 <stm32mp1_clk_lock>
2fff4e86:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
2fff4e8a:	b913      	cbnz	r3, 2fff4e92 <__stm32mp1_clk_enable+0x52>
2fff4e8c:	4628      	mov	r0, r5
2fff4e8e:	f7ff ff5d 	bl	2fff4d4c <__clk_enable>
2fff4e92:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
2fff4e96:	3301      	adds	r3, #1
2fff4e98:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
2fff4e9c:	3301      	adds	r3, #1
2fff4e9e:	d0de      	beq.n	2fff4e5e <__stm32mp1_clk_enable+0x1e>
2fff4ea0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff4ea4:	4804      	ldr	r0, [pc, #16]	; (2fff4eb8 <__stm32mp1_clk_enable+0x78>)
2fff4ea6:	f7ff bf06 	b.w	2fff4cb6 <stm32mp1_clk_unlock>
2fff4eaa:	bd70      	pop	{r4, r5, r6, pc}
2fff4eac:	2fffb580 	.word	0x2fffb580
2fff4eb0:	2fffb766 	.word	0x2fffb766
2fff4eb4:	2fffe988 	.word	0x2fffe988
2fff4eb8:	2fffea9c 	.word	0x2fffea9c

2fff4ebc <__stm32mp1_clk_disable>:
2fff4ebc:	b570      	push	{r4, r5, r6, lr}
2fff4ebe:	4605      	mov	r5, r0
2fff4ec0:	460e      	mov	r6, r1
2fff4ec2:	f7ff fd5f 	bl	2fff4984 <clock_is_always_on>
2fff4ec6:	bb58      	cbnz	r0, 2fff4f20 <__stm32mp1_clk_disable+0x64>
2fff4ec8:	4628      	mov	r0, r5
2fff4eca:	f7ff ff63 	bl	2fff4d94 <stm32mp1_clk_get_gated_id>
2fff4ece:	1e04      	subs	r4, r0, #0
2fff4ed0:	da07      	bge.n	2fff4ee2 <__stm32mp1_clk_disable+0x26>
2fff4ed2:	4814      	ldr	r0, [pc, #80]	; (2fff4f24 <__stm32mp1_clk_disable+0x68>)
2fff4ed4:	4629      	mov	r1, r5
2fff4ed6:	f7fd fd01 	bl	2fff28dc <tf_log>
2fff4eda:	f7fd fda3 	bl	2fff2a24 <console_flush>
2fff4ede:	f003 edb6 	blx	2fff8a4c <do_panic>
2fff4ee2:	4d11      	ldr	r5, [pc, #68]	; (2fff4f28 <__stm32mp1_clk_disable+0x6c>)
2fff4ee4:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
2fff4ee8:	b926      	cbnz	r6, 2fff4ef4 <__stm32mp1_clk_disable+0x38>
2fff4eea:	4628      	mov	r0, r5
2fff4eec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff4ef0:	f7ff bf3d 	b.w	2fff4d6e <__clk_disable>
2fff4ef4:	796b      	ldrb	r3, [r5, #5]
2fff4ef6:	b19b      	cbz	r3, 2fff4f20 <__stm32mp1_clk_disable+0x64>
2fff4ef8:	480c      	ldr	r0, [pc, #48]	; (2fff4f2c <__stm32mp1_clk_disable+0x70>)
2fff4efa:	f7ff fed1 	bl	2fff4ca0 <stm32mp1_clk_lock>
2fff4efe:	4a0c      	ldr	r2, [pc, #48]	; (2fff4f30 <__stm32mp1_clk_disable+0x74>)
2fff4f00:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
2fff4f04:	2b00      	cmp	r3, #0
2fff4f06:	d0e8      	beq.n	2fff4eda <__stm32mp1_clk_disable+0x1e>
2fff4f08:	3b01      	subs	r3, #1
2fff4f0a:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
2fff4f0e:	b913      	cbnz	r3, 2fff4f16 <__stm32mp1_clk_disable+0x5a>
2fff4f10:	4628      	mov	r0, r5
2fff4f12:	f7ff ff2c 	bl	2fff4d6e <__clk_disable>
2fff4f16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff4f1a:	4804      	ldr	r0, [pc, #16]	; (2fff4f2c <__stm32mp1_clk_disable+0x70>)
2fff4f1c:	f7ff becb 	b.w	2fff4cb6 <stm32mp1_clk_unlock>
2fff4f20:	bd70      	pop	{r4, r5, r6, pc}
2fff4f22:	bf00      	nop
2fff4f24:	2fffb59c 	.word	0x2fffb59c
2fff4f28:	2fffb766 	.word	0x2fffb766
2fff4f2c:	2fffea9c 	.word	0x2fffea9c
2fff4f30:	2fffe988 	.word	0x2fffe988

2fff4f34 <stm32mp1_set_clkdiv>:
2fff4f34:	680a      	ldr	r2, [r1, #0]
2fff4f36:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff4f3a:	f000 033f 	and.w	r3, r0, #63	; 0x3f
2fff4f3e:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
2fff4f42:	4605      	mov	r5, r0
2fff4f44:	4313      	orrs	r3, r2
2fff4f46:	460c      	mov	r4, r1
2fff4f48:	600b      	str	r3, [r1, #0]
2fff4f4a:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff4f4e:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff4f52:	4910      	ldr	r1, [pc, #64]	; (2fff4f94 <stm32mp1_set_clkdiv+0x60>)
2fff4f54:	2300      	movs	r3, #0
2fff4f56:	4a10      	ldr	r2, [pc, #64]	; (2fff4f98 <stm32mp1_set_clkdiv+0x64>)
2fff4f58:	fba0 0101 	umull	r0, r1, r0, r1
2fff4f5c:	f003 ef14 	blx	2fff8d88 <__aeabi_uldivmod>
2fff4f60:	eb10 0806 	adds.w	r8, r0, r6
2fff4f64:	eb41 0907 	adc.w	r9, r1, r7
2fff4f68:	6823      	ldr	r3, [r4, #0]
2fff4f6a:	2b00      	cmp	r3, #0
2fff4f6c:	da01      	bge.n	2fff4f72 <stm32mp1_set_clkdiv+0x3e>
2fff4f6e:	2000      	movs	r0, #0
2fff4f70:	e00d      	b.n	2fff4f8e <stm32mp1_set_clkdiv+0x5a>
2fff4f72:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff4f76:	4599      	cmp	r9, r3
2fff4f78:	bf08      	it	eq
2fff4f7a:	4590      	cmpeq	r8, r2
2fff4f7c:	d2f4      	bcs.n	2fff4f68 <stm32mp1_set_clkdiv+0x34>
2fff4f7e:	4807      	ldr	r0, [pc, #28]	; (2fff4f9c <stm32mp1_set_clkdiv+0x68>)
2fff4f80:	4622      	mov	r2, r4
2fff4f82:	6823      	ldr	r3, [r4, #0]
2fff4f84:	4629      	mov	r1, r5
2fff4f86:	f7fd fca9 	bl	2fff28dc <tf_log>
2fff4f8a:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff4f8e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff4f92:	bf00      	nop
2fff4f94:	00030d40 	.word	0x00030d40
2fff4f98:	000f4240 	.word	0x000f4240
2fff4f9c:	2fffb5b9 	.word	0x2fffb5b9

2fff4fa0 <stm32mp1_set_clksrc>:
2fff4fa0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff4fa4:	4605      	mov	r5, r0
2fff4fa6:	f7fd fe5f 	bl	2fff2c68 <stm32mp_rcc_base>
2fff4faa:	ea4f 1a15 	mov.w	sl, r5, lsr #4
2fff4fae:	f005 0307 	and.w	r3, r5, #7
2fff4fb2:	eb00 1b15 	add.w	fp, r0, r5, lsr #4
2fff4fb6:	4604      	mov	r4, r0
2fff4fb8:	f85a 2000 	ldr.w	r2, [sl, r0]
2fff4fbc:	f022 0207 	bic.w	r2, r2, #7
2fff4fc0:	4313      	orrs	r3, r2
2fff4fc2:	f84a 3000 	str.w	r3, [sl, r0]
2fff4fc6:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff4fca:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff4fce:	4911      	ldr	r1, [pc, #68]	; (2fff5014 <stm32mp1_set_clksrc+0x74>)
2fff4fd0:	2300      	movs	r3, #0
2fff4fd2:	4a11      	ldr	r2, [pc, #68]	; (2fff5018 <stm32mp1_set_clksrc+0x78>)
2fff4fd4:	fba0 0101 	umull	r0, r1, r0, r1
2fff4fd8:	f003 eed6 	blx	2fff8d88 <__aeabi_uldivmod>
2fff4fdc:	eb10 0806 	adds.w	r8, r0, r6
2fff4fe0:	eb41 0907 	adc.w	r9, r1, r7
2fff4fe4:	f8db 3000 	ldr.w	r3, [fp]
2fff4fe8:	2b00      	cmp	r3, #0
2fff4fea:	da01      	bge.n	2fff4ff0 <stm32mp1_set_clksrc+0x50>
2fff4fec:	2000      	movs	r0, #0
2fff4fee:	e00e      	b.n	2fff500e <stm32mp1_set_clksrc+0x6e>
2fff4ff0:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff4ff4:	4599      	cmp	r9, r3
2fff4ff6:	bf08      	it	eq
2fff4ff8:	4590      	cmpeq	r8, r2
2fff4ffa:	d2f3      	bcs.n	2fff4fe4 <stm32mp1_set_clksrc+0x44>
2fff4ffc:	4807      	ldr	r0, [pc, #28]	; (2fff501c <stm32mp1_set_clksrc+0x7c>)
2fff4ffe:	465a      	mov	r2, fp
2fff5000:	f85a 3004 	ldr.w	r3, [sl, r4]
2fff5004:	4629      	mov	r1, r5
2fff5006:	f7fd fc69 	bl	2fff28dc <tf_log>
2fff500a:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff500e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff5012:	bf00      	nop
2fff5014:	00030d40 	.word	0x00030d40
2fff5018:	000f4240 	.word	0x000f4240
2fff501c:	2fffb5e0 	.word	0x2fffb5e0

2fff5020 <stm32mp1_pll_output>:
2fff5020:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff5024:	4606      	mov	r6, r0
2fff5026:	460f      	mov	r7, r1
2fff5028:	f7fd fe1e 	bl	2fff2c68 <stm32mp_rcc_base>
2fff502c:	4b1a      	ldr	r3, [pc, #104]	; (2fff5098 <stm32mp1_pll_output+0x78>)
2fff502e:	4604      	mov	r4, r0
2fff5030:	eb03 1346 	add.w	r3, r3, r6, lsl #5
2fff5034:	899d      	ldrh	r5, [r3, #12]
2fff5036:	eb05 0a00 	add.w	sl, r5, r0
2fff503a:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff503e:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff5042:	4916      	ldr	r1, [pc, #88]	; (2fff509c <stm32mp1_pll_output+0x7c>)
2fff5044:	2300      	movs	r3, #0
2fff5046:	4a16      	ldr	r2, [pc, #88]	; (2fff50a0 <stm32mp1_pll_output+0x80>)
2fff5048:	fba0 0101 	umull	r0, r1, r0, r1
2fff504c:	f003 ee9c 	blx	2fff8d88 <__aeabi_uldivmod>
2fff5050:	eb10 0308 	adds.w	r3, r0, r8
2fff5054:	9300      	str	r3, [sp, #0]
2fff5056:	eb41 0309 	adc.w	r3, r1, r9
2fff505a:	9301      	str	r3, [sp, #4]
2fff505c:	f8da 3000 	ldr.w	r3, [sl]
2fff5060:	079b      	lsls	r3, r3, #30
2fff5062:	d505      	bpl.n	2fff5070 <stm32mp1_pll_output+0x50>
2fff5064:	5929      	ldr	r1, [r5, r4]
2fff5066:	2000      	movs	r0, #0
2fff5068:	ea41 1707 	orr.w	r7, r1, r7, lsl #4
2fff506c:	512f      	str	r7, [r5, r4]
2fff506e:	e00f      	b.n	2fff5090 <stm32mp1_pll_output+0x70>
2fff5070:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff5074:	e9dd 0100 	ldrd	r0, r1, [sp]
2fff5078:	4299      	cmp	r1, r3
2fff507a:	bf08      	it	eq
2fff507c:	4290      	cmpeq	r0, r2
2fff507e:	d2ed      	bcs.n	2fff505c <stm32mp1_pll_output+0x3c>
2fff5080:	4808      	ldr	r0, [pc, #32]	; (2fff50a4 <stm32mp1_pll_output+0x84>)
2fff5082:	4652      	mov	r2, sl
2fff5084:	592b      	ldr	r3, [r5, r4]
2fff5086:	4631      	mov	r1, r6
2fff5088:	f7fd fc28 	bl	2fff28dc <tf_log>
2fff508c:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff5090:	b002      	add	sp, #8
2fff5092:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff5096:	bf00      	nop
2fff5098:	2fffb8d8 	.word	0x2fffb8d8
2fff509c:	00030d40 	.word	0x00030d40
2fff50a0:	000f4240 	.word	0x000f4240
2fff50a4:	2fffb607 	.word	0x2fffb607

2fff50a8 <stm32mp1_pll_config_output>:
2fff50a8:	b538      	push	{r3, r4, r5, lr}
2fff50aa:	460c      	mov	r4, r1
2fff50ac:	4605      	mov	r5, r0
2fff50ae:	f7fd fddb 	bl	2fff2c68 <stm32mp_rcc_base>
2fff50b2:	68a3      	ldr	r3, [r4, #8]
2fff50b4:	6922      	ldr	r2, [r4, #16]
2fff50b6:	f003 017f 	and.w	r1, r3, #127	; 0x7f
2fff50ba:	68e3      	ldr	r3, [r4, #12]
2fff50bc:	0412      	lsls	r2, r2, #16
2fff50be:	021b      	lsls	r3, r3, #8
2fff50c0:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
2fff50c4:	f403 43fe 	and.w	r3, r3, #32512	; 0x7f00
2fff50c8:	4313      	orrs	r3, r2
2fff50ca:	4a03      	ldr	r2, [pc, #12]	; (2fff50d8 <stm32mp1_pll_config_output+0x30>)
2fff50cc:	430b      	orrs	r3, r1
2fff50ce:	eb02 1545 	add.w	r5, r2, r5, lsl #5
2fff50d2:	892a      	ldrh	r2, [r5, #8]
2fff50d4:	5013      	str	r3, [r2, r0]
2fff50d6:	bd38      	pop	{r3, r4, r5, pc}
2fff50d8:	2fffb8d8 	.word	0x2fffb8d8

2fff50dc <stm32mp1_pll_config>:
2fff50dc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2fff50e0:	4680      	mov	r8, r0
2fff50e2:	4d11      	ldr	r5, [pc, #68]	; (2fff5128 <stm32mp1_pll_config+0x4c>)
2fff50e4:	4689      	mov	r9, r1
2fff50e6:	4616      	mov	r6, r2
2fff50e8:	f7fd fdbe 	bl	2fff2c68 <stm32mp_rcc_base>
2fff50ec:	eb05 1548 	add.w	r5, r5, r8, lsl #5
2fff50f0:	4604      	mov	r4, r0
2fff50f2:	aa01      	add	r2, sp, #4
2fff50f4:	4649      	mov	r1, r9
2fff50f6:	4628      	mov	r0, r5
2fff50f8:	f7ff fd7a 	bl	2fff4bf0 <stm32mp1_pll_compute_pllxcfgr1>
2fff50fc:	4607      	mov	r7, r0
2fff50fe:	b978      	cbnz	r0, 2fff5120 <stm32mp1_pll_config+0x44>
2fff5100:	9a01      	ldr	r2, [sp, #4]
2fff5102:	4649      	mov	r1, r9
2fff5104:	88eb      	ldrh	r3, [r5, #6]
2fff5106:	00f6      	lsls	r6, r6, #3
2fff5108:	511a      	str	r2, [r3, r4]
2fff510a:	896b      	ldrh	r3, [r5, #10]
2fff510c:	5118      	str	r0, [r3, r4]
2fff510e:	4640      	mov	r0, r8
2fff5110:	9601      	str	r6, [sp, #4]
2fff5112:	511e      	str	r6, [r3, r4]
2fff5114:	591a      	ldr	r2, [r3, r4]
2fff5116:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
2fff511a:	511a      	str	r2, [r3, r4]
2fff511c:	f7ff ffc4 	bl	2fff50a8 <stm32mp1_pll_config_output>
2fff5120:	4638      	mov	r0, r7
2fff5122:	b003      	add	sp, #12
2fff5124:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff5128:	2fffb8d8 	.word	0x2fffb8d8

2fff512c <stm32mp1_pll1_config_from_opp_khz>:
2fff512c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff5130:	4604      	mov	r4, r0
2fff5132:	4d51      	ldr	r5, [pc, #324]	; (2fff5278 <stm32mp1_pll1_config_from_opp_khz+0x14c>)
2fff5134:	686b      	ldr	r3, [r5, #4]
2fff5136:	4298      	cmp	r0, r3
2fff5138:	d02e      	beq.n	2fff5198 <stm32mp1_pll1_config_from_opp_khz+0x6c>
2fff513a:	68ab      	ldr	r3, [r5, #8]
2fff513c:	4298      	cmp	r0, r3
2fff513e:	f040 8098 	bne.w	2fff5272 <stm32mp1_pll1_config_from_opp_khz+0x146>
2fff5142:	2601      	movs	r6, #1
2fff5144:	200a      	movs	r0, #10
2fff5146:	f7ff fc87 	bl	2fff4a58 <get_clock_rate>
2fff514a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff514e:	fbb0 f0f3 	udiv	r0, r0, r3
2fff5152:	fbb0 f3f4 	udiv	r3, r0, r4
2fff5156:	fb04 0413 	mls	r4, r4, r3, r0
2fff515a:	bb24      	cbnz	r4, 2fff51a6 <stm32mp1_pll1_config_from_opp_khz+0x7a>
2fff515c:	2b10      	cmp	r3, #16
2fff515e:	d822      	bhi.n	2fff51a6 <stm32mp1_pll1_config_from_opp_khz+0x7a>
2fff5160:	4946      	ldr	r1, [pc, #280]	; (2fff527c <stm32mp1_pll1_config_from_opp_khz+0x150>)
2fff5162:	2201      	movs	r2, #1
2fff5164:	409a      	lsls	r2, r3
2fff5166:	420a      	tst	r2, r1
2fff5168:	d01d      	beq.n	2fff51a6 <stm32mp1_pll1_config_from_opp_khz+0x7a>
2fff516a:	fa93 f4a3 	rbit	r4, r3
2fff516e:	fab4 f484 	clz	r4, r4
2fff5172:	b99b      	cbnz	r3, 2fff519c <stm32mp1_pll1_config_from_opp_khz+0x70>
2fff5174:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff5178:	f7fd fd76 	bl	2fff2c68 <stm32mp_rcc_base>
2fff517c:	f100 012c 	add.w	r1, r0, #44	; 0x2c
2fff5180:	4620      	mov	r0, r4
2fff5182:	f7ff fed7 	bl	2fff4f34 <stm32mp1_set_clkdiv>
2fff5186:	4604      	mov	r4, r0
2fff5188:	2800      	cmp	r0, #0
2fff518a:	d15f      	bne.n	2fff524c <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff518c:	f240 2003 	movw	r0, #515	; 0x203
2fff5190:	f7ff ff06 	bl	2fff4fa0 <stm32mp1_set_clksrc>
2fff5194:	4604      	mov	r4, r0
2fff5196:	e059      	b.n	2fff524c <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff5198:	2600      	movs	r6, #0
2fff519a:	e7d3      	b.n	2fff5144 <stm32mp1_pll1_config_from_opp_khz+0x18>
2fff519c:	2c00      	cmp	r4, #0
2fff519e:	d1eb      	bne.n	2fff5178 <stm32mp1_pll1_config_from_opp_khz+0x4c>
2fff51a0:	f240 2002 	movw	r0, #514	; 0x202
2fff51a4:	e7f4      	b.n	2fff5190 <stm32mp1_pll1_config_from_opp_khz+0x64>
2fff51a6:	f106 0710 	add.w	r7, r6, #16
2fff51aa:	f04f 0918 	mov.w	r9, #24
2fff51ae:	fb09 5906 	mla	r9, r9, r6, r5
2fff51b2:	eb05 0387 	add.w	r3, r5, r7, lsl #2
2fff51b6:	f109 0914 	add.w	r9, r9, #20
2fff51ba:	f8d3 a004 	ldr.w	sl, [r3, #4]
2fff51be:	f7fd fd53 	bl	2fff2c68 <stm32mp_rcc_base>
2fff51c2:	4680      	mov	r8, r0
2fff51c4:	aa01      	add	r2, sp, #4
2fff51c6:	482e      	ldr	r0, [pc, #184]	; (2fff5280 <stm32mp1_pll1_config_from_opp_khz+0x154>)
2fff51c8:	4649      	mov	r1, r9
2fff51ca:	f7ff fd11 	bl	2fff4bf0 <stm32mp1_pll_compute_pllxcfgr1>
2fff51ce:	4604      	mov	r4, r0
2fff51d0:	2800      	cmp	r0, #0
2fff51d2:	d13b      	bne.n	2fff524c <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff51d4:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
2fff51d8:	9b01      	ldr	r3, [sp, #4]
2fff51da:	429a      	cmp	r2, r3
2fff51dc:	d13a      	bne.n	2fff5254 <stm32mp1_pll1_config_from_opp_khz+0x128>
2fff51de:	f8d9 3008 	ldr.w	r3, [r9, #8]
2fff51e2:	f8d9 200c 	ldr.w	r2, [r9, #12]
2fff51e6:	ea4f 01ca 	mov.w	r1, sl, lsl #3
2fff51ea:	f003 007f 	and.w	r0, r3, #127	; 0x7f
2fff51ee:	0213      	lsls	r3, r2, #8
2fff51f0:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
2fff51f4:	f8d9 2010 	ldr.w	r2, [r9, #16]
2fff51f8:	f403 43fe 	and.w	r3, r3, #32512	; 0x7f00
2fff51fc:	0412      	lsls	r2, r2, #16
2fff51fe:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
2fff5202:	4313      	orrs	r3, r2
2fff5204:	4303      	orrs	r3, r0
2fff5206:	9301      	str	r3, [sp, #4]
2fff5208:	f8d8 208c 	ldr.w	r2, [r8, #140]	; 0x8c
2fff520c:	4291      	cmp	r1, r2
2fff520e:	d103      	bne.n	2fff5218 <stm32mp1_pll1_config_from_opp_khz+0xec>
2fff5210:	f8d8 2088 	ldr.w	r2, [r8, #136]	; 0x88
2fff5214:	429a      	cmp	r2, r3
2fff5216:	d019      	beq.n	2fff524c <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff5218:	f04f 0800 	mov.w	r8, #0
2fff521c:	eb05 0787 	add.w	r7, r5, r7, lsl #2
2fff5220:	4649      	mov	r1, r9
2fff5222:	2000      	movs	r0, #0
2fff5224:	687a      	ldr	r2, [r7, #4]
2fff5226:	f7ff ff59 	bl	2fff50dc <stm32mp1_pll_config>
2fff522a:	4604      	mov	r4, r0
2fff522c:	b970      	cbnz	r0, 2fff524c <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff522e:	f1b8 0f00 	cmp.w	r8, #0
2fff5232:	d00b      	beq.n	2fff524c <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff5234:	f7ff fd22 	bl	2fff4c7c <stm32mp1_pll_start>
2fff5238:	2318      	movs	r3, #24
2fff523a:	4620      	mov	r0, r4
2fff523c:	fb03 5506 	mla	r5, r3, r6, r5
2fff5240:	6aa9      	ldr	r1, [r5, #40]	; 0x28
2fff5242:	f7ff feed 	bl	2fff5020 <stm32mp1_pll_output>
2fff5246:	4604      	mov	r4, r0
2fff5248:	2800      	cmp	r0, #0
2fff524a:	d0a9      	beq.n	2fff51a0 <stm32mp1_pll1_config_from_opp_khz+0x74>
2fff524c:	4620      	mov	r0, r4
2fff524e:	b002      	add	sp, #8
2fff5250:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff5254:	f44f 7000 	mov.w	r0, #512	; 0x200
2fff5258:	f7ff fea2 	bl	2fff4fa0 <stm32mp1_set_clksrc>
2fff525c:	4604      	mov	r4, r0
2fff525e:	2800      	cmp	r0, #0
2fff5260:	d1f4      	bne.n	2fff524c <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff5262:	f7ff fd33 	bl	2fff4ccc <stm32mp1_pll_stop>
2fff5266:	4604      	mov	r4, r0
2fff5268:	2800      	cmp	r0, #0
2fff526a:	d1ef      	bne.n	2fff524c <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff526c:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2fff5270:	e7d4      	b.n	2fff521c <stm32mp1_pll1_config_from_opp_khz+0xf0>
2fff5272:	f06f 0405 	mvn.w	r4, #5
2fff5276:	e7e9      	b.n	2fff524c <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff5278:	2fffea48 	.word	0x2fffea48
2fff527c:	00010116 	.word	0x00010116
2fff5280:	2fffb8d8 	.word	0x2fffb8d8

2fff5284 <stm32mp1_rcc_is_secure>:
2fff5284:	b508      	push	{r3, lr}
2fff5286:	f7fd fcef 	bl	2fff2c68 <stm32mp_rcc_base>
2fff528a:	6800      	ldr	r0, [r0, #0]
2fff528c:	f000 0001 	and.w	r0, r0, #1
2fff5290:	bd08      	pop	{r3, pc}

2fff5292 <stm32mp1_rcc_is_mckprot>:
2fff5292:	b508      	push	{r3, lr}
2fff5294:	f7fd fce8 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5298:	6800      	ldr	r0, [r0, #0]
2fff529a:	f000 0003 	and.w	r0, r0, #3
2fff529e:	1ec3      	subs	r3, r0, #3
2fff52a0:	4258      	negs	r0, r3
2fff52a2:	4158      	adcs	r0, r3
2fff52a4:	bd08      	pop	{r3, pc}
	...

2fff52a8 <stm32mp1_clk_rcc_regs_lock>:
2fff52a8:	4801      	ldr	r0, [pc, #4]	; (2fff52b0 <stm32mp1_clk_rcc_regs_lock+0x8>)
2fff52aa:	f7ff bcf9 	b.w	2fff4ca0 <stm32mp1_clk_lock>
2fff52ae:	bf00      	nop
2fff52b0:	2fffeaa0 	.word	0x2fffeaa0

2fff52b4 <stm32mp1_clk_rcc_regs_unlock>:
2fff52b4:	4801      	ldr	r0, [pc, #4]	; (2fff52bc <stm32mp1_clk_rcc_regs_unlock+0x8>)
2fff52b6:	f7ff bcfe 	b.w	2fff4cb6 <stm32mp1_clk_unlock>
2fff52ba:	bf00      	nop
2fff52bc:	2fffeaa0 	.word	0x2fffeaa0

2fff52c0 <stm32mp_clk_enable>:
2fff52c0:	2101      	movs	r1, #1
2fff52c2:	f7ff bdbd 	b.w	2fff4e40 <__stm32mp1_clk_enable>

2fff52c6 <stm32mp_clk_disable>:
2fff52c6:	2101      	movs	r1, #1
2fff52c8:	f7ff bdf8 	b.w	2fff4ebc <__stm32mp1_clk_disable>

2fff52cc <stm32mp1_clk_force_enable>:
2fff52cc:	2100      	movs	r1, #0
2fff52ce:	f7ff bdb7 	b.w	2fff4e40 <__stm32mp1_clk_enable>

2fff52d2 <stm32mp1_clk_force_disable>:
2fff52d2:	2100      	movs	r1, #0
2fff52d4:	f7ff bdf2 	b.w	2fff4ebc <__stm32mp1_clk_disable>

2fff52d8 <stm32mp_clk_is_enabled>:
2fff52d8:	b510      	push	{r4, lr}
2fff52da:	4602      	mov	r2, r0
2fff52dc:	f7ff fb52 	bl	2fff4984 <clock_is_always_on>
2fff52e0:	b9b8      	cbnz	r0, 2fff5312 <stm32mp_clk_is_enabled+0x3a>
2fff52e2:	4610      	mov	r0, r2
2fff52e4:	f7ff fd56 	bl	2fff4d94 <stm32mp1_clk_get_gated_id>
2fff52e8:	1e04      	subs	r4, r0, #0
2fff52ea:	da03      	bge.n	2fff52f4 <stm32mp_clk_is_enabled+0x1c>
2fff52ec:	f7fd fb9a 	bl	2fff2a24 <console_flush>
2fff52f0:	f003 ebac 	blx	2fff8a4c <do_panic>
2fff52f4:	f7fd fcb8 	bl	2fff2c68 <stm32mp_rcc_base>
2fff52f8:	4b06      	ldr	r3, [pc, #24]	; (2fff5314 <stm32mp_clk_is_enabled+0x3c>)
2fff52fa:	f833 2034 	ldrh.w	r2, [r3, r4, lsl #3]
2fff52fe:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
2fff5302:	2301      	movs	r3, #1
2fff5304:	5812      	ldr	r2, [r2, r0]
2fff5306:	78a1      	ldrb	r1, [r4, #2]
2fff5308:	408b      	lsls	r3, r1
2fff530a:	4213      	tst	r3, r2
2fff530c:	bf14      	ite	ne
2fff530e:	2001      	movne	r0, #1
2fff5310:	2000      	moveq	r0, #0
2fff5312:	bd10      	pop	{r4, pc}
2fff5314:	2fffb766 	.word	0x2fffb766

2fff5318 <stm32mp_clk_get_rate>:
2fff5318:	b508      	push	{r3, lr}
2fff531a:	f7ff fd55 	bl	2fff4dc8 <stm32mp1_clk_get_parent>
2fff531e:	2800      	cmp	r0, #0
2fff5320:	db03      	blt.n	2fff532a <stm32mp_clk_get_rate+0x12>
2fff5322:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff5326:	f7ff bb97 	b.w	2fff4a58 <get_clock_rate>
2fff532a:	2000      	movs	r0, #0
2fff532c:	bd08      	pop	{r3, pc}
	...

2fff5330 <clk_get_pll1_settings.part.0>:
2fff5330:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff5334:	4615      	mov	r5, r2
2fff5336:	4a82      	ldr	r2, [pc, #520]	; (2fff5540 <clk_get_pll1_settings.part.0+0x210>)
2fff5338:	b093      	sub	sp, #76	; 0x4c
2fff533a:	460f      	mov	r7, r1
2fff533c:	930c      	str	r3, [sp, #48]	; 0x30
2fff533e:	4616      	mov	r6, r2
2fff5340:	6853      	ldr	r3, [r2, #4]
2fff5342:	4299      	cmp	r1, r3
2fff5344:	f000 80df 	beq.w	2fff5506 <clk_get_pll1_settings.part.0+0x1d6>
2fff5348:	6893      	ldr	r3, [r2, #8]
2fff534a:	4299      	cmp	r1, r3
2fff534c:	f000 80f1 	beq.w	2fff5532 <clk_get_pll1_settings.part.0+0x202>
2fff5350:	6813      	ldr	r3, [r2, #0]
2fff5352:	2b00      	cmp	r3, #0
2fff5354:	f040 80d4 	bne.w	2fff5500 <clk_get_pll1_settings.part.0+0x1d0>
2fff5358:	f5b0 7f20 	cmp.w	r0, #640	; 0x280
2fff535c:	d008      	beq.n	2fff5370 <clk_get_pll1_settings.part.0+0x40>
2fff535e:	f240 2381 	movw	r3, #641	; 0x281
2fff5362:	4298      	cmp	r0, r3
2fff5364:	f000 8097 	beq.w	2fff5496 <clk_get_pll1_settings.part.0+0x166>
2fff5368:	f7fd fb5c 	bl	2fff2a24 <console_flush>
2fff536c:	f003 eb6e 	blx	2fff8a4c <do_panic>
2fff5370:	2004      	movs	r0, #4
2fff5372:	f7ff ffd1 	bl	2fff5318 <stm32mp_clk_get_rate>
2fff5376:	9004      	str	r0, [sp, #16]
2fff5378:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff537c:	fb01 f307 	mul.w	r3, r1, r7
2fff5380:	2200      	movs	r2, #0
2fff5382:	9302      	str	r3, [sp, #8]
2fff5384:	4619      	mov	r1, r3
2fff5386:	2300      	movs	r3, #0
2fff5388:	60eb      	str	r3, [r5, #12]
2fff538a:	612b      	str	r3, [r5, #16]
2fff538c:	9b02      	ldr	r3, [sp, #8]
2fff538e:	e9cd 1208 	strd	r1, r2, [sp, #32]
2fff5392:	ea4f 6a93 	mov.w	sl, r3, lsr #26
2fff5396:	2201      	movs	r2, #1
2fff5398:	019b      	lsls	r3, r3, #6
2fff539a:	9307      	str	r3, [sp, #28]
2fff539c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff53a0:	9305      	str	r3, [sp, #20]
2fff53a2:	233f      	movs	r3, #63	; 0x3f
2fff53a4:	616a      	str	r2, [r5, #20]
2fff53a6:	9303      	str	r3, [sp, #12]
2fff53a8:	9b03      	ldr	r3, [sp, #12]
2fff53aa:	4a66      	ldr	r2, [pc, #408]	; (2fff5544 <clk_get_pll1_settings.part.0+0x214>)
2fff53ac:	f103 0901 	add.w	r9, r3, #1
2fff53b0:	9b04      	ldr	r3, [sp, #16]
2fff53b2:	fbb3 f9f9 	udiv	r9, r3, r9
2fff53b6:	f5a9 03f4 	sub.w	r3, r9, #7995392	; 0x7a0000
2fff53ba:	f5a3 5390 	sub.w	r3, r3, #4608	; 0x1200
2fff53be:	4293      	cmp	r3, r2
2fff53c0:	f200 8089 	bhi.w	2fff54d6 <clk_get_pll1_settings.part.0+0x1a6>
2fff53c4:	f8dd 801c 	ldr.w	r8, [sp, #28]
2fff53c8:	2301      	movs	r3, #1
2fff53ca:	f8cd a018 	str.w	sl, [sp, #24]
2fff53ce:	2400      	movs	r4, #0
2fff53d0:	e9cd 3400 	strd	r3, r4, [sp]
2fff53d4:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
2fff53d8:	9a04      	ldr	r2, [sp, #16]
2fff53da:	2300      	movs	r3, #0
2fff53dc:	9906      	ldr	r1, [sp, #24]
2fff53de:	4640      	mov	r0, r8
2fff53e0:	f003 ecd2 	blx	2fff8d88 <__aeabi_uldivmod>
2fff53e4:	f1a0 0319 	sub.w	r3, r0, #25
2fff53e8:	4607      	mov	r7, r0
2fff53ea:	2b4b      	cmp	r3, #75	; 0x4b
2fff53ec:	d85f      	bhi.n	2fff54ae <clk_get_pll1_settings.part.0+0x17e>
2fff53ee:	9a04      	ldr	r2, [sp, #16]
2fff53f0:	1e43      	subs	r3, r0, #1
2fff53f2:	930d      	str	r3, [sp, #52]	; 0x34
2fff53f4:	9b06      	ldr	r3, [sp, #24]
2fff53f6:	ea4f 3048 	mov.w	r0, r8, lsl #13
2fff53fa:	0359      	lsls	r1, r3, #13
2fff53fc:	2300      	movs	r3, #0
2fff53fe:	ea41 41d8 	orr.w	r1, r1, r8, lsr #19
2fff5402:	f003 ecc2 	blx	2fff8d88 <__aeabi_uldivmod>
2fff5406:	eba0 3447 	sub.w	r4, r0, r7, lsl #13
2fff540a:	fb09 f707 	mul.w	r7, r9, r7
2fff540e:	17e3      	asrs	r3, r4, #31
2fff5410:	9710      	str	r7, [sp, #64]	; 0x40
2fff5412:	fba4 6709 	umull	r6, r7, r4, r9
2fff5416:	fb09 7703 	mla	r7, r9, r3, r7
2fff541a:	1ca3      	adds	r3, r4, #2
2fff541c:	930e      	str	r3, [sp, #56]	; 0x38
2fff541e:	9b00      	ldr	r3, [sp, #0]
2fff5420:	3b01      	subs	r3, #1
2fff5422:	930f      	str	r3, [sp, #60]	; 0x3c
2fff5424:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
2fff5428:	dc41      	bgt.n	2fff54ae <clk_get_pll1_settings.part.0+0x17e>
2fff542a:	9b10      	ldr	r3, [sp, #64]	; 0x40
2fff542c:	0b70      	lsrs	r0, r6, #13
2fff542e:	ea40 40c7 	orr.w	r0, r0, r7, lsl #19
2fff5432:	18c0      	adds	r0, r0, r3
2fff5434:	4b44      	ldr	r3, [pc, #272]	; (2fff5548 <clk_get_pll1_settings.part.0+0x218>)
2fff5436:	ea4f 3157 	mov.w	r1, r7, lsr #13
2fff543a:	f141 0100 	adc.w	r1, r1, #0
2fff543e:	18c3      	adds	r3, r0, r3
2fff5440:	930a      	str	r3, [sp, #40]	; 0x28
2fff5442:	f141 33ff 	adc.w	r3, r1, #4294967295	; 0xffffffff
2fff5446:	930b      	str	r3, [sp, #44]	; 0x2c
2fff5448:	e9dd bc0a 	ldrd	fp, ip, [sp, #40]	; 0x28
2fff544c:	a33a      	add	r3, pc, #232	; (adr r3, 2fff5538 <clk_get_pll1_settings.part.0+0x208>)
2fff544e:	e9d3 2300 	ldrd	r2, r3, [r3]
2fff5452:	4563      	cmp	r3, ip
2fff5454:	bf08      	it	eq
2fff5456:	455a      	cmpeq	r2, fp
2fff5458:	d321      	bcc.n	2fff549e <clk_get_pll1_settings.part.0+0x16e>
2fff545a:	e9dd 2300 	ldrd	r2, r3, [sp]
2fff545e:	f003 ec94 	blx	2fff8d88 <__aeabi_uldivmod>
2fff5462:	4602      	mov	r2, r0
2fff5464:	460b      	mov	r3, r1
2fff5466:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
2fff546a:	4299      	cmp	r1, r3
2fff546c:	9902      	ldr	r1, [sp, #8]
2fff546e:	bf08      	it	eq
2fff5470:	4290      	cmpeq	r0, r2
2fff5472:	9b05      	ldr	r3, [sp, #20]
2fff5474:	bf34      	ite	cc
2fff5476:	1a50      	subcc	r0, r2, r1
2fff5478:	1a88      	subcs	r0, r1, r2
2fff547a:	4298      	cmp	r0, r3
2fff547c:	d20d      	bcs.n	2fff549a <clk_get_pll1_settings.part.0+0x16a>
2fff547e:	9b03      	ldr	r3, [sp, #12]
2fff5480:	602b      	str	r3, [r5, #0]
2fff5482:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2fff5484:	606b      	str	r3, [r5, #4]
2fff5486:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
2fff5488:	60ab      	str	r3, [r5, #8]
2fff548a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
2fff548c:	601c      	str	r4, [r3, #0]
2fff548e:	b928      	cbnz	r0, 2fff549c <clk_get_pll1_settings.part.0+0x16c>
2fff5490:	b013      	add	sp, #76	; 0x4c
2fff5492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff5496:	2000      	movs	r0, #0
2fff5498:	e76b      	b.n	2fff5372 <clk_get_pll1_settings.part.0+0x42>
2fff549a:	9805      	ldr	r0, [sp, #20]
2fff549c:	9005      	str	r0, [sp, #20]
2fff549e:	9b11      	ldr	r3, [sp, #68]	; 0x44
2fff54a0:	3401      	adds	r4, #1
2fff54a2:	18f6      	adds	r6, r6, r3
2fff54a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff54a6:	f147 0700 	adc.w	r7, r7, #0
2fff54aa:	42a3      	cmp	r3, r4
2fff54ac:	d1ba      	bne.n	2fff5424 <clk_get_pll1_settings.part.0+0xf4>
2fff54ae:	9b07      	ldr	r3, [sp, #28]
2fff54b0:	eb18 0803 	adds.w	r8, r8, r3
2fff54b4:	9b06      	ldr	r3, [sp, #24]
2fff54b6:	eb43 030a 	adc.w	r3, r3, sl
2fff54ba:	9306      	str	r3, [sp, #24]
2fff54bc:	9b00      	ldr	r3, [sp, #0]
2fff54be:	3301      	adds	r3, #1
2fff54c0:	9300      	str	r3, [sp, #0]
2fff54c2:	9b01      	ldr	r3, [sp, #4]
2fff54c4:	f143 0300 	adc.w	r3, r3, #0
2fff54c8:	9301      	str	r3, [sp, #4]
2fff54ca:	e9dd 3400 	ldrd	r3, r4, [sp]
2fff54ce:	2c00      	cmp	r4, #0
2fff54d0:	bf08      	it	eq
2fff54d2:	2b81      	cmpeq	r3, #129	; 0x81
2fff54d4:	d180      	bne.n	2fff53d8 <clk_get_pll1_settings.part.0+0xa8>
2fff54d6:	9b03      	ldr	r3, [sp, #12]
2fff54d8:	9a07      	ldr	r2, [sp, #28]
2fff54da:	3b01      	subs	r3, #1
2fff54dc:	9303      	str	r3, [sp, #12]
2fff54de:	9b08      	ldr	r3, [sp, #32]
2fff54e0:	1ad3      	subs	r3, r2, r3
2fff54e2:	9307      	str	r3, [sp, #28]
2fff54e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
2fff54e6:	eb6a 0a03 	sbc.w	sl, sl, r3
2fff54ea:	9b03      	ldr	r3, [sp, #12]
2fff54ec:	3301      	adds	r3, #1
2fff54ee:	f47f af5b 	bne.w	2fff53a8 <clk_get_pll1_settings.part.0+0x78>
2fff54f2:	9b05      	ldr	r3, [sp, #20]
2fff54f4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff54f8:	3301      	adds	r3, #1
2fff54fa:	bf18      	it	ne
2fff54fc:	2000      	movne	r0, #0
2fff54fe:	e7c7      	b.n	2fff5490 <clk_get_pll1_settings.part.0+0x160>
2fff5500:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff5504:	e7c4      	b.n	2fff5490 <clk_get_pll1_settings.part.0+0x160>
2fff5506:	2400      	movs	r4, #0
2fff5508:	2218      	movs	r2, #24
2fff550a:	fb02 f104 	mul.w	r1, r2, r4
2fff550e:	1873      	adds	r3, r6, r1
2fff5510:	6a9b      	ldr	r3, [r3, #40]	; 0x28
2fff5512:	2b00      	cmp	r3, #0
2fff5514:	f43f af20 	beq.w	2fff5358 <clk_get_pll1_settings.part.0+0x28>
2fff5518:	3410      	adds	r4, #16
2fff551a:	3114      	adds	r1, #20
2fff551c:	4431      	add	r1, r6
2fff551e:	4628      	mov	r0, r5
2fff5520:	eb06 0684 	add.w	r6, r6, r4, lsl #2
2fff5524:	f004 faf4 	bl	2fff9b10 <memcpy>
2fff5528:	9a0c      	ldr	r2, [sp, #48]	; 0x30
2fff552a:	2000      	movs	r0, #0
2fff552c:	6873      	ldr	r3, [r6, #4]
2fff552e:	6013      	str	r3, [r2, #0]
2fff5530:	e7ae      	b.n	2fff5490 <clk_get_pll1_settings.part.0+0x160>
2fff5532:	2401      	movs	r4, #1
2fff5534:	e7e8      	b.n	2fff5508 <clk_get_pll1_settings.part.0+0x1d8>
2fff5536:	bf00      	nop
2fff5538:	17d78400 	.word	0x17d78400
2fff553c:	00000000 	.word	0x00000000
2fff5540:	2fffea48 	.word	0x2fffea48
2fff5544:	007a1200 	.word	0x007a1200
2fff5548:	e8287c00 	.word	0xe8287c00

2fff554c <stm32mp_clk_timer_get_rate>:
2fff554c:	b538      	push	{r3, r4, r5, lr}
2fff554e:	4605      	mov	r5, r0
2fff5550:	f7fd fb8a 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5554:	4604      	mov	r4, r0
2fff5556:	4628      	mov	r0, r5
2fff5558:	f7ff fede 	bl	2fff5318 <stm32mp_clk_get_rate>
2fff555c:	2dcd      	cmp	r5, #205	; 0xcd
2fff555e:	bf97      	itett	ls
2fff5560:	f8d4 2834 	ldrls.w	r2, [r4, #2100]	; 0x834
2fff5564:	f8d4 2838 	ldrhi.w	r2, [r4, #2104]	; 0x838
2fff5568:	f8d4 3828 	ldrls.w	r3, [r4, #2088]	; 0x828
2fff556c:	f002 0207 	andls.w	r2, r2, #7
2fff5570:	bf84      	itt	hi
2fff5572:	f8d4 382c 	ldrhi.w	r3, [r4, #2092]	; 0x82c
2fff5576:	f002 0207 	andhi.w	r2, r2, #7
2fff557a:	f003 0301 	and.w	r3, r3, #1
2fff557e:	b112      	cbz	r2, 2fff5586 <stm32mp_clk_timer_get_rate+0x3a>
2fff5580:	fb03 0000 	mla	r0, r3, r0, r0
2fff5584:	0040      	lsls	r0, r0, #1
2fff5586:	bd38      	pop	{r3, r4, r5, pc}

2fff5588 <stm32mp1_rtc_get_read_twice>:
2fff5588:	b538      	push	{r3, r4, r5, lr}
2fff558a:	f7fd fb6d 	bl	2fff2c68 <stm32mp_rcc_base>
2fff558e:	4605      	mov	r5, r0
2fff5590:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
2fff5594:	f3c0 4001 	ubfx	r0, r0, #16, #2
2fff5598:	2802      	cmp	r0, #2
2fff559a:	d004      	beq.n	2fff55a6 <stm32mp1_rtc_get_read_twice+0x1e>
2fff559c:	2803      	cmp	r0, #3
2fff559e:	d014      	beq.n	2fff55ca <stm32mp1_rtc_get_read_twice+0x42>
2fff55a0:	2801      	cmp	r0, #1
2fff55a2:	d11c      	bne.n	2fff55de <stm32mp1_rtc_get_read_twice+0x56>
2fff55a4:	2003      	movs	r0, #3
2fff55a6:	f7ff feb7 	bl	2fff5318 <stm32mp_clk_get_rate>
2fff55aa:	4604      	mov	r4, r0
2fff55ac:	f8d5 5834 	ldr.w	r5, [r5, #2100]	; 0x834
2fff55b0:	20c4      	movs	r0, #196	; 0xc4
2fff55b2:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
2fff55b6:	f7ff feaf 	bl	2fff5318 <stm32mp_clk_get_rate>
2fff55ba:	f005 0507 	and.w	r5, r5, #7
2fff55be:	40e8      	lsrs	r0, r5
2fff55c0:	4284      	cmp	r4, r0
2fff55c2:	bf94      	ite	ls
2fff55c4:	2000      	movls	r0, #0
2fff55c6:	2001      	movhi	r0, #1
2fff55c8:	bd38      	pop	{r3, r4, r5, pc}
2fff55ca:	2000      	movs	r0, #0
2fff55cc:	f7ff fea4 	bl	2fff5318 <stm32mp_clk_get_rate>
2fff55d0:	6c6c      	ldr	r4, [r5, #68]	; 0x44
2fff55d2:	f004 043f 	and.w	r4, r4, #63	; 0x3f
2fff55d6:	3401      	adds	r4, #1
2fff55d8:	fbb0 f4f4 	udiv	r4, r0, r4
2fff55dc:	e7e6      	b.n	2fff55ac <stm32mp1_rtc_get_read_twice+0x24>
2fff55de:	f7fd fa21 	bl	2fff2a24 <console_flush>
2fff55e2:	f003 ea34 	blx	2fff8a4c <do_panic>
	...

2fff55e8 <stm32mp1_round_opp_khz>:
2fff55e8:	4a0a      	ldr	r2, [pc, #40]	; (2fff5614 <stm32mp1_round_opp_khz+0x2c>)
2fff55ea:	4b0b      	ldr	r3, [pc, #44]	; (2fff5618 <stm32mp1_round_opp_khz+0x30>)
2fff55ec:	6811      	ldr	r1, [r2, #0]
2fff55ee:	4299      	cmp	r1, r3
2fff55f0:	d10d      	bne.n	2fff560e <stm32mp1_round_opp_khz+0x26>
2fff55f2:	6853      	ldr	r3, [r2, #4]
2fff55f4:	6801      	ldr	r1, [r0, #0]
2fff55f6:	6892      	ldr	r2, [r2, #8]
2fff55f8:	428b      	cmp	r3, r1
2fff55fa:	bf88      	it	hi
2fff55fc:	2300      	movhi	r3, #0
2fff55fe:	4291      	cmp	r1, r2
2fff5600:	d302      	bcc.n	2fff5608 <stm32mp1_round_opp_khz+0x20>
2fff5602:	4293      	cmp	r3, r2
2fff5604:	bf38      	it	cc
2fff5606:	4613      	movcc	r3, r2
2fff5608:	6003      	str	r3, [r0, #0]
2fff560a:	2000      	movs	r0, #0
2fff560c:	4770      	bx	lr
2fff560e:	4b03      	ldr	r3, [pc, #12]	; (2fff561c <stm32mp1_round_opp_khz+0x34>)
2fff5610:	681b      	ldr	r3, [r3, #0]
2fff5612:	e7f9      	b.n	2fff5608 <stm32mp1_round_opp_khz+0x20>
2fff5614:	2fffea48 	.word	0x2fffea48
2fff5618:	504c4c31 	.word	0x504c4c31
2fff561c:	2fffe984 	.word	0x2fffe984

2fff5620 <stm32mp1_set_opp_khz>:
2fff5620:	b538      	push	{r3, r4, r5, lr}
2fff5622:	4604      	mov	r4, r0
2fff5624:	4d16      	ldr	r5, [pc, #88]	; (2fff5680 <stm32mp1_set_opp_khz+0x60>)
2fff5626:	f7fd fb1f 	bl	2fff2c68 <stm32mp_rcc_base>
2fff562a:	682b      	ldr	r3, [r5, #0]
2fff562c:	42a3      	cmp	r3, r4
2fff562e:	d01b      	beq.n	2fff5668 <stm32mp1_set_opp_khz+0x48>
2fff5630:	4b14      	ldr	r3, [pc, #80]	; (2fff5684 <stm32mp1_set_opp_khz+0x64>)
2fff5632:	681a      	ldr	r2, [r3, #0]
2fff5634:	4b14      	ldr	r3, [pc, #80]	; (2fff5688 <stm32mp1_set_opp_khz+0x68>)
2fff5636:	429a      	cmp	r2, r3
2fff5638:	d118      	bne.n	2fff566c <stm32mp1_set_opp_khz+0x4c>
2fff563a:	6a03      	ldr	r3, [r0, #32]
2fff563c:	f003 0307 	and.w	r3, r3, #7
2fff5640:	3b02      	subs	r3, #2
2fff5642:	2b01      	cmp	r3, #1
2fff5644:	d815      	bhi.n	2fff5672 <stm32mp1_set_opp_khz+0x52>
2fff5646:	4620      	mov	r0, r4
2fff5648:	f7ff fd70 	bl	2fff512c <stm32mp1_pll1_config_from_opp_khz>
2fff564c:	b150      	cbz	r0, 2fff5664 <stm32mp1_set_opp_khz+0x44>
2fff564e:	6828      	ldr	r0, [r5, #0]
2fff5650:	f7ff fd6c 	bl	2fff512c <stm32mp1_pll1_config_from_opp_khz>
2fff5654:	b180      	cbz	r0, 2fff5678 <stm32mp1_set_opp_khz+0x58>
2fff5656:	480d      	ldr	r0, [pc, #52]	; (2fff568c <stm32mp1_set_opp_khz+0x6c>)
2fff5658:	f7fd f940 	bl	2fff28dc <tf_log>
2fff565c:	f7fd f9e2 	bl	2fff2a24 <console_flush>
2fff5660:	f003 e9f4 	blx	2fff8a4c <do_panic>
2fff5664:	602c      	str	r4, [r5, #0]
2fff5666:	bd38      	pop	{r3, r4, r5, pc}
2fff5668:	2000      	movs	r0, #0
2fff566a:	e7fc      	b.n	2fff5666 <stm32mp1_set_opp_khz+0x46>
2fff566c:	f06f 000c 	mvn.w	r0, #12
2fff5670:	e7f9      	b.n	2fff5666 <stm32mp1_set_opp_khz+0x46>
2fff5672:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff5676:	e7f6      	b.n	2fff5666 <stm32mp1_set_opp_khz+0x46>
2fff5678:	f06f 0004 	mvn.w	r0, #4
2fff567c:	e7f3      	b.n	2fff5666 <stm32mp1_set_opp_khz+0x46>
2fff567e:	bf00      	nop
2fff5680:	2fffe984 	.word	0x2fffe984
2fff5684:	2fffea48 	.word	0x2fffea48
2fff5688:	504c4c31 	.word	0x504c4c31
2fff568c:	2fffb62a 	.word	0x2fffb62a

2fff5690 <stm32mp1_clk_compute_all_pll1_settings>:
2fff5690:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff5694:	2302      	movs	r3, #2
2fff5696:	4d47      	ldr	r5, [pc, #284]	; (2fff57b4 <stm32mp1_clk_compute_all_pll1_settings+0x124>)
2fff5698:	4607      	mov	r7, r0
2fff569a:	9301      	str	r3, [sp, #4]
2fff569c:	a801      	add	r0, sp, #4
2fff569e:	f105 020c 	add.w	r2, r5, #12
2fff56a2:	1d29      	adds	r1, r5, #4
2fff56a4:	f002 fdc2 	bl	2fff822c <dt_get_all_opp_freqvolt>
2fff56a8:	1c43      	adds	r3, r0, #1
2fff56aa:	4604      	mov	r4, r0
2fff56ac:	d003      	beq.n	2fff56b6 <stm32mp1_clk_compute_all_pll1_settings+0x26>
2fff56ae:	b120      	cbz	r0, 2fff56ba <stm32mp1_clk_compute_all_pll1_settings+0x2a>
2fff56b0:	4841      	ldr	r0, [pc, #260]	; (2fff57b8 <stm32mp1_clk_compute_all_pll1_settings+0x128>)
2fff56b2:	f7fd f913 	bl	2fff28dc <tf_log>
2fff56b6:	2000      	movs	r0, #0
2fff56b8:	e078      	b.n	2fff57ac <stm32mp1_clk_compute_all_pll1_settings+0x11c>
2fff56ba:	f7fd fad5 	bl	2fff2c68 <stm32mp_rcc_base>
2fff56be:	4606      	mov	r6, r0
2fff56c0:	20c2      	movs	r0, #194	; 0xc2
2fff56c2:	f7ff fe29 	bl	2fff5318 <stm32mp_clk_get_rate>
2fff56c6:	686b      	ldr	r3, [r5, #4]
2fff56c8:	f500 72fa 	add.w	r2, r0, #500	; 0x1f4
2fff56cc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
2fff56d0:	fbb2 f2f0 	udiv	r2, r2, r0
2fff56d4:	4293      	cmp	r3, r2
2fff56d6:	d044      	beq.n	2fff5762 <stm32mp1_clk_compute_all_pll1_settings+0xd2>
2fff56d8:	68ab      	ldr	r3, [r5, #8]
2fff56da:	4293      	cmp	r3, r2
2fff56dc:	d143      	bne.n	2fff5766 <stm32mp1_clk_compute_all_pll1_settings+0xd6>
2fff56de:	2301      	movs	r3, #1
2fff56e0:	1c9a      	adds	r2, r3, #2
2fff56e2:	eb05 0282 	add.w	r2, r5, r2, lsl #2
2fff56e6:	6852      	ldr	r2, [r2, #4]
2fff56e8:	4297      	cmp	r7, r2
2fff56ea:	d001      	beq.n	2fff56f0 <stm32mp1_clk_compute_all_pll1_settings+0x60>
2fff56ec:	2f00      	cmp	r7, #0
2fff56ee:	d13a      	bne.n	2fff5766 <stm32mp1_clk_compute_all_pll1_settings+0xd6>
2fff56f0:	f8d6 0084 	ldr.w	r0, [r6, #132]	; 0x84
2fff56f4:	2218      	movs	r2, #24
2fff56f6:	fb02 5103 	mla	r1, r2, r3, r5
2fff56fa:	f3c0 4005 	ubfx	r0, r0, #16, #6
2fff56fe:	461c      	mov	r4, r3
2fff5700:	6148      	str	r0, [r1, #20]
2fff5702:	f8d6 0084 	ldr.w	r0, [r6, #132]	; 0x84
2fff5706:	fb03 2202 	mla	r2, r3, r2, r2
2fff570a:	f3c0 0008 	ubfx	r0, r0, #0, #9
2fff570e:	6188      	str	r0, [r1, #24]
2fff5710:	f8d6 0088 	ldr.w	r0, [r6, #136]	; 0x88
2fff5714:	442a      	add	r2, r5
2fff5716:	f000 007f 	and.w	r0, r0, #127	; 0x7f
2fff571a:	6050      	str	r0, [r2, #4]
2fff571c:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
2fff5720:	f3c2 2206 	ubfx	r2, r2, #8, #7
2fff5724:	620a      	str	r2, [r1, #32]
2fff5726:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
2fff572a:	f3c2 4206 	ubfx	r2, r2, #16, #7
2fff572e:	624a      	str	r2, [r1, #36]	; 0x24
2fff5730:	f8d6 2080 	ldr.w	r2, [r6, #128]	; 0x80
2fff5734:	0912      	lsrs	r2, r2, #4
2fff5736:	628a      	str	r2, [r1, #40]	; 0x28
2fff5738:	f103 0210 	add.w	r2, r3, #16
2fff573c:	f8d6 108c 	ldr.w	r1, [r6, #140]	; 0x8c
2fff5740:	eb05 0282 	add.w	r2, r5, r2, lsl #2
2fff5744:	f3c1 01cc 	ubfx	r1, r1, #3, #13
2fff5748:	6051      	str	r1, [r2, #4]
2fff574a:	f7fd fa8d 	bl	2fff2c68 <stm32mp_rcc_base>
2fff574e:	6a83      	ldr	r3, [r0, #40]	; 0x28
2fff5750:	f013 0303 	ands.w	r3, r3, #3
2fff5754:	d00a      	beq.n	2fff576c <stm32mp1_clk_compute_all_pll1_settings+0xdc>
2fff5756:	2b01      	cmp	r3, #1
2fff5758:	d016      	beq.n	2fff5788 <stm32mp1_clk_compute_all_pll1_settings+0xf8>
2fff575a:	f7fd f963 	bl	2fff2a24 <console_flush>
2fff575e:	f003 e976 	blx	2fff8a4c <do_panic>
2fff5762:	4623      	mov	r3, r4
2fff5764:	e7bc      	b.n	2fff56e0 <stm32mp1_clk_compute_all_pll1_settings+0x50>
2fff5766:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff576a:	e7ee      	b.n	2fff574a <stm32mp1_clk_compute_all_pll1_settings+0xba>
2fff576c:	f44f 7820 	mov.w	r8, #640	; 0x280
2fff5770:	4f10      	ldr	r7, [pc, #64]	; (2fff57b4 <stm32mp1_clk_compute_all_pll1_settings+0x124>)
2fff5772:	2600      	movs	r6, #0
2fff5774:	f04f 0918 	mov.w	r9, #24
2fff5778:	f105 0a14 	add.w	sl, r5, #20
2fff577c:	9b01      	ldr	r3, [sp, #4]
2fff577e:	42b3      	cmp	r3, r6
2fff5780:	dc05      	bgt.n	2fff578e <stm32mp1_clk_compute_all_pll1_settings+0xfe>
2fff5782:	4b0e      	ldr	r3, [pc, #56]	; (2fff57bc <stm32mp1_clk_compute_all_pll1_settings+0x12c>)
2fff5784:	602b      	str	r3, [r5, #0]
2fff5786:	e796      	b.n	2fff56b6 <stm32mp1_clk_compute_all_pll1_settings+0x26>
2fff5788:	f240 2881 	movw	r8, #641	; 0x281
2fff578c:	e7f0      	b.n	2fff5770 <stm32mp1_clk_compute_all_pll1_settings+0xe0>
2fff578e:	42a6      	cmp	r6, r4
2fff5790:	d102      	bne.n	2fff5798 <stm32mp1_clk_compute_all_pll1_settings+0x108>
2fff5792:	3601      	adds	r6, #1
2fff5794:	3704      	adds	r7, #4
2fff5796:	e7f1      	b.n	2fff577c <stm32mp1_clk_compute_all_pll1_settings+0xec>
2fff5798:	6879      	ldr	r1, [r7, #4]
2fff579a:	f107 0344 	add.w	r3, r7, #68	; 0x44
2fff579e:	fb09 a206 	mla	r2, r9, r6, sl
2fff57a2:	4640      	mov	r0, r8
2fff57a4:	f7ff fdc4 	bl	2fff5330 <clk_get_pll1_settings.part.0>
2fff57a8:	2800      	cmp	r0, #0
2fff57aa:	d0f2      	beq.n	2fff5792 <stm32mp1_clk_compute_all_pll1_settings+0x102>
2fff57ac:	b002      	add	sp, #8
2fff57ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff57b2:	bf00      	nop
2fff57b4:	2fffea48 	.word	0x2fffea48
2fff57b8:	2fffb64e 	.word	0x2fffb64e
2fff57bc:	504c4c31 	.word	0x504c4c31

2fff57c0 <stm32mp1_clk_lp_save_opp_pll1_settings>:
2fff57c0:	294c      	cmp	r1, #76	; 0x4c
2fff57c2:	460a      	mov	r2, r1
2fff57c4:	b510      	push	{r4, lr}
2fff57c6:	d104      	bne.n	2fff57d2 <stm32mp1_clk_lp_save_opp_pll1_settings+0x12>
2fff57c8:	4906      	ldr	r1, [pc, #24]	; (2fff57e4 <stm32mp1_clk_lp_save_opp_pll1_settings+0x24>)
2fff57ca:	4b07      	ldr	r3, [pc, #28]	; (2fff57e8 <stm32mp1_clk_lp_save_opp_pll1_settings+0x28>)
2fff57cc:	680c      	ldr	r4, [r1, #0]
2fff57ce:	429c      	cmp	r4, r3
2fff57d0:	d003      	beq.n	2fff57da <stm32mp1_clk_lp_save_opp_pll1_settings+0x1a>
2fff57d2:	f7fd f927 	bl	2fff2a24 <console_flush>
2fff57d6:	f003 e93a 	blx	2fff8a4c <do_panic>
2fff57da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff57de:	f004 b997 	b.w	2fff9b10 <memcpy>
2fff57e2:	bf00      	nop
2fff57e4:	2fffea48 	.word	0x2fffea48
2fff57e8:	504c4c31 	.word	0x504c4c31

2fff57ec <stm32mp1_clk_lp_load_opp_pll1_settings>:
2fff57ec:	294c      	cmp	r1, #76	; 0x4c
2fff57ee:	460a      	mov	r2, r1
2fff57f0:	b508      	push	{r3, lr}
2fff57f2:	d003      	beq.n	2fff57fc <stm32mp1_clk_lp_load_opp_pll1_settings+0x10>
2fff57f4:	f7fd f916 	bl	2fff2a24 <console_flush>
2fff57f8:	f003 e928 	blx	2fff8a4c <do_panic>
2fff57fc:	4601      	mov	r1, r0
2fff57fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff5802:	4801      	ldr	r0, [pc, #4]	; (2fff5808 <stm32mp1_clk_lp_load_opp_pll1_settings+0x1c>)
2fff5804:	f004 b984 	b.w	2fff9b10 <memcpy>
2fff5808:	2fffea48 	.word	0x2fffea48

2fff580c <stm32mp1_register_clock_parents_secure>:
2fff580c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff580e:	4605      	mov	r5, r0
2fff5810:	f7ff fd38 	bl	2fff5284 <stm32mp1_rcc_is_secure>
2fff5814:	2800      	cmp	r0, #0
2fff5816:	d07f      	beq.n	2fff5918 <stm32mp1_register_clock_parents_secure+0x10c>
2fff5818:	2db2      	cmp	r5, #178	; 0xb2
2fff581a:	d018      	beq.n	2fff584e <stm32mp1_register_clock_parents_secure+0x42>
2fff581c:	d80e      	bhi.n	2fff583c <stm32mp1_register_clock_parents_secure+0x30>
2fff581e:	f1a5 03b0 	sub.w	r3, r5, #176	; 0xb0
2fff5822:	2b01      	cmp	r3, #1
2fff5824:	d978      	bls.n	2fff5918 <stm32mp1_register_clock_parents_secure+0x10c>
2fff5826:	4628      	mov	r0, r5
2fff5828:	f7ff face 	bl	2fff4dc8 <stm32mp1_clk_get_parent>
2fff582c:	1e04      	subs	r4, r0, #0
2fff582e:	da13      	bge.n	2fff5858 <stm32mp1_register_clock_parents_secure+0x4c>
2fff5830:	483e      	ldr	r0, [pc, #248]	; (2fff592c <stm32mp1_register_clock_parents_secure+0x120>)
2fff5832:	4629      	mov	r1, r5
2fff5834:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2fff5838:	f7fd b850 	b.w	2fff28dc <tf_log>
2fff583c:	2db3      	cmp	r5, #179	; 0xb3
2fff583e:	d1f2      	bne.n	2fff5826 <stm32mp1_register_clock_parents_secure+0x1a>
2fff5840:	483b      	ldr	r0, [pc, #236]	; (2fff5930 <stm32mp1_register_clock_parents_secure+0x124>)
2fff5842:	f7fd f84b 	bl	2fff28dc <tf_log>
2fff5846:	f7fd f8ed 	bl	2fff2a24 <console_flush>
2fff584a:	f003 e900 	blx	2fff8a4c <do_panic>
2fff584e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2fff5852:	2013      	movs	r0, #19
2fff5854:	f7fb b8ea 	b.w	2fff0a2c <stm32mp_register_secure_periph>
2fff5858:	4e36      	ldr	r6, [pc, #216]	; (2fff5934 <stm32mp1_register_clock_parents_secure+0x128>)
2fff585a:	4d37      	ldr	r5, [pc, #220]	; (2fff5938 <stm32mp1_register_clock_parents_secure+0x12c>)
2fff585c:	4f37      	ldr	r7, [pc, #220]	; (2fff593c <stm32mp1_register_clock_parents_secure+0x130>)
2fff585e:	2c1d      	cmp	r4, #29
2fff5860:	d8f1      	bhi.n	2fff5846 <stm32mp1_register_clock_parents_secure+0x3a>
2fff5862:	2301      	movs	r3, #1
2fff5864:	40a3      	lsls	r3, r4
2fff5866:	4233      	tst	r3, r6
2fff5868:	d105      	bne.n	2fff5876 <stm32mp1_register_clock_parents_secure+0x6a>
2fff586a:	f413 2fe0 	tst.w	r3, #458752	; 0x70000
2fff586e:	d0ea      	beq.n	2fff5846 <stm32mp1_register_clock_parents_secure+0x3a>
2fff5870:	2013      	movs	r0, #19
2fff5872:	f7fb f8db 	bl	2fff0a2c <stm32mp_register_secure_periph>
2fff5876:	3c0a      	subs	r4, #10
2fff5878:	2c17      	cmp	r4, #23
2fff587a:	d84d      	bhi.n	2fff5918 <stm32mp1_register_clock_parents_secure+0x10c>
2fff587c:	a301      	add	r3, pc, #4	; (adr r3, 2fff5884 <stm32mp1_register_clock_parents_secure+0x78>)
2fff587e:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
2fff5882:	bf00      	nop
2fff5884:	2fff591b 	.word	0x2fff591b
2fff5888:	2fff591b 	.word	0x2fff591b
2fff588c:	2fff591b 	.word	0x2fff591b
2fff5890:	2fff5927 	.word	0x2fff5927
2fff5894:	2fff5927 	.word	0x2fff5927
2fff5898:	2fff5927 	.word	0x2fff5927
2fff589c:	2fff58e5 	.word	0x2fff58e5
2fff58a0:	2fff58e5 	.word	0x2fff58e5
2fff58a4:	2fff58e5 	.word	0x2fff58e5
2fff58a8:	2fff5923 	.word	0x2fff5923
2fff58ac:	2fff5923 	.word	0x2fff5923
2fff58b0:	2fff5923 	.word	0x2fff5923
2fff58b4:	2fff590b 	.word	0x2fff590b
2fff58b8:	2fff5847 	.word	0x2fff5847
2fff58bc:	2fff5847 	.word	0x2fff5847
2fff58c0:	2fff5919 	.word	0x2fff5919
2fff58c4:	2fff590b 	.word	0x2fff590b
2fff58c8:	2fff590b 	.word	0x2fff590b
2fff58cc:	2fff5847 	.word	0x2fff5847
2fff58d0:	2fff5847 	.word	0x2fff5847
2fff58d4:	2fff5847 	.word	0x2fff5847
2fff58d8:	2fff5847 	.word	0x2fff5847
2fff58dc:	2fff5847 	.word	0x2fff5847
2fff58e0:	2fff5847 	.word	0x2fff5847
2fff58e4:	2402      	movs	r4, #2
2fff58e6:	f7fd f9bf 	bl	2fff2c68 <stm32mp_rcc_base>
2fff58ea:	eb05 1344 	add.w	r3, r5, r4, lsl #5
2fff58ee:	889b      	ldrh	r3, [r3, #4]
2fff58f0:	581b      	ldr	r3, [r3, r0]
2fff58f2:	f003 0303 	and.w	r3, r3, #3
2fff58f6:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
2fff58fa:	3304      	adds	r3, #4
2fff58fc:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
2fff5900:	2cff      	cmp	r4, #255	; 0xff
2fff5902:	d009      	beq.n	2fff5918 <stm32mp1_register_clock_parents_secure+0x10c>
2fff5904:	2c00      	cmp	r4, #0
2fff5906:	daaa      	bge.n	2fff585e <stm32mp1_register_clock_parents_secure+0x52>
2fff5908:	e006      	b.n	2fff5918 <stm32mp1_register_clock_parents_secure+0x10c>
2fff590a:	f7fd f9ad 	bl	2fff2c68 <stm32mp_rcc_base>
2fff590e:	6a43      	ldr	r3, [r0, #36]	; 0x24
2fff5910:	f003 0307 	and.w	r3, r3, #7
2fff5914:	2b02      	cmp	r3, #2
2fff5916:	d902      	bls.n	2fff591e <stm32mp1_register_clock_parents_secure+0x112>
2fff5918:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff591a:	2400      	movs	r4, #0
2fff591c:	e7e3      	b.n	2fff58e6 <stm32mp1_register_clock_parents_secure+0xda>
2fff591e:	5cfc      	ldrb	r4, [r7, r3]
2fff5920:	e79d      	b.n	2fff585e <stm32mp1_register_clock_parents_secure+0x52>
2fff5922:	2403      	movs	r4, #3
2fff5924:	e7df      	b.n	2fff58e6 <stm32mp1_register_clock_parents_secure+0xda>
2fff5926:	2401      	movs	r4, #1
2fff5928:	e7dd      	b.n	2fff58e6 <stm32mp1_register_clock_parents_secure+0xda>
2fff592a:	bf00      	nop
2fff592c:	2fffb699 	.word	0x2fffb699
2fff5930:	2fffb680 	.word	0x2fffb680
2fff5934:	3c40ffdf 	.word	0x3c40ffdf
2fff5938:	2fffb8d8 	.word	0x2fffb8d8
2fff593c:	2fffb6fe 	.word	0x2fffb6fe

2fff5940 <save_clock_pm_context>:
2fff5940:	b508      	push	{r3, lr}
2fff5942:	2288      	movs	r2, #136	; 0x88
2fff5944:	490d      	ldr	r1, [pc, #52]	; (2fff597c <save_clock_pm_context+0x3c>)
2fff5946:	2000      	movs	r0, #0
2fff5948:	f002 fd97 	bl	2fff847a <stm32mp1_pm_save_clock_cfg>
2fff594c:	490c      	ldr	r1, [pc, #48]	; (2fff5980 <save_clock_pm_context+0x40>)
2fff594e:	2204      	movs	r2, #4
2fff5950:	2088      	movs	r0, #136	; 0x88
2fff5952:	f002 fd92 	bl	2fff847a <stm32mp1_pm_save_clock_cfg>
2fff5956:	490b      	ldr	r1, [pc, #44]	; (2fff5984 <save_clock_pm_context+0x44>)
2fff5958:	2258      	movs	r2, #88	; 0x58
2fff595a:	208c      	movs	r0, #140	; 0x8c
2fff595c:	f002 fd8d 	bl	2fff847a <stm32mp1_pm_save_clock_cfg>
2fff5960:	4909      	ldr	r1, [pc, #36]	; (2fff5988 <save_clock_pm_context+0x48>)
2fff5962:	2238      	movs	r2, #56	; 0x38
2fff5964:	20e4      	movs	r0, #228	; 0xe4
2fff5966:	f002 fd88 	bl	2fff847a <stm32mp1_pm_save_clock_cfg>
2fff596a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff596e:	4907      	ldr	r1, [pc, #28]	; (2fff598c <save_clock_pm_context+0x4c>)
2fff5970:	22b8      	movs	r2, #184	; 0xb8
2fff5972:	f44f 708e 	mov.w	r0, #284	; 0x11c
2fff5976:	f002 bd80 	b.w	2fff847a <stm32mp1_pm_save_clock_cfg>
2fff597a:	bf00      	nop
2fff597c:	2fffd488 	.word	0x2fffd488
2fff5980:	2fffd510 	.word	0x2fffd510
2fff5984:	2fffd430 	.word	0x2fffd430
2fff5988:	2fffd3f8 	.word	0x2fffd3f8
2fff598c:	2fffe988 	.word	0x2fffe988

2fff5990 <restore_clock_pm_context>:
2fff5990:	b508      	push	{r3, lr}
2fff5992:	2288      	movs	r2, #136	; 0x88
2fff5994:	490d      	ldr	r1, [pc, #52]	; (2fff59cc <restore_clock_pm_context+0x3c>)
2fff5996:	2000      	movs	r0, #0
2fff5998:	f002 fd8b 	bl	2fff84b2 <stm32mp1_pm_restore_clock_cfg>
2fff599c:	490c      	ldr	r1, [pc, #48]	; (2fff59d0 <restore_clock_pm_context+0x40>)
2fff599e:	2204      	movs	r2, #4
2fff59a0:	2088      	movs	r0, #136	; 0x88
2fff59a2:	f002 fd86 	bl	2fff84b2 <stm32mp1_pm_restore_clock_cfg>
2fff59a6:	490b      	ldr	r1, [pc, #44]	; (2fff59d4 <restore_clock_pm_context+0x44>)
2fff59a8:	2258      	movs	r2, #88	; 0x58
2fff59aa:	208c      	movs	r0, #140	; 0x8c
2fff59ac:	f002 fd81 	bl	2fff84b2 <stm32mp1_pm_restore_clock_cfg>
2fff59b0:	4909      	ldr	r1, [pc, #36]	; (2fff59d8 <restore_clock_pm_context+0x48>)
2fff59b2:	2238      	movs	r2, #56	; 0x38
2fff59b4:	20e4      	movs	r0, #228	; 0xe4
2fff59b6:	f002 fd7c 	bl	2fff84b2 <stm32mp1_pm_restore_clock_cfg>
2fff59ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff59be:	4907      	ldr	r1, [pc, #28]	; (2fff59dc <restore_clock_pm_context+0x4c>)
2fff59c0:	22b8      	movs	r2, #184	; 0xb8
2fff59c2:	f44f 708e 	mov.w	r0, #284	; 0x11c
2fff59c6:	f002 bd74 	b.w	2fff84b2 <stm32mp1_pm_restore_clock_cfg>
2fff59ca:	bf00      	nop
2fff59cc:	2fffd488 	.word	0x2fffd488
2fff59d0:	2fffd510 	.word	0x2fffd510
2fff59d4:	2fffd430 	.word	0x2fffd430
2fff59d8:	2fffd3f8 	.word	0x2fffd3f8
2fff59dc:	2fffe988 	.word	0x2fffe988

2fff59e0 <stm32mp1_clock_suspend>:
2fff59e0:	b538      	push	{r3, r4, r5, lr}
2fff59e2:	f7fd f941 	bl	2fff2c68 <stm32mp_rcc_base>
2fff59e6:	4b20      	ldr	r3, [pc, #128]	; (2fff5a68 <stm32mp1_clock_suspend+0x88>)
2fff59e8:	2200      	movs	r2, #0
2fff59ea:	6819      	ldr	r1, [r3, #0]
2fff59ec:	3201      	adds	r2, #1
2fff59ee:	2a07      	cmp	r2, #7
2fff59f0:	f103 0308 	add.w	r3, r3, #8
2fff59f4:	5841      	ldr	r1, [r0, r1]
2fff59f6:	f843 1c04 	str.w	r1, [r3, #-4]
2fff59fa:	d1f6      	bne.n	2fff59ea <stm32mp1_clock_suspend+0xa>
2fff59fc:	f7fd f934 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5a00:	4b1a      	ldr	r3, [pc, #104]	; (2fff5a6c <stm32mp1_clock_suspend+0x8c>)
2fff5a02:	2200      	movs	r2, #0
2fff5a04:	6819      	ldr	r1, [r3, #0]
2fff5a06:	3201      	adds	r2, #1
2fff5a08:	2a0b      	cmp	r2, #11
2fff5a0a:	f103 0308 	add.w	r3, r3, #8
2fff5a0e:	5841      	ldr	r1, [r0, r1]
2fff5a10:	f843 1c04 	str.w	r1, [r3, #-4]
2fff5a14:	d1f6      	bne.n	2fff5a04 <stm32mp1_clock_suspend+0x24>
2fff5a16:	2400      	movs	r4, #0
2fff5a18:	f7fd f926 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5a1c:	4914      	ldr	r1, [pc, #80]	; (2fff5a70 <stm32mp1_clock_suspend+0x90>)
2fff5a1e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff5a22:	880a      	ldrh	r2, [r1, #0]
2fff5a24:	3401      	adds	r4, #1
2fff5a26:	2c22      	cmp	r4, #34	; 0x22
2fff5a28:	f101 0104 	add.w	r1, r1, #4
2fff5a2c:	5815      	ldr	r5, [r2, r0]
2fff5a2e:	f811 2c01 	ldrb.w	r2, [r1, #-1]
2fff5a32:	f1c2 0220 	rsb	r2, r2, #32
2fff5a36:	fa23 f202 	lsr.w	r2, r3, r2
2fff5a3a:	ea02 0205 	and.w	r2, r2, r5
2fff5a3e:	f801 2c02 	strb.w	r2, [r1, #-2]
2fff5a42:	d1ee      	bne.n	2fff5a22 <stm32mp1_clock_suspend+0x42>
2fff5a44:	4a0b      	ldr	r2, [pc, #44]	; (2fff5a74 <stm32mp1_clock_suspend+0x94>)
2fff5a46:	8811      	ldrh	r1, [r2, #0]
2fff5a48:	5808      	ldr	r0, [r1, r0]
2fff5a4a:	78d1      	ldrb	r1, [r2, #3]
2fff5a4c:	f1c1 011c 	rsb	r1, r1, #28
2fff5a50:	40cb      	lsrs	r3, r1
2fff5a52:	4003      	ands	r3, r0
2fff5a54:	f023 030f 	bic.w	r3, r3, #15
2fff5a58:	7093      	strb	r3, [r2, #2]
2fff5a5a:	f7fd f905 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5a5e:	2300      	movs	r3, #0
2fff5a60:	f8c0 3408 	str.w	r3, [r0, #1032]	; 0x408
2fff5a64:	bd38      	pop	{r3, r4, r5, pc}
2fff5a66:	bf00      	nop
2fff5a68:	2fffd3f8 	.word	0x2fffd3f8
2fff5a6c:	2fffd430 	.word	0x2fffd430
2fff5a70:	2fffd488 	.word	0x2fffd488
2fff5a74:	2fffd510 	.word	0x2fffd510

2fff5a78 <stm32mp1_clock_resume>:
2fff5a78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff5a7a:	f7fd f8f5 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5a7e:	492d      	ldr	r1, [pc, #180]	; (2fff5b34 <stm32mp1_clock_resume+0xbc>)
2fff5a80:	2400      	movs	r4, #0
2fff5a82:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff5a86:	880e      	ldrh	r6, [r1, #0]
2fff5a88:	3401      	adds	r4, #1
2fff5a8a:	78ca      	ldrb	r2, [r1, #3]
2fff5a8c:	2c22      	cmp	r4, #34	; 0x22
2fff5a8e:	5837      	ldr	r7, [r6, r0]
2fff5a90:	f101 0104 	add.w	r1, r1, #4
2fff5a94:	f811 5c02 	ldrb.w	r5, [r1, #-2]
2fff5a98:	f1c2 0220 	rsb	r2, r2, #32
2fff5a9c:	ea85 0507 	eor.w	r5, r5, r7
2fff5aa0:	fa23 f202 	lsr.w	r2, r3, r2
2fff5aa4:	ea02 0205 	and.w	r2, r2, r5
2fff5aa8:	ea82 0207 	eor.w	r2, r2, r7
2fff5aac:	5032      	str	r2, [r6, r0]
2fff5aae:	d1ea      	bne.n	2fff5a86 <stm32mp1_clock_resume+0xe>
2fff5ab0:	4a21      	ldr	r2, [pc, #132]	; (2fff5b38 <stm32mp1_clock_resume+0xc0>)
2fff5ab2:	8814      	ldrh	r4, [r2, #0]
2fff5ab4:	78d1      	ldrb	r1, [r2, #3]
2fff5ab6:	5825      	ldr	r5, [r4, r0]
2fff5ab8:	7892      	ldrb	r2, [r2, #2]
2fff5aba:	f1c1 011c 	rsb	r1, r1, #28
2fff5abe:	406a      	eors	r2, r5
2fff5ac0:	40cb      	lsrs	r3, r1
2fff5ac2:	4013      	ands	r3, r2
2fff5ac4:	f023 030f 	bic.w	r3, r3, #15
2fff5ac8:	406b      	eors	r3, r5
2fff5aca:	5023      	str	r3, [r4, r0]
2fff5acc:	f7fd f8cc 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5ad0:	4b1a      	ldr	r3, [pc, #104]	; (2fff5b3c <stm32mp1_clock_resume+0xc4>)
2fff5ad2:	2200      	movs	r2, #0
2fff5ad4:	1d05      	adds	r5, r0, #4
2fff5ad6:	e9d3 1400 	ldrd	r1, r4, [r3]
2fff5ada:	3201      	adds	r2, #1
2fff5adc:	5044      	str	r4, [r0, r1]
2fff5ade:	2a0b      	cmp	r2, #11
2fff5ae0:	6859      	ldr	r1, [r3, #4]
2fff5ae2:	f853 4b08 	ldr.w	r4, [r3], #8
2fff5ae6:	ea6f 0101 	mvn.w	r1, r1
2fff5aea:	5129      	str	r1, [r5, r4]
2fff5aec:	d1f3      	bne.n	2fff5ad6 <stm32mp1_clock_resume+0x5e>
2fff5aee:	f7fd f8bb 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5af2:	4a13      	ldr	r2, [pc, #76]	; (2fff5b40 <stm32mp1_clock_resume+0xc8>)
2fff5af4:	2300      	movs	r3, #0
2fff5af6:	6854      	ldr	r4, [r2, #4]
2fff5af8:	3301      	adds	r3, #1
2fff5afa:	f852 1b08 	ldr.w	r1, [r2], #8
2fff5afe:	2b07      	cmp	r3, #7
2fff5b00:	5044      	str	r4, [r0, r1]
2fff5b02:	d1f8      	bne.n	2fff5af6 <stm32mp1_clock_resume+0x7e>
2fff5b04:	4c0f      	ldr	r4, [pc, #60]	; (2fff5b44 <stm32mp1_clock_resume+0xcc>)
2fff5b06:	2500      	movs	r5, #0
2fff5b08:	4e0f      	ldr	r6, [pc, #60]	; (2fff5b48 <stm32mp1_clock_resume+0xd0>)
2fff5b0a:	7963      	ldrb	r3, [r4, #5]
2fff5b0c:	b12b      	cbz	r3, 2fff5b1a <stm32mp1_clock_resume+0xa2>
2fff5b0e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
2fff5b12:	4620      	mov	r0, r4
2fff5b14:	b15b      	cbz	r3, 2fff5b2e <stm32mp1_clock_resume+0xb6>
2fff5b16:	f7ff f919 	bl	2fff4d4c <__clk_enable>
2fff5b1a:	3501      	adds	r5, #1
2fff5b1c:	3408      	adds	r4, #8
2fff5b1e:	2d2e      	cmp	r5, #46	; 0x2e
2fff5b20:	d1f3      	bne.n	2fff5b0a <stm32mp1_clock_resume+0x92>
2fff5b22:	f7fd f8a1 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5b26:	f240 2322 	movw	r3, #546	; 0x222
2fff5b2a:	6103      	str	r3, [r0, #16]
2fff5b2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff5b2e:	f7ff f91e 	bl	2fff4d6e <__clk_disable>
2fff5b32:	e7f2      	b.n	2fff5b1a <stm32mp1_clock_resume+0xa2>
2fff5b34:	2fffd488 	.word	0x2fffd488
2fff5b38:	2fffd510 	.word	0x2fffd510
2fff5b3c:	2fffd430 	.word	0x2fffd430
2fff5b40:	2fffd3f8 	.word	0x2fffd3f8
2fff5b44:	2fffb766 	.word	0x2fffb766
2fff5b48:	2fffe988 	.word	0x2fffe988

2fff5b4c <stm32mp1_clock_stopmode_save>:
2fff5b4c:	b508      	push	{r3, lr}
2fff5b4e:	f7fd f88b 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5b52:	f8d0 2880 	ldr.w	r2, [r0, #2176]	; 0x880
2fff5b56:	4b0c      	ldr	r3, [pc, #48]	; (2fff5b88 <stm32mp1_clock_stopmode_save+0x3c>)
2fff5b58:	601a      	str	r2, [r3, #0]
2fff5b5a:	f8d0 2894 	ldr.w	r2, [r0, #2196]	; 0x894
2fff5b5e:	4b0b      	ldr	r3, [pc, #44]	; (2fff5b8c <stm32mp1_clock_stopmode_save+0x40>)
2fff5b60:	601a      	str	r2, [r3, #0]
2fff5b62:	6c82      	ldr	r2, [r0, #72]	; 0x48
2fff5b64:	4b0a      	ldr	r3, [pc, #40]	; (2fff5b90 <stm32mp1_clock_stopmode_save+0x44>)
2fff5b66:	601a      	str	r2, [r3, #0]
2fff5b68:	f8d0 3830 	ldr.w	r3, [r0, #2096]	; 0x830
2fff5b6c:	4a09      	ldr	r2, [pc, #36]	; (2fff5b94 <stm32mp1_clock_stopmode_save+0x48>)
2fff5b6e:	f003 030f 	and.w	r3, r3, #15
2fff5b72:	6013      	str	r3, [r2, #0]
2fff5b74:	f7fd f878 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5b78:	68c2      	ldr	r2, [r0, #12]
2fff5b7a:	f240 2322 	movw	r3, #546	; 0x222
2fff5b7e:	ea03 0342 	and.w	r3, r3, r2, lsl #1
2fff5b82:	60c3      	str	r3, [r0, #12]
2fff5b84:	bd08      	pop	{r3, pc}
2fff5b86:	bf00      	nop
2fff5b88:	2fffea94 	.word	0x2fffea94
2fff5b8c:	2fffea98 	.word	0x2fffea98
2fff5b90:	2fffea44 	.word	0x2fffea44
2fff5b94:	2fffea40 	.word	0x2fffea40

2fff5b98 <stm32mp1_clock_stopmode_resume>:
2fff5b98:	b570      	push	{r4, r5, r6, lr}
2fff5b9a:	f7fd f865 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5b9e:	4e20      	ldr	r6, [pc, #128]	; (2fff5c20 <stm32mp1_clock_stopmode_resume+0x88>)
2fff5ba0:	4605      	mov	r5, r0
2fff5ba2:	6833      	ldr	r3, [r6, #0]
2fff5ba4:	07dc      	lsls	r4, r3, #31
2fff5ba6:	d508      	bpl.n	2fff5bba <stm32mp1_clock_stopmode_resume+0x22>
2fff5ba8:	f7fd f85e 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5bac:	f8d0 3894 	ldr.w	r3, [r0, #2196]	; 0x894
2fff5bb0:	07d8      	lsls	r0, r3, #31
2fff5bb2:	d402      	bmi.n	2fff5bba <stm32mp1_clock_stopmode_resume+0x22>
2fff5bb4:	2003      	movs	r0, #3
2fff5bb6:	f7ff f861 	bl	2fff4c7c <stm32mp1_pll_start>
2fff5bba:	4c1a      	ldr	r4, [pc, #104]	; (2fff5c24 <stm32mp1_clock_stopmode_resume+0x8c>)
2fff5bbc:	6822      	ldr	r2, [r4, #0]
2fff5bbe:	07d1      	lsls	r1, r2, #31
2fff5bc0:	d413      	bmi.n	2fff5bea <stm32mp1_clock_stopmode_resume+0x52>
2fff5bc2:	6831      	ldr	r1, [r6, #0]
2fff5bc4:	07ca      	lsls	r2, r1, #31
2fff5bc6:	d423      	bmi.n	2fff5c10 <stm32mp1_clock_stopmode_resume+0x78>
2fff5bc8:	4b17      	ldr	r3, [pc, #92]	; (2fff5c28 <stm32mp1_clock_stopmode_resume+0x90>)
2fff5bca:	f505 6103 	add.w	r1, r5, #2096	; 0x830
2fff5bce:	681b      	ldr	r3, [r3, #0]
2fff5bd0:	64ab      	str	r3, [r5, #72]	; 0x48
2fff5bd2:	4b16      	ldr	r3, [pc, #88]	; (2fff5c2c <stm32mp1_clock_stopmode_resume+0x94>)
2fff5bd4:	6818      	ldr	r0, [r3, #0]
2fff5bd6:	f7ff f9ad 	bl	2fff4f34 <stm32mp1_set_clkdiv>
2fff5bda:	4604      	mov	r4, r0
2fff5bdc:	b9b0      	cbnz	r0, 2fff5c0c <stm32mp1_clock_stopmode_resume+0x74>
2fff5bde:	f7fd f843 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5be2:	f240 2322 	movw	r3, #546	; 0x222
2fff5be6:	6103      	str	r3, [r0, #16]
2fff5be8:	e010      	b.n	2fff5c0c <stm32mp1_clock_stopmode_resume+0x74>
2fff5bea:	f7fd f83d 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5bee:	f8d0 3880 	ldr.w	r3, [r0, #2176]	; 0x880
2fff5bf2:	07db      	lsls	r3, r3, #31
2fff5bf4:	d402      	bmi.n	2fff5bfc <stm32mp1_clock_stopmode_resume+0x64>
2fff5bf6:	2002      	movs	r0, #2
2fff5bf8:	f7ff f840 	bl	2fff4c7c <stm32mp1_pll_start>
2fff5bfc:	6821      	ldr	r1, [r4, #0]
2fff5bfe:	2002      	movs	r0, #2
2fff5c00:	0909      	lsrs	r1, r1, #4
2fff5c02:	f7ff fa0d 	bl	2fff5020 <stm32mp1_pll_output>
2fff5c06:	4604      	mov	r4, r0
2fff5c08:	2800      	cmp	r0, #0
2fff5c0a:	d0da      	beq.n	2fff5bc2 <stm32mp1_clock_stopmode_resume+0x2a>
2fff5c0c:	4620      	mov	r0, r4
2fff5c0e:	bd70      	pop	{r4, r5, r6, pc}
2fff5c10:	0909      	lsrs	r1, r1, #4
2fff5c12:	2003      	movs	r0, #3
2fff5c14:	f7ff fa04 	bl	2fff5020 <stm32mp1_pll_output>
2fff5c18:	4604      	mov	r4, r0
2fff5c1a:	2800      	cmp	r0, #0
2fff5c1c:	d0d4      	beq.n	2fff5bc8 <stm32mp1_clock_stopmode_resume+0x30>
2fff5c1e:	e7f5      	b.n	2fff5c0c <stm32mp1_clock_stopmode_resume+0x74>
2fff5c20:	2fffea98 	.word	0x2fffea98
2fff5c24:	2fffea94 	.word	0x2fffea94
2fff5c28:	2fffea44 	.word	0x2fffea44
2fff5c2c:	2fffea40 	.word	0x2fffea40

2fff5c30 <stm32mp1_dump_clocks_state>:
2fff5c30:	4770      	bx	lr
	...

2fff5c34 <stm32mp1_clk_probe>:
2fff5c34:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff5c36:	2400      	movs	r4, #0
2fff5c38:	4d29      	ldr	r5, [pc, #164]	; (2fff5ce0 <stm32mp1_clk_probe+0xac>)
2fff5c3a:	4e2a      	ldr	r6, [pc, #168]	; (2fff5ce4 <stm32mp1_clk_probe+0xb0>)
2fff5c3c:	f855 0b04 	ldr.w	r0, [r5], #4
2fff5c40:	a901      	add	r1, sp, #4
2fff5c42:	f7fe fd8b 	bl	2fff475c <fdt_osc_read_freq>
2fff5c46:	b910      	cbnz	r0, 2fff5c4e <stm32mp1_clk_probe+0x1a>
2fff5c48:	9b01      	ldr	r3, [sp, #4]
2fff5c4a:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
2fff5c4e:	3401      	adds	r4, #1
2fff5c50:	2c06      	cmp	r4, #6
2fff5c52:	d1f3      	bne.n	2fff5c3c <stm32mp1_clk_probe+0x8>
2fff5c54:	4c24      	ldr	r4, [pc, #144]	; (2fff5ce8 <stm32mp1_clk_probe+0xb4>)
2fff5c56:	2500      	movs	r5, #0
2fff5c58:	7963      	ldrb	r3, [r4, #5]
2fff5c5a:	b113      	cbz	r3, 2fff5c62 <stm32mp1_clk_probe+0x2e>
2fff5c5c:	78e0      	ldrb	r0, [r4, #3]
2fff5c5e:	f7ff fdd5 	bl	2fff580c <stm32mp1_register_clock_parents_secure>
2fff5c62:	3501      	adds	r5, #1
2fff5c64:	3408      	adds	r4, #8
2fff5c66:	2d2e      	cmp	r5, #46	; 0x2e
2fff5c68:	d1f6      	bne.n	2fff5c58 <stm32mp1_clk_probe+0x24>
2fff5c6a:	20e4      	movs	r0, #228	; 0xe4
2fff5c6c:	f7ff fb28 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5c70:	20dc      	movs	r0, #220	; 0xdc
2fff5c72:	f7ff fb25 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5c76:	20dd      	movs	r0, #221	; 0xdd
2fff5c78:	f7ff fb22 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5c7c:	20de      	movs	r0, #222	; 0xde
2fff5c7e:	f7ff fb1f 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5c82:	20df      	movs	r0, #223	; 0xdf
2fff5c84:	f7ff fb1c 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5c88:	20e2      	movs	r0, #226	; 0xe2
2fff5c8a:	f7ff fb19 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5c8e:	20e0      	movs	r0, #224	; 0xe0
2fff5c90:	f7ff fb16 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5c94:	20e1      	movs	r0, #225	; 0xe1
2fff5c96:	f7ff fb13 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5c9a:	20e5      	movs	r0, #229	; 0xe5
2fff5c9c:	f7ff fb10 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5ca0:	20e6      	movs	r0, #230	; 0xe6
2fff5ca2:	f7ff fb0d 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5ca6:	2043      	movs	r0, #67	; 0x43
2fff5ca8:	f7ff fb0a 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5cac:	2042      	movs	r0, #66	; 0x42
2fff5cae:	f7ff fb07 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5cb2:	2071      	movs	r0, #113	; 0x71
2fff5cb4:	f7ff fb04 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5cb8:	2080      	movs	r0, #128	; 0x80
2fff5cba:	f7ff fb01 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5cbe:	2041      	movs	r0, #65	; 0x41
2fff5cc0:	f7ff fafe 	bl	2fff52c0 <stm32mp_clk_enable>
2fff5cc4:	20c2      	movs	r0, #194	; 0xc2
2fff5cc6:	f7ff fb27 	bl	2fff5318 <stm32mp_clk_get_rate>
2fff5cca:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
2fff5cce:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff5cd2:	fbb0 f0f3 	udiv	r0, r0, r3
2fff5cd6:	4b05      	ldr	r3, [pc, #20]	; (2fff5cec <stm32mp1_clk_probe+0xb8>)
2fff5cd8:	6018      	str	r0, [r3, #0]
2fff5cda:	2000      	movs	r0, #0
2fff5cdc:	b002      	add	sp, #8
2fff5cde:	bd70      	pop	{r4, r5, r6, pc}
2fff5ce0:	2fffd514 	.word	0x2fffd514
2fff5ce4:	2fffeaa4 	.word	0x2fffeaa4
2fff5ce8:	2fffb766 	.word	0x2fffb766
2fff5cec:	2fffe984 	.word	0x2fffe984

2fff5cf0 <do_sw_handshake>:
2fff5cf0:	b508      	push	{r3, lr}
2fff5cf2:	f7fc ffad 	bl	2fff2c50 <stm32mp_ddrctrl_base>
2fff5cf6:	f8d0 3320 	ldr.w	r3, [r0, #800]	; 0x320
2fff5cfa:	f023 0301 	bic.w	r3, r3, #1
2fff5cfe:	f8c0 3320 	str.w	r3, [r0, #800]	; 0x320
2fff5d02:	bd08      	pop	{r3, pc}

2fff5d04 <do_sw_ack>:
2fff5d04:	e92d 43d0 	stmdb	sp!, {r4, r6, r7, r8, r9, lr}
2fff5d08:	f7fc ffa2 	bl	2fff2c50 <stm32mp_ddrctrl_base>
2fff5d0c:	f8d0 3320 	ldr.w	r3, [r0, #800]	; 0x320
2fff5d10:	4604      	mov	r4, r0
2fff5d12:	f043 0301 	orr.w	r3, r3, #1
2fff5d16:	f8c0 3320 	str.w	r3, [r0, #800]	; 0x320
2fff5d1a:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff5d1e:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff5d22:	4a0e      	ldr	r2, [pc, #56]	; (2fff5d5c <do_sw_ack+0x58>)
2fff5d24:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff5d28:	2300      	movs	r3, #0
2fff5d2a:	fba0 0101 	umull	r0, r1, r0, r1
2fff5d2e:	f003 e82c 	blx	2fff8d88 <__aeabi_uldivmod>
2fff5d32:	eb10 0806 	adds.w	r8, r0, r6
2fff5d36:	eb41 0907 	adc.w	r9, r1, r7
2fff5d3a:	f8d4 3324 	ldr.w	r3, [r4, #804]	; 0x324
2fff5d3e:	07db      	lsls	r3, r3, #31
2fff5d40:	d501      	bpl.n	2fff5d46 <do_sw_ack+0x42>
2fff5d42:	e8bd 83d0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, pc}
2fff5d46:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff5d4a:	4599      	cmp	r9, r3
2fff5d4c:	bf08      	it	eq
2fff5d4e:	4590      	cmpeq	r8, r2
2fff5d50:	d2f3      	bcs.n	2fff5d3a <do_sw_ack+0x36>
2fff5d52:	f7fc fe67 	bl	2fff2a24 <console_flush>
2fff5d56:	f002 ee7a 	blx	2fff8a4c <do_panic>
2fff5d5a:	bf00      	nop
2fff5d5c:	000f4240 	.word	0x000f4240

2fff5d60 <ddr_enable_clock>:
2fff5d60:	b508      	push	{r3, lr}
2fff5d62:	f7ff faa1 	bl	2fff52a8 <stm32mp1_clk_rcc_regs_lock>
2fff5d66:	f7fc ff7f 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5d6a:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
2fff5d6e:	f443 7315 	orr.w	r3, r3, #596	; 0x254
2fff5d72:	f043 0301 	orr.w	r3, r3, #1
2fff5d76:	f8c0 30d8 	str.w	r3, [r0, #216]	; 0xd8
2fff5d7a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff5d7e:	f7ff ba99 	b.w	2fff52b4 <stm32mp1_clk_rcc_regs_unlock>
	...

2fff5d84 <ddr_sw_self_refresh_exit>:
2fff5d84:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff5d88:	f7fc ff6e 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5d8c:	4682      	mov	sl, r0
2fff5d8e:	f7fc ff67 	bl	2fff2c60 <stm32mp_pwr_base>
2fff5d92:	4683      	mov	fp, r0
2fff5d94:	f7fc ff5c 	bl	2fff2c50 <stm32mp_ddrctrl_base>
2fff5d98:	4605      	mov	r5, r0
2fff5d9a:	f7fc ff5d 	bl	2fff2c58 <stm32mp_ddrphyc_base>
2fff5d9e:	4604      	mov	r4, r0
2fff5da0:	f7ff ffde 	bl	2fff5d60 <ddr_enable_clock>
2fff5da4:	f7ff ffa4 	bl	2fff5cf0 <do_sw_handshake>
2fff5da8:	f8d5 31b0 	ldr.w	r3, [r5, #432]	; 0x1b0
2fff5dac:	f023 0301 	bic.w	r3, r3, #1
2fff5db0:	f8c5 31b0 	str.w	r3, [r5, #432]	; 0x1b0
2fff5db4:	f7ff ffa6 	bl	2fff5d04 <do_sw_ack>
2fff5db8:	f7ff fa76 	bl	2fff52a8 <stm32mp1_clk_rcc_regs_lock>
2fff5dbc:	f8da 30d8 	ldr.w	r3, [sl, #216]	; 0xd8
2fff5dc0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
2fff5dc4:	f8ca 30d8 	str.w	r3, [sl, #216]	; 0xd8
2fff5dc8:	f7ff fa74 	bl	2fff52b4 <stm32mp1_clk_rcc_regs_unlock>
2fff5dcc:	6963      	ldr	r3, [r4, #20]
2fff5dce:	2032      	movs	r0, #50	; 0x32
2fff5dd0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff5dd4:	6163      	str	r3, [r4, #20]
2fff5dd6:	f8d4 31cc 	ldr.w	r3, [r4, #460]	; 0x1cc
2fff5dda:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff5dde:	f8c4 31cc 	str.w	r3, [r4, #460]	; 0x1cc
2fff5de2:	f8d4 320c 	ldr.w	r3, [r4, #524]	; 0x20c
2fff5de6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff5dea:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
2fff5dee:	f8d4 324c 	ldr.w	r3, [r4, #588]	; 0x24c
2fff5df2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff5df6:	f8c4 324c 	str.w	r3, [r4, #588]	; 0x24c
2fff5dfa:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
2fff5dfe:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff5e02:	f8c4 328c 	str.w	r3, [r4, #652]	; 0x28c
2fff5e06:	f7fe f8f9 	bl	2fff3ffc <udelay>
2fff5e0a:	f7ff fa4d 	bl	2fff52a8 <stm32mp1_clk_rcc_regs_lock>
2fff5e0e:	f8da 30d8 	ldr.w	r3, [sl, #216]	; 0xd8
2fff5e12:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
2fff5e16:	f8ca 30d8 	str.w	r3, [sl, #216]	; 0xd8
2fff5e1a:	f7ff fa4b 	bl	2fff52b4 <stm32mp1_clk_rcc_regs_unlock>
2fff5e1e:	6963      	ldr	r3, [r4, #20]
2fff5e20:	200a      	movs	r0, #10
2fff5e22:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
2fff5e26:	6163      	str	r3, [r4, #20]
2fff5e28:	f7fe f8e8 	bl	2fff3ffc <udelay>
2fff5e2c:	6963      	ldr	r3, [r4, #20]
2fff5e2e:	2001      	movs	r0, #1
2fff5e30:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
2fff5e34:	6163      	str	r3, [r4, #20]
2fff5e36:	2317      	movs	r3, #23
2fff5e38:	6063      	str	r3, [r4, #4]
2fff5e3a:	f7fe f8df 	bl	2fff3ffc <udelay>
2fff5e3e:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff5e42:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff5e46:	4a4b      	ldr	r2, [pc, #300]	; (2fff5f74 <ddr_sw_self_refresh_exit+0x1f0>)
2fff5e48:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff5e4c:	2300      	movs	r3, #0
2fff5e4e:	fba0 0101 	umull	r0, r1, r0, r1
2fff5e52:	f002 ef9a 	blx	2fff8d88 <__aeabi_uldivmod>
2fff5e56:	eb10 0806 	adds.w	r8, r0, r6
2fff5e5a:	eb41 0907 	adc.w	r9, r1, r7
2fff5e5e:	68e3      	ldr	r3, [r4, #12]
2fff5e60:	07db      	lsls	r3, r3, #31
2fff5e62:	d573      	bpl.n	2fff5f4c <ddr_sw_self_refresh_exit+0x1c8>
2fff5e64:	f7ff ff44 	bl	2fff5cf0 <do_sw_handshake>
2fff5e68:	f8d5 31b0 	ldr.w	r3, [r5, #432]	; 0x1b0
2fff5e6c:	f043 0301 	orr.w	r3, r3, #1
2fff5e70:	f8c5 31b0 	str.w	r3, [r5, #432]	; 0x1b0
2fff5e74:	f7ff ff46 	bl	2fff5d04 <do_sw_ack>
2fff5e78:	f7fc ff02 	bl	2fff2c80 <stm32mp_pwr_regs_lock>
2fff5e7c:	f8db 300c 	ldr.w	r3, [fp, #12]
2fff5e80:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
2fff5e84:	f8cb 300c 	str.w	r3, [fp, #12]
2fff5e88:	f7fc ff06 	bl	2fff2c98 <stm32mp_pwr_regs_unlock>
2fff5e8c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
2fff5e90:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff5e94:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
2fff5e98:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff5e9a:	f023 0308 	bic.w	r3, r3, #8
2fff5e9e:	6263      	str	r3, [r4, #36]	; 0x24
2fff5ea0:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff5ea2:	f043 0302 	orr.w	r3, r3, #2
2fff5ea6:	6263      	str	r3, [r4, #36]	; 0x24
2fff5ea8:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff5eaa:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
2fff5eae:	6263      	str	r3, [r4, #36]	; 0x24
2fff5eb0:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff5eb2:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
2fff5eb6:	6263      	str	r3, [r4, #36]	; 0x24
2fff5eb8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff5eba:	f023 0304 	bic.w	r3, r3, #4
2fff5ebe:	62a3      	str	r3, [r4, #40]	; 0x28
2fff5ec0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff5ec2:	f023 0308 	bic.w	r3, r3, #8
2fff5ec6:	62a3      	str	r3, [r4, #40]	; 0x28
2fff5ec8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff5eca:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
2fff5ece:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff5ed0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff5ed2:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
2fff5ed6:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff5ed8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff5eda:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
2fff5ede:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff5ee0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff5ee2:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
2fff5ee6:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff5ee8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff5eea:	f023 0320 	bic.w	r3, r3, #32
2fff5eee:	632b      	str	r3, [r5, #48]	; 0x30
2fff5ef0:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff5ef4:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff5ef8:	4a1e      	ldr	r2, [pc, #120]	; (2fff5f74 <ddr_sw_self_refresh_exit+0x1f0>)
2fff5efa:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff5efe:	2300      	movs	r3, #0
2fff5f00:	fba0 0101 	umull	r0, r1, r0, r1
2fff5f04:	f002 ef40 	blx	2fff8d88 <__aeabi_uldivmod>
2fff5f08:	1983      	adds	r3, r0, r6
2fff5f0a:	9300      	str	r3, [sp, #0]
2fff5f0c:	eb41 0307 	adc.w	r3, r1, r7
2fff5f10:	9301      	str	r3, [sp, #4]
2fff5f12:	686b      	ldr	r3, [r5, #4]
2fff5f14:	f003 0307 	and.w	r3, r3, #7
2fff5f18:	2b01      	cmp	r3, #1
2fff5f1a:	d122      	bne.n	2fff5f62 <ddr_sw_self_refresh_exit+0x1de>
2fff5f1c:	f8d5 3490 	ldr.w	r3, [r5, #1168]	; 0x490
2fff5f20:	f043 0301 	orr.w	r3, r3, #1
2fff5f24:	f8c5 3490 	str.w	r3, [r5, #1168]	; 0x490
2fff5f28:	f8d5 3540 	ldr.w	r3, [r5, #1344]	; 0x540
2fff5f2c:	f043 0301 	orr.w	r3, r3, #1
2fff5f30:	f8c5 3540 	str.w	r3, [r5, #1344]	; 0x540
2fff5f34:	f7ff f9b8 	bl	2fff52a8 <stm32mp1_clk_rcc_regs_lock>
2fff5f38:	f8da 30d8 	ldr.w	r3, [sl, #216]	; 0xd8
2fff5f3c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff5f40:	f8ca 30d8 	str.w	r3, [sl, #216]	; 0xd8
2fff5f44:	f7ff f9b6 	bl	2fff52b4 <stm32mp1_clk_rcc_regs_unlock>
2fff5f48:	2000      	movs	r0, #0
2fff5f4a:	e007      	b.n	2fff5f5c <ddr_sw_self_refresh_exit+0x1d8>
2fff5f4c:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff5f50:	4599      	cmp	r9, r3
2fff5f52:	bf08      	it	eq
2fff5f54:	4590      	cmpeq	r8, r2
2fff5f56:	d282      	bcs.n	2fff5e5e <ddr_sw_self_refresh_exit+0xda>
2fff5f58:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff5f5c:	b003      	add	sp, #12
2fff5f5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff5f62:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff5f66:	e9dd 0100 	ldrd	r0, r1, [sp]
2fff5f6a:	4299      	cmp	r1, r3
2fff5f6c:	bf08      	it	eq
2fff5f6e:	4290      	cmpeq	r0, r2
2fff5f70:	d2cf      	bcs.n	2fff5f12 <ddr_sw_self_refresh_exit+0x18e>
2fff5f72:	e7f1      	b.n	2fff5f58 <ddr_sw_self_refresh_exit+0x1d4>
2fff5f74:	000f4240 	.word	0x000f4240

2fff5f78 <ddr_standby_sr_entry>:
2fff5f78:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
2fff5f7c:	4604      	mov	r4, r0
2fff5f7e:	f7fc fe6f 	bl	2fff2c60 <stm32mp_pwr_base>
2fff5f82:	4607      	mov	r7, r0
2fff5f84:	f7fc fe68 	bl	2fff2c58 <stm32mp_ddrphyc_base>
2fff5f88:	b124      	cbz	r4, 2fff5f94 <ddr_standby_sr_entry+0x1c>
2fff5f8a:	f8d0 3180 	ldr.w	r3, [r0, #384]	; 0x180
2fff5f8e:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
2fff5f92:	6023      	str	r3, [r4, #0]
2fff5f94:	f7fc fe68 	bl	2fff2c68 <stm32mp_rcc_base>
2fff5f98:	4606      	mov	r6, r0
2fff5f9a:	f7fc fe61 	bl	2fff2c60 <stm32mp_pwr_base>
2fff5f9e:	4682      	mov	sl, r0
2fff5fa0:	f7fc fe56 	bl	2fff2c50 <stm32mp_ddrctrl_base>
2fff5fa4:	4605      	mov	r5, r0
2fff5fa6:	f7fc fe57 	bl	2fff2c58 <stm32mp_ddrphyc_base>
2fff5faa:	4604      	mov	r4, r0
2fff5fac:	f7ff f97c 	bl	2fff52a8 <stm32mp1_clk_rcc_regs_lock>
2fff5fb0:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff5fb4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
2fff5fb8:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff5fbc:	f7ff f97a 	bl	2fff52b4 <stm32mp1_clk_rcc_regs_unlock>
2fff5fc0:	f8d5 3490 	ldr.w	r3, [r5, #1168]	; 0x490
2fff5fc4:	f023 0301 	bic.w	r3, r3, #1
2fff5fc8:	f8c5 3490 	str.w	r3, [r5, #1168]	; 0x490
2fff5fcc:	f8d5 3540 	ldr.w	r3, [r5, #1344]	; 0x540
2fff5fd0:	f023 0301 	bic.w	r3, r3, #1
2fff5fd4:	f8c5 3540 	str.w	r3, [r5, #1344]	; 0x540
2fff5fd8:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff5fdc:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff5fe0:	4a72      	ldr	r2, [pc, #456]	; (2fff61ac <ddr_standby_sr_entry+0x234>)
2fff5fe2:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff5fe6:	2300      	movs	r3, #0
2fff5fe8:	fba0 0101 	umull	r0, r1, r0, r1
2fff5fec:	f002 eecc 	blx	2fff8d88 <__aeabi_uldivmod>
2fff5ff0:	eb10 0308 	adds.w	r3, r0, r8
2fff5ff4:	9300      	str	r3, [sp, #0]
2fff5ff6:	eb41 0309 	adc.w	r3, r1, r9
2fff5ffa:	9301      	str	r3, [sp, #4]
2fff5ffc:	f8d5 33fc 	ldr.w	r3, [r5, #1020]	; 0x3fc
2fff6000:	bb13      	cbnz	r3, 2fff6048 <ddr_standby_sr_entry+0xd0>
2fff6002:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff6004:	f043 0320 	orr.w	r3, r3, #32
2fff6008:	632b      	str	r3, [r5, #48]	; 0x30
2fff600a:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff600e:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff6012:	4a66      	ldr	r2, [pc, #408]	; (2fff61ac <ddr_standby_sr_entry+0x234>)
2fff6014:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff6018:	2300      	movs	r3, #0
2fff601a:	fba0 0101 	umull	r0, r1, r0, r1
2fff601e:	f002 eeb4 	blx	2fff8d88 <__aeabi_uldivmod>
2fff6022:	eb10 0308 	adds.w	r3, r0, r8
2fff6026:	9302      	str	r3, [sp, #8]
2fff6028:	eb41 0309 	adc.w	r3, r1, r9
2fff602c:	9303      	str	r3, [sp, #12]
2fff602e:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff6032:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
2fff6036:	4299      	cmp	r1, r3
2fff6038:	bf08      	it	eq
2fff603a:	4290      	cmpeq	r0, r2
2fff603c:	d21d      	bcs.n	2fff607a <ddr_standby_sr_entry+0x102>
2fff603e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff6040:	f023 0320 	bic.w	r3, r3, #32
2fff6044:	632b      	str	r3, [r5, #48]	; 0x30
2fff6046:	e007      	b.n	2fff6058 <ddr_standby_sr_entry+0xe0>
2fff6048:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff604c:	e9dd 0100 	ldrd	r0, r1, [sp]
2fff6050:	4299      	cmp	r1, r3
2fff6052:	bf08      	it	eq
2fff6054:	4290      	cmpeq	r0, r2
2fff6056:	d2d1      	bcs.n	2fff5ffc <ddr_standby_sr_entry+0x84>
2fff6058:	f8d5 3490 	ldr.w	r3, [r5, #1168]	; 0x490
2fff605c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff6060:	f043 0301 	orr.w	r3, r3, #1
2fff6064:	f8c5 3490 	str.w	r3, [r5, #1168]	; 0x490
2fff6068:	f8d5 3540 	ldr.w	r3, [r5, #1344]	; 0x540
2fff606c:	f043 0301 	orr.w	r3, r3, #1
2fff6070:	f8c5 3540 	str.w	r3, [r5, #1344]	; 0x540
2fff6074:	b004      	add	sp, #16
2fff6076:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff607a:	686b      	ldr	r3, [r5, #4]
2fff607c:	f003 0207 	and.w	r2, r3, #7
2fff6080:	2a03      	cmp	r2, #3
2fff6082:	d1d4      	bne.n	2fff602e <ddr_standby_sr_entry+0xb6>
2fff6084:	f003 0330 	and.w	r3, r3, #48	; 0x30
2fff6088:	2b20      	cmp	r3, #32
2fff608a:	d1d0      	bne.n	2fff602e <ddr_standby_sr_entry+0xb6>
2fff608c:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff608e:	200a      	movs	r0, #10
2fff6090:	f043 0308 	orr.w	r3, r3, #8
2fff6094:	6263      	str	r3, [r4, #36]	; 0x24
2fff6096:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff6098:	f043 0310 	orr.w	r3, r3, #16
2fff609c:	6263      	str	r3, [r4, #36]	; 0x24
2fff609e:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff60a0:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
2fff60a4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff60a8:	6263      	str	r3, [r4, #36]	; 0x24
2fff60aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff60ac:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
2fff60b0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
2fff60b4:	6263      	str	r3, [r4, #36]	; 0x24
2fff60b6:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff60b8:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
2fff60bc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
2fff60c0:	6263      	str	r3, [r4, #36]	; 0x24
2fff60c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff60c4:	f023 0302 	bic.w	r3, r3, #2
2fff60c8:	6263      	str	r3, [r4, #36]	; 0x24
2fff60ca:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff60cc:	f043 0304 	orr.w	r3, r3, #4
2fff60d0:	62a3      	str	r3, [r4, #40]	; 0x28
2fff60d2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff60d4:	f043 0308 	orr.w	r3, r3, #8
2fff60d8:	62a3      	str	r3, [r4, #40]	; 0x28
2fff60da:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff60dc:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
2fff60e0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2fff60e4:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff60e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff60e8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
2fff60ec:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff60ee:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff60f0:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
2fff60f4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff60f8:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff60fa:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
2fff60fe:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff6102:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
2fff6106:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff6108:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
2fff610c:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff610e:	f7fd ff75 	bl	2fff3ffc <udelay>
2fff6112:	f7fc fdb5 	bl	2fff2c80 <stm32mp_pwr_regs_lock>
2fff6116:	f8da 300c 	ldr.w	r3, [sl, #12]
2fff611a:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
2fff611e:	f8ca 300c 	str.w	r3, [sl, #12]
2fff6122:	f7fc fdb9 	bl	2fff2c98 <stm32mp_pwr_regs_unlock>
2fff6126:	f7ff f8bf 	bl	2fff52a8 <stm32mp1_clk_rcc_regs_lock>
2fff612a:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff612e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
2fff6132:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff6136:	f7ff f8bd 	bl	2fff52b4 <stm32mp1_clk_rcc_regs_unlock>
2fff613a:	6963      	ldr	r3, [r4, #20]
2fff613c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff6140:	6163      	str	r3, [r4, #20]
2fff6142:	f8d4 31cc 	ldr.w	r3, [r4, #460]	; 0x1cc
2fff6146:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff614a:	f8c4 31cc 	str.w	r3, [r4, #460]	; 0x1cc
2fff614e:	f8d4 320c 	ldr.w	r3, [r4, #524]	; 0x20c
2fff6152:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff6156:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
2fff615a:	f8d4 324c 	ldr.w	r3, [r4, #588]	; 0x24c
2fff615e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff6162:	f8c4 324c 	str.w	r3, [r4, #588]	; 0x24c
2fff6166:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
2fff616a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff616e:	f8c4 328c 	str.w	r3, [r4, #652]	; 0x28c
2fff6172:	f7ff f899 	bl	2fff52a8 <stm32mp1_clk_rcc_regs_lock>
2fff6176:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff617a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
2fff617e:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff6182:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff6186:	f423 7311 	bic.w	r3, r3, #580	; 0x244
2fff618a:	f023 0301 	bic.w	r3, r3, #1
2fff618e:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff6192:	f7ff f88f 	bl	2fff52b4 <stm32mp1_clk_rcc_regs_unlock>
2fff6196:	f7fc fd73 	bl	2fff2c80 <stm32mp_pwr_regs_lock>
2fff619a:	68fb      	ldr	r3, [r7, #12]
2fff619c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
2fff61a0:	60fb      	str	r3, [r7, #12]
2fff61a2:	f7fc fd79 	bl	2fff2c98 <stm32mp_pwr_regs_unlock>
2fff61a6:	2000      	movs	r0, #0
2fff61a8:	e764      	b.n	2fff6074 <ddr_standby_sr_entry+0xfc>
2fff61aa:	bf00      	nop
2fff61ac:	000f4240 	.word	0x000f4240

2fff61b0 <ddr_read_sr_mode>:
2fff61b0:	b508      	push	{r3, lr}
2fff61b2:	f7fc fd4d 	bl	2fff2c50 <stm32mp_ddrctrl_base>
2fff61b6:	6b03      	ldr	r3, [r0, #48]	; 0x30
2fff61b8:	4a02      	ldr	r2, [pc, #8]	; (2fff61c4 <ddr_read_sr_mode+0x14>)
2fff61ba:	f003 0309 	and.w	r3, r3, #9
2fff61be:	5cd0      	ldrb	r0, [r2, r3]
2fff61c0:	bd08      	pop	{r3, pc}
2fff61c2:	bf00      	nop
2fff61c4:	2fffbaaf 	.word	0x2fffbaaf

2fff61c8 <ddr_set_sr_mode>:
2fff61c8:	2802      	cmp	r0, #2
2fff61ca:	b538      	push	{r3, r4, r5, lr}
2fff61cc:	d064      	beq.n	2fff6298 <ddr_set_sr_mode+0xd0>
2fff61ce:	2803      	cmp	r0, #3
2fff61d0:	f000 809a 	beq.w	2fff6308 <ddr_set_sr_mode+0x140>
2fff61d4:	2801      	cmp	r0, #1
2fff61d6:	f040 80d3 	bne.w	2fff6380 <ddr_set_sr_mode+0x1b8>
2fff61da:	f7fc fd45 	bl	2fff2c68 <stm32mp_rcc_base>
2fff61de:	4604      	mov	r4, r0
2fff61e0:	f7fc fd36 	bl	2fff2c50 <stm32mp_ddrctrl_base>
2fff61e4:	4605      	mov	r5, r0
2fff61e6:	f7ff f85f 	bl	2fff52a8 <stm32mp1_clk_rcc_regs_lock>
2fff61ea:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff61ee:	f043 0302 	orr.w	r3, r3, #2
2fff61f2:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff61f6:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff61fa:	f043 0308 	orr.w	r3, r3, #8
2fff61fe:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6202:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6206:	f043 0301 	orr.w	r3, r3, #1
2fff620a:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff620e:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6212:	f043 0304 	orr.w	r3, r3, #4
2fff6216:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff621a:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff621e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
2fff6222:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6226:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff622a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
2fff622e:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6232:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6236:	f043 0340 	orr.w	r3, r3, #64	; 0x40
2fff623a:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff623e:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6242:	f443 7300 	orr.w	r3, r3, #512	; 0x200
2fff6246:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff624a:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff624e:	f043 0310 	orr.w	r3, r3, #16
2fff6252:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6256:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff625a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
2fff625e:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6262:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6266:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2fff626a:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff626e:	f7ff f821 	bl	2fff52b4 <stm32mp1_clk_rcc_regs_unlock>
2fff6272:	6bab      	ldr	r3, [r5, #56]	; 0x38
2fff6274:	f023 0301 	bic.w	r3, r3, #1
2fff6278:	63ab      	str	r3, [r5, #56]	; 0x38
2fff627a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2fff627c:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2fff6280:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff6284:	636b      	str	r3, [r5, #52]	; 0x34
2fff6286:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff6288:	f023 0308 	bic.w	r3, r3, #8
2fff628c:	632b      	str	r3, [r5, #48]	; 0x30
2fff628e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff6290:	f023 0301 	bic.w	r3, r3, #1
2fff6294:	632b      	str	r3, [r5, #48]	; 0x30
2fff6296:	bd38      	pop	{r3, r4, r5, pc}
2fff6298:	f7fc fce6 	bl	2fff2c68 <stm32mp_rcc_base>
2fff629c:	4604      	mov	r4, r0
2fff629e:	f7fc fcd7 	bl	2fff2c50 <stm32mp_ddrctrl_base>
2fff62a2:	4605      	mov	r5, r0
2fff62a4:	f7ff f800 	bl	2fff52a8 <stm32mp1_clk_rcc_regs_lock>
2fff62a8:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff62ac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff62b0:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff62b4:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff62b8:	f023 0302 	bic.w	r3, r3, #2
2fff62bc:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff62c0:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff62c4:	f023 0308 	bic.w	r3, r3, #8
2fff62c8:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff62cc:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff62d0:	f043 0320 	orr.w	r3, r3, #32
2fff62d4:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff62d8:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff62dc:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2fff62e0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
2fff62e4:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff62e8:	f7fe ffe4 	bl	2fff52b4 <stm32mp1_clk_rcc_regs_unlock>
2fff62ec:	6bab      	ldr	r3, [r5, #56]	; 0x38
2fff62ee:	f043 0301 	orr.w	r3, r3, #1
2fff62f2:	63ab      	str	r3, [r5, #56]	; 0x38
2fff62f4:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2fff62f6:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2fff62fa:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff62fe:	636b      	str	r3, [r5, #52]	; 0x34
2fff6300:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff6302:	f043 0308 	orr.w	r3, r3, #8
2fff6306:	e7c5      	b.n	2fff6294 <ddr_set_sr_mode+0xcc>
2fff6308:	f7fc fcae 	bl	2fff2c68 <stm32mp_rcc_base>
2fff630c:	4604      	mov	r4, r0
2fff630e:	f7fc fc9f 	bl	2fff2c50 <stm32mp_ddrctrl_base>
2fff6312:	4605      	mov	r5, r0
2fff6314:	f7fe ffc8 	bl	2fff52a8 <stm32mp1_clk_rcc_regs_lock>
2fff6318:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff631c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff6320:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6324:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6328:	f043 0302 	orr.w	r3, r3, #2
2fff632c:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6330:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6334:	f043 0308 	orr.w	r3, r3, #8
2fff6338:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff633c:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6340:	f043 0320 	orr.w	r3, r3, #32
2fff6344:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6348:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff634c:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2fff6350:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2fff6354:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6358:	f7fe ffac 	bl	2fff52b4 <stm32mp1_clk_rcc_regs_unlock>
2fff635c:	6bab      	ldr	r3, [r5, #56]	; 0x38
2fff635e:	f043 0301 	orr.w	r3, r3, #1
2fff6362:	63ab      	str	r3, [r5, #56]	; 0x38
2fff6364:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2fff6366:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2fff636a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff636e:	636b      	str	r3, [r5, #52]	; 0x34
2fff6370:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff6372:	f043 0308 	orr.w	r3, r3, #8
2fff6376:	632b      	str	r3, [r5, #48]	; 0x30
2fff6378:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff637a:	f043 0301 	orr.w	r3, r3, #1
2fff637e:	e789      	b.n	2fff6294 <ddr_set_sr_mode+0xcc>
2fff6380:	4803      	ldr	r0, [pc, #12]	; (2fff6390 <ddr_set_sr_mode+0x1c8>)
2fff6382:	f7fc faab 	bl	2fff28dc <tf_log>
2fff6386:	f7fc fb4d 	bl	2fff2a24 <console_flush>
2fff638a:	f002 eb60 	blx	2fff8a4c <do_panic>
2fff638e:	bf00      	nop
2fff6390:	2fffba93 	.word	0x2fffba93

2fff6394 <ddr_save_sr_mode>:
2fff6394:	b508      	push	{r3, lr}
2fff6396:	f7ff ff0b 	bl	2fff61b0 <ddr_read_sr_mode>
2fff639a:	4b01      	ldr	r3, [pc, #4]	; (2fff63a0 <ddr_save_sr_mode+0xc>)
2fff639c:	6018      	str	r0, [r3, #0]
2fff639e:	bd08      	pop	{r3, pc}
2fff63a0:	2fffeabc 	.word	0x2fffeabc

2fff63a4 <ddr_restore_sr_mode>:
2fff63a4:	4b01      	ldr	r3, [pc, #4]	; (2fff63ac <ddr_restore_sr_mode+0x8>)
2fff63a6:	6818      	ldr	r0, [r3, #0]
2fff63a8:	f7ff bf0e 	b.w	2fff61c8 <ddr_set_sr_mode>
2fff63ac:	2fffeabc 	.word	0x2fffeabc

2fff63b0 <fdt32_to_cpu>:
2fff63b0:	ba00      	rev	r0, r0
2fff63b2:	4770      	bx	lr

2fff63b4 <set_gpio>:
2fff63b4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff63b8:	460d      	mov	r5, r1
2fff63ba:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
2fff63be:	4680      	mov	r8, r0
2fff63c0:	9f0d      	ldr	r7, [sp, #52]	; 0x34
2fff63c2:	4693      	mov	fp, r2
2fff63c4:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
2fff63c8:	461e      	mov	r6, r3
2fff63ca:	f7fc fc71 	bl	2fff2cb0 <stm32_get_gpio_bank_base>
2fff63ce:	4604      	mov	r4, r0
2fff63d0:	4640      	mov	r0, r8
2fff63d2:	f7fc fce5 	bl	2fff2da0 <stm32_get_gpio_bank_clock>
2fff63d6:	2d0f      	cmp	r5, #15
2fff63d8:	d903      	bls.n	2fff63e2 <set_gpio+0x2e>
2fff63da:	4835      	ldr	r0, [pc, #212]	; (2fff64b0 <set_gpio+0xfc>)
2fff63dc:	21d0      	movs	r1, #208	; 0xd0
2fff63de:	f003 fb6f 	bl	2fff9ac0 <__assert>
2fff63e2:	9001      	str	r0, [sp, #4]
2fff63e4:	f7fe ff6c 	bl	2fff52c0 <stm32mp_clk_enable>
2fff63e8:	006b      	lsls	r3, r5, #1
2fff63ea:	2103      	movs	r1, #3
2fff63ec:	f8d4 c000 	ldr.w	ip, [r4]
2fff63f0:	f01b 0f10 	tst.w	fp, #16
2fff63f4:	fa01 f103 	lsl.w	r1, r1, r3
2fff63f8:	ea6f 0001 	mvn.w	r0, r1
2fff63fc:	ea2c 0101 	bic.w	r1, ip, r1
2fff6400:	6021      	str	r1, [r4, #0]
2fff6402:	f02b 0110 	bic.w	r1, fp, #16
2fff6406:	f8d4 c000 	ldr.w	ip, [r4]
2fff640a:	fa01 f103 	lsl.w	r1, r1, r3
2fff640e:	ea41 010c 	orr.w	r1, r1, ip
2fff6412:	6021      	str	r1, [r4, #0]
2fff6414:	f04f 0101 	mov.w	r1, #1
2fff6418:	f8d4 c004 	ldr.w	ip, [r4, #4]
2fff641c:	fa01 f105 	lsl.w	r1, r1, r5
2fff6420:	bf14      	ite	ne
2fff6422:	ea4c 0101 	orrne.w	r1, ip, r1
2fff6426:	ea2c 0101 	biceq.w	r1, ip, r1
2fff642a:	2d07      	cmp	r5, #7
2fff642c:	9a01      	ldr	r2, [sp, #4]
2fff642e:	6061      	str	r1, [r4, #4]
2fff6430:	68a1      	ldr	r1, [r4, #8]
2fff6432:	fa06 f603 	lsl.w	r6, r6, r3
2fff6436:	fa0a fa03 	lsl.w	sl, sl, r3
2fff643a:	ea01 0100 	and.w	r1, r1, r0
2fff643e:	60a1      	str	r1, [r4, #8]
2fff6440:	f04f 030f 	mov.w	r3, #15
2fff6444:	68a1      	ldr	r1, [r4, #8]
2fff6446:	ea46 0601 	orr.w	r6, r6, r1
2fff644a:	60a6      	str	r6, [r4, #8]
2fff644c:	68e1      	ldr	r1, [r4, #12]
2fff644e:	ea00 0001 	and.w	r0, r0, r1
2fff6452:	60e0      	str	r0, [r4, #12]
2fff6454:	68e1      	ldr	r1, [r4, #12]
2fff6456:	ea4a 0101 	orr.w	r1, sl, r1
2fff645a:	60e1      	str	r1, [r4, #12]
2fff645c:	d816      	bhi.n	2fff648c <set_gpio+0xd8>
2fff645e:	00a9      	lsls	r1, r5, #2
2fff6460:	6a20      	ldr	r0, [r4, #32]
2fff6462:	408b      	lsls	r3, r1
2fff6464:	ea20 0303 	bic.w	r3, r0, r3
2fff6468:	6223      	str	r3, [r4, #32]
2fff646a:	6a23      	ldr	r3, [r4, #32]
2fff646c:	408f      	lsls	r7, r1
2fff646e:	431f      	orrs	r7, r3
2fff6470:	6227      	str	r7, [r4, #32]
2fff6472:	4610      	mov	r0, r2
2fff6474:	f7fe ff27 	bl	2fff52c6 <stm32mp_clk_disable>
2fff6478:	f1b9 0f02 	cmp.w	r9, #2
2fff647c:	4629      	mov	r1, r5
2fff647e:	4640      	mov	r0, r8
2fff6480:	d111      	bne.n	2fff64a6 <set_gpio+0xf2>
2fff6482:	b003      	add	sp, #12
2fff6484:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff6488:	f7fa bada 	b.w	2fff0a40 <stm32mp_register_secure_gpio>
2fff648c:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff648e:	f1a5 0108 	sub.w	r1, r5, #8
2fff6492:	0089      	lsls	r1, r1, #2
2fff6494:	408b      	lsls	r3, r1
2fff6496:	ea20 0303 	bic.w	r3, r0, r3
2fff649a:	6263      	str	r3, [r4, #36]	; 0x24
2fff649c:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff649e:	408f      	lsls	r7, r1
2fff64a0:	431f      	orrs	r7, r3
2fff64a2:	6267      	str	r7, [r4, #36]	; 0x24
2fff64a4:	e7e5      	b.n	2fff6472 <set_gpio+0xbe>
2fff64a6:	b003      	add	sp, #12
2fff64a8:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff64ac:	f7fa badc 	b.w	2fff0a68 <stm32mp_register_non_secure_gpio>
2fff64b0:	2fffbab9 	.word	0x2fffbab9

2fff64b4 <dt_set_pinctrl_config>:
2fff64b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff64b8:	b091      	sub	sp, #68	; 0x44
2fff64ba:	2700      	movs	r7, #0
2fff64bc:	4604      	mov	r4, r0
2fff64be:	970d      	str	r7, [sp, #52]	; 0x34
2fff64c0:	f001 fd8c 	bl	2fff7fdc <fdt_get_status>
2fff64c4:	9004      	str	r0, [sp, #16]
2fff64c6:	a80e      	add	r0, sp, #56	; 0x38
2fff64c8:	f001 fd7c 	bl	2fff7fc4 <fdt_get_address>
2fff64cc:	b920      	cbnz	r0, 2fff64d8 <dt_set_pinctrl_config+0x24>
2fff64ce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff64d2:	b011      	add	sp, #68	; 0x44
2fff64d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff64d8:	9b04      	ldr	r3, [sp, #16]
2fff64da:	2b00      	cmp	r3, #0
2fff64dc:	d0f7      	beq.n	2fff64ce <dt_set_pinctrl_config+0x1a>
2fff64de:	4a6c      	ldr	r2, [pc, #432]	; (2fff6690 <dt_set_pinctrl_config+0x1dc>)
2fff64e0:	ab0d      	add	r3, sp, #52	; 0x34
2fff64e2:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff64e4:	4621      	mov	r1, r4
2fff64e6:	f003 f94e 	bl	2fff9786 <fdt_getprop>
2fff64ea:	9005      	str	r0, [sp, #20]
2fff64ec:	2800      	cmp	r0, #0
2fff64ee:	d0ee      	beq.n	2fff64ce <dt_set_pinctrl_config+0x1a>
2fff64f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2fff64f2:	ebb7 0f93 	cmp.w	r7, r3, lsr #2
2fff64f6:	d301      	bcc.n	2fff64fc <dt_set_pinctrl_config+0x48>
2fff64f8:	2000      	movs	r0, #0
2fff64fa:	e7ea      	b.n	2fff64d2 <dt_set_pinctrl_config+0x1e>
2fff64fc:	9b05      	ldr	r3, [sp, #20]
2fff64fe:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
2fff6502:	f7ff ff55 	bl	2fff63b0 <fdt32_to_cpu>
2fff6506:	4601      	mov	r1, r0
2fff6508:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff650a:	f003 fa2e 	bl	2fff996a <fdt_node_offset_by_phandle>
2fff650e:	1e01      	subs	r1, r0, #0
2fff6510:	dbdd      	blt.n	2fff64ce <dt_set_pinctrl_config+0x1a>
2fff6512:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff6514:	f002 ffbb 	bl	2fff948e <fdt_first_subnode>
2fff6518:	4605      	mov	r5, r0
2fff651a:	2d00      	cmp	r5, #0
2fff651c:	da01      	bge.n	2fff6522 <dt_set_pinctrl_config+0x6e>
2fff651e:	3701      	adds	r7, #1
2fff6520:	e7e6      	b.n	2fff64f0 <dt_set_pinctrl_config+0x3c>
2fff6522:	9e0e      	ldr	r6, [sp, #56]	; 0x38
2fff6524:	ab0f      	add	r3, sp, #60	; 0x3c
2fff6526:	4a5b      	ldr	r2, [pc, #364]	; (2fff6694 <dt_set_pinctrl_config+0x1e0>)
2fff6528:	4629      	mov	r1, r5
2fff652a:	4630      	mov	r0, r6
2fff652c:	f003 f92b 	bl	2fff9786 <fdt_getprop>
2fff6530:	9006      	str	r0, [sp, #24]
2fff6532:	2800      	cmp	r0, #0
2fff6534:	d0cb      	beq.n	2fff64ce <dt_set_pinctrl_config+0x1a>
2fff6536:	4629      	mov	r1, r5
2fff6538:	4630      	mov	r0, r6
2fff653a:	f003 fa06 	bl	2fff994a <fdt_parent_offset>
2fff653e:	4601      	mov	r1, r0
2fff6540:	4630      	mov	r0, r6
2fff6542:	f003 fa02 	bl	2fff994a <fdt_parent_offset>
2fff6546:	1e03      	subs	r3, r0, #0
2fff6548:	9309      	str	r3, [sp, #36]	; 0x24
2fff654a:	dbc0      	blt.n	2fff64ce <dt_set_pinctrl_config+0x1a>
2fff654c:	4a52      	ldr	r2, [pc, #328]	; (2fff6698 <dt_set_pinctrl_config+0x1e4>)
2fff654e:	2300      	movs	r3, #0
2fff6550:	4629      	mov	r1, r5
2fff6552:	4630      	mov	r0, r6
2fff6554:	f003 f917 	bl	2fff9786 <fdt_getprop>
2fff6558:	b110      	cbz	r0, 2fff6560 <dt_set_pinctrl_config+0xac>
2fff655a:	6800      	ldr	r0, [r0, #0]
2fff655c:	f7ff ff28 	bl	2fff63b0 <fdt32_to_cpu>
2fff6560:	9007      	str	r0, [sp, #28]
2fff6562:	2300      	movs	r3, #0
2fff6564:	4a4d      	ldr	r2, [pc, #308]	; (2fff669c <dt_set_pinctrl_config+0x1e8>)
2fff6566:	4629      	mov	r1, r5
2fff6568:	4630      	mov	r0, r6
2fff656a:	f003 f90c 	bl	2fff9786 <fdt_getprop>
2fff656e:	4603      	mov	r3, r0
2fff6570:	b9a0      	cbnz	r0, 2fff659c <dt_set_pinctrl_config+0xe8>
2fff6572:	4a4b      	ldr	r2, [pc, #300]	; (2fff66a0 <dt_set_pinctrl_config+0x1ec>)
2fff6574:	4629      	mov	r1, r5
2fff6576:	4630      	mov	r0, r6
2fff6578:	f003 f905 	bl	2fff9786 <fdt_getprop>
2fff657c:	2800      	cmp	r0, #0
2fff657e:	bf0c      	ite	eq
2fff6580:	2300      	moveq	r3, #0
2fff6582:	2302      	movne	r3, #2
2fff6584:	9308      	str	r3, [sp, #32]
2fff6586:	f04f 0800 	mov.w	r8, #0
2fff658a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
2fff658c:	ebb8 0f93 	cmp.w	r8, r3, lsr #2
2fff6590:	d306      	bcc.n	2fff65a0 <dt_set_pinctrl_config+0xec>
2fff6592:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff6594:	4629      	mov	r1, r5
2fff6596:	f002 ff8d 	bl	2fff94b4 <fdt_next_subnode>
2fff659a:	e7bd      	b.n	2fff6518 <dt_set_pinctrl_config+0x64>
2fff659c:	2301      	movs	r3, #1
2fff659e:	e7f1      	b.n	2fff6584 <dt_set_pinctrl_config+0xd0>
2fff65a0:	9b06      	ldr	r3, [sp, #24]
2fff65a2:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
2fff65a6:	f7ff ff03 	bl	2fff63b0 <fdt32_to_cpu>
2fff65aa:	f3c0 2303 	ubfx	r3, r0, #8, #4
2fff65ae:	b2c4      	uxtb	r4, r0
2fff65b0:	f3c0 3a04 	ubfx	sl, r0, #12, #5
2fff65b4:	2c10      	cmp	r4, #16
2fff65b6:	930a      	str	r3, [sp, #40]	; 0x28
2fff65b8:	d81c      	bhi.n	2fff65f4 <dt_set_pinctrl_config+0x140>
2fff65ba:	bb0c      	cbnz	r4, 2fff6600 <dt_set_pinctrl_config+0x14c>
2fff65bc:	46a1      	mov	r9, r4
2fff65be:	4a39      	ldr	r2, [pc, #228]	; (2fff66a4 <dt_set_pinctrl_config+0x1f0>)
2fff65c0:	2300      	movs	r3, #0
2fff65c2:	4629      	mov	r1, r5
2fff65c4:	4630      	mov	r0, r6
2fff65c6:	f003 f8de 	bl	2fff9786 <fdt_getprop>
2fff65ca:	b108      	cbz	r0, 2fff65d0 <dt_set_pinctrl_config+0x11c>
2fff65cc:	f044 0410 	orr.w	r4, r4, #16
2fff65d0:	4650      	mov	r0, sl
2fff65d2:	f7fc fb81 	bl	2fff2cd8 <stm32_get_gpio_bank_offset>
2fff65d6:	900b      	str	r0, [sp, #44]	; 0x2c
2fff65d8:	4630      	mov	r0, r6
2fff65da:	9909      	ldr	r1, [sp, #36]	; 0x24
2fff65dc:	f002 ff57 	bl	2fff948e <fdt_first_subnode>
2fff65e0:	2800      	cmp	r0, #0
2fff65e2:	4683      	mov	fp, r0
2fff65e4:	da12      	bge.n	2fff660c <dt_set_pinctrl_config+0x158>
2fff65e6:	4830      	ldr	r0, [pc, #192]	; (2fff66a8 <dt_set_pinctrl_config+0x1f4>)
2fff65e8:	f7fc f978 	bl	2fff28dc <tf_log>
2fff65ec:	f7fc fa1a 	bl	2fff2a24 <console_flush>
2fff65f0:	f002 ea2c 	blx	2fff8a4c <do_panic>
2fff65f4:	2c11      	cmp	r4, #17
2fff65f6:	f04f 0900 	mov.w	r9, #0
2fff65fa:	d105      	bne.n	2fff6608 <dt_set_pinctrl_config+0x154>
2fff65fc:	2403      	movs	r4, #3
2fff65fe:	e7de      	b.n	2fff65be <dt_set_pinctrl_config+0x10a>
2fff6600:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
2fff6604:	2402      	movs	r4, #2
2fff6606:	e7da      	b.n	2fff65be <dt_set_pinctrl_config+0x10a>
2fff6608:	2401      	movs	r4, #1
2fff660a:	e7d8      	b.n	2fff65be <dt_set_pinctrl_config+0x10a>
2fff660c:	4a27      	ldr	r2, [pc, #156]	; (2fff66ac <dt_set_pinctrl_config+0x1f8>)
2fff660e:	2300      	movs	r3, #0
2fff6610:	4659      	mov	r1, fp
2fff6612:	4630      	mov	r0, r6
2fff6614:	f003 f8b7 	bl	2fff9786 <fdt_getprop>
2fff6618:	b920      	cbnz	r0, 2fff6624 <dt_set_pinctrl_config+0x170>
2fff661a:	4659      	mov	r1, fp
2fff661c:	4630      	mov	r0, r6
2fff661e:	f002 ff49 	bl	2fff94b4 <fdt_next_subnode>
2fff6622:	e7dd      	b.n	2fff65e0 <dt_set_pinctrl_config+0x12c>
2fff6624:	4a22      	ldr	r2, [pc, #136]	; (2fff66b0 <dt_set_pinctrl_config+0x1fc>)
2fff6626:	2300      	movs	r3, #0
2fff6628:	4659      	mov	r1, fp
2fff662a:	4630      	mov	r0, r6
2fff662c:	f003 f8ab 	bl	2fff9786 <fdt_getprop>
2fff6630:	2800      	cmp	r0, #0
2fff6632:	d0f2      	beq.n	2fff661a <dt_set_pinctrl_config+0x166>
2fff6634:	6800      	ldr	r0, [r0, #0]
2fff6636:	f7ff febb 	bl	2fff63b0 <fdt32_to_cpu>
2fff663a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
2fff663c:	4283      	cmp	r3, r0
2fff663e:	d1ec      	bne.n	2fff661a <dt_set_pinctrl_config+0x166>
2fff6640:	4658      	mov	r0, fp
2fff6642:	f001 fccb 	bl	2fff7fdc <fdt_get_status>
2fff6646:	2800      	cmp	r0, #0
2fff6648:	d0e7      	beq.n	2fff661a <dt_set_pinctrl_config+0x166>
2fff664a:	f1bb 0f00 	cmp.w	fp, #0
2fff664e:	d0ca      	beq.n	2fff65e6 <dt_set_pinctrl_config+0x132>
2fff6650:	4658      	mov	r0, fp
2fff6652:	f7fe f90f 	bl	2fff4874 <fdt_get_clock_id>
2fff6656:	f1b0 0b00 	subs.w	fp, r0, #0
2fff665a:	f6ff af38 	blt.w	2fff64ce <dt_set_pinctrl_config+0x1a>
2fff665e:	4650      	mov	r0, sl
2fff6660:	f7fc fb9e 	bl	2fff2da0 <stm32_get_gpio_bank_clock>
2fff6664:	4558      	cmp	r0, fp
2fff6666:	d003      	beq.n	2fff6670 <dt_set_pinctrl_config+0x1bc>
2fff6668:	4812      	ldr	r0, [pc, #72]	; (2fff66b4 <dt_set_pinctrl_config+0x200>)
2fff666a:	2192      	movs	r1, #146	; 0x92
2fff666c:	f003 fa28 	bl	2fff9ac0 <__assert>
2fff6670:	9b04      	ldr	r3, [sp, #16]
2fff6672:	4622      	mov	r2, r4
2fff6674:	990a      	ldr	r1, [sp, #40]	; 0x28
2fff6676:	4650      	mov	r0, sl
2fff6678:	9302      	str	r3, [sp, #8]
2fff667a:	f108 0801 	add.w	r8, r8, #1
2fff667e:	9b08      	ldr	r3, [sp, #32]
2fff6680:	f8cd 9004 	str.w	r9, [sp, #4]
2fff6684:	9300      	str	r3, [sp, #0]
2fff6686:	9b07      	ldr	r3, [sp, #28]
2fff6688:	f7ff fe94 	bl	2fff63b4 <set_gpio>
2fff668c:	e77d      	b.n	2fff658a <dt_set_pinctrl_config+0xd6>
2fff668e:	bf00      	nop
2fff6690:	2fffbad6 	.word	0x2fffbad6
2fff6694:	2fffbae0 	.word	0x2fffbae0
2fff6698:	2fffbae7 	.word	0x2fffbae7
2fff669c:	2fffbaf1 	.word	0x2fffbaf1
2fff66a0:	2fffbafe 	.word	0x2fffbafe
2fff66a4:	2fffbb0d 	.word	0x2fffbb0d
2fff66a8:	2fffbb2e 	.word	0x2fffbb2e
2fff66ac:	2fffbb1e 	.word	0x2fffbb1e
2fff66b0:	2fffa810 	.word	0x2fffa810
2fff66b4:	2fffbab9 	.word	0x2fffbab9

2fff66b8 <set_gpio_secure_cfg>:
2fff66b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff66bc:	460f      	mov	r7, r1
2fff66be:	4680      	mov	r8, r0
2fff66c0:	4616      	mov	r6, r2
2fff66c2:	f7fc faf5 	bl	2fff2cb0 <stm32_get_gpio_bank_base>
2fff66c6:	4604      	mov	r4, r0
2fff66c8:	4640      	mov	r0, r8
2fff66ca:	f7fc fb69 	bl	2fff2da0 <stm32_get_gpio_bank_clock>
2fff66ce:	2f0f      	cmp	r7, #15
2fff66d0:	4605      	mov	r5, r0
2fff66d2:	d904      	bls.n	2fff66de <set_gpio_secure_cfg+0x26>
2fff66d4:	f44f 7187 	mov.w	r1, #270	; 0x10e
2fff66d8:	480e      	ldr	r0, [pc, #56]	; (2fff6714 <set_gpio_secure_cfg+0x5c>)
2fff66da:	f003 f9f1 	bl	2fff9ac0 <__assert>
2fff66de:	b136      	cbz	r6, 2fff66ee <set_gpio_secure_cfg+0x36>
2fff66e0:	4640      	mov	r0, r8
2fff66e2:	f7fa f9fb 	bl	2fff0adc <stm32mp_gpio_bank_is_non_secure>
2fff66e6:	b110      	cbz	r0, 2fff66ee <set_gpio_secure_cfg+0x36>
2fff66e8:	f44f 7188 	mov.w	r1, #272	; 0x110
2fff66ec:	e7f4      	b.n	2fff66d8 <set_gpio_secure_cfg+0x20>
2fff66ee:	4628      	mov	r0, r5
2fff66f0:	f7fe fde6 	bl	2fff52c0 <stm32mp_clk_enable>
2fff66f4:	2301      	movs	r3, #1
2fff66f6:	fa03 f107 	lsl.w	r1, r3, r7
2fff66fa:	6b23      	ldr	r3, [r4, #48]	; 0x30
2fff66fc:	b136      	cbz	r6, 2fff670c <set_gpio_secure_cfg+0x54>
2fff66fe:	4319      	orrs	r1, r3
2fff6700:	6321      	str	r1, [r4, #48]	; 0x30
2fff6702:	4628      	mov	r0, r5
2fff6704:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2fff6708:	f7fe bddd 	b.w	2fff52c6 <stm32mp_clk_disable>
2fff670c:	ea23 0101 	bic.w	r1, r3, r1
2fff6710:	e7f6      	b.n	2fff6700 <set_gpio_secure_cfg+0x48>
2fff6712:	bf00      	nop
2fff6714:	2fffbab9 	.word	0x2fffbab9

2fff6718 <i2c_transfer_config.isra.0>:
2fff6718:	b530      	push	{r4, r5, lr}
2fff671a:	9d03      	ldr	r5, [sp, #12]
2fff671c:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff6720:	432b      	orrs	r3, r5
2fff6722:	0412      	lsls	r2, r2, #16
2fff6724:	430b      	orrs	r3, r1
2fff6726:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
2fff672a:	4313      	orrs	r3, r2
2fff672c:	4a04      	ldr	r2, [pc, #16]	; (2fff6740 <i2c_transfer_config.isra.0+0x28>)
2fff672e:	6844      	ldr	r4, [r0, #4]
2fff6730:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
2fff6734:	ea24 0402 	bic.w	r4, r4, r2
2fff6738:	4323      	orrs	r3, r4
2fff673a:	6043      	str	r3, [r0, #4]
2fff673c:	bd30      	pop	{r4, r5, pc}
2fff673e:	bf00      	nop
2fff6740:	03ff63ff 	.word	0x03ff63ff

2fff6744 <i2c_wait_flag>:
2fff6744:	6803      	ldr	r3, [r0, #0]
2fff6746:	f002 0201 	and.w	r2, r2, #1
2fff674a:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff674c:	3318      	adds	r3, #24
2fff674e:	e9dd 4505 	ldrd	r4, r5, [sp, #20]
2fff6752:	681e      	ldr	r6, [r3, #0]
2fff6754:	4231      	tst	r1, r6
2fff6756:	bf14      	ite	ne
2fff6758:	2601      	movne	r6, #1
2fff675a:	2600      	moveq	r6, #0
2fff675c:	4296      	cmp	r6, r2
2fff675e:	d111      	bne.n	2fff6784 <i2c_wait_flag+0x40>
2fff6760:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff6764:	42bd      	cmp	r5, r7
2fff6766:	bf08      	it	eq
2fff6768:	42b4      	cmpeq	r4, r6
2fff676a:	d2f2      	bcs.n	2fff6752 <i2c_wait_flag+0xe>
2fff676c:	6983      	ldr	r3, [r0, #24]
2fff676e:	2220      	movs	r2, #32
2fff6770:	6102      	str	r2, [r0, #16]
2fff6772:	f043 0320 	orr.w	r3, r3, #32
2fff6776:	6183      	str	r3, [r0, #24]
2fff6778:	2300      	movs	r3, #0
2fff677a:	6143      	str	r3, [r0, #20]
2fff677c:	7303      	strb	r3, [r0, #12]
2fff677e:	f06f 0004 	mvn.w	r0, #4
2fff6782:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff6784:	2000      	movs	r0, #0
2fff6786:	e7fc      	b.n	2fff6782 <i2c_wait_flag+0x3e>

2fff6788 <i2c_ack_failed>:
2fff6788:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff678a:	4614      	mov	r4, r2
2fff678c:	6802      	ldr	r2, [r0, #0]
2fff678e:	461d      	mov	r5, r3
2fff6790:	6993      	ldr	r3, [r2, #24]
2fff6792:	f102 0118 	add.w	r1, r2, #24
2fff6796:	f013 0310 	ands.w	r3, r3, #16
2fff679a:	d112      	bne.n	2fff67c2 <i2c_ack_failed+0x3a>
2fff679c:	4618      	mov	r0, r3
2fff679e:	e00f      	b.n	2fff67c0 <i2c_ack_failed+0x38>
2fff67a0:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff67a4:	42bd      	cmp	r5, r7
2fff67a6:	bf08      	it	eq
2fff67a8:	42b4      	cmpeq	r4, r6
2fff67aa:	d20a      	bcs.n	2fff67c2 <i2c_ack_failed+0x3a>
2fff67ac:	6982      	ldr	r2, [r0, #24]
2fff67ae:	6143      	str	r3, [r0, #20]
2fff67b0:	f042 0220 	orr.w	r2, r2, #32
2fff67b4:	6182      	str	r2, [r0, #24]
2fff67b6:	2220      	movs	r2, #32
2fff67b8:	6102      	str	r2, [r0, #16]
2fff67ba:	7303      	strb	r3, [r0, #12]
2fff67bc:	f06f 0004 	mvn.w	r0, #4
2fff67c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff67c2:	680b      	ldr	r3, [r1, #0]
2fff67c4:	f013 0320 	ands.w	r3, r3, #32
2fff67c8:	d0ea      	beq.n	2fff67a0 <i2c_ack_failed+0x18>
2fff67ca:	2310      	movs	r3, #16
2fff67cc:	61d3      	str	r3, [r2, #28]
2fff67ce:	2220      	movs	r2, #32
2fff67d0:	6803      	ldr	r3, [r0, #0]
2fff67d2:	61da      	str	r2, [r3, #28]
2fff67d4:	6803      	ldr	r3, [r0, #0]
2fff67d6:	699a      	ldr	r2, [r3, #24]
2fff67d8:	0794      	lsls	r4, r2, #30
2fff67da:	bf44      	itt	mi
2fff67dc:	2200      	movmi	r2, #0
2fff67de:	629a      	strmi	r2, [r3, #40]	; 0x28
2fff67e0:	6803      	ldr	r3, [r0, #0]
2fff67e2:	699a      	ldr	r2, [r3, #24]
2fff67e4:	07d1      	lsls	r1, r2, #31
2fff67e6:	bf5e      	ittt	pl
2fff67e8:	699a      	ldrpl	r2, [r3, #24]
2fff67ea:	f042 0201 	orrpl.w	r2, r2, #1
2fff67ee:	619a      	strpl	r2, [r3, #24]
2fff67f0:	6802      	ldr	r2, [r0, #0]
2fff67f2:	6853      	ldr	r3, [r2, #4]
2fff67f4:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2fff67f8:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2fff67fc:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2fff6800:	f023 0301 	bic.w	r3, r3, #1
2fff6804:	6053      	str	r3, [r2, #4]
2fff6806:	6983      	ldr	r3, [r0, #24]
2fff6808:	f043 0304 	orr.w	r3, r3, #4
2fff680c:	6183      	str	r3, [r0, #24]
2fff680e:	2320      	movs	r3, #32
2fff6810:	6103      	str	r3, [r0, #16]
2fff6812:	2300      	movs	r3, #0
2fff6814:	6143      	str	r3, [r0, #20]
2fff6816:	e7d0      	b.n	2fff67ba <i2c_ack_failed+0x32>

2fff6818 <i2c_wait_txis>:
2fff6818:	b5d0      	push	{r4, r6, r7, lr}
2fff681a:	4604      	mov	r4, r0
2fff681c:	4616      	mov	r6, r2
2fff681e:	461f      	mov	r7, r3
2fff6820:	6823      	ldr	r3, [r4, #0]
2fff6822:	699b      	ldr	r3, [r3, #24]
2fff6824:	079b      	lsls	r3, r3, #30
2fff6826:	d501      	bpl.n	2fff682c <i2c_wait_txis+0x14>
2fff6828:	2000      	movs	r0, #0
2fff682a:	bdd0      	pop	{r4, r6, r7, pc}
2fff682c:	4632      	mov	r2, r6
2fff682e:	463b      	mov	r3, r7
2fff6830:	4620      	mov	r0, r4
2fff6832:	f7ff ffa9 	bl	2fff6788 <i2c_ack_failed>
2fff6836:	b968      	cbnz	r0, 2fff6854 <i2c_wait_txis+0x3c>
2fff6838:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff683c:	429f      	cmp	r7, r3
2fff683e:	bf08      	it	eq
2fff6840:	4296      	cmpeq	r6, r2
2fff6842:	d2ed      	bcs.n	2fff6820 <i2c_wait_txis+0x8>
2fff6844:	69a3      	ldr	r3, [r4, #24]
2fff6846:	6160      	str	r0, [r4, #20]
2fff6848:	7320      	strb	r0, [r4, #12]
2fff684a:	f043 0320 	orr.w	r3, r3, #32
2fff684e:	61a3      	str	r3, [r4, #24]
2fff6850:	2320      	movs	r3, #32
2fff6852:	6123      	str	r3, [r4, #16]
2fff6854:	f06f 0004 	mvn.w	r0, #4
2fff6858:	e7e7      	b.n	2fff682a <i2c_wait_txis+0x12>

2fff685a <i2c_wait_stop>:
2fff685a:	b5d0      	push	{r4, r6, r7, lr}
2fff685c:	4604      	mov	r4, r0
2fff685e:	4616      	mov	r6, r2
2fff6860:	461f      	mov	r7, r3
2fff6862:	6823      	ldr	r3, [r4, #0]
2fff6864:	699b      	ldr	r3, [r3, #24]
2fff6866:	069b      	lsls	r3, r3, #26
2fff6868:	d501      	bpl.n	2fff686e <i2c_wait_stop+0x14>
2fff686a:	2000      	movs	r0, #0
2fff686c:	bdd0      	pop	{r4, r6, r7, pc}
2fff686e:	4632      	mov	r2, r6
2fff6870:	463b      	mov	r3, r7
2fff6872:	4620      	mov	r0, r4
2fff6874:	f7ff ff88 	bl	2fff6788 <i2c_ack_failed>
2fff6878:	b968      	cbnz	r0, 2fff6896 <i2c_wait_stop+0x3c>
2fff687a:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff687e:	429f      	cmp	r7, r3
2fff6880:	bf08      	it	eq
2fff6882:	4296      	cmpeq	r6, r2
2fff6884:	d2ed      	bcs.n	2fff6862 <i2c_wait_stop+0x8>
2fff6886:	69a3      	ldr	r3, [r4, #24]
2fff6888:	6160      	str	r0, [r4, #20]
2fff688a:	7320      	strb	r0, [r4, #12]
2fff688c:	f043 0320 	orr.w	r3, r3, #32
2fff6890:	61a3      	str	r3, [r4, #24]
2fff6892:	2320      	movs	r3, #32
2fff6894:	6123      	str	r3, [r4, #16]
2fff6896:	f06f 0004 	mvn.w	r0, #4
2fff689a:	e7e7      	b.n	2fff686c <i2c_wait_stop+0x12>

2fff689c <i2c_write>:
2fff689c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff68a0:	b085      	sub	sp, #20
2fff68a2:	469b      	mov	fp, r3
2fff68a4:	4604      	mov	r4, r0
2fff68a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
2fff68a8:	4688      	mov	r8, r1
2fff68aa:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
2fff68ae:	4691      	mov	r9, r2
2fff68b0:	2b10      	cmp	r3, #16
2fff68b2:	d002      	beq.n	2fff68ba <i2c_write+0x1e>
2fff68b4:	2b40      	cmp	r3, #64	; 0x40
2fff68b6:	f040 80d6 	bne.w	2fff6a66 <i2c_write+0x1ca>
2fff68ba:	6923      	ldr	r3, [r4, #16]
2fff68bc:	2b20      	cmp	r3, #32
2fff68be:	f040 80d5 	bne.w	2fff6a6c <i2c_write+0x1d0>
2fff68c2:	7b23      	ldrb	r3, [r4, #12]
2fff68c4:	2b00      	cmp	r3, #0
2fff68c6:	f040 80d1 	bne.w	2fff6a6c <i2c_write+0x1d0>
2fff68ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff68cc:	2b00      	cmp	r3, #0
2fff68ce:	f000 80d0 	beq.w	2fff6a72 <i2c_write+0x1d6>
2fff68d2:	2d00      	cmp	r5, #0
2fff68d4:	f000 80cd 	beq.w	2fff6a72 <i2c_write+0x1d6>
2fff68d8:	68a0      	ldr	r0, [r4, #8]
2fff68da:	2601      	movs	r6, #1
2fff68dc:	f7fe fcf0 	bl	2fff52c0 <stm32mp_clk_enable>
2fff68e0:	7326      	strb	r6, [r4, #12]
2fff68e2:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff68e6:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff68ea:	f246 11a8 	movw	r1, #25000	; 0x61a8
2fff68ee:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff68f2:	fba0 0101 	umull	r0, r1, r0, r1
2fff68f6:	4a6d      	ldr	r2, [pc, #436]	; (2fff6aac <i2c_write+0x210>)
2fff68f8:	2300      	movs	r3, #0
2fff68fa:	f002 ea46 	blx	2fff8d88 <__aeabi_uldivmod>
2fff68fe:	9b02      	ldr	r3, [sp, #8]
2fff6900:	4632      	mov	r2, r6
2fff6902:	18c0      	adds	r0, r0, r3
2fff6904:	9b03      	ldr	r3, [sp, #12]
2fff6906:	eb43 0101 	adc.w	r1, r3, r1
2fff690a:	e9cd 0100 	strd	r0, r1, [sp]
2fff690e:	f44f 4100 	mov.w	r1, #32768	; 0x8000
2fff6912:	4620      	mov	r0, r4
2fff6914:	f7ff ff16 	bl	2fff6744 <i2c_wait_flag>
2fff6918:	b150      	cbz	r0, 2fff6930 <i2c_write+0x94>
2fff691a:	f06f 0504 	mvn.w	r5, #4
2fff691e:	68a0      	ldr	r0, [r4, #8]
2fff6920:	2300      	movs	r3, #0
2fff6922:	7323      	strb	r3, [r4, #12]
2fff6924:	f7fe fccf 	bl	2fff52c6 <stm32mp_clk_disable>
2fff6928:	4628      	mov	r0, r5
2fff692a:	b005      	add	sp, #20
2fff692c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff6930:	61a0      	str	r0, [r4, #24]
2fff6932:	2321      	movs	r3, #33	; 0x21
2fff6934:	6123      	str	r3, [r4, #16]
2fff6936:	462f      	mov	r7, r5
2fff6938:	9b11      	ldr	r3, [sp, #68]	; 0x44
2fff693a:	6163      	str	r3, [r4, #20]
2fff693c:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff6940:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff6944:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff6948:	9b10      	ldr	r3, [sp, #64]	; 0x40
2fff694a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff694e:	4a57      	ldr	r2, [pc, #348]	; (2fff6aac <i2c_write+0x210>)
2fff6950:	4359      	muls	r1, r3
2fff6952:	2300      	movs	r3, #0
2fff6954:	fba1 0100 	umull	r0, r1, r1, r0
2fff6958:	f002 ea16 	blx	2fff8d88 <__aeabi_uldivmod>
2fff695c:	9b02      	ldr	r3, [sp, #8]
2fff695e:	18c6      	adds	r6, r0, r3
2fff6960:	9b03      	ldr	r3, [sp, #12]
2fff6962:	6820      	ldr	r0, [r4, #0]
2fff6964:	eb41 0a03 	adc.w	sl, r1, r3
2fff6968:	9b11      	ldr	r3, [sp, #68]	; 0x44
2fff696a:	2b40      	cmp	r3, #64	; 0x40
2fff696c:	4b50      	ldr	r3, [pc, #320]	; (2fff6ab0 <i2c_write+0x214>)
2fff696e:	9300      	str	r3, [sp, #0]
2fff6970:	d168      	bne.n	2fff6a44 <i2c_write+0x1a8>
2fff6972:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff6976:	465a      	mov	r2, fp
2fff6978:	4641      	mov	r1, r8
2fff697a:	f7ff fecd 	bl	2fff6718 <i2c_transfer_config.isra.0>
2fff697e:	4632      	mov	r2, r6
2fff6980:	4653      	mov	r3, sl
2fff6982:	4620      	mov	r0, r4
2fff6984:	f7ff ff48 	bl	2fff6818 <i2c_wait_txis>
2fff6988:	2800      	cmp	r0, #0
2fff698a:	d1c6      	bne.n	2fff691a <i2c_write+0x7e>
2fff698c:	6823      	ldr	r3, [r4, #0]
2fff698e:	f1bb 0f01 	cmp.w	fp, #1
2fff6992:	d119      	bne.n	2fff69c8 <i2c_write+0x12c>
2fff6994:	fa5f f989 	uxtb.w	r9, r9
2fff6998:	f883 9028 	strb.w	r9, [r3, #40]	; 0x28
2fff699c:	2200      	movs	r2, #0
2fff699e:	2180      	movs	r1, #128	; 0x80
2fff69a0:	4620      	mov	r0, r4
2fff69a2:	e9cd 6a00 	strd	r6, sl, [sp]
2fff69a6:	f7ff fecd 	bl	2fff6744 <i2c_wait_flag>
2fff69aa:	4603      	mov	r3, r0
2fff69ac:	2800      	cmp	r0, #0
2fff69ae:	d1b4      	bne.n	2fff691a <i2c_write+0x7e>
2fff69b0:	6820      	ldr	r0, [r4, #0]
2fff69b2:	2dff      	cmp	r5, #255	; 0xff
2fff69b4:	9300      	str	r3, [sp, #0]
2fff69b6:	d916      	bls.n	2fff69e6 <i2c_write+0x14a>
2fff69b8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff69bc:	22ff      	movs	r2, #255	; 0xff
2fff69be:	4641      	mov	r1, r8
2fff69c0:	25ff      	movs	r5, #255	; 0xff
2fff69c2:	f7ff fea9 	bl	2fff6718 <i2c_transfer_config.isra.0>
2fff69c6:	e014      	b.n	2fff69f2 <i2c_write+0x156>
2fff69c8:	ea4f 2219 	mov.w	r2, r9, lsr #8
2fff69cc:	4620      	mov	r0, r4
2fff69ce:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2fff69d2:	4632      	mov	r2, r6
2fff69d4:	4653      	mov	r3, sl
2fff69d6:	f7ff ff1f 	bl	2fff6818 <i2c_wait_txis>
2fff69da:	2800      	cmp	r0, #0
2fff69dc:	d19d      	bne.n	2fff691a <i2c_write+0x7e>
2fff69de:	6823      	ldr	r3, [r4, #0]
2fff69e0:	fa5f f989 	uxtb.w	r9, r9
2fff69e4:	e7d8      	b.n	2fff6998 <i2c_write+0xfc>
2fff69e6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff69ea:	462a      	mov	r2, r5
2fff69ec:	4641      	mov	r1, r8
2fff69ee:	f7ff fe93 	bl	2fff6718 <i2c_transfer_config.isra.0>
2fff69f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff69f4:	f103 39ff 	add.w	r9, r3, #4294967295	; 0xffffffff
2fff69f8:	4632      	mov	r2, r6
2fff69fa:	4653      	mov	r3, sl
2fff69fc:	4620      	mov	r0, r4
2fff69fe:	f7ff ff0b 	bl	2fff6818 <i2c_wait_txis>
2fff6a02:	2800      	cmp	r0, #0
2fff6a04:	d189      	bne.n	2fff691a <i2c_write+0x7e>
2fff6a06:	f819 2f01 	ldrb.w	r2, [r9, #1]!
2fff6a0a:	3f01      	subs	r7, #1
2fff6a0c:	6823      	ldr	r3, [r4, #0]
2fff6a0e:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2fff6a12:	d031      	beq.n	2fff6a78 <i2c_write+0x1dc>
2fff6a14:	3d01      	subs	r5, #1
2fff6a16:	d1ef      	bne.n	2fff69f8 <i2c_write+0x15c>
2fff6a18:	462a      	mov	r2, r5
2fff6a1a:	2180      	movs	r1, #128	; 0x80
2fff6a1c:	4620      	mov	r0, r4
2fff6a1e:	e9cd 6a00 	strd	r6, sl, [sp]
2fff6a22:	f7ff fe8f 	bl	2fff6744 <i2c_wait_flag>
2fff6a26:	2800      	cmp	r0, #0
2fff6a28:	f47f af77 	bne.w	2fff691a <i2c_write+0x7e>
2fff6a2c:	6820      	ldr	r0, [r4, #0]
2fff6a2e:	2fff      	cmp	r7, #255	; 0xff
2fff6a30:	9500      	str	r5, [sp, #0]
2fff6a32:	d910      	bls.n	2fff6a56 <i2c_write+0x1ba>
2fff6a34:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff6a38:	22ff      	movs	r2, #255	; 0xff
2fff6a3a:	4641      	mov	r1, r8
2fff6a3c:	25ff      	movs	r5, #255	; 0xff
2fff6a3e:	f7ff fe6b 	bl	2fff6718 <i2c_transfer_config.isra.0>
2fff6a42:	e7d9      	b.n	2fff69f8 <i2c_write+0x15c>
2fff6a44:	2dff      	cmp	r5, #255	; 0xff
2fff6a46:	d8b7      	bhi.n	2fff69b8 <i2c_write+0x11c>
2fff6a48:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff6a4c:	462a      	mov	r2, r5
2fff6a4e:	4641      	mov	r1, r8
2fff6a50:	f7ff fe62 	bl	2fff6718 <i2c_transfer_config.isra.0>
2fff6a54:	e7cd      	b.n	2fff69f2 <i2c_write+0x156>
2fff6a56:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff6a5a:	b2ba      	uxth	r2, r7
2fff6a5c:	4641      	mov	r1, r8
2fff6a5e:	463d      	mov	r5, r7
2fff6a60:	f7ff fe5a 	bl	2fff6718 <i2c_transfer_config.isra.0>
2fff6a64:	e7c8      	b.n	2fff69f8 <i2c_write+0x15c>
2fff6a66:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff6a6a:	e75d      	b.n	2fff6928 <i2c_write+0x8c>
2fff6a6c:	f06f 050f 	mvn.w	r5, #15
2fff6a70:	e75a      	b.n	2fff6928 <i2c_write+0x8c>
2fff6a72:	f06f 0515 	mvn.w	r5, #21
2fff6a76:	e757      	b.n	2fff6928 <i2c_write+0x8c>
2fff6a78:	4632      	mov	r2, r6
2fff6a7a:	4653      	mov	r3, sl
2fff6a7c:	4620      	mov	r0, r4
2fff6a7e:	f7ff feec 	bl	2fff685a <i2c_wait_stop>
2fff6a82:	4605      	mov	r5, r0
2fff6a84:	2800      	cmp	r0, #0
2fff6a86:	f47f af48 	bne.w	2fff691a <i2c_write+0x7e>
2fff6a8a:	6823      	ldr	r3, [r4, #0]
2fff6a8c:	2220      	movs	r2, #32
2fff6a8e:	61da      	str	r2, [r3, #28]
2fff6a90:	6821      	ldr	r1, [r4, #0]
2fff6a92:	684b      	ldr	r3, [r1, #4]
2fff6a94:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2fff6a98:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2fff6a9c:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2fff6aa0:	f023 0301 	bic.w	r3, r3, #1
2fff6aa4:	604b      	str	r3, [r1, #4]
2fff6aa6:	6122      	str	r2, [r4, #16]
2fff6aa8:	6167      	str	r7, [r4, #20]
2fff6aaa:	e738      	b.n	2fff691e <i2c_write+0x82>
2fff6aac:	000f4240 	.word	0x000f4240
2fff6ab0:	80002000 	.word	0x80002000

2fff6ab4 <i2c_read.isra.0>:
2fff6ab4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff6ab8:	b085      	sub	sp, #20
2fff6aba:	4699      	mov	r9, r3
2fff6abc:	4604      	mov	r4, r0
2fff6abe:	9b10      	ldr	r3, [sp, #64]	; 0x40
2fff6ac0:	4688      	mov	r8, r1
2fff6ac2:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
2fff6ac6:	4617      	mov	r7, r2
2fff6ac8:	2b10      	cmp	r3, #16
2fff6aca:	d002      	beq.n	2fff6ad2 <i2c_read.isra.0+0x1e>
2fff6acc:	2b40      	cmp	r3, #64	; 0x40
2fff6ace:	f040 80be 	bne.w	2fff6c4e <i2c_read.isra.0+0x19a>
2fff6ad2:	6923      	ldr	r3, [r4, #16]
2fff6ad4:	2b20      	cmp	r3, #32
2fff6ad6:	f040 80bd 	bne.w	2fff6c54 <i2c_read.isra.0+0x1a0>
2fff6ada:	7b23      	ldrb	r3, [r4, #12]
2fff6adc:	2b00      	cmp	r3, #0
2fff6ade:	f040 80b9 	bne.w	2fff6c54 <i2c_read.isra.0+0x1a0>
2fff6ae2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff6ae4:	2b00      	cmp	r3, #0
2fff6ae6:	f000 80b8 	beq.w	2fff6c5a <i2c_read.isra.0+0x1a6>
2fff6aea:	f1ba 0f00 	cmp.w	sl, #0
2fff6aee:	f000 80b4 	beq.w	2fff6c5a <i2c_read.isra.0+0x1a6>
2fff6af2:	68a0      	ldr	r0, [r4, #8]
2fff6af4:	f04f 0b01 	mov.w	fp, #1
2fff6af8:	f7fe fbe2 	bl	2fff52c0 <stm32mp_clk_enable>
2fff6afc:	f884 b00c 	strb.w	fp, [r4, #12]
2fff6b00:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff6b04:	ec56 5f0e 	mrrc	15, 0, r5, r6, cr14
2fff6b08:	4a62      	ldr	r2, [pc, #392]	; (2fff6c94 <i2c_read.isra.0+0x1e0>)
2fff6b0a:	f246 11a8 	movw	r1, #25000	; 0x61a8
2fff6b0e:	2300      	movs	r3, #0
2fff6b10:	fba0 0101 	umull	r0, r1, r0, r1
2fff6b14:	f002 e938 	blx	2fff8d88 <__aeabi_uldivmod>
2fff6b18:	1943      	adds	r3, r0, r5
2fff6b1a:	465a      	mov	r2, fp
2fff6b1c:	eb41 0606 	adc.w	r6, r1, r6
2fff6b20:	4620      	mov	r0, r4
2fff6b22:	e9cd 3600 	strd	r3, r6, [sp]
2fff6b26:	9303      	str	r3, [sp, #12]
2fff6b28:	f44f 4100 	mov.w	r1, #32768	; 0x8000
2fff6b2c:	f7ff fe0a 	bl	2fff6744 <i2c_wait_flag>
2fff6b30:	4603      	mov	r3, r0
2fff6b32:	b150      	cbz	r0, 2fff6b4a <i2c_read.isra.0+0x96>
2fff6b34:	f06f 0504 	mvn.w	r5, #4
2fff6b38:	68a0      	ldr	r0, [r4, #8]
2fff6b3a:	2300      	movs	r3, #0
2fff6b3c:	7323      	strb	r3, [r4, #12]
2fff6b3e:	f7fe fbc2 	bl	2fff52c6 <stm32mp_clk_disable>
2fff6b42:	4628      	mov	r0, r5
2fff6b44:	b005      	add	sp, #20
2fff6b46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff6b4a:	61a0      	str	r0, [r4, #24]
2fff6b4c:	2222      	movs	r2, #34	; 0x22
2fff6b4e:	6122      	str	r2, [r4, #16]
2fff6b50:	9a10      	ldr	r2, [sp, #64]	; 0x40
2fff6b52:	6162      	str	r2, [r4, #20]
2fff6b54:	2a40      	cmp	r2, #64	; 0x40
2fff6b56:	d00d      	beq.n	2fff6b74 <i2c_read.isra.0+0xc0>
2fff6b58:	6820      	ldr	r0, [r4, #0]
2fff6b5a:	4657      	mov	r7, sl
2fff6b5c:	4b4e      	ldr	r3, [pc, #312]	; (2fff6c98 <i2c_read.isra.0+0x1e4>)
2fff6b5e:	2fff      	cmp	r7, #255	; 0xff
2fff6b60:	d835      	bhi.n	2fff6bce <i2c_read.isra.0+0x11a>
2fff6b62:	9300      	str	r3, [sp, #0]
2fff6b64:	4652      	mov	r2, sl
2fff6b66:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff6b6a:	4641      	mov	r1, r8
2fff6b6c:	46d1      	mov	r9, sl
2fff6b6e:	f7ff fdd3 	bl	2fff6718 <i2c_transfer_config.isra.0>
2fff6b72:	e035      	b.n	2fff6be0 <i2c_read.isra.0+0x12c>
2fff6b74:	4a49      	ldr	r2, [pc, #292]	; (2fff6c9c <i2c_read.isra.0+0x1e8>)
2fff6b76:	4641      	mov	r1, r8
2fff6b78:	6820      	ldr	r0, [r4, #0]
2fff6b7a:	9200      	str	r2, [sp, #0]
2fff6b7c:	464a      	mov	r2, r9
2fff6b7e:	f7ff fdcb 	bl	2fff6718 <i2c_transfer_config.isra.0>
2fff6b82:	9a03      	ldr	r2, [sp, #12]
2fff6b84:	4633      	mov	r3, r6
2fff6b86:	4620      	mov	r0, r4
2fff6b88:	f7ff fe46 	bl	2fff6818 <i2c_wait_txis>
2fff6b8c:	2800      	cmp	r0, #0
2fff6b8e:	d1d1      	bne.n	2fff6b34 <i2c_read.isra.0+0x80>
2fff6b90:	6823      	ldr	r3, [r4, #0]
2fff6b92:	f1b9 0f01 	cmp.w	r9, #1
2fff6b96:	d10d      	bne.n	2fff6bb4 <i2c_read.isra.0+0x100>
2fff6b98:	b2ff      	uxtb	r7, r7
2fff6b9a:	f883 7028 	strb.w	r7, [r3, #40]	; 0x28
2fff6b9e:	2200      	movs	r2, #0
2fff6ba0:	9b03      	ldr	r3, [sp, #12]
2fff6ba2:	2140      	movs	r1, #64	; 0x40
2fff6ba4:	4620      	mov	r0, r4
2fff6ba6:	e9cd 3600 	strd	r3, r6, [sp]
2fff6baa:	f7ff fdcb 	bl	2fff6744 <i2c_wait_flag>
2fff6bae:	2800      	cmp	r0, #0
2fff6bb0:	d0d2      	beq.n	2fff6b58 <i2c_read.isra.0+0xa4>
2fff6bb2:	e7bf      	b.n	2fff6b34 <i2c_read.isra.0+0x80>
2fff6bb4:	0a3a      	lsrs	r2, r7, #8
2fff6bb6:	4620      	mov	r0, r4
2fff6bb8:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2fff6bbc:	4633      	mov	r3, r6
2fff6bbe:	9a03      	ldr	r2, [sp, #12]
2fff6bc0:	f7ff fe2a 	bl	2fff6818 <i2c_wait_txis>
2fff6bc4:	2800      	cmp	r0, #0
2fff6bc6:	d1b5      	bne.n	2fff6b34 <i2c_read.isra.0+0x80>
2fff6bc8:	6823      	ldr	r3, [r4, #0]
2fff6bca:	b2ff      	uxtb	r7, r7
2fff6bcc:	e7e5      	b.n	2fff6b9a <i2c_read.isra.0+0xe6>
2fff6bce:	9300      	str	r3, [sp, #0]
2fff6bd0:	22ff      	movs	r2, #255	; 0xff
2fff6bd2:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff6bd6:	4641      	mov	r1, r8
2fff6bd8:	f04f 09ff 	mov.w	r9, #255	; 0xff
2fff6bdc:	f7ff fd9c 	bl	2fff6718 <i2c_transfer_config.isra.0>
2fff6be0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff6be2:	f103 3aff 	add.w	sl, r3, #4294967295	; 0xffffffff
2fff6be6:	9b03      	ldr	r3, [sp, #12]
2fff6be8:	2200      	movs	r2, #0
2fff6bea:	2104      	movs	r1, #4
2fff6bec:	4620      	mov	r0, r4
2fff6bee:	e9cd 3600 	strd	r3, r6, [sp]
2fff6bf2:	f7ff fda7 	bl	2fff6744 <i2c_wait_flag>
2fff6bf6:	2800      	cmp	r0, #0
2fff6bf8:	d19c      	bne.n	2fff6b34 <i2c_read.isra.0+0x80>
2fff6bfa:	6823      	ldr	r3, [r4, #0]
2fff6bfc:	3f01      	subs	r7, #1
2fff6bfe:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
2fff6c02:	f80a 3f01 	strb.w	r3, [sl, #1]!
2fff6c06:	d02b      	beq.n	2fff6c60 <i2c_read.isra.0+0x1ac>
2fff6c08:	f1b9 0901 	subs.w	r9, r9, #1
2fff6c0c:	d1eb      	bne.n	2fff6be6 <i2c_read.isra.0+0x132>
2fff6c0e:	9b03      	ldr	r3, [sp, #12]
2fff6c10:	464a      	mov	r2, r9
2fff6c12:	2180      	movs	r1, #128	; 0x80
2fff6c14:	4620      	mov	r0, r4
2fff6c16:	e9cd 3600 	strd	r3, r6, [sp]
2fff6c1a:	f7ff fd93 	bl	2fff6744 <i2c_wait_flag>
2fff6c1e:	2800      	cmp	r0, #0
2fff6c20:	d188      	bne.n	2fff6b34 <i2c_read.isra.0+0x80>
2fff6c22:	6820      	ldr	r0, [r4, #0]
2fff6c24:	2fff      	cmp	r7, #255	; 0xff
2fff6c26:	f8cd 9000 	str.w	r9, [sp]
2fff6c2a:	d908      	bls.n	2fff6c3e <i2c_read.isra.0+0x18a>
2fff6c2c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff6c30:	22ff      	movs	r2, #255	; 0xff
2fff6c32:	4641      	mov	r1, r8
2fff6c34:	f04f 09ff 	mov.w	r9, #255	; 0xff
2fff6c38:	f7ff fd6e 	bl	2fff6718 <i2c_transfer_config.isra.0>
2fff6c3c:	e7d3      	b.n	2fff6be6 <i2c_read.isra.0+0x132>
2fff6c3e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff6c42:	b2ba      	uxth	r2, r7
2fff6c44:	4641      	mov	r1, r8
2fff6c46:	46b9      	mov	r9, r7
2fff6c48:	f7ff fd66 	bl	2fff6718 <i2c_transfer_config.isra.0>
2fff6c4c:	e7cb      	b.n	2fff6be6 <i2c_read.isra.0+0x132>
2fff6c4e:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff6c52:	e776      	b.n	2fff6b42 <i2c_read.isra.0+0x8e>
2fff6c54:	f06f 050f 	mvn.w	r5, #15
2fff6c58:	e773      	b.n	2fff6b42 <i2c_read.isra.0+0x8e>
2fff6c5a:	f06f 0515 	mvn.w	r5, #21
2fff6c5e:	e770      	b.n	2fff6b42 <i2c_read.isra.0+0x8e>
2fff6c60:	9a03      	ldr	r2, [sp, #12]
2fff6c62:	4633      	mov	r3, r6
2fff6c64:	4620      	mov	r0, r4
2fff6c66:	f7ff fdf8 	bl	2fff685a <i2c_wait_stop>
2fff6c6a:	4605      	mov	r5, r0
2fff6c6c:	2800      	cmp	r0, #0
2fff6c6e:	f47f af61 	bne.w	2fff6b34 <i2c_read.isra.0+0x80>
2fff6c72:	6823      	ldr	r3, [r4, #0]
2fff6c74:	2220      	movs	r2, #32
2fff6c76:	61da      	str	r2, [r3, #28]
2fff6c78:	6821      	ldr	r1, [r4, #0]
2fff6c7a:	684b      	ldr	r3, [r1, #4]
2fff6c7c:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2fff6c80:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2fff6c84:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2fff6c88:	f023 0301 	bic.w	r3, r3, #1
2fff6c8c:	604b      	str	r3, [r1, #4]
2fff6c8e:	6122      	str	r2, [r4, #16]
2fff6c90:	6167      	str	r7, [r4, #20]
2fff6c92:	e751      	b.n	2fff6b38 <i2c_read.isra.0+0x84>
2fff6c94:	000f4240 	.word	0x000f4240
2fff6c98:	80002400 	.word	0x80002400
2fff6c9c:	80002000 	.word	0x80002000

2fff6ca0 <stm32_i2c_get_setup_from_fdt>:
2fff6ca0:	b538      	push	{r3, r4, r5, lr}
2fff6ca2:	2219      	movs	r2, #25
2fff6ca4:	460d      	mov	r5, r1
2fff6ca6:	4604      	mov	r4, r0
2fff6ca8:	490f      	ldr	r1, [pc, #60]	; (2fff6ce8 <stm32_i2c_get_setup_from_fdt+0x48>)
2fff6caa:	f001 f9f7 	bl	2fff809c <fdt_read_uint32_default>
2fff6cae:	61e8      	str	r0, [r5, #28]
2fff6cb0:	220a      	movs	r2, #10
2fff6cb2:	490e      	ldr	r1, [pc, #56]	; (2fff6cec <stm32_i2c_get_setup_from_fdt+0x4c>)
2fff6cb4:	4620      	mov	r0, r4
2fff6cb6:	f001 f9f1 	bl	2fff809c <fdt_read_uint32_default>
2fff6cba:	6228      	str	r0, [r5, #32]
2fff6cbc:	4620      	mov	r0, r4
2fff6cbe:	4a0c      	ldr	r2, [pc, #48]	; (2fff6cf0 <stm32_i2c_get_setup_from_fdt+0x50>)
2fff6cc0:	490c      	ldr	r1, [pc, #48]	; (2fff6cf4 <stm32_i2c_get_setup_from_fdt+0x54>)
2fff6cc2:	f001 f9eb 	bl	2fff809c <fdt_read_uint32_default>
2fff6cc6:	4a0c      	ldr	r2, [pc, #48]	; (2fff6cf8 <stm32_i2c_get_setup_from_fdt+0x58>)
2fff6cc8:	4601      	mov	r1, r0
2fff6cca:	4290      	cmp	r0, r2
2fff6ccc:	d805      	bhi.n	2fff6cda <stm32_i2c_get_setup_from_fdt+0x3a>
2fff6cce:	6268      	str	r0, [r5, #36]	; 0x24
2fff6cd0:	4620      	mov	r0, r4
2fff6cd2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff6cd6:	f7ff bbed 	b.w	2fff64b4 <dt_set_pinctrl_config>
2fff6cda:	4808      	ldr	r0, [pc, #32]	; (2fff6cfc <stm32_i2c_get_setup_from_fdt+0x5c>)
2fff6cdc:	f7fb fdfe 	bl	2fff28dc <tf_log>
2fff6ce0:	f06f 000e 	mvn.w	r0, #14
2fff6ce4:	bd38      	pop	{r3, r4, r5, pc}
2fff6ce6:	bf00      	nop
2fff6ce8:	2fffbb4b 	.word	0x2fffbb4b
2fff6cec:	2fffbb62 	.word	0x2fffbb62
2fff6cf0:	000186a0 	.word	0x000186a0
2fff6cf4:	2fffb518 	.word	0x2fffb518
2fff6cf8:	000f4240 	.word	0x000f4240
2fff6cfc:	2fffbb7a 	.word	0x2fffbb7a

2fff6d00 <stm32_i2c_init>:
2fff6d00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff6d04:	460d      	mov	r5, r1
2fff6d06:	b0a5      	sub	sp, #148	; 0x94
2fff6d08:	4604      	mov	r4, r0
2fff6d0a:	2800      	cmp	r0, #0
2fff6d0c:	f000 8213 	beq.w	2fff7136 <stm32_i2c_init+0x436>
2fff6d10:	6903      	ldr	r3, [r0, #16]
2fff6d12:	b903      	cbnz	r3, 2fff6d16 <stm32_i2c_init+0x16>
2fff6d14:	7303      	strb	r3, [r0, #12]
2fff6d16:	68a0      	ldr	r0, [r4, #8]
2fff6d18:	2324      	movs	r3, #36	; 0x24
2fff6d1a:	6123      	str	r3, [r4, #16]
2fff6d1c:	f7fe fafc 	bl	2fff5318 <stm32mp_clk_get_rate>
2fff6d20:	4683      	mov	fp, r0
2fff6d22:	b940      	cbnz	r0, 2fff6d36 <stm32_i2c_init+0x36>
2fff6d24:	489a      	ldr	r0, [pc, #616]	; (2fff6f90 <stm32_i2c_init+0x290>)
2fff6d26:	f06f 0815 	mvn.w	r8, #21
2fff6d2a:	f7fb fdd7 	bl	2fff28dc <tf_log>
2fff6d2e:	4640      	mov	r0, r8
2fff6d30:	b025      	add	sp, #148	; 0x94
2fff6d32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff6d36:	6a23      	ldr	r3, [r4, #32]
2fff6d38:	4298      	cmp	r0, r3
2fff6d3a:	d02d      	beq.n	2fff6d98 <stm32_i2c_init+0x98>
2fff6d3c:	4b95      	ldr	r3, [pc, #596]	; (2fff6f94 <stm32_i2c_init+0x294>)
2fff6d3e:	eb03 0650 	add.w	r6, r3, r0, lsr #1
2fff6d42:	9306      	str	r3, [sp, #24]
2fff6d44:	fbb6 f2f0 	udiv	r2, r6, r0
2fff6d48:	9203      	str	r2, [sp, #12]
2fff6d4a:	0052      	lsls	r2, r2, #1
2fff6d4c:	920b      	str	r2, [sp, #44]	; 0x2c
2fff6d4e:	6a69      	ldr	r1, [r5, #36]	; 0x24
2fff6d50:	4b91      	ldr	r3, [pc, #580]	; (2fff6f98 <stm32_i2c_init+0x298>)
2fff6d52:	4299      	cmp	r1, r3
2fff6d54:	d97f      	bls.n	2fff6e56 <stm32_i2c_init+0x156>
2fff6d56:	4b91      	ldr	r3, [pc, #580]	; (2fff6f9c <stm32_i2c_init+0x29c>)
2fff6d58:	4299      	cmp	r1, r3
2fff6d5a:	d97f      	bls.n	2fff6e5c <stm32_i2c_init+0x15c>
2fff6d5c:	4b90      	ldr	r3, [pc, #576]	; (2fff6fa0 <stm32_i2c_init+0x2a0>)
2fff6d5e:	4299      	cmp	r1, r3
2fff6d60:	d87f      	bhi.n	2fff6e62 <stm32_i2c_init+0x162>
2fff6d62:	f04f 0902 	mov.w	r9, #2
2fff6d66:	4a8f      	ldr	r2, [pc, #572]	; (2fff6fa4 <stm32_i2c_init+0x2a4>)
2fff6d68:	ea4f 1349 	mov.w	r3, r9, lsl #5
2fff6d6c:	eb02 1049 	add.w	r0, r2, r9, lsl #5
2fff6d70:	f852 a003 	ldr.w	sl, [r2, r3]
2fff6d74:	9b06      	ldr	r3, [sp, #24]
2fff6d76:	6882      	ldr	r2, [r0, #8]
2fff6d78:	eb03 035a 	add.w	r3, r3, sl, lsr #1
2fff6d7c:	69e9      	ldr	r1, [r5, #28]
2fff6d7e:	fbb3 f3fa 	udiv	r3, r3, sl
2fff6d82:	4291      	cmp	r1, r2
2fff6d84:	9309      	str	r3, [sp, #36]	; 0x24
2fff6d86:	6840      	ldr	r0, [r0, #4]
2fff6d88:	6a2b      	ldr	r3, [r5, #32]
2fff6d8a:	f240 8083 	bls.w	2fff6e94 <stm32_i2c_init+0x194>
2fff6d8e:	9000      	str	r0, [sp, #0]
2fff6d90:	4885      	ldr	r0, [pc, #532]	; (2fff6fa8 <stm32_i2c_init+0x2a8>)
2fff6d92:	f7fb fda3 	bl	2fff28dc <tf_log>
2fff6d96:	e067      	b.n	2fff6e68 <stm32_i2c_init+0x168>
2fff6d98:	69e6      	ldr	r6, [r4, #28]
2fff6d9a:	68a0      	ldr	r0, [r4, #8]
2fff6d9c:	f026 6670 	bic.w	r6, r6, #251658240	; 0xf000000
2fff6da0:	f7fe fa8e 	bl	2fff52c0 <stm32mp_clk_enable>
2fff6da4:	6822      	ldr	r2, [r4, #0]
2fff6da6:	2120      	movs	r1, #32
2fff6da8:	6813      	ldr	r3, [r2, #0]
2fff6daa:	f023 0301 	bic.w	r3, r3, #1
2fff6dae:	6013      	str	r3, [r2, #0]
2fff6db0:	6823      	ldr	r3, [r4, #0]
2fff6db2:	611e      	str	r6, [r3, #16]
2fff6db4:	6822      	ldr	r2, [r4, #0]
2fff6db6:	6893      	ldr	r3, [r2, #8]
2fff6db8:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
2fff6dbc:	6093      	str	r3, [r2, #8]
2fff6dbe:	686b      	ldr	r3, [r5, #4]
2fff6dc0:	6822      	ldr	r2, [r4, #0]
2fff6dc2:	2b01      	cmp	r3, #1
2fff6dc4:	682b      	ldr	r3, [r5, #0]
2fff6dc6:	bf0c      	ite	eq
2fff6dc8:	f443 4300 	orreq.w	r3, r3, #32768	; 0x8000
2fff6dcc:	f443 4304 	orrne.w	r3, r3, #33792	; 0x8400
2fff6dd0:	6093      	str	r3, [r2, #8]
2fff6dd2:	2200      	movs	r2, #0
2fff6dd4:	6823      	ldr	r3, [r4, #0]
2fff6dd6:	605a      	str	r2, [r3, #4]
2fff6dd8:	686b      	ldr	r3, [r5, #4]
2fff6dda:	2b02      	cmp	r3, #2
2fff6ddc:	bf01      	itttt	eq
2fff6dde:	6822      	ldreq	r2, [r4, #0]
2fff6de0:	6853      	ldreq	r3, [r2, #4]
2fff6de2:	f443 6300 	orreq.w	r3, r3, #2048	; 0x800
2fff6de6:	6053      	streq	r3, [r2, #4]
2fff6de8:	6822      	ldr	r2, [r4, #0]
2fff6dea:	6853      	ldr	r3, [r2, #4]
2fff6dec:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
2fff6df0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
2fff6df4:	6053      	str	r3, [r2, #4]
2fff6df6:	6822      	ldr	r2, [r4, #0]
2fff6df8:	68d3      	ldr	r3, [r2, #12]
2fff6dfa:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
2fff6dfe:	60d3      	str	r3, [r2, #12]
2fff6e00:	68ea      	ldr	r2, [r5, #12]
2fff6e02:	68ab      	ldr	r3, [r5, #8]
2fff6e04:	4313      	orrs	r3, r2
2fff6e06:	692a      	ldr	r2, [r5, #16]
2fff6e08:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2fff6e0c:	6822      	ldr	r2, [r4, #0]
2fff6e0e:	60d3      	str	r3, [r2, #12]
2fff6e10:	69aa      	ldr	r2, [r5, #24]
2fff6e12:	696b      	ldr	r3, [r5, #20]
2fff6e14:	4313      	orrs	r3, r2
2fff6e16:	6822      	ldr	r2, [r4, #0]
2fff6e18:	6013      	str	r3, [r2, #0]
2fff6e1a:	6822      	ldr	r2, [r4, #0]
2fff6e1c:	6813      	ldr	r3, [r2, #0]
2fff6e1e:	f043 0301 	orr.w	r3, r3, #1
2fff6e22:	6013      	str	r3, [r2, #0]
2fff6e24:	2300      	movs	r3, #0
2fff6e26:	61a3      	str	r3, [r4, #24]
2fff6e28:	6163      	str	r3, [r4, #20]
2fff6e2a:	6aab      	ldr	r3, [r5, #40]	; 0x28
2fff6e2c:	7b25      	ldrb	r5, [r4, #12]
2fff6e2e:	6121      	str	r1, [r4, #16]
2fff6e30:	2b00      	cmp	r3, #0
2fff6e32:	bf14      	ite	ne
2fff6e34:	2300      	movne	r3, #0
2fff6e36:	f44f 5380 	moveq.w	r3, #4096	; 0x1000
2fff6e3a:	2d00      	cmp	r5, #0
2fff6e3c:	f000 815d 	beq.w	2fff70fa <stm32_i2c_init+0x3fa>
2fff6e40:	485a      	ldr	r0, [pc, #360]	; (2fff6fac <stm32_i2c_init+0x2ac>)
2fff6e42:	f06f 010f 	mvn.w	r1, #15
2fff6e46:	f06f 080f 	mvn.w	r8, #15
2fff6e4a:	f7fb fd47 	bl	2fff28dc <tf_log>
2fff6e4e:	68a0      	ldr	r0, [r4, #8]
2fff6e50:	f7fe fa39 	bl	2fff52c6 <stm32mp_clk_disable>
2fff6e54:	e76b      	b.n	2fff6d2e <stm32_i2c_init+0x2e>
2fff6e56:	f04f 0900 	mov.w	r9, #0
2fff6e5a:	e784      	b.n	2fff6d66 <stm32_i2c_init+0x66>
2fff6e5c:	f04f 0901 	mov.w	r9, #1
2fff6e60:	e781      	b.n	2fff6d66 <stm32_i2c_init+0x66>
2fff6e62:	4853      	ldr	r0, [pc, #332]	; (2fff6fb0 <stm32_i2c_init+0x2b0>)
2fff6e64:	f7fb fd3a 	bl	2fff28dc <tf_log>
2fff6e68:	f06f 0815 	mvn.w	r8, #21
2fff6e6c:	4851      	ldr	r0, [pc, #324]	; (2fff6fb4 <stm32_i2c_init+0x2b4>)
2fff6e6e:	f7fb fd35 	bl	2fff28dc <tf_log>
2fff6e72:	6a6b      	ldr	r3, [r5, #36]	; 0x24
2fff6e74:	4a48      	ldr	r2, [pc, #288]	; (2fff6f98 <stm32_i2c_init+0x298>)
2fff6e76:	4293      	cmp	r3, r2
2fff6e78:	f240 8160 	bls.w	2fff713c <stm32_i2c_init+0x43c>
2fff6e7c:	4948      	ldr	r1, [pc, #288]	; (2fff6fa0 <stm32_i2c_init+0x2a0>)
2fff6e7e:	428b      	cmp	r3, r1
2fff6e80:	d803      	bhi.n	2fff6e8a <stm32_i2c_init+0x18a>
2fff6e82:	4946      	ldr	r1, [pc, #280]	; (2fff6f9c <stm32_i2c_init+0x29c>)
2fff6e84:	428b      	cmp	r3, r1
2fff6e86:	bf98      	it	ls
2fff6e88:	4611      	movls	r1, r2
2fff6e8a:	484b      	ldr	r0, [pc, #300]	; (2fff6fb8 <stm32_i2c_init+0x2b8>)
2fff6e8c:	6269      	str	r1, [r5, #36]	; 0x24
2fff6e8e:	f7fb fd25 	bl	2fff28dc <tf_log>
2fff6e92:	e75c      	b.n	2fff6d4e <stm32_i2c_init+0x4e>
2fff6e94:	4298      	cmp	r0, r3
2fff6e96:	f4ff af7a 	bcc.w	2fff6d8e <stm32_i2c_init+0x8e>
2fff6e9a:	f895 802c 	ldrb.w	r8, [r5, #44]	; 0x2c
2fff6e9e:	f1b8 0f10 	cmp.w	r8, #16
2fff6ea2:	d905      	bls.n	2fff6eb0 <stm32_i2c_init+0x1b0>
2fff6ea4:	4845      	ldr	r0, [pc, #276]	; (2fff6fbc <stm32_i2c_init+0x2bc>)
2fff6ea6:	2210      	movs	r2, #16
2fff6ea8:	4641      	mov	r1, r8
2fff6eaa:	f7fb fd17 	bl	2fff28dc <tf_log>
2fff6eae:	e7db      	b.n	2fff6e68 <stm32_i2c_init+0x168>
2fff6eb0:	6aaf      	ldr	r7, [r5, #40]	; 0x28
2fff6eb2:	2f00      	cmp	r7, #0
2fff6eb4:	d130      	bne.n	2fff6f18 <stm32_i2c_init+0x218>
2fff6eb6:	46bc      	mov	ip, r7
2fff6eb8:	9a03      	ldr	r2, [sp, #12]
2fff6eba:	fb02 f208 	mul.w	r2, r2, r8
2fff6ebe:	f108 0803 	add.w	r8, r8, #3
2fff6ec2:	9207      	str	r2, [sp, #28]
2fff6ec4:	9a03      	ldr	r2, [sp, #12]
2fff6ec6:	fb02 f808 	mul.w	r8, r2, r8
2fff6eca:	4a36      	ldr	r2, [pc, #216]	; (2fff6fa4 <stm32_i2c_init+0x2a4>)
2fff6ecc:	eba3 0308 	sub.w	r3, r3, r8
2fff6ed0:	eb02 1049 	add.w	r0, r2, r9, lsl #5
2fff6ed4:	68c2      	ldr	r2, [r0, #12]
2fff6ed6:	4413      	add	r3, r2
2fff6ed8:	1bdb      	subs	r3, r3, r7
2fff6eda:	9304      	str	r3, [sp, #16]
2fff6edc:	9b03      	ldr	r3, [sp, #12]
2fff6ede:	4498      	add	r8, r3
2fff6ee0:	6903      	ldr	r3, [r0, #16]
2fff6ee2:	4488      	add	r8, r1
2fff6ee4:	eba3 0808 	sub.w	r8, r3, r8
2fff6ee8:	6943      	ldr	r3, [r0, #20]
2fff6eea:	a810      	add	r0, sp, #64	; 0x40
2fff6eec:	eba8 080c 	sub.w	r8, r8, ip
2fff6ef0:	18cb      	adds	r3, r1, r3
2fff6ef2:	2150      	movs	r1, #80	; 0x50
2fff6ef4:	930a      	str	r3, [sp, #40]	; 0x28
2fff6ef6:	9b04      	ldr	r3, [sp, #16]
2fff6ef8:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
2fff6efc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
2fff6f00:	9304      	str	r3, [sp, #16]
2fff6f02:	f001 eefa 	blx	2fff8cf8 <zero_normalmem>
2fff6f06:	9803      	ldr	r0, [sp, #12]
2fff6f08:	2300      	movs	r3, #0
2fff6f0a:	f04f 0c10 	mov.w	ip, #16
2fff6f0e:	9005      	str	r0, [sp, #20]
2fff6f10:	1c59      	adds	r1, r3, #1
2fff6f12:	9108      	str	r1, [sp, #32]
2fff6f14:	2200      	movs	r2, #0
2fff6f16:	e011      	b.n	2fff6f3c <stm32_i2c_init+0x23c>
2fff6f18:	2732      	movs	r7, #50	; 0x32
2fff6f1a:	f44f 7c82 	mov.w	ip, #260	; 0x104
2fff6f1e:	e7cb      	b.n	2fff6eb8 <stm32_i2c_init+0x1b8>
2fff6f20:	4486      	add	lr, r0
2fff6f22:	3101      	adds	r1, #1
2fff6f24:	b289      	uxth	r1, r1
2fff6f26:	2910      	cmp	r1, #16
2fff6f28:	d110      	bne.n	2fff6f4c <stm32_i2c_init+0x24c>
2fff6f2a:	4563      	cmp	r3, ip
2fff6f2c:	d022      	beq.n	2fff6f74 <stm32_i2c_init+0x274>
2fff6f2e:	9905      	ldr	r1, [sp, #20]
2fff6f30:	3201      	adds	r2, #1
2fff6f32:	b292      	uxth	r2, r2
2fff6f34:	4401      	add	r1, r0
2fff6f36:	2a10      	cmp	r2, #16
2fff6f38:	9105      	str	r1, [sp, #20]
2fff6f3a:	d01b      	beq.n	2fff6f74 <stm32_i2c_init+0x274>
2fff6f3c:	990a      	ldr	r1, [sp, #40]	; 0x28
2fff6f3e:	460e      	mov	r6, r1
2fff6f40:	9905      	ldr	r1, [sp, #20]
2fff6f42:	428e      	cmp	r6, r1
2fff6f44:	d8f3      	bhi.n	2fff6f2e <stm32_i2c_init+0x22e>
2fff6f46:	f8dd e00c 	ldr.w	lr, [sp, #12]
2fff6f4a:	2100      	movs	r1, #0
2fff6f4c:	9e04      	ldr	r6, [sp, #16]
2fff6f4e:	4576      	cmp	r6, lr
2fff6f50:	d8e6      	bhi.n	2fff6f20 <stm32_i2c_init+0x220>
2fff6f52:	45f0      	cmp	r8, lr
2fff6f54:	d3e4      	bcc.n	2fff6f20 <stm32_i2c_init+0x220>
2fff6f56:	4563      	cmp	r3, ip
2fff6f58:	d0e2      	beq.n	2fff6f20 <stm32_i2c_init+0x220>
2fff6f5a:	eb03 0c83 	add.w	ip, r3, r3, lsl #2
2fff6f5e:	ae24      	add	r6, sp, #144	; 0x90
2fff6f60:	44b4      	add	ip, r6
2fff6f62:	f80c 2c50 	strb.w	r2, [ip, #-80]
2fff6f66:	f04f 0201 	mov.w	r2, #1
2fff6f6a:	f80c 1c4f 	strb.w	r1, [ip, #-79]
2fff6f6e:	f80c 2c4c 	strb.w	r2, [ip, #-76]
2fff6f72:	469c      	mov	ip, r3
2fff6f74:	9b03      	ldr	r3, [sp, #12]
2fff6f76:	4418      	add	r0, r3
2fff6f78:	9b08      	ldr	r3, [sp, #32]
2fff6f7a:	2b10      	cmp	r3, #16
2fff6f7c:	d1c7      	bne.n	2fff6f0e <stm32_i2c_init+0x20e>
2fff6f7e:	f1bc 0f10 	cmp.w	ip, #16
2fff6f82:	d11f      	bne.n	2fff6fc4 <stm32_i2c_init+0x2c4>
2fff6f84:	480e      	ldr	r0, [pc, #56]	; (2fff6fc0 <stm32_i2c_init+0x2c0>)
2fff6f86:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2fff6f8a:	f7fb fca7 	bl	2fff28dc <tf_log>
2fff6f8e:	e76d      	b.n	2fff6e6c <stm32_i2c_init+0x16c>
2fff6f90:	2fffbb98 	.word	0x2fffbb98
2fff6f94:	3b9aca00 	.word	0x3b9aca00
2fff6f98:	000186a0 	.word	0x000186a0
2fff6f9c:	00061a80 	.word	0x00061a80
2fff6fa0:	000f4240 	.word	0x000f4240
2fff6fa4:	2fffbce0 	.word	0x2fffbce0
2fff6fa8:	2fffbbcc 	.word	0x2fffbbcc
2fff6fac:	2fffbc8f 	.word	0x2fffbc8f
2fff6fb0:	2fffbbae 	.word	0x2fffbbae
2fff6fb4:	2fffbc50 	.word	0x2fffbc50
2fff6fb8:	2fffbc70 	.word	0x2fffbc70
2fff6fbc:	2fffbc00 	.word	0x2fffbc00
2fff6fc0:	2fffbc19 	.word	0x2fffbc19
2fff6fc4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
2fff6fc6:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
2fff6fca:	9b07      	ldr	r3, [sp, #28]
2fff6fcc:	f04f 0e00 	mov.w	lr, #0
2fff6fd0:	9903      	ldr	r1, [sp, #12]
2fff6fd2:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2fff6fd6:	4413      	add	r3, r2
2fff6fd8:	443b      	add	r3, r7
2fff6fda:	9308      	str	r3, [sp, #32]
2fff6fdc:	2364      	movs	r3, #100	; 0x64
2fff6fde:	fbba f2f3 	udiv	r2, sl, r3
2fff6fe2:	2350      	movs	r3, #80	; 0x50
2fff6fe4:	4353      	muls	r3, r2
2fff6fe6:	9a06      	ldr	r2, [sp, #24]
2fff6fe8:	fbb2 f3f3 	udiv	r3, r2, r3
2fff6fec:	930a      	str	r3, [sp, #40]	; 0x28
2fff6fee:	fbb2 f3fa 	udiv	r3, r2, sl
2fff6ff2:	930c      	str	r3, [sp, #48]	; 0x30
2fff6ff4:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
2fff6ff8:	9305      	str	r3, [sp, #20]
2fff6ffa:	4b52      	ldr	r3, [pc, #328]	; (2fff7144 <stm32_i2c_init+0x444>)
2fff6ffc:	eb03 1a49 	add.w	sl, r3, r9, lsl #5
2fff7000:	9b07      	ldr	r3, [sp, #28]
2fff7002:	443b      	add	r3, r7
2fff7004:	930f      	str	r3, [sp, #60]	; 0x3c
2fff7006:	f89c 3004 	ldrb.w	r3, [ip, #4]
2fff700a:	2b00      	cmp	r3, #0
2fff700c:	d045      	beq.n	2fff709a <stm32_i2c_init+0x39a>
2fff700e:	f8da 3018 	ldr.w	r3, [sl, #24]
2fff7012:	930d      	str	r3, [sp, #52]	; 0x34
2fff7014:	9b08      	ldr	r3, [sp, #32]
2fff7016:	440b      	add	r3, r1
2fff7018:	9304      	str	r3, [sp, #16]
2fff701a:	4699      	mov	r9, r3
2fff701c:	2300      	movs	r3, #0
2fff701e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
2fff7020:	4591      	cmp	r9, r2
2fff7022:	d334      	bcc.n	2fff708e <stm32_i2c_init+0x38e>
2fff7024:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
2fff7026:	9803      	ldr	r0, [sp, #12]
2fff7028:	eba9 0202 	sub.w	r2, r9, r2
2fff702c:	ebb0 0f92 	cmp.w	r0, r2, lsr #2
2fff7030:	d22d      	bcs.n	2fff708e <stm32_i2c_init+0x38e>
2fff7032:	6a28      	ldr	r0, [r5, #32]
2fff7034:	69ea      	ldr	r2, [r5, #28]
2fff7036:	9e09      	ldr	r6, [sp, #36]	; 0x24
2fff7038:	4402      	add	r2, r0
2fff703a:	444a      	add	r2, r9
2fff703c:	9207      	str	r2, [sp, #28]
2fff703e:	2200      	movs	r2, #0
2fff7040:	9807      	ldr	r0, [sp, #28]
2fff7042:	9f04      	ldr	r7, [sp, #16]
2fff7044:	1b80      	subs	r0, r0, r6
2fff7046:	900e      	str	r0, [sp, #56]	; 0x38
2fff7048:	9807      	ldr	r0, [sp, #28]
2fff704a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
2fff704c:	1838      	adds	r0, r7, r0
2fff704e:	4286      	cmp	r6, r0
2fff7050:	d817      	bhi.n	2fff7082 <stm32_i2c_init+0x382>
2fff7052:	9e0a      	ldr	r6, [sp, #40]	; 0x28
2fff7054:	4286      	cmp	r6, r0
2fff7056:	d314      	bcc.n	2fff7082 <stm32_i2c_init+0x382>
2fff7058:	f8da 001c 	ldr.w	r0, [sl, #28]
2fff705c:	42b8      	cmp	r0, r7
2fff705e:	d810      	bhi.n	2fff7082 <stm32_i2c_init+0x382>
2fff7060:	9803      	ldr	r0, [sp, #12]
2fff7062:	42b8      	cmp	r0, r7
2fff7064:	d20d      	bcs.n	2fff7082 <stm32_i2c_init+0x382>
2fff7066:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff7068:	9e05      	ldr	r6, [sp, #20]
2fff706a:	4438      	add	r0, r7
2fff706c:	2800      	cmp	r0, #0
2fff706e:	bfb8      	it	lt
2fff7070:	4240      	neglt	r0, r0
2fff7072:	42b0      	cmp	r0, r6
2fff7074:	bfbf      	itttt	lt
2fff7076:	f88c 3003 	strblt.w	r3, [ip, #3]
2fff707a:	46f0      	movlt	r8, lr
2fff707c:	f88c 2002 	strblt.w	r2, [ip, #2]
2fff7080:	9005      	strlt	r0, [sp, #20]
2fff7082:	440f      	add	r7, r1
2fff7084:	3201      	adds	r2, #1
2fff7086:	b292      	uxth	r2, r2
2fff7088:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
2fff708c:	d1dc      	bne.n	2fff7048 <stm32_i2c_init+0x348>
2fff708e:	4489      	add	r9, r1
2fff7090:	3301      	adds	r3, #1
2fff7092:	b29b      	uxth	r3, r3
2fff7094:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
2fff7098:	d1c1      	bne.n	2fff701e <stm32_i2c_init+0x31e>
2fff709a:	9b03      	ldr	r3, [sp, #12]
2fff709c:	f10e 0e01 	add.w	lr, lr, #1
2fff70a0:	f1be 0f10 	cmp.w	lr, #16
2fff70a4:	f10c 0c05 	add.w	ip, ip, #5
2fff70a8:	4419      	add	r1, r3
2fff70aa:	d1ac      	bne.n	2fff7006 <stm32_i2c_init+0x306>
2fff70ac:	f1b8 3fff 	cmp.w	r8, #4294967295	; 0xffffffff
2fff70b0:	d103      	bne.n	2fff70ba <stm32_i2c_init+0x3ba>
2fff70b2:	4825      	ldr	r0, [pc, #148]	; (2fff7148 <stm32_i2c_init+0x448>)
2fff70b4:	f7fb fc12 	bl	2fff28dc <tf_log>
2fff70b8:	e6d8      	b.n	2fff6e6c <stm32_i2c_init+0x16c>
2fff70ba:	eb08 0388 	add.w	r3, r8, r8, lsl #2
2fff70be:	aa24      	add	r2, sp, #144	; 0x90
2fff70c0:	4413      	add	r3, r2
2fff70c2:	f8c4 b020 	str.w	fp, [r4, #32]
2fff70c6:	f813 6c4d 	ldrb.w	r6, [r3, #-77]
2fff70ca:	ea46 7608 	orr.w	r6, r6, r8, lsl #28
2fff70ce:	f813 8c4e 	ldrb.w	r8, [r3, #-78]
2fff70d2:	ea46 2608 	orr.w	r6, r6, r8, lsl #8
2fff70d6:	f813 8c50 	ldrb.w	r8, [r3, #-80]
2fff70da:	ea4f 5808 	mov.w	r8, r8, lsl #20
2fff70de:	f408 0870 	and.w	r8, r8, #15728640	; 0xf00000
2fff70e2:	ea46 0608 	orr.w	r6, r6, r8
2fff70e6:	f813 8c4f 	ldrb.w	r8, [r3, #-79]
2fff70ea:	ea4f 4808 	mov.w	r8, r8, lsl #16
2fff70ee:	f408 2870 	and.w	r8, r8, #983040	; 0xf0000
2fff70f2:	ea46 0608 	orr.w	r6, r6, r8
2fff70f6:	61e6      	str	r6, [r4, #28]
2fff70f8:	e64f      	b.n	2fff6d9a <stm32_i2c_init+0x9a>
2fff70fa:	6820      	ldr	r0, [r4, #0]
2fff70fc:	2201      	movs	r2, #1
2fff70fe:	7322      	strb	r2, [r4, #12]
2fff7100:	2224      	movs	r2, #36	; 0x24
2fff7102:	6122      	str	r2, [r4, #16]
2fff7104:	46a8      	mov	r8, r5
2fff7106:	6802      	ldr	r2, [r0, #0]
2fff7108:	f022 0201 	bic.w	r2, r2, #1
2fff710c:	6002      	str	r2, [r0, #0]
2fff710e:	6820      	ldr	r0, [r4, #0]
2fff7110:	6802      	ldr	r2, [r0, #0]
2fff7112:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
2fff7116:	6002      	str	r2, [r0, #0]
2fff7118:	6822      	ldr	r2, [r4, #0]
2fff711a:	6810      	ldr	r0, [r2, #0]
2fff711c:	4303      	orrs	r3, r0
2fff711e:	6013      	str	r3, [r2, #0]
2fff7120:	6822      	ldr	r2, [r4, #0]
2fff7122:	6813      	ldr	r3, [r2, #0]
2fff7124:	f043 0301 	orr.w	r3, r3, #1
2fff7128:	6013      	str	r3, [r2, #0]
2fff712a:	6121      	str	r1, [r4, #16]
2fff712c:	68a0      	ldr	r0, [r4, #8]
2fff712e:	7325      	strb	r5, [r4, #12]
2fff7130:	f7fe f8c9 	bl	2fff52c6 <stm32mp_clk_disable>
2fff7134:	e5fb      	b.n	2fff6d2e <stm32_i2c_init+0x2e>
2fff7136:	f06f 0801 	mvn.w	r8, #1
2fff713a:	e5f8      	b.n	2fff6d2e <stm32_i2c_init+0x2e>
2fff713c:	4803      	ldr	r0, [pc, #12]	; (2fff714c <stm32_i2c_init+0x44c>)
2fff713e:	f7fb fbcd 	bl	2fff28dc <tf_log>
2fff7142:	e5f4      	b.n	2fff6d2e <stm32_i2c_init+0x2e>
2fff7144:	2fffbce0 	.word	0x2fffbce0
2fff7148:	2fffbc36 	.word	0x2fffbc36
2fff714c:	2fffbcba 	.word	0x2fffbcba

2fff7150 <stm32_i2c_mem_write>:
2fff7150:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff7152:	2440      	movs	r4, #64	; 0x40
2fff7154:	9403      	str	r4, [sp, #12]
2fff7156:	9c08      	ldr	r4, [sp, #32]
2fff7158:	9402      	str	r4, [sp, #8]
2fff715a:	f8bd 401c 	ldrh.w	r4, [sp, #28]
2fff715e:	9401      	str	r4, [sp, #4]
2fff7160:	9c06      	ldr	r4, [sp, #24]
2fff7162:	9400      	str	r4, [sp, #0]
2fff7164:	f7ff fb9a 	bl	2fff689c <i2c_write>
2fff7168:	b004      	add	sp, #16
2fff716a:	bd10      	pop	{r4, pc}

2fff716c <stm32_i2c_mem_read>:
2fff716c:	b430      	push	{r4, r5}
2fff716e:	2540      	movs	r5, #64	; 0x40
2fff7170:	f8bd 400c 	ldrh.w	r4, [sp, #12]
2fff7174:	9504      	str	r5, [sp, #16]
2fff7176:	9403      	str	r4, [sp, #12]
2fff7178:	bc30      	pop	{r4, r5}
2fff717a:	f7ff bc9b 	b.w	2fff6ab4 <i2c_read.isra.0>
	...

2fff7180 <stm32_i2c_is_device_ready>:
2fff7180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff7184:	469a      	mov	sl, r3
2fff7186:	6903      	ldr	r3, [r0, #16]
2fff7188:	b085      	sub	sp, #20
2fff718a:	4604      	mov	r4, r0
2fff718c:	460e      	mov	r6, r1
2fff718e:	2b20      	cmp	r3, #32
2fff7190:	4617      	mov	r7, r2
2fff7192:	f040 8094 	bne.w	2fff72be <stm32_i2c_is_device_ready+0x13e>
2fff7196:	7b05      	ldrb	r5, [r0, #12]
2fff7198:	2d00      	cmp	r5, #0
2fff719a:	f040 8090 	bne.w	2fff72be <stm32_i2c_is_device_ready+0x13e>
2fff719e:	6880      	ldr	r0, [r0, #8]
2fff71a0:	f7fe f88e 	bl	2fff52c0 <stm32mp_clk_enable>
2fff71a4:	6165      	str	r5, [r4, #20]
2fff71a6:	2301      	movs	r3, #1
2fff71a8:	7323      	strb	r3, [r4, #12]
2fff71aa:	6823      	ldr	r3, [r4, #0]
2fff71ac:	699d      	ldr	r5, [r3, #24]
2fff71ae:	f415 4500 	ands.w	r5, r5, #32768	; 0x8000
2fff71b2:	d009      	beq.n	2fff71c8 <stm32_i2c_is_device_ready+0x48>
2fff71b4:	2500      	movs	r5, #0
2fff71b6:	68a0      	ldr	r0, [r4, #8]
2fff71b8:	2300      	movs	r3, #0
2fff71ba:	7323      	strb	r3, [r4, #12]
2fff71bc:	f7fe f883 	bl	2fff52c6 <stm32mp_clk_disable>
2fff71c0:	4628      	mov	r0, r5
2fff71c2:	b005      	add	sp, #20
2fff71c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff71c8:	f3c6 0609 	ubfx	r6, r6, #0, #10
2fff71cc:	2324      	movs	r3, #36	; 0x24
2fff71ce:	6123      	str	r3, [r4, #16]
2fff71d0:	f046 7b00 	orr.w	fp, r6, #33554432	; 0x2000000
2fff71d4:	61a5      	str	r5, [r4, #24]
2fff71d6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff71da:	fb03 fa0a 	mul.w	sl, r3, sl
2fff71de:	f44b 5b00 	orr.w	fp, fp, #8192	; 0x2000
2fff71e2:	6823      	ldr	r3, [r4, #0]
2fff71e4:	689a      	ldr	r2, [r3, #8]
2fff71e6:	0552      	lsls	r2, r2, #21
2fff71e8:	bf52      	itee	pl
2fff71ea:	f8c3 b004 	strpl.w	fp, [r3, #4]
2fff71ee:	f446 5220 	orrmi.w	r2, r6, #10240	; 0x2800
2fff71f2:	605a      	strmi	r2, [r3, #4]
2fff71f4:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff71f8:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff71fc:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff7200:	fbaa 0100 	umull	r0, r1, sl, r0
2fff7204:	4a2f      	ldr	r2, [pc, #188]	; (2fff72c4 <stm32_i2c_is_device_ready+0x144>)
2fff7206:	2300      	movs	r3, #0
2fff7208:	f001 edbe 	blx	2fff8d88 <__aeabi_uldivmod>
2fff720c:	9b02      	ldr	r3, [sp, #8]
2fff720e:	6822      	ldr	r2, [r4, #0]
2fff7210:	eb10 0803 	adds.w	r8, r0, r3
2fff7214:	9b03      	ldr	r3, [sp, #12]
2fff7216:	f102 0c18 	add.w	ip, r2, #24
2fff721a:	eb41 0903 	adc.w	r9, r1, r3
2fff721e:	f8dc 3000 	ldr.w	r3, [ip]
2fff7222:	f013 0330 	ands.w	r3, r3, #48	; 0x30
2fff7226:	d10d      	bne.n	2fff7244 <stm32_i2c_is_device_ready+0xc4>
2fff7228:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff722c:	4589      	cmp	r9, r1
2fff722e:	bf08      	it	eq
2fff7230:	4580      	cmpeq	r8, r0
2fff7232:	d2f4      	bcs.n	2fff721e <stm32_i2c_is_device_ready+0x9e>
2fff7234:	69a2      	ldr	r2, [r4, #24]
2fff7236:	6163      	str	r3, [r4, #20]
2fff7238:	f042 0220 	orr.w	r2, r2, #32
2fff723c:	61a2      	str	r2, [r4, #24]
2fff723e:	2220      	movs	r2, #32
2fff7240:	6122      	str	r2, [r4, #16]
2fff7242:	e7b7      	b.n	2fff71b4 <stm32_i2c_is_device_ready+0x34>
2fff7244:	6992      	ldr	r2, [r2, #24]
2fff7246:	e9cd 8900 	strd	r8, r9, [sp]
2fff724a:	f012 0210 	ands.w	r2, r2, #16
2fff724e:	d10b      	bne.n	2fff7268 <stm32_i2c_is_device_ready+0xe8>
2fff7250:	2120      	movs	r1, #32
2fff7252:	4620      	mov	r0, r4
2fff7254:	f7ff fa76 	bl	2fff6744 <i2c_wait_flag>
2fff7258:	2800      	cmp	r0, #0
2fff725a:	d1ab      	bne.n	2fff71b4 <stm32_i2c_is_device_ready+0x34>
2fff725c:	6822      	ldr	r2, [r4, #0]
2fff725e:	2320      	movs	r3, #32
2fff7260:	2501      	movs	r5, #1
2fff7262:	61d3      	str	r3, [r2, #28]
2fff7264:	6123      	str	r3, [r4, #16]
2fff7266:	e7a6      	b.n	2fff71b6 <stm32_i2c_is_device_ready+0x36>
2fff7268:	2200      	movs	r2, #0
2fff726a:	2120      	movs	r1, #32
2fff726c:	4620      	mov	r0, r4
2fff726e:	f7ff fa69 	bl	2fff6744 <i2c_wait_flag>
2fff7272:	4602      	mov	r2, r0
2fff7274:	2800      	cmp	r0, #0
2fff7276:	d19d      	bne.n	2fff71b4 <stm32_i2c_is_device_ready+0x34>
2fff7278:	6823      	ldr	r3, [r4, #0]
2fff727a:	2110      	movs	r1, #16
2fff727c:	42bd      	cmp	r5, r7
2fff727e:	61d9      	str	r1, [r3, #28]
2fff7280:	f04f 0120 	mov.w	r1, #32
2fff7284:	6823      	ldr	r3, [r4, #0]
2fff7286:	61d9      	str	r1, [r3, #28]
2fff7288:	d10d      	bne.n	2fff72a6 <stm32_i2c_is_device_ready+0x126>
2fff728a:	6820      	ldr	r0, [r4, #0]
2fff728c:	6843      	ldr	r3, [r0, #4]
2fff728e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
2fff7292:	6043      	str	r3, [r0, #4]
2fff7294:	4620      	mov	r0, r4
2fff7296:	e9cd 8900 	strd	r8, r9, [sp]
2fff729a:	f7ff fa53 	bl	2fff6744 <i2c_wait_flag>
2fff729e:	2800      	cmp	r0, #0
2fff72a0:	d188      	bne.n	2fff71b4 <stm32_i2c_is_device_ready+0x34>
2fff72a2:	6823      	ldr	r3, [r4, #0]
2fff72a4:	61d9      	str	r1, [r3, #28]
2fff72a6:	3501      	adds	r5, #1
2fff72a8:	42af      	cmp	r7, r5
2fff72aa:	d89a      	bhi.n	2fff71e2 <stm32_i2c_is_device_ready+0x62>
2fff72ac:	69a3      	ldr	r3, [r4, #24]
2fff72ae:	2500      	movs	r5, #0
2fff72b0:	6165      	str	r5, [r4, #20]
2fff72b2:	f043 0320 	orr.w	r3, r3, #32
2fff72b6:	61a3      	str	r3, [r4, #24]
2fff72b8:	2320      	movs	r3, #32
2fff72ba:	6123      	str	r3, [r4, #16]
2fff72bc:	e77b      	b.n	2fff71b6 <stm32_i2c_is_device_ready+0x36>
2fff72be:	2500      	movs	r5, #0
2fff72c0:	e77e      	b.n	2fff71c0 <stm32_i2c_is_device_ready+0x40>
2fff72c2:	bf00      	nop
2fff72c4:	000f4240 	.word	0x000f4240

2fff72c8 <stm32_iwdg_refresh>:
2fff72c8:	b510      	push	{r4, lr}
2fff72ca:	4c0e      	ldr	r4, [pc, #56]	; (2fff7304 <stm32_iwdg_refresh+0x3c>)
2fff72cc:	6823      	ldr	r3, [r4, #0]
2fff72ce:	b14b      	cbz	r3, 2fff72e4 <stm32_iwdg_refresh+0x1c>
2fff72d0:	6860      	ldr	r0, [r4, #4]
2fff72d2:	f7fd fff5 	bl	2fff52c0 <stm32mp_clk_enable>
2fff72d6:	6823      	ldr	r3, [r4, #0]
2fff72d8:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
2fff72dc:	601a      	str	r2, [r3, #0]
2fff72de:	6860      	ldr	r0, [r4, #4]
2fff72e0:	f7fd fff1 	bl	2fff52c6 <stm32mp_clk_disable>
2fff72e4:	6923      	ldr	r3, [r4, #16]
2fff72e6:	b15b      	cbz	r3, 2fff7300 <stm32_iwdg_refresh+0x38>
2fff72e8:	6960      	ldr	r0, [r4, #20]
2fff72ea:	f7fd ffe9 	bl	2fff52c0 <stm32mp_clk_enable>
2fff72ee:	6923      	ldr	r3, [r4, #16]
2fff72f0:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
2fff72f4:	601a      	str	r2, [r3, #0]
2fff72f6:	6960      	ldr	r0, [r4, #20]
2fff72f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff72fc:	f7fd bfe3 	b.w	2fff52c6 <stm32mp_clk_disable>
2fff7300:	bd10      	pop	{r4, pc}
2fff7302:	bf00      	nop
2fff7304:	2fffeac0 	.word	0x2fffeac0

2fff7308 <stm32_iwdg_it_handler>:
2fff7308:	b580      	push	{r7, lr}
2fff730a:	4605      	mov	r5, r0
2fff730c:	f001 ef22 	blx	2fff9154 <plat_my_core_pos>
2fff7310:	4b13      	ldr	r3, [pc, #76]	; (2fff7360 <stm32_iwdg_it_handler+0x58>)
2fff7312:	4606      	mov	r6, r0
2fff7314:	68da      	ldr	r2, [r3, #12]
2fff7316:	461f      	mov	r7, r3
2fff7318:	4295      	cmp	r5, r2
2fff731a:	d006      	beq.n	2fff732a <stm32_iwdg_it_handler+0x22>
2fff731c:	69db      	ldr	r3, [r3, #28]
2fff731e:	429d      	cmp	r5, r3
2fff7320:	d01c      	beq.n	2fff735c <stm32_iwdg_it_handler+0x54>
2fff7322:	f7fb fb7f 	bl	2fff2a24 <console_flush>
2fff7326:	f001 eb92 	blx	2fff8a4c <do_panic>
2fff732a:	2400      	movs	r4, #0
2fff732c:	ea4f 1804 	mov.w	r8, r4, lsl #4
2fff7330:	f7ff ffca 	bl	2fff72c8 <stm32_iwdg_refresh>
2fff7334:	eb07 1404 	add.w	r4, r7, r4, lsl #4
2fff7338:	6860      	ldr	r0, [r4, #4]
2fff733a:	f7fd ffc1 	bl	2fff52c0 <stm32mp_clk_enable>
2fff733e:	f857 2008 	ldr.w	r2, [r7, r8]
2fff7342:	6953      	ldr	r3, [r2, #20]
2fff7344:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
2fff7348:	6153      	str	r3, [r2, #20]
2fff734a:	6860      	ldr	r0, [r4, #4]
2fff734c:	f7fd ffbb 	bl	2fff52c6 <stm32mp_clk_disable>
2fff7350:	4628      	mov	r0, r5
2fff7352:	f7f9 ff81 	bl	2fff1258 <gicv2_end_of_interrupt>
2fff7356:	4630      	mov	r0, r6
2fff7358:	f7fb fdde 	bl	2fff2f18 <stm32mp_plat_reset>
2fff735c:	2401      	movs	r4, #1
2fff735e:	e7e5      	b.n	2fff732c <stm32_iwdg_it_handler+0x24>
2fff7360:	2fffeac0 	.word	0x2fffeac0

2fff7364 <stm32_iwdg_init>:
2fff7364:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff7368:	b087      	sub	sp, #28
2fff736a:	4668      	mov	r0, sp
2fff736c:	f000 fe2a 	bl	2fff7fc4 <fdt_get_address>
2fff7370:	b918      	cbnz	r0, 2fff737a <stm32_iwdg_init+0x16>
2fff7372:	f7fb fb57 	bl	2fff2a24 <console_flush>
2fff7376:	f001 eb6a 	blx	2fff8a4c <do_panic>
2fff737a:	4a70      	ldr	r2, [pc, #448]	; (2fff753c <stm32_iwdg_init+0x1d8>)
2fff737c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff7380:	4e6f      	ldr	r6, [pc, #444]	; (2fff7540 <stm32_iwdg_init+0x1dc>)
2fff7382:	a802      	add	r0, sp, #8
2fff7384:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 2fff7558 <stm32_iwdg_init+0x1f4>
2fff7388:	f000 ff08 	bl	2fff819c <dt_get_node>
2fff738c:	ea40 75e0 	orr.w	r5, r0, r0, asr #31
2fff7390:	1c6b      	adds	r3, r5, #1
2fff7392:	d101      	bne.n	2fff7398 <stm32_iwdg_init+0x34>
2fff7394:	2400      	movs	r4, #0
2fff7396:	e085      	b.n	2fff74a4 <stm32_iwdg_init+0x140>
2fff7398:	9802      	ldr	r0, [sp, #8]
2fff739a:	f7fb fe13 	bl	2fff2fc4 <stm32_iwdg_get_instance>
2fff739e:	0104      	lsls	r4, r0, #4
2fff73a0:	4607      	mov	r7, r0
2fff73a2:	9b02      	ldr	r3, [sp, #8]
2fff73a4:	4642      	mov	r2, r8
2fff73a6:	eb06 1900 	add.w	r9, r6, r0, lsl #4
2fff73aa:	4629      	mov	r1, r5
2fff73ac:	5133      	str	r3, [r6, r4]
2fff73ae:	9b03      	ldr	r3, [sp, #12]
2fff73b0:	9800      	ldr	r0, [sp, #0]
2fff73b2:	f8c9 3004 	str.w	r3, [r9, #4]
2fff73b6:	2300      	movs	r3, #0
2fff73b8:	f002 f9e5 	bl	2fff9786 <fdt_getprop>
2fff73bc:	b928      	cbnz	r0, 2fff73ca <stm32_iwdg_init+0x66>
2fff73be:	f899 3008 	ldrb.w	r3, [r9, #8]
2fff73c2:	f043 0302 	orr.w	r3, r3, #2
2fff73c6:	f889 3008 	strb.w	r3, [r9, #8]
2fff73ca:	4a5e      	ldr	r2, [pc, #376]	; (2fff7544 <stm32_iwdg_init+0x1e0>)
2fff73cc:	2300      	movs	r3, #0
2fff73ce:	9800      	ldr	r0, [sp, #0]
2fff73d0:	4629      	mov	r1, r5
2fff73d2:	f002 f9d8 	bl	2fff9786 <fdt_getprop>
2fff73d6:	b920      	cbnz	r0, 2fff73e2 <stm32_iwdg_init+0x7e>
2fff73d8:	1932      	adds	r2, r6, r4
2fff73da:	7a13      	ldrb	r3, [r2, #8]
2fff73dc:	f043 0304 	orr.w	r3, r3, #4
2fff73e0:	7213      	strb	r3, [r2, #8]
2fff73e2:	4638      	mov	r0, r7
2fff73e4:	f7fb fe02 	bl	2fff2fec <stm32_iwdg_get_otp_config>
2fff73e8:	9b05      	ldr	r3, [sp, #20]
2fff73ea:	f010 0f01 	tst.w	r0, #1
2fff73ee:	d00a      	beq.n	2fff7406 <stm32_iwdg_init+0xa2>
2fff73f0:	b923      	cbnz	r3, 2fff73fc <stm32_iwdg_init+0x98>
2fff73f2:	4855      	ldr	r0, [pc, #340]	; (2fff7548 <stm32_iwdg_init+0x1e4>)
2fff73f4:	1c79      	adds	r1, r7, #1
2fff73f6:	f7fb fa71 	bl	2fff28dc <tf_log>
2fff73fa:	e7ba      	b.n	2fff7372 <stm32_iwdg_init+0xe>
2fff73fc:	1931      	adds	r1, r6, r4
2fff73fe:	7a0a      	ldrb	r2, [r1, #8]
2fff7400:	f042 0201 	orr.w	r2, r2, #1
2fff7404:	720a      	strb	r2, [r1, #8]
2fff7406:	b95b      	cbnz	r3, 2fff7420 <stm32_iwdg_init+0xbc>
2fff7408:	1930      	adds	r0, r6, r4
2fff740a:	2110      	movs	r1, #16
2fff740c:	f001 ec74 	blx	2fff8cf8 <zero_normalmem>
2fff7410:	4a4a      	ldr	r2, [pc, #296]	; (2fff753c <stm32_iwdg_init+0x1d8>)
2fff7412:	4629      	mov	r1, r5
2fff7414:	a802      	add	r0, sp, #8
2fff7416:	f000 fec1 	bl	2fff819c <dt_get_node>
2fff741a:	ea40 75e0 	orr.w	r5, r0, r0, asr #31
2fff741e:	e7b7      	b.n	2fff7390 <stm32_iwdg_init+0x2c>
2fff7420:	0782      	lsls	r2, r0, #30
2fff7422:	bf41      	itttt	mi
2fff7424:	1931      	addmi	r1, r6, r4
2fff7426:	7a0a      	ldrbmi	r2, [r1, #8]
2fff7428:	f042 0202 	orrmi.w	r2, r2, #2
2fff742c:	720a      	strbmi	r2, [r1, #8]
2fff742e:	0741      	lsls	r1, r0, #29
2fff7430:	bf48      	it	mi
2fff7432:	1931      	addmi	r1, r6, r4
2fff7434:	5930      	ldr	r0, [r6, r4]
2fff7436:	bf42      	ittt	mi
2fff7438:	7a0a      	ldrbmi	r2, [r1, #8]
2fff743a:	f042 0204 	orrmi.w	r2, r2, #4
2fff743e:	720a      	strbmi	r2, [r1, #8]
2fff7440:	07da      	lsls	r2, r3, #31
2fff7442:	d533      	bpl.n	2fff74ac <stm32_iwdg_init+0x148>
2fff7444:	f7f9 faf8 	bl	2fff0a38 <stm32mp_register_non_secure_periph_iomem>
2fff7448:	eb06 0904 	add.w	r9, r6, r4
2fff744c:	f8d9 0004 	ldr.w	r0, [r9, #4]
2fff7450:	f7fd ff36 	bl	2fff52c0 <stm32mp_clk_enable>
2fff7454:	f8d9 0004 	ldr.w	r0, [r9, #4]
2fff7458:	f7fd ff35 	bl	2fff52c6 <stm32mp_clk_disable>
2fff745c:	a801      	add	r0, sp, #4
2fff745e:	f000 fdb1 	bl	2fff7fc4 <fdt_get_address>
2fff7462:	2800      	cmp	r0, #0
2fff7464:	d0d4      	beq.n	2fff7410 <stm32_iwdg_init+0xac>
2fff7466:	4a39      	ldr	r2, [pc, #228]	; (2fff754c <stm32_iwdg_init+0x1e8>)
2fff7468:	2300      	movs	r3, #0
2fff746a:	9801      	ldr	r0, [sp, #4]
2fff746c:	4629      	mov	r1, r5
2fff746e:	f002 f98a 	bl	2fff9786 <fdt_getprop>
2fff7472:	2800      	cmp	r0, #0
2fff7474:	d0cc      	beq.n	2fff7410 <stm32_iwdg_init+0xac>
2fff7476:	6803      	ldr	r3, [r0, #0]
2fff7478:	f3c3 2a07 	ubfx	sl, r3, #8, #8
2fff747c:	0e1a      	lsrs	r2, r3, #24
2fff747e:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
2fff7482:	f3c3 4307 	ubfx	r3, r3, #16, #8
2fff7486:	ea42 420a 	orr.w	r2, r2, sl, lsl #16
2fff748a:	ea42 2a03 	orr.w	sl, r2, r3, lsl #8
2fff748e:	f1ba 0f00 	cmp.w	sl, #0
2fff7492:	dbbd      	blt.n	2fff7410 <stm32_iwdg_init+0xac>
2fff7494:	d10d      	bne.n	2fff74b2 <stm32_iwdg_init+0x14e>
2fff7496:	f06f 0415 	mvn.w	r4, #21
2fff749a:	482d      	ldr	r0, [pc, #180]	; (2fff7550 <stm32_iwdg_init+0x1ec>)
2fff749c:	4622      	mov	r2, r4
2fff749e:	1c79      	adds	r1, r7, #1
2fff74a0:	f7fb fa1c 	bl	2fff28dc <tf_log>
2fff74a4:	4620      	mov	r0, r4
2fff74a6:	b007      	add	sp, #28
2fff74a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff74ac:	f7f9 fac1 	bl	2fff0a32 <stm32mp_register_secure_periph_iomem>
2fff74b0:	e7ca      	b.n	2fff7448 <stm32_iwdg_init+0xe4>
2fff74b2:	4928      	ldr	r1, [pc, #160]	; (2fff7554 <stm32_iwdg_init+0x1f0>)
2fff74b4:	4628      	mov	r0, r5
2fff74b6:	f7fd fa01 	bl	2fff48bc <fdt_get_clock_id_by_name>
2fff74ba:	2800      	cmp	r0, #0
2fff74bc:	dbeb      	blt.n	2fff7496 <stm32_iwdg_init+0x132>
2fff74be:	f7fd ff2b 	bl	2fff5318 <stm32mp_clk_get_rate>
2fff74c2:	4683      	mov	fp, r0
2fff74c4:	f8d9 0004 	ldr.w	r0, [r9, #4]
2fff74c8:	f7fd fefa 	bl	2fff52c0 <stm32mp_clk_enable>
2fff74cc:	5931      	ldr	r1, [r6, r4]
2fff74ce:	f64c 43cc 	movw	r3, #52428	; 0xcccc
2fff74d2:	600b      	str	r3, [r1, #0]
2fff74d4:	f245 5355 	movw	r3, #21845	; 0x5555
2fff74d8:	600b      	str	r3, [r1, #0]
2fff74da:	2306      	movs	r3, #6
2fff74dc:	604b      	str	r3, [r1, #4]
2fff74de:	fbaa 230b 	umull	r2, r3, sl, fp
2fff74e2:	f04f 0a64 	mov.w	sl, #100	; 0x64
2fff74e6:	0a12      	lsrs	r2, r2, #8
2fff74e8:	f602 72ff 	addw	r2, r2, #4095	; 0xfff
2fff74ec:	f3c2 020b 	ubfx	r2, r2, #0, #12
2fff74f0:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
2fff74f4:	614a      	str	r2, [r1, #20]
2fff74f6:	f8d9 3000 	ldr.w	r3, [r9]
2fff74fa:	2001      	movs	r0, #1
2fff74fc:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
2fff7500:	f8d3 b00c 	ldr.w	fp, [r3, #12]
2fff7504:	f7fc fda8 	bl	2fff4058 <mdelay>
2fff7508:	f01b 0f08 	tst.w	fp, #8
2fff750c:	d002      	beq.n	2fff7514 <stm32_iwdg_init+0x1b0>
2fff750e:	f1ba 0f00 	cmp.w	sl, #0
2fff7512:	d1f0      	bne.n	2fff74f6 <stm32_iwdg_init+0x192>
2fff7514:	2100      	movs	r1, #0
2fff7516:	4628      	mov	r0, r5
2fff7518:	f7fa f8a6 	bl	2fff1668 <stm32_gic_enable_spi>
2fff751c:	1933      	adds	r3, r6, r4
2fff751e:	2800      	cmp	r0, #0
2fff7520:	60d8      	str	r0, [r3, #12]
2fff7522:	f6ff af26 	blt.w	2fff7372 <stm32_iwdg_init+0xe>
2fff7526:	6858      	ldr	r0, [r3, #4]
2fff7528:	f7fd fecd 	bl	2fff52c6 <stm32mp_clk_disable>
2fff752c:	f1ba 0f00 	cmp.w	sl, #0
2fff7530:	f47f af6e 	bne.w	2fff7410 <stm32_iwdg_init+0xac>
2fff7534:	f06f 043b 	mvn.w	r4, #59	; 0x3b
2fff7538:	e7af      	b.n	2fff749a <stm32_iwdg_init+0x136>
2fff753a:	bf00      	nop
2fff753c:	2fffbd40 	.word	0x2fffbd40
2fff7540:	2fffeac0 	.word	0x2fffeac0
2fff7544:	2fffbd66 	.word	0x2fffbd66
2fff7548:	2fffbd7e 	.word	0x2fffbd7e
2fff754c:	2fffbda3 	.word	0x2fffbda3
2fff7550:	2fffbdb6 	.word	0x2fffbdb6
2fff7554:	2fffb6cf 	.word	0x2fffb6cf
2fff7558:	2fffbd51 	.word	0x2fffbd51

2fff755c <fdt32_to_cpu>:
2fff755c:	ba00      	rev	r0, r0
2fff755e:	4770      	bx	lr

2fff7560 <dt_get_pmic_node>:
2fff7560:	b510      	push	{r4, lr}
2fff7562:	4c05      	ldr	r4, [pc, #20]	; (2fff7578 <dt_get_pmic_node+0x18>)
2fff7564:	6823      	ldr	r3, [r4, #0]
2fff7566:	3304      	adds	r3, #4
2fff7568:	d103      	bne.n	2fff7572 <dt_get_pmic_node+0x12>
2fff756a:	4804      	ldr	r0, [pc, #16]	; (2fff757c <dt_get_pmic_node+0x1c>)
2fff756c:	f000 fe38 	bl	2fff81e0 <dt_get_node_by_compatible>
2fff7570:	6020      	str	r0, [r4, #0]
2fff7572:	6820      	ldr	r0, [r4, #0]
2fff7574:	bd10      	pop	{r4, pc}
2fff7576:	bf00      	nop
2fff7578:	2fffd530 	.word	0x2fffd530
2fff757c:	2fffbde0 	.word	0x2fffbde0

2fff7580 <dt_pmic_get_regulator_voltage>:
2fff7580:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff7582:	4615      	mov	r5, r2
2fff7584:	4a14      	ldr	r2, [pc, #80]	; (2fff75d8 <dt_pmic_get_regulator_voltage+0x58>)
2fff7586:	461c      	mov	r4, r3
2fff7588:	2300      	movs	r3, #0
2fff758a:	4606      	mov	r6, r0
2fff758c:	460f      	mov	r7, r1
2fff758e:	f002 f8fa 	bl	2fff9786 <fdt_getprop>
2fff7592:	b910      	cbnz	r0, 2fff759a <dt_pmic_get_regulator_voltage+0x1a>
2fff7594:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7598:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff759a:	b13d      	cbz	r5, 2fff75ac <dt_pmic_get_regulator_voltage+0x2c>
2fff759c:	6800      	ldr	r0, [r0, #0]
2fff759e:	f7ff ffdd 	bl	2fff755c <fdt32_to_cpu>
2fff75a2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff75a6:	fbb0 f0f3 	udiv	r0, r0, r3
2fff75aa:	8028      	strh	r0, [r5, #0]
2fff75ac:	4a0b      	ldr	r2, [pc, #44]	; (2fff75dc <dt_pmic_get_regulator_voltage+0x5c>)
2fff75ae:	2300      	movs	r3, #0
2fff75b0:	4639      	mov	r1, r7
2fff75b2:	4630      	mov	r0, r6
2fff75b4:	f002 f8e7 	bl	2fff9786 <fdt_getprop>
2fff75b8:	2800      	cmp	r0, #0
2fff75ba:	d0eb      	beq.n	2fff7594 <dt_pmic_get_regulator_voltage+0x14>
2fff75bc:	b14c      	cbz	r4, 2fff75d2 <dt_pmic_get_regulator_voltage+0x52>
2fff75be:	6800      	ldr	r0, [r0, #0]
2fff75c0:	f7ff ffcc 	bl	2fff755c <fdt32_to_cpu>
2fff75c4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff75c8:	fbb0 f0f3 	udiv	r0, r0, r3
2fff75cc:	8020      	strh	r0, [r4, #0]
2fff75ce:	2000      	movs	r0, #0
2fff75d0:	e7e2      	b.n	2fff7598 <dt_pmic_get_regulator_voltage+0x18>
2fff75d2:	4620      	mov	r0, r4
2fff75d4:	e7e0      	b.n	2fff7598 <dt_pmic_get_regulator_voltage+0x18>
2fff75d6:	bf00      	nop
2fff75d8:	2fffbdeb 	.word	0x2fffbdeb
2fff75dc:	2fffbe03 	.word	0x2fffbe03

2fff75e0 <pmic_operate>:
2fff75e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff75e4:	4681      	mov	r9, r0
2fff75e6:	a801      	add	r0, sp, #4
2fff75e8:	460f      	mov	r7, r1
2fff75ea:	4692      	mov	sl, r2
2fff75ec:	f000 fcea 	bl	2fff7fc4 <fdt_get_address>
2fff75f0:	b928      	cbnz	r0, 2fff75fe <pmic_operate+0x1e>
2fff75f2:	f06f 0b01 	mvn.w	fp, #1
2fff75f6:	4658      	mov	r0, fp
2fff75f8:	b003      	add	sp, #12
2fff75fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff75fe:	f7ff ffaf 	bl	2fff7560 <dt_get_pmic_node>
2fff7602:	1e01      	subs	r1, r0, #0
2fff7604:	dbf5      	blt.n	2fff75f2 <pmic_operate+0x12>
2fff7606:	4a7d      	ldr	r2, [pc, #500]	; (2fff77fc <pmic_operate+0x21c>)
2fff7608:	9801      	ldr	r0, [sp, #4]
2fff760a:	f002 f83a 	bl	2fff9682 <fdt_subnode_offset>
2fff760e:	1e01      	subs	r1, r0, #0
2fff7610:	dbef      	blt.n	2fff75f2 <pmic_operate+0x12>
2fff7612:	9801      	ldr	r0, [sp, #4]
2fff7614:	f06f 0b04 	mvn.w	fp, #4
2fff7618:	f001 ff39 	bl	2fff948e <fdt_first_subnode>
2fff761c:	4604      	mov	r4, r0
2fff761e:	2c00      	cmp	r4, #0
2fff7620:	dbe9      	blt.n	2fff75f6 <pmic_operate+0x16>
2fff7622:	9801      	ldr	r0, [sp, #4]
2fff7624:	2200      	movs	r2, #0
2fff7626:	4621      	mov	r1, r4
2fff7628:	f001 ffbc 	bl	2fff95a4 <fdt_get_name>
2fff762c:	f1b9 0f01 	cmp.w	r9, #1
2fff7630:	4605      	mov	r5, r0
2fff7632:	d01e      	beq.n	2fff7672 <pmic_operate+0x92>
2fff7634:	f1b9 0f02 	cmp.w	r9, #2
2fff7638:	d07d      	beq.n	2fff7736 <pmic_operate+0x156>
2fff763a:	b927      	cbnz	r7, 2fff7646 <pmic_operate+0x66>
2fff763c:	f240 110d 	movw	r1, #269	; 0x10d
2fff7640:	486f      	ldr	r0, [pc, #444]	; (2fff7800 <pmic_operate+0x220>)
2fff7642:	f002 fa3d 	bl	2fff9ac0 <__assert>
2fff7646:	f1ba 0f00 	cmp.w	sl, #0
2fff764a:	d102      	bne.n	2fff7652 <pmic_operate+0x72>
2fff764c:	f44f 7187 	mov.w	r1, #270	; 0x10e
2fff7650:	e7f6      	b.n	2fff7640 <pmic_operate+0x60>
2fff7652:	4639      	mov	r1, r7
2fff7654:	f002 fbb9 	bl	2fff9dca <strcmp>
2fff7658:	4603      	mov	r3, r0
2fff765a:	b9d8      	cbnz	r0, 2fff7694 <pmic_operate+0xb4>
2fff765c:	9801      	ldr	r0, [sp, #4]
2fff765e:	4652      	mov	r2, sl
2fff7660:	4621      	mov	r1, r4
2fff7662:	f7ff ff8d 	bl	2fff7580 <dt_pmic_get_regulator_voltage>
2fff7666:	f1b0 0b00 	subs.w	fp, r0, #0
2fff766a:	bfb8      	it	lt
2fff766c:	f06f 0b05 	mvnlt.w	fp, #5
2fff7670:	e7c1      	b.n	2fff75f6 <pmic_operate+0x16>
2fff7672:	9e01      	ldr	r6, [sp, #4]
2fff7674:	2300      	movs	r3, #0
2fff7676:	4a63      	ldr	r2, [pc, #396]	; (2fff7804 <pmic_operate+0x224>)
2fff7678:	4621      	mov	r1, r4
2fff767a:	4630      	mov	r0, r6
2fff767c:	f002 f883 	bl	2fff9786 <fdt_getprop>
2fff7680:	4603      	mov	r3, r0
2fff7682:	b968      	cbnz	r0, 2fff76a0 <pmic_operate+0xc0>
2fff7684:	4a60      	ldr	r2, [pc, #384]	; (2fff7808 <pmic_operate+0x228>)
2fff7686:	4621      	mov	r1, r4
2fff7688:	4630      	mov	r0, r6
2fff768a:	f002 f87c 	bl	2fff9786 <fdt_getprop>
2fff768e:	b938      	cbnz	r0, 2fff76a0 <pmic_operate+0xc0>
2fff7690:	f04f 0b00 	mov.w	fp, #0
2fff7694:	9801      	ldr	r0, [sp, #4]
2fff7696:	4621      	mov	r1, r4
2fff7698:	f001 ff0c 	bl	2fff94b4 <fdt_next_subnode>
2fff769c:	4604      	mov	r4, r0
2fff769e:	e7be      	b.n	2fff761e <pmic_operate+0x3e>
2fff76a0:	4a5a      	ldr	r2, [pc, #360]	; (2fff780c <pmic_operate+0x22c>)
2fff76a2:	2300      	movs	r3, #0
2fff76a4:	4621      	mov	r1, r4
2fff76a6:	4630      	mov	r0, r6
2fff76a8:	f002 f86d 	bl	2fff9786 <fdt_getprop>
2fff76ac:	bb70      	cbnz	r0, 2fff770c <pmic_operate+0x12c>
2fff76ae:	4a58      	ldr	r2, [pc, #352]	; (2fff7810 <pmic_operate+0x230>)
2fff76b0:	2300      	movs	r3, #0
2fff76b2:	4621      	mov	r1, r4
2fff76b4:	4630      	mov	r0, r6
2fff76b6:	f002 f866 	bl	2fff9786 <fdt_getprop>
2fff76ba:	bb70      	cbnz	r0, 2fff771a <pmic_operate+0x13a>
2fff76bc:	f10d 0302 	add.w	r3, sp, #2
2fff76c0:	466a      	mov	r2, sp
2fff76c2:	4621      	mov	r1, r4
2fff76c4:	4630      	mov	r0, r6
2fff76c6:	f7ff ff5b 	bl	2fff7580 <dt_pmic_get_regulator_voltage>
2fff76ca:	2800      	cmp	r0, #0
2fff76cc:	dbe0      	blt.n	2fff7690 <pmic_operate+0xb0>
2fff76ce:	4628      	mov	r0, r5
2fff76d0:	f000 f9fe 	bl	2fff7ad0 <stpmic1_regulator_voltage_get>
2fff76d4:	f1b0 0b00 	subs.w	fp, r0, #0
2fff76d8:	db8d      	blt.n	2fff75f6 <pmic_operate+0x16>
2fff76da:	f8bd 1000 	ldrh.w	r1, [sp]
2fff76de:	fa1f f08b 	uxth.w	r0, fp
2fff76e2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
2fff76e6:	4288      	cmp	r0, r1
2fff76e8:	bf28      	it	cs
2fff76ea:	2100      	movcs	r1, #0
2fff76ec:	4290      	cmp	r0, r2
2fff76ee:	bf88      	it	hi
2fff76f0:	4611      	movhi	r1, r2
2fff76f2:	b9c9      	cbnz	r1, 2fff7728 <pmic_operate+0x148>
2fff76f4:	4628      	mov	r0, r5
2fff76f6:	f000 f9d7 	bl	2fff7aa8 <stpmic1_is_regulator_enabled>
2fff76fa:	2800      	cmp	r0, #0
2fff76fc:	d1c8      	bne.n	2fff7690 <pmic_operate+0xb0>
2fff76fe:	4628      	mov	r0, r5
2fff7700:	f000 fa80 	bl	2fff7c04 <stpmic1_regulator_enable>
2fff7704:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7708:	dac2      	bge.n	2fff7690 <pmic_operate+0xb0>
2fff770a:	e774      	b.n	2fff75f6 <pmic_operate+0x16>
2fff770c:	4628      	mov	r0, r5
2fff770e:	f000 fab1 	bl	2fff7c74 <stpmic1_regulator_pull_down_set>
2fff7712:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7716:	daca      	bge.n	2fff76ae <pmic_operate+0xce>
2fff7718:	e76d      	b.n	2fff75f6 <pmic_operate+0x16>
2fff771a:	4628      	mov	r0, r5
2fff771c:	f000 fabc 	bl	2fff7c98 <stpmic1_regulator_mask_reset_set>
2fff7720:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7724:	daca      	bge.n	2fff76bc <pmic_operate+0xdc>
2fff7726:	e766      	b.n	2fff75f6 <pmic_operate+0x16>
2fff7728:	4628      	mov	r0, r5
2fff772a:	f000 fa75 	bl	2fff7c18 <stpmic1_regulator_voltage_set>
2fff772e:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7732:	dadf      	bge.n	2fff76f4 <pmic_operate+0x114>
2fff7734:	e75f      	b.n	2fff75f6 <pmic_operate+0x16>
2fff7736:	b917      	cbnz	r7, 2fff773e <pmic_operate+0x15e>
2fff7738:	f240 1125 	movw	r1, #293	; 0x125
2fff773c:	e780      	b.n	2fff7640 <pmic_operate+0x60>
2fff773e:	f8dd 8004 	ldr.w	r8, [sp, #4]
2fff7742:	f000 fa55 	bl	2fff7bf0 <stpmic1_powerctrl_on>
2fff7746:	f1b0 0b00 	subs.w	fp, r0, #0
2fff774a:	f6ff af54 	blt.w	2fff75f6 <pmic_operate+0x16>
2fff774e:	4628      	mov	r0, r5
2fff7750:	f000 fa24 	bl	2fff7b9c <stpmic1_lp_copy_reg>
2fff7754:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7758:	f6ff af4d 	blt.w	2fff75f6 <pmic_operate+0x16>
2fff775c:	463a      	mov	r2, r7
2fff775e:	4621      	mov	r1, r4
2fff7760:	4640      	mov	r0, r8
2fff7762:	f001 ff8e 	bl	2fff9682 <fdt_subnode_offset>
2fff7766:	1e06      	subs	r6, r0, #0
2fff7768:	dd92      	ble.n	2fff7690 <pmic_operate+0xb0>
2fff776a:	4a2a      	ldr	r2, [pc, #168]	; (2fff7814 <pmic_operate+0x234>)
2fff776c:	2300      	movs	r3, #0
2fff776e:	4631      	mov	r1, r6
2fff7770:	4640      	mov	r0, r8
2fff7772:	f002 f808 	bl	2fff9786 <fdt_getprop>
2fff7776:	bb08      	cbnz	r0, 2fff77bc <pmic_operate+0x1dc>
2fff7778:	4a27      	ldr	r2, [pc, #156]	; (2fff7818 <pmic_operate+0x238>)
2fff777a:	2300      	movs	r3, #0
2fff777c:	4631      	mov	r1, r6
2fff777e:	4640      	mov	r0, r8
2fff7780:	f002 f801 	bl	2fff9786 <fdt_getprop>
2fff7784:	bb10      	cbnz	r0, 2fff77cc <pmic_operate+0x1ec>
2fff7786:	4a25      	ldr	r2, [pc, #148]	; (2fff781c <pmic_operate+0x23c>)
2fff7788:	2300      	movs	r3, #0
2fff778a:	4631      	mov	r1, r6
2fff778c:	4640      	mov	r0, r8
2fff778e:	f001 fffa 	bl	2fff9786 <fdt_getprop>
2fff7792:	bb18      	cbnz	r0, 2fff77dc <pmic_operate+0x1fc>
2fff7794:	4a22      	ldr	r2, [pc, #136]	; (2fff7820 <pmic_operate+0x240>)
2fff7796:	2300      	movs	r3, #0
2fff7798:	4631      	mov	r1, r6
2fff779a:	4640      	mov	r0, r8
2fff779c:	f001 fff3 	bl	2fff9786 <fdt_getprop>
2fff77a0:	2800      	cmp	r0, #0
2fff77a2:	f43f af75 	beq.w	2fff7690 <pmic_operate+0xb0>
2fff77a6:	6800      	ldr	r0, [r0, #0]
2fff77a8:	f7ff fed8 	bl	2fff755c <fdt32_to_cpu>
2fff77ac:	2808      	cmp	r0, #8
2fff77ae:	f47f af6f 	bne.w	2fff7690 <pmic_operate+0xb0>
2fff77b2:	2101      	movs	r1, #1
2fff77b4:	4628      	mov	r0, r5
2fff77b6:	f000 fa87 	bl	2fff7cc8 <stpmic1_lp_set_mode>
2fff77ba:	e7a3      	b.n	2fff7704 <pmic_operate+0x124>
2fff77bc:	2101      	movs	r1, #1
2fff77be:	4628      	mov	r0, r5
2fff77c0:	f000 fa77 	bl	2fff7cb2 <stpmic1_lp_reg_on_off>
2fff77c4:	f1b0 0b00 	subs.w	fp, r0, #0
2fff77c8:	dad6      	bge.n	2fff7778 <pmic_operate+0x198>
2fff77ca:	e714      	b.n	2fff75f6 <pmic_operate+0x16>
2fff77cc:	2100      	movs	r1, #0
2fff77ce:	4628      	mov	r0, r5
2fff77d0:	f000 fa6f 	bl	2fff7cb2 <stpmic1_lp_reg_on_off>
2fff77d4:	f1b0 0b00 	subs.w	fp, r0, #0
2fff77d8:	dad5      	bge.n	2fff7786 <pmic_operate+0x1a6>
2fff77da:	e70c      	b.n	2fff75f6 <pmic_operate+0x16>
2fff77dc:	6800      	ldr	r0, [r0, #0]
2fff77de:	f7ff febd 	bl	2fff755c <fdt32_to_cpu>
2fff77e2:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff77e6:	fbb0 f1f1 	udiv	r1, r0, r1
2fff77ea:	4628      	mov	r0, r5
2fff77ec:	b289      	uxth	r1, r1
2fff77ee:	f000 fa79 	bl	2fff7ce4 <stpmic1_lp_set_voltage>
2fff77f2:	f1b0 0b00 	subs.w	fp, r0, #0
2fff77f6:	dacd      	bge.n	2fff7794 <pmic_operate+0x1b4>
2fff77f8:	e6fd      	b.n	2fff75f6 <pmic_operate+0x16>
2fff77fa:	bf00      	nop
2fff77fc:	2fffbe1b 	.word	0x2fffbe1b
2fff7800:	2fffbe26 	.word	0x2fffbe26
2fff7804:	2fffbe45 	.word	0x2fffbe45
2fff7808:	2fffbe57 	.word	0x2fffbe57
2fff780c:	2fffbe6b 	.word	0x2fffbe6b
2fff7810:	2fffbe7f 	.word	0x2fffbe7f
2fff7814:	2fffbe8d 	.word	0x2fffbe8d
2fff7818:	2fffbea5 	.word	0x2fffbea5
2fff781c:	2fffbebe 	.word	0x2fffbebe
2fff7820:	2fffbeda 	.word	0x2fffbeda

2fff7824 <dt_pmic_status>:
2fff7824:	b510      	push	{r4, lr}
2fff7826:	4c08      	ldr	r4, [pc, #32]	; (2fff7848 <dt_pmic_status+0x24>)
2fff7828:	6820      	ldr	r0, [r4, #0]
2fff782a:	f110 0f0f 	cmn.w	r0, #15
2fff782e:	d106      	bne.n	2fff783e <dt_pmic_status+0x1a>
2fff7830:	f7ff fe96 	bl	2fff7560 <dt_get_pmic_node>
2fff7834:	2800      	cmp	r0, #0
2fff7836:	dc03      	bgt.n	2fff7840 <dt_pmic_status+0x1c>
2fff7838:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff783c:	6020      	str	r0, [r4, #0]
2fff783e:	bd10      	pop	{r4, pc}
2fff7840:	f000 fbcc 	bl	2fff7fdc <fdt_get_status>
2fff7844:	e7fa      	b.n	2fff783c <dt_pmic_status+0x18>
2fff7846:	bf00      	nop
2fff7848:	2fffd534 	.word	0x2fffd534

2fff784c <pmic_configure_boot_on_regulators>:
2fff784c:	2200      	movs	r2, #0
2fff784e:	2001      	movs	r0, #1
2fff7850:	4611      	mov	r1, r2
2fff7852:	f7ff bec5 	b.w	2fff75e0 <pmic_operate>

2fff7856 <pmic_set_lp_config>:
2fff7856:	4601      	mov	r1, r0
2fff7858:	2200      	movs	r2, #0
2fff785a:	2002      	movs	r0, #2
2fff785c:	f7ff bec0 	b.w	2fff75e0 <pmic_operate>

2fff7860 <dt_pmic_find_supply>:
2fff7860:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff7864:	4606      	mov	r6, r0
2fff7866:	a801      	add	r0, sp, #4
2fff7868:	460f      	mov	r7, r1
2fff786a:	f000 fbab 	bl	2fff7fc4 <fdt_get_address>
2fff786e:	b928      	cbnz	r0, 2fff787c <dt_pmic_find_supply+0x1c>
2fff7870:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff7874:	4628      	mov	r0, r5
2fff7876:	b002      	add	sp, #8
2fff7878:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff787c:	f7ff fe70 	bl	2fff7560 <dt_get_pmic_node>
2fff7880:	1e01      	subs	r1, r0, #0
2fff7882:	dbf5      	blt.n	2fff7870 <dt_pmic_find_supply+0x10>
2fff7884:	4a13      	ldr	r2, [pc, #76]	; (2fff78d4 <dt_pmic_find_supply+0x74>)
2fff7886:	9801      	ldr	r0, [sp, #4]
2fff7888:	f001 fefb 	bl	2fff9682 <fdt_subnode_offset>
2fff788c:	1e01      	subs	r1, r0, #0
2fff788e:	dbef      	blt.n	2fff7870 <dt_pmic_find_supply+0x10>
2fff7890:	9801      	ldr	r0, [sp, #4]
2fff7892:	f8df 8044 	ldr.w	r8, [pc, #68]	; 2fff78d8 <dt_pmic_find_supply+0x78>
2fff7896:	f001 fdfa 	bl	2fff948e <fdt_first_subnode>
2fff789a:	4604      	mov	r4, r0
2fff789c:	2c00      	cmp	r4, #0
2fff789e:	dbe7      	blt.n	2fff7870 <dt_pmic_find_supply+0x10>
2fff78a0:	9801      	ldr	r0, [sp, #4]
2fff78a2:	2300      	movs	r3, #0
2fff78a4:	4642      	mov	r2, r8
2fff78a6:	4621      	mov	r1, r4
2fff78a8:	f001 ff6d 	bl	2fff9786 <fdt_getprop>
2fff78ac:	b158      	cbz	r0, 2fff78c6 <dt_pmic_find_supply+0x66>
2fff78ae:	4639      	mov	r1, r7
2fff78b0:	f002 fa8b 	bl	2fff9dca <strcmp>
2fff78b4:	4605      	mov	r5, r0
2fff78b6:	b930      	cbnz	r0, 2fff78c6 <dt_pmic_find_supply+0x66>
2fff78b8:	4602      	mov	r2, r0
2fff78ba:	4621      	mov	r1, r4
2fff78bc:	9801      	ldr	r0, [sp, #4]
2fff78be:	f001 fe71 	bl	2fff95a4 <fdt_get_name>
2fff78c2:	6030      	str	r0, [r6, #0]
2fff78c4:	e7d6      	b.n	2fff7874 <dt_pmic_find_supply+0x14>
2fff78c6:	9801      	ldr	r0, [sp, #4]
2fff78c8:	4621      	mov	r1, r4
2fff78ca:	f001 fdf3 	bl	2fff94b4 <fdt_next_subnode>
2fff78ce:	4604      	mov	r4, r0
2fff78d0:	e7e4      	b.n	2fff789c <dt_pmic_find_supply+0x3c>
2fff78d2:	bf00      	nop
2fff78d4:	2fffbe1b 	.word	0x2fffbe1b
2fff78d8:	2fffbee9 	.word	0x2fffbee9

2fff78dc <initialize_pmic_i2c>:
2fff78dc:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff78de:	b091      	sub	sp, #68	; 0x44
2fff78e0:	4d39      	ldr	r5, [pc, #228]	; (2fff79c8 <initialize_pmic_i2c+0xec>)
2fff78e2:	682c      	ldr	r4, [r5, #0]
2fff78e4:	1c63      	adds	r3, r4, #1
2fff78e6:	d129      	bne.n	2fff793c <initialize_pmic_i2c+0x60>
2fff78e8:	a804      	add	r0, sp, #16
2fff78ea:	f000 fb6b 	bl	2fff7fc4 <fdt_get_address>
2fff78ee:	b1d0      	cbz	r0, 2fff7926 <initialize_pmic_i2c+0x4a>
2fff78f0:	f7ff fe36 	bl	2fff7560 <dt_get_pmic_node>
2fff78f4:	1e06      	subs	r6, r0, #0
2fff78f6:	db64      	blt.n	2fff79c2 <initialize_pmic_i2c+0xe6>
2fff78f8:	4a34      	ldr	r2, [pc, #208]	; (2fff79cc <initialize_pmic_i2c+0xf0>)
2fff78fa:	2300      	movs	r3, #0
2fff78fc:	9804      	ldr	r0, [sp, #16]
2fff78fe:	4631      	mov	r1, r6
2fff7900:	f001 ff41 	bl	2fff9786 <fdt_getprop>
2fff7904:	b178      	cbz	r0, 2fff7926 <initialize_pmic_i2c+0x4a>
2fff7906:	6800      	ldr	r0, [r0, #0]
2fff7908:	f7ff fe28 	bl	2fff755c <fdt32_to_cpu>
2fff790c:	0040      	lsls	r0, r0, #1
2fff790e:	4b30      	ldr	r3, [pc, #192]	; (2fff79d0 <initialize_pmic_i2c+0xf4>)
2fff7910:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
2fff7914:	6018      	str	r0, [r3, #0]
2fff7916:	d20e      	bcs.n	2fff7936 <initialize_pmic_i2c+0x5a>
2fff7918:	9804      	ldr	r0, [sp, #16]
2fff791a:	4631      	mov	r1, r6
2fff791c:	f002 f815 	bl	2fff994a <fdt_parent_offset>
2fff7920:	6028      	str	r0, [r5, #0]
2fff7922:	2800      	cmp	r0, #0
2fff7924:	da0a      	bge.n	2fff793c <initialize_pmic_i2c+0x60>
2fff7926:	482b      	ldr	r0, [pc, #172]	; (2fff79d4 <initialize_pmic_i2c+0xf8>)
2fff7928:	4621      	mov	r1, r4
2fff792a:	f7fa ffd7 	bl	2fff28dc <tf_log>
2fff792e:	f7fb f879 	bl	2fff2a24 <console_flush>
2fff7932:	f001 e88c 	blx	2fff8a4c <do_panic>
2fff7936:	f06f 040e 	mvn.w	r4, #14
2fff793a:	e7f4      	b.n	2fff7926 <initialize_pmic_i2c+0x4a>
2fff793c:	6829      	ldr	r1, [r5, #0]
2fff793e:	4668      	mov	r0, sp
2fff7940:	f000 fbe8 	bl	2fff8114 <dt_fill_device_info>
2fff7944:	9b00      	ldr	r3, [sp, #0]
2fff7946:	b333      	cbz	r3, 2fff7996 <initialize_pmic_i2c+0xba>
2fff7948:	6828      	ldr	r0, [r5, #0]
2fff794a:	a904      	add	r1, sp, #16
2fff794c:	f7ff f9a8 	bl	2fff6ca0 <stm32_i2c_get_setup_from_fdt>
2fff7950:	1e04      	subs	r4, r0, #0
2fff7952:	dbe8      	blt.n	2fff7926 <initialize_pmic_i2c+0x4a>
2fff7954:	d135      	bne.n	2fff79c2 <initialize_pmic_i2c+0xe6>
2fff7956:	4d20      	ldr	r5, [pc, #128]	; (2fff79d8 <initialize_pmic_i2c+0xfc>)
2fff7958:	2701      	movs	r7, #1
2fff795a:	9b00      	ldr	r3, [sp, #0]
2fff795c:	a904      	add	r1, sp, #16
2fff795e:	4e1c      	ldr	r6, [pc, #112]	; (2fff79d0 <initialize_pmic_i2c+0xf4>)
2fff7960:	4628      	mov	r0, r5
2fff7962:	602b      	str	r3, [r5, #0]
2fff7964:	9b03      	ldr	r3, [sp, #12]
2fff7966:	612c      	str	r4, [r5, #16]
2fff7968:	606b      	str	r3, [r5, #4]
2fff796a:	9b01      	ldr	r3, [sp, #4]
2fff796c:	9705      	str	r7, [sp, #20]
2fff796e:	60ab      	str	r3, [r5, #8]
2fff7970:	6833      	ldr	r3, [r6, #0]
2fff7972:	e9cd 4406 	strd	r4, r4, [sp, #24]
2fff7976:	9304      	str	r3, [sp, #16]
2fff7978:	e9cd 4408 	strd	r4, r4, [sp, #32]
2fff797c:	940a      	str	r4, [sp, #40]	; 0x28
2fff797e:	970e      	str	r7, [sp, #56]	; 0x38
2fff7980:	f88d 403c 	strb.w	r4, [sp, #60]	; 0x3c
2fff7984:	f7ff f9bc 	bl	2fff6d00 <stm32_i2c_init>
2fff7988:	4602      	mov	r2, r0
2fff798a:	b138      	cbz	r0, 2fff799c <initialize_pmic_i2c+0xc0>
2fff798c:	6829      	ldr	r1, [r5, #0]
2fff798e:	4813      	ldr	r0, [pc, #76]	; (2fff79dc <initialize_pmic_i2c+0x100>)
2fff7990:	f7fa ffa4 	bl	2fff28dc <tf_log>
2fff7994:	e7cb      	b.n	2fff792e <initialize_pmic_i2c+0x52>
2fff7996:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff799a:	e7c4      	b.n	2fff7926 <initialize_pmic_i2c+0x4a>
2fff799c:	8831      	ldrh	r1, [r6, #0]
2fff799e:	2319      	movs	r3, #25
2fff79a0:	463a      	mov	r2, r7
2fff79a2:	4628      	mov	r0, r5
2fff79a4:	f7ff fbec 	bl	2fff7180 <stm32_i2c_is_device_ready>
2fff79a8:	4604      	mov	r4, r0
2fff79aa:	b918      	cbnz	r0, 2fff79b4 <initialize_pmic_i2c+0xd8>
2fff79ac:	480c      	ldr	r0, [pc, #48]	; (2fff79e0 <initialize_pmic_i2c+0x104>)
2fff79ae:	f7fa ff95 	bl	2fff28dc <tf_log>
2fff79b2:	e7bc      	b.n	2fff792e <initialize_pmic_i2c+0x52>
2fff79b4:	8831      	ldrh	r1, [r6, #0]
2fff79b6:	4628      	mov	r0, r5
2fff79b8:	f000 f9c2 	bl	2fff7d40 <stpmic1_bind_i2c>
2fff79bc:	4620      	mov	r0, r4
2fff79be:	b011      	add	sp, #68	; 0x44
2fff79c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff79c2:	2400      	movs	r4, #0
2fff79c4:	e7fa      	b.n	2fff79bc <initialize_pmic_i2c+0xe0>
2fff79c6:	bf00      	nop
2fff79c8:	2fffd52c 	.word	0x2fffd52c
2fff79cc:	2fffa810 	.word	0x2fffa810
2fff79d0:	2fffeb04 	.word	0x2fffeb04
2fff79d4:	2fffbef8 	.word	0x2fffbef8
2fff79d8:	2fffeae0 	.word	0x2fffeae0
2fff79dc:	2fffbf16 	.word	0x2fffbf16
2fff79e0:	2fffbf36 	.word	0x2fffbf36

2fff79e4 <initialize_pmic>:
2fff79e4:	b510      	push	{r4, lr}
2fff79e6:	f7ff ff79 	bl	2fff78dc <initialize_pmic_i2c>
2fff79ea:	4c0a      	ldr	r4, [pc, #40]	; (2fff7a14 <initialize_pmic+0x30>)
2fff79ec:	b928      	cbnz	r0, 2fff79fa <initialize_pmic+0x16>
2fff79ee:	6820      	ldr	r0, [r4, #0]
2fff79f0:	b178      	cbz	r0, 2fff7a12 <initialize_pmic+0x2e>
2fff79f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff79f6:	f7f9 b81f 	b.w	2fff0a38 <stm32mp_register_non_secure_periph_iomem>
2fff79fa:	f7ff ff13 	bl	2fff7824 <dt_pmic_status>
2fff79fe:	2802      	cmp	r0, #2
2fff7a00:	d1f5      	bne.n	2fff79ee <initialize_pmic+0xa>
2fff7a02:	e9d4 0300 	ldrd	r0, r3, [r4]
2fff7a06:	2b02      	cmp	r3, #2
2fff7a08:	d1f1      	bne.n	2fff79ee <initialize_pmic+0xa>
2fff7a0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff7a0e:	f7f9 b810 	b.w	2fff0a32 <stm32mp_register_secure_periph_iomem>
2fff7a12:	bd10      	pop	{r4, pc}
2fff7a14:	2fffeae0 	.word	0x2fffeae0

2fff7a18 <get_regulator_data>:
2fff7a18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff7a1c:	4606      	mov	r6, r0
2fff7a1e:	4c0c      	ldr	r4, [pc, #48]	; (2fff7a50 <get_regulator_data+0x38>)
2fff7a20:	2500      	movs	r5, #0
2fff7a22:	012f      	lsls	r7, r5, #4
2fff7a24:	f857 8004 	ldr.w	r8, [r7, r4]
2fff7a28:	4640      	mov	r0, r8
2fff7a2a:	f002 f9f6 	bl	2fff9e1a <strlen>
2fff7a2e:	4602      	mov	r2, r0
2fff7a30:	4641      	mov	r1, r8
2fff7a32:	4630      	mov	r0, r6
2fff7a34:	f002 f9f9 	bl	2fff9e2a <strncmp>
2fff7a38:	b910      	cbnz	r0, 2fff7a40 <get_regulator_data+0x28>
2fff7a3a:	19e0      	adds	r0, r4, r7
2fff7a3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff7a40:	3501      	adds	r5, #1
2fff7a42:	2d0e      	cmp	r5, #14
2fff7a44:	d1ed      	bne.n	2fff7a22 <get_regulator_data+0xa>
2fff7a46:	f7fa ffed 	bl	2fff2a24 <console_flush>
2fff7a4a:	f001 e800 	blx	2fff8a4c <do_panic>
2fff7a4e:	bf00      	nop
2fff7a50:	2fffc27c 	.word	0x2fffc27c

2fff7a54 <voltage_to_index>:
2fff7a54:	b538      	push	{r3, r4, r5, lr}
2fff7a56:	460c      	mov	r4, r1
2fff7a58:	f7ff ffde 	bl	2fff7a18 <get_regulator_data>
2fff7a5c:	7a01      	ldrb	r1, [r0, #8]
2fff7a5e:	4602      	mov	r2, r0
2fff7a60:	2300      	movs	r3, #0
2fff7a62:	b2d8      	uxtb	r0, r3
2fff7a64:	4281      	cmp	r1, r0
2fff7a66:	d803      	bhi.n	2fff7a70 <voltage_to_index+0x1c>
2fff7a68:	f7fa ffdc 	bl	2fff2a24 <console_flush>
2fff7a6c:	f000 efee 	blx	2fff8a4c <do_panic>
2fff7a70:	6855      	ldr	r5, [r2, #4]
2fff7a72:	f835 5013 	ldrh.w	r5, [r5, r3, lsl #1]
2fff7a76:	3301      	adds	r3, #1
2fff7a78:	42a5      	cmp	r5, r4
2fff7a7a:	d1f2      	bne.n	2fff7a62 <voltage_to_index+0xe>
2fff7a7c:	bd38      	pop	{r3, r4, r5, pc}
	...

2fff7a80 <stpmic1_register_read>:
2fff7a80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff7a82:	2319      	movs	r3, #25
2fff7a84:	9302      	str	r3, [sp, #8]
2fff7a86:	2301      	movs	r3, #1
2fff7a88:	e9cd 1300 	strd	r1, r3, [sp]
2fff7a8c:	4904      	ldr	r1, [pc, #16]	; (2fff7aa0 <stpmic1_register_read+0x20>)
2fff7a8e:	4602      	mov	r2, r0
2fff7a90:	4804      	ldr	r0, [pc, #16]	; (2fff7aa4 <stpmic1_register_read+0x24>)
2fff7a92:	8809      	ldrh	r1, [r1, #0]
2fff7a94:	6800      	ldr	r0, [r0, #0]
2fff7a96:	f7ff fb69 	bl	2fff716c <stm32_i2c_mem_read>
2fff7a9a:	b005      	add	sp, #20
2fff7a9c:	f85d fb04 	ldr.w	pc, [sp], #4
2fff7aa0:	2fffeb08 	.word	0x2fffeb08
2fff7aa4:	2fffeb0c 	.word	0x2fffeb0c

2fff7aa8 <stpmic1_is_regulator_enabled>:
2fff7aa8:	b507      	push	{r0, r1, r2, lr}
2fff7aaa:	f7ff ffb5 	bl	2fff7a18 <get_regulator_data>
2fff7aae:	7a40      	ldrb	r0, [r0, #9]
2fff7ab0:	f10d 0107 	add.w	r1, sp, #7
2fff7ab4:	f7ff ffe4 	bl	2fff7a80 <stpmic1_register_read>
2fff7ab8:	b118      	cbz	r0, 2fff7ac2 <stpmic1_is_regulator_enabled+0x1a>
2fff7aba:	f7fa ffb3 	bl	2fff2a24 <console_flush>
2fff7abe:	f000 efc6 	blx	2fff8a4c <do_panic>
2fff7ac2:	f89d 0007 	ldrb.w	r0, [sp, #7]
2fff7ac6:	f000 0001 	and.w	r0, r0, #1
2fff7aca:	b003      	add	sp, #12
2fff7acc:	f85d fb04 	ldr.w	pc, [sp], #4

2fff7ad0 <stpmic1_regulator_voltage_get>:
2fff7ad0:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff7ad2:	4605      	mov	r5, r0
2fff7ad4:	f7ff ffa0 	bl	2fff7a18 <get_regulator_data>
2fff7ad8:	4917      	ldr	r1, [pc, #92]	; (2fff7b38 <stpmic1_regulator_voltage_get+0x68>)
2fff7ada:	4604      	mov	r4, r0
2fff7adc:	2204      	movs	r2, #4
2fff7ade:	4628      	mov	r0, r5
2fff7ae0:	f002 f9a3 	bl	2fff9e2a <strncmp>
2fff7ae4:	b328      	cbz	r0, 2fff7b32 <stpmic1_regulator_voltage_get+0x62>
2fff7ae6:	4915      	ldr	r1, [pc, #84]	; (2fff7b3c <stpmic1_regulator_voltage_get+0x6c>)
2fff7ae8:	2203      	movs	r2, #3
2fff7aea:	4628      	mov	r0, r5
2fff7aec:	f002 f99d 	bl	2fff9e2a <strncmp>
2fff7af0:	b110      	cbz	r0, 2fff7af8 <stpmic1_regulator_voltage_get+0x28>
2fff7af2:	2000      	movs	r0, #0
2fff7af4:	b003      	add	sp, #12
2fff7af6:	bd30      	pop	{r4, r5, pc}
2fff7af8:	4911      	ldr	r1, [pc, #68]	; (2fff7b40 <stpmic1_regulator_voltage_get+0x70>)
2fff7afa:	2204      	movs	r2, #4
2fff7afc:	4628      	mov	r0, r5
2fff7afe:	f002 f994 	bl	2fff9e2a <strncmp>
2fff7b02:	2800      	cmp	r0, #0
2fff7b04:	d0f5      	beq.n	2fff7af2 <stpmic1_regulator_voltage_get+0x22>
2fff7b06:	257c      	movs	r5, #124	; 0x7c
2fff7b08:	7a60      	ldrb	r0, [r4, #9]
2fff7b0a:	f10d 0107 	add.w	r1, sp, #7
2fff7b0e:	f7ff ffb7 	bl	2fff7a80 <stpmic1_register_read>
2fff7b12:	2800      	cmp	r0, #0
2fff7b14:	dbee      	blt.n	2fff7af4 <stpmic1_regulator_voltage_get+0x24>
2fff7b16:	f89d 3007 	ldrb.w	r3, [sp, #7]
2fff7b1a:	401d      	ands	r5, r3
2fff7b1c:	7a23      	ldrb	r3, [r4, #8]
2fff7b1e:	08aa      	lsrs	r2, r5, #2
2fff7b20:	ebb3 0f95 	cmp.w	r3, r5, lsr #2
2fff7b24:	bf32      	itee	cc
2fff7b26:	f06f 0021 	mvncc.w	r0, #33	; 0x21
2fff7b2a:	6863      	ldrcs	r3, [r4, #4]
2fff7b2c:	f833 0012 	ldrhcs.w	r0, [r3, r2, lsl #1]
2fff7b30:	e7e0      	b.n	2fff7af4 <stpmic1_regulator_voltage_get+0x24>
2fff7b32:	25fc      	movs	r5, #252	; 0xfc
2fff7b34:	e7e8      	b.n	2fff7b08 <stpmic1_regulator_voltage_get+0x38>
2fff7b36:	bf00      	nop
2fff7b38:	2fffbf4d 	.word	0x2fffbf4d
2fff7b3c:	2fffbf52 	.word	0x2fffbf52
2fff7b40:	2fffbf56 	.word	0x2fffbf56

2fff7b44 <stpmic1_register_write>:
2fff7b44:	b510      	push	{r4, lr}
2fff7b46:	b088      	sub	sp, #32
2fff7b48:	f10d 0217 	add.w	r2, sp, #23
2fff7b4c:	2319      	movs	r3, #25
2fff7b4e:	9200      	str	r2, [sp, #0]
2fff7b50:	4604      	mov	r4, r0
2fff7b52:	f88d 1017 	strb.w	r1, [sp, #23]
2fff7b56:	4602      	mov	r2, r0
2fff7b58:	490e      	ldr	r1, [pc, #56]	; (2fff7b94 <stpmic1_register_write+0x50>)
2fff7b5a:	480f      	ldr	r0, [pc, #60]	; (2fff7b98 <stpmic1_register_write+0x54>)
2fff7b5c:	9302      	str	r3, [sp, #8]
2fff7b5e:	2301      	movs	r3, #1
2fff7b60:	9301      	str	r3, [sp, #4]
2fff7b62:	8809      	ldrh	r1, [r1, #0]
2fff7b64:	6800      	ldr	r0, [r0, #0]
2fff7b66:	f7ff faf3 	bl	2fff7150 <stm32_i2c_mem_write>
2fff7b6a:	b988      	cbnz	r0, 2fff7b90 <stpmic1_register_write+0x4c>
2fff7b6c:	2c1b      	cmp	r4, #27
2fff7b6e:	d00f      	beq.n	2fff7b90 <stpmic1_register_write+0x4c>
2fff7b70:	2c40      	cmp	r4, #64	; 0x40
2fff7b72:	d80d      	bhi.n	2fff7b90 <stpmic1_register_write+0x4c>
2fff7b74:	f10d 011f 	add.w	r1, sp, #31
2fff7b78:	4620      	mov	r0, r4
2fff7b7a:	f7ff ff81 	bl	2fff7a80 <stpmic1_register_read>
2fff7b7e:	b938      	cbnz	r0, 2fff7b90 <stpmic1_register_write+0x4c>
2fff7b80:	f89d 201f 	ldrb.w	r2, [sp, #31]
2fff7b84:	f89d 3017 	ldrb.w	r3, [sp, #23]
2fff7b88:	429a      	cmp	r2, r3
2fff7b8a:	bf18      	it	ne
2fff7b8c:	f06f 0004 	mvnne.w	r0, #4
2fff7b90:	b008      	add	sp, #32
2fff7b92:	bd10      	pop	{r4, pc}
2fff7b94:	2fffeb08 	.word	0x2fffeb08
2fff7b98:	2fffeb0c 	.word	0x2fffeb0c

2fff7b9c <stpmic1_lp_copy_reg>:
2fff7b9c:	b513      	push	{r0, r1, r4, lr}
2fff7b9e:	f7ff ff3b 	bl	2fff7a18 <get_regulator_data>
2fff7ba2:	4604      	mov	r4, r0
2fff7ba4:	7a80      	ldrb	r0, [r0, #10]
2fff7ba6:	b150      	cbz	r0, 2fff7bbe <stpmic1_lp_copy_reg+0x22>
2fff7ba8:	7a60      	ldrb	r0, [r4, #9]
2fff7baa:	f10d 0107 	add.w	r1, sp, #7
2fff7bae:	f7ff ff67 	bl	2fff7a80 <stpmic1_register_read>
2fff7bb2:	b920      	cbnz	r0, 2fff7bbe <stpmic1_lp_copy_reg+0x22>
2fff7bb4:	f89d 1007 	ldrb.w	r1, [sp, #7]
2fff7bb8:	7aa0      	ldrb	r0, [r4, #10]
2fff7bba:	f7ff ffc3 	bl	2fff7b44 <stpmic1_register_write>
2fff7bbe:	b002      	add	sp, #8
2fff7bc0:	bd10      	pop	{r4, pc}

2fff7bc2 <stpmic1_register_update>:
2fff7bc2:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff7bc4:	460e      	mov	r6, r1
2fff7bc6:	f10d 0107 	add.w	r1, sp, #7
2fff7bca:	4605      	mov	r5, r0
2fff7bcc:	4614      	mov	r4, r2
2fff7bce:	f7ff ff57 	bl	2fff7a80 <stpmic1_register_read>
2fff7bd2:	b958      	cbnz	r0, 2fff7bec <stpmic1_register_update+0x2a>
2fff7bd4:	f89d 3007 	ldrb.w	r3, [sp, #7]
2fff7bd8:	4628      	mov	r0, r5
2fff7bda:	ea04 0106 	and.w	r1, r4, r6
2fff7bde:	ea23 0304 	bic.w	r3, r3, r4
2fff7be2:	4319      	orrs	r1, r3
2fff7be4:	f88d 1007 	strb.w	r1, [sp, #7]
2fff7be8:	f7ff ffac 	bl	2fff7b44 <stpmic1_register_write>
2fff7bec:	b002      	add	sp, #8
2fff7bee:	bd70      	pop	{r4, r5, r6, pc}

2fff7bf0 <stpmic1_powerctrl_on>:
2fff7bf0:	2204      	movs	r2, #4
2fff7bf2:	2010      	movs	r0, #16
2fff7bf4:	4611      	mov	r1, r2
2fff7bf6:	f7ff bfe4 	b.w	2fff7bc2 <stpmic1_register_update>

2fff7bfa <stpmic1_switch_off>:
2fff7bfa:	2201      	movs	r2, #1
2fff7bfc:	2010      	movs	r0, #16
2fff7bfe:	4611      	mov	r1, r2
2fff7c00:	f7ff bfdf 	b.w	2fff7bc2 <stpmic1_register_update>

2fff7c04 <stpmic1_regulator_enable>:
2fff7c04:	b508      	push	{r3, lr}
2fff7c06:	f7ff ff07 	bl	2fff7a18 <get_regulator_data>
2fff7c0a:	7a40      	ldrb	r0, [r0, #9]
2fff7c0c:	2201      	movs	r2, #1
2fff7c0e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff7c12:	4611      	mov	r1, r2
2fff7c14:	f7ff bfd5 	b.w	2fff7bc2 <stpmic1_register_update>

2fff7c18 <stpmic1_regulator_voltage_set>:
2fff7c18:	b570      	push	{r4, r5, r6, lr}
2fff7c1a:	4604      	mov	r4, r0
2fff7c1c:	f7ff ff1a 	bl	2fff7a54 <voltage_to_index>
2fff7c20:	4605      	mov	r5, r0
2fff7c22:	4620      	mov	r0, r4
2fff7c24:	f7ff fef8 	bl	2fff7a18 <get_regulator_data>
2fff7c28:	490f      	ldr	r1, [pc, #60]	; (2fff7c68 <stpmic1_regulator_voltage_set+0x50>)
2fff7c2a:	4606      	mov	r6, r0
2fff7c2c:	2204      	movs	r2, #4
2fff7c2e:	4620      	mov	r0, r4
2fff7c30:	f002 f8fb 	bl	2fff9e2a <strncmp>
2fff7c34:	b1a0      	cbz	r0, 2fff7c60 <stpmic1_regulator_voltage_set+0x48>
2fff7c36:	490d      	ldr	r1, [pc, #52]	; (2fff7c6c <stpmic1_regulator_voltage_set+0x54>)
2fff7c38:	2203      	movs	r2, #3
2fff7c3a:	4620      	mov	r0, r4
2fff7c3c:	f002 f8f5 	bl	2fff9e2a <strncmp>
2fff7c40:	b980      	cbnz	r0, 2fff7c64 <stpmic1_regulator_voltage_set+0x4c>
2fff7c42:	490b      	ldr	r1, [pc, #44]	; (2fff7c70 <stpmic1_regulator_voltage_set+0x58>)
2fff7c44:	2204      	movs	r2, #4
2fff7c46:	4620      	mov	r0, r4
2fff7c48:	f002 f8ef 	bl	2fff9e2a <strncmp>
2fff7c4c:	b150      	cbz	r0, 2fff7c64 <stpmic1_regulator_voltage_set+0x4c>
2fff7c4e:	227c      	movs	r2, #124	; 0x7c
2fff7c50:	00a9      	lsls	r1, r5, #2
2fff7c52:	7a70      	ldrb	r0, [r6, #9]
2fff7c54:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
2fff7c58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff7c5c:	f7ff bfb1 	b.w	2fff7bc2 <stpmic1_register_update>
2fff7c60:	22fc      	movs	r2, #252	; 0xfc
2fff7c62:	e7f5      	b.n	2fff7c50 <stpmic1_regulator_voltage_set+0x38>
2fff7c64:	2000      	movs	r0, #0
2fff7c66:	bd70      	pop	{r4, r5, r6, pc}
2fff7c68:	2fffbf4d 	.word	0x2fffbf4d
2fff7c6c:	2fffbf52 	.word	0x2fffbf52
2fff7c70:	2fffbf56 	.word	0x2fffbf56

2fff7c74 <stpmic1_regulator_pull_down_set>:
2fff7c74:	b508      	push	{r3, lr}
2fff7c76:	f7ff fecf 	bl	2fff7a18 <get_regulator_data>
2fff7c7a:	4603      	mov	r3, r0
2fff7c7c:	7ac0      	ldrb	r0, [r0, #11]
2fff7c7e:	b150      	cbz	r0, 2fff7c96 <stpmic1_regulator_pull_down_set+0x22>
2fff7c80:	7b1b      	ldrb	r3, [r3, #12]
2fff7c82:	2203      	movs	r2, #3
2fff7c84:	2101      	movs	r1, #1
2fff7c86:	409a      	lsls	r2, r3
2fff7c88:	4099      	lsls	r1, r3
2fff7c8a:	b2d2      	uxtb	r2, r2
2fff7c8c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff7c90:	b2c9      	uxtb	r1, r1
2fff7c92:	f7ff bf96 	b.w	2fff7bc2 <stpmic1_register_update>
2fff7c96:	bd08      	pop	{r3, pc}

2fff7c98 <stpmic1_regulator_mask_reset_set>:
2fff7c98:	b508      	push	{r3, lr}
2fff7c9a:	f7ff febd 	bl	2fff7a18 <get_regulator_data>
2fff7c9e:	7b83      	ldrb	r3, [r0, #14]
2fff7ca0:	2201      	movs	r2, #1
2fff7ca2:	7b40      	ldrb	r0, [r0, #13]
2fff7ca4:	409a      	lsls	r2, r3
2fff7ca6:	b2d2      	uxtb	r2, r2
2fff7ca8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff7cac:	4611      	mov	r1, r2
2fff7cae:	f7ff bf88 	b.w	2fff7bc2 <stpmic1_register_update>

2fff7cb2 <stpmic1_lp_reg_on_off>:
2fff7cb2:	b510      	push	{r4, lr}
2fff7cb4:	460c      	mov	r4, r1
2fff7cb6:	f7ff feaf 	bl	2fff7a18 <get_regulator_data>
2fff7cba:	7a80      	ldrb	r0, [r0, #10]
2fff7cbc:	4621      	mov	r1, r4
2fff7cbe:	2201      	movs	r2, #1
2fff7cc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff7cc4:	f7ff bf7d 	b.w	2fff7bc2 <stpmic1_register_update>

2fff7cc8 <stpmic1_lp_set_mode>:
2fff7cc8:	b510      	push	{r4, lr}
2fff7cca:	460c      	mov	r4, r1
2fff7ccc:	f7ff fea4 	bl	2fff7a18 <get_regulator_data>
2fff7cd0:	0061      	lsls	r1, r4, #1
2fff7cd2:	2202      	movs	r2, #2
2fff7cd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff7cd8:	7a80      	ldrb	r0, [r0, #10]
2fff7cda:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
2fff7cde:	f7ff bf70 	b.w	2fff7bc2 <stpmic1_register_update>
	...

2fff7ce4 <stpmic1_lp_set_voltage>:
2fff7ce4:	b570      	push	{r4, r5, r6, lr}
2fff7ce6:	4604      	mov	r4, r0
2fff7ce8:	f7ff feb4 	bl	2fff7a54 <voltage_to_index>
2fff7cec:	4605      	mov	r5, r0
2fff7cee:	4620      	mov	r0, r4
2fff7cf0:	f7ff fe92 	bl	2fff7a18 <get_regulator_data>
2fff7cf4:	490f      	ldr	r1, [pc, #60]	; (2fff7d34 <stpmic1_lp_set_voltage+0x50>)
2fff7cf6:	4606      	mov	r6, r0
2fff7cf8:	2204      	movs	r2, #4
2fff7cfa:	4620      	mov	r0, r4
2fff7cfc:	f002 f895 	bl	2fff9e2a <strncmp>
2fff7d00:	b1a0      	cbz	r0, 2fff7d2c <stpmic1_lp_set_voltage+0x48>
2fff7d02:	490d      	ldr	r1, [pc, #52]	; (2fff7d38 <stpmic1_lp_set_voltage+0x54>)
2fff7d04:	2203      	movs	r2, #3
2fff7d06:	4620      	mov	r0, r4
2fff7d08:	f002 f88f 	bl	2fff9e2a <strncmp>
2fff7d0c:	b980      	cbnz	r0, 2fff7d30 <stpmic1_lp_set_voltage+0x4c>
2fff7d0e:	490b      	ldr	r1, [pc, #44]	; (2fff7d3c <stpmic1_lp_set_voltage+0x58>)
2fff7d10:	2204      	movs	r2, #4
2fff7d12:	4620      	mov	r0, r4
2fff7d14:	f002 f889 	bl	2fff9e2a <strncmp>
2fff7d18:	b150      	cbz	r0, 2fff7d30 <stpmic1_lp_set_voltage+0x4c>
2fff7d1a:	227c      	movs	r2, #124	; 0x7c
2fff7d1c:	00a9      	lsls	r1, r5, #2
2fff7d1e:	7ab0      	ldrb	r0, [r6, #10]
2fff7d20:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
2fff7d24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff7d28:	f7ff bf4b 	b.w	2fff7bc2 <stpmic1_register_update>
2fff7d2c:	22fc      	movs	r2, #252	; 0xfc
2fff7d2e:	e7f5      	b.n	2fff7d1c <stpmic1_lp_set_voltage+0x38>
2fff7d30:	2000      	movs	r0, #0
2fff7d32:	bd70      	pop	{r4, r5, r6, pc}
2fff7d34:	2fffbf4d 	.word	0x2fffbf4d
2fff7d38:	2fffbf52 	.word	0x2fffbf52
2fff7d3c:	2fffbf56 	.word	0x2fffbf56

2fff7d40 <stpmic1_bind_i2c>:
2fff7d40:	4b02      	ldr	r3, [pc, #8]	; (2fff7d4c <stpmic1_bind_i2c+0xc>)
2fff7d42:	6018      	str	r0, [r3, #0]
2fff7d44:	4b02      	ldr	r3, [pc, #8]	; (2fff7d50 <stpmic1_bind_i2c+0x10>)
2fff7d46:	8019      	strh	r1, [r3, #0]
2fff7d48:	4770      	bx	lr
2fff7d4a:	bf00      	nop
2fff7d4c:	2fffeb0c 	.word	0x2fffeb0c
2fff7d50:	2fffeb08 	.word	0x2fffeb08

2fff7d54 <stm32mp_reset_assert_to>:
2fff7d54:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff7d58:	f000 031f 	and.w	r3, r0, #31
2fff7d5c:	9101      	str	r1, [sp, #4]
2fff7d5e:	4604      	mov	r4, r0
2fff7d60:	2501      	movs	r5, #1
2fff7d62:	0964      	lsrs	r4, r4, #5
2fff7d64:	409d      	lsls	r5, r3
2fff7d66:	f7fa ff7f 	bl	2fff2c68 <stm32mp_rcc_base>
2fff7d6a:	9901      	ldr	r1, [sp, #4]
2fff7d6c:	4682      	mov	sl, r0
2fff7d6e:	eb00 0b84 	add.w	fp, r0, r4, lsl #2
2fff7d72:	f840 5024 	str.w	r5, [r0, r4, lsl #2]
2fff7d76:	b309      	cbz	r1, 2fff7dbc <stm32mp_reset_assert_to+0x68>
2fff7d78:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff7d7c:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff7d80:	4a0f      	ldr	r2, [pc, #60]	; (2fff7dc0 <stm32mp_reset_assert_to+0x6c>)
2fff7d82:	2300      	movs	r3, #0
2fff7d84:	fba1 0100 	umull	r0, r1, r1, r0
2fff7d88:	f000 effe 	blx	2fff8d88 <__aeabi_uldivmod>
2fff7d8c:	eb10 0806 	adds.w	r8, r0, r6
2fff7d90:	eb41 0907 	adc.w	r9, r1, r7
2fff7d94:	f8db 3000 	ldr.w	r3, [fp]
2fff7d98:	421d      	tst	r5, r3
2fff7d9a:	d105      	bne.n	2fff7da8 <stm32mp_reset_assert_to+0x54>
2fff7d9c:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff7da0:	4599      	cmp	r9, r3
2fff7da2:	bf08      	it	eq
2fff7da4:	4590      	cmpeq	r8, r2
2fff7da6:	d2f5      	bcs.n	2fff7d94 <stm32mp_reset_assert_to+0x40>
2fff7da8:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
2fff7dac:	421d      	tst	r5, r3
2fff7dae:	bf14      	ite	ne
2fff7db0:	2000      	movne	r0, #0
2fff7db2:	f06f 003b 	mvneq.w	r0, #59	; 0x3b
2fff7db6:	b003      	add	sp, #12
2fff7db8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff7dbc:	4608      	mov	r0, r1
2fff7dbe:	e7fa      	b.n	2fff7db6 <stm32mp_reset_assert_to+0x62>
2fff7dc0:	000f4240 	.word	0x000f4240

2fff7dc4 <stm32mp_reset_deassert_to>:
2fff7dc4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff7dc8:	4604      	mov	r4, r0
2fff7dca:	9101      	str	r1, [sp, #4]
2fff7dcc:	f000 031f 	and.w	r3, r0, #31
2fff7dd0:	0964      	lsrs	r4, r4, #5
2fff7dd2:	2501      	movs	r5, #1
2fff7dd4:	3401      	adds	r4, #1
2fff7dd6:	409d      	lsls	r5, r3
2fff7dd8:	f7fa ff46 	bl	2fff2c68 <stm32mp_rcc_base>
2fff7ddc:	9901      	ldr	r1, [sp, #4]
2fff7dde:	4682      	mov	sl, r0
2fff7de0:	eb00 0b84 	add.w	fp, r0, r4, lsl #2
2fff7de4:	f840 5024 	str.w	r5, [r0, r4, lsl #2]
2fff7de8:	b309      	cbz	r1, 2fff7e2e <stm32mp_reset_deassert_to+0x6a>
2fff7dea:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff7dee:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff7df2:	4a10      	ldr	r2, [pc, #64]	; (2fff7e34 <stm32mp_reset_deassert_to+0x70>)
2fff7df4:	2300      	movs	r3, #0
2fff7df6:	fba1 0100 	umull	r0, r1, r1, r0
2fff7dfa:	f000 efc6 	blx	2fff8d88 <__aeabi_uldivmod>
2fff7dfe:	eb10 0806 	adds.w	r8, r0, r6
2fff7e02:	eb41 0907 	adc.w	r9, r1, r7
2fff7e06:	f8db 3000 	ldr.w	r3, [fp]
2fff7e0a:	421d      	tst	r5, r3
2fff7e0c:	d005      	beq.n	2fff7e1a <stm32mp_reset_deassert_to+0x56>
2fff7e0e:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff7e12:	4599      	cmp	r9, r3
2fff7e14:	bf08      	it	eq
2fff7e16:	4590      	cmpeq	r8, r2
2fff7e18:	d2f5      	bcs.n	2fff7e06 <stm32mp_reset_deassert_to+0x42>
2fff7e1a:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
2fff7e1e:	421d      	tst	r5, r3
2fff7e20:	bf0c      	ite	eq
2fff7e22:	2000      	moveq	r0, #0
2fff7e24:	f06f 003b 	mvnne.w	r0, #59	; 0x3b
2fff7e28:	b003      	add	sp, #12
2fff7e2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff7e2e:	4608      	mov	r0, r1
2fff7e30:	e7fa      	b.n	2fff7e28 <stm32mp_reset_deassert_to+0x64>
2fff7e32:	bf00      	nop
2fff7e34:	000f4240 	.word	0x000f4240

2fff7e38 <fdt32_to_cpu>:
2fff7e38:	ba00      	rev	r0, r0
2fff7e3a:	4770      	bx	lr

2fff7e3c <fdt_get_node_parent_address_cells>:
2fff7e3c:	4601      	mov	r1, r0
2fff7e3e:	b508      	push	{r3, lr}
2fff7e40:	4806      	ldr	r0, [pc, #24]	; (2fff7e5c <fdt_get_node_parent_address_cells+0x20>)
2fff7e42:	f001 fd82 	bl	2fff994a <fdt_parent_offset>
2fff7e46:	1e01      	subs	r1, r0, #0
2fff7e48:	db04      	blt.n	2fff7e54 <fdt_get_node_parent_address_cells+0x18>
2fff7e4a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff7e4e:	4803      	ldr	r0, [pc, #12]	; (2fff7e5c <fdt_get_node_parent_address_cells+0x20>)
2fff7e50:	f001 bb46 	b.w	2fff94e0 <fdt_address_cells>
2fff7e54:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7e58:	bd08      	pop	{r3, pc}
2fff7e5a:	bf00      	nop
2fff7e5c:	2ffcc000 	.word	0x2ffcc000

2fff7e60 <dt_get_stdout_node_offset>:
2fff7e60:	4919      	ldr	r1, [pc, #100]	; (2fff7ec8 <dt_get_stdout_node_offset+0x68>)
2fff7e62:	481a      	ldr	r0, [pc, #104]	; (2fff7ecc <dt_get_stdout_node_offset+0x6c>)
2fff7e64:	b570      	push	{r4, r5, r6, lr}
2fff7e66:	f001 fd20 	bl	2fff98aa <fdt_path_offset>
2fff7e6a:	1e01      	subs	r1, r0, #0
2fff7e6c:	da05      	bge.n	2fff7e7a <dt_get_stdout_node_offset+0x1a>
2fff7e6e:	4918      	ldr	r1, [pc, #96]	; (2fff7ed0 <dt_get_stdout_node_offset+0x70>)
2fff7e70:	4816      	ldr	r0, [pc, #88]	; (2fff7ecc <dt_get_stdout_node_offset+0x6c>)
2fff7e72:	f001 fd1a 	bl	2fff98aa <fdt_path_offset>
2fff7e76:	1e01      	subs	r1, r0, #0
2fff7e78:	db23      	blt.n	2fff7ec2 <dt_get_stdout_node_offset+0x62>
2fff7e7a:	4a16      	ldr	r2, [pc, #88]	; (2fff7ed4 <dt_get_stdout_node_offset+0x74>)
2fff7e7c:	2300      	movs	r3, #0
2fff7e7e:	4813      	ldr	r0, [pc, #76]	; (2fff7ecc <dt_get_stdout_node_offset+0x6c>)
2fff7e80:	f001 fc81 	bl	2fff9786 <fdt_getprop>
2fff7e84:	4604      	mov	r4, r0
2fff7e86:	b1e0      	cbz	r0, 2fff7ec2 <dt_get_stdout_node_offset+0x62>
2fff7e88:	213a      	movs	r1, #58	; 0x3a
2fff7e8a:	f001 ff93 	bl	2fff9db4 <strchr>
2fff7e8e:	b9a8      	cbnz	r0, 2fff7ebc <dt_get_stdout_node_offset+0x5c>
2fff7e90:	4621      	mov	r1, r4
2fff7e92:	e00e      	b.n	2fff7eb2 <dt_get_stdout_node_offset+0x52>
2fff7e94:	3501      	adds	r5, #1
2fff7e96:	1961      	adds	r1, r4, r5
2fff7e98:	2201      	movs	r2, #1
2fff7e9a:	4630      	mov	r0, r6
2fff7e9c:	f001 ffc5 	bl	2fff9e2a <strncmp>
2fff7ea0:	2800      	cmp	r0, #0
2fff7ea2:	d1f7      	bne.n	2fff7e94 <dt_get_stdout_node_offset+0x34>
2fff7ea4:	4809      	ldr	r0, [pc, #36]	; (2fff7ecc <dt_get_stdout_node_offset+0x6c>)
2fff7ea6:	4621      	mov	r1, r4
2fff7ea8:	462a      	mov	r2, r5
2fff7eaa:	f001 fc9f 	bl	2fff97ec <fdt_get_alias_namelen>
2fff7eae:	4601      	mov	r1, r0
2fff7eb0:	b138      	cbz	r0, 2fff7ec2 <dt_get_stdout_node_offset+0x62>
2fff7eb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff7eb6:	4805      	ldr	r0, [pc, #20]	; (2fff7ecc <dt_get_stdout_node_offset+0x6c>)
2fff7eb8:	f001 bcf7 	b.w	2fff98aa <fdt_path_offset>
2fff7ebc:	4e06      	ldr	r6, [pc, #24]	; (2fff7ed8 <dt_get_stdout_node_offset+0x78>)
2fff7ebe:	2500      	movs	r5, #0
2fff7ec0:	e7e9      	b.n	2fff7e96 <dt_get_stdout_node_offset+0x36>
2fff7ec2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7ec6:	bd70      	pop	{r4, r5, r6, pc}
2fff7ec8:	2fffc35e 	.word	0x2fffc35e
2fff7ecc:	2ffcc000 	.word	0x2ffcc000
2fff7ed0:	2fffc36d 	.word	0x2fffc36d
2fff7ed4:	2fffc375 	.word	0x2fffc375
2fff7ed8:	2fffc381 	.word	0x2fffc381

2fff7edc <dt_get_opp_freqvolt_from_subnode>:
2fff7edc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff7ee0:	4604      	mov	r4, r0
2fff7ee2:	4688      	mov	r8, r1
2fff7ee4:	4615      	mov	r5, r2
2fff7ee6:	4a2c      	ldr	r2, [pc, #176]	; (2fff7f98 <dt_get_opp_freqvolt_from_subnode+0xbc>)
2fff7ee8:	4601      	mov	r1, r0
2fff7eea:	482c      	ldr	r0, [pc, #176]	; (2fff7f9c <dt_get_opp_freqvolt_from_subnode+0xc0>)
2fff7eec:	2300      	movs	r3, #0
2fff7eee:	f001 fc4a 	bl	2fff9786 <fdt_getprop>
2fff7ef2:	b948      	cbnz	r0, 2fff7f08 <dt_get_opp_freqvolt_from_subnode+0x2c>
2fff7ef4:	4a2a      	ldr	r2, [pc, #168]	; (2fff7fa0 <dt_get_opp_freqvolt_from_subnode+0xc4>)
2fff7ef6:	2300      	movs	r3, #0
2fff7ef8:	4828      	ldr	r0, [pc, #160]	; (2fff7f9c <dt_get_opp_freqvolt_from_subnode+0xc0>)
2fff7efa:	4621      	mov	r1, r4
2fff7efc:	f001 fc43 	bl	2fff9786 <fdt_getprop>
2fff7f00:	b968      	cbnz	r0, 2fff7f1e <dt_get_opp_freqvolt_from_subnode+0x42>
2fff7f02:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7f06:	e008      	b.n	2fff7f1a <dt_get_opp_freqvolt_from_subnode+0x3e>
2fff7f08:	6800      	ldr	r0, [r0, #0]
2fff7f0a:	f7ff ff95 	bl	2fff7e38 <fdt32_to_cpu>
2fff7f0e:	f7fa ffcd 	bl	2fff2eac <stm32mp_supports_cpu_opp>
2fff7f12:	2800      	cmp	r0, #0
2fff7f14:	d1ee      	bne.n	2fff7ef4 <dt_get_opp_freqvolt_from_subnode+0x18>
2fff7f16:	f06f 000e 	mvn.w	r0, #14
2fff7f1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff7f1e:	e9d0 0300 	ldrd	r0, r3, [r0]
2fff7f22:	0202      	lsls	r2, r0, #8
2fff7f24:	0a06      	lsrs	r6, r0, #8
2fff7f26:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
2fff7f2a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
2fff7f2e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
2fff7f32:	4332      	orrs	r2, r6
2fff7f34:	0e19      	lsrs	r1, r3, #24
2fff7f36:	021e      	lsls	r6, r3, #8
2fff7f38:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
2fff7f3c:	f406 067f 	and.w	r6, r6, #16711680	; 0xff0000
2fff7f40:	0a1b      	lsrs	r3, r3, #8
2fff7f42:	4331      	orrs	r1, r6
2fff7f44:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
2fff7f48:	ea41 0603 	orr.w	r6, r1, r3
2fff7f4c:	2300      	movs	r3, #0
2fff7f4e:	ea42 6710 	orr.w	r7, r2, r0, lsr #24
2fff7f52:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2fff7f56:	4630      	mov	r0, r6
2fff7f58:	4639      	mov	r1, r7
2fff7f5a:	f000 ef16 	blx	2fff8d88 <__aeabi_uldivmod>
2fff7f5e:	f5b7 7f7a 	cmp.w	r7, #1000	; 0x3e8
2fff7f62:	4681      	mov	r9, r0
2fff7f64:	bf08      	it	eq
2fff7f66:	2e00      	cmpeq	r6, #0
2fff7f68:	d2d5      	bcs.n	2fff7f16 <dt_get_opp_freqvolt_from_subnode+0x3a>
2fff7f6a:	4a0e      	ldr	r2, [pc, #56]	; (2fff7fa4 <dt_get_opp_freqvolt_from_subnode+0xc8>)
2fff7f6c:	2300      	movs	r3, #0
2fff7f6e:	480b      	ldr	r0, [pc, #44]	; (2fff7f9c <dt_get_opp_freqvolt_from_subnode+0xc0>)
2fff7f70:	4621      	mov	r1, r4
2fff7f72:	f001 fc08 	bl	2fff9786 <fdt_getprop>
2fff7f76:	2800      	cmp	r0, #0
2fff7f78:	d0c3      	beq.n	2fff7f02 <dt_get_opp_freqvolt_from_subnode+0x26>
2fff7f7a:	6800      	ldr	r0, [r0, #0]
2fff7f7c:	f7ff ff5c 	bl	2fff7e38 <fdt32_to_cpu>
2fff7f80:	f1b0 7f7a 	cmp.w	r0, #65536000	; 0x3e80000
2fff7f84:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff7f88:	fbb0 f3f3 	udiv	r3, r0, r3
2fff7f8c:	d2c3      	bcs.n	2fff7f16 <dt_get_opp_freqvolt_from_subnode+0x3a>
2fff7f8e:	f8c8 9000 	str.w	r9, [r8]
2fff7f92:	2000      	movs	r0, #0
2fff7f94:	602b      	str	r3, [r5, #0]
2fff7f96:	e7c0      	b.n	2fff7f1a <dt_get_opp_freqvolt_from_subnode+0x3e>
2fff7f98:	2fffc383 	.word	0x2fffc383
2fff7f9c:	2ffcc000 	.word	0x2ffcc000
2fff7fa0:	2fffc394 	.word	0x2fffc394
2fff7fa4:	2fffc39b 	.word	0x2fffc39b

2fff7fa8 <dt_open_and_check>:
2fff7fa8:	b508      	push	{r3, lr}
2fff7faa:	4804      	ldr	r0, [pc, #16]	; (2fff7fbc <dt_open_and_check+0x14>)
2fff7fac:	f001 f966 	bl	2fff927c <fdt_check_header>
2fff7fb0:	b910      	cbnz	r0, 2fff7fb8 <dt_open_and_check+0x10>
2fff7fb2:	4b03      	ldr	r3, [pc, #12]	; (2fff7fc0 <dt_open_and_check+0x18>)
2fff7fb4:	2201      	movs	r2, #1
2fff7fb6:	601a      	str	r2, [r3, #0]
2fff7fb8:	bd08      	pop	{r3, pc}
2fff7fba:	bf00      	nop
2fff7fbc:	2ffcc000 	.word	0x2ffcc000
2fff7fc0:	2fffeb10 	.word	0x2fffeb10

2fff7fc4 <fdt_get_address>:
2fff7fc4:	4a03      	ldr	r2, [pc, #12]	; (2fff7fd4 <fdt_get_address+0x10>)
2fff7fc6:	4603      	mov	r3, r0
2fff7fc8:	6810      	ldr	r0, [r2, #0]
2fff7fca:	2801      	cmp	r0, #1
2fff7fcc:	bf04      	itt	eq
2fff7fce:	4a02      	ldreq	r2, [pc, #8]	; (2fff7fd8 <fdt_get_address+0x14>)
2fff7fd0:	601a      	streq	r2, [r3, #0]
2fff7fd2:	4770      	bx	lr
2fff7fd4:	2fffeb10 	.word	0x2fffeb10
2fff7fd8:	2ffcc000 	.word	0x2ffcc000

2fff7fdc <fdt_get_status>:
2fff7fdc:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff7fde:	4605      	mov	r5, r0
2fff7fe0:	4a13      	ldr	r2, [pc, #76]	; (2fff8030 <fdt_get_status+0x54>)
2fff7fe2:	4601      	mov	r1, r0
2fff7fe4:	4813      	ldr	r0, [pc, #76]	; (2fff8034 <fdt_get_status+0x58>)
2fff7fe6:	ab01      	add	r3, sp, #4
2fff7fe8:	f001 fbcd 	bl	2fff9786 <fdt_getprop>
2fff7fec:	b198      	cbz	r0, 2fff8016 <fdt_get_status+0x3a>
2fff7fee:	9a01      	ldr	r2, [sp, #4]
2fff7ff0:	4911      	ldr	r1, [pc, #68]	; (2fff8038 <fdt_get_status+0x5c>)
2fff7ff2:	f001 ff1a 	bl	2fff9e2a <strncmp>
2fff7ff6:	fab0 f480 	clz	r4, r0
2fff7ffa:	0964      	lsrs	r4, r4, #5
2fff7ffc:	4a0f      	ldr	r2, [pc, #60]	; (2fff803c <fdt_get_status+0x60>)
2fff7ffe:	ab01      	add	r3, sp, #4
2fff8000:	480c      	ldr	r0, [pc, #48]	; (2fff8034 <fdt_get_status+0x58>)
2fff8002:	4629      	mov	r1, r5
2fff8004:	f001 fbbf 	bl	2fff9786 <fdt_getprop>
2fff8008:	b938      	cbnz	r0, 2fff801a <fdt_get_status+0x3e>
2fff800a:	2c01      	cmp	r4, #1
2fff800c:	bf08      	it	eq
2fff800e:	2403      	moveq	r4, #3
2fff8010:	4620      	mov	r0, r4
2fff8012:	b003      	add	sp, #12
2fff8014:	bd30      	pop	{r4, r5, pc}
2fff8016:	2401      	movs	r4, #1
2fff8018:	e7f0      	b.n	2fff7ffc <fdt_get_status+0x20>
2fff801a:	9a01      	ldr	r2, [sp, #4]
2fff801c:	4906      	ldr	r1, [pc, #24]	; (2fff8038 <fdt_get_status+0x5c>)
2fff801e:	f001 ff04 	bl	2fff9e2a <strncmp>
2fff8022:	2800      	cmp	r0, #0
2fff8024:	d1f4      	bne.n	2fff8010 <fdt_get_status+0x34>
2fff8026:	f044 0402 	orr.w	r4, r4, #2
2fff802a:	b2e4      	uxtb	r4, r4
2fff802c:	e7f0      	b.n	2fff8010 <fdt_get_status+0x34>
2fff802e:	bf00      	nop
2fff8030:	2fffc3b5 	.word	0x2fffc3b5
2fff8034:	2ffcc000 	.word	0x2ffcc000
2fff8038:	2fffc3a9 	.word	0x2fffc3a9
2fff803c:	2fffc3ae 	.word	0x2fffc3ae

2fff8040 <fdt_get_interrupt>:
2fff8040:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff8042:	461f      	mov	r7, r3
2fff8044:	4616      	mov	r6, r2
2fff8046:	4605      	mov	r5, r0
2fff8048:	460c      	mov	r4, r1
2fff804a:	f7ff ffc7 	bl	2fff7fdc <fdt_get_status>
2fff804e:	2802      	cmp	r0, #2
2fff8050:	f04f 0300 	mov.w	r3, #0
2fff8054:	703b      	strb	r3, [r7, #0]
2fff8056:	4633      	mov	r3, r6
2fff8058:	d116      	bne.n	2fff8088 <fdt_get_interrupt+0x48>
2fff805a:	4a0c      	ldr	r2, [pc, #48]	; (2fff808c <fdt_get_interrupt+0x4c>)
2fff805c:	4629      	mov	r1, r5
2fff805e:	480c      	ldr	r0, [pc, #48]	; (2fff8090 <fdt_get_interrupt+0x50>)
2fff8060:	f001 fb91 	bl	2fff9786 <fdt_getprop>
2fff8064:	6020      	str	r0, [r4, #0]
2fff8066:	b938      	cbnz	r0, 2fff8078 <fdt_get_interrupt+0x38>
2fff8068:	4a0a      	ldr	r2, [pc, #40]	; (2fff8094 <fdt_get_interrupt+0x54>)
2fff806a:	4633      	mov	r3, r6
2fff806c:	4808      	ldr	r0, [pc, #32]	; (2fff8090 <fdt_get_interrupt+0x50>)
2fff806e:	4629      	mov	r1, r5
2fff8070:	f001 fb89 	bl	2fff9786 <fdt_getprop>
2fff8074:	6020      	str	r0, [r4, #0]
2fff8076:	e001      	b.n	2fff807c <fdt_get_interrupt+0x3c>
2fff8078:	2301      	movs	r3, #1
2fff807a:	703b      	strb	r3, [r7, #0]
2fff807c:	6820      	ldr	r0, [r4, #0]
2fff807e:	fab0 f080 	clz	r0, r0
2fff8082:	0940      	lsrs	r0, r0, #5
2fff8084:	4240      	negs	r0, r0
2fff8086:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff8088:	4a03      	ldr	r2, [pc, #12]	; (2fff8098 <fdt_get_interrupt+0x58>)
2fff808a:	e7ef      	b.n	2fff806c <fdt_get_interrupt+0x2c>
2fff808c:	2fffc3bc 	.word	0x2fffc3bc
2fff8090:	2ffcc000 	.word	0x2ffcc000
2fff8094:	2fffc3d7 	.word	0x2fffc3d7
2fff8098:	2fffc3d0 	.word	0x2fffc3d0

2fff809c <fdt_read_uint32_default>:
2fff809c:	b513      	push	{r0, r1, r4, lr}
2fff809e:	4614      	mov	r4, r2
2fff80a0:	ab01      	add	r3, sp, #4
2fff80a2:	460a      	mov	r2, r1
2fff80a4:	4601      	mov	r1, r0
2fff80a6:	4806      	ldr	r0, [pc, #24]	; (2fff80c0 <fdt_read_uint32_default+0x24>)
2fff80a8:	f001 fb6d 	bl	2fff9786 <fdt_getprop>
2fff80ac:	b128      	cbz	r0, 2fff80ba <fdt_read_uint32_default+0x1e>
2fff80ae:	6800      	ldr	r0, [r0, #0]
2fff80b0:	b002      	add	sp, #8
2fff80b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff80b6:	f7ff bebf 	b.w	2fff7e38 <fdt32_to_cpu>
2fff80ba:	4620      	mov	r0, r4
2fff80bc:	b002      	add	sp, #8
2fff80be:	bd10      	pop	{r4, pc}
2fff80c0:	2ffcc000 	.word	0x2ffcc000

2fff80c4 <fdt_read_uint32_array>:
2fff80c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff80c6:	4615      	mov	r5, r2
2fff80c8:	461c      	mov	r4, r3
2fff80ca:	460a      	mov	r2, r1
2fff80cc:	ab01      	add	r3, sp, #4
2fff80ce:	4601      	mov	r1, r0
2fff80d0:	480f      	ldr	r0, [pc, #60]	; (2fff8110 <fdt_read_uint32_array+0x4c>)
2fff80d2:	f001 fb58 	bl	2fff9786 <fdt_getprop>
2fff80d6:	4601      	mov	r1, r0
2fff80d8:	b198      	cbz	r0, 2fff8102 <fdt_read_uint32_array+0x3e>
2fff80da:	9a01      	ldr	r2, [sp, #4]
2fff80dc:	00a3      	lsls	r3, r4, #2
2fff80de:	ebb2 0f84 	cmp.w	r2, r4, lsl #2
2fff80e2:	d111      	bne.n	2fff8108 <fdt_read_uint32_array+0x44>
2fff80e4:	089c      	lsrs	r4, r3, #2
2fff80e6:	2300      	movs	r3, #0
2fff80e8:	429c      	cmp	r4, r3
2fff80ea:	d102      	bne.n	2fff80f2 <fdt_read_uint32_array+0x2e>
2fff80ec:	2000      	movs	r0, #0
2fff80ee:	b003      	add	sp, #12
2fff80f0:	bd30      	pop	{r4, r5, pc}
2fff80f2:	f851 0023 	ldr.w	r0, [r1, r3, lsl #2]
2fff80f6:	f7ff fe9f 	bl	2fff7e38 <fdt32_to_cpu>
2fff80fa:	f845 0023 	str.w	r0, [r5, r3, lsl #2]
2fff80fe:	3301      	adds	r3, #1
2fff8100:	e7f2      	b.n	2fff80e8 <fdt_read_uint32_array+0x24>
2fff8102:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff8106:	e7f2      	b.n	2fff80ee <fdt_read_uint32_array+0x2a>
2fff8108:	f06f 000b 	mvn.w	r0, #11
2fff810c:	e7ef      	b.n	2fff80ee <fdt_read_uint32_array+0x2a>
2fff810e:	bf00      	nop
2fff8110:	2ffcc000 	.word	0x2ffcc000

2fff8114 <dt_fill_device_info>:
2fff8114:	b538      	push	{r3, r4, r5, lr}
2fff8116:	4605      	mov	r5, r0
2fff8118:	4608      	mov	r0, r1
2fff811a:	460c      	mov	r4, r1
2fff811c:	f7ff fe8e 	bl	2fff7e3c <fdt_get_node_parent_address_cells>
2fff8120:	2801      	cmp	r0, #1
2fff8122:	d004      	beq.n	2fff812e <dt_fill_device_info+0x1a>
2fff8124:	4818      	ldr	r0, [pc, #96]	; (2fff8188 <dt_fill_device_info+0x74>)
2fff8126:	f240 1149 	movw	r1, #329	; 0x149
2fff812a:	f001 fcc9 	bl	2fff9ac0 <__assert>
2fff812e:	4a17      	ldr	r2, [pc, #92]	; (2fff818c <dt_fill_device_info+0x78>)
2fff8130:	2300      	movs	r3, #0
2fff8132:	4817      	ldr	r0, [pc, #92]	; (2fff8190 <dt_fill_device_info+0x7c>)
2fff8134:	4621      	mov	r1, r4
2fff8136:	f001 fb26 	bl	2fff9786 <fdt_getprop>
2fff813a:	b110      	cbz	r0, 2fff8142 <dt_fill_device_info+0x2e>
2fff813c:	6800      	ldr	r0, [r0, #0]
2fff813e:	f7ff fe7b 	bl	2fff7e38 <fdt32_to_cpu>
2fff8142:	6028      	str	r0, [r5, #0]
2fff8144:	2300      	movs	r3, #0
2fff8146:	4a13      	ldr	r2, [pc, #76]	; (2fff8194 <dt_fill_device_info+0x80>)
2fff8148:	4621      	mov	r1, r4
2fff814a:	4811      	ldr	r0, [pc, #68]	; (2fff8190 <dt_fill_device_info+0x7c>)
2fff814c:	f001 fb1b 	bl	2fff9786 <fdt_getprop>
2fff8150:	b198      	cbz	r0, 2fff817a <dt_fill_device_info+0x66>
2fff8152:	6840      	ldr	r0, [r0, #4]
2fff8154:	f7ff fe70 	bl	2fff7e38 <fdt32_to_cpu>
2fff8158:	6068      	str	r0, [r5, #4]
2fff815a:	2300      	movs	r3, #0
2fff815c:	4a0e      	ldr	r2, [pc, #56]	; (2fff8198 <dt_fill_device_info+0x84>)
2fff815e:	4621      	mov	r1, r4
2fff8160:	480b      	ldr	r0, [pc, #44]	; (2fff8190 <dt_fill_device_info+0x7c>)
2fff8162:	f001 fb10 	bl	2fff9786 <fdt_getprop>
2fff8166:	b158      	cbz	r0, 2fff8180 <dt_fill_device_info+0x6c>
2fff8168:	6840      	ldr	r0, [r0, #4]
2fff816a:	f7ff fe65 	bl	2fff7e38 <fdt32_to_cpu>
2fff816e:	60a8      	str	r0, [r5, #8]
2fff8170:	4620      	mov	r0, r4
2fff8172:	f7ff ff33 	bl	2fff7fdc <fdt_get_status>
2fff8176:	60e8      	str	r0, [r5, #12]
2fff8178:	bd38      	pop	{r3, r4, r5, pc}
2fff817a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff817e:	e7eb      	b.n	2fff8158 <dt_fill_device_info+0x44>
2fff8180:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff8184:	e7f3      	b.n	2fff816e <dt_fill_device_info+0x5a>
2fff8186:	bf00      	nop
2fff8188:	2fffc3e2 	.word	0x2fffc3e2
2fff818c:	2fffa810 	.word	0x2fffa810
2fff8190:	2ffcc000 	.word	0x2ffcc000
2fff8194:	2fffb511 	.word	0x2fffb511
2fff8198:	2fffc408 	.word	0x2fffc408

2fff819c <dt_get_node>:
2fff819c:	b538      	push	{r3, r4, r5, lr}
2fff819e:	4605      	mov	r5, r0
2fff81a0:	4806      	ldr	r0, [pc, #24]	; (2fff81bc <dt_get_node+0x20>)
2fff81a2:	f001 fc6d 	bl	2fff9a80 <fdt_node_offset_by_compatible>
2fff81a6:	1e04      	subs	r4, r0, #0
2fff81a8:	db05      	blt.n	2fff81b6 <dt_get_node+0x1a>
2fff81aa:	4621      	mov	r1, r4
2fff81ac:	4628      	mov	r0, r5
2fff81ae:	f7ff ffb1 	bl	2fff8114 <dt_fill_device_info>
2fff81b2:	4620      	mov	r0, r4
2fff81b4:	bd38      	pop	{r3, r4, r5, pc}
2fff81b6:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff81ba:	e7fa      	b.n	2fff81b2 <dt_get_node+0x16>
2fff81bc:	2ffcc000 	.word	0x2ffcc000

2fff81c0 <dt_get_stdout_uart_info>:
2fff81c0:	b538      	push	{r3, r4, r5, lr}
2fff81c2:	4605      	mov	r5, r0
2fff81c4:	f7ff fe4c 	bl	2fff7e60 <dt_get_stdout_node_offset>
2fff81c8:	1e04      	subs	r4, r0, #0
2fff81ca:	db05      	blt.n	2fff81d8 <dt_get_stdout_uart_info+0x18>
2fff81cc:	4621      	mov	r1, r4
2fff81ce:	4628      	mov	r0, r5
2fff81d0:	f7ff ffa0 	bl	2fff8114 <dt_fill_device_info>
2fff81d4:	4620      	mov	r0, r4
2fff81d6:	bd38      	pop	{r3, r4, r5, pc}
2fff81d8:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff81dc:	e7fa      	b.n	2fff81d4 <dt_get_stdout_uart_info+0x14>
	...

2fff81e0 <dt_get_node_by_compatible>:
2fff81e0:	b538      	push	{r3, r4, r5, lr}
2fff81e2:	4602      	mov	r2, r0
2fff81e4:	4605      	mov	r5, r0
2fff81e6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff81ea:	4805      	ldr	r0, [pc, #20]	; (2fff8200 <dt_get_node_by_compatible+0x20>)
2fff81ec:	f001 fc48 	bl	2fff9a80 <fdt_node_offset_by_compatible>
2fff81f0:	1e04      	subs	r4, r0, #0
2fff81f2:	da03      	bge.n	2fff81fc <dt_get_node_by_compatible+0x1c>
2fff81f4:	4803      	ldr	r0, [pc, #12]	; (2fff8204 <dt_get_node_by_compatible+0x24>)
2fff81f6:	4629      	mov	r1, r5
2fff81f8:	f7fa fb70 	bl	2fff28dc <tf_log>
2fff81fc:	4620      	mov	r0, r4
2fff81fe:	bd38      	pop	{r3, r4, r5, pc}
2fff8200:	2ffcc000 	.word	0x2ffcc000
2fff8204:	2fffc40f 	.word	0x2fffc40f

2fff8208 <dt_get_ddr_size>:
2fff8208:	4806      	ldr	r0, [pc, #24]	; (2fff8224 <dt_get_ddr_size+0x1c>)
2fff820a:	b508      	push	{r3, lr}
2fff820c:	f7ff ffe8 	bl	2fff81e0 <dt_get_node_by_compatible>
2fff8210:	2800      	cmp	r0, #0
2fff8212:	db05      	blt.n	2fff8220 <dt_get_ddr_size+0x18>
2fff8214:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff8218:	4903      	ldr	r1, [pc, #12]	; (2fff8228 <dt_get_ddr_size+0x20>)
2fff821a:	2200      	movs	r2, #0
2fff821c:	f7ff bf3e 	b.w	2fff809c <fdt_read_uint32_default>
2fff8220:	2000      	movs	r0, #0
2fff8222:	bd08      	pop	{r3, pc}
2fff8224:	2fffc42b 	.word	0x2fffc42b
2fff8228:	2fffc43b 	.word	0x2fffc43b

2fff822c <dt_get_all_opp_freqvolt>:
2fff822c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2fff8230:	460f      	mov	r7, r1
2fff8232:	4690      	mov	r8, r2
2fff8234:	4606      	mov	r6, r0
2fff8236:	b920      	cbnz	r0, 2fff8242 <dt_get_all_opp_freqvolt+0x16>
2fff8238:	f240 2149 	movw	r1, #585	; 0x249
2fff823c:	481d      	ldr	r0, [pc, #116]	; (2fff82b4 <dt_get_all_opp_freqvolt+0x88>)
2fff823e:	f001 fc3f 	bl	2fff9ac0 <__assert>
2fff8242:	b911      	cbnz	r1, 2fff824a <dt_get_all_opp_freqvolt+0x1e>
2fff8244:	f240 214a 	movw	r1, #586	; 0x24a
2fff8248:	e7f8      	b.n	2fff823c <dt_get_all_opp_freqvolt+0x10>
2fff824a:	b912      	cbnz	r2, 2fff8252 <dt_get_all_opp_freqvolt+0x26>
2fff824c:	f240 214b 	movw	r1, #587	; 0x24b
2fff8250:	e7f4      	b.n	2fff823c <dt_get_all_opp_freqvolt+0x10>
2fff8252:	4819      	ldr	r0, [pc, #100]	; (2fff82b8 <dt_get_all_opp_freqvolt+0x8c>)
2fff8254:	f7ff ffc4 	bl	2fff81e0 <dt_get_node_by_compatible>
2fff8258:	2800      	cmp	r0, #0
2fff825a:	db18      	blt.n	2fff828e <dt_get_all_opp_freqvolt+0x62>
2fff825c:	f8df 905c 	ldr.w	r9, [pc, #92]	; 2fff82bc <dt_get_all_opp_freqvolt+0x90>
2fff8260:	4601      	mov	r1, r0
2fff8262:	4816      	ldr	r0, [pc, #88]	; (2fff82bc <dt_get_all_opp_freqvolt+0x90>)
2fff8264:	2500      	movs	r5, #0
2fff8266:	f001 f912 	bl	2fff948e <fdt_first_subnode>
2fff826a:	4604      	mov	r4, r0
2fff826c:	2c00      	cmp	r4, #0
2fff826e:	da03      	bge.n	2fff8278 <dt_get_all_opp_freqvolt+0x4c>
2fff8270:	b1ed      	cbz	r5, 2fff82ae <dt_get_all_opp_freqvolt+0x82>
2fff8272:	6035      	str	r5, [r6, #0]
2fff8274:	2000      	movs	r0, #0
2fff8276:	e00a      	b.n	2fff828e <dt_get_all_opp_freqvolt+0x62>
2fff8278:	aa01      	add	r2, sp, #4
2fff827a:	4669      	mov	r1, sp
2fff827c:	4620      	mov	r0, r4
2fff827e:	f7ff fe2d 	bl	2fff7edc <dt_get_opp_freqvolt_from_subnode>
2fff8282:	b970      	cbnz	r0, 2fff82a2 <dt_get_all_opp_freqvolt+0x76>
2fff8284:	6833      	ldr	r3, [r6, #0]
2fff8286:	42ab      	cmp	r3, r5
2fff8288:	d804      	bhi.n	2fff8294 <dt_get_all_opp_freqvolt+0x68>
2fff828a:	f06f 0002 	mvn.w	r0, #2
2fff828e:	b003      	add	sp, #12
2fff8290:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff8294:	9b00      	ldr	r3, [sp, #0]
2fff8296:	f847 3025 	str.w	r3, [r7, r5, lsl #2]
2fff829a:	9b01      	ldr	r3, [sp, #4]
2fff829c:	f848 3025 	str.w	r3, [r8, r5, lsl #2]
2fff82a0:	3501      	adds	r5, #1
2fff82a2:	4621      	mov	r1, r4
2fff82a4:	4648      	mov	r0, r9
2fff82a6:	f001 f905 	bl	2fff94b4 <fdt_next_subnode>
2fff82aa:	4604      	mov	r4, r0
2fff82ac:	e7de      	b.n	2fff826c <dt_get_all_opp_freqvolt+0x40>
2fff82ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff82b2:	e7ec      	b.n	2fff828e <dt_get_all_opp_freqvolt+0x62>
2fff82b4:	2fffc3e2 	.word	0x2fffc3e2
2fff82b8:	2fffc447 	.word	0x2fffc447
2fff82bc:	2ffcc000 	.word	0x2ffcc000

2fff82c0 <dt_get_cpu_regulator_name>:
2fff82c0:	490f      	ldr	r1, [pc, #60]	; (2fff8300 <dt_get_cpu_regulator_name+0x40>)
2fff82c2:	4810      	ldr	r0, [pc, #64]	; (2fff8304 <dt_get_cpu_regulator_name+0x44>)
2fff82c4:	b510      	push	{r4, lr}
2fff82c6:	f001 faf0 	bl	2fff98aa <fdt_path_offset>
2fff82ca:	1e01      	subs	r1, r0, #0
2fff82cc:	db15      	blt.n	2fff82fa <dt_get_cpu_regulator_name+0x3a>
2fff82ce:	4a0e      	ldr	r2, [pc, #56]	; (2fff8308 <dt_get_cpu_regulator_name+0x48>)
2fff82d0:	2300      	movs	r3, #0
2fff82d2:	480c      	ldr	r0, [pc, #48]	; (2fff8304 <dt_get_cpu_regulator_name+0x44>)
2fff82d4:	f001 fa57 	bl	2fff9786 <fdt_getprop>
2fff82d8:	b178      	cbz	r0, 2fff82fa <dt_get_cpu_regulator_name+0x3a>
2fff82da:	6800      	ldr	r0, [r0, #0]
2fff82dc:	f7ff fdac 	bl	2fff7e38 <fdt32_to_cpu>
2fff82e0:	4601      	mov	r1, r0
2fff82e2:	4808      	ldr	r0, [pc, #32]	; (2fff8304 <dt_get_cpu_regulator_name+0x44>)
2fff82e4:	f001 fb41 	bl	2fff996a <fdt_node_offset_by_phandle>
2fff82e8:	1e01      	subs	r1, r0, #0
2fff82ea:	db06      	blt.n	2fff82fa <dt_get_cpu_regulator_name+0x3a>
2fff82ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff82f0:	4a06      	ldr	r2, [pc, #24]	; (2fff830c <dt_get_cpu_regulator_name+0x4c>)
2fff82f2:	2300      	movs	r3, #0
2fff82f4:	4803      	ldr	r0, [pc, #12]	; (2fff8304 <dt_get_cpu_regulator_name+0x44>)
2fff82f6:	f001 ba46 	b.w	2fff9786 <fdt_getprop>
2fff82fa:	2000      	movs	r0, #0
2fff82fc:	bd10      	pop	{r4, pc}
2fff82fe:	bf00      	nop
2fff8300:	2fffc45b 	.word	0x2fffc45b
2fff8304:	2ffcc000 	.word	0x2ffcc000
2fff8308:	2fffc467 	.word	0x2fffc467
2fff830c:	2fffbee9 	.word	0x2fffbee9

2fff8310 <fdt_get_gpio_bank_pinctrl_node>:
2fff8310:	280a      	cmp	r0, #10
2fff8312:	b508      	push	{r3, lr}
2fff8314:	d905      	bls.n	2fff8322 <fdt_get_gpio_bank_pinctrl_node+0x12>
2fff8316:	2819      	cmp	r0, #25
2fff8318:	d009      	beq.n	2fff832e <fdt_get_gpio_bank_pinctrl_node+0x1e>
2fff831a:	f7fa fb83 	bl	2fff2a24 <console_flush>
2fff831e:	f000 eb96 	blx	2fff8a4c <do_panic>
2fff8322:	4904      	ldr	r1, [pc, #16]	; (2fff8334 <fdt_get_gpio_bank_pinctrl_node+0x24>)
2fff8324:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff8328:	4803      	ldr	r0, [pc, #12]	; (2fff8338 <fdt_get_gpio_bank_pinctrl_node+0x28>)
2fff832a:	f001 babe 	b.w	2fff98aa <fdt_path_offset>
2fff832e:	4903      	ldr	r1, [pc, #12]	; (2fff833c <fdt_get_gpio_bank_pinctrl_node+0x2c>)
2fff8330:	e7f8      	b.n	2fff8324 <fdt_get_gpio_bank_pinctrl_node+0x14>
2fff8332:	bf00      	nop
2fff8334:	2fffc472 	.word	0x2fffc472
2fff8338:	2ffcc000 	.word	0x2ffcc000
2fff833c:	2fffc486 	.word	0x2fffc486

2fff8340 <fdt_get_gpioz_nbpins_from_dt>:
2fff8340:	2019      	movs	r0, #25
2fff8342:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff8346:	f7ff ffe3 	bl	2fff8310 <fdt_get_gpio_bank_pinctrl_node>
2fff834a:	1e01      	subs	r1, r0, #0
2fff834c:	da03      	bge.n	2fff8356 <fdt_get_gpioz_nbpins_from_dt+0x16>
2fff834e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff8352:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff8356:	481d      	ldr	r0, [pc, #116]	; (2fff83cc <fdt_get_gpioz_nbpins_from_dt+0x8c>)
2fff8358:	4f1d      	ldr	r7, [pc, #116]	; (2fff83d0 <fdt_get_gpioz_nbpins_from_dt+0x90>)
2fff835a:	f001 f898 	bl	2fff948e <fdt_first_subnode>
2fff835e:	4e1b      	ldr	r6, [pc, #108]	; (2fff83cc <fdt_get_gpioz_nbpins_from_dt+0x8c>)
2fff8360:	4604      	mov	r4, r0
2fff8362:	f8df 8074 	ldr.w	r8, [pc, #116]	; 2fff83d8 <fdt_get_gpioz_nbpins_from_dt+0x98>
2fff8366:	2c00      	cmp	r4, #0
2fff8368:	db1b      	blt.n	2fff83a2 <fdt_get_gpioz_nbpins_from_dt+0x62>
2fff836a:	2300      	movs	r3, #0
2fff836c:	463a      	mov	r2, r7
2fff836e:	4621      	mov	r1, r4
2fff8370:	4630      	mov	r0, r6
2fff8372:	f001 fa08 	bl	2fff9786 <fdt_getprop>
2fff8376:	b318      	cbz	r0, 2fff83c0 <fdt_get_gpioz_nbpins_from_dt+0x80>
2fff8378:	2300      	movs	r3, #0
2fff837a:	4642      	mov	r2, r8
2fff837c:	4621      	mov	r1, r4
2fff837e:	4630      	mov	r0, r6
2fff8380:	f001 fa01 	bl	2fff9786 <fdt_getprop>
2fff8384:	4605      	mov	r5, r0
2fff8386:	b1d8      	cbz	r0, 2fff83c0 <fdt_get_gpioz_nbpins_from_dt+0x80>
2fff8388:	2019      	movs	r0, #25
2fff838a:	f7fa fca5 	bl	2fff2cd8 <stm32_get_gpio_bank_offset>
2fff838e:	4603      	mov	r3, r0
2fff8390:	6828      	ldr	r0, [r5, #0]
2fff8392:	f7ff fd51 	bl	2fff7e38 <fdt32_to_cpu>
2fff8396:	4298      	cmp	r0, r3
2fff8398:	d112      	bne.n	2fff83c0 <fdt_get_gpioz_nbpins_from_dt+0x80>
2fff839a:	4620      	mov	r0, r4
2fff839c:	f7ff fe1e 	bl	2fff7fdc <fdt_get_status>
2fff83a0:	b908      	cbnz	r0, 2fff83a6 <fdt_get_gpioz_nbpins_from_dt+0x66>
2fff83a2:	2000      	movs	r0, #0
2fff83a4:	e7d5      	b.n	2fff8352 <fdt_get_gpioz_nbpins_from_dt+0x12>
2fff83a6:	4a0b      	ldr	r2, [pc, #44]	; (2fff83d4 <fdt_get_gpioz_nbpins_from_dt+0x94>)
2fff83a8:	2300      	movs	r3, #0
2fff83aa:	4808      	ldr	r0, [pc, #32]	; (2fff83cc <fdt_get_gpioz_nbpins_from_dt+0x8c>)
2fff83ac:	4621      	mov	r1, r4
2fff83ae:	f001 f9ea 	bl	2fff9786 <fdt_getprop>
2fff83b2:	2800      	cmp	r0, #0
2fff83b4:	d0cb      	beq.n	2fff834e <fdt_get_gpioz_nbpins_from_dt+0xe>
2fff83b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2fff83ba:	6800      	ldr	r0, [r0, #0]
2fff83bc:	f7ff bd3c 	b.w	2fff7e38 <fdt32_to_cpu>
2fff83c0:	4621      	mov	r1, r4
2fff83c2:	4630      	mov	r0, r6
2fff83c4:	f001 f876 	bl	2fff94b4 <fdt_next_subnode>
2fff83c8:	4604      	mov	r4, r0
2fff83ca:	e7cc      	b.n	2fff8366 <fdt_get_gpioz_nbpins_from_dt+0x26>
2fff83cc:	2ffcc000 	.word	0x2ffcc000
2fff83d0:	2fffbb1e 	.word	0x2fffbb1e
2fff83d4:	2fffc49c 	.word	0x2fffc49c
2fff83d8:	2fffa810 	.word	0x2fffa810

2fff83dc <stm32mp_lock_shregs>:
2fff83dc:	b508      	push	{r3, lr}
2fff83de:	f7fa fc46 	bl	2fff2c6e <stm32mp_lock_available>
2fff83e2:	b120      	cbz	r0, 2fff83ee <stm32mp_lock_shregs+0x12>
2fff83e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff83e8:	4801      	ldr	r0, [pc, #4]	; (2fff83f0 <stm32mp_lock_shregs+0x14>)
2fff83ea:	f004 b9e1 	b.w	2fffc7b0 <__spin_lock_from_thumb>
2fff83ee:	bd08      	pop	{r3, pc}
2fff83f0:	2fffeb14 	.word	0x2fffeb14

2fff83f4 <stm32mp_unlock_shregs>:
2fff83f4:	b508      	push	{r3, lr}
2fff83f6:	f7fa fc3a 	bl	2fff2c6e <stm32mp_lock_available>
2fff83fa:	b120      	cbz	r0, 2fff8406 <stm32mp_unlock_shregs+0x12>
2fff83fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff8400:	4801      	ldr	r0, [pc, #4]	; (2fff8408 <stm32mp_unlock_shregs+0x14>)
2fff8402:	f004 b9c9 	b.w	2fffc798 <__spin_unlock_from_thumb>
2fff8406:	bd08      	pop	{r3, pc}
2fff8408:	2fffeb14 	.word	0x2fffeb14

2fff840c <stm32mp_mmio_clrsetbits_32_shregs>:
2fff840c:	b570      	push	{r4, r5, r6, lr}
2fff840e:	4604      	mov	r4, r0
2fff8410:	460e      	mov	r6, r1
2fff8412:	4615      	mov	r5, r2
2fff8414:	f7ff ffe2 	bl	2fff83dc <stm32mp_lock_shregs>
2fff8418:	6821      	ldr	r1, [r4, #0]
2fff841a:	ea21 0106 	bic.w	r1, r1, r6
2fff841e:	4329      	orrs	r1, r5
2fff8420:	6021      	str	r1, [r4, #0]
2fff8422:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff8426:	f7ff bfe5 	b.w	2fff83f4 <stm32mp_unlock_shregs>

2fff842a <stm32mp_mmio_clrbits_32_shregs>:
2fff842a:	b538      	push	{r3, r4, r5, lr}
2fff842c:	4604      	mov	r4, r0
2fff842e:	460d      	mov	r5, r1
2fff8430:	f7ff ffd4 	bl	2fff83dc <stm32mp_lock_shregs>
2fff8434:	6823      	ldr	r3, [r4, #0]
2fff8436:	ea23 0305 	bic.w	r3, r3, r5
2fff843a:	6023      	str	r3, [r4, #0]
2fff843c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff8440:	f7ff bfd8 	b.w	2fff83f4 <stm32mp_unlock_shregs>

2fff8444 <stm32mp_mmio_setbits_32_shregs>:
2fff8444:	b538      	push	{r3, r4, r5, lr}
2fff8446:	4605      	mov	r5, r0
2fff8448:	460c      	mov	r4, r1
2fff844a:	f7ff ffc7 	bl	2fff83dc <stm32mp_lock_shregs>
2fff844e:	6829      	ldr	r1, [r5, #0]
2fff8450:	430c      	orrs	r4, r1
2fff8452:	602c      	str	r4, [r5, #0]
2fff8454:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff8458:	f7ff bfcc 	b.w	2fff83f4 <stm32mp_unlock_shregs>

2fff845c <stm32_clean_context>:
2fff845c:	b508      	push	{r3, lr}
2fff845e:	2063      	movs	r0, #99	; 0x63
2fff8460:	f7fc ff2e 	bl	2fff52c0 <stm32mp_clk_enable>
2fff8464:	f04f 40a8 	mov.w	r0, #1409286144	; 0x54000000
2fff8468:	f44f 618d 	mov.w	r1, #1128	; 0x468
2fff846c:	f000 ec44 	blx	2fff8cf8 <zero_normalmem>
2fff8470:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff8474:	2063      	movs	r0, #99	; 0x63
2fff8476:	f7fc bf26 	b.w	2fff52c6 <stm32mp_clk_disable>

2fff847a <stm32mp1_pm_save_clock_cfg>:
2fff847a:	1883      	adds	r3, r0, r2
2fff847c:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
2fff8480:	b570      	push	{r4, r5, r6, lr}
2fff8482:	4604      	mov	r4, r0
2fff8484:	460e      	mov	r6, r1
2fff8486:	4615      	mov	r5, r2
2fff8488:	d903      	bls.n	2fff8492 <stm32mp1_pm_save_clock_cfg+0x18>
2fff848a:	f7fa facb 	bl	2fff2a24 <console_flush>
2fff848e:	f000 eade 	blx	2fff8a4c <do_panic>
2fff8492:	2063      	movs	r0, #99	; 0x63
2fff8494:	f7fc ff14 	bl	2fff52c0 <stm32mp_clk_enable>
2fff8498:	f104 40a8 	add.w	r0, r4, #1409286144	; 0x54000000
2fff849c:	462a      	mov	r2, r5
2fff849e:	4631      	mov	r1, r6
2fff84a0:	f500 7002 	add.w	r0, r0, #520	; 0x208
2fff84a4:	f001 fb34 	bl	2fff9b10 <memcpy>
2fff84a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff84ac:	2063      	movs	r0, #99	; 0x63
2fff84ae:	f7fc bf0a 	b.w	2fff52c6 <stm32mp_clk_disable>

2fff84b2 <stm32mp1_pm_restore_clock_cfg>:
2fff84b2:	1883      	adds	r3, r0, r2
2fff84b4:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
2fff84b8:	b570      	push	{r4, r5, r6, lr}
2fff84ba:	4604      	mov	r4, r0
2fff84bc:	460e      	mov	r6, r1
2fff84be:	4615      	mov	r5, r2
2fff84c0:	d903      	bls.n	2fff84ca <stm32mp1_pm_restore_clock_cfg+0x18>
2fff84c2:	f7fa faaf 	bl	2fff2a24 <console_flush>
2fff84c6:	f000 eac2 	blx	2fff8a4c <do_panic>
2fff84ca:	2063      	movs	r0, #99	; 0x63
2fff84cc:	f7fc fef8 	bl	2fff52c0 <stm32mp_clk_enable>
2fff84d0:	f104 41a8 	add.w	r1, r4, #1409286144	; 0x54000000
2fff84d4:	462a      	mov	r2, r5
2fff84d6:	4630      	mov	r0, r6
2fff84d8:	f501 7102 	add.w	r1, r1, #520	; 0x208
2fff84dc:	f001 fb18 	bl	2fff9b10 <memcpy>
2fff84e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff84e4:	2063      	movs	r0, #99	; 0x63
2fff84e6:	f7fc beee 	b.w	2fff52c6 <stm32mp_clk_disable>
	...

2fff84ec <stm32_save_context>:
2fff84ec:	b570      	push	{r4, r5, r6, lr}
2fff84ee:	4604      	mov	r4, r0
2fff84f0:	f7fd fa76 	bl	2fff59e0 <stm32mp1_clock_suspend>
2fff84f4:	2063      	movs	r0, #99	; 0x63
2fff84f6:	f7fc fee3 	bl	2fff52c0 <stm32mp_clk_enable>
2fff84fa:	2001      	movs	r0, #1
2fff84fc:	f7f4 ffa2 	bl	2ffed444 <smc_get_ctx>
2fff8500:	4606      	mov	r6, r0
2fff8502:	2001      	movs	r0, #1
2fff8504:	f7f4 ffba 	bl	2ffed47c <cm_get_context>
2fff8508:	4605      	mov	r5, r0
2fff850a:	4631      	mov	r1, r6
2fff850c:	f44f 7290 	mov.w	r2, #288	; 0x120
2fff8510:	f04f 40a8 	mov.w	r0, #1409286144	; 0x54000000
2fff8514:	f001 fafc 	bl	2fff9b10 <memcpy>
2fff8518:	480f      	ldr	r0, [pc, #60]	; (2fff8558 <stm32_save_context+0x6c>)
2fff851a:	4629      	mov	r1, r5
2fff851c:	f04f 45a8 	mov.w	r5, #1409286144	; 0x54000000
2fff8520:	2240      	movs	r2, #64	; 0x40
2fff8522:	f001 faf5 	bl	2fff9b10 <memcpy>
2fff8526:	480d      	ldr	r0, [pc, #52]	; (2fff855c <stm32_save_context+0x70>)
2fff8528:	f8c5 4160 	str.w	r4, [r5, #352]	; 0x160
2fff852c:	f7f7 f81e 	bl	2ffef56c <stm32_rtc_get_calendar>
2fff8530:	f7fc f9fc 	bl	2fff492c <stm32mp_stgen_get_counter>
2fff8534:	e9c5 0180 	strd	r0, r1, [r5, #512]	; 0x200
2fff8538:	4809      	ldr	r0, [pc, #36]	; (2fff8560 <stm32_save_context+0x74>)
2fff853a:	214c      	movs	r1, #76	; 0x4c
2fff853c:	f7fd f940 	bl	2fff57c0 <stm32mp1_clk_lp_save_opp_pll1_settings>
2fff8540:	4808      	ldr	r0, [pc, #32]	; (2fff8564 <stm32_save_context+0x78>)
2fff8542:	2104      	movs	r1, #4
2fff8544:	f7fa f952 	bl	2fff27ec <stm32mp1_pm_save_scmi_state>
2fff8548:	f7fd f9fa 	bl	2fff5940 <save_clock_pm_context>
2fff854c:	2063      	movs	r0, #99	; 0x63
2fff854e:	f7fc feba 	bl	2fff52c6 <stm32mp_clk_disable>
2fff8552:	2000      	movs	r0, #0
2fff8554:	bd70      	pop	{r4, r5, r6, pc}
2fff8556:	bf00      	nop
2fff8558:	54000120 	.word	0x54000120
2fff855c:	54000164 	.word	0x54000164
2fff8560:	540001b0 	.word	0x540001b0
2fff8564:	54000460 	.word	0x54000460

2fff8568 <stm32_restore_context>:
2fff8568:	b530      	push	{r4, r5, lr}
2fff856a:	2001      	movs	r0, #1
2fff856c:	b085      	sub	sp, #20
2fff856e:	f7f4 ff69 	bl	2ffed444 <smc_get_ctx>
2fff8572:	4605      	mov	r5, r0
2fff8574:	2001      	movs	r0, #1
2fff8576:	f7f4 ff81 	bl	2ffed47c <cm_get_context>
2fff857a:	4604      	mov	r4, r0
2fff857c:	2063      	movs	r0, #99	; 0x63
2fff857e:	f7fc fe9f 	bl	2fff52c0 <stm32mp_clk_enable>
2fff8582:	f7fd fa05 	bl	2fff5990 <restore_clock_pm_context>
2fff8586:	4815      	ldr	r0, [pc, #84]	; (2fff85dc <stm32_restore_context+0x74>)
2fff8588:	2104      	movs	r1, #4
2fff858a:	f7fa f96b 	bl	2fff2864 <stm32mp1_pm_restore_scmi_state>
2fff858e:	f44f 7290 	mov.w	r2, #288	; 0x120
2fff8592:	f04f 41a8 	mov.w	r1, #1409286144	; 0x54000000
2fff8596:	4628      	mov	r0, r5
2fff8598:	f001 faba 	bl	2fff9b10 <memcpy>
2fff859c:	4910      	ldr	r1, [pc, #64]	; (2fff85e0 <stm32_restore_context+0x78>)
2fff859e:	2240      	movs	r2, #64	; 0x40
2fff85a0:	4620      	mov	r0, r4
2fff85a2:	f001 fab5 	bl	2fff9b10 <memcpy>
2fff85a6:	a801      	add	r0, sp, #4
2fff85a8:	f7f6 ffe0 	bl	2ffef56c <stm32_rtc_get_calendar>
2fff85ac:	490d      	ldr	r1, [pc, #52]	; (2fff85e4 <stm32_restore_context+0x7c>)
2fff85ae:	a801      	add	r0, sp, #4
2fff85b0:	f7f6 fffc 	bl	2ffef5ac <stm32_rtc_diff_calendar>
2fff85b4:	460b      	mov	r3, r1
2fff85b6:	f04f 41a8 	mov.w	r1, #1409286144	; 0x54000000
2fff85ba:	4602      	mov	r2, r0
2fff85bc:	e9d1 0180 	ldrd	r0, r1, [r1, #512]	; 0x200
2fff85c0:	f7fc f9bc 	bl	2fff493c <stm32mp_stgen_restore_counter>
2fff85c4:	4808      	ldr	r0, [pc, #32]	; (2fff85e8 <stm32_restore_context+0x80>)
2fff85c6:	214c      	movs	r1, #76	; 0x4c
2fff85c8:	f7fd f910 	bl	2fff57ec <stm32mp1_clk_lp_load_opp_pll1_settings>
2fff85cc:	2063      	movs	r0, #99	; 0x63
2fff85ce:	f7fc fe7a 	bl	2fff52c6 <stm32mp_clk_disable>
2fff85d2:	f7fd fa51 	bl	2fff5a78 <stm32mp1_clock_resume>
2fff85d6:	2000      	movs	r0, #0
2fff85d8:	b005      	add	sp, #20
2fff85da:	bd30      	pop	{r4, r5, pc}
2fff85dc:	54000460 	.word	0x54000460
2fff85e0:	54000120 	.word	0x54000120
2fff85e4:	54000164 	.word	0x54000164
2fff85e8:	540001b0 	.word	0x540001b0

2fff85ec <stm32_get_stgen_from_context>:
2fff85ec:	b538      	push	{r3, r4, r5, lr}
2fff85ee:	2063      	movs	r0, #99	; 0x63
2fff85f0:	f7fc fe66 	bl	2fff52c0 <stm32mp_clk_enable>
2fff85f4:	f04f 43a8 	mov.w	r3, #1409286144	; 0x54000000
2fff85f8:	2063      	movs	r0, #99	; 0x63
2fff85fa:	e9d3 4580 	ldrd	r4, r5, [r3, #512]	; 0x200
2fff85fe:	f7fc fe62 	bl	2fff52c6 <stm32mp_clk_disable>
2fff8602:	4620      	mov	r0, r4
2fff8604:	4629      	mov	r1, r5
2fff8606:	bd38      	pop	{r3, r4, r5, pc}

2fff8608 <stm32_are_pll1_settings_valid_in_context>:
2fff8608:	b510      	push	{r4, lr}
2fff860a:	2063      	movs	r0, #99	; 0x63
2fff860c:	f7fc fe58 	bl	2fff52c0 <stm32mp_clk_enable>
2fff8610:	f04f 43a8 	mov.w	r3, #1409286144	; 0x54000000
2fff8614:	2063      	movs	r0, #99	; 0x63
2fff8616:	f8d3 41b0 	ldr.w	r4, [r3, #432]	; 0x1b0
2fff861a:	f1a3 736c 	sub.w	r3, r3, #61865984	; 0x3b00000
2fff861e:	f5a3 336c 	sub.w	r3, r3, #241664	; 0x3b000
2fff8622:	f2a3 33cf 	subw	r3, r3, #975	; 0x3cf
2fff8626:	1ae3      	subs	r3, r4, r3
2fff8628:	425c      	negs	r4, r3
2fff862a:	415c      	adcs	r4, r3
2fff862c:	f7fc fe4b 	bl	2fff52c6 <stm32mp_clk_disable>
2fff8630:	4620      	mov	r0, r4
2fff8632:	bd10      	pop	{r4, pc}

2fff8634 <stm32_save_ddr_training_area>:
2fff8634:	b507      	push	{r0, r1, r2, lr}
2fff8636:	2063      	movs	r0, #99	; 0x63
2fff8638:	f7fc fe42 	bl	2fff52c0 <stm32mp_clk_enable>
2fff863c:	231a      	movs	r3, #26
2fff863e:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
2fff8642:	9300      	str	r3, [sp, #0]
2fff8644:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
2fff8648:	f44f 5380 	mov.w	r3, #4096	; 0x1000
2fff864c:	2100      	movs	r1, #0
2fff864e:	f7fa fdf5 	bl	2fff323c <mmap_add_dynamic_region>
2fff8652:	b120      	cbz	r0, 2fff865e <stm32_save_ddr_training_area+0x2a>
2fff8654:	f44f 71c6 	mov.w	r1, #396	; 0x18c
2fff8658:	480d      	ldr	r0, [pc, #52]	; (2fff8690 <stm32_save_ddr_training_area+0x5c>)
2fff865a:	f001 fa31 	bl	2fff9ac0 <__assert>
2fff865e:	480d      	ldr	r0, [pc, #52]	; (2fff8694 <stm32_save_ddr_training_area+0x60>)
2fff8660:	2240      	movs	r2, #64	; 0x40
2fff8662:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
2fff8666:	f001 fa53 	bl	2fff9b10 <memcpy>
2fff866a:	f3bf 8f4f 	dsb	sy
2fff866e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
2fff8672:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
2fff8676:	f7fa fdf5 	bl	2fff3264 <mmap_remove_dynamic_region>
2fff867a:	b110      	cbz	r0, 2fff8682 <stm32_save_ddr_training_area+0x4e>
2fff867c:	f44f 71ca 	mov.w	r1, #404	; 0x194
2fff8680:	e7ea      	b.n	2fff8658 <stm32_save_ddr_training_area+0x24>
2fff8682:	2063      	movs	r0, #99	; 0x63
2fff8684:	b003      	add	sp, #12
2fff8686:	f85d eb04 	ldr.w	lr, [sp], #4
2fff868a:	f7fc be1c 	b.w	2fff52c6 <stm32mp_clk_disable>
2fff868e:	bf00      	nop
2fff8690:	2fffc4a3 	.word	0x2fffc4a3
2fff8694:	54000170 	.word	0x54000170

2fff8698 <stm32mp1_dbgmcu_init>:
2fff8698:	b508      	push	{r3, lr}
2fff869a:	f7fb fde1 	bl	2fff4260 <bsec_read_debug_conf>
2fff869e:	0543      	lsls	r3, r0, #21
2fff86a0:	d405      	bmi.n	2fff86ae <stm32mp1_dbgmcu_init+0x16>
2fff86a2:	4806      	ldr	r0, [pc, #24]	; (2fff86bc <stm32mp1_dbgmcu_init+0x24>)
2fff86a4:	f7fa f91a 	bl	2fff28dc <tf_log>
2fff86a8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff86ac:	bd08      	pop	{r3, pc}
2fff86ae:	4a04      	ldr	r2, [pc, #16]	; (2fff86c0 <stm32mp1_dbgmcu_init+0x28>)
2fff86b0:	2000      	movs	r0, #0
2fff86b2:	6813      	ldr	r3, [r2, #0]
2fff86b4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff86b8:	6013      	str	r3, [r2, #0]
2fff86ba:	e7f7      	b.n	2fff86ac <stm32mp1_dbgmcu_init+0x14>
2fff86bc:	2fffc4c7 	.word	0x2fffc4c7
2fff86c0:	5000080c 	.word	0x5000080c

2fff86c4 <stm32mp1_dbgmcu_get_chip_dev_id>:
2fff86c4:	b510      	push	{r4, lr}
2fff86c6:	4604      	mov	r4, r0
2fff86c8:	b918      	cbnz	r0, 2fff86d2 <stm32mp1_dbgmcu_get_chip_dev_id+0xe>
2fff86ca:	4808      	ldr	r0, [pc, #32]	; (2fff86ec <stm32mp1_dbgmcu_get_chip_dev_id+0x28>)
2fff86cc:	214c      	movs	r1, #76	; 0x4c
2fff86ce:	f001 f9f7 	bl	2fff9ac0 <__assert>
2fff86d2:	f7ff ffe1 	bl	2fff8698 <stm32mp1_dbgmcu_init>
2fff86d6:	b928      	cbnz	r0, 2fff86e4 <stm32mp1_dbgmcu_get_chip_dev_id+0x20>
2fff86d8:	4b05      	ldr	r3, [pc, #20]	; (2fff86f0 <stm32mp1_dbgmcu_get_chip_dev_id+0x2c>)
2fff86da:	681b      	ldr	r3, [r3, #0]
2fff86dc:	f3c3 030b 	ubfx	r3, r3, #0, #12
2fff86e0:	6023      	str	r3, [r4, #0]
2fff86e2:	bd10      	pop	{r4, pc}
2fff86e4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff86e8:	e7fb      	b.n	2fff86e2 <stm32mp1_dbgmcu_get_chip_dev_id+0x1e>
2fff86ea:	bf00      	nop
2fff86ec:	2fffc4fd 	.word	0x2fffc4fd
2fff86f0:	50081000 	.word	0x50081000

2fff86f4 <stm32mp1_security_setup>:
2fff86f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff86f6:	f7ff fd87 	bl	2fff8208 <dt_get_ddr_size>
2fff86fa:	4604      	mov	r4, r0
2fff86fc:	4811      	ldr	r0, [pc, #68]	; (2fff8744 <stm32mp1_security_setup+0x50>)
2fff86fe:	f7fb fb1b 	bl	2fff3d38 <tzc400_init>
2fff8702:	f7fb fbd9 	bl	2fff3eb8 <tzc400_disable_filters>
2fff8706:	4b10      	ldr	r3, [pc, #64]	; (2fff8748 <stm32mp1_security_setup+0x54>)
2fff8708:	f06f 4280 	mvn.w	r2, #1073741824	; 0x40000000
2fff870c:	1912      	adds	r2, r2, r4
2fff870e:	f04f 0101 	mov.w	r1, #1
2fff8712:	9303      	str	r3, [sp, #12]
2fff8714:	f04f 0300 	mov.w	r3, #0
2fff8718:	9302      	str	r3, [sp, #8]
2fff871a:	f04f 0300 	mov.w	r3, #0
2fff871e:	f143 0300 	adc.w	r3, r3, #0
2fff8722:	2003      	movs	r0, #3
2fff8724:	e9cd 2300 	strd	r2, r3, [sp]
2fff8728:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
2fff872c:	2300      	movs	r3, #0
2fff872e:	f7fb fb31 	bl	2fff3d94 <tzc400_configure_region>
2fff8732:	2002      	movs	r0, #2
2fff8734:	f7fb faee 	bl	2fff3d14 <tzc400_set_action>
2fff8738:	b004      	add	sp, #16
2fff873a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff873e:	f7fb bb87 	b.w	2fff3e50 <tzc400_enable_filters>
2fff8742:	bf00      	nop
2fff8744:	5c006000 	.word	0x5c006000
2fff8748:	87fb87fb 	.word	0x87fb87fb

2fff874c <stm32mp1_syscfg_enable_io_compensation>:
2fff874c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff874e:	2033      	movs	r0, #51	; 0x33
2fff8750:	f7fc fdbc 	bl	2fff52cc <stm32mp1_clk_force_enable>
2fff8754:	4a13      	ldr	r2, [pc, #76]	; (2fff87a4 <stm32mp1_syscfg_enable_io_compensation+0x58>)
2fff8756:	6813      	ldr	r3, [r2, #0]
2fff8758:	f043 0301 	orr.w	r3, r3, #1
2fff875c:	6013      	str	r3, [r2, #0]
2fff875e:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff8762:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff8766:	4a10      	ldr	r2, [pc, #64]	; (2fff87a8 <stm32mp1_syscfg_enable_io_compensation+0x5c>)
2fff8768:	f242 7110 	movw	r1, #10000	; 0x2710
2fff876c:	2300      	movs	r3, #0
2fff876e:	fba0 0101 	umull	r0, r1, r0, r1
2fff8772:	f000 eb0a 	blx	2fff8d88 <__aeabi_uldivmod>
2fff8776:	4b0d      	ldr	r3, [pc, #52]	; (2fff87ac <stm32mp1_syscfg_enable_io_compensation+0x60>)
2fff8778:	1906      	adds	r6, r0, r4
2fff877a:	eb41 0705 	adc.w	r7, r1, r5
2fff877e:	461c      	mov	r4, r3
2fff8780:	681a      	ldr	r2, [r3, #0]
2fff8782:	05d2      	lsls	r2, r2, #23
2fff8784:	d408      	bmi.n	2fff8798 <stm32mp1_syscfg_enable_io_compensation+0x4c>
2fff8786:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff878a:	428f      	cmp	r7, r1
2fff878c:	bf08      	it	eq
2fff878e:	4286      	cmpeq	r6, r0
2fff8790:	d2f6      	bcs.n	2fff8780 <stm32mp1_syscfg_enable_io_compensation+0x34>
2fff8792:	4807      	ldr	r0, [pc, #28]	; (2fff87b0 <stm32mp1_syscfg_enable_io_compensation+0x64>)
2fff8794:	f7fa f8a2 	bl	2fff28dc <tf_log>
2fff8798:	6823      	ldr	r3, [r4, #0]
2fff879a:	f023 0302 	bic.w	r3, r3, #2
2fff879e:	6023      	str	r3, [r4, #0]
2fff87a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff87a2:	bf00      	nop
2fff87a4:	50020024 	.word	0x50020024
2fff87a8:	000f4240 	.word	0x000f4240
2fff87ac:	50020020 	.word	0x50020020
2fff87b0:	2fffc520 	.word	0x2fffc520

2fff87b4 <stm32mp1_syscfg_disable_io_compensation>:
2fff87b4:	4b0a      	ldr	r3, [pc, #40]	; (2fff87e0 <stm32mp1_syscfg_disable_io_compensation+0x2c>)
2fff87b6:	2033      	movs	r0, #51	; 0x33
2fff87b8:	6819      	ldr	r1, [r3, #0]
2fff87ba:	681a      	ldr	r2, [r3, #0]
2fff87bc:	0e09      	lsrs	r1, r1, #24
2fff87be:	f422 027f 	bic.w	r2, r2, #16711680	; 0xff0000
2fff87c2:	601a      	str	r2, [r3, #0]
2fff87c4:	681a      	ldr	r2, [r3, #0]
2fff87c6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
2fff87ca:	f042 0202 	orr.w	r2, r2, #2
2fff87ce:	601a      	str	r2, [r3, #0]
2fff87d0:	4a04      	ldr	r2, [pc, #16]	; (2fff87e4 <stm32mp1_syscfg_disable_io_compensation+0x30>)
2fff87d2:	6813      	ldr	r3, [r2, #0]
2fff87d4:	f023 0301 	bic.w	r3, r3, #1
2fff87d8:	6013      	str	r3, [r2, #0]
2fff87da:	f7fc bd7a 	b.w	2fff52d2 <stm32mp1_clk_force_disable>
2fff87de:	bf00      	nop
2fff87e0:	50020020 	.word	0x50020020
2fff87e4:	50020024 	.word	0x50020024

2fff87e8 <_cpu_data>:
2fff87e8:	e92d5000 	push	{ip, lr}
2fff87ec:	eb000258 	bl	2fff9154 <plat_my_core_pos>
2fff87f0:	e8bd5000 	pop	{ip, lr}
2fff87f4:	eaffffff 	b	2fff87f8 <_cpu_data_by_index>

2fff87f8 <_cpu_data_by_index>:
2fff87f8:	e3a01040 	mov	r1, #64	; 0x40
2fff87fc:	e0000190 	mul	r0, r0, r1
2fff8800:	e59f1004 	ldr	r1, [pc, #4]	; 2fff880c <_cpu_data_by_index+0x14>
2fff8804:	e0800001 	add	r0, r0, r1
2fff8808:	e12fff1e 	bx	lr
2fff880c:	2fffebc0 	.word	0x2fffebc0

2fff8810 <reset_handler>:
2fff8810:	e1a0800e 	mov	r8, lr
2fff8814:	eb000249 	bl	2fff9140 <plat_reset_handler>
2fff8818:	eb00002a 	bl	2fff88c8 <get_cpu_ops_ptr>
2fff881c:	e3500000 	cmp	r0, #0
2fff8820:	1a000002 	bne	2fff8830 <reset_handler+0x20>
2fff8824:	e59f0018 	ldr	r0, [pc, #24]	; 2fff8844 <reset_handler+0x34>
2fff8828:	e3a01023 	mov	r1, #35	; 0x23
2fff882c:	ea0000a1 	b	2fff8ab8 <asm_assert>
2fff8830:	e5901004 	ldr	r1, [r0, #4]
2fff8834:	e3510000 	cmp	r1, #0
2fff8838:	e1a0e008 	mov	lr, r8
2fff883c:	112fff11 	bxne	r1
2fff8840:	e12fff1e 	bx	lr
2fff8844:	2fffc56a 	.word	0x2fffc56a

2fff8848 <prepare_cpu_pwr_dwn>:
2fff8848:	e3a02001 	mov	r2, #1
2fff884c:	e1500002 	cmp	r0, r2
2fff8850:	81a00002 	movhi	r0, r2
2fff8854:	e92d4001 	push	{r0, lr}
2fff8858:	ebffffe2 	bl	2fff87e8 <_cpu_data>
2fff885c:	e8bd4004 	pop	{r2, lr}
2fff8860:	e5900000 	ldr	r0, [r0]
2fff8864:	e3500000 	cmp	r0, #0
2fff8868:	1a000002 	bne	2fff8878 <prepare_cpu_pwr_dwn+0x30>
2fff886c:	e59f0014 	ldr	r0, [pc, #20]	; 2fff8888 <prepare_cpu_pwr_dwn+0x40>
2fff8870:	e3a0104a 	mov	r1, #74	; 0x4a
2fff8874:	ea00008f 	b	2fff8ab8 <asm_assert>
2fff8878:	e3a01008 	mov	r1, #8
2fff887c:	e0811102 	add	r1, r1, r2, lsl #2
2fff8880:	e7901001 	ldr	r1, [r0, r1]
2fff8884:	e12fff11 	bx	r1
2fff8888:	2fffc56a 	.word	0x2fffc56a

2fff888c <init_cpu_ops>:
2fff888c:	e92d4070 	push	{r4, r5, r6, lr}
2fff8890:	ebffffd4 	bl	2fff87e8 <_cpu_data>
2fff8894:	e1a06000 	mov	r6, r0
2fff8898:	e5901000 	ldr	r1, [r0]
2fff889c:	e3510000 	cmp	r1, #0
2fff88a0:	1a000006 	bne	2fff88c0 <init_cpu_ops+0x34>
2fff88a4:	eb000007 	bl	2fff88c8 <get_cpu_ops_ptr>
2fff88a8:	e3500000 	cmp	r0, #0
2fff88ac:	1a000002 	bne	2fff88bc <init_cpu_ops+0x30>
2fff88b0:	e59f000c 	ldr	r0, [pc, #12]	; 2fff88c4 <init_cpu_ops+0x38>
2fff88b4:	e3a01064 	mov	r1, #100	; 0x64
2fff88b8:	ea00007e 	b	2fff8ab8 <asm_assert>
2fff88bc:	e5a60000 	str	r0, [r6, #0]!
2fff88c0:	e8bd8070 	pop	{r4, r5, r6, pc}
2fff88c4:	2fffc56a 	.word	0x2fffc56a

2fff88c8 <get_cpu_ops_ptr>:
2fff88c8:	e59f4030 	ldr	r4, [pc, #48]	; 2fff8900 <error_exit+0x4>
2fff88cc:	e59f5030 	ldr	r5, [pc, #48]	; 2fff8904 <error_exit+0x8>
2fff88d0:	e3a00000 	mov	r0, #0
2fff88d4:	ee102f10 	mrc	15, 0, r2, cr0, cr0, {0}
2fff88d8:	e59f3028 	ldr	r3, [pc, #40]	; 2fff8908 <error_exit+0xc>
2fff88dc:	e0022003 	and	r2, r2, r3
2fff88e0:	e1540005 	cmp	r4, r5
2fff88e4:	2a000004 	bcs	2fff88fc <error_exit>
2fff88e8:	e494101c 	ldr	r1, [r4], #28
2fff88ec:	e0011003 	and	r1, r1, r3
2fff88f0:	e1510002 	cmp	r1, r2
2fff88f4:	1afffff9 	bne	2fff88e0 <get_cpu_ops_ptr+0x18>
2fff88f8:	e244001c 	sub	r0, r4, #28

2fff88fc <error_exit>:
2fff88fc:	e12fff1e 	bx	lr
2fff8900:	2fffc734 	.word	0x2fffc734
2fff8904:	2fffc750 	.word	0x2fffc750
2fff8908:	ff00fff0 	.word	0xff00fff0

2fff890c <print_errata_status>:
2fff890c:	e92d5030 	push	{r4, r5, ip, lr}
2fff8910:	ebffffb4 	bl	2fff87e8 <_cpu_data>
2fff8914:	e5901000 	ldr	r1, [r0]
2fff8918:	e5910010 	ldr	r0, [r1, #16]
2fff891c:	e3500000 	cmp	r0, #0
2fff8920:	0a000005 	beq	2fff893c <print_errata_status+0x30>
2fff8924:	e1a04000 	mov	r4, r0
2fff8928:	e5910014 	ldr	r0, [r1, #20]
2fff892c:	e5911018 	ldr	r1, [r1, #24]
2fff8930:	faffd41d 	blx	2ffed9ac <errata_needs_reporting>
2fff8934:	e3500000 	cmp	r0, #0
2fff8938:	112fff34 	blxne	r4
2fff893c:	e8bd9030 	pop	{r4, r5, ip, pc}

2fff8940 <spin_lock>:
2fff8940:	e3a02001 	mov	r2, #1
2fff8944:	e1901f9f 	ldrex	r1, [r0]
2fff8948:	e3510000 	cmp	r1, #0
2fff894c:	1320f002 	wfene
2fff8950:	01801f92 	strexeq	r1, r2, [r0]
2fff8954:	03510000 	cmpeq	r1, #0
2fff8958:	1afffff9 	bne	2fff8944 <spin_lock+0x4>
2fff895c:	f57ff05f 	dmb	sy
2fff8960:	e12fff1e 	bx	lr

2fff8964 <spin_unlock>:
2fff8964:	e3a01000 	mov	r1, #0
2fff8968:	f57ff05f 	dmb	sy
2fff896c:	e5801000 	str	r1, [r0]
2fff8970:	f57ff04f 	dsb	sy
2fff8974:	e320f004 	sev
2fff8978:	e12fff1e 	bx	lr

2fff897c <psci_do_pwrdown_cache_maintenance>:
2fff897c:	e92d4010 	push	{r4, lr}
2fff8980:	e1a04000 	mov	r4, r0
2fff8984:	eb00000e 	bl	2fff89c4 <do_stack_maintenance>
2fff8988:	e1a00004 	mov	r0, r4
2fff898c:	e8bd4010 	pop	{r4, lr}
2fff8990:	eaffffac 	b	2fff8848 <prepare_cpu_pwr_dwn>

2fff8994 <psci_do_pwrup_cache_maintenance>:
2fff8994:	e92d5000 	push	{ip, lr}
2fff8998:	f57ff05e 	dmb	st
2fff899c:	eb00001b 	bl	2fff8a10 <plat_get_my_stack>
2fff89a0:	e1a0100d 	mov	r1, sp
2fff89a4:	e0401001 	sub	r1, r0, r1
2fff89a8:	e1a0000d 	mov	r0, sp
2fff89ac:	eb000092 	bl	2fff8bfc <inv_dcache_range>
2fff89b0:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff89b4:	e3800004 	orr	r0, r0, #4
2fff89b8:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2fff89bc:	f57ff06f 	isb	sy
2fff89c0:	e8bd9000 	pop	{ip, pc}

2fff89c4 <do_stack_maintenance>:
2fff89c4:	e92d4010 	push	{r4, lr}
2fff89c8:	eb000010 	bl	2fff8a10 <plat_get_my_stack>
2fff89cc:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2fff89d0:	e3c11004 	bic	r1, r1, #4
2fff89d4:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
2fff89d8:	f57ff06f 	isb	sy
2fff89dc:	e1a04000 	mov	r4, r0
2fff89e0:	e1a0100d 	mov	r1, sp
2fff89e4:	e0401001 	sub	r1, r0, r1
2fff89e8:	e1a0000d 	mov	r0, sp
2fff89ec:	eb000064 	bl	2fff8b84 <flush_dcache_range>
2fff89f0:	e2440c06 	sub	r0, r4, #1536	; 0x600
2fff89f4:	e04d1000 	sub	r1, sp, r0
2fff89f8:	eb00007f 	bl	2fff8bfc <inv_dcache_range>
2fff89fc:	e8bd8010 	pop	{r4, pc}

2fff8a00 <psci_power_down_wfi>:
2fff8a00:	f57ff04f 	dsb	sy
2fff8a04:	e320f003 	wfi
2fff8a08:	eb000204 	bl	2fff9220 <plat_panic_handler>
2fff8a0c:	e320f000 	nop	{0}

2fff8a10 <plat_get_my_stack>:
2fff8a10:	e92d4010 	push	{r4, lr}
2fff8a14:	eb0001ce 	bl	2fff9154 <plat_my_core_pos>
2fff8a18:	e59f2008 	ldr	r2, [pc, #8]	; 2fff8a28 <plat_get_my_stack+0x18>
2fff8a1c:	e3a01c06 	mov	r1, #1536	; 0x600
2fff8a20:	e0202190 	mla	r0, r0, r1, r2
2fff8a24:	e8bd8010 	pop	{r4, pc}
2fff8a28:	2fffdb40 	.word	0x2fffdb40

2fff8a2c <plat_set_my_stack>:
2fff8a2c:	e1a0400e 	mov	r4, lr
2fff8a30:	eb0001c7 	bl	2fff9154 <plat_my_core_pos>
2fff8a34:	e59f200c 	ldr	r2, [pc, #12]	; 2fff8a48 <plat_set_my_stack+0x1c>
2fff8a38:	e3a01c06 	mov	r1, #1536	; 0x600
2fff8a3c:	e0202190 	mla	r0, r0, r1, r2
2fff8a40:	e1a0d000 	mov	sp, r0
2fff8a44:	e12fff14 	bx	r4
2fff8a48:	2fffdb40 	.word	0x2fffdb40

2fff8a4c <do_panic>:
2fff8a4c:	e24e6004 	sub	r6, lr, #4
2fff8a50:	eb0001c1 	bl	2fff915c <plat_crash_console_init>
2fff8a54:	e3500000 	cmp	r0, #0
2fff8a58:	0a000006 	beq	2fff8a78 <do_panic+0x2c>
2fff8a5c:	e59f401c 	ldr	r4, [pc, #28]	; 2fff8a80 <do_panic+0x34>
2fff8a60:	eb000033 	bl	2fff8b34 <asm_print_str>
2fff8a64:	e1a04006 	mov	r4, r6
2fff8a68:	eb000038 	bl	2fff8b50 <asm_print_hex>
2fff8a6c:	e59f4010 	ldr	r4, [pc, #16]	; 2fff8a84 <do_panic+0x38>
2fff8a70:	eb00002f 	bl	2fff8b34 <asm_print_str>
2fff8a74:	eb0001e3 	bl	2fff9208 <plat_crash_console_flush>
2fff8a78:	e1a0e006 	mov	lr, r6
2fff8a7c:	ea0001e7 	b	2fff9220 <plat_panic_handler>
2fff8a80:	2fffc589 	.word	0x2fffc589
2fff8a84:	2fffc59a 	.word	0x2fffc59a

2fff8a88 <report_undef_inst>:
2fff8a88:	e1060300 	mrs	r0, LR_und
2fff8a8c:	eb000173 	bl	2fff9060 <plat_report_undef_inst>
2fff8a90:	eb0001e2 	bl	2fff9220 <plat_panic_handler>
2fff8a94:	e320f000 	nop	{0}

2fff8a98 <report_prefetch_abort>:
2fff8a98:	e1040300 	mrs	r0, LR_abt
2fff8a9c:	eb00017b 	bl	2fff9090 <plat_report_prefetch_abort>
2fff8aa0:	eb0001de 	bl	2fff9220 <plat_panic_handler>
2fff8aa4:	e320f000 	nop	{0}

2fff8aa8 <report_data_abort>:
2fff8aa8:	e1040300 	mrs	r0, LR_abt
2fff8aac:	eb00018d 	bl	2fff90e8 <plat_report_data_abort>
2fff8ab0:	eb0001da 	bl	2fff9220 <plat_panic_handler>
2fff8ab4:	e320f000 	nop	{0}

2fff8ab8 <asm_assert>:
2fff8ab8:	e1a05000 	mov	r5, r0
2fff8abc:	e1a06001 	mov	r6, r1
2fff8ac0:	eb0001a5 	bl	2fff915c <plat_crash_console_init>
2fff8ac4:	e3500000 	cmp	r0, #0
2fff8ac8:	0a000013 	beq	2fff8b1c <dec_print_loop+0x20>
2fff8acc:	e59f4050 	ldr	r4, [pc, #80]	; 2fff8b24 <dec_print_loop+0x28>
2fff8ad0:	eb000017 	bl	2fff8b34 <asm_print_str>
2fff8ad4:	e1a04005 	mov	r4, r5
2fff8ad8:	eb000015 	bl	2fff8b34 <asm_print_str>
2fff8adc:	e59f4044 	ldr	r4, [pc, #68]	; 2fff8b28 <dec_print_loop+0x2c>
2fff8ae0:	eb000013 	bl	2fff8b34 <asm_print_str>
2fff8ae4:	e59f4040 	ldr	r4, [pc, #64]	; 2fff8b2c <dec_print_loop+0x30>
2fff8ae8:	e1160004 	tst	r6, r4
2fff8aec:	1a00000a 	bne	2fff8b1c <dec_print_loop+0x20>
2fff8af0:	e1a04006 	mov	r4, r6
2fff8af4:	e3a0600a 	mov	r6, #10
2fff8af8:	e59f5030 	ldr	r5, [pc, #48]	; 2fff8b30 <dec_print_loop+0x34>

2fff8afc <dec_print_loop>:
2fff8afc:	e730f514 	udiv	r0, r4, r5
2fff8b00:	e0644590 	mls	r4, r0, r5, r4
2fff8b04:	e2800030 	add	r0, r0, #48	; 0x30
2fff8b08:	eb0001c1 	bl	2fff9214 <plat_crash_console_putc>
2fff8b0c:	e735f615 	udiv	r5, r5, r6
2fff8b10:	e3550000 	cmp	r5, #0
2fff8b14:	1afffff8 	bne	2fff8afc <dec_print_loop>
2fff8b18:	eb0001ba 	bl	2fff9208 <plat_crash_console_flush>
2fff8b1c:	eb0001bf 	bl	2fff9220 <plat_panic_handler>
2fff8b20:	e320f000 	nop	{0}
2fff8b24:	2fffc59d 	.word	0x2fffc59d
2fff8b28:	2fffc5ab 	.word	0x2fffc5ab
2fff8b2c:	ffff0000 	.word	0xffff0000
2fff8b30:	00002710 	.word	0x00002710

2fff8b34 <asm_print_str>:
2fff8b34:	e1a0700e 	mov	r7, lr
2fff8b38:	e4d40001 	ldrb	r0, [r4], #1
2fff8b3c:	e3500000 	cmp	r0, #0
2fff8b40:	0a000001 	beq	2fff8b4c <asm_print_str+0x18>
2fff8b44:	eb0001b2 	bl	2fff9214 <plat_crash_console_putc>
2fff8b48:	eafffffa 	b	2fff8b38 <asm_print_str+0x4>
2fff8b4c:	e12fff17 	bx	r7

2fff8b50 <asm_print_hex>:
2fff8b50:	e1a0700e 	mov	r7, lr
2fff8b54:	e3a05020 	mov	r5, #32
2fff8b58:	e2455004 	sub	r5, r5, #4
2fff8b5c:	e1a00534 	lsr	r0, r4, r5
2fff8b60:	e200000f 	and	r0, r0, #15
2fff8b64:	e350000a 	cmp	r0, #10
2fff8b68:	3a000000 	bcc	2fff8b70 <asm_print_hex+0x20>
2fff8b6c:	e2800027 	add	r0, r0, #39	; 0x27
2fff8b70:	e2800030 	add	r0, r0, #48	; 0x30
2fff8b74:	eb0001a6 	bl	2fff9214 <plat_crash_console_putc>
2fff8b78:	e3550000 	cmp	r5, #0
2fff8b7c:	1afffff5 	bne	2fff8b58 <asm_print_hex+0x8>
2fff8b80:	e12fff17 	bx	r7

2fff8b84 <flush_dcache_range>:
2fff8b84:	e3510000 	cmp	r1, #0
2fff8b88:	0a00000b 	beq	2fff8bbc <exit_loop_cimvac>
2fff8b8c:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2fff8b90:	e7e33853 	ubfx	r3, r3, #16, #4
2fff8b94:	e3a02004 	mov	r2, #4
2fff8b98:	e1a02312 	lsl	r2, r2, r3
2fff8b9c:	e0801001 	add	r1, r0, r1
2fff8ba0:	e2423001 	sub	r3, r2, #1
2fff8ba4:	e1c00003 	bic	r0, r0, r3

2fff8ba8 <loop_cimvac>:
2fff8ba8:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
2fff8bac:	e0800002 	add	r0, r0, r2
2fff8bb0:	e1500001 	cmp	r0, r1
2fff8bb4:	3afffffb 	bcc	2fff8ba8 <loop_cimvac>
2fff8bb8:	f57ff04f 	dsb	sy

2fff8bbc <exit_loop_cimvac>:
2fff8bbc:	e12fff1e 	bx	lr

2fff8bc0 <clean_dcache_range>:
2fff8bc0:	e3510000 	cmp	r1, #0
2fff8bc4:	0a00000b 	beq	2fff8bf8 <exit_loop_cmvac>
2fff8bc8:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2fff8bcc:	e7e33853 	ubfx	r3, r3, #16, #4
2fff8bd0:	e3a02004 	mov	r2, #4
2fff8bd4:	e1a02312 	lsl	r2, r2, r3
2fff8bd8:	e0801001 	add	r1, r0, r1
2fff8bdc:	e2423001 	sub	r3, r2, #1
2fff8be0:	e1c00003 	bic	r0, r0, r3

2fff8be4 <loop_cmvac>:
2fff8be4:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
2fff8be8:	e0800002 	add	r0, r0, r2
2fff8bec:	e1500001 	cmp	r0, r1
2fff8bf0:	3afffffb 	bcc	2fff8be4 <loop_cmvac>
2fff8bf4:	f57ff04f 	dsb	sy

2fff8bf8 <exit_loop_cmvac>:
2fff8bf8:	e12fff1e 	bx	lr

2fff8bfc <inv_dcache_range>:
2fff8bfc:	e3510000 	cmp	r1, #0
2fff8c00:	0a00000b 	beq	2fff8c34 <exit_loop_imvac>
2fff8c04:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2fff8c08:	e7e33853 	ubfx	r3, r3, #16, #4
2fff8c0c:	e3a02004 	mov	r2, #4
2fff8c10:	e1a02312 	lsl	r2, r2, r3
2fff8c14:	e0801001 	add	r1, r0, r1
2fff8c18:	e2423001 	sub	r3, r2, #1
2fff8c1c:	e1c00003 	bic	r0, r0, r3

2fff8c20 <loop_imvac>:
2fff8c20:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
2fff8c24:	e0800002 	add	r0, r0, r2
2fff8c28:	e1500001 	cmp	r0, r1
2fff8c2c:	3afffffb 	bcc	2fff8c20 <loop_imvac>
2fff8c30:	f57ff04f 	dsb	sy

2fff8c34 <exit_loop_imvac>:
2fff8c34:	e12fff1e 	bx	lr

2fff8c38 <do_dcsw_op>:
2fff8c38:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
2fff8c3c:	e28fb078 	add	fp, pc, #120	; 0x78
2fff8c40:	e08b6180 	add	r6, fp, r0, lsl #3

2fff8c44 <loop1>:
2fff8c44:	e081a0a1 	add	sl, r1, r1, lsr #1
2fff8c48:	e1a0ca32 	lsr	ip, r2, sl
2fff8c4c:	e20cc007 	and	ip, ip, #7
2fff8c50:	e35c0002 	cmp	ip, #2
2fff8c54:	3a00000f 	bcc	2fff8c98 <level_done>
2fff8c58:	ee401f10 	mcr	15, 2, r1, cr0, cr0, {0}
2fff8c5c:	f57ff06f 	isb	sy
2fff8c60:	ee30cf10 	mrc	15, 1, ip, cr0, cr0, {0}
2fff8c64:	e20ca007 	and	sl, ip, #7
2fff8c68:	e28aa004 	add	sl, sl, #4
2fff8c6c:	e7e941dc 	ubfx	r4, ip, #3, #10
2fff8c70:	e16f5f14 	clz	r5, r4
2fff8c74:	e1a09004 	mov	r9, r4

2fff8c78 <loop2>:
2fff8c78:	e7ee76dc 	ubfx	r7, ip, #13, #15

2fff8c7c <loop3>:
2fff8c7c:	e1810519 	orr	r0, r1, r9, lsl r5
2fff8c80:	e1800a17 	orr	r0, r0, r7, lsl sl
2fff8c84:	e12fff36 	blx	r6
2fff8c88:	e2577001 	subs	r7, r7, #1
2fff8c8c:	2afffffa 	bcs	2fff8c7c <loop3>
2fff8c90:	e2599001 	subs	r9, r9, #1
2fff8c94:	2afffff7 	bcs	2fff8c78 <loop2>

2fff8c98 <level_done>:
2fff8c98:	e2811002 	add	r1, r1, #2
2fff8c9c:	e1530001 	cmp	r3, r1
2fff8ca0:	f57ff04f 	dsb	sy
2fff8ca4:	8affffe6 	bhi	2fff8c44 <loop1>
2fff8ca8:	e3a06000 	mov	r6, #0
2fff8cac:	ee406f10 	mcr	15, 2, r6, cr0, cr0, {0}
2fff8cb0:	f57ff04f 	dsb	sy
2fff8cb4:	f57ff06f 	isb	sy
2fff8cb8:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}

2fff8cbc <dcsw_loop_table>:
2fff8cbc:	ee070f56 	mcr	15, 0, r0, cr7, cr6, {2}
2fff8cc0:	e12fff1e 	bx	lr
2fff8cc4:	ee070f5e 	mcr	15, 0, r0, cr7, cr14, {2}
2fff8cc8:	e12fff1e 	bx	lr
2fff8ccc:	ee070f5a 	mcr	15, 0, r0, cr7, cr10, {2}
2fff8cd0:	e12fff1e 	bx	lr

2fff8cd4 <dcsw_op_all>:
2fff8cd4:	ee302f30 	mrc	15, 1, r2, cr0, cr0, {1}
2fff8cd8:	e7e23c52 	ubfx	r3, r2, #24, #3
2fff8cdc:	e1a03083 	lsl	r3, r3, #1
2fff8ce0:	e3a01000 	mov	r1, #0
2fff8ce4:	eaffffd3 	b	2fff8c38 <do_dcsw_op>

2fff8ce8 <dcsw_op_level1>:
2fff8ce8:	ee302f30 	mrc	15, 1, r2, cr0, cr0, {1}
2fff8cec:	e3a03002 	mov	r3, #2
2fff8cf0:	e2431002 	sub	r1, r3, #2
2fff8cf4:	eaffffcf 	b	2fff8c38 <do_dcsw_op>

2fff8cf8 <zero_normalmem>:
2fff8cf8:	e3a02000 	mov	r2, #0
2fff8cfc:	e0801001 	add	r1, r0, r1
2fff8d00:	e3100007 	tst	r0, #7
2fff8d04:	0a000007 	beq	2fff8d28 <zero_normalmem+0x30>
2fff8d08:	e380c007 	orr	ip, r0, #7
2fff8d0c:	e29cc001 	adds	ip, ip, #1
2fff8d10:	0a00000b 	beq	2fff8d44 <zero_normalmem+0x4c>
2fff8d14:	e15c0001 	cmp	ip, r1
2fff8d18:	2a000009 	bcs	2fff8d44 <zero_normalmem+0x4c>
2fff8d1c:	e4c02001 	strb	r2, [r0], #1
2fff8d20:	e150000c 	cmp	r0, ip
2fff8d24:	1afffffc 	bne	2fff8d1c <zero_normalmem+0x24>
2fff8d28:	e3c1c007 	bic	ip, r1, #7
2fff8d2c:	e150000c 	cmp	r0, ip
2fff8d30:	2a000003 	bcs	2fff8d44 <zero_normalmem+0x4c>
2fff8d34:	e3a03000 	mov	r3, #0
2fff8d38:	e8a0000c 	stmia	r0!, {r2, r3}
2fff8d3c:	e150000c 	cmp	r0, ip
2fff8d40:	3afffffc 	bcc	2fff8d38 <zero_normalmem+0x40>
2fff8d44:	e1500001 	cmp	r0, r1
2fff8d48:	0a000002 	beq	2fff8d58 <zero_normalmem+0x60>
2fff8d4c:	e4c02001 	strb	r2, [r0], #1
2fff8d50:	e1500001 	cmp	r0, r1
2fff8d54:	1afffffc 	bne	2fff8d4c <zero_normalmem+0x54>
2fff8d58:	e12fff1e 	bx	lr

2fff8d5c <disable_mmu_secure>:
2fff8d5c:	e3a01005 	mov	r1, #5

2fff8d60 <do_disable_mmu>:
2fff8d60:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff8d64:	e1c00001 	bic	r0, r0, r1
2fff8d68:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2fff8d6c:	f57ff06f 	isb	sy
2fff8d70:	f57ff04f 	dsb	sy
2fff8d74:	e12fff1e 	bx	lr

2fff8d78 <disable_mmu_icache_secure>:
2fff8d78:	e51f1000 	ldr	r1, [pc, #-0]	; 2fff8d80 <disable_mmu_icache_secure+0x8>
2fff8d7c:	eafffff7 	b	2fff8d60 <do_disable_mmu>
2fff8d80:	00001005 	.word	0x00001005

2fff8d84 <plat_disable_acp>:
2fff8d84:	e12fff1e 	bx	lr

2fff8d88 <__aeabi_uldivmod>:
2fff8d88:	e92d4040 	push	{r6, lr}
2fff8d8c:	e24dd010 	sub	sp, sp, #16
2fff8d90:	e28d6008 	add	r6, sp, #8
2fff8d94:	e58d6000 	str	r6, [sp]
2fff8d98:	faffe743 	blx	2fff2aac <__udivmoddi4>
2fff8d9c:	e59d2008 	ldr	r2, [sp, #8]
2fff8da0:	e59d300c 	ldr	r3, [sp, #12]
2fff8da4:	e28dd010 	add	sp, sp, #16
2fff8da8:	e8bd8040 	pop	{r6, pc}

2fff8dac <console_stm32_core_init>:
2fff8dac:	e3500000 	cmp	r0, #0
2fff8db0:	0a000001 	beq	2fff8dbc <core_init_fail>
2fff8db4:	e3a00001 	mov	r0, #1
2fff8db8:	e12fff1e 	bx	lr

2fff8dbc <core_init_fail>:
2fff8dbc:	e3a00000 	mov	r0, #0
2fff8dc0:	e12fff1e 	bx	lr

2fff8dc4 <console_stm32_register>:
2fff8dc4:	e92d4010 	push	{r4, lr}
2fff8dc8:	e1a04003 	mov	r4, r3
2fff8dcc:	e3540000 	cmp	r4, #0
2fff8dd0:	0a00000e 	beq	2fff8e10 <register_fail>
2fff8dd4:	e5840014 	str	r0, [r4, #20]
2fff8dd8:	ebfffff3 	bl	2fff8dac <console_stm32_core_init>
2fff8ddc:	e3500000 	cmp	r0, #0
2fff8de0:	0a00000a 	beq	2fff8e10 <register_fail>
2fff8de4:	e1a00004 	mov	r0, r4
2fff8de8:	e8bd4010 	pop	{r4, lr}
2fff8dec:	e59f1020 	ldr	r1, [pc, #32]	; 2fff8e14 <register_fail+0x4>
2fff8df0:	e5801008 	str	r1, [r0, #8]
2fff8df4:	e3a01000 	mov	r1, #0
2fff8df8:	e580100c 	str	r1, [r0, #12]
2fff8dfc:	e59f1014 	ldr	r1, [pc, #20]	; 2fff8e18 <register_fail+0x8>
2fff8e00:	e5801010 	str	r1, [r0, #16]
2fff8e04:	e3a01005 	mov	r1, #5
2fff8e08:	e5801004 	str	r1, [r0, #4]
2fff8e0c:	ea000e5b 	b	2fffc780 <__console_register_from_arm>

2fff8e10 <register_fail>:
2fff8e10:	e8bd8010 	pop	{r4, pc}
2fff8e14:	2fff8e64 	.word	0x2fff8e64
2fff8e18:	2fff8eb4 	.word	0x2fff8eb4

2fff8e1c <console_stm32_core_putc>:
2fff8e1c:	e3510000 	cmp	r1, #0
2fff8e20:	0a00000d 	beq	2fff8e5c <putc_error>
2fff8e24:	e3a03a01 	mov	r3, #4096	; 0x1000

2fff8e28 <txe_loop>:
2fff8e28:	e2533001 	subs	r3, r3, #1
2fff8e2c:	0a00000a 	beq	2fff8e5c <putc_error>
2fff8e30:	e591201c 	ldr	r2, [r1, #28]
2fff8e34:	e3120080 	tst	r2, #128	; 0x80
2fff8e38:	0afffffa 	beq	2fff8e28 <txe_loop>
2fff8e3c:	e5810028 	str	r0, [r1, #40]	; 0x28
2fff8e40:	e3a03a01 	mov	r3, #4096	; 0x1000

2fff8e44 <tc_loop>:
2fff8e44:	e2533001 	subs	r3, r3, #1
2fff8e48:	0a000003 	beq	2fff8e5c <putc_error>
2fff8e4c:	e591201c 	ldr	r2, [r1, #28]
2fff8e50:	e3120040 	tst	r2, #64	; 0x40
2fff8e54:	0afffffa 	beq	2fff8e44 <tc_loop>
2fff8e58:	e12fff1e 	bx	lr

2fff8e5c <putc_error>:
2fff8e5c:	e3e00000 	mvn	r0, #0
2fff8e60:	e12fff1e 	bx	lr

2fff8e64 <console_stm32_putc>:
2fff8e64:	e3510000 	cmp	r1, #0
2fff8e68:	1a000002 	bne	2fff8e78 <console_stm32_putc+0x14>
2fff8e6c:	e59f000c 	ldr	r0, [pc, #12]	; 2fff8e80 <console_stm32_putc+0x1c>
2fff8e70:	e3a010b0 	mov	r1, #176	; 0xb0
2fff8e74:	eaffff0f 	b	2fff8ab8 <asm_assert>
2fff8e78:	e5911014 	ldr	r1, [r1, #20]
2fff8e7c:	eaffffe6 	b	2fff8e1c <console_stm32_core_putc>
2fff8e80:	2fffc5b2 	.word	0x2fffc5b2

2fff8e84 <console_stm32_core_flush>:
2fff8e84:	e3500000 	cmp	r0, #0
2fff8e88:	0a000007 	beq	2fff8eac <flush_error>
2fff8e8c:	e3a02a01 	mov	r2, #4096	; 0x1000

2fff8e90 <txe_loop_3>:
2fff8e90:	e2522001 	subs	r2, r2, #1
2fff8e94:	0a000004 	beq	2fff8eac <flush_error>
2fff8e98:	e590101c 	ldr	r1, [r0, #28]
2fff8e9c:	e3110080 	tst	r1, #128	; 0x80
2fff8ea0:	0afffffa 	beq	2fff8e90 <txe_loop_3>
2fff8ea4:	e3a00000 	mov	r0, #0
2fff8ea8:	e12fff1e 	bx	lr

2fff8eac <flush_error>:
2fff8eac:	e3e00000 	mvn	r0, #0
2fff8eb0:	e12fff1e 	bx	lr

2fff8eb4 <console_stm32_flush>:
2fff8eb4:	e3500000 	cmp	r0, #0
2fff8eb8:	1a000002 	bne	2fff8ec8 <console_stm32_flush+0x14>
2fff8ebc:	e59f000c 	ldr	r0, [pc, #12]	; 2fff8ed0 <console_stm32_flush+0x1c>
2fff8ec0:	e3a010f0 	mov	r1, #240	; 0xf0
2fff8ec4:	eafffefb 	b	2fff8ab8 <asm_assert>
2fff8ec8:	e5900014 	ldr	r0, [r0, #20]
2fff8ecc:	eaffffec 	b	2fff8e84 <console_stm32_core_flush>
2fff8ed0:	2fffc5b2 	.word	0x2fffc5b2

2fff8ed4 <enable_mmu_direct_svc_mon>:
2fff8ed4:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2fff8ed8:	e3110001 	tst	r1, #1
2fff8edc:	0a000002 	beq	2fff8eec <enable_mmu_direct_svc_mon+0x18>
2fff8ee0:	e59f0060 	ldr	r0, [pc, #96]	; 2fff8f48 <enable_mmu_direct_svc_mon+0x74>
2fff8ee4:	e3a01014 	mov	r1, #20
2fff8ee8:	eafffef2 	b	2fff8ab8 <asm_assert>
2fff8eec:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
2fff8ef0:	e1a03000 	mov	r3, r0
2fff8ef4:	e59f0050 	ldr	r0, [pc, #80]	; 2fff8f4c <enable_mmu_direct_svc_mon+0x78>
2fff8ef8:	e5901000 	ldr	r1, [r0]
2fff8efc:	ee0a1f12 	mcr	15, 0, r1, cr10, cr2, {0}
2fff8f00:	e5902008 	ldr	r2, [r0, #8]
2fff8f04:	ee022f50 	mcr	15, 0, r2, cr2, cr0, {2}
2fff8f08:	e5901010 	ldr	r1, [r0, #16]
2fff8f0c:	e5902014 	ldr	r2, [r0, #20]
2fff8f10:	ec421f02 	mcrr	15, 0, r1, r2, cr2
2fff8f14:	e3a01000 	mov	r1, #0
2fff8f18:	e3a02000 	mov	r2, #0
2fff8f1c:	ec421f12 	mcrr	15, 1, r1, r2, cr2
2fff8f20:	f57ff04b 	dsb	ish
2fff8f24:	f57ff06f 	isb	sy
2fff8f28:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2fff8f2c:	e59f201c 	ldr	r2, [pc, #28]	; 2fff8f50 <enable_mmu_direct_svc_mon+0x7c>
2fff8f30:	e1811002 	orr	r1, r1, r2
2fff8f34:	e3130001 	tst	r3, #1
2fff8f38:	13c11004 	bicne	r1, r1, #4
2fff8f3c:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
2fff8f40:	f57ff06f 	isb	sy
2fff8f44:	e12fff1e 	bx	lr
2fff8f48:	2fffc5da 	.word	0x2fffc5da
2fff8f4c:	2fffec88 	.word	0x2fffec88
2fff8f50:	00080005 	.word	0x00080005

2fff8f54 <cortex_a7_disable_smp>:
2fff8f54:	ee110f30 	mrc	15, 0, r0, cr1, cr0, {1}
2fff8f58:	e3c00040 	bic	r0, r0, #64	; 0x40
2fff8f5c:	ee010f30 	mcr	15, 0, r0, cr1, cr0, {1}
2fff8f60:	f57ff06f 	isb	sy
2fff8f64:	f57ff04f 	dsb	sy
2fff8f68:	e12fff1e 	bx	lr

2fff8f6c <cortex_a7_enable_smp>:
2fff8f6c:	ee110f30 	mrc	15, 0, r0, cr1, cr0, {1}
2fff8f70:	e3800040 	orr	r0, r0, #64	; 0x40
2fff8f74:	ee010f30 	mcr	15, 0, r0, cr1, cr0, {1}
2fff8f78:	f57ff06f 	isb	sy
2fff8f7c:	e12fff1e 	bx	lr

2fff8f80 <cortex_a7_reset_func>:
2fff8f80:	eafffff9 	b	2fff8f6c <cortex_a7_enable_smp>

2fff8f84 <cortex_a7_core_pwr_dwn>:
2fff8f84:	e92d5000 	push	{ip, lr}
2fff8f88:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff8f8c:	e3100004 	tst	r0, #4
2fff8f90:	0a000002 	beq	2fff8fa0 <cortex_a7_core_pwr_dwn+0x1c>
2fff8f94:	e59f0014 	ldr	r0, [pc, #20]	; 2fff8fb0 <cortex_a7_core_pwr_dwn+0x2c>
2fff8f98:	e3a01011 	mov	r1, #17
2fff8f9c:	eafffec5 	b	2fff8ab8 <asm_assert>
2fff8fa0:	e3a00001 	mov	r0, #1
2fff8fa4:	ebffff4f 	bl	2fff8ce8 <dcsw_op_level1>
2fff8fa8:	e8bd5000 	pop	{ip, lr}
2fff8fac:	eaffffe8 	b	2fff8f54 <cortex_a7_disable_smp>
2fff8fb0:	2fffc602 	.word	0x2fffc602

2fff8fb4 <cortex_a7_cluster_pwr_dwn>:
2fff8fb4:	e92d5000 	push	{ip, lr}
2fff8fb8:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff8fbc:	e3100004 	tst	r0, #4
2fff8fc0:	0a000002 	beq	2fff8fd0 <cortex_a7_cluster_pwr_dwn+0x1c>
2fff8fc4:	e59f0018 	ldr	r0, [pc, #24]	; 2fff8fe4 <cortex_a7_cluster_pwr_dwn+0x30>
2fff8fc8:	e3a01011 	mov	r1, #17
2fff8fcc:	eafffeb9 	b	2fff8ab8 <asm_assert>
2fff8fd0:	e3a00001 	mov	r0, #1
2fff8fd4:	ebffff43 	bl	2fff8ce8 <dcsw_op_level1>
2fff8fd8:	ebffff69 	bl	2fff8d84 <plat_disable_acp>
2fff8fdc:	e8bd5000 	pop	{ip, lr}
2fff8fe0:	eaffffdb 	b	2fff8f54 <cortex_a7_disable_smp>
2fff8fe4:	2fffc602 	.word	0x2fffc602

2fff8fe8 <cortex_a7_errata_report>:
2fff8fe8:	e12fff1e 	bx	lr

2fff8fec <plat_report_exception>:
2fff8fec:	e1a0800e 	mov	r8, lr
2fff8ff0:	e3500017 	cmp	r0, #23
2fff8ff4:	1a000002 	bne	2fff9004 <undef_inst_lbl>
2fff8ff8:	e59f404c 	ldr	r4, [pc, #76]	; 2fff904c <print_excpetion_info+0x18>
2fff8ffc:	ebfffecc 	bl	2fff8b34 <asm_print_str>
2fff9000:	ea00000b 	b	2fff9034 <print_excpetion_info>

2fff9004 <undef_inst_lbl>:
2fff9004:	e350001b 	cmp	r0, #27
2fff9008:	1a000002 	bne	2fff9018 <other_excpetion_lbl>
2fff900c:	e59f403c 	ldr	r4, [pc, #60]	; 2fff9050 <print_excpetion_info+0x1c>
2fff9010:	ebfffec7 	bl	2fff8b34 <asm_print_str>
2fff9014:	ea000006 	b	2fff9034 <print_excpetion_info>

2fff9018 <other_excpetion_lbl>:
2fff9018:	e1a09000 	mov	r9, r0
2fff901c:	e59f4030 	ldr	r4, [pc, #48]	; 2fff9054 <print_excpetion_info+0x20>
2fff9020:	ebfffec3 	bl	2fff8b34 <asm_print_str>
2fff9024:	e1a04009 	mov	r4, r9
2fff9028:	ebfffec8 	bl	2fff8b50 <asm_print_hex>
2fff902c:	e59f4024 	ldr	r4, [pc, #36]	; 2fff9058 <print_excpetion_info+0x24>
2fff9030:	ebfffebf 	bl	2fff8b34 <asm_print_str>

2fff9034 <print_excpetion_info>:
2fff9034:	e1024300 	mrs	r4, LR_svc
2fff9038:	e2444004 	sub	r4, r4, #4
2fff903c:	ebfffec3 	bl	2fff8b50 <asm_print_hex>
2fff9040:	e59f4014 	ldr	r4, [pc, #20]	; 2fff905c <print_excpetion_info+0x28>
2fff9044:	ebfffeba 	bl	2fff8b34 <asm_print_str>
2fff9048:	e12fff18 	bx	r8
2fff904c:	2fffc61f 	.word	0x2fffc61f
2fff9050:	2fffc657 	.word	0x2fffc657
2fff9054:	2fffc675 	.word	0x2fffc675
2fff9058:	2fffc688 	.word	0x2fffc688
2fff905c:	2fffc6bc 	.word	0x2fffc6bc

2fff9060 <plat_report_undef_inst>:
2fff9060:	e1a0800e 	mov	r8, lr
2fff9064:	e1a09000 	mov	r9, r0
2fff9068:	e59f4018 	ldr	r4, [pc, #24]	; 2fff9088 <plat_report_undef_inst+0x28>
2fff906c:	ebfffeb0 	bl	2fff8b34 <asm_print_str>
2fff9070:	e1a04009 	mov	r4, r9
2fff9074:	e2444004 	sub	r4, r4, #4
2fff9078:	ebfffeb4 	bl	2fff8b50 <asm_print_hex>
2fff907c:	e59f4008 	ldr	r4, [pc, #8]	; 2fff908c <plat_report_undef_inst+0x2c>
2fff9080:	ebfffeab 	bl	2fff8b34 <asm_print_str>
2fff9084:	e12fff18 	bx	r8
2fff9088:	2fffc657 	.word	0x2fffc657
2fff908c:	2fffc6bc 	.word	0x2fffc6bc

2fff9090 <plat_report_prefetch_abort>:
2fff9090:	e1a0800e 	mov	r8, lr
2fff9094:	e1a09000 	mov	r9, r0
2fff9098:	e59f4038 	ldr	r4, [pc, #56]	; 2fff90d8 <plat_report_prefetch_abort+0x48>
2fff909c:	ebfffea4 	bl	2fff8b34 <asm_print_str>
2fff90a0:	e1a04009 	mov	r4, r9
2fff90a4:	e2444004 	sub	r4, r4, #4
2fff90a8:	ebfffea8 	bl	2fff8b50 <asm_print_hex>
2fff90ac:	e59f4028 	ldr	r4, [pc, #40]	; 2fff90dc <plat_report_prefetch_abort+0x4c>
2fff90b0:	ebfffe9f 	bl	2fff8b34 <asm_print_str>
2fff90b4:	ee154f30 	mrc	15, 0, r4, cr5, cr0, {1}
2fff90b8:	ebfffea4 	bl	2fff8b50 <asm_print_hex>
2fff90bc:	e59f401c 	ldr	r4, [pc, #28]	; 2fff90e0 <plat_report_prefetch_abort+0x50>
2fff90c0:	ebfffe9b 	bl	2fff8b34 <asm_print_str>
2fff90c4:	ee164f50 	mrc	15, 0, r4, cr6, cr0, {2}
2fff90c8:	ebfffea0 	bl	2fff8b50 <asm_print_hex>
2fff90cc:	e59f4010 	ldr	r4, [pc, #16]	; 2fff90e4 <plat_report_prefetch_abort+0x54>
2fff90d0:	ebfffe97 	bl	2fff8b34 <asm_print_str>
2fff90d4:	e12fff18 	bx	r8
2fff90d8:	2fffc62d 	.word	0x2fffc62d
2fff90dc:	2fffc6a6 	.word	0x2fffc6a6
2fff90e0:	2fffc6b1 	.word	0x2fffc6b1
2fff90e4:	2fffc6bc 	.word	0x2fffc6bc

2fff90e8 <plat_report_data_abort>:
2fff90e8:	e1a0800e 	mov	r8, lr
2fff90ec:	e1a09000 	mov	r9, r0
2fff90f0:	e59f4038 	ldr	r4, [pc, #56]	; 2fff9130 <plat_report_data_abort+0x48>
2fff90f4:	ebfffe8e 	bl	2fff8b34 <asm_print_str>
2fff90f8:	e1a04009 	mov	r4, r9
2fff90fc:	e2444008 	sub	r4, r4, #8
2fff9100:	ebfffe92 	bl	2fff8b50 <asm_print_hex>
2fff9104:	e59f4028 	ldr	r4, [pc, #40]	; 2fff9134 <plat_report_data_abort+0x4c>
2fff9108:	ebfffe89 	bl	2fff8b34 <asm_print_str>
2fff910c:	ee154f10 	mrc	15, 0, r4, cr5, cr0, {0}
2fff9110:	ebfffe8e 	bl	2fff8b50 <asm_print_hex>
2fff9114:	e59f401c 	ldr	r4, [pc, #28]	; 2fff9138 <plat_report_data_abort+0x50>
2fff9118:	ebfffe85 	bl	2fff8b34 <asm_print_str>
2fff911c:	ee164f10 	mrc	15, 0, r4, cr6, cr0, {0}
2fff9120:	ebfffe8a 	bl	2fff8b50 <asm_print_hex>
2fff9124:	e59f4010 	ldr	r4, [pc, #16]	; 2fff913c <plat_report_data_abort+0x54>
2fff9128:	ebfffe81 	bl	2fff8b34 <asm_print_str>
2fff912c:	e12fff18 	bx	r8
2fff9130:	2fffc644 	.word	0x2fffc644
2fff9134:	2fffc690 	.word	0x2fffc690
2fff9138:	2fffc69b 	.word	0x2fffc69b
2fff913c:	2fffc6bc 	.word	0x2fffc6bc

2fff9140 <plat_reset_handler>:
2fff9140:	e12fff1e 	bx	lr

2fff9144 <plat_stm32mp1_get_core_pos>:
2fff9144:	e20010ff 	and	r1, r0, #255	; 0xff
2fff9148:	e2000cff 	and	r0, r0, #65280	; 0xff00
2fff914c:	e0810320 	add	r0, r1, r0, lsr #6
2fff9150:	e12fff1e 	bx	lr

2fff9154 <plat_my_core_pos>:
2fff9154:	ee100fb0 	mrc	15, 0, r0, cr0, cr0, {5}
2fff9158:	eafffff9 	b	2fff9144 <plat_stm32mp1_get_core_pos>

2fff915c <plat_crash_console_init>:
2fff915c:	e59f1088 	ldr	r1, [pc, #136]	; 2fff91ec <plat_crash_console_init+0x90>
2fff9160:	e5912000 	ldr	r2, [r1]
2fff9164:	e3822040 	orr	r2, r2, #64	; 0x40
2fff9168:	e5812000 	str	r2, [r1]
2fff916c:	e59f107c 	ldr	r1, [pc, #124]	; 2fff91f0 <plat_crash_console_init+0x94>
2fff9170:	e5912000 	ldr	r2, [r1]
2fff9174:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2fff9178:	e3822502 	orr	r2, r2, #8388608	; 0x800000
2fff917c:	e5812000 	str	r2, [r1]
2fff9180:	e5912008 	ldr	r2, [r1, #8]
2fff9184:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2fff9188:	e5812008 	str	r2, [r1, #8]
2fff918c:	e591200c 	ldr	r2, [r1, #12]
2fff9190:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2fff9194:	e581200c 	str	r2, [r1, #12]
2fff9198:	e3a0200b 	mov	r2, #11
2fff919c:	e3520008 	cmp	r2, #8
2fff91a0:	a5912024 	ldrge	r2, [r1, #36]	; 0x24
2fff91a4:	a3c22a0f 	bicge	r2, r2, #61440	; 0xf000
2fff91a8:	a3822a06 	orrge	r2, r2, #24576	; 0x6000
2fff91ac:	a5812024 	strge	r2, [r1, #36]	; 0x24
2fff91b0:	b5912020 	ldrlt	r2, [r1, #32]
2fff91b4:	b3c22000 	biclt	r2, r2, #0
2fff91b8:	b3822000 	orrlt	r2, r2, #0
2fff91bc:	b5812020 	strlt	r2, [r1, #32]
2fff91c0:	e59f102c 	ldr	r1, [pc, #44]	; 2fff91f4 <plat_crash_console_init+0x98>
2fff91c4:	e3a02002 	mov	r2, #2
2fff91c8:	e5812000 	str	r2, [r1]
2fff91cc:	e59f1024 	ldr	r1, [pc, #36]	; 2fff91f8 <plat_crash_console_init+0x9c>
2fff91d0:	e5912000 	ldr	r2, [r1]
2fff91d4:	e3822801 	orr	r2, r2, #65536	; 0x10000
2fff91d8:	e5812000 	str	r2, [r1]
2fff91dc:	e59f0018 	ldr	r0, [pc, #24]	; 2fff91fc <plat_crash_console_init+0xa0>
2fff91e0:	e59f1018 	ldr	r1, [pc, #24]	; 2fff9200 <plat_crash_console_init+0xa4>
2fff91e4:	e59f2018 	ldr	r2, [pc, #24]	; 2fff9204 <plat_crash_console_init+0xa8>
2fff91e8:	eafffeef 	b	2fff8dac <console_stm32_core_init>
2fff91ec:	50000a28 	.word	0x50000a28
2fff91f0:	50008000 	.word	0x50008000
2fff91f4:	500008e8 	.word	0x500008e8
2fff91f8:	50000a00 	.word	0x50000a00
2fff91fc:	40010000 	.word	0x40010000
2fff9200:	03d09000 	.word	0x03d09000
2fff9204:	0001c200 	.word	0x0001c200

2fff9208 <plat_crash_console_flush>:
2fff9208:	e51f1000 	ldr	r1, [pc, #-0]	; 2fff9210 <plat_crash_console_flush+0x8>
2fff920c:	eaffff1c 	b	2fff8e84 <console_stm32_core_flush>
2fff9210:	40010000 	.word	0x40010000

2fff9214 <plat_crash_console_putc>:
2fff9214:	e51f1000 	ldr	r1, [pc, #-0]	; 2fff921c <plat_crash_console_putc+0x8>
2fff9218:	eafffeff 	b	2fff8e1c <console_stm32_core_putc>
2fff921c:	40010000 	.word	0x40010000

2fff9220 <plat_panic_handler>:
2fff9220:	e10f0000 	mrs	r0, CPSR
2fff9224:	e200001f 	and	r0, r0, #31
2fff9228:	ebffff6f 	bl	2fff8fec <plat_report_exception>
2fff922c:	e1a0e006 	mov	lr, r6
2fff9230:	eafffffe 	b	2fff9230 <plat_panic_handler+0x10>

2fff9234 <wfi_svc_int_enable>:
2fff9234:	e92d4110 	push	{r4, r8, lr}
2fff9238:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2fff923c:	e1a0800d 	mov	r8, sp
2fff9240:	e1a0d000 	mov	sp, r0
2fff9244:	e2800c01 	add	r0, r0, #256	; 0x100
2fff9248:	e58d007c 	str	r0, [sp, #124]	; 0x7c
2fff924c:	e58d4084 	str	r4, [sp, #132]	; 0x84
2fff9250:	f1020013 	cps	#19
2fff9254:	f1080140 	cpsie	af
2fff9258:	f57ff04f 	dsb	sy
2fff925c:	f57ff06f 	isb	sy
2fff9260:	e320f003 	wfi
2fff9264:	f10c0140 	cpsid	af
2fff9268:	f1020016 	cps	#22
2fff926c:	e1a0d008 	mov	sp, r8
2fff9270:	e8bd4110 	pop	{r4, r8, lr}
2fff9274:	e12fff1e 	bx	lr

2fff9278 <fdt32_to_cpu>:
2fff9278:	ba00      	rev	r0, r0
2fff927a:	4770      	bx	lr

2fff927c <fdt_check_header>:
2fff927c:	b508      	push	{r3, lr}
2fff927e:	4603      	mov	r3, r0
2fff9280:	6800      	ldr	r0, [r0, #0]
2fff9282:	f7ff fff9 	bl	2fff9278 <fdt32_to_cpu>
2fff9286:	4a11      	ldr	r2, [pc, #68]	; (2fff92cc <fdt_check_header+0x50>)
2fff9288:	4290      	cmp	r0, r2
2fff928a:	d10d      	bne.n	2fff92a8 <fdt_check_header+0x2c>
2fff928c:	6958      	ldr	r0, [r3, #20]
2fff928e:	f7ff fff3 	bl	2fff9278 <fdt32_to_cpu>
2fff9292:	2801      	cmp	r0, #1
2fff9294:	d914      	bls.n	2fff92c0 <fdt_check_header+0x44>
2fff9296:	6998      	ldr	r0, [r3, #24]
2fff9298:	f7ff ffee 	bl	2fff9278 <fdt32_to_cpu>
2fff929c:	2811      	cmp	r0, #17
2fff929e:	bf94      	ite	ls
2fff92a0:	2000      	movls	r0, #0
2fff92a2:	f06f 0009 	mvnhi.w	r0, #9
2fff92a6:	bd08      	pop	{r3, pc}
2fff92a8:	4a09      	ldr	r2, [pc, #36]	; (2fff92d0 <fdt_check_header+0x54>)
2fff92aa:	4290      	cmp	r0, r2
2fff92ac:	d10b      	bne.n	2fff92c6 <fdt_check_header+0x4a>
2fff92ae:	6a58      	ldr	r0, [r3, #36]	; 0x24
2fff92b0:	f7ff ffe2 	bl	2fff9278 <fdt32_to_cpu>
2fff92b4:	2800      	cmp	r0, #0
2fff92b6:	bf14      	ite	ne
2fff92b8:	2000      	movne	r0, #0
2fff92ba:	f06f 0006 	mvneq.w	r0, #6
2fff92be:	e7f2      	b.n	2fff92a6 <fdt_check_header+0x2a>
2fff92c0:	f06f 0009 	mvn.w	r0, #9
2fff92c4:	e7ef      	b.n	2fff92a6 <fdt_check_header+0x2a>
2fff92c6:	f06f 0008 	mvn.w	r0, #8
2fff92ca:	e7ec      	b.n	2fff92a6 <fdt_check_header+0x2a>
2fff92cc:	d00dfeed 	.word	0xd00dfeed
2fff92d0:	2ff20112 	.word	0x2ff20112

2fff92d4 <fdt_offset_ptr>:
2fff92d4:	b538      	push	{r3, r4, r5, lr}
2fff92d6:	4603      	mov	r3, r0
2fff92d8:	6880      	ldr	r0, [r0, #8]
2fff92da:	f7ff ffcd 	bl	2fff9278 <fdt32_to_cpu>
2fff92de:	1844      	adds	r4, r0, r1
2fff92e0:	d201      	bcs.n	2fff92e6 <fdt_offset_ptr+0x12>
2fff92e2:	18a5      	adds	r5, r4, r2
2fff92e4:	d301      	bcc.n	2fff92ea <fdt_offset_ptr+0x16>
2fff92e6:	2000      	movs	r0, #0
2fff92e8:	e011      	b.n	2fff930e <fdt_offset_ptr+0x3a>
2fff92ea:	6858      	ldr	r0, [r3, #4]
2fff92ec:	f7ff ffc4 	bl	2fff9278 <fdt32_to_cpu>
2fff92f0:	4285      	cmp	r5, r0
2fff92f2:	d8f8      	bhi.n	2fff92e6 <fdt_offset_ptr+0x12>
2fff92f4:	6958      	ldr	r0, [r3, #20]
2fff92f6:	f7ff ffbf 	bl	2fff9278 <fdt32_to_cpu>
2fff92fa:	2810      	cmp	r0, #16
2fff92fc:	d906      	bls.n	2fff930c <fdt_offset_ptr+0x38>
2fff92fe:	1889      	adds	r1, r1, r2
2fff9300:	d2f1      	bcs.n	2fff92e6 <fdt_offset_ptr+0x12>
2fff9302:	6a58      	ldr	r0, [r3, #36]	; 0x24
2fff9304:	f7ff ffb8 	bl	2fff9278 <fdt32_to_cpu>
2fff9308:	4281      	cmp	r1, r0
2fff930a:	d8ec      	bhi.n	2fff92e6 <fdt_offset_ptr+0x12>
2fff930c:	1918      	adds	r0, r3, r4
2fff930e:	bd38      	pop	{r3, r4, r5, pc}

2fff9310 <fdt_next_tag>:
2fff9310:	f06f 0307 	mvn.w	r3, #7
2fff9314:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff9318:	4690      	mov	r8, r2
2fff931a:	6013      	str	r3, [r2, #0]
2fff931c:	2204      	movs	r2, #4
2fff931e:	4606      	mov	r6, r0
2fff9320:	460f      	mov	r7, r1
2fff9322:	f7ff ffd7 	bl	2fff92d4 <fdt_offset_ptr>
2fff9326:	b908      	cbnz	r0, 2fff932c <fdt_next_tag+0x1c>
2fff9328:	2509      	movs	r5, #9
2fff932a:	e038      	b.n	2fff939e <fdt_next_tag+0x8e>
2fff932c:	6800      	ldr	r0, [r0, #0]
2fff932e:	1d3c      	adds	r4, r7, #4
2fff9330:	f7ff ffa2 	bl	2fff9278 <fdt32_to_cpu>
2fff9334:	f06f 030a 	mvn.w	r3, #10
2fff9338:	4605      	mov	r5, r0
2fff933a:	f8c8 3000 	str.w	r3, [r8]
2fff933e:	1e43      	subs	r3, r0, #1
2fff9340:	2b08      	cmp	r3, #8
2fff9342:	d8f1      	bhi.n	2fff9328 <fdt_next_tag+0x18>
2fff9344:	a201      	add	r2, pc, #4	; (adr r2, 2fff934c <fdt_next_tag+0x3c>)
2fff9346:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
2fff934a:	bf00      	nop
2fff934c:	2fff9371 	.word	0x2fff9371
2fff9350:	2fff9387 	.word	0x2fff9387
2fff9354:	2fff93a5 	.word	0x2fff93a5
2fff9358:	2fff9387 	.word	0x2fff9387
2fff935c:	2fff9329 	.word	0x2fff9329
2fff9360:	2fff9329 	.word	0x2fff9329
2fff9364:	2fff9329 	.word	0x2fff9329
2fff9368:	2fff9329 	.word	0x2fff9329
2fff936c:	2fff9387 	.word	0x2fff9387
2fff9370:	4621      	mov	r1, r4
2fff9372:	2201      	movs	r2, #1
2fff9374:	4414      	add	r4, r2
2fff9376:	4630      	mov	r0, r6
2fff9378:	f7ff ffac 	bl	2fff92d4 <fdt_offset_ptr>
2fff937c:	2800      	cmp	r0, #0
2fff937e:	d0d3      	beq.n	2fff9328 <fdt_next_tag+0x18>
2fff9380:	7803      	ldrb	r3, [r0, #0]
2fff9382:	2b00      	cmp	r3, #0
2fff9384:	d1f4      	bne.n	2fff9370 <fdt_next_tag+0x60>
2fff9386:	1be2      	subs	r2, r4, r7
2fff9388:	4639      	mov	r1, r7
2fff938a:	4630      	mov	r0, r6
2fff938c:	f7ff ffa2 	bl	2fff92d4 <fdt_offset_ptr>
2fff9390:	2800      	cmp	r0, #0
2fff9392:	d0c9      	beq.n	2fff9328 <fdt_next_tag+0x18>
2fff9394:	3403      	adds	r4, #3
2fff9396:	f024 0403 	bic.w	r4, r4, #3
2fff939a:	f8c8 4000 	str.w	r4, [r8]
2fff939e:	4628      	mov	r0, r5
2fff93a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff93a4:	2204      	movs	r2, #4
2fff93a6:	4621      	mov	r1, r4
2fff93a8:	4630      	mov	r0, r6
2fff93aa:	f7ff ff93 	bl	2fff92d4 <fdt_offset_ptr>
2fff93ae:	2800      	cmp	r0, #0
2fff93b0:	d0ba      	beq.n	2fff9328 <fdt_next_tag+0x18>
2fff93b2:	6800      	ldr	r0, [r0, #0]
2fff93b4:	f7ff ff60 	bl	2fff9278 <fdt32_to_cpu>
2fff93b8:	f107 020c 	add.w	r2, r7, #12
2fff93bc:	4603      	mov	r3, r0
2fff93be:	1884      	adds	r4, r0, r2
2fff93c0:	6970      	ldr	r0, [r6, #20]
2fff93c2:	f7ff ff59 	bl	2fff9278 <fdt32_to_cpu>
2fff93c6:	280f      	cmp	r0, #15
2fff93c8:	d8dd      	bhi.n	2fff9386 <fdt_next_tag+0x76>
2fff93ca:	2b07      	cmp	r3, #7
2fff93cc:	d9db      	bls.n	2fff9386 <fdt_next_tag+0x76>
2fff93ce:	0753      	lsls	r3, r2, #29
2fff93d0:	bf18      	it	ne
2fff93d2:	3404      	addne	r4, #4
2fff93d4:	e7d7      	b.n	2fff9386 <fdt_next_tag+0x76>
2fff93d6:	bf00      	nop

2fff93d8 <fdt_check_node_offset_>:
2fff93d8:	1e0b      	subs	r3, r1, #0
2fff93da:	b507      	push	{r0, r1, r2, lr}
2fff93dc:	9101      	str	r1, [sp, #4]
2fff93de:	da04      	bge.n	2fff93ea <fdt_check_node_offset_+0x12>
2fff93e0:	f06f 0003 	mvn.w	r0, #3
2fff93e4:	b003      	add	sp, #12
2fff93e6:	f85d fb04 	ldr.w	pc, [sp], #4
2fff93ea:	079b      	lsls	r3, r3, #30
2fff93ec:	d1f8      	bne.n	2fff93e0 <fdt_check_node_offset_+0x8>
2fff93ee:	aa01      	add	r2, sp, #4
2fff93f0:	f7ff ff8e 	bl	2fff9310 <fdt_next_tag>
2fff93f4:	2801      	cmp	r0, #1
2fff93f6:	d1f3      	bne.n	2fff93e0 <fdt_check_node_offset_+0x8>
2fff93f8:	9801      	ldr	r0, [sp, #4]
2fff93fa:	e7f3      	b.n	2fff93e4 <fdt_check_node_offset_+0xc>

2fff93fc <fdt_check_prop_offset_>:
2fff93fc:	1e0b      	subs	r3, r1, #0
2fff93fe:	b507      	push	{r0, r1, r2, lr}
2fff9400:	9101      	str	r1, [sp, #4]
2fff9402:	da04      	bge.n	2fff940e <fdt_check_prop_offset_+0x12>
2fff9404:	f06f 0003 	mvn.w	r0, #3
2fff9408:	b003      	add	sp, #12
2fff940a:	f85d fb04 	ldr.w	pc, [sp], #4
2fff940e:	079b      	lsls	r3, r3, #30
2fff9410:	d1f8      	bne.n	2fff9404 <fdt_check_prop_offset_+0x8>
2fff9412:	aa01      	add	r2, sp, #4
2fff9414:	f7ff ff7c 	bl	2fff9310 <fdt_next_tag>
2fff9418:	2803      	cmp	r0, #3
2fff941a:	d1f3      	bne.n	2fff9404 <fdt_check_prop_offset_+0x8>
2fff941c:	9801      	ldr	r0, [sp, #4]
2fff941e:	e7f3      	b.n	2fff9408 <fdt_check_prop_offset_+0xc>

2fff9420 <fdt_next_node>:
2fff9420:	2300      	movs	r3, #0
2fff9422:	4299      	cmp	r1, r3
2fff9424:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff9426:	4606      	mov	r6, r0
2fff9428:	9301      	str	r3, [sp, #4]
2fff942a:	4615      	mov	r5, r2
2fff942c:	db05      	blt.n	2fff943a <fdt_next_node+0x1a>
2fff942e:	f7ff ffd3 	bl	2fff93d8 <fdt_check_node_offset_>
2fff9432:	9001      	str	r0, [sp, #4]
2fff9434:	2800      	cmp	r0, #0
2fff9436:	4604      	mov	r4, r0
2fff9438:	db0f      	blt.n	2fff945a <fdt_next_node+0x3a>
2fff943a:	9c01      	ldr	r4, [sp, #4]
2fff943c:	aa01      	add	r2, sp, #4
2fff943e:	4630      	mov	r0, r6
2fff9440:	4621      	mov	r1, r4
2fff9442:	f7ff ff65 	bl	2fff9310 <fdt_next_tag>
2fff9446:	2802      	cmp	r0, #2
2fff9448:	d00a      	beq.n	2fff9460 <fdt_next_node+0x40>
2fff944a:	2809      	cmp	r0, #9
2fff944c:	d011      	beq.n	2fff9472 <fdt_next_node+0x52>
2fff944e:	2801      	cmp	r0, #1
2fff9450:	d1f3      	bne.n	2fff943a <fdt_next_node+0x1a>
2fff9452:	b115      	cbz	r5, 2fff945a <fdt_next_node+0x3a>
2fff9454:	682b      	ldr	r3, [r5, #0]
2fff9456:	3301      	adds	r3, #1
2fff9458:	602b      	str	r3, [r5, #0]
2fff945a:	4620      	mov	r0, r4
2fff945c:	b002      	add	sp, #8
2fff945e:	bd70      	pop	{r4, r5, r6, pc}
2fff9460:	2d00      	cmp	r5, #0
2fff9462:	d0ea      	beq.n	2fff943a <fdt_next_node+0x1a>
2fff9464:	682b      	ldr	r3, [r5, #0]
2fff9466:	3b01      	subs	r3, #1
2fff9468:	602b      	str	r3, [r5, #0]
2fff946a:	2b00      	cmp	r3, #0
2fff946c:	dae5      	bge.n	2fff943a <fdt_next_node+0x1a>
2fff946e:	9c01      	ldr	r4, [sp, #4]
2fff9470:	e7f3      	b.n	2fff945a <fdt_next_node+0x3a>
2fff9472:	9c01      	ldr	r4, [sp, #4]
2fff9474:	2c00      	cmp	r4, #0
2fff9476:	da07      	bge.n	2fff9488 <fdt_next_node+0x68>
2fff9478:	f114 0f08 	cmn.w	r4, #8
2fff947c:	d1ed      	bne.n	2fff945a <fdt_next_node+0x3a>
2fff947e:	2d00      	cmp	r5, #0
2fff9480:	bf08      	it	eq
2fff9482:	f04f 34ff 	moveq.w	r4, #4294967295	; 0xffffffff
2fff9486:	e7e8      	b.n	2fff945a <fdt_next_node+0x3a>
2fff9488:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff948c:	e7e5      	b.n	2fff945a <fdt_next_node+0x3a>

2fff948e <fdt_first_subnode>:
2fff948e:	b507      	push	{r0, r1, r2, lr}
2fff9490:	2300      	movs	r3, #0
2fff9492:	9301      	str	r3, [sp, #4]
2fff9494:	aa01      	add	r2, sp, #4
2fff9496:	f7ff ffc3 	bl	2fff9420 <fdt_next_node>
2fff949a:	2800      	cmp	r0, #0
2fff949c:	db07      	blt.n	2fff94ae <fdt_first_subnode+0x20>
2fff949e:	9b01      	ldr	r3, [sp, #4]
2fff94a0:	2b01      	cmp	r3, #1
2fff94a2:	bf18      	it	ne
2fff94a4:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
2fff94a8:	b003      	add	sp, #12
2fff94aa:	f85d fb04 	ldr.w	pc, [sp], #4
2fff94ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff94b2:	e7f9      	b.n	2fff94a8 <fdt_first_subnode+0x1a>

2fff94b4 <fdt_next_subnode>:
2fff94b4:	b513      	push	{r0, r1, r4, lr}
2fff94b6:	4604      	mov	r4, r0
2fff94b8:	2301      	movs	r3, #1
2fff94ba:	9301      	str	r3, [sp, #4]
2fff94bc:	aa01      	add	r2, sp, #4
2fff94be:	4620      	mov	r0, r4
2fff94c0:	f7ff ffae 	bl	2fff9420 <fdt_next_node>
2fff94c4:	1e01      	subs	r1, r0, #0
2fff94c6:	db07      	blt.n	2fff94d8 <fdt_next_subnode+0x24>
2fff94c8:	9b01      	ldr	r3, [sp, #4]
2fff94ca:	2b00      	cmp	r3, #0
2fff94cc:	dd04      	ble.n	2fff94d8 <fdt_next_subnode+0x24>
2fff94ce:	2b01      	cmp	r3, #1
2fff94d0:	d1f4      	bne.n	2fff94bc <fdt_next_subnode+0x8>
2fff94d2:	4608      	mov	r0, r1
2fff94d4:	b002      	add	sp, #8
2fff94d6:	bd10      	pop	{r4, pc}
2fff94d8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff94dc:	e7f9      	b.n	2fff94d2 <fdt_next_subnode+0x1e>
	...

2fff94e0 <fdt_address_cells>:
2fff94e0:	b507      	push	{r0, r1, r2, lr}
2fff94e2:	ab01      	add	r3, sp, #4
2fff94e4:	4a0f      	ldr	r2, [pc, #60]	; (2fff9524 <fdt_address_cells+0x44>)
2fff94e6:	f000 f94e 	bl	2fff9786 <fdt_getprop>
2fff94ea:	b1b0      	cbz	r0, 2fff951a <fdt_address_cells+0x3a>
2fff94ec:	9b01      	ldr	r3, [sp, #4]
2fff94ee:	2b04      	cmp	r3, #4
2fff94f0:	d115      	bne.n	2fff951e <fdt_address_cells+0x3e>
2fff94f2:	6803      	ldr	r3, [r0, #0]
2fff94f4:	0e18      	lsrs	r0, r3, #24
2fff94f6:	f3c3 2207 	ubfx	r2, r3, #8, #8
2fff94fa:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
2fff94fe:	f3c3 4307 	ubfx	r3, r3, #16, #8
2fff9502:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
2fff9506:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
2fff950a:	1e43      	subs	r3, r0, #1
2fff950c:	2b04      	cmp	r3, #4
2fff950e:	bf28      	it	cs
2fff9510:	f06f 000d 	mvncs.w	r0, #13
2fff9514:	b003      	add	sp, #12
2fff9516:	f85d fb04 	ldr.w	pc, [sp], #4
2fff951a:	2002      	movs	r0, #2
2fff951c:	e7fa      	b.n	2fff9514 <fdt_address_cells+0x34>
2fff951e:	f06f 000d 	mvn.w	r0, #13
2fff9522:	e7f7      	b.n	2fff9514 <fdt_address_cells+0x34>
2fff9524:	2fffc6bf 	.word	0x2fffc6bf

2fff9528 <fdt32_to_cpu>:
2fff9528:	ba00      	rev	r0, r0
2fff952a:	4770      	bx	lr

2fff952c <nextprop_>:
2fff952c:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff952e:	4605      	mov	r5, r0
2fff9530:	460c      	mov	r4, r1
2fff9532:	aa01      	add	r2, sp, #4
2fff9534:	4621      	mov	r1, r4
2fff9536:	4628      	mov	r0, r5
2fff9538:	f7ff feea 	bl	2fff9310 <fdt_next_tag>
2fff953c:	2803      	cmp	r0, #3
2fff953e:	d006      	beq.n	2fff954e <nextprop_+0x22>
2fff9540:	9c01      	ldr	r4, [sp, #4]
2fff9542:	2809      	cmp	r0, #9
2fff9544:	d106      	bne.n	2fff9554 <nextprop_+0x28>
2fff9546:	2c00      	cmp	r4, #0
2fff9548:	bfa8      	it	ge
2fff954a:	f06f 040a 	mvnge.w	r4, #10
2fff954e:	4620      	mov	r0, r4
2fff9550:	b003      	add	sp, #12
2fff9552:	bd30      	pop	{r4, r5, pc}
2fff9554:	2804      	cmp	r0, #4
2fff9556:	d0ec      	beq.n	2fff9532 <nextprop_+0x6>
2fff9558:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff955c:	e7f7      	b.n	2fff954e <nextprop_+0x22>

2fff955e <fdt_get_property_by_offset_>:
2fff955e:	b570      	push	{r4, r5, r6, lr}
2fff9560:	4604      	mov	r4, r0
2fff9562:	460e      	mov	r6, r1
2fff9564:	4615      	mov	r5, r2
2fff9566:	f7ff ff49 	bl	2fff93fc <fdt_check_prop_offset_>
2fff956a:	2800      	cmp	r0, #0
2fff956c:	da04      	bge.n	2fff9578 <fdt_get_property_by_offset_+0x1a>
2fff956e:	b17d      	cbz	r5, 2fff9590 <fdt_get_property_by_offset_+0x32>
2fff9570:	6028      	str	r0, [r5, #0]
2fff9572:	2100      	movs	r1, #0
2fff9574:	4608      	mov	r0, r1
2fff9576:	bd70      	pop	{r4, r5, r6, pc}
2fff9578:	68a0      	ldr	r0, [r4, #8]
2fff957a:	f7ff ffd5 	bl	2fff9528 <fdt32_to_cpu>
2fff957e:	1831      	adds	r1, r6, r0
2fff9580:	4421      	add	r1, r4
2fff9582:	2d00      	cmp	r5, #0
2fff9584:	d0f6      	beq.n	2fff9574 <fdt_get_property_by_offset_+0x16>
2fff9586:	6848      	ldr	r0, [r1, #4]
2fff9588:	f7ff ffce 	bl	2fff9528 <fdt32_to_cpu>
2fff958c:	6028      	str	r0, [r5, #0]
2fff958e:	e7f1      	b.n	2fff9574 <fdt_get_property_by_offset_+0x16>
2fff9590:	4629      	mov	r1, r5
2fff9592:	e7ef      	b.n	2fff9574 <fdt_get_property_by_offset_+0x16>

2fff9594 <fdt_string>:
2fff9594:	b508      	push	{r3, lr}
2fff9596:	4603      	mov	r3, r0
2fff9598:	68c0      	ldr	r0, [r0, #12]
2fff959a:	f7ff ffc5 	bl	2fff9528 <fdt32_to_cpu>
2fff959e:	4408      	add	r0, r1
2fff95a0:	4418      	add	r0, r3
2fff95a2:	bd08      	pop	{r3, pc}

2fff95a4 <fdt_get_name>:
2fff95a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff95a6:	4606      	mov	r6, r0
2fff95a8:	6887      	ldr	r7, [r0, #8]
2fff95aa:	460c      	mov	r4, r1
2fff95ac:	4615      	mov	r5, r2
2fff95ae:	f7ff fe65 	bl	2fff927c <fdt_check_header>
2fff95b2:	bb00      	cbnz	r0, 2fff95f6 <fdt_get_name+0x52>
2fff95b4:	4621      	mov	r1, r4
2fff95b6:	4630      	mov	r0, r6
2fff95b8:	f7ff ff0e 	bl	2fff93d8 <fdt_check_node_offset_>
2fff95bc:	2800      	cmp	r0, #0
2fff95be:	db1a      	blt.n	2fff95f6 <fdt_get_name+0x52>
2fff95c0:	4638      	mov	r0, r7
2fff95c2:	f7ff ffb1 	bl	2fff9528 <fdt32_to_cpu>
2fff95c6:	4404      	add	r4, r0
2fff95c8:	6970      	ldr	r0, [r6, #20]
2fff95ca:	4434      	add	r4, r6
2fff95cc:	f7ff ffac 	bl	2fff9528 <fdt32_to_cpu>
2fff95d0:	280f      	cmp	r0, #15
2fff95d2:	f104 0404 	add.w	r4, r4, #4
2fff95d6:	d805      	bhi.n	2fff95e4 <fdt_get_name+0x40>
2fff95d8:	212f      	movs	r1, #47	; 0x2f
2fff95da:	4620      	mov	r0, r4
2fff95dc:	f000 fc43 	bl	2fff9e66 <strrchr>
2fff95e0:	b138      	cbz	r0, 2fff95f2 <fdt_get_name+0x4e>
2fff95e2:	1c44      	adds	r4, r0, #1
2fff95e4:	b11d      	cbz	r5, 2fff95ee <fdt_get_name+0x4a>
2fff95e6:	4620      	mov	r0, r4
2fff95e8:	f000 fc17 	bl	2fff9e1a <strlen>
2fff95ec:	6028      	str	r0, [r5, #0]
2fff95ee:	4620      	mov	r0, r4
2fff95f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff95f2:	f06f 000a 	mvn.w	r0, #10
2fff95f6:	b115      	cbz	r5, 2fff95fe <fdt_get_name+0x5a>
2fff95f8:	6028      	str	r0, [r5, #0]
2fff95fa:	2400      	movs	r4, #0
2fff95fc:	e7f7      	b.n	2fff95ee <fdt_get_name+0x4a>
2fff95fe:	462c      	mov	r4, r5
2fff9600:	e7f5      	b.n	2fff95ee <fdt_get_name+0x4a>

2fff9602 <fdt_subnode_offset_namelen>:
2fff9602:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff9606:	4607      	mov	r7, r0
2fff9608:	460e      	mov	r6, r1
2fff960a:	4690      	mov	r8, r2
2fff960c:	461d      	mov	r5, r3
2fff960e:	f7ff fe35 	bl	2fff927c <fdt_check_header>
2fff9612:	4604      	mov	r4, r0
2fff9614:	b940      	cbnz	r0, 2fff9628 <fdt_subnode_offset_namelen+0x26>
2fff9616:	9000      	str	r0, [sp, #0]
2fff9618:	4634      	mov	r4, r6
2fff961a:	9b00      	ldr	r3, [sp, #0]
2fff961c:	2c00      	cmp	r4, #0
2fff961e:	db2b      	blt.n	2fff9678 <fdt_subnode_offset_namelen+0x76>
2fff9620:	2b00      	cmp	r3, #0
2fff9622:	da05      	bge.n	2fff9630 <fdt_subnode_offset_namelen+0x2e>
2fff9624:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff9628:	4620      	mov	r0, r4
2fff962a:	b002      	add	sp, #8
2fff962c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff9630:	2b01      	cmp	r3, #1
2fff9632:	d11a      	bne.n	2fff966a <fdt_subnode_offset_namelen+0x68>
2fff9634:	aa01      	add	r2, sp, #4
2fff9636:	4621      	mov	r1, r4
2fff9638:	4638      	mov	r0, r7
2fff963a:	f7ff ffb3 	bl	2fff95a4 <fdt_get_name>
2fff963e:	4606      	mov	r6, r0
2fff9640:	b198      	cbz	r0, 2fff966a <fdt_subnode_offset_namelen+0x68>
2fff9642:	9b01      	ldr	r3, [sp, #4]
2fff9644:	429d      	cmp	r5, r3
2fff9646:	dc10      	bgt.n	2fff966a <fdt_subnode_offset_namelen+0x68>
2fff9648:	462a      	mov	r2, r5
2fff964a:	4641      	mov	r1, r8
2fff964c:	f000 fa52 	bl	2fff9af4 <memcmp>
2fff9650:	b958      	cbnz	r0, 2fff966a <fdt_subnode_offset_namelen+0x68>
2fff9652:	5d73      	ldrb	r3, [r6, r5]
2fff9654:	2b00      	cmp	r3, #0
2fff9656:	d0e7      	beq.n	2fff9628 <fdt_subnode_offset_namelen+0x26>
2fff9658:	462a      	mov	r2, r5
2fff965a:	2140      	movs	r1, #64	; 0x40
2fff965c:	4640      	mov	r0, r8
2fff965e:	f000 fa3b 	bl	2fff9ad8 <memchr>
2fff9662:	b910      	cbnz	r0, 2fff966a <fdt_subnode_offset_namelen+0x68>
2fff9664:	5d73      	ldrb	r3, [r6, r5]
2fff9666:	2b40      	cmp	r3, #64	; 0x40
2fff9668:	d0de      	beq.n	2fff9628 <fdt_subnode_offset_namelen+0x26>
2fff966a:	4621      	mov	r1, r4
2fff966c:	466a      	mov	r2, sp
2fff966e:	4638      	mov	r0, r7
2fff9670:	f7ff fed6 	bl	2fff9420 <fdt_next_node>
2fff9674:	4604      	mov	r4, r0
2fff9676:	e7d0      	b.n	2fff961a <fdt_subnode_offset_namelen+0x18>
2fff9678:	2b00      	cmp	r3, #0
2fff967a:	bfb8      	it	lt
2fff967c:	f04f 34ff 	movlt.w	r4, #4294967295	; 0xffffffff
2fff9680:	e7d2      	b.n	2fff9628 <fdt_subnode_offset_namelen+0x26>

2fff9682 <fdt_subnode_offset>:
2fff9682:	b570      	push	{r4, r5, r6, lr}
2fff9684:	4605      	mov	r5, r0
2fff9686:	4610      	mov	r0, r2
2fff9688:	460e      	mov	r6, r1
2fff968a:	4614      	mov	r4, r2
2fff968c:	f000 fbc5 	bl	2fff9e1a <strlen>
2fff9690:	4603      	mov	r3, r0
2fff9692:	4622      	mov	r2, r4
2fff9694:	4631      	mov	r1, r6
2fff9696:	4628      	mov	r0, r5
2fff9698:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff969c:	f7ff bfb1 	b.w	2fff9602 <fdt_subnode_offset_namelen>

2fff96a0 <fdt_first_property_offset>:
2fff96a0:	b510      	push	{r4, lr}
2fff96a2:	4604      	mov	r4, r0
2fff96a4:	f7ff fe98 	bl	2fff93d8 <fdt_check_node_offset_>
2fff96a8:	1e01      	subs	r1, r0, #0
2fff96aa:	db04      	blt.n	2fff96b6 <fdt_first_property_offset+0x16>
2fff96ac:	4620      	mov	r0, r4
2fff96ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff96b2:	f7ff bf3b 	b.w	2fff952c <nextprop_>
2fff96b6:	bd10      	pop	{r4, pc}

2fff96b8 <fdt_next_property_offset>:
2fff96b8:	b510      	push	{r4, lr}
2fff96ba:	4604      	mov	r4, r0
2fff96bc:	f7ff fe9e 	bl	2fff93fc <fdt_check_prop_offset_>
2fff96c0:	1e01      	subs	r1, r0, #0
2fff96c2:	db04      	blt.n	2fff96ce <fdt_next_property_offset+0x16>
2fff96c4:	4620      	mov	r0, r4
2fff96c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff96ca:	f7ff bf2f 	b.w	2fff952c <nextprop_>
2fff96ce:	bd10      	pop	{r4, pc}

2fff96d0 <fdt_get_property_namelen_>:
2fff96d0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff96d4:	4606      	mov	r6, r0
2fff96d6:	9f0a      	ldr	r7, [sp, #40]	; 0x28
2fff96d8:	4691      	mov	r9, r2
2fff96da:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
2fff96de:	4698      	mov	r8, r3
2fff96e0:	f7ff ffde 	bl	2fff96a0 <fdt_first_property_offset>
2fff96e4:	2800      	cmp	r0, #0
2fff96e6:	4604      	mov	r4, r0
2fff96e8:	da03      	bge.n	2fff96f2 <fdt_get_property_namelen_+0x22>
2fff96ea:	b35f      	cbz	r7, 2fff9744 <fdt_get_property_namelen_+0x74>
2fff96ec:	603c      	str	r4, [r7, #0]
2fff96ee:	2500      	movs	r5, #0
2fff96f0:	e01d      	b.n	2fff972e <fdt_get_property_namelen_+0x5e>
2fff96f2:	463a      	mov	r2, r7
2fff96f4:	4621      	mov	r1, r4
2fff96f6:	4630      	mov	r0, r6
2fff96f8:	f7ff ff31 	bl	2fff955e <fdt_get_property_by_offset_>
2fff96fc:	4605      	mov	r5, r0
2fff96fe:	b1f0      	cbz	r0, 2fff973e <fdt_get_property_namelen_+0x6e>
2fff9700:	6880      	ldr	r0, [r0, #8]
2fff9702:	f7ff ff11 	bl	2fff9528 <fdt32_to_cpu>
2fff9706:	4601      	mov	r1, r0
2fff9708:	4630      	mov	r0, r6
2fff970a:	f7ff ff43 	bl	2fff9594 <fdt_string>
2fff970e:	4682      	mov	sl, r0
2fff9710:	f000 fb83 	bl	2fff9e1a <strlen>
2fff9714:	4540      	cmp	r0, r8
2fff9716:	d10d      	bne.n	2fff9734 <fdt_get_property_namelen_+0x64>
2fff9718:	4642      	mov	r2, r8
2fff971a:	4649      	mov	r1, r9
2fff971c:	4650      	mov	r0, sl
2fff971e:	f000 f9e9 	bl	2fff9af4 <memcmp>
2fff9722:	b938      	cbnz	r0, 2fff9734 <fdt_get_property_namelen_+0x64>
2fff9724:	f1bb 0f00 	cmp.w	fp, #0
2fff9728:	d001      	beq.n	2fff972e <fdt_get_property_namelen_+0x5e>
2fff972a:	f8cb 4000 	str.w	r4, [fp]
2fff972e:	4628      	mov	r0, r5
2fff9730:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff9734:	4621      	mov	r1, r4
2fff9736:	4630      	mov	r0, r6
2fff9738:	f7ff ffbe 	bl	2fff96b8 <fdt_next_property_offset>
2fff973c:	e7d2      	b.n	2fff96e4 <fdt_get_property_namelen_+0x14>
2fff973e:	f06f 040c 	mvn.w	r4, #12
2fff9742:	e7d2      	b.n	2fff96ea <fdt_get_property_namelen_+0x1a>
2fff9744:	463d      	mov	r5, r7
2fff9746:	e7f2      	b.n	2fff972e <fdt_get_property_namelen_+0x5e>

2fff9748 <fdt_getprop_namelen>:
2fff9748:	b530      	push	{r4, r5, lr}
2fff974a:	b085      	sub	sp, #20
2fff974c:	ad03      	add	r5, sp, #12
2fff974e:	4604      	mov	r4, r0
2fff9750:	9501      	str	r5, [sp, #4]
2fff9752:	9d08      	ldr	r5, [sp, #32]
2fff9754:	9500      	str	r5, [sp, #0]
2fff9756:	f7ff ffbb 	bl	2fff96d0 <fdt_get_property_namelen_>
2fff975a:	4603      	mov	r3, r0
2fff975c:	b170      	cbz	r0, 2fff977c <fdt_getprop_namelen+0x34>
2fff975e:	6960      	ldr	r0, [r4, #20]
2fff9760:	f7ff fee2 	bl	2fff9528 <fdt32_to_cpu>
2fff9764:	280f      	cmp	r0, #15
2fff9766:	d80c      	bhi.n	2fff9782 <fdt_getprop_namelen+0x3a>
2fff9768:	9a03      	ldr	r2, [sp, #12]
2fff976a:	320c      	adds	r2, #12
2fff976c:	0752      	lsls	r2, r2, #29
2fff976e:	d008      	beq.n	2fff9782 <fdt_getprop_namelen+0x3a>
2fff9770:	6858      	ldr	r0, [r3, #4]
2fff9772:	f7ff fed9 	bl	2fff9528 <fdt32_to_cpu>
2fff9776:	2807      	cmp	r0, #7
2fff9778:	d903      	bls.n	2fff9782 <fdt_getprop_namelen+0x3a>
2fff977a:	3310      	adds	r3, #16
2fff977c:	4618      	mov	r0, r3
2fff977e:	b005      	add	sp, #20
2fff9780:	bd30      	pop	{r4, r5, pc}
2fff9782:	330c      	adds	r3, #12
2fff9784:	e7fa      	b.n	2fff977c <fdt_getprop_namelen+0x34>

2fff9786 <fdt_getprop>:
2fff9786:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff9788:	4605      	mov	r5, r0
2fff978a:	4610      	mov	r0, r2
2fff978c:	461f      	mov	r7, r3
2fff978e:	460e      	mov	r6, r1
2fff9790:	4614      	mov	r4, r2
2fff9792:	f000 fb42 	bl	2fff9e1a <strlen>
2fff9796:	9700      	str	r7, [sp, #0]
2fff9798:	4603      	mov	r3, r0
2fff979a:	4622      	mov	r2, r4
2fff979c:	4631      	mov	r1, r6
2fff979e:	4628      	mov	r0, r5
2fff97a0:	f7ff ffd2 	bl	2fff9748 <fdt_getprop_namelen>
2fff97a4:	b003      	add	sp, #12
2fff97a6:	bdf0      	pop	{r4, r5, r6, r7, pc}

2fff97a8 <fdt_get_phandle>:
2fff97a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff97aa:	ab01      	add	r3, sp, #4
2fff97ac:	4a0d      	ldr	r2, [pc, #52]	; (2fff97e4 <fdt_get_phandle+0x3c>)
2fff97ae:	4604      	mov	r4, r0
2fff97b0:	460d      	mov	r5, r1
2fff97b2:	f7ff ffe8 	bl	2fff9786 <fdt_getprop>
2fff97b6:	b110      	cbz	r0, 2fff97be <fdt_get_phandle+0x16>
2fff97b8:	9b01      	ldr	r3, [sp, #4]
2fff97ba:	2b04      	cmp	r3, #4
2fff97bc:	d009      	beq.n	2fff97d2 <fdt_get_phandle+0x2a>
2fff97be:	4a0a      	ldr	r2, [pc, #40]	; (2fff97e8 <fdt_get_phandle+0x40>)
2fff97c0:	ab01      	add	r3, sp, #4
2fff97c2:	4629      	mov	r1, r5
2fff97c4:	4620      	mov	r0, r4
2fff97c6:	f7ff ffde 	bl	2fff9786 <fdt_getprop>
2fff97ca:	b140      	cbz	r0, 2fff97de <fdt_get_phandle+0x36>
2fff97cc:	9b01      	ldr	r3, [sp, #4]
2fff97ce:	2b04      	cmp	r3, #4
2fff97d0:	d105      	bne.n	2fff97de <fdt_get_phandle+0x36>
2fff97d2:	6800      	ldr	r0, [r0, #0]
2fff97d4:	b003      	add	sp, #12
2fff97d6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2fff97da:	f7ff bea5 	b.w	2fff9528 <fdt32_to_cpu>
2fff97de:	2000      	movs	r0, #0
2fff97e0:	b003      	add	sp, #12
2fff97e2:	bd30      	pop	{r4, r5, pc}
2fff97e4:	2fffc6d4 	.word	0x2fffc6d4
2fff97e8:	2fffc6ce 	.word	0x2fffc6ce

2fff97ec <fdt_get_alias_namelen>:
2fff97ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff97ee:	460d      	mov	r5, r1
2fff97f0:	4908      	ldr	r1, [pc, #32]	; (2fff9814 <fdt_get_alias_namelen+0x28>)
2fff97f2:	4604      	mov	r4, r0
2fff97f4:	4616      	mov	r6, r2
2fff97f6:	f000 f858 	bl	2fff98aa <fdt_path_offset>
2fff97fa:	1e01      	subs	r1, r0, #0
2fff97fc:	f04f 0000 	mov.w	r0, #0
2fff9800:	db05      	blt.n	2fff980e <fdt_get_alias_namelen+0x22>
2fff9802:	9000      	str	r0, [sp, #0]
2fff9804:	4633      	mov	r3, r6
2fff9806:	462a      	mov	r2, r5
2fff9808:	4620      	mov	r0, r4
2fff980a:	f7ff ff9d 	bl	2fff9748 <fdt_getprop_namelen>
2fff980e:	b002      	add	sp, #8
2fff9810:	bd70      	pop	{r4, r5, r6, pc}
2fff9812:	bf00      	nop
2fff9814:	2fffc6dc 	.word	0x2fffc6dc

2fff9818 <fdt_path_offset_namelen>:
2fff9818:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff981c:	4607      	mov	r7, r0
2fff981e:	460c      	mov	r4, r1
2fff9820:	4690      	mov	r8, r2
2fff9822:	f7ff fd2b 	bl	2fff927c <fdt_check_header>
2fff9826:	4605      	mov	r5, r0
2fff9828:	2800      	cmp	r0, #0
2fff982a:	d138      	bne.n	2fff989e <fdt_path_offset_namelen+0x86>
2fff982c:	7823      	ldrb	r3, [r4, #0]
2fff982e:	eb04 0608 	add.w	r6, r4, r8
2fff9832:	2b2f      	cmp	r3, #47	; 0x2f
2fff9834:	d015      	beq.n	2fff9862 <fdt_path_offset_namelen+0x4a>
2fff9836:	4642      	mov	r2, r8
2fff9838:	212f      	movs	r1, #47	; 0x2f
2fff983a:	4620      	mov	r0, r4
2fff983c:	f000 f94c 	bl	2fff9ad8 <memchr>
2fff9840:	2800      	cmp	r0, #0
2fff9842:	bf14      	ite	ne
2fff9844:	4680      	movne	r8, r0
2fff9846:	46b0      	moveq	r8, r6
2fff9848:	4621      	mov	r1, r4
2fff984a:	eba8 0204 	sub.w	r2, r8, r4
2fff984e:	4638      	mov	r0, r7
2fff9850:	f7ff ffcc 	bl	2fff97ec <fdt_get_alias_namelen>
2fff9854:	4601      	mov	r1, r0
2fff9856:	b328      	cbz	r0, 2fff98a4 <fdt_path_offset_namelen+0x8c>
2fff9858:	4638      	mov	r0, r7
2fff985a:	4644      	mov	r4, r8
2fff985c:	f000 f825 	bl	2fff98aa <fdt_path_offset>
2fff9860:	4605      	mov	r5, r0
2fff9862:	42b4      	cmp	r4, r6
2fff9864:	d302      	bcc.n	2fff986c <fdt_path_offset_namelen+0x54>
2fff9866:	e01a      	b.n	2fff989e <fdt_path_offset_namelen+0x86>
2fff9868:	42a6      	cmp	r6, r4
2fff986a:	d018      	beq.n	2fff989e <fdt_path_offset_namelen+0x86>
2fff986c:	46a0      	mov	r8, r4
2fff986e:	3401      	adds	r4, #1
2fff9870:	f898 3000 	ldrb.w	r3, [r8]
2fff9874:	2b2f      	cmp	r3, #47	; 0x2f
2fff9876:	d0f7      	beq.n	2fff9868 <fdt_path_offset_namelen+0x50>
2fff9878:	eba6 0208 	sub.w	r2, r6, r8
2fff987c:	212f      	movs	r1, #47	; 0x2f
2fff987e:	4640      	mov	r0, r8
2fff9880:	f000 f92a 	bl	2fff9ad8 <memchr>
2fff9884:	2800      	cmp	r0, #0
2fff9886:	bf14      	ite	ne
2fff9888:	4604      	movne	r4, r0
2fff988a:	4634      	moveq	r4, r6
2fff988c:	4629      	mov	r1, r5
2fff988e:	eba4 0308 	sub.w	r3, r4, r8
2fff9892:	4642      	mov	r2, r8
2fff9894:	4638      	mov	r0, r7
2fff9896:	f7ff feb4 	bl	2fff9602 <fdt_subnode_offset_namelen>
2fff989a:	1e05      	subs	r5, r0, #0
2fff989c:	dae1      	bge.n	2fff9862 <fdt_path_offset_namelen+0x4a>
2fff989e:	4628      	mov	r0, r5
2fff98a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff98a4:	f06f 0504 	mvn.w	r5, #4
2fff98a8:	e7f9      	b.n	2fff989e <fdt_path_offset_namelen+0x86>

2fff98aa <fdt_path_offset>:
2fff98aa:	b538      	push	{r3, r4, r5, lr}
2fff98ac:	4605      	mov	r5, r0
2fff98ae:	4608      	mov	r0, r1
2fff98b0:	460c      	mov	r4, r1
2fff98b2:	f000 fab2 	bl	2fff9e1a <strlen>
2fff98b6:	4602      	mov	r2, r0
2fff98b8:	4621      	mov	r1, r4
2fff98ba:	4628      	mov	r0, r5
2fff98bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff98c0:	f7ff bfaa 	b.w	2fff9818 <fdt_path_offset_namelen>

2fff98c4 <fdt_supernode_atdepth_offset>:
2fff98c4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff98c8:	4680      	mov	r8, r0
2fff98ca:	460d      	mov	r5, r1
2fff98cc:	4614      	mov	r4, r2
2fff98ce:	461e      	mov	r6, r3
2fff98d0:	f7ff fcd4 	bl	2fff927c <fdt_check_header>
2fff98d4:	b9b0      	cbnz	r0, 2fff9904 <fdt_supernode_atdepth_offset+0x40>
2fff98d6:	2c00      	cmp	r4, #0
2fff98d8:	db25      	blt.n	2fff9926 <fdt_supernode_atdepth_offset+0x62>
2fff98da:	9001      	str	r0, [sp, #4]
2fff98dc:	f06f 070c 	mvn.w	r7, #12
2fff98e0:	4285      	cmp	r5, r0
2fff98e2:	da02      	bge.n	2fff98ea <fdt_supernode_atdepth_offset+0x26>
2fff98e4:	f06f 0003 	mvn.w	r0, #3
2fff98e8:	e00c      	b.n	2fff9904 <fdt_supernode_atdepth_offset+0x40>
2fff98ea:	9b01      	ldr	r3, [sp, #4]
2fff98ec:	429c      	cmp	r4, r3
2fff98ee:	bf08      	it	eq
2fff98f0:	4607      	moveq	r7, r0
2fff98f2:	4285      	cmp	r5, r0
2fff98f4:	d109      	bne.n	2fff990a <fdt_supernode_atdepth_offset+0x46>
2fff98f6:	b106      	cbz	r6, 2fff98fa <fdt_supernode_atdepth_offset+0x36>
2fff98f8:	6033      	str	r3, [r6, #0]
2fff98fa:	429c      	cmp	r4, r3
2fff98fc:	bfd4      	ite	le
2fff98fe:	4638      	movle	r0, r7
2fff9900:	f04f 30ff 	movgt.w	r0, #4294967295	; 0xffffffff
2fff9904:	b002      	add	sp, #8
2fff9906:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff990a:	4601      	mov	r1, r0
2fff990c:	aa01      	add	r2, sp, #4
2fff990e:	4640      	mov	r0, r8
2fff9910:	f7ff fd86 	bl	2fff9420 <fdt_next_node>
2fff9914:	2800      	cmp	r0, #0
2fff9916:	dae3      	bge.n	2fff98e0 <fdt_supernode_atdepth_offset+0x1c>
2fff9918:	1c42      	adds	r2, r0, #1
2fff991a:	d0e3      	beq.n	2fff98e4 <fdt_supernode_atdepth_offset+0x20>
2fff991c:	1d03      	adds	r3, r0, #4
2fff991e:	bf08      	it	eq
2fff9920:	f06f 000a 	mvneq.w	r0, #10
2fff9924:	e7ee      	b.n	2fff9904 <fdt_supernode_atdepth_offset+0x40>
2fff9926:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff992a:	e7eb      	b.n	2fff9904 <fdt_supernode_atdepth_offset+0x40>

2fff992c <fdt_node_depth>:
2fff992c:	b507      	push	{r0, r1, r2, lr}
2fff992e:	2200      	movs	r2, #0
2fff9930:	ab01      	add	r3, sp, #4
2fff9932:	f7ff ffc7 	bl	2fff98c4 <fdt_supernode_atdepth_offset>
2fff9936:	2800      	cmp	r0, #0
2fff9938:	d005      	beq.n	2fff9946 <fdt_node_depth+0x1a>
2fff993a:	db01      	blt.n	2fff9940 <fdt_node_depth+0x14>
2fff993c:	f06f 000c 	mvn.w	r0, #12
2fff9940:	b003      	add	sp, #12
2fff9942:	f85d fb04 	ldr.w	pc, [sp], #4
2fff9946:	9801      	ldr	r0, [sp, #4]
2fff9948:	e7fa      	b.n	2fff9940 <fdt_node_depth+0x14>

2fff994a <fdt_parent_offset>:
2fff994a:	b570      	push	{r4, r5, r6, lr}
2fff994c:	4604      	mov	r4, r0
2fff994e:	460d      	mov	r5, r1
2fff9950:	f7ff ffec 	bl	2fff992c <fdt_node_depth>
2fff9954:	1e02      	subs	r2, r0, #0
2fff9956:	db07      	blt.n	2fff9968 <fdt_parent_offset+0x1e>
2fff9958:	4629      	mov	r1, r5
2fff995a:	4620      	mov	r0, r4
2fff995c:	2300      	movs	r3, #0
2fff995e:	3a01      	subs	r2, #1
2fff9960:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff9964:	f7ff bfae 	b.w	2fff98c4 <fdt_supernode_atdepth_offset>
2fff9968:	bd70      	pop	{r4, r5, r6, pc}

2fff996a <fdt_node_offset_by_phandle>:
2fff996a:	1e4b      	subs	r3, r1, #1
2fff996c:	3303      	adds	r3, #3
2fff996e:	b570      	push	{r4, r5, r6, lr}
2fff9970:	4605      	mov	r5, r0
2fff9972:	460e      	mov	r6, r1
2fff9974:	d817      	bhi.n	2fff99a6 <fdt_node_offset_by_phandle+0x3c>
2fff9976:	f7ff fc81 	bl	2fff927c <fdt_check_header>
2fff997a:	4604      	mov	r4, r0
2fff997c:	b940      	cbnz	r0, 2fff9990 <fdt_node_offset_by_phandle+0x26>
2fff997e:	4602      	mov	r2, r0
2fff9980:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff9984:	4628      	mov	r0, r5
2fff9986:	f7ff fd4b 	bl	2fff9420 <fdt_next_node>
2fff998a:	2800      	cmp	r0, #0
2fff998c:	4604      	mov	r4, r0
2fff998e:	da01      	bge.n	2fff9994 <fdt_node_offset_by_phandle+0x2a>
2fff9990:	4620      	mov	r0, r4
2fff9992:	bd70      	pop	{r4, r5, r6, pc}
2fff9994:	4621      	mov	r1, r4
2fff9996:	4628      	mov	r0, r5
2fff9998:	f7ff ff06 	bl	2fff97a8 <fdt_get_phandle>
2fff999c:	42b0      	cmp	r0, r6
2fff999e:	d0f7      	beq.n	2fff9990 <fdt_node_offset_by_phandle+0x26>
2fff99a0:	2200      	movs	r2, #0
2fff99a2:	4621      	mov	r1, r4
2fff99a4:	e7ee      	b.n	2fff9984 <fdt_node_offset_by_phandle+0x1a>
2fff99a6:	f06f 0405 	mvn.w	r4, #5
2fff99aa:	e7f1      	b.n	2fff9990 <fdt_node_offset_by_phandle+0x26>

2fff99ac <fdt_stringlist_contains>:
2fff99ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff99b0:	4604      	mov	r4, r0
2fff99b2:	4610      	mov	r0, r2
2fff99b4:	460d      	mov	r5, r1
2fff99b6:	4617      	mov	r7, r2
2fff99b8:	f000 fa2f 	bl	2fff9e1a <strlen>
2fff99bc:	4606      	mov	r6, r0
2fff99be:	f100 0801 	add.w	r8, r0, #1
2fff99c2:	42b5      	cmp	r5, r6
2fff99c4:	db0b      	blt.n	2fff99de <fdt_stringlist_contains+0x32>
2fff99c6:	4642      	mov	r2, r8
2fff99c8:	4621      	mov	r1, r4
2fff99ca:	4638      	mov	r0, r7
2fff99cc:	f000 f892 	bl	2fff9af4 <memcmp>
2fff99d0:	b168      	cbz	r0, 2fff99ee <fdt_stringlist_contains+0x42>
2fff99d2:	462a      	mov	r2, r5
2fff99d4:	2100      	movs	r1, #0
2fff99d6:	4620      	mov	r0, r4
2fff99d8:	f000 f87e 	bl	2fff9ad8 <memchr>
2fff99dc:	b910      	cbnz	r0, 2fff99e4 <fdt_stringlist_contains+0x38>
2fff99de:	2000      	movs	r0, #0
2fff99e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff99e4:	1b04      	subs	r4, r0, r4
2fff99e6:	3401      	adds	r4, #1
2fff99e8:	1b2d      	subs	r5, r5, r4
2fff99ea:	1c44      	adds	r4, r0, #1
2fff99ec:	e7e9      	b.n	2fff99c2 <fdt_stringlist_contains+0x16>
2fff99ee:	2001      	movs	r0, #1
2fff99f0:	e7f6      	b.n	2fff99e0 <fdt_stringlist_contains+0x34>

2fff99f2 <fdt_stringlist_search>:
2fff99f2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff99f6:	4698      	mov	r8, r3
2fff99f8:	ab01      	add	r3, sp, #4
2fff99fa:	f7ff fec4 	bl	2fff9786 <fdt_getprop>
2fff99fe:	4604      	mov	r4, r0
2fff9a00:	b920      	cbnz	r0, 2fff9a0c <fdt_stringlist_search+0x1a>
2fff9a02:	9d01      	ldr	r5, [sp, #4]
2fff9a04:	4628      	mov	r0, r5
2fff9a06:	b002      	add	sp, #8
2fff9a08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff9a0c:	4640      	mov	r0, r8
2fff9a0e:	2500      	movs	r5, #0
2fff9a10:	f000 fa03 	bl	2fff9e1a <strlen>
2fff9a14:	9e01      	ldr	r6, [sp, #4]
2fff9a16:	1c47      	adds	r7, r0, #1
2fff9a18:	4426      	add	r6, r4
2fff9a1a:	42b4      	cmp	r4, r6
2fff9a1c:	d302      	bcc.n	2fff9a24 <fdt_stringlist_search+0x32>
2fff9a1e:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff9a22:	e7ef      	b.n	2fff9a04 <fdt_stringlist_search+0x12>
2fff9a24:	1b31      	subs	r1, r6, r4
2fff9a26:	4620      	mov	r0, r4
2fff9a28:	f000 fa13 	bl	2fff9e52 <strnlen>
2fff9a2c:	3001      	adds	r0, #1
2fff9a2e:	1823      	adds	r3, r4, r0
2fff9a30:	429e      	cmp	r6, r3
2fff9a32:	9001      	str	r0, [sp, #4]
2fff9a34:	d30d      	bcc.n	2fff9a52 <fdt_stringlist_search+0x60>
2fff9a36:	42b8      	cmp	r0, r7
2fff9a38:	d003      	beq.n	2fff9a42 <fdt_stringlist_search+0x50>
2fff9a3a:	9b01      	ldr	r3, [sp, #4]
2fff9a3c:	3501      	adds	r5, #1
2fff9a3e:	441c      	add	r4, r3
2fff9a40:	e7eb      	b.n	2fff9a1a <fdt_stringlist_search+0x28>
2fff9a42:	463a      	mov	r2, r7
2fff9a44:	4641      	mov	r1, r8
2fff9a46:	4620      	mov	r0, r4
2fff9a48:	f000 f854 	bl	2fff9af4 <memcmp>
2fff9a4c:	2800      	cmp	r0, #0
2fff9a4e:	d1f4      	bne.n	2fff9a3a <fdt_stringlist_search+0x48>
2fff9a50:	e7d8      	b.n	2fff9a04 <fdt_stringlist_search+0x12>
2fff9a52:	f06f 050e 	mvn.w	r5, #14
2fff9a56:	e7d5      	b.n	2fff9a04 <fdt_stringlist_search+0x12>

2fff9a58 <fdt_node_check_compatible>:
2fff9a58:	b513      	push	{r0, r1, r4, lr}
2fff9a5a:	4614      	mov	r4, r2
2fff9a5c:	4a07      	ldr	r2, [pc, #28]	; (2fff9a7c <fdt_node_check_compatible+0x24>)
2fff9a5e:	ab01      	add	r3, sp, #4
2fff9a60:	f7ff fe91 	bl	2fff9786 <fdt_getprop>
2fff9a64:	b910      	cbnz	r0, 2fff9a6c <fdt_node_check_compatible+0x14>
2fff9a66:	9801      	ldr	r0, [sp, #4]
2fff9a68:	b002      	add	sp, #8
2fff9a6a:	bd10      	pop	{r4, pc}
2fff9a6c:	9901      	ldr	r1, [sp, #4]
2fff9a6e:	4622      	mov	r2, r4
2fff9a70:	f7ff ff9c 	bl	2fff99ac <fdt_stringlist_contains>
2fff9a74:	fab0 f080 	clz	r0, r0
2fff9a78:	0940      	lsrs	r0, r0, #5
2fff9a7a:	e7f5      	b.n	2fff9a68 <fdt_node_check_compatible+0x10>
2fff9a7c:	2fffc6e5 	.word	0x2fffc6e5

2fff9a80 <fdt_node_offset_by_compatible>:
2fff9a80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff9a82:	4605      	mov	r5, r0
2fff9a84:	460f      	mov	r7, r1
2fff9a86:	4616      	mov	r6, r2
2fff9a88:	f7ff fbf8 	bl	2fff927c <fdt_check_header>
2fff9a8c:	4604      	mov	r4, r0
2fff9a8e:	b938      	cbnz	r0, 2fff9aa0 <fdt_node_offset_by_compatible+0x20>
2fff9a90:	4602      	mov	r2, r0
2fff9a92:	4639      	mov	r1, r7
2fff9a94:	4628      	mov	r0, r5
2fff9a96:	f7ff fcc3 	bl	2fff9420 <fdt_next_node>
2fff9a9a:	2800      	cmp	r0, #0
2fff9a9c:	4604      	mov	r4, r0
2fff9a9e:	da01      	bge.n	2fff9aa4 <fdt_node_offset_by_compatible+0x24>
2fff9aa0:	4620      	mov	r0, r4
2fff9aa2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff9aa4:	4632      	mov	r2, r6
2fff9aa6:	4621      	mov	r1, r4
2fff9aa8:	4628      	mov	r0, r5
2fff9aaa:	f7ff ffd5 	bl	2fff9a58 <fdt_node_check_compatible>
2fff9aae:	1c43      	adds	r3, r0, #1
2fff9ab0:	db04      	blt.n	2fff9abc <fdt_node_offset_by_compatible+0x3c>
2fff9ab2:	2800      	cmp	r0, #0
2fff9ab4:	d0f4      	beq.n	2fff9aa0 <fdt_node_offset_by_compatible+0x20>
2fff9ab6:	2200      	movs	r2, #0
2fff9ab8:	4621      	mov	r1, r4
2fff9aba:	e7eb      	b.n	2fff9a94 <fdt_node_offset_by_compatible+0x14>
2fff9abc:	4604      	mov	r4, r0
2fff9abe:	e7ef      	b.n	2fff9aa0 <fdt_node_offset_by_compatible+0x20>

2fff9ac0 <__assert>:
2fff9ac0:	460a      	mov	r2, r1
2fff9ac2:	4601      	mov	r1, r0
2fff9ac4:	b508      	push	{r3, lr}
2fff9ac6:	4803      	ldr	r0, [pc, #12]	; (2fff9ad4 <__assert+0x14>)
2fff9ac8:	f000 f95c 	bl	2fff9d84 <printf>
2fff9acc:	f7f8 ffaa 	bl	2fff2a24 <console_flush>
2fff9ad0:	f7ff eba6 	blx	2fff9220 <plat_panic_handler>
2fff9ad4:	2fffc6f0 	.word	0x2fffc6f0

2fff9ad8 <memchr>:
2fff9ad8:	4402      	add	r2, r0
2fff9ada:	4603      	mov	r3, r0
2fff9adc:	b2c9      	uxtb	r1, r1
2fff9ade:	b510      	push	{r4, lr}
2fff9ae0:	4618      	mov	r0, r3
2fff9ae2:	4293      	cmp	r3, r2
2fff9ae4:	d101      	bne.n	2fff9aea <memchr+0x12>
2fff9ae6:	2000      	movs	r0, #0
2fff9ae8:	e003      	b.n	2fff9af2 <memchr+0x1a>
2fff9aea:	7804      	ldrb	r4, [r0, #0]
2fff9aec:	3301      	adds	r3, #1
2fff9aee:	428c      	cmp	r4, r1
2fff9af0:	d1f6      	bne.n	2fff9ae0 <memchr+0x8>
2fff9af2:	bd10      	pop	{r4, pc}

2fff9af4 <memcmp>:
2fff9af4:	4402      	add	r2, r0
2fff9af6:	b510      	push	{r4, lr}
2fff9af8:	4290      	cmp	r0, r2
2fff9afa:	d101      	bne.n	2fff9b00 <memcmp+0xc>
2fff9afc:	2000      	movs	r0, #0
2fff9afe:	e006      	b.n	2fff9b0e <memcmp+0x1a>
2fff9b00:	f810 3b01 	ldrb.w	r3, [r0], #1
2fff9b04:	f811 4b01 	ldrb.w	r4, [r1], #1
2fff9b08:	42a3      	cmp	r3, r4
2fff9b0a:	d0f5      	beq.n	2fff9af8 <memcmp+0x4>
2fff9b0c:	1b18      	subs	r0, r3, r4
2fff9b0e:	bd10      	pop	{r4, pc}

2fff9b10 <memcpy>:
2fff9b10:	440a      	add	r2, r1
2fff9b12:	1e43      	subs	r3, r0, #1
2fff9b14:	b510      	push	{r4, lr}
2fff9b16:	4291      	cmp	r1, r2
2fff9b18:	d100      	bne.n	2fff9b1c <memcpy+0xc>
2fff9b1a:	bd10      	pop	{r4, pc}
2fff9b1c:	f811 4b01 	ldrb.w	r4, [r1], #1
2fff9b20:	f803 4f01 	strb.w	r4, [r3, #1]!
2fff9b24:	e7f7      	b.n	2fff9b16 <memcpy+0x6>

2fff9b26 <memmove>:
2fff9b26:	b470      	push	{r4, r5, r6}
2fff9b28:	4613      	mov	r3, r2
2fff9b2a:	1a46      	subs	r6, r0, r1
2fff9b2c:	4605      	mov	r5, r0
2fff9b2e:	4296      	cmp	r6, r2
2fff9b30:	460c      	mov	r4, r1
2fff9b32:	d302      	bcc.n	2fff9b3a <memmove+0x14>
2fff9b34:	bc70      	pop	{r4, r5, r6}
2fff9b36:	f7ff bfeb 	b.w	2fff9b10 <memcpy>
2fff9b3a:	4414      	add	r4, r2
2fff9b3c:	4403      	add	r3, r0
2fff9b3e:	429d      	cmp	r5, r3
2fff9b40:	d102      	bne.n	2fff9b48 <memmove+0x22>
2fff9b42:	4628      	mov	r0, r5
2fff9b44:	bc70      	pop	{r4, r5, r6}
2fff9b46:	4770      	bx	lr
2fff9b48:	f814 2d01 	ldrb.w	r2, [r4, #-1]!
2fff9b4c:	f803 2d01 	strb.w	r2, [r3, #-1]!
2fff9b50:	e7f5      	b.n	2fff9b3e <memmove+0x18>

2fff9b52 <memset>:
2fff9b52:	4402      	add	r2, r0
2fff9b54:	4603      	mov	r3, r0
2fff9b56:	4293      	cmp	r3, r2
2fff9b58:	d100      	bne.n	2fff9b5c <memset+0xa>
2fff9b5a:	4770      	bx	lr
2fff9b5c:	f803 1b01 	strb.w	r1, [r3], #1
2fff9b60:	e7f9      	b.n	2fff9b56 <memset+0x4>

2fff9b62 <unsigned_num_print>:
2fff9b62:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff9b66:	b087      	sub	sp, #28
2fff9b68:	4606      	mov	r6, r0
2fff9b6a:	460f      	mov	r7, r1
2fff9b6c:	9d10      	ldr	r5, [sp, #64]	; 0x40
2fff9b6e:	469a      	mov	sl, r3
2fff9b70:	f10d 0b04 	add.w	fp, sp, #4
2fff9b74:	2400      	movs	r4, #0
2fff9b76:	4690      	mov	r8, r2
2fff9b78:	f04f 0900 	mov.w	r9, #0
2fff9b7c:	4642      	mov	r2, r8
2fff9b7e:	464b      	mov	r3, r9
2fff9b80:	4630      	mov	r0, r6
2fff9b82:	4639      	mov	r1, r7
2fff9b84:	3401      	adds	r4, #1
2fff9b86:	f7ff e900 	blx	2fff8d88 <__aeabi_uldivmod>
2fff9b8a:	b2d3      	uxtb	r3, r2
2fff9b8c:	2a09      	cmp	r2, #9
2fff9b8e:	bf94      	ite	ls
2fff9b90:	3330      	addls	r3, #48	; 0x30
2fff9b92:	3357      	addhi	r3, #87	; 0x57
2fff9b94:	454f      	cmp	r7, r9
2fff9b96:	b2db      	uxtb	r3, r3
2fff9b98:	bf08      	it	eq
2fff9b9a:	4546      	cmpeq	r6, r8
2fff9b9c:	f80b 3b01 	strb.w	r3, [fp], #1
2fff9ba0:	d20a      	bcs.n	2fff9bb8 <unsigned_num_print+0x56>
2fff9ba2:	2d00      	cmp	r5, #0
2fff9ba4:	dc17      	bgt.n	2fff9bd6 <unsigned_num_print+0x74>
2fff9ba6:	2500      	movs	r5, #0
2fff9ba8:	4626      	mov	r6, r4
2fff9baa:	af01      	add	r7, sp, #4
2fff9bac:	3e01      	subs	r6, #1
2fff9bae:	d214      	bcs.n	2fff9bda <unsigned_num_print+0x78>
2fff9bb0:	1960      	adds	r0, r4, r5
2fff9bb2:	b007      	add	sp, #28
2fff9bb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff9bb8:	4606      	mov	r6, r0
2fff9bba:	460f      	mov	r7, r1
2fff9bbc:	e7de      	b.n	2fff9b7c <unsigned_num_print+0x1a>
2fff9bbe:	4650      	mov	r0, sl
2fff9bc0:	3e01      	subs	r6, #1
2fff9bc2:	f000 f8ec 	bl	2fff9d9e <putchar>
2fff9bc6:	42a6      	cmp	r6, r4
2fff9bc8:	dcf9      	bgt.n	2fff9bbe <unsigned_num_print+0x5c>
2fff9bca:	1b2b      	subs	r3, r5, r4
2fff9bcc:	42ac      	cmp	r4, r5
2fff9bce:	bfd4      	ite	le
2fff9bd0:	461d      	movle	r5, r3
2fff9bd2:	2500      	movgt	r5, #0
2fff9bd4:	e7e8      	b.n	2fff9ba8 <unsigned_num_print+0x46>
2fff9bd6:	462e      	mov	r6, r5
2fff9bd8:	e7f5      	b.n	2fff9bc6 <unsigned_num_print+0x64>
2fff9bda:	5db8      	ldrb	r0, [r7, r6]
2fff9bdc:	f000 f8df 	bl	2fff9d9e <putchar>
2fff9be0:	e7e4      	b.n	2fff9bac <unsigned_num_print+0x4a>
	...

2fff9be4 <vprintf>:
2fff9be4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff9be8:	2500      	movs	r5, #0
2fff9bea:	4606      	mov	r6, r0
2fff9bec:	460c      	mov	r4, r1
2fff9bee:	462f      	mov	r7, r5
2fff9bf0:	7830      	ldrb	r0, [r6, #0]
2fff9bf2:	b918      	cbnz	r0, 2fff9bfc <vprintf+0x18>
2fff9bf4:	4628      	mov	r0, r5
2fff9bf6:	b003      	add	sp, #12
2fff9bf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff9bfc:	2825      	cmp	r0, #37	; 0x25
2fff9bfe:	f106 0601 	add.w	r6, r6, #1
2fff9c02:	f040 80b4 	bne.w	2fff9d6e <vprintf+0x18a>
2fff9c06:	f04f 0b00 	mov.w	fp, #0
2fff9c0a:	4659      	mov	r1, fp
2fff9c0c:	e000      	b.n	2fff9c10 <vprintf+0x2c>
2fff9c0e:	2730      	movs	r7, #48	; 0x30
2fff9c10:	7832      	ldrb	r2, [r6, #0]
2fff9c12:	2a30      	cmp	r2, #48	; 0x30
2fff9c14:	f000 809c 	beq.w	2fff9d50 <vprintf+0x16c>
2fff9c18:	3a64      	subs	r2, #100	; 0x64
2fff9c1a:	b2d0      	uxtb	r0, r2
2fff9c1c:	2816      	cmp	r0, #22
2fff9c1e:	f200 80aa 	bhi.w	2fff9d76 <vprintf+0x192>
2fff9c22:	2a16      	cmp	r2, #22
2fff9c24:	f200 80a7 	bhi.w	2fff9d76 <vprintf+0x192>
2fff9c28:	e8df f002 	tbb	[pc, r2]
2fff9c2c:	a5a5a50c 	.word	0xa5a5a50c
2fff9c30:	a5a50ca5 	.word	0xa5a50ca5
2fff9c34:	a5a5a57c 	.word	0xa5a5a57c
2fff9c38:	35a5a54b 	.word	0x35a5a54b
2fff9c3c:	a5a57fa5 	.word	0xa5a57fa5
2fff9c40:	a569      	.short	0xa569
2fff9c42:	7d          	.byte	0x7d
2fff9c43:	00          	.byte	0x00
2fff9c44:	2901      	cmp	r1, #1
2fff9c46:	dd1c      	ble.n	2fff9c82 <vprintf+0x9e>
2fff9c48:	3407      	adds	r4, #7
2fff9c4a:	f024 0a07 	bic.w	sl, r4, #7
2fff9c4e:	e8fa 8902 	ldrd	r8, r9, [sl], #8
2fff9c52:	f1b8 0f00 	cmp.w	r8, #0
2fff9c56:	f179 0300 	sbcs.w	r3, r9, #0
2fff9c5a:	da19      	bge.n	2fff9c90 <vprintf+0xac>
2fff9c5c:	202d      	movs	r0, #45	; 0x2d
2fff9c5e:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
2fff9c62:	f000 f89c 	bl	2fff9d9e <putchar>
2fff9c66:	f1d8 0000 	rsbs	r0, r8, #0
2fff9c6a:	eb69 0149 	sbc.w	r1, r9, r9, lsl #1
2fff9c6e:	f8cd b000 	str.w	fp, [sp]
2fff9c72:	463b      	mov	r3, r7
2fff9c74:	220a      	movs	r2, #10
2fff9c76:	4654      	mov	r4, sl
2fff9c78:	f7ff ff73 	bl	2fff9b62 <unsigned_num_print>
2fff9c7c:	4405      	add	r5, r0
2fff9c7e:	3601      	adds	r6, #1
2fff9c80:	e7b6      	b.n	2fff9bf0 <vprintf+0xc>
2fff9c82:	6820      	ldr	r0, [r4, #0]
2fff9c84:	f104 0a04 	add.w	sl, r4, #4
2fff9c88:	ea4f 79e0 	mov.w	r9, r0, asr #31
2fff9c8c:	4680      	mov	r8, r0
2fff9c8e:	e7e0      	b.n	2fff9c52 <vprintf+0x6e>
2fff9c90:	4640      	mov	r0, r8
2fff9c92:	4649      	mov	r1, r9
2fff9c94:	e7eb      	b.n	2fff9c6e <vprintf+0x8a>
2fff9c96:	f854 9b04 	ldr.w	r9, [r4], #4
2fff9c9a:	f1b9 0f00 	cmp.w	r9, #0
2fff9c9e:	d10d      	bne.n	2fff9cbc <vprintf+0xd8>
2fff9ca0:	4836      	ldr	r0, [pc, #216]	; (2fff9d7c <vprintf+0x198>)
2fff9ca2:	211c      	movs	r1, #28
2fff9ca4:	f7ff ff0c 	bl	2fff9ac0 <__assert>
2fff9ca8:	f108 0801 	add.w	r8, r8, #1
2fff9cac:	f000 f877 	bl	2fff9d9e <putchar>
2fff9cb0:	f819 0008 	ldrb.w	r0, [r9, r8]
2fff9cb4:	2800      	cmp	r0, #0
2fff9cb6:	d1f7      	bne.n	2fff9ca8 <vprintf+0xc4>
2fff9cb8:	4445      	add	r5, r8
2fff9cba:	e7e0      	b.n	2fff9c7e <vprintf+0x9a>
2fff9cbc:	f04f 0800 	mov.w	r8, #0
2fff9cc0:	e7f6      	b.n	2fff9cb0 <vprintf+0xcc>
2fff9cc2:	f854 9b04 	ldr.w	r9, [r4], #4
2fff9cc6:	f1b9 0f00 	cmp.w	r9, #0
2fff9cca:	d009      	beq.n	2fff9ce0 <vprintf+0xfc>
2fff9ccc:	f8df a0b0 	ldr.w	sl, [pc, #176]	; 2fff9d80 <vprintf+0x19c>
2fff9cd0:	f04f 0800 	mov.w	r8, #0
2fff9cd4:	f81a 0b01 	ldrb.w	r0, [sl], #1
2fff9cd8:	b960      	cbnz	r0, 2fff9cf4 <vprintf+0x110>
2fff9cda:	4445      	add	r5, r8
2fff9cdc:	f1ab 0b02 	sub.w	fp, fp, #2
2fff9ce0:	f8cd b000 	str.w	fp, [sp]
2fff9ce4:	463b      	mov	r3, r7
2fff9ce6:	2210      	movs	r2, #16
2fff9ce8:	4648      	mov	r0, r9
2fff9cea:	2100      	movs	r1, #0
2fff9cec:	f7ff ff39 	bl	2fff9b62 <unsigned_num_print>
2fff9cf0:	4405      	add	r5, r0
2fff9cf2:	e7c4      	b.n	2fff9c7e <vprintf+0x9a>
2fff9cf4:	f108 0801 	add.w	r8, r8, #1
2fff9cf8:	f000 f851 	bl	2fff9d9e <putchar>
2fff9cfc:	e7ea      	b.n	2fff9cd4 <vprintf+0xf0>
2fff9cfe:	2901      	cmp	r1, #1
2fff9d00:	463b      	mov	r3, r7
2fff9d02:	bfca      	itet	gt
2fff9d04:	1de1      	addgt	r1, r4, #7
2fff9d06:	2100      	movle	r1, #0
2fff9d08:	f021 0107 	bicgt.w	r1, r1, #7
2fff9d0c:	f04f 0210 	mov.w	r2, #16
2fff9d10:	bfd1      	iteee	le
2fff9d12:	f854 0b04 	ldrle.w	r0, [r4], #4
2fff9d16:	460c      	movgt	r4, r1
2fff9d18:	6849      	ldrgt	r1, [r1, #4]
2fff9d1a:	f854 0b08 	ldrgt.w	r0, [r4], #8
2fff9d1e:	f8cd b000 	str.w	fp, [sp]
2fff9d22:	e7e3      	b.n	2fff9cec <vprintf+0x108>
2fff9d24:	3101      	adds	r1, #1
2fff9d26:	3601      	adds	r6, #1
2fff9d28:	e772      	b.n	2fff9c10 <vprintf+0x2c>
2fff9d2a:	2901      	cmp	r1, #1
2fff9d2c:	463b      	mov	r3, r7
2fff9d2e:	bfca      	itet	gt
2fff9d30:	1de1      	addgt	r1, r4, #7
2fff9d32:	2100      	movle	r1, #0
2fff9d34:	f021 0107 	bicgt.w	r1, r1, #7
2fff9d38:	f04f 020a 	mov.w	r2, #10
2fff9d3c:	bfd1      	iteee	le
2fff9d3e:	f854 0b04 	ldrle.w	r0, [r4], #4
2fff9d42:	460c      	movgt	r4, r1
2fff9d44:	6849      	ldrgt	r1, [r1, #4]
2fff9d46:	f854 0b08 	ldrgt.w	r0, [r4], #8
2fff9d4a:	f8cd b000 	str.w	fp, [sp]
2fff9d4e:	e7cd      	b.n	2fff9cec <vprintf+0x108>
2fff9d50:	1c70      	adds	r0, r6, #1
2fff9d52:	f04f 0b00 	mov.w	fp, #0
2fff9d56:	4606      	mov	r6, r0
2fff9d58:	f810 2b01 	ldrb.w	r2, [r0], #1
2fff9d5c:	3a30      	subs	r2, #48	; 0x30
2fff9d5e:	b2d7      	uxtb	r7, r2
2fff9d60:	2f09      	cmp	r7, #9
2fff9d62:	f63f af54 	bhi.w	2fff9c0e <vprintf+0x2a>
2fff9d66:	230a      	movs	r3, #10
2fff9d68:	fb03 2b0b 	mla	fp, r3, fp, r2
2fff9d6c:	e7f3      	b.n	2fff9d56 <vprintf+0x172>
2fff9d6e:	3501      	adds	r5, #1
2fff9d70:	f000 f815 	bl	2fff9d9e <putchar>
2fff9d74:	e73c      	b.n	2fff9bf0 <vprintf+0xc>
2fff9d76:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff9d7a:	e73b      	b.n	2fff9bf4 <vprintf+0x10>
2fff9d7c:	2fffc6ff 	.word	0x2fffc6ff
2fff9d80:	2fffc711 	.word	0x2fffc711

2fff9d84 <printf>:
2fff9d84:	b40f      	push	{r0, r1, r2, r3}
2fff9d86:	b507      	push	{r0, r1, r2, lr}
2fff9d88:	a904      	add	r1, sp, #16
2fff9d8a:	f851 0b04 	ldr.w	r0, [r1], #4
2fff9d8e:	9101      	str	r1, [sp, #4]
2fff9d90:	f7ff ff28 	bl	2fff9be4 <vprintf>
2fff9d94:	b003      	add	sp, #12
2fff9d96:	f85d eb04 	ldr.w	lr, [sp], #4
2fff9d9a:	b004      	add	sp, #16
2fff9d9c:	4770      	bx	lr

2fff9d9e <putchar>:
2fff9d9e:	b510      	push	{r4, lr}
2fff9da0:	4604      	mov	r4, r0
2fff9da2:	b2c0      	uxtb	r0, r0
2fff9da4:	f7f8 fe12 	bl	2fff29cc <console_putc>
2fff9da8:	2800      	cmp	r0, #0
2fff9daa:	bfac      	ite	ge
2fff9dac:	4620      	movge	r0, r4
2fff9dae:	f04f 30ff 	movlt.w	r0, #4294967295	; 0xffffffff
2fff9db2:	bd10      	pop	{r4, pc}

2fff9db4 <strchr>:
2fff9db4:	b2c9      	uxtb	r1, r1
2fff9db6:	4603      	mov	r3, r0
2fff9db8:	781a      	ldrb	r2, [r3, #0]
2fff9dba:	4618      	mov	r0, r3
2fff9dbc:	3301      	adds	r3, #1
2fff9dbe:	428a      	cmp	r2, r1
2fff9dc0:	d002      	beq.n	2fff9dc8 <strchr+0x14>
2fff9dc2:	2a00      	cmp	r2, #0
2fff9dc4:	d1f8      	bne.n	2fff9db8 <strchr+0x4>
2fff9dc6:	4610      	mov	r0, r2
2fff9dc8:	4770      	bx	lr

2fff9dca <strcmp>:
2fff9dca:	1e43      	subs	r3, r0, #1
2fff9dcc:	f813 0f01 	ldrb.w	r0, [r3, #1]!
2fff9dd0:	f811 2b01 	ldrb.w	r2, [r1], #1
2fff9dd4:	4290      	cmp	r0, r2
2fff9dd6:	d001      	beq.n	2fff9ddc <strcmp+0x12>
2fff9dd8:	1a80      	subs	r0, r0, r2
2fff9dda:	e001      	b.n	2fff9de0 <strcmp+0x16>
2fff9ddc:	2800      	cmp	r0, #0
2fff9dde:	d1f5      	bne.n	2fff9dcc <strcmp+0x2>
2fff9de0:	4770      	bx	lr

2fff9de2 <strlcpy>:
2fff9de2:	b510      	push	{r4, lr}
2fff9de4:	4604      	mov	r4, r0
2fff9de6:	b192      	cbz	r2, 2fff9e0e <strlcpy+0x2c>
2fff9de8:	440a      	add	r2, r1
2fff9dea:	460b      	mov	r3, r1
2fff9dec:	4618      	mov	r0, r3
2fff9dee:	3301      	adds	r3, #1
2fff9df0:	4293      	cmp	r3, r2
2fff9df2:	d103      	bne.n	2fff9dfc <strlcpy+0x1a>
2fff9df4:	2300      	movs	r3, #0
2fff9df6:	7023      	strb	r3, [r4, #0]
2fff9df8:	4603      	mov	r3, r0
2fff9dfa:	e009      	b.n	2fff9e10 <strlcpy+0x2e>
2fff9dfc:	f813 0c01 	ldrb.w	r0, [r3, #-1]
2fff9e00:	f804 0b01 	strb.w	r0, [r4], #1
2fff9e04:	2800      	cmp	r0, #0
2fff9e06:	d1f1      	bne.n	2fff9dec <strlcpy+0xa>
2fff9e08:	1a58      	subs	r0, r3, r1
2fff9e0a:	3801      	subs	r0, #1
2fff9e0c:	bd10      	pop	{r4, pc}
2fff9e0e:	460b      	mov	r3, r1
2fff9e10:	f813 2b01 	ldrb.w	r2, [r3], #1
2fff9e14:	2a00      	cmp	r2, #0
2fff9e16:	d1fb      	bne.n	2fff9e10 <strlcpy+0x2e>
2fff9e18:	e7f6      	b.n	2fff9e08 <strlcpy+0x26>

2fff9e1a <strlen>:
2fff9e1a:	4603      	mov	r3, r0
2fff9e1c:	461a      	mov	r2, r3
2fff9e1e:	3301      	adds	r3, #1
2fff9e20:	7811      	ldrb	r1, [r2, #0]
2fff9e22:	2900      	cmp	r1, #0
2fff9e24:	d1fa      	bne.n	2fff9e1c <strlen+0x2>
2fff9e26:	1a10      	subs	r0, r2, r0
2fff9e28:	4770      	bx	lr

2fff9e2a <strncmp>:
2fff9e2a:	4603      	mov	r3, r0
2fff9e2c:	4610      	mov	r0, r2
2fff9e2e:	b510      	push	{r4, lr}
2fff9e30:	b142      	cbz	r2, 2fff9e44 <strncmp+0x1a>
2fff9e32:	188c      	adds	r4, r1, r2
2fff9e34:	3b01      	subs	r3, #1
2fff9e36:	f813 0f01 	ldrb.w	r0, [r3, #1]!
2fff9e3a:	f811 2b01 	ldrb.w	r2, [r1], #1
2fff9e3e:	4290      	cmp	r0, r2
2fff9e40:	d001      	beq.n	2fff9e46 <strncmp+0x1c>
2fff9e42:	1a80      	subs	r0, r0, r2
2fff9e44:	bd10      	pop	{r4, pc}
2fff9e46:	2800      	cmp	r0, #0
2fff9e48:	d0fc      	beq.n	2fff9e44 <strncmp+0x1a>
2fff9e4a:	428c      	cmp	r4, r1
2fff9e4c:	d1f3      	bne.n	2fff9e36 <strncmp+0xc>
2fff9e4e:	2000      	movs	r0, #0
2fff9e50:	e7f8      	b.n	2fff9e44 <strncmp+0x1a>

2fff9e52 <strnlen>:
2fff9e52:	4603      	mov	r3, r0
2fff9e54:	2000      	movs	r0, #0
2fff9e56:	4288      	cmp	r0, r1
2fff9e58:	d100      	bne.n	2fff9e5c <strnlen+0xa>
2fff9e5a:	4770      	bx	lr
2fff9e5c:	5c1a      	ldrb	r2, [r3, r0]
2fff9e5e:	2a00      	cmp	r2, #0
2fff9e60:	d0fb      	beq.n	2fff9e5a <strnlen+0x8>
2fff9e62:	3001      	adds	r0, #1
2fff9e64:	e7f7      	b.n	2fff9e56 <strnlen+0x4>

2fff9e66 <strrchr>:
2fff9e66:	4603      	mov	r3, r0
2fff9e68:	b2c9      	uxtb	r1, r1
2fff9e6a:	2000      	movs	r0, #0
2fff9e6c:	b510      	push	{r4, lr}
2fff9e6e:	461c      	mov	r4, r3
2fff9e70:	f813 2b01 	ldrb.w	r2, [r3], #1
2fff9e74:	428a      	cmp	r2, r1
2fff9e76:	bf08      	it	eq
2fff9e78:	4620      	moveq	r0, r4
2fff9e7a:	2a00      	cmp	r2, #0
2fff9e7c:	d1f7      	bne.n	2fff9e6e <strrchr+0x8>
2fff9e7e:	bd10      	pop	{r4, pc}

2fff9e80 <build_message>:
2fff9e80:	7542 6c69 2074 203a 3332 313a 3a35 3030     Built : 23:15:00
2fff9e90:	202c 614d 2079 3731 3220 3230 0033          , May 17 2023.

2fff9e9e <version_string>:
2fff9e9e:	3276 322e 722d 2e31 2830 6564 7562 2967     v2.2-r1.0(debug)
2fff9eae:	333a 3836 6461 6136 6332 642d 7269 7974     :368ad6a2c-dirty
2fff9ebe:	6200 336c 2f32 7073 6d5f 6e69 732f 5f70     .bl32/sp_min/sp_
2fff9ece:	696d 5f6e 616d 6e69 632e 1400 5053 4d5f     min_main.c..SP_M
2fff9ede:	4e49 203a 7325 000a 5328 5f50 494d 3a4e     IN: %s..(SP_MIN:
2fff9eee:	4920 696e 6974 6c61 7a69 6e69 2067 7572      Initializing ru
2fff9efe:	746e 6d69 2065 6573 7672 6369 7365 000a     ntime services..
2fff9f0e:	5328 5f50 494d 3a4e 5020 6572 6170 6972     (SP_MIN: Prepari
2fff9f1e:	676e 6520 6978 2074 6f74 6e20 726f 616d     ng exit to norma
2fff9f2e:	206c 6f77 6c72 0a64 0000                    l world...

2fff9f38 <psci_args.7160>:
2fff9f38:	0106 000c 0000 0000 d2e0 2ffe 6f63 6d6d     .........../comm
2fff9f48:	6e6f 722f 6e75 6974 656d 735f 6376 632e     on/runtime_svc.c
2fff9f58:	0a00 6e49 6176 696c 2064 7572 746e 6d69     ..Invalid runtim
2fff9f68:	2065 6573 7672 6369 2065 6564 6373 6972     e service descri
2fff9f78:	7470 726f 2520 0a70 0a00 7245 6f72 2072     ptor %p...Error 
2fff9f88:	6e69 7469 6169 696c 697a 676e 7220 6e75     initializing run
2fff9f98:	6974 656d 7320 7265 6976 6563 2520 0a73     time service %s.
2fff9fa8:	1e00 6e55 6d69 6c70 6d65 6e65 6574 2064     ..Unimplemented 
2fff9fb8:	7453 6e61 6164 6472 5320 7265 6976 6563     Standard Service
2fff9fc8:	4320 6c61 3a6c 3020 2578 2078 000a 6573      Call: 0x%x ..se
2fff9fd8:	7672 6369 7365 732f 6474 735f 6376 732f     rvices/std_svc/s
2fff9fe8:	6474 735f 6376 735f 7465 7075 632e 7300     td_svc_setup.c.s
2fff9ff8:	6474 735f 6376 6c00 6269 652f 336c 725f     td_svc.lib/el3_r
2fffa008:	6e75 6974 656d 612f 7261 6863 3233 632f     untime/aarch32/c
2fffa018:	6e6f 6574 7478 6d5f 6d67 2e74 0063 696c     ontext_mgmt.c.li
2fffa028:	2f62 7370 6963 702f 6373 5f69 666f 2e66     b/psci/psci_off.
2fffa038:	0063 696c 2f62 7370 6963 702f 6373 5f69     c.lib/psci/psci_
2fffa048:	6e6f 632e 6c00 6269 702f 6373 2f69 7370     on.c.lib/psci/ps
2fffa058:	6963 735f 7375 6570 646e 632e 6c00 6269     ci_suspend.c.lib
2fffa068:	702f 6373 2f69 7370 6963 635f 6d6f 6f6d     /psci/psci_commo
2fffa078:	2e6e 0063 550a 656e 7078 6365 6574 2064     n.c..Unexpected 
2fffa088:	6661 6966 696e 7974 6920 666e 206f 7473     affinity info st
2fffa098:	7461 0065 5028 4353 2049 6f50 6577 2072     ate.(PSCI Power 
2fffa0a8:	6f44 616d 6e69 4d20 7061 0a3a 2800 2020     Domain Map:..(  
2fffa0b8:	6f44 616d 6e69 4e20 646f 2065 203a 654c     Domain Node : Le
2fffa0c8:	6576 206c 7525 202c 6170 6572 746e 6e5f     vel %u, parent_n
2fffa0d8:	646f 2065 6425 202c 7453 7461 2065 7325     ode %d, State %s
2fffa0e8:	2820 7830 7825 0a29 2800 2020 5043 2055      (0x%x)..(  CPU 
2fffa0f8:	6f4e 6564 3a20 4d20 4950 2044 7830 6c25     Node : MPID 0x%l
2fffa108:	786c 202c 6170 6572 746e 6e5f 646f 2065     lx, parent_node 
2fffa118:	6425 202c 7453 7461 2065 7325 2820 7830     %d, State %s (0x
2fffa128:	7825 0a29 5200 5445 4e45 4954 4e4f 4f00     %x)..RETENTION.O
2fffa138:	4646 0000 0000 0000                         FF......

2fffa140 <psci_state_type_str.7417>:
2fffa140:	a134 2fff a12d 2fff a137 2fff 696c 2f62     4../-../7../lib/
2fffa150:	7370 6963 702f 6373 5f69 616d 6e69 632e     psci/psci_main.c
2fffa160:	0a00 6e49 6176 696c 2064 6174 6772 7465     ..Invalid target
2fffa170:	7020 776f 7265 6c20 7665 6c65 6620 726f      power level for
2fffa180:	7320 7375 6570 646e 6f20 6570 6172 6974      suspend operati
2fffa190:	6e6f 000a 551e 696e 706d 656c 656d 746e     on...Unimplement
2fffa1a0:	6465 5020 4353 2049 6143 6c6c 203a 7830     ed PSCI Call: 0x
2fffa1b0:	7825 000a 0000 696c 2f62 7370 6963 702f     %x....lib/psci/p
2fffa1c0:	6373 5f69 6573 7574 2e70 0063 696c 2f62     sci_setup.c.lib/
2fffa1d0:	7370 6963 702f 6373 5f69 7973 7473 6d65     psci/psci_system
2fffa1e0:	6f5f 6666 632e 6c00 6269 702f 6373 2f69     _off.c.lib/psci/
2fffa1f0:	7370 6963 6d5f 6d65 705f 6f72 6574 7463     psci_mem_protect
2fffa200:	632e 6c00 6269 6c2f 636f 736b 622f 6b61     .c.lib/locks/bak
2fffa210:	7265 2f79 6162 656b 7972 6c5f 636f 5f6b     ery/bakery_lock_
2fffa220:	6f6e 6d72 6c61 632e 4800 4953 4300 4953     normal.c.HSI.CSI
2fffa230:	0a00 7325 4320 6c61 6269 6172 6974 6e6f     ..%s Calibration
2fffa240:	3a20 4620 6572 2071 6c25 2c75 7420 6972      : Freq %lu, tri
2fffa250:	206d 6925 000a 7473 682c 6973 632d 6c61     m %i..st,hsi-cal
2fffa260:	7300 2c74 7363 2d69 6163 006c 7473 632c     .st,csi-cal.st,c
2fffa270:	6c61 732d 6365 6d00 7563 735f 7665 6400     al-sec.mcu_sev.d
2fffa280:	6972 6576 7372 732f 2f74 7465 707a 2f63     rivers/st/etzpc/
2fffa290:	7465 707a 2e63 0063 7473 732c 6d74 3233     etzpc.c.st,stm32
2fffa2a0:	652d 7a74 6370 7300 2c74 6564 7063 6f72     -etzpc.st,decpro
2fffa2b0:	0074 4e28 206f 5445 505a 2043 6f63 666e     t.(No ETZPC conf
2fffa2c0:	6769 7275 7461 6f69 206e 6e69 4420 2c54     iguration in DT,
2fffa2d0:	7520 6573 6420 6665 7561 746c 000a 490a      use default...I
2fffa2e0:	766e 6c61 6469 4420 4345 5250 544f 2520     nvalid DECPROT %
2fffa2f0:	0064 520a 474e 6e20 696f 6573 000a 7473     d..RNG noise..st
2fffa300:	732c 6d74 3233 722d 676e 6400 6972 6576     ,stm32-rng.drive
2fffa310:	7372 732f 2f74 6e72 2f67 7473 336d 5f32     rs/st/rng/stm32_
2fffa320:	6e72 2e67 0063 7264 7669 7265 2f73 7473     rng.c.drivers/st
2fffa330:	722f 6374 732f 6d74 3233 725f 6374 632e     /rtc/stm32_rtc.c
2fffa340:	7300 2c74 7473 336d 6d32 3170 722d 6374     .st,stm32mp1-rtc
	...

2fffa351 <month_len.6669>:
2fffa351:	1c1f 1e1f 1e1f 1f1f 1f1e 1f1e 7264 7669     ............driv
2fffa361:	7265 2f73 7473 742f 6d61 6570 2f72 7473     ers/st/tamper/st
2fffa371:	336d 5f32 6174 706d 632e 0a00 6341 6974     m32_tamp.c..Acti
2fffa381:	6576 7420 6d61 6570 3a72 5320 4545 2044     ve tamper: SEED 
2fffa391:	6f6e 2074 6e69 7469 6169 696c 657a 0a64     not initialized.
2fffa3a1:	2800 6154 706d 7265 4520 6576 746e 4f20     .(Tamper Event O
2fffa3b1:	6363 7275 6572 0a64 2800 6144 6574 3a20     ccurred..(Date :
2fffa3c1:	2520 2f75 7525 200a 2009 6954 656d 3a20      %u/%u. . Time :
2fffa3d1:	2520 3a75 7525 253a 0a75 7300 2c74 7473      %u:%u:%u..st,st
2fffa3e1:	336d 2d32 6174 706d 0a00 6154 706d 7265     m32-tamp..Tamper
2fffa3f1:	4920 2050 6f64 7365 276e 2074 7573 7070      IP doesn't supp
2fffa401:	726f 2074 7274 7375 7a74 6e6f 0065 7473     ort trustzone.st
2fffa411:	6f2c 7475 2d33 6370 3331 7700 6b61 7565     ,out3-pc13.wakeu
2fffa421:	2d70 6f73 7275 6563 1e00 6954 656d 2072     p-source..Timer 
2fffa431:	7369 6e20 746f 6120 6363 7275 7461 2065     is not accurate 
2fffa441:	6e65 756f 6867 6620 726f 6320 6c61 6269     enough for calib
2fffa451:	6172 6974 6e6f 000a 7473 732c 6d74 3233     ration..st,stm32
2fffa461:	742d 6d69 7265 0073 251e 3a73 4e20 206f     -timers..%s: No 
2fffa471:	4954 454d 2052 6f66 6e75 0a64 7300 2c74     TIMER found..st,
2fffa481:	7368 2d69 6163 2d6c 6e69 7570 0074 7473     hsi-cal-input.st
2fffa491:	632c 6973 632d 6c61 692d 706e 7475           ,csi-cal-input.

2fffa4a0 <__func__.6534>:
2fffa4a0:	7473 336d 5f32 6974 656d 5f72 6567 5f74     stm32_timer_get_
2fffa4b0:	7464 6e5f 646f 0065 540a 6d61 6570 2072     dt_node..Tamper 
2fffa4c0:	7325 6f20 6363 7275 0a73 0a00 5453 334d     %s occurs...STM3
2fffa4d0:	4d32 3150 495f 5152 415f 4958 5245 4952     2MP1_IRQ_AXIERRI
2fffa4e0:	5152 6720 6e65 7265 7461 6465 000a 490a     RQ generated...I
2fffa4f0:	5152 415f 4958 5245 4952 5152 6820 6e61     RQ_AXIERRIRQ han
2fffa500:	6c64 2065 6163 6c6c 7720 6f2f 6120 796e     dle call w/o any
2fffa510:	6620 616c 2067 6573 2174 0a21 0a00 6f4e      flag set!!...No
2fffa520:	4920 2054 6168 646e 656c 2072 6e69 4120      IT handler in A
2fffa530:	4d52 7420 637a 3034 2030 7264 7669 7265     RM tzc400 driver
2fffa540:	000a 490a 5152 415f 4958 5245 4952 5152     ...IRQ_AXIERRIRQ
2fffa550:	6320 7561 6573 6320 6e61 7427 6220 2065      cause can't be 
2fffa560:	6564 6574 7463 6465 0a00 4553 5543 4552     detected..SECURE
2fffa570:	4920 2054 6168 646e 656c 2072 6f6e 2074      IT handler not 
2fffa580:	6564 6966 656e 6620 726f 6920 2074 203a     define for it : 
2fffa590:	7525 000a 6c70 7461 732f 2f74 7473 336d     %u..plat/st/stm3
2fffa5a0:	6d32 3170 732f 5f70 696d 2f6e 7073 6d5f     2mp1/sp_min/sp_m
2fffa5b0:	6e69 735f 7465 7075 632e 1e00 5452 2043     in_setup.c..RTC 
2fffa5c0:	7264 7669 7265 6920 696e 2074 7265 6f72     driver init erro
2fffa5d0:	2072 6925 000a 521e 474e 6420 6972 6576     r %i...RNG drive
2fffa5e0:	2072 6e69 7469 6520 7272 726f 2520 0a69     r init error %i.
2fffa5f0:	7700 6b61 7565 0070 690a 7172 6e5f 6d75     .wakeup..irq_num
2fffa600:	3d20 2520 0a64 5200 4354 7020 776f 7265      = %d..RTC power
2fffa610:	6420 6d6f 6961 006e 6554 706d 7265 7461      domain.Temperat
2fffa620:	7275 2065 6f6d 696e 6f74 6972 676e 4c00     ure monitoring.L
2fffa630:	4553 6d20 6e6f 7469 726f 6e69 0067 5348     SE monitoring.HS
2fffa640:	2045 6f6d 696e 6f74 6972 676e 5200 4354     E monitoring.RTC
2fffa650:	6320 6c61 6e65 6164 2072 766f 7265 6c66      calendar overfl
2fffa660:	776f 4d00 6e6f 746f 6e6f 6369 6320 756f     ow.Monotonic cou
2fffa670:	746e 7265 0000 0000                         nter....

2fffa678 <tamper_name>:
2fffa678:	a607 2fff a618 2fff a62f 2fff a63e 2fff     .../...//../>../
2fffa688:	a64d 2fff a663 2fff 6c70 7461 732f 2f74     M../c../plat/st/
2fffa698:	7473 336d 6d32 3170 732f 6d74 3233 706d     stm32mp1/stm32mp
2fffa6a8:	5f31 6f6c 5f77 6f70 6577 2e72 0063 441e     1_low_power.c..D
2fffa6b8:	5244 6320 6e61 7427 6220 2065 6573 2074     DR can't be set 
2fffa6c8:	6e69 5320 6c65 2d66 6572 7266 7365 2068     in Self-refresh 
2fffa6d8:	6f6d 6564 000a 706c 732d 6f74 0070 706c     mode..lp-stop.lp
2fffa6e8:	766c 732d 6f74 0070 7473 6e61 6264 2d79     lv-stop.standby-
2fffa6f8:	6464 2d72 7273 7300 6174 646e 7962 642d     ddr-sr.standby-d
2fffa708:	7264 6f2d 6666 0000                         dr-off..

2fffa710 <config_pwr>:
2fffa710:	0000 0000 0200 0000 0000 0000 0000 0000     ................
2fffa720:	0208 0000 0000 0000 0001 0000 0208 0000     ................
2fffa730:	a6de 2fff 0007 0000 0208 0000 a6e6 2fff     .../.........../
2fffa740:	0000 0000 0209 0000 a6f0 2fff 0000 0000     .........../....
2fffa750:	0209 0000 a6ff 2fff 0000 0000 0000 0000     ......./........
2fffa760:	a6ff 2fff 6c70 7461 732f 2f74 7473 336d     .../plat/st/stm3
2fffa770:	6d32 3170 732f 6d74 3233 706d 5f31 6d70     2mp1/stm32mp1_pm
2fffa780:	632e 0000                                   .c..

2fffa784 <stm32_psci_ops>:
2fffa784:	057d 2fff 04f9 2fff 03f1 2fff 0000 0000     }../.../.../....
2fffa794:	0451 2fff 04e5 2fff 0000 0000 05b9 2fff     Q../.../......./
2fffa7a4:	04a5 2fff 0469 2fff 043d 2fff 03f3 2fff     .../i../=../.../
2fffa7b4:	0411 2fff 0435 2fff 0000 0000 0000 0000     .../5../........
2fffa7c4:	0429 2fff 0000 0000 0000 0000 0000 0000     )../............
2fffa7d4:	0000 0000 7973 7473 6d65 6f5f 6666 735f     ....system_off_s
2fffa7e4:	636f 6d5f 646f 0065 4e0a 646f 2065 7325     oc_mode..Node %s
2fffa7f4:	6e20 746f 6620 756f 646e 000a 7473 732c      not found..st,s
2fffa804:	6d74 3233 706d 2c31 7770 2d72 6572 0067     tm32mp1,pwr-reg.
2fffa814:	7973 7473 6d65 735f 7375 6570 646e 735f     system_suspend_s
2fffa824:	7075 6f70 7472 6465 735f 636f 6d5f 646f     upported_soc_mod
2fffa834:	7365 0a00 5750 2052 5444 000a 490a 766e     es..PWR DT...Inv
2fffa844:	6c61 6469 6d20 646f 0a65 7000 616c 2f74     alid mode..plat/
2fffa854:	7473 732f 6d74 3233 706d 2f31 7473 336d     st/stm32mp1/stm3
2fffa864:	6d32 3170 705f 776f 7265 635f 6e6f 6966     2mp1_power_confi
2fffa874:	2e67 0063 490a 766e 6c61 6469 4920 2044     g.c..Invalid ID 
2fffa884:	7525 7000 616c 2f74 7473 732f 6d74 3233     %u.plat/st/stm32
2fffa894:	706d 2f31 7473 336d 6d32 3170 735f 6168     mp1/stm32mp1_sha
2fffa8a4:	6572 5f64 6572 6f73 7275 6563 2e73 0063     red_resources.c.
2fffa8b4:	490a 766e 6c61 6469 4720 4950 204f 6970     .Invalid GPIO pi
2fffa8c4:	206e 7525 202c 7525 7020 6e69 7328 2029     n %u, %u pin(s) 
2fffa8d4:	7661 6961 616c 6c62 0a65 2800 5445 505a     available..(ETZP
2fffa8e4:	3a43 2520 2073 2528 2964 6320 756f 646c     C: %s (%d) could
2fffa8f4:	6220 2065 6f6e 206e 6573 7563 6572 000a      be non secure..
2fffa904:	450a 5a54 4350 203a 7325 2820 6425 2029     .ETZPC: %s (%d) 
2fffa914:	7865 6570 7463 6465 7320 6365 7275 2065     expected secure 
2fffa924:	7562 2074 4544 5043 4f52 2054 203d 6425     but DECPROT = %d
2fffa934:	000a 470a 4950 204f 6162 6b6e 2520 2075     ...GPIO bank %u 
2fffa944:	6163 6e6e 746f 6220 2065 6573 7563 6572     cannot be secure
2fffa954:	0a64 6e00 6e6f 7320 6365 7275 0065 6f6e     d..non secure.no
2fffa964:	2074 6573 0074 6553 7563 6572 2800 7473     t set.Secure.(st
2fffa974:	336d 6d32 2070 7325 2820 7525 3a29 2520     m32mp %s (%u): %
2fffa984:	0a73 0a00 4352 2043 7325 4d20 4b43 5250     s...RCC %s MCKPR
2fffa994:	544f 2520 2073 6e61 2064 7325 2820 7525     OT %s and %s (%u
2fffa9a4:	2029 6573 7563 6572 000a 5749 4744 0031     ) secure..IWDG1.
2fffa9b4:	4155 5452 0031 5053 3649 4900 4332 0034     UART1.SPI6.I2C4.
2fffa9c4:	4e52 3147 4800 5341 3148 4300 5952 3150     RNG1.HASH1.CRYP1
2fffa9d4:	4900 4332 0036 5453 4547 004e 4b42 5350     .I2C6.STGEN.BKPS
2fffa9e4:	4152 004d 4444 4352 5254 004c 4444 5052     RAM.DDRCTRL.DDRP
2fffa9f4:	5948 4700 4950 5a4f 0030 5047 4f49 315a     HY.GPIOZ0.GPIOZ1
2fffaa04:	4700 4950 5a4f 0032 5047 4f49 335a 4700     .GPIOZ2.GPIOZ3.G
2fffaa14:	4950 5a4f 0034 5047 4f49 355a 4700 4950     PIOZ4.GPIOZ5.GPI
2fffaa24:	5a4f 0036 5047 4f49 375a 4d00 5543 4d00     OZ6.GPIOZ7.MCU.M
2fffaa34:	4d44 0041 5452 0043 5355 5241 3154 5000     DMA.RTC.USART1.P
2fffaa44:	4c4c 0033                                   LL3.

2fffaa48 <shres2decprot_tbl>:
2fffaa48:	000c 0000 0002 0000 a9ae 2fff 0012 0000     .........../....
2fffaa58:	0003 0000 a9b4 2fff 0011 0000 0004 0000     ......./........
2fffaa68:	a9ba 2fff 000a 0000 0005 0000 a9bf 2fff     .../.........../
2fffaa78:	000f 0000 0007 0000 a9c4 2fff 0009 0000     .........../....
2fffaa88:	0008 0000 a9c9 2fff 0000 0000 0009 0000     ......./........
2fffaa98:	a9cf 2fff 000b 0000 000c 0000 a9d5 2fff     .../.........../
2fffaaa8:	ffff ffff 0000 0000 a9da 2fff ffff ffff     .........../....
2fffaab8:	0001 0000 a9e0 2fff ffff ffff 000a 0000     ......./........
2fffaac8:	a9e8 2fff ffff ffff 000b 0000 a9f0 2fff     .../.........../

2fffaad8 <shres2str_id_tbl>:
2fffaad8:	a9cf 2fff a9f7 2fff a9fe 2fff aa05 2fff     .../.../.../.../
2fffaae8:	aa0c 2fff aa13 2fff aa1a 2fff aa21 2fff     .../.../.../!../
2fffaaf8:	aa28 2fff a9c9 2fff a9bf 2fff a9d5 2fff     (../.../.../.../
2fffab08:	a9ae 2fff aa2f 2fff aa33 2fff a9c4 2fff     ...//../3../.../
2fffab18:	aa38 2fff a9ba 2fff aa3c 2fff aa43 2fff     8../.../<../C../

2fffab28 <stm32mp1_power_domain_tree_desc>:
2fffab28:	0201 7264 7669 7265 2f73 7261 2f6d 6967     ..drivers/arm/gi
2fffab38:	2f63 3276 672f 6369 3276 685f 6c65 6570     c/v2/gicv2_helpe
2fffab48:	7372 632e 6400 6972 6576 7372 612f 6d72     rs.c.drivers/arm
2fffab58:	672f 6369 762f 2f32 6967 7663 5f32 616d     /gic/v2/gicv2_ma
2fffab68:	6e69 632e 2800 5241 204d 4947 7643 2032     in.c.(ARM GICv2 
2fffab78:	7264 7669 7265 6920 696e 6974 6c61 7a69     driver initializ
2fffab88:	6465 000a 7261 2c6d 6f63 7472 7865 612d     ed..arm,cortex-a
2fffab98:	2d37 6967 0063 6923 746e 7265 7572 7470     7-gic.#interrupt
2fffaba8:	632d 6c65 736c 6900 746e 7265 7572 7470     -cells.interrupt
2fffabb8:	702d 7261 6e65 0074 6573 7563 6572 692d     -parent.secure-i
2fffabc8:	746e 7265 7572 7470 6e2d 6d61 7365 0000     nterrupt-names..

2fffabd8 <stm32_interrupt_props>:
2fffabd8:	001d 0000 00f4 0000 0024 0000 0009 0020     ........$..... .
2fffabe8:	000a 0020 000b 0020 000c 0020 000d 0020     .. ... ... ... .
2fffabf8:	000f 0020 0008 0020 000e 0020 6c70 7461     .. ... ... .plat
2fffac08:	632f 6d6f 6f6d 2f6e 6c70 7461 705f 6373     /common/plat_psc
2fffac18:	5f69 6f63 6d6d 6e6f 632e 1e00 6e55 6d69     i_common.c..Unim
2fffac28:	6c70 6d65 6e65 6574 2064 5453 334d 4d32     plemented STM32M
2fffac38:	3150 5320 7265 6976 6563 4320 6c61 3a6c     P1 Service Call:
2fffac48:	3020 2578 0a78 7300 6d74 3233 706d 5f31      0x%x..stm32mp1_
2fffac58:	6973 5f70 7673 0063 7264 7669 7265 2f73     sip_svc.drivers/
2fffac68:	7473 732f 6d63 2d69 736d 2f67 6162 6573     st/scmi-msg/base
2fffac78:	632e 0000                                   .c..

2fffac7c <scmi_base_handler_table>:
2fffac7c:	1c6d 2fff 1c95 2fff 1c29 2fff 1d19 2fff     m../.../)../.../
2fffac8c:	1cc5 2fff 1c05 2fff 1b79 2fff 7264 7669     .../.../y../driv
2fffac9c:	7265 2f73 7473 732f 6d63 2d69 736d 2f67     ers/st/scmi-msg/
2fffacac:	6c63 636f 2e6b 0063                         clock.c.

2fffacb4 <scmi_clock_handler_table>:
2fffacb4:	1de1 2fff 1e39 2fff 1d9d 2fff 2015 2fff     .../9../.../. ./
2fffacc4:	1e6d 2fff 1fc9 2fff 1f69 2fff 20a5 2fff     m../.../i../. ./
2fffacd4:	7264 7669 7265 2f73 7473 732f 6d63 2d69     drivers/st/scmi-
2ffface4:	736d 2f67 6e65 7274 2e79 0063 410a 6567     msg/entry.c..Age
2fffacf4:	746e 2520 2075 7250 746f 636f 6c6f 3020     nt %u Protocol 0
2fffad04:	2578 2078 654d 7373 6761 2065 7830 7825     x%x Message 0x%x
2fffad14:	203a 6f6e 2074 7573 7070 726f 6574 0064     : not supported.
2fffad24:	7264 7669 7265 2f73 7473 732f 6d63 2d69     drivers/st/scmi-
2fffad34:	736d 2f67 6572 6573 5f74 6f64 616d 6e69     msg/reset_domain
2fffad44:	632e 0000                                   .c..

2fffad48 <scmi_rd_handler_table>:
2fffad48:	2201 2fff 2229 2fff 21bd 2fff 2259 2fff     ."./)"./.!./Y"./
2fffad58:	22ed 2fff 7264 7669 7265 2f73 7473 732f     ."./drivers/st/s
2fffad68:	6d63 2d69 736d 2f67 6d73 2e74 0063 6c70     cmi-msg/smt.c.pl
2fffad78:	7461 732f 2f74 7473 336d 6d32 3170 732f     at/st/stm32mp1/s
2fffad88:	6d74 3233 706d 5f31 6373 696d 632e 0a00     tm32mp1_scmi.c..
2fffad98:	6e49 6176 696c 2064 4353 494d 6320 6f6c     Invalid SCMI clo
2fffada8:	6b63 6e20 6d61 0a65 0a00 6e49 6176 696c     ck name...Invali
2fffadb8:	2064 4353 494d 7220 7365 7465 6420 6d6f     d SCMI reset dom
2fffadc8:	6961 206e 616e 656d 000a 7073 3669 6900     ain name..spi6.i
2fffadd8:	6332 0034 3269 3663 7500 6173 7472 0031     2c4.i2c6.usart1.
2fffade8:	7473 6567 006e 7067 6f69 007a 7263 7079     stgen.gpioz.cryp
2fffadf8:	0031 6168 6873 0031 6e72 3167 6d00 6d64     1.hash1.rng1.mdm
2fffae08:	0061 6c70 336c 715f 7000 6c6c 5f33 0072     a.pll3_q.pll3_r.
2fffae18:	6b63 6d5f 7563 6300 5f6b 7368 0065 6b63     ck_mcu.ck_hse.ck
2fffae28:	685f 6973 6300 5f6b 7363 0069 6b63 6c5f     _hsi.ck_csi.ck_l
2fffae38:	6573 6300 5f6b 736c 0069 6c70 326c 715f     se.ck_lsi.pll2_q
2fffae48:	7000 6c6c 5f32 0072 6b63 6d5f 7570 6300     .pll2_r.ck_mpu.c
2fffae58:	5f6b 7861 0069 3269 3463 6b5f 6900 6332     k_axi.i2c4_k.i2c
2fffae68:	5f36 006b 7769 6764 0031 6e72 3167 6b5f     6_k.iwdg1.rng1_k
2fffae78:	6300 5f6b 7472 0063 7472 6163 6270 7300     .ck_rtc.rtcapb.s
2fffae88:	6970 5f36 006b 7375 7261 3174 6b5f 0000     pi6_k.usart1_k..

2fffae98 <agent_resources>:
2fffae98:	d22c 2fff 0015 0000 d328 2fff 000b 0000     ,../....(../....
2fffaea8:	d380 2fff 0003 0000 0000 0000 0000 0000     .../............

2fffaeb8 <plat_protocol_list>:
2fffaeb8:	1614                                         ...

2fffaebb <sub_vendor>:
	...

2fffaebc <vendor>:
2fffaebc:	5453 6300 6d6f 6f6d 2f6e 6674 6c5f 676f     ST.common/tf_log
2fffaecc:	632e 6400 6972 6576 7372 632f 6e6f 6f73     .c.drivers/conso
2fffaedc:	656c 6d2f 6c75 6974 635f 6e6f 6f73 656c     le/multi_console
2fffaeec:	632e 4500 5252 524f 203a 2020 4e00 544f     .c.ERROR:   .NOT
2fffaefc:	4349 3a45 2020 5700 5241 494e 474e 203a     ICE:  .WARNING: 
2fffaf0c:	4900 464e 3a4f 2020 2020 5600 5245 4f42     .INFO:    .VERBO
2fffaf1c:	4553 203a 0000 0000                         SE: ....

2fffaf24 <plat_prefix_str>:
2fffaf24:	aeef 2fff aef9 2fff af03 2fff af0d 2fff     .../.../.../.../
2fffaf34:	af17 2fff 6c70 7461 732f 2f74 6f63 6d6d     .../plat/st/comm
2fffaf44:	6e6f 732f 6d74 3233 706d 635f 6d6f 6f6d     on/stm32mp_commo
2fffaf54:	2e6e 0063 6c70 7461 732f 2f74 7473 336d     n.c.plat/st/stm3
2fffaf64:	6d32 3170 732f 6d74 3233 706d 5f31 7270     2mp1/stm32mp1_pr
2fffaf74:	7669 7461 2e65 0063 420a 4553 3a43 6920     ivate.c..BSEC: i
2fffaf84:	7864 253d 2064 6552 6461 4520 7272 726f     dx=%d Read Error
2fffaf94:	000a 420a 4553 3a43 2520 2073 6552 6461     ...BSEC: %s Read
2fffafa4:	4520 7272 726f 000a 5528 6573 6420 6665      Error..(Use def
2fffafb4:	7561 746c 6320 6968 2070 4449 202c 6564     ault chip ID, de
2fffafc4:	7562 2067 6964 6173 6c62 6465 000a 6170     bug disabled..pa
2fffafd4:	7472 6e5f 6d75 6562 5f72 746f 0070 7768     rt_number_otp.hw
2fffafe4:	5f32 746f 0070 0000 0000 0000               2_otp.......

2fffaff0 <stm32mp1_mmap>:
2fffaff0:	0000 2ffc 0000 0000 0000 2ffc f000 0003     .../......./....
2fffb000:	002a 0000 0000 4000 f000 2fff 0000 0000     *......@.../....
2fffb010:	f000 2fff 1000 0000 0038 0000 0000 4000     .../....8......@
2fffb020:	0000 4000 0000 0000 0000 4000 0000 4000     ...@.......@...@
2fffb030:	0028 0000 0000 4000 0000 8000 0000 0000     (......@........
2fffb040:	0000 8000 0000 4000 0028 0000 0000 4000     .......@(......@
	...

2fffb068 <tzc_source_ip>:
2fffb068:	0c00 0000 00a7 0000 0060 0000 0cc5 0000     ........`.......
2fffb078:	0065 0000 0060 0000 0cd8 0000 006f 0000     e...`.......o...
2fffb088:	0060 0000 0cd0 0000 0076 0000 0060 0000     `.......v...`...
2fffb098:	0cd1 0000 0077 0000 0060 0000 0d00 0000     ....w...`.......
2fffb0a8:	0064 0000 0060 0000 4cc8 0000 00a6 0000     d...`....L......
2fffb0b8:	0055 0000 4cd0 0000 0078 0000 0056 0000     U....L..x...V...
2fffb0c8:	0cca 0000 0069 0000 005e 0000 4cc0 0000     ....i...^....L..
2fffb0d8:	0047 0000 0058 0000 4cc1 0000 0048 0000     G...X....L..H...
2fffb0e8:	0059 0000 696c 2f62 6c78 7461 745f 6261     Y...lib/xlat_tab
2fffb0f8:	656c 5f73 3276 612f 7261 6863 3233 782f     les_v2/aarch32/x
2fffb108:	616c 5f74 6174 6c62 7365 615f 6372 2e68     lat_tables_arch.
2fffb118:	0063 696c 2f62 6c78 7461 745f 6261 656c     c.lib/xlat_table
2fffb128:	5f73 3276 782f 616c 5f74 6174 6c62 7365     s_v2/xlat_tables
2fffb138:	635f 6e6f 6574 7478 632e 6c00 6269 782f     _context.c.lib/x
2fffb148:	616c 5f74 6174 6c62 7365 765f 2f32 6c78     lat_tables_v2/xl
2fffb158:	7461 745f 6261 656c 5f73 6f63 6572 632e     at_tables_core.c
2fffb168:	0a00 6d6d 7061 615f 6464 725f 6765 6f69     ..mmap_add_regio
2fffb178:	5f6e 6863 6365 286b 2029 6166 6c69 6465     n_check() failed
2fffb188:	202e 7265 6f72 2072 6425 000a 4e0a 746f     . error %d...Not
2fffb198:	6520 6f6e 6775 2068 656d 6f6d 7972 7420      enough memory t
2fffb1a8:	206f 616d 2070 6572 6967 6e6f 0a3a 5620     o map region:. V
2fffb1b8:	3a41 7830 6c25 2078 5020 3a41 7830 6c25     A:0x%lx  PA:0x%l
2fffb1c8:	786c 2020 6973 657a 303a 2578 787a 2020     lx  size:0x%zx  
2fffb1d8:	7461 7274 303a 2578 0a78 6400 6972 6576     attr:0x%x..drive
2fffb1e8:	7372 612f 6d72 742f 637a 742f 637a 3034     rs/arm/tzc/tzc40
2fffb1f8:	2e30 0063 540a 435a 342d 3030 3a20 5720     0.c..TZC-400 : W
2fffb208:	6f72 676e 6420 7665 6369 2065 4449 2820     rong device ID (
2fffb218:	7830 7825 2e29 000a 540a 435a 342d 3030     0x%x)....TZC-400
2fffb228:	203a 6946 746c 7265 2520 2064 6147 6574     : Filter %d Gate
2fffb238:	656b 7065 7265 6120 726c 6165 7964 6520     keeper already e
2fffb248:	616e 6c62 6465 000a 450a 7272 726f 6e20     nabled...Error n
2fffb258:	206f 5449 7020 6e65 6964 676e 0021 490a     o IT pending!..I
2fffb268:	6c6c 6765 6c61 6120 6363 7365 2073 6f74     llegal access to
2fffb278:	3020 2578 786c 6920 206e 0a3a 0a00 4e09      0x%lx in :....N
2fffb288:	6e6f 532d 6365 7275 0a65 0a00 5309 6365     on-Secure....Sec
2fffb298:	7275 0a65 0a00 5009 6972 6976 656c 6567     ure....Privilege
2fffb2a8:	000a 090a 6e55 7270 7669 6c69 6765 0a65     ....Unprivilege.
2fffb2b8:	0a00 5209 6165 0a64 0a00 5709 6972 6574     ...Read....Write
2fffb2c8:	000a 7264 7669 7265 2f73 6564 616c 5f79     ..drivers/delay_
2fffb2d8:	6974 656d 2f72 6564 616c 5f79 6974 656d     timer/delay_time
2fffb2e8:	2e72 0063 7264 7669 7265 2f73 6564 616c     r.c.drivers/dela
2fffb2f8:	5f79 6974 656d 2f72 6567 656e 6972 5f63     y_timer/generic_
2fffb308:	6564 616c 5f79 6974 656d 2e72 0063 7264     delay_timer.c.dr
2fffb318:	7669 7265 2f73 7473 622f 6573 2f63 7362     ivers/st/bsec/bs
2fffb328:	6365 2e32 0063 7473 732c 6d74 3233 6e2d     ec2.c.st,stm32-n
2fffb338:	6d76 6d65 6c2d 7961 756f 0074 766e 656d     vmem-layout.nvme
2fffb348:	2d6d 6563 6c6c 6e2d 6d61 7365 6e00 6d76     m-cell-names.nvm
2fffb358:	6d65 632d 6c65 736c 0a00 614d 666c 726f     em-cells..Malfor
2fffb368:	656d 2064 766e 656d 5f6d 616c 6f79 7475     med nvmem_layout
2fffb378:	6e20 646f 3a65 6920 6e67 726f 6465 000a      node: ignored..
2fffb388:	4d0a 7369 6c61 6769 656e 2064 766e 656d     .Misaligned nvme
2fffb398:	5f6d 616c 6f79 7475 6520 656c 656d 746e     m_layout element
2fffb3a8:	203a 6769 6f6e 6572 0a64 0a00 5342 4345     : ignored...BSEC
2fffb3b8:	203a 7525 5320 6974 6b63 2d79 6572 6461     : %u Sticky-read
2fffb3c8:	6220 7469 7220 6165 2064 7245 6f72 2072      bit read Error 
2fffb3d8:	6925 000a 7473 732c 6d74 3233 706d 3531     %i..st,stm32mp15
2fffb3e8:	622d 6573 0063 4f1e 5054 6320 6f72 7373     -bsec..OTP cross
2fffb3f8:	7365 4c20 776f 7265 552f 7070 7265 6220     es Lower/Upper b
2fffb408:	756f 646e 7261 0a79 7300 2c74 6f6e 2d6e     oundary..st,non-
2fffb418:	6573 7563 6572 6f2d 7074 0a00 6e55 6c61     secure-otp..Unal
2fffb428:	6769 656e 2064 6f6e 2d6e 6573 7563 6572     igned non-secure
2fffb438:	4f20 5054 000a 420a 4553 3a43 2520 2075      OTP...BSEC: %u 
2fffb448:	7453 6369 796b 772d 6972 6574 6220 7469     Sticky-write bit
2fffb458:	7220 6165 2064 7245 6f72 2072 6925 000a      read Error %i..
2fffb468:	420a 4553 3a43 2520 2075 7453 6369 796b     .BSEC: %u Sticky
2fffb478:	702d 6f72 2067 6962 2074 6572 6461 4520     -prog bit read E
2fffb488:	7272 726f 2520 0a69 0a00 5342 4345 203a     rror %i...BSEC: 
2fffb498:	7525 7020 7265 616d 656e 746e 6220 7469     %u permanent bit
2fffb4a8:	7220 6165 2064 7245 6f72 2072 6925 000a      read Error %i..
2fffb4b8:	421e 4553 3a43 4f20 5054 6c20 636f 656b     .BSEC: OTP locke
2fffb4c8:	2c64 7020 6f72 2067 6977 6c6c 6220 2065     d, prog will be 
2fffb4d8:	6769 6f6e 6572 0a64 1e00 5342 4345 203a     ignored...BSEC: 
2fffb4e8:	5047 4f4c 4b43 6120 7463 7669 7461 6465     GPLOCK activated
2fffb4f8:	202c 7270 676f 7720 6c69 206c 6562 6920     , prog will be i
2fffb508:	6e67 726f 6465 000a 632f 6f6c 6b63 0073     gnored../clocks.
2fffb518:	6c63 636f 2d6b 7266 7165 6575 636e 0079     clock-frequency.
2fffb528:	7473 732c 6d74 3233 706d 2d31 6372 0063     st,stm32mp1-rcc.
2fffb538:	6c63 636f 2d6b 616e 656d 0073 500a 4c4c     clock-names..PLL
2fffb548:	6425 7320 6f74 2070 6166 6c69 6465 4020     %d stop failed @
2fffb558:	3020 2578 786c 203a 7830 7825 000a 250a      0x%lx: 0x%x...%
2fffb568:	3a73 6320 6b6c 6920 2064 6425 6e20 746f     s: clk id %d not
2fffb578:	6620 756f 646e 000a 430a 6f6c 6b63 2520      found...Clock %
2fffb588:	2064 6163 276e 2074 6562 6520 616e 6c62     d can't be enabl
2fffb598:	6465 000a 430a 6f6c 6b63 2520 2064 6163     ed...Clock %d ca
2fffb5a8:	276e 2074 6562 6420 7369 6261 656c 0a64     n't be disabled.
2fffb5b8:	0a00 4c43 444b 5649 2520 2078 7473 7261     ..CLKDIV %x star
2fffb5c8:	2074 6166 6c69 6465 4020 3020 2578 786c     t failed @ 0x%lx
2fffb5d8:	203a 7830 7825 000a 430a 4b4c 5253 2043     : 0x%x...CLKSRC 
2fffb5e8:	7825 7320 6174 7472 6620 6961 656c 2064     %x start failed 
2fffb5f8:	2040 7830 6c25 3a78 3020 2578 0a78 0a00     @ 0x%lx: 0x%x...
2fffb608:	4c50 254c 2064 7473 7261 2074 6166 6c69     PLL%d start fail
2fffb618:	6465 4020 3020 2578 786c 203a 7830 7825     ed @ 0x%lx: 0x%x
2fffb628:	000a 4e0a 206f 5043 2055 706f 7265 7461     ...No CPU operat
2fffb638:	6e69 2067 6f70 6e69 2074 6163 206e 6562     ing point can be
2fffb648:	7320 7465 000a 490a 636e 6e6f 6973 7473      set...Inconsist
2fffb658:	6e65 2074 504f 2050 6573 7474 6e69 7367     ent OPP settings
2fffb668:	6620 756f 646e 6920 206e 5444 202c 6769      found in DT, ig
2fffb678:	6f6e 6572 2e64 000a 500a 4c4c 2034 6163     nored....PLL4 ca
2fffb688:	6e6e 746f 6220 2065 6573 7563 6572 0a64     nnot be secured.
2fffb698:	2800 6f4e 7020 7261 6e65 2074 6f66 2072     .(No parent for 
2fffb6a8:	6c63 636f 206b 6c25 0a75 6300 6b6c 682d     clock %lu..clk-h
2fffb6b8:	6973 6300 6b6c 682d 6573 6300 6b6c 632d     si.clk-hse.clk-c
2fffb6c8:	6973 6300 6b6c 6c2d 6973 6300 6b6c 6c2d     si.clk-lsi.clk-l
2fffb6d8:	6573 6900 7332 635f 696b 006e               se.i2s_ckin.

2fffb6e4 <__func__.7239>:
2fffb6e4:	7473 336d 6d32 3170 635f 6b6c 675f 7465     stm32mp1_clk_get
2fffb6f4:	675f 7461 6465 695f 0064                    _gated_id.

2fffb6fe <axiss_parents>:
2fffb6fe:	0100                                         ...

2fffb701 <fmc_parents>:
2fffb701:	1216 1e13                                   ....

2fffb705 <i2c12_parents>:
2fffb705:	1517 0906                                   ....

2fffb709 <i2c35_parents>:
2fffb709:	1517 0906                                   ....

2fffb70d <i2c46_parents>:
2fffb70d:	111b 0906                                   ....

2fffb711 <mcuss_parents>:
2fffb711:	0100 1002                                   ....

2fffb715 <mpu_parents>:
2fffb715:	0100 0a0a                                   ....

2fffb719 <parent_id_clock_id>:
2fffb719:	0004 0201 ff03 0004 0105 b5b4 b7b6 b9b8     ................
2fffb729:	bbba bdbc bfbe c3c3 c3c3 c3c3 0000 c2c1     ................
2fffb739:	ffc4                                        ..

2fffb73b <per_parents>:
2fffb73b:	0100                                         ...

2fffb73e <pllncfgr2>:
2fffb73e:	0800                                         ...

2fffb741 <qspi_parents>:
2fffb741:	1216 1e13                                   ....

2fffb745 <rng1_parents>:
2fffb745:	1502 0304                                   ....

2fffb749 <rtc_parents>:
2fffb749:	04ff 0103                                   ....

2fffb74d <sdmmc12_parents>:
2fffb74d:	121c 0613                                   ....

2fffb751 <sdmmc3_parents>:
2fffb751:	121d 0613                                   ....

2fffb755 <spi6_parents>:
2fffb755:	141b 0906 1107                              ......

2fffb75b <stgen_parents>:
2fffb75b:	0706                                        ..

2fffb75d <stm32mp1_axi_div>:
2fffb75d:	0201 0403 0404 0404                          .........

2fffb766 <stm32mp1_clk_gate>:
2fffb766:	00d8 dc00 0100 16ff 00d8 dd01 0100 16ff     ................
2fffb776:	00d8 de02 0100 16ff 00d8 df03 0100 16ff     ................
2fffb786:	00d8 e004 0100 0fff 00d8 e105 0100 0fff     ................
2fffb796:	00d8 e206 0100 1aff 00d8 e307 0100 1aff     ................
2fffb7a6:	00d8 e408 0100 16ff 00d8 e509 0100 1aff     ................
2fffb7b6:	00d8 e60a 0100 1aff 0a00 cb06 0001 17ff     ................
2fffb7c6:	0a08 d002 0001 18ff 0a10 330b 0001 ffff     ...........3....
2fffb7d6:	0200 a700 0001 ffff 0200 e708 0001 ffff     ................
2fffb7e6:	0200 3a0f 0001 ffff 0200 7f10 0001 ff11     ...:............
2fffb7f6:	0208 8700 0101 ff04 0208 8c02 0101 ff03     ................
2fffb806:	0208 8e03 0101 ff03 0208 9404 0101 ff05     ................
2fffb816:	0208 4108 0101 1bff 0208 420b 0101 1bff     ...A.......B....
2fffb826:	0208 710c 0101 1bff 0208 430d 0101 1bff     ...q.......C....
2fffb836:	0208 440f 0101 1bff 0208 4510 0101 1bff     ...D.......E....
2fffb846:	0208 8014 0101 ff02 0140 c014 0100 ff13     ........@.......
2fffb856:	0a18 4700 0001 ffff 0a18 4801 0001 ffff     ...G.......H....
2fffb866:	0a18 a608 0001 ff12 0a18 7810 0001 ff0c     ...........x....
2fffb876:	0210 5f00 0101 1bff 0210 6004 0101 1bff     ..._.......`....
2fffb886:	0210 6105 0101 1bff 0210 7c06 0101 ff06     ...a.......|....
2fffb896:	0210 6308 0101 1bff 0220 6400 0101 16ff     ...c.... ..d....
2fffb8a6:	0218 6505 0001 ffff 0218 690a 0001 16ff     ...e.......i....
2fffb8b6:	0218 7610 0001 ff0b 0218 7711 0001 ff0b     ...v.......w....
2fffb8c6:	0218 6f18 0001 ffff 080c d608 0000 ffff     ...o............
	...

2fffb8d8 <stm32mp1_clk_pll>:
2fffb8d8:	0001 0000 0028 0084 0088 008c 0080 0090     ....(...........
2fffb8e8:	0000 0000 0001 0000 00ff 0000 00ff 0000     ................
2fffb8f8:	0001 0000 0028 0098 009c 00a0 0094 00a4     ....(...........
2fffb908:	0000 0000 0001 0000 00ff 0000 00ff 0000     ................
2fffb918:	0000 0000 0820 0884 0888 088c 0880 0890     .... ...........
2fffb928:	0000 0000 0001 0000 0002 0000 00ff 0000     ................
2fffb938:	0000 0000 0824 0898 089c 08a0 0894 08a4     ....$...........
2fffb948:	0000 0000 0001 0000 0002 0000 0005 0000     ................

2fffb958 <stm32mp1_clk_sel>:
2fffb958:	08c0 0700 0004 0000 b705 2fff 08c4 0700     .........../....
2fffb968:	0004 0000 b709 2fff 00d4 0300 0002 0000     ......./........
2fffb978:	b75b 2fff 00c0 0700 0004 0000 b70d 2fff     [../.........../
2fffb988:	00c4 0700 0006 0000 b755 2fff 00c8 0700     ........U../....
2fffb998:	0006 0000 ba88 2fff 00cc 0300 0004 0000     ......./........
2fffb9a8:	b745 2fff 08e4 0700 0005 0000 ba83 2fff     E../.........../
2fffb9b8:	08e8 0700 0005 0000 ba7e 2fff 08ec 0700     ........~../....
2fffb9c8:	0005 0000 ba7e 2fff 08f0 0700 0005 0000     ....~../........
2fffb9d8:	ba7e 2fff 08f4 0700 0004 0000 b74d 2fff     ~../........M../
2fffb9e8:	08f8 0700 0004 0000 b751 2fff 0900 0300     ........Q../....
2fffb9f8:	0004 0000 b741 2fff 0904 0300 0004 0000     ....A../........
2fffba08:	b701 2fff 0024 0700 0003 0000 b6fe 2fff     .../$........../
2fffba18:	0048 0300 0004 0000 b711 2fff 091c 0300     H........../....
2fffba28:	0003 0000 ba90 2fff 091c 0104 0002 0000     ......./........
2fffba38:	ba8e 2fff 0140 0310 0004 0000 b749 2fff     .../@.......I../
2fffba48:	0020 0300 0004 0000 b715 2fff 00d0 0300      ........../....
2fffba58:	0003 0000 b73b 2fff                         ....;../

2fffba60 <stm32mp1_mcu_div>:
2fffba60:	0100 0302 0604 0807 0909 0909 0909 0909     ................

2fffba70 <stm32mp1_mpu_apbx_div>:
2fffba70:	0100 0302 0404 0404                         ........

2fffba78 <stm32mp1_pll>:
2fffba78:	1004 0863 c710                              ..c...

2fffba7e <uart234578_parents>:
2fffba7e:	1417 0906                                    .....

2fffba83 <uart6_parents>:
2fffba83:	1418 0906                                    .....

2fffba88 <usart1_parents>:
2fffba88:	111b 0906 0714                              ......

2fffba8e <usbo_parents>:
2fffba8e:	2115                                        .!

2fffba90 <usbphy_parents>:
2fffba90:	1507 0a08 6e55 6e6b 776f 206e 6553 666c     ....Unknown Self
2fffbaa0:	5220 6665 6572 6873 6d20 646f 0a65            Refresh mode..

2fffbaaf <CSWTCH.26>:
2fffbaaf:	0001 0000 0000 0000 0302 7264 7669 7265     ..........driver
2fffbabf:	2f73 7473 672f 6970 2f6f 7473 336d 5f32     s/st/gpio/stm32_
2fffbacf:	7067 6f69 632e 7000 6e69 7463 6c72 302d     gpio.c.pinctrl-0
2fffbadf:	7000 6e69 756d 0078 6c73 7765 722d 7461     .pinmux.slew-rat
2fffbaef:	0065 6962 7361 702d 6c75 2d6c 7075 6200     e.bias-pull-up.b
2fffbaff:	6169 2d73 7570 6c6c 642d 776f 006e 7264     ias-pull-down.dr
2fffbb0f:	7669 2d65 706f 6e65 642d 6172 6e69 6700     ive-open-drain.g
2fffbb1f:	6970 2d6f 6f63 746e 6f72 6c6c 7265 0a00     pio-controller..
2fffbb2f:	4950 434e 5254 204c 6e69 6f63 736e 7369     PINCTRL inconsis
2fffbb3f:	6574 746e 6920 206e 5444 000a 3269 2d63     tent in DT..i2c-
2fffbb4f:	6373 2d6c 6972 6973 676e 742d 6d69 2d65     scl-rising-time-
2fffbb5f:	736e 6900 6332 732d 6c63 662d 6c61 696c     ns.i2c-scl-falli
2fffbb6f:	676e 742d 6d69 2d65 736e 0a00 6e49 6176     ng-time-ns..Inva
2fffbb7f:	696c 2064 7562 2073 7073 6565 2064 2528     lid bus speed (%
2fffbb8f:	2069 203e 6925 0a29 0a00 3249 2043 6c63     i > %i)...I2C cl
2fffbb9f:	636f 206b 6172 6574 6920 2073 0a30 0a00     ock rate is 0...
2fffbbaf:	3249 2043 7073 6565 2064 756f 2074 666f     I2C speed out of
2fffbbbf:	6220 756f 646e 7b20 6425 0a7d 0a00 4920      bound {%d}... I
2fffbbcf:	4332 7420 6d69 6e69 7367 6f20 7475 6f20     2C timings out o
2fffbbdf:	2066 6f62 6e75 2064 6952 6573 257b 3e64     f bound Rise{%d>
2fffbbef:	6425 2f7d 6146 6c6c 257b 3e64 6425 0a7d     %d}/Fall{%d>%d}.
2fffbbff:	0a00 4e44 2046 756f 2074 666f 6220 756f     ..DNF out of bou
2fffbc0f:	646e 2520 2f64 6425 000a 200a 3249 2043     nd %d/%d... I2C 
2fffbc1f:	6f6e 5020 6572 6373 6c61 7265 7320 6c6f     no Prescaler sol
2fffbc2f:	7475 6f69 0a6e 0a00 4920 4332 6e20 206f     ution... I2C no 
2fffbc3f:	6f73 756c 6974 6e6f 6120 2074 6c61 0a6c     solution at all.
2fffbc4f:	0a00 6146 6c69 6465 7420 206f 6f63 706d     ..Failed to comp
2fffbc5f:	7475 2065 3249 2043 6974 696d 676e 0a73     ute I2C timings.
2fffbc6f:	1e00 6f44 6e77 7267 6461 2065 3249 2043     ..Downgrade I2C 
2fffbc7f:	7073 6565 2064 6f74 2520 4875 297a 000a     speed to %uHz)..
2fffbc8f:	430a 6e61 6f6e 2074 6e69 7469 6169 696c     .Cannot initiali
2fffbc9f:	657a 4920 4332 6120 616e 6f6c 2067 6966     ze I2C analog fi
2fffbcaf:	746c 7265 2820 6425 0a29 0a00 6d49 6f70     lter (%d)...Impo
2fffbcbf:	7373 6269 656c 7420 206f 6f63 706d 7475     ssible to comput
2fffbccf:	2065 3249 2043 6974 696d 676e 0a73 0000     e I2C timings...
	...

2fffbce0 <i2c_specs>:
2fffbce0:	86a0 0001 012c 0000 03e8 0000 0000 0000     ....,...........
2fffbcf0:	0d7a 0000 00fa 0000 125c 0000 0fa0 0000     z.......\.......
2fffbd00:	1a80 0006 012c 0000 012c 0000 0000 0000     ....,...,.......
2fffbd10:	0384 0000 0064 0000 0514 0000 0258 0000     ....d.......X...
2fffbd20:	4240 000f 0064 0000 0078 0000 0000 0000     @B..d...x.......
2fffbd30:	01c2 0000 0032 0000 01f4 0000 0104 0000     ....2...........
2fffbd40:	7473 732c 6d74 3233 706d 2d31 7769 6764     st,stm32mp1-iwdg
2fffbd50:	7300 6d74 3233 652c 616e 6c62 2d65 6e6f     .stm32,enable-on
2fffbd60:	732d 6f74 0070 7473 336d 2c32 6e65 6261     -stop.stm32,enab
2fffbd70:	656c 6f2d 2d6e 7473 6e61 6264 0079 4f0a     le-on-standby..O
2fffbd80:	5054 6520 616e 6c62 6465 6220 7475 6920     TP enabled but i
2fffbd90:	6477 2567 2075 5444 642d 7369 6261 656c     wdg%u DT-disable
2fffbda0:	0a64 7300 6365 7275 2d65 6974 656d 756f     d..secure-timeou
2fffbdb0:	2d74 6573 0063 490a 4457 2547 2078 6165     t-sec..IWDG%x ea
2fffbdc0:	6c72 2079 6974 656d 756f 2074 6f63 666e     rly timeout conf
2fffbdd0:	6769 6620 6961 656c 2064 2528 2964 000a     ig failed (%d)..
2fffbde0:	7473 732c 7074 696d 3163 7200 6765 6c75     st,stpmic1.regul
2fffbdf0:	7461 726f 6d2d 6e69 6d2d 6369 6f72 6f76     ator-min-microvo
2fffbe00:	746c 7200 6765 6c75 7461 726f 6d2d 7861     lt.regulator-max
2fffbe10:	6d2d 6369 6f72 6f76 746c 7200 6765 6c75     -microvolt.regul
2fffbe20:	7461 726f 0073 7264 7669 7265 2f73 7473     ators.drivers/st
2fffbe30:	702f 696d 2f63 7473 336d 6d32 5f70 6d70     /pmic/stm32mp_pm
2fffbe40:	6369 632e 7200 6765 6c75 7461 726f 622d     ic.c.regulator-b
2fffbe50:	6f6f 2d74 6e6f 7200 6765 6c75 7461 726f     oot-on.regulator
2fffbe60:	612d 776c 7961 2d73 6e6f 7200 6765 6c75     -always-on.regul
2fffbe70:	7461 726f 702d 6c75 2d6c 6f64 6e77 7300     ator-pull-down.s
2fffbe80:	2c74 616d 6b73 722d 7365 7465 7200 6765     t,mask-reset.reg
2fffbe90:	6c75 7461 726f 6f2d 2d6e 6e69 732d 7375     ulator-on-in-sus
2fffbea0:	6570 646e 7200 6765 6c75 7461 726f 6f2d     pend.regulator-o
2fffbeb0:	6666 692d 2d6e 7573 7073 6e65 0064 6572     ff-in-suspend.re
2fffbec0:	7567 616c 6f74 2d72 7573 7073 6e65 2d64     gulator-suspend-
2fffbed0:	696d 7263 766f 6c6f 0074 6572 7567 616c     microvolt.regula
2fffbee0:	6f74 2d72 6f6d 6564 7200 6765 6c75 7461     tor-mode.regulat
2fffbef0:	726f 6e2d 6d61 0065 490a 4332 6320 6e6f     or-name..I2C con
2fffbf00:	6966 7567 6172 6974 6e6f 6620 6961 656c     figuration faile
2fffbf10:	2064 6425 000a 430a 6e61 6f6e 2074 6e69     d %d...Cannot in
2fffbf20:	7469 6169 696c 657a 4920 4332 2520 2078     itialize I2C %x 
2fffbf30:	2528 2964 000a 490a 4332 6420 7665 6369     (%d)...I2C devic
2fffbf40:	2065 6f6e 2074 6572 6461 0a79 6200 6375     e not ready..buc
2fffbf50:	006b 646c 006f 646c 346f 6200 6375 316b     k.ldo.ldo4.buck1
2fffbf60:	6200 6375 326b 6200 6375 336b 6200 6375     .buck2.buck3.buc
2fffbf70:	346b 6c00 6f64 0031 646c 326f 6c00 6f64     k4.ldo1.ldo2.ldo
2fffbf80:	0033 646c 356f 6c00 6f64 0036 7276 6665     3.ldo5.ldo6.vref
2fffbf90:	645f 7264 6200 6f6f 7473 7000 7277 735f     _ddr.boost.pwr_s
2fffbfa0:	3177 7000 7277 735f 3277 0000               w1.pwr_sw2..

2fffbfac <buck1_voltage_table>:
2fffbfac:	02d5 02d5 02d5 02d5 02d5 02d5 02ee 0307     ................
2fffbfbc:	0320 0339 0352 036b 0384 039d 03b6 03cf      .9.R.k.........
2fffbfcc:	03e8 0401 041a 0433 044c 0465 047e 0497     ......3.L.e.~...
2fffbfdc:	04b0 04c9 04e2 04fb 0514 052d 0546 055f     ..........-.F._.
2fffbfec:	0578 0591 05aa 05c3 05dc 05dc 05dc 05dc     x...............
2fffbffc:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................
2fffc00c:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................
2fffc01c:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................

2fffc02c <buck2_voltage_table>:
2fffc02c:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffc03c:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffc04c:	03e8 03e8 041a 041a 044c 044c 047e 047e     ........L.L.~.~.
2fffc05c:	04b0 04b0 04e2 04e2 0514 0514 0546 0546     ............F.F.
2fffc06c:	0578 0578 05aa 05aa 05dc                    x.x.......

2fffc076 <buck3_voltage_table>:
2fffc076:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffc086:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffc096:	03e8 03e8 03e8 03e8 044c 044c 044c 044c     ........L.L.L.L.
2fffc0a6:	04b0 04b0 04b0 04b0 0514 0514 0514 0514     ................
2fffc0b6:	0578 0578 0578 0578 05dc 0640 06a4 0708     x.x.x.x...@.....
2fffc0c6:	076c 07d0 0834 0898 08fc 0960 09c4 0a28     l...4.....`...(.
2fffc0d6:	0a8c 0af0 0b54 0bb8 0c1c 0c80 0ce4 0d48     ....T.........H.

2fffc0e6 <buck4_voltage_table>:
2fffc0e6:	0258 0271 028a 02a3 02bc 02d5 02ee 0307     X.q.............
2fffc0f6:	0320 0339 0352 036b 0384 039d 03b6 03cf      .9.R.k.........
2fffc106:	03e8 0401 041a 0433 044c 0465 047e 0497     ......3.L.e.~...
2fffc116:	04b0 04c9 04e2 04fb 0514 0514 0546 0546     ............F.F.
2fffc126:	0578 0578 05aa 05aa 05dc 0640 06a4 0708     x.x.......@.....
2fffc136:	076c 07d0 0834 0898 08fc 0960 09c4 0a28     l...4.....`...(.
2fffc146:	0a8c 0af0 0b54 0bb8 0c1c 0c80 0ce4 0d48     ....T.........H.
2fffc156:	0dac 0e10 0e74 0ed8 0f3c                    ....t...<.

2fffc160 <fixed_5v_voltage_table>:
2fffc160:	1388                                        ..

2fffc162 <ldo1_voltage_table>:
2fffc162:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffc172:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffc182:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffc192:	0ce4                                        ..

2fffc194 <ldo2_voltage_table>:
2fffc194:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffc1a4:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffc1b4:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffc1c4:	0ce4                                        ..

2fffc1c6 <ldo3_voltage_table>:
2fffc1c6:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffc1d6:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffc1e6:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffc1f6:	0ce4 0ce4 0ce4 0ce4 0ce4 0ce4 0ce4 01f4     ................
2fffc206:	ffff                                        ..

2fffc208 <ldo4_voltage_table>:
2fffc208:	0ce4                                        ..

2fffc20a <ldo5_voltage_table>:
2fffc20a:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffc21a:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffc22a:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffc23a:	0ce4 0d48 0dac 0e10 0e74 0ed8 0f3c          ..H.....t...<.

2fffc248 <ldo6_voltage_table>:
2fffc248:	0384 03e8 044c 04b0 0514 0578 05dc 0640     ....L.....x...@.
2fffc258:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffc268:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffc278:	0ce4 0000                                   ....

2fffc27c <regulators_table>:
2fffc27c:	bf5b 2fff bfac 2fff 2040 1230 1800 0000     [../.../@ 0.....
2fffc28c:	bf61 2fff c02c 2fff 2125 1231 1802 0001     a../,../%!1.....
2fffc29c:	bf67 2fff c076 2fff 2238 1232 1804 0002     g../v../8"2.....
2fffc2ac:	bf6d 2fff c0e6 2fff 233d 1233 1806 0003     m../.../=#3.....
2fffc2bc:	bf73 2fff c162 2fff 2519 0035 1a00 0000     s../b../.%5.....
2fffc2cc:	bf78 2fff c194 2fff 2619 0036 1a00 0001     x../.../.&6.....
2fffc2dc:	bf7d 2fff c1c6 2fff 2721 0037 1a00 0002     }../.../!'7.....
2fffc2ec:	bf56 2fff c208 2fff 2801 0038 1a00 0003     V../.../.(8.....
2fffc2fc:	bf82 2fff c20a 2fff 291f 0039 1a00 0004     .../.../.)9.....
2fffc30c:	bf87 2fff c248 2fff 2a19 003a 1a00 0005     .../H../.*:.....
2fffc31c:	bf8c 2fff c35c 2fff 2401 0034 1a00 0006     .../\../.$4.....
2fffc32c:	bf95 2fff c160 2fff 4001 0000 0000 0001     .../`../.@......
2fffc33c:	bf9b 2fff c160 2fff 4001 0000 0000 0002     .../`../.@......
2fffc34c:	bfa3 2fff c160 2fff 4001 0000 0000 0004     .../`../.@......

2fffc35c <vref_ddr_voltage_table>:
2fffc35c:	0ce4 732f 6365 7275 2d65 6863 736f 6e65     ../secure-chosen
2fffc36c:	2f00 6863 736f 6e65 7300 6474 756f 2d74     ./chosen.stdout-
2fffc37c:	6170 6874 3a00 6f00 7070 732d 7075 6f70     path.:.opp-suppo
2fffc38c:	7472 6465 682d 0077 706f 2d70 7a68 6f00     rted-hw.opp-hz.o
2fffc39c:	7070 6d2d 6369 6f72 6f76 746c 6f00 616b     pp-microvolt.oka
2fffc3ac:	0079 6573 7563 6572 732d 6174 7574 0073     y.secure-status.
2fffc3bc:	6e69 6574 7272 7075 7374 652d 7478 6e65     interrupts-exten
2fffc3cc:	6564 0064 6573 7563 6572 692d 746e 7265     ded.secure-inter
2fffc3dc:	7572 7470 0073 6c70 7461 732f 2f74 6f63     rupts.plat/st/co
2fffc3ec:	6d6d 6e6f 732f 6d74 3233 706d 645f 2e74     mmon/stm32mp_dt.
2fffc3fc:	0063 6572 2d67 616e 656d 0073 6572 6573     c.reg-names.rese
2fffc40c:	7374 2800 6143 6e6e 746f 6620 6e69 2064     ts.(Cannot find 
2fffc41c:	7325 6e20 646f 2065 6e69 4420 0a54 7300     %s node in DT..s
2fffc42c:	2c74 7473 336d 6d32 3170 642d 7264 7300     t,stm32mp1-ddr.s
2fffc43c:	2c74 656d 2d6d 6973 657a 6f00 6570 6172     t,mem-size.opera
2fffc44c:	6974 676e 702d 696f 746e 2d73 3276 2f00     ting-points-v2./
2fffc45c:	7063 7375 632f 7570 3040 6300 7570 732d     cpus/cpu@0.cpu-s
2fffc46c:	7075 6c70 0079 732f 636f 702f 6e69 632d     upply./soc/pin-c
2fffc47c:	6e6f 7274 6c6f 656c 0072 732f 636f 702f     ontroller./soc/p
2fffc48c:	6e69 632d 6e6f 7274 6c6f 656c 2d72 007a     in-controller-z.
2fffc49c:	676e 6970 736f 7000 616c 2f74 7473 732f     ngpios.plat/st/s
2fffc4ac:	6d74 3233 706d 2f31 7473 336d 6d32 3170     tm32mp1/stm32mp1
2fffc4bc:	635f 6e6f 6574 7478 632e 2800 6f53 7466     _context.c.(Soft
2fffc4cc:	6177 6572 6120 6363 7365 2073 6f74 6120     ware access to a
2fffc4dc:	6c6c 6420 6265 6775 6320 6d6f 6f70 656e     ll debug compone
2fffc4ec:	746e 2073 7369 6420 7369 6261 656c 0a64     nts is disabled.
2fffc4fc:	7000 616c 2f74 7473 732f 6d74 3233 706d     .plat/st/stm32mp
2fffc50c:	2f31 7473 336d 6d32 3170 645f 6762 636d     1/stm32mp1_dbgmc
2fffc51c:	2e75 0063 491e 204f 6f63 706d 6e65 6173     u.c..IO compensa
2fffc52c:	6974 6e6f 6320 6c65 206c 6f6e 2074 6572     tion cell not re
2fffc53c:	6461 0a79 6900 636e 756c 6564 612f 6372     ady..include/arc
2fffc54c:	2f68 6161 6372 3368 2f32 6c65 5f33 6f63     h/aarch32/el3_co
2fffc55c:	6d6d 6e6f 6d5f 6361 6f72 2e73 0053 696c     mmon_macros.S.li
2fffc56c:	2f62 7063 7375 612f 7261 6863 3233 632f     b/cpus/aarch32/c
2fffc57c:	7570 685f 6c65 6570 7372 532e                pu_helpers.S.

2fffc589 <panic_msg>:
2fffc589:	50          	.byte	0x50
2fffc58a:	4e41      	.short	0x4e41
2fffc58c:	61204349 	.word	0x61204349
2fffc590:	43502074 	.word	0x43502074
2fffc594:	30203a20 	.word	0x30203a20
2fffc598:	0078      	.short	0x0078

2fffc59a <panic_end>:
2fffc59a:	0a0d      	.short	0x0a0d
	...

2fffc59d <assert_msg1>:
2fffc59d:	41          	.byte	0x41
2fffc59e:	5353      	.short	0x5353
2fffc5a0:	3a545245 	.word	0x3a545245
2fffc5a4:	6c694620 	.word	0x6c694620
2fffc5a8:	2065      	.short	0x2065
	...

2fffc5ab <assert_msg2>:
2fffc5ab:	20          	.byte	0x20
2fffc5ac:	656e694c 	.word	0x656e694c
2fffc5b0:	0020      	.short	0x0020
2fffc5b2:	7264      	.short	0x7264
2fffc5b4:	72657669 	.word	0x72657669
2fffc5b8:	74732f73 	.word	0x74732f73
2fffc5bc:	7261752f 	.word	0x7261752f
2fffc5c0:	61612f74 	.word	0x61612f74
2fffc5c4:	33686372 	.word	0x33686372
2fffc5c8:	74732f32 	.word	0x74732f32
2fffc5cc:	5f32336d 	.word	0x5f32336d
2fffc5d0:	736e6f63 	.word	0x736e6f63
2fffc5d4:	2e656c6f 	.word	0x2e656c6f
2fffc5d8:	0053      	.short	0x0053
2fffc5da:	696c      	.short	0x696c
2fffc5dc:	6c782f62 	.word	0x6c782f62
2fffc5e0:	745f7461 	.word	0x745f7461
2fffc5e4:	656c6261 	.word	0x656c6261
2fffc5e8:	32765f73 	.word	0x32765f73
2fffc5ec:	7261612f 	.word	0x7261612f
2fffc5f0:	32336863 	.word	0x32336863
2fffc5f4:	616e652f 	.word	0x616e652f
2fffc5f8:	5f656c62 	.word	0x5f656c62
2fffc5fc:	2e756d6d 	.word	0x2e756d6d
2fffc600:	0053      	.short	0x0053
2fffc602:	696c      	.short	0x696c
2fffc604:	70632f62 	.word	0x70632f62
2fffc608:	612f7375 	.word	0x612f7375
2fffc60c:	68637261 	.word	0x68637261
2fffc610:	632f3233 	.word	0x632f3233
2fffc614:	6574726f 	.word	0x6574726f
2fffc618:	37615f78 	.word	0x37615f78
2fffc61c:	532e      	.short	0x532e
	...

2fffc61f <abort_str>:
2fffc61f:	0a          	.byte	0x0a
2fffc620:	726f6241 	.word	0x726f6241
2fffc624:	74612074 	.word	0x74612074
2fffc628:	7830203a 	.word	0x7830203a
	...

2fffc62d <prefetch_abort_str>:
2fffc62d:	0a          	.byte	0x0a
2fffc62e:	7250      	.short	0x7250
2fffc630:	74656665 	.word	0x74656665
2fffc634:	41206863 	.word	0x41206863
2fffc638:	74726f62 	.word	0x74726f62
2fffc63c:	3a746120 	.word	0x3a746120
2fffc640:	00783020 	.word	0x00783020

2fffc644 <data_abort_str>:
2fffc644:	7461440a 	.word	0x7461440a
2fffc648:	62412061 	.word	0x62412061
2fffc64c:	2074726f 	.word	0x2074726f
2fffc650:	203a7461 	.word	0x203a7461
2fffc654:	7830      	.short	0x7830
	...

2fffc657 <undefined_str>:
2fffc657:	0a          	.byte	0x0a
2fffc658:	65646e55 	.word	0x65646e55
2fffc65c:	656e6966 	.word	0x656e6966
2fffc660:	6e692064 	.word	0x6e692064
2fffc664:	75727473 	.word	0x75727473
2fffc668:	6f697463 	.word	0x6f697463
2fffc66c:	7461206e 	.word	0x7461206e
2fffc670:	7830203a 	.word	0x7830203a
	...

2fffc675 <exception_start_str>:
2fffc675:	0a          	.byte	0x0a
2fffc676:	7845      	.short	0x7845
2fffc678:	74706563 	.word	0x74706563
2fffc67c:	206e6f69 	.word	0x206e6f69
2fffc680:	65646f6d 	.word	0x65646f6d
2fffc684:	0078303d 	.word	0x0078303d

2fffc688 <exception_end_str>:
2fffc688:	3a746120 	.word	0x3a746120
2fffc68c:	00783020 	.word	0x00783020

2fffc690 <dfsr_str>:
2fffc690:	53464420 	.word	0x53464420
2fffc694:	203d2052 	.word	0x203d2052
2fffc698:	7830      	.short	0x7830
	...

2fffc69b <dfar_str>:
2fffc69b:	20          	.byte	0x20
2fffc69c:	52414644 	.word	0x52414644
2fffc6a0:	30203d20 	.word	0x30203d20
2fffc6a4:	0078      	.short	0x0078

2fffc6a6 <ifsr_str>:
2fffc6a6:	4920      	.short	0x4920
2fffc6a8:	20525346 	.word	0x20525346
2fffc6ac:	7830203d 	.word	0x7830203d
	...

2fffc6b1 <ifar_str>:
2fffc6b1:	20          	.byte	0x20
2fffc6b2:	4649      	.short	0x4649
2fffc6b4:	3d205241 	.word	0x3d205241
2fffc6b8:	00783020 	.word	0x00783020

2fffc6bc <end_error_str>:
2fffc6bc:	0d0a      	.short	0x0d0a
2fffc6be:	00          	.byte	0x00
2fffc6bf:	23          	.byte	0x23
2fffc6c0:	72646461 	.word	0x72646461
2fffc6c4:	2d737365 	.word	0x2d737365
2fffc6c8:	6c6c6563 	.word	0x6c6c6563
2fffc6cc:	0073      	.short	0x0073
2fffc6ce:	696c      	.short	0x696c
2fffc6d0:	2c78756e 	.word	0x2c78756e
2fffc6d4:	6e616870 	.word	0x6e616870
2fffc6d8:	00656c64 	.word	0x00656c64
2fffc6dc:	696c612f 	.word	0x696c612f
2fffc6e0:	73657361 	.word	0x73657361
2fffc6e4:	00          	.byte	0x00
2fffc6e5:	63          	.byte	0x63
2fffc6e6:	6d6f      	.short	0x6d6f
2fffc6e8:	69746170 	.word	0x69746170
2fffc6ec:	00656c62 	.word	0x00656c62
2fffc6f0:	45535341 	.word	0x45535341
2fffc6f4:	203a5452 	.word	0x203a5452
2fffc6f8:	253a7325 	.word	0x253a7325
2fffc6fc:	0a64      	.short	0x0a64
2fffc6fe:	00          	.byte	0x00
2fffc6ff:	6c          	.byte	0x6c
2fffc700:	6c2f6269 	.word	0x6c2f6269
2fffc704:	2f636269 	.word	0x2f636269
2fffc708:	6e697270 	.word	0x6e697270
2fffc70c:	632e6674 	.word	0x632e6674
2fffc710:	00783000 	.word	0x00783000

2fffc714 <__RT_SVC_DESCS_START__>:
2fffc714:	00010404 	.word	0x00010404
2fffc718:	2fff9ff7 	.word	0x2fff9ff7
2fffc71c:	2ffed82d 	.word	0x2ffed82d
2fffc720:	2ffed7b1 	.word	0x2ffed7b1

2fffc724 <__svc_desc_stm32mp1_sip_svc>:
2fffc724:	00010202 2fffac4f 2fff1a85 2fff1a89     ....O../.../.../

2fffc734 <__CPU_OPS_START__>:
2fffc734:	410fc070 	.word	0x410fc070
2fffc738:	2fff8f80 	.word	0x2fff8f80
2fffc73c:	2fff8f84 	.word	0x2fff8f84
2fffc740:	2fff8fb4 	.word	0x2fff8fb4
2fffc744:	2fff8fe8 	.word	0x2fff8fe8
2fffc748:	2fffd538 	.word	0x2fffd538
2fffc74c:	2fffd53c 	.word	0x2fffd53c

2fffc750 <__CPU_OPS_END__>:
	...

2fffc760 <sp_min_vector_table>:
2fffc760:	eaffc226 	b	2ffed000 <sp_min_entrypoint>
2fffc764:	eafff0c7 	b	2fff8a88 <report_undef_inst>
2fffc768:	eaffc27c 	b	2ffed160 <sp_min_handle_smc>
2fffc76c:	eafff0c9 	b	2fff8a98 <report_prefetch_abort>
2fffc770:	eafff0cc 	b	2fff8aa8 <report_data_abort>
2fffc774:	eafff2a9 	b	2fff9220 <plat_panic_handler>
2fffc778:	eafff2a8 	b	2fff9220 <plat_panic_handler>
2fffc77c:	eaffc2aa 	b	2ffed22c <sp_min_handle_fiq>

2fffc780 <__console_register_from_arm>:
2fffc780:	e51ff004 	ldr	pc, [pc, #-4]	; 2fffc784 <__console_register_from_arm+0x4>
2fffc784:	2fff2965 	.word	0x2fff2965

2fffc788 <__flush_dcache_range_from_thumb>:
2fffc788:	4778      	bx	pc
2fffc78a:	e7fd      	b.n	2fffc788 <__flush_dcache_range_from_thumb>
2fffc78c:	eafff0fc 	b	2fff8b84 <flush_dcache_range>

2fffc790 <__print_errata_status_from_thumb>:
2fffc790:	4778      	bx	pc
2fffc792:	e7fd      	b.n	2fffc790 <__print_errata_status_from_thumb>
2fffc794:	eafff05c 	b	2fff890c <print_errata_status>

2fffc798 <__spin_unlock_from_thumb>:
2fffc798:	4778      	bx	pc
2fffc79a:	e7fd      	b.n	2fffc798 <__spin_unlock_from_thumb>
2fffc79c:	eafff070 	b	2fff8964 <spin_unlock>

2fffc7a0 <__enable_mmu_direct_svc_mon_from_thumb>:
2fffc7a0:	4778      	bx	pc
2fffc7a2:	e7fd      	b.n	2fffc7a0 <__enable_mmu_direct_svc_mon_from_thumb>
2fffc7a4:	eafff1ca 	b	2fff8ed4 <enable_mmu_direct_svc_mon>

2fffc7a8 <__clean_dcache_range_from_thumb>:
2fffc7a8:	4778      	bx	pc
2fffc7aa:	e7fd      	b.n	2fffc7a8 <__clean_dcache_range_from_thumb>
2fffc7ac:	eafff103 	b	2fff8bc0 <clean_dcache_range>

2fffc7b0 <__spin_lock_from_thumb>:
2fffc7b0:	4778      	bx	pc
2fffc7b2:	e7fd      	b.n	2fffc7b0 <__spin_lock_from_thumb>
2fffc7b4:	eafff061 	b	2fff8940 <spin_lock>

2fffc7b8 <__psci_do_pwrdown_cache_maintenance_from_thumb>:
2fffc7b8:	4778      	bx	pc
2fffc7ba:	e7fd      	b.n	2fffc7b8 <__psci_do_pwrdown_cache_maintenance_from_thumb>
2fffc7bc:	eafff06e 	b	2fff897c <psci_do_pwrdown_cache_maintenance>

2fffc7c0 <__RO_END_UNALIGNED__>:
	...
