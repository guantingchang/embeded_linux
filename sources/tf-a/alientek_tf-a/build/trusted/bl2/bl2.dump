
/home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/bl2.elf:     file format elf32-littlearm
/home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/bl2.elf
architecture: armv7, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x2ffd6000

Program Header:
    LOAD off    0x00000000 vaddr 0x2ffd0000 paddr 0x2ffd0000 align 2**16
         filesz 0x000171fc memsz 0x0001a3c0 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 ro            00011000  2ffd6000  2ffd6000  00006000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001fc  2ffe7000  2ffe7000  00017000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 stacks        00000c00  2ffe7200  2ffe7200  000171fc  2**6
                  ALLOC
  3 .bss          000025c0  2ffe7e00  2ffe7e00  000171fc  2**9
                  ALLOC
  4 .debug_info   00049bea  00000000  00000000  000171fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000d2e3  00000000  00000000  00060de6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00001f10  00000000  00000000  0006e0d0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000227b0  00000000  00000000  0006ffe0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00009c8a  00000000  00000000  00092790  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      0000005a  00000000  00000000  0009c41a  2**0
                  CONTENTS, READONLY
 10 .ARM.attributes 0000003b  00000000  00000000  0009c474  2**0
                  CONTENTS, READONLY
 11 .debug_loc    0002e51e  00000000  00000000  0009c4af  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00006238  00000000  00000000  000ca9d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000050cc  00000000  00000000  000d0c08  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
2ffd6000 l    d  ro	00000000 ro
2ffe7000 l    d  .data	00000000 .data
2ffe7200 l    d  stacks	00000000 stacks
2ffe7e00 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/bl2_el3_entrypoint.o
2ffd60e8 l       ro	00000000 do_primary_cold_boot
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/spinlock.o
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/platform_up_stack.o
2ffe7200 l       stacks	00000000 platform_normal_stacks
00000006 l       *ABS*	00000000 TZ_COUNT
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/cpu_helpers.o
00000004 l       *ABS*	00000000 CPU_MIDR_SIZE
00000004 l       *ABS*	00000000 CPU_RESET_FUNC_SIZE
00000000 l       *ABS*	00000000 CPU_PWR_DWN_OPS_SIZE
00000000 l       *ABS*	00000000 CPU_ERRATA_FUNC_SIZE
00000000 l       *ABS*	00000000 CPU_ERRATA_LOCK_SIZE
00000000 l       *ABS*	00000000 CPU_ERRATA_PRINTED_SIZE
00000000 l       *ABS*	00000000 CPU_MIDR
00000004 l       *ABS*	00000000 CPU_RESET_FUNC
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS
00000008 l       *ABS*	00000000 CPU_ERRATA_FUNC
00000008 l       *ABS*	00000000 CPU_ERRATA_LOCK
00000008 l       *ABS*	00000000 CPU_ERRATA_PRINTED
00000008 l       *ABS*	00000000 CPU_OPS_SIZE
2ffd6250 l       ro	00000000 error_exit
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/debug.o
2ffe6d72 l       ro	00000000 panic_msg
2ffe6d83 l       ro	00000000 panic_end
2ffe6d86 l       ro	00000000 assert_msg1
2ffe6d94 l       ro	00000000 assert_msg2
2ffd6324 l       ro	00000000 dec_print_loop
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/cache_helpers.o
2ffd63e4 l       ro	00000000 exit_loop_cimvac
2ffd63d0 l       ro	00000000 loop_cimvac
2ffd6420 l       ro	00000000 exit_loop_cmvac
2ffd640c l       ro	00000000 loop_cmvac
2ffd645c l       ro	00000000 exit_loop_imvac
2ffd6448 l       ro	00000000 loop_imvac
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/misc_helpers.o
2ffd64c8 l       ro	00000000 do_disable_mmu
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/stm32_console.o
2ffd6560 l       ro	00000000 core_init_fail
2ffd6544 l       ro	00000000 teack_loop
2ffd65b4 l       ro	00000000 register_fail
2ffd6600 l       ro	00000000 putc_error
2ffd65cc l       ro	00000000 txe_loop
2ffd65e8 l       ro	00000000 tc_loop
2ffd6650 l       ro	00000000 flush_error
2ffd6634 l       ro	00000000 txe_loop_3
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/enable_mmu.o
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/cortex_a7.o
00000004 l       *ABS*	00000000 CPU_MIDR_SIZE
00000004 l       *ABS*	00000000 CPU_RESET_FUNC_SIZE
00000000 l       *ABS*	00000000 CPU_PWR_DWN_OPS_SIZE
00000000 l       *ABS*	00000000 CPU_ERRATA_FUNC_SIZE
00000000 l       *ABS*	00000000 CPU_ERRATA_LOCK_SIZE
00000000 l       *ABS*	00000000 CPU_ERRATA_PRINTED_SIZE
00000000 l       *ABS*	00000000 CPU_MIDR
00000004 l       *ABS*	00000000 CPU_RESET_FUNC
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS
00000008 l       *ABS*	00000000 CPU_ERRATA_FUNC
00000008 l       *ABS*	00000000 CPU_ERRATA_LOCK
00000008 l       *ABS*	00000000 CPU_ERRATA_PRINTED
00000008 l       *ABS*	00000000 CPU_OPS_SIZE
2ffd66f8 l     F ro	00000014 cortex_a7_enable_smp
2ffd670c l     F ro	00000004 cortex_a7_reset_func
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/stm32mp1_helper.o
2ffd672c l       ro	00000000 undef_inst_lbl
2ffe6deb l       ro	00000000 abort_str
2ffd675c l       ro	00000000 print_excpetion_info
2ffd6740 l       ro	00000000 other_excpetion_lbl
2ffe6e23 l       ro	00000000 undefined_str
2ffe6e41 l       ro	00000000 exception_start_str
2ffe6e54 l       ro	00000000 exception_end_str
2ffe6e88 l       ro	00000000 end_error_str
2ffe6df9 l       ro	00000000 prefetch_abort_str
2ffe6e72 l       ro	00000000 ifsr_str
2ffe6e7d l       ro	00000000 ifar_str
2ffe6e10 l       ro	00000000 data_abort_str
2ffe6e5c l       ro	00000000 dfsr_str
2ffe6e67 l       ro	00000000 dfar_str
00000000 l    df *ABS*	00000000 io_block.c
2ffd6974 l     F ro	00000008 block_close
2ffd697c l     F ro	00000120 block_write
2ffd6a9c l     F ro	000000f4 block_read
2ffd6b90 l     F ro	00000078 block_dev_open
2ffd6c08 l     F ro	00000060 block_seek
2ffd6c68 l     F ro	0000004c block_open
2ffd6cb4 l     F ro	00000048 block_dev_close
2ffe8b48 l     O .bss	00000004 block_dev_count
2ffe8b4c l     O .bss	00000008 dev_info_pool
2ffe8828 l     O .bss	00000018 state_pool
2ffe3420 l     O ro	00000004 block_dev_connector
2ffe3424 l     O ro	00000024 block_dev_funcs
00000000 l    df *ABS*	00000000 io_dummy.c
2ffd6d28 l     F ro	00000004 device_type_dummy
2ffd6d2c l     F ro	00000004 dummy_dev_close
2ffd6d30 l     F ro	0000001c dummy_dev_open
2ffd6d4c l     F ro	00000020 dummy_block_close
2ffd6d6c l     F ro	00000018 dummy_block_read
2ffd6d84 l     F ro	00000020 dummy_block_len
2ffd6da4 l     F ro	0000003c dummy_block_open
2ffe8b54 l     O .bss	00000008 current_file
2ffe3490 l     O ro	00000004 dummy_dev_connector
2ffe3494 l     O ro	00000024 dummy_dev_funcs
2ffe34b8 l     O ro	00000008 dummy_dev_info
00000000 l    df *ABS*	00000000 io_mtd.c
2ffd6e0c l     F ro	00000008 mtd_close
2ffd6e14 l     F ro	00000084 mtd_read
2ffd6e98 l     F ro	00000074 mtd_seek
2ffd6f0c l     F ro	00000024 mtd_open
2ffd6f30 l     F ro	0000002c mtd_dev_close
2ffd6f5c l     F ro	00000050 mtd_dev_open
2ffe8b5c l     O .bss	00000008 dev_info_pool
2ffe8840 l     O .bss	00000018 state_pool
2ffe34d4 l     O ro	00000004 mtd_dev_connector
2ffe34d8 l     O ro	00000024 mtd_dev_funcs
00000000 l    df *ABS*	00000000 io_storage.c
2ffd6fc8 l     F ro	00000018 is_valid_dev
2ffd6fe0 l     F ro	00000012 is_valid_entity
2ffd6ff4 l     F ro	00000044 free_entity
2ffe8b64 l     O .bss	00000004 dev_count
2ffe8b68 l     O .bss	00000004 entity_count
2ffe8b6c l     O .bss	00000010 entity_map
2ffe8b7c l     O .bss	00000020 entity_pool
00000000 l    df *ABS*	00000000 stm32_hash.c
2ffd727c l     F ro	00000068 hash_write_data
2ffe8b9c l     O .bss	0000000c stm32_hash
2ffe8ba8 l     O .bss	00000008 stm32_remain
2ffe3558 l     O ro	0000000f __func__.7019
2ffe3567 l     O ro	00000016 __func__.7027
00000000 l    df *ABS*	00000000 io_stm32image.c
2ffd7590 l     F ro	00000004 device_type_stm32image
2ffd7594 l     F ro	0000001c stm32image_dev_close
2ffd75b0 l     F ro	0000000c stm32image_partition_close
2ffd75bc l     F ro	00000044 stm32image_dev_init
2ffd7600 l     F ro	000000fc stm32image_partition_read
2ffd76fc l     F ro	000000ec stm32image_partition_size
2ffd77e8 l     F ro	00000048 stm32image_dev_open
2ffd7830 l     F ro	00000050 stm32image_partition_open
2ffe8bb0 l     O .bss	00000004 backend_dev_handle
2ffe8bb4 l     O .bss	00000004 backend_image_spec
2ffe8bb8 l     O .bss	00000004 current_part
2ffe8bbc l     O .bss	00000200 first_lba_buffer
2ffe8dbc l     O .bss	00000004 stm32_img
2ffe8858 l     O .bss	00000048 stm32image_dev
2ffe7000 l     O .data	00000008 stm32image_dev_info
2ffe369c l     O ro	00000024 stm32image_dev_funcs
2ffe3663 l     O ro	0000001a __func__.7190
2ffe367d l     O ro	0000001a __func__.7204
2ffe3698 l     O ro	00000004 stm32image_dev_connector
00000000 l    df *ABS*	00000000 bl2_io_storage.c
2ffd78ac l     F ro	00000140 boot_mmc
2ffd79ec l     F ro	00000010 open_storage
2ffd79fc l     F ro	00000010 open_image
2ffd7a0c l     F ro	00000010 open_dummy
2ffe8dc0 l     O .bss	00000004 backup_nb.7475
2ffe7e00 l     O .bss	00000800 block_buffer
2ffe8dc4 l     O .bss	00000004 dummy_dev_con
2ffe8dc8 l     O .bss	00000004 dummy_dev_handle
2ffe8dcc l     O .bss	00000004 image_dev_handle
2ffe8dd0 l     O .bss	00000004 mmc_dev_con
2ffe8dd4 l     O .bss	00000004 nand_dev_con
2ffe8dd8 l     O .bss	00000004 spi_dev_con
2ffe8ddc l     O .bss	00000008 stm32image_block_spec
2ffe8de4 l     O .bss	00000004 stm32image_dev_con
2ffe8de8 l     O .bss	00000004 storage_dev_handle
2ffe7008 l     O .data	00000004 backup_id.7476
2ffe700c l     O .data	00000008 gpt_block_spec
2ffe7018 l     O .data	00000018 nand_dev_spec
2ffe7030 l     O .data	00000018 spi_nand_dev_spec
2ffe7048 l     O .data	00000018 spi_nor_dev_spec
2ffe7060 l     O .data	00000048 stm32image_dev_info_spec
2ffe3810 l     O ro	00000008 bl2_block_spec
2ffe3818 l     O ro	00000008 bl32_block_spec
2ffe3820 l     O ro	00000034 bl33_partition_spec
2ffe3854 l     O ro	00000014 mmc_block_dev_spec
2ffe3868 l     O ro	00000168 policies
00000000 l    df *ABS*	00000000 bl2_plat_setup.c
2ffe8dec l     O .bss	00000018 console
2ffe9126 l     O .bss	00000001 wakeup_standby
2ffe3d1c l     O ro	00000272 debug_msg
00000000 l    df *ABS*	00000000 auth_mod.c
2ffd8278 l     F ro	0000003e auth_get_param.isra.0
00000000 l    df *ABS*	00000000 crypto_mod.c
00000000 l    df *ABS*	00000000 img_parser_mod.c
2ffe8e04 l     O .bss	00000004 parser_lib_descs
2ffe8e08 l     O .bss	0000000c parser_lib_indices
00000000 l    df *ABS*	00000000 stm32mp_crypto_lib.c
2ffd87e4 l     F ro	00000046 crypto_verify_hash
2ffd882c l     F ro	00000100 crypto_verify_signature
2ffd892c l     F ro	00000060 crypto_lib_init
2ffe8e14 l     O .bss	00000008 auth_ops
00000000 l    df *ABS*	00000000 stm32mp_img_parser_lib.c
2ffd898c l     F ro	00000002 img_lib_init
2ffd898e l     F ro	00000074 img_get_auth_param
2ffd8a02 l     F ro	00000012 img_check_integrity
2ffe6f30 l     O ro	00000014 __img_parser_lib_desc_IMG_PLAT
00000000 l    df *ABS*	00000000 stm32mp_trusted_boot.c
2ffe8e1c l     O .bss	00000020 root_pk_hash
00000000 l    df *ABS*	00000000 mmc.c
2ffd8ac4 l     F ro	00000044 mmc_send_cmd
2ffd8b08 l     F ro	00000044 mmc_device_state
2ffd8b4c l     F ro	0000001c mmc_reset_to_idle
2ffd8b68 l     F ro	00000034 mmc_set_ext_csd
2ffd8b9c l     F ro	00000048 sd_switch.constprop.0
2ffe8e3c l     O .bss	00000010 mmc_csd
2ffe8e4c l     O .bss	00000004 mmc_dev_info
2ffe8620 l     O .bss	00000200 mmc_ext_csd
2ffe8e50 l     O .bss	00000004 mmc_flags
2ffe8e54 l     O .bss	00000004 mmc_ocr_value
2ffe8e58 l     O .bss	00000004 ops
2ffe8e5c l     O .bss	00000004 rca
2ffe8820 l     O .bss	00000008 scr
2ffe90e4 l     O .bss	00000040 sd_switch_func_status
2ffe42b4 l     O ro	00000010 sd_tran_speed_base
2ffe42c4 l     O ro	00000010 tran_speed_base
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 partition.c
2ffe88a0 l     O .bss	000000b0 list
2ffe9127 l     O .bss	00000200 mbr_sector
00000000 l    df *ABS*	00000000 io_mmc.c
2ffd9478 l     F ro	00000004 device_type_mmc
2ffd947c l     F ro	00000004 mmc_dev_init
2ffd9480 l     F ro	00000010 mmc_block_open
2ffd9490 l     F ro	00000014 mmc_block_seek
2ffd94a4 l     F ro	00000004 mmc_block_close
2ffd94a8 l     F ro	0000007c mmc_block_read
2ffd9524 l     F ro	0000001c mmc_dev_open
2ffd9540 l     F ro	00000004 mmc_dev_close
2ffe8950 l     O .bss	00000008 seek_offset
2ffe43b0 l     O ro	00000004 mmc_dev_connector
2ffe43b4 l     O ro	00000024 mmc_dev_funcs
2ffe43d8 l     O ro	00000008 mmc_dev_info
00000000 l    df *ABS*	00000000 stm32_sdmmc2.c
2ffd956c l     F ro	00000004 stm32_sdmmc2_write
2ffd9570 l     F ro	000000c4 dump_registers
2ffd9634 l     F ro	0000007c stm32_sdmmc2_set_ios
2ffd96b0 l     F ro	00000094 stm32_sdmmc2_init
2ffd9744 l     F ro	000002b4 stm32_sdmmc2_send_cmd
2ffd99f8 l     F ro	00000020 stm32_sdmmc2_stop_transfer
2ffd9a18 l     F ro	0000012c stm32_sdmmc2_read
2ffd9b48 l     F ro	000000b4 stm32_sdmmc2_prepare
2ffe9327 l     O .bss	00000001 next_cmd_is_acmd
2ffe8e60 l     O .bss	0000003c sdmmc2_params
2ffe46d8 l     O ro	0000001a __func__.7255
2ffe46f2 l     O ro	00000012 __func__.7316
2ffe4704 l     O ro	00000016 __func__.7345
2ffe471c l     O ro	00000018 stm32_sdmmc2_ops
00000000 l    df *ABS*	00000000 raw_nand.c
2ffd9dd0 l     F ro	00000038 nand_send_addr
2ffd9e08 l     F ro	0000002c nand_send_cmd
2ffd9e34 l     F ro	00000040 nand_read_data
2ffd9e74 l     F ro	00000034 nand_send_wait
2ffd9ea8 l     F ro	000000f8 nand_read_param_page
2ffda090 l     F ro	00000014 nand_mtd_read_page_raw
2ffda0a4 l     F ro	00000060 nand_mtd_block_is_bad
2ffe8e9c l     O .bss	00000008 rawnand_dev
00000000 l    df *ABS*	00000000 stm32_fmc2_nand.c
2ffda27c l     F ro	00000004 fdt32_to_cpu
2ffda280 l     F ro	00000020 stm32_fmc2_set_buswidth_16
2ffda2a0 l     F ro	00000020 stm32_fmc2_set_ecc
2ffda2c0 l     F ro	0000006c stm32_fmc2_setup
2ffda49c l     F ro	000002f4 stm32_fmc2_read_page
2ffda32c l     F ro	00000170 stm32_fmc2_exec
2ffe8ea4 l     O .bss	00000028 stm32_fmc2
2ffe486b l     O ro	00000017 __func__.6688
2ffe4884 l     O ro	00000008 ctrl_ops
00000000 l    df *ABS*	00000000 spi_nand.c
2ffdab68 l     F ro	0000004a spi_nand_reg
2ffdabb4 l     F ro	00000054 spi_nand_load_page
2ffdac08 l     F ro	00000050 spi_nand_read_from_cache
2ffdac58 l     F ro	00000038 spi_nand_update_cfg
2ffdac90 l     F ro	00000058 spi_nand_wait_ready
2ffdace8 l     F ro	0000004c spi_nand_mtd_read_page
2ffdad34 l     F ro	00000060 spi_nand_mtd_block_is_bad
2ffe8958 l     O .bss	00000040 spinand_dev
00000000 l    df *ABS*	00000000 spi_nor.c
2ffdae8c l     F ro	00000032 spi_nor_reg
2ffdaebe l     F ro	0000000c spi_nor_write_en
2ffdaeca l     F ro	0000000c spi_nor_read_sr
2ffdaed8 l     F ro	00000030 spi_nor_clean_bar
2ffdaf08 l     F ro	00000074 spi_nor_wait_ready
2ffe8998 l     O .bss	00000040 nor_dev
00000000 l    df *ABS*	00000000 spi_mem.c
2ffdb1bc l     F ro	00000004 fdt32_to_cpu
2ffdb1c0 l     F ro	00000040 spi_mem_check_buswidth_req
2ffe8ecc l     O .bss	00000010 spi_slave
00000000 l    df *ABS*	00000000 stm32_qspi.c
2ffdb454 l     F ro	00000006 stm32_qspi_read_fifo
2ffdb45a l     F ro	00000006 stm32_qspi_write_fifo
2ffdb460 l     F ro	00000028 stm32_qspi_claim_bus
2ffdb488 l     F ro	00000014 stm32_qspi_release_bus
2ffdb49c l     F ro	00000058 stm32_qspi_wait_for_not_busy
2ffdb4f4 l     F ro	0000003c stm32_qspi_set_mode
2ffdb530 l     F ro	00000074 stm32_qspi_set_speed
2ffdb5a4 l     F ro	00000240 stm32_qspi_exec_op
2ffe8edc l     O .bss	00000014 stm32_qspi
2ffe4a81 l     O ro	0000001d __func__.6560
2ffe4a9e l     O ro	00000014 __func__.6572
2ffe4ab2 l     O ro	00000010 __func__.6590
2ffe4ac2 l     O ro	00000013 __func__.6615
2ffe4ad8 l     O ro	00000014 stm32_qspi_bus_ops
00000000 l    df *ABS*	00000000 core.c
2ffe9328 l     O .bss	00001000 scratch_buff
2ffe89d8 l     O .bss	00000030 nand_dev
00000000 l    df *ABS*	00000000 stm32mp1_boot_device.c
2ffdb9d0 l     F ro	000000e0 get_data_from_otp
00000000 l    df *ABS*	00000000 stm32mp1_ddr.c
2ffdbb20 l     F ro	00000054 set_reg
2ffdbb74 l     F ro	0000001a board_ddr_power_init
2ffdbb8e l     F ro	00000022 stm32mp1_mode_register_write.isra.0
2ffdbbb0 l     F ro	00000054 stm32mp1_wait_sw_done_ack
2ffdbc04 l     F ro	0000006c stm32mp1_wait_operating_mode.isra.0
2ffdbc70 l     F ro	00000064 stm32mp1_ddrphy_idone_wait
2ffe4ea4 l     O ro	00000048 ddr_map
2ffe4eec l     O ro	00000088 ddr_perf
2ffe4f74 l     O ro	000000c8 ddr_reg
2ffe503c l     O ro	00000070 ddr_registers
2ffe50ac l     O ro	00000060 ddr_timing
2ffe516c l     O ro	00000058 ddrphy_reg
2ffe51c4 l     O ro	00000050 ddrphy_timing
2ffe510c l     O ro	00000060 ddrphy_cal
00000000 l    df *ABS*	00000000 stm32mp1_ram.c
2ffdc1b4 l     F ro	0000036c stm32mp1_ddr_setup
2ffe8a08 l     O .bss	00000020 ddr_priv_data
2ffe53cc l     O ro	00000013 __func__.6740
00000000 l    df *ABS*	00000000 desc_image_load.c
2ffe8ef0 l     O .bss	0000000c bl_load_info
2ffe8efc l     O .bss	0000000c next_bl_params
00000000 l    df *ABS*	00000000 plat_image_load.c
00000000 l    df *ABS*	00000000 bl2_image_load_v2.c
00000000 l    df *ABS*	00000000 bl2_main.c
00000000 l    df *ABS*	00000000 bl2_arch_setup.c
00000000 l    df *ABS*	00000000 bl_common.c
2ffdc970 l     F ro	00000138 load_auth_image_internal
00000000 l    df *ABS*	00000000 tf_log.c
2ffe7188 l     O .data	00000004 max_log_level
00000000 l    df *ABS*	00000000 multi_console.c
00000000 l    df *ABS*	00000000 plat_bl_common.c
00000000 l    df *ABS*	00000000 plat_log_common.c
2ffe5690 l     O ro	00000014 plat_prefix_str
00000000 l    df *ABS*	00000000 popcountsi2.c
00000000 l    df *ABS*	00000000 ctzdi2.c
00000000 l    df *ABS*	00000000 udivmoddi4.c
00000000 l    df *ABS*	00000000 stm32mp_common.c
2ffe8f08 l     O .bss	00000004 boot_ctx_address
2ffe8f0c l     O .bss	00000004 latest_stm32_header
00000000 l    df *ABS*	00000000 stm32mp1_private.c
2ffdd138 l     F ro	0000004c get_part_number
2ffe8f10 l     O .bss	00000004 part_number.7229
2ffe5880 l     O ro	00000010 CSWTCH.52
2ffe5890 l     O ro	00000060 stm32mp1_mmap
00000000 l    df *ABS*	00000000 xlat_tables_arch.c
00000000 l    df *ABS*	00000000 xlat_tables_context.c
2ffe8600 l     O .bss	00000020 tf_base_xlat_table
2ffe8f14 l     O .bss	00000010 tf_mapped_regions
2ffe8a28 l     O .bss	00000120 tf_mmap
2ffe7190 l     O .data	00000048 tf_xlat_ctx
00000000 l    df *ABS*	00000000 xlat_tables_core.c
2ffdd7a4 l     F ro	00000158 mmap_add_region_check
2ffdd8fc l     F ro	0000001a xlat_clean_dcache_range
2ffdd918 l     F ro	00000028 xlat_table_get_index
2ffdd940 l     F ro	00000158 xlat_tables_unmap_region
2ffddb4c l     F ro	000001b4 xlat_tables_map_region
00000000 l    df *ABS*	00000000 xlat_tables_utils.c
00000000 l    df *ABS*	00000000 tzc400.c
2ffe8f24 l     O .bss	00000008 tzc400
00000000 l    df *ABS*	00000000 delay_timer.c
2ffe8f2c l     O .bss	00000004 timer_ops
00000000 l    df *ABS*	00000000 generic_delay_timer.c
2ffde454 l     F ro	00000008 get_timer_value
2ffe8f30 l     O .bss	0000000c ops
00000000 l    df *ABS*	00000000 bsec2.c
2ffde4b8 l     F ro	00000018 bsec_lock
2ffde4d0 l     F ro	00000018 bsec_unlock
2ffde4e8 l     F ro	00000018 otp_bank_offset
2ffde500 l     F ro	00000034 bsec_check_error
2ffde670 l     F ro	00000064 bsec_power_safmem
2ffe8f3c l     O .bss	00000004 bsec_base
2ffe8f40 l     O .bss	00000004 bsec_spinlock
00000000 l    df *ABS*	00000000 stm32mp_clkfunc.c
00000000 l    df *ABS*	00000000 stm32mp1_clk.c
2ffded60 l     F ro	0000001c clock_is_always_on
2ffded7c l     F ro	000000b8 stm32mp1_read_pll_freq
2ffdee34 l     F ro	00000198 get_clock_rate
2ffdefcc l     F ro	0000008c stm32mp1_pll_compute_pllxcfgr1
2ffdf058 l     F ro	00000024 stm32mp1_pll_start
2ffdf07c l     F ro	0000003a stm32mp1_mco_csg
2ffdf0b6 l     F ro	00000016 stm32mp1_clk_lock
2ffdf0cc l     F ro	00000016 stm32mp1_clk_unlock
2ffdf0e4 l     F ro	00000080 stm32mp1_pll_stop
2ffdf164 l     F ro	00000022 __clk_enable
2ffdf186 l     F ro	00000024 __clk_disable
2ffdf1ac l     F ro	00000114 stm32mp1_check_pll_conf
2ffdf2c0 l     F ro	00000034 stm32mp1_clk_get_gated_id
2ffdf2f4 l     F ro	00000078 stm32mp1_clk_get_parent
2ffdf36c l     F ro	00000078 __stm32mp1_clk_enable
2ffdf3e4 l     F ro	00000074 __stm32mp1_clk_disable
2ffdf458 l     F ro	00000026 stm32mp1_pkcs_config
2ffdf480 l     F ro	0000006c stm32mp1_set_clkdiv
2ffdf4ec l     F ro	00000084 stm32mp1_osc_wait
2ffdf570 l     F ro	00000080 stm32mp1_set_clksrc
2ffdf5f0 l     F ro	00000088 stm32mp1_pll_output
2ffdf678 l     F ro	00000034 stm32mp1_pll_config_output
2ffdf6ac l     F ro	00000050 stm32mp1_pll_config
2ffdf740 l     F ro	0000021c clk_get_pll1_settings.part.0
2ffe8f44 l     O .bss	00000004 current_opp_khz
2ffe8f48 l     O .bss	000000dc gate_refcounts
2ffe9024 l     O .bss	0000004c pll1_settings
2ffe9070 l     O .bss	00000004 refcount_lock
2ffe9074 l     O .bss	00000004 reg_lock
2ffe9078 l     O .bss	00000018 stm32mp1_osc
2ffe5ea3 l     O ro	0000001a __func__.7250
2ffe5ebd l     O ro	00000003 axiss_parents
2ffe5ec0 l     O ro	00000004 fmc_parents
2ffe5ec4 l     O ro	00000004 i2c12_parents
2ffe5ec8 l     O ro	00000004 i2c35_parents
2ffe5ecc l     O ro	00000004 i2c46_parents
2ffe5ed0 l     O ro	00000004 mcuss_parents
2ffe5ed4 l     O ro	00000004 mpu_parents
2ffe5ed8 l     O ro	00000022 parent_id_clock_id
2ffe5efa l     O ro	00000003 per_parents
2ffe5efd l     O ro	00000003 pllncfgr2
2ffe5f00 l     O ro	00000004 qspi_parents
2ffe5f04 l     O ro	00000004 rng1_parents
2ffe5f08 l     O ro	00000004 rtc_parents
2ffe5f0c l     O ro	00000004 sdmmc12_parents
2ffe5f10 l     O ro	00000004 sdmmc3_parents
2ffe5f14 l     O ro	00000006 spi6_parents
2ffe5f1a l     O ro	00000002 stgen_parents
2ffe5f1c l     O ro	00000008 stm32mp1_axi_div
2ffe5f24 l     O ro	000001b8 stm32mp1_clk_gate
2ffe60dc l     O ro	00000080 stm32mp1_clk_pll
2ffe615c l     O ro	00000108 stm32mp1_clk_sel
2ffe628c l     O ro	00000006 usart1_parents
2ffe6287 l     O ro	00000005 uart6_parents
2ffe6282 l     O ro	00000005 uart234578_parents
2ffe6294 l     O ro	00000003 usbphy_parents
2ffe6292 l     O ro	00000002 usbo_parents
2ffe6264 l     O ro	00000010 stm32mp1_mcu_div
2ffe6274 l     O ro	00000008 stm32mp1_mpu_apbx_div
2ffe627c l     O ro	00000006 stm32mp1_pll
00000000 l    df *ABS*	00000000 stm32mp1_ddr_helpers.c
2ffe62b3 l     O ro	0000000a CSWTCH.26
00000000 l    df *ABS*	00000000 stm32_gpio.c
2ffe032c l     F ro	00000004 fdt32_to_cpu
00000000 l    df *ABS*	00000000 stm32_i2c.c
2ffe0610 l     F ro	0000002c i2c_transfer_config.isra.0
2ffe063c l     F ro	00000044 i2c_wait_flag
2ffe0680 l     F ro	00000090 i2c_ack_failed
2ffe0710 l     F ro	00000042 i2c_wait_txis
2ffe0752 l     F ro	00000042 i2c_wait_stop
2ffe0794 l     F ro	00000218 i2c_write
2ffe09ac l     F ro	000001ec i2c_read.isra.0
2ffe64e4 l     O ro	00000060 i2c_specs
00000000 l    df *ABS*	00000000 stm32_iwdg.c
2ffe9090 l     O .bss	00000020 stm32_iwdg
00000000 l    df *ABS*	00000000 stm32mp_pmic.c
2ffe1314 l     F ro	00000020 dt_get_pmic_node
2ffe1334 l     F ro	0000002e pmic_regulator_enable
2ffe1362 l     F ro	0000002e pmic_regulator_disable
2ffe1390 l     F ro	00000084 dt_pmic_get_regulator_voltage
2ffe1414 l     F ro	0000017c pmic_operate
2ffe90b0 l     O .bss	00000024 i2c_handle
2ffe90d4 l     O .bss	00000004 pmic_i2c_addr
2ffe71f0 l     O .data	00000004 i2c_node.6738
2ffe71f4 l     O .data	00000004 node.6688
2ffe71f8 l     O .data	00000004 status.6692
2ffe66f4 l     O ro	00000008 pmic_regu_ops
00000000 l    df *ABS*	00000000 stpmic1.c
2ffe1948 l     F ro	0000003c get_regulator_data
2ffe1984 l     F ro	0000002a voltage_to_index
2ffe9124 l     O .bss	00000002 pmic_i2c_addr
2ffe90d8 l     O .bss	00000004 pmic_i2c_handle
2ffe6746 l     O ro	00000080 buck1_voltage_table
2ffe67c6 l     O ro	0000004a buck2_voltage_table
2ffe6810 l     O ro	00000070 buck3_voltage_table
2ffe6880 l     O ro	0000007a buck4_voltage_table
2ffe68fa l     O ro	00000002 fixed_5v_voltage_table
2ffe68fc l     O ro	00000032 ldo1_voltage_table
2ffe692e l     O ro	00000032 ldo2_voltage_table
2ffe6960 l     O ro	00000042 ldo3_voltage_table
2ffe69a2 l     O ro	00000002 ldo4_voltage_table
2ffe69a4 l     O ro	0000003e ldo5_voltage_table
2ffe69e2 l     O ro	00000032 ldo6_voltage_table
2ffe6a14 l     O ro	000000e0 regulators_table
2ffe6af4 l     O ro	00000002 vref_ddr_voltage_table
00000000 l    df *ABS*	00000000 stm32mp_dummy_regulator.c
2ffe1bf4 l     F ro	00000004 dummy_regulator_enable
2ffe1bf8 l     F ro	00000004 dummy_regulator_disable
2ffe6af8 l     O ro	00000008 dummy_regu_ops
00000000 l    df *ABS*	00000000 stm32mp_regulator.c
00000000 l    df *ABS*	00000000 stm32mp1_reset.c
00000000 l    df *ABS*	00000000 stm32mp_dt.c
2ffe1d30 l     F ro	00000004 fdt32_to_cpu
2ffe1d34 l     F ro	00000024 fdt_get_node_parent_address_cells
2ffe1d58 l     F ro	0000007c dt_get_stdout_node_offset
2ffe1dd4 l     F ro	000000cc dt_get_opp_freqvolt_from_subnode
2ffe90dc l     O .bss	00000004 fdt_checked
00000000 l    df *ABS*	00000000 stm32mp_shres_helpers.c
2ffe90e0 l     O .bss	00000004 shregs_lock
00000000 l    df *ABS*	00000000 stm32mp1_context.c
00000000 l    df *ABS*	00000000 stm32mp1_dbgmcu.c
2ffe2454 l     F ro	0000002c stm32mp1_dbgmcu_init
00000000 l    df *ABS*	00000000 stm32mp1_security.c
00000000 l    df *ABS*	00000000 stm32mp1_syscfg.c
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 fdt.c
2ffe2684 l     F ro	00000004 fdt32_to_cpu
00000000 l    df *ABS*	00000000 fdt_addresses.c
00000000 l    df *ABS*	00000000 fdt_ro.c
2ffe297c l     F ro	00000004 fdt32_to_cpu
2ffe2980 l     F ro	00000032 nextprop_
2ffe29b2 l     F ro	00000036 fdt_get_property_by_offset_
2ffe2b24 l     F ro	00000078 fdt_get_property_namelen_
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
2ffe2fb6 l     F ro	00000080 unsigned_num_print
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 snprintf.c
2ffe3208 l     F ro	0000004a unsigned_dec_print
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strnlen.c
00000000 l    df *ABS*	00000000 strrchr.c
00000000 l    df *ABS*	00000000 
00000000 l    df *ABS*	00000000 stm32mp_cot.c
2ffe70a8 l     O .data	00000008 stm32_header_pk
2ffe70b0 l     O .data	00000008 stm32_header_sig
2ffe70b8 l     O .data	00000008 stm32_header_sig_alg
2ffe70c0 l     O .data	00000008 stm32_load
2ffe403c l     O ro	00000050 __compound_literal.0
2ffe408c l     O ro	00000050 __compound_literal.1
2ffe40dc l     O ro	00000014 bl32_image
2ffe40f0 l     O ro	00000014 bl33_image
2ffe4104 l     O ro	00000018 cot_desc
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/trusted/bl2/bl2_el3_exceptions.o
00000000 l    df *ABS*	00000000 plat_bl2_mem_params_desc.c
2ffe70c8 l     O .data	000000b8 bl2_mem_params_descs
2ffe6f80 l     F ro	00000008 __zeromem_from_thumb
2ffe6f88 l     F ro	00000008 __clean_dcache_range_from_thumb
2ffe6f90 l     F ro	00000008 __enable_mmu_direct_svc_mon_from_thumb
2ffe6f98 l     F ro	00000008 __console_register_from_arm
2ffe6fa0 l     F ro	00000008 __flush_dcache_range_from_thumb
2ffe6fa8 l     F ro	00000008 __spin_lock_from_thumb
2ffe6fb0 l     F ro	00000008 __bl2_run_next_image_from_thumb
2ffe6fb8 l     F ro	00000008 __spin_unlock_from_thumb
2ffe31f2 g     F ro	00000016 putchar
2ffdcbb4 g     F ro	0000001c console_set_scope
2ffe28ec g     F ro	00000048 fdt_address_cells
2ffde420 g     F ro	0000000a mdelay
2ffe26e0 g     F ro	0000003c fdt_offset_ptr
2ffe1064 g     F ro	00000012 stm32_i2c_mem_read
2ffe238c g     F ro	0000001a stm32mp_mmio_clrbits_32_shregs
2ffdf9b0 g     F ro	00000020 stm32mp1_clk_lp_load_opp_pll1_settings
2ffe71d8 g     O .data	00000018 stm32mp_osc_node_label
2ffdcb74 g     F ro	00000040 console_register
2ffe1758 g     F ro	00000038 is_pmic_regulator
2ffd61e4 g     F ro	00000034 reset_handler
2ffd9fa0 g     F ro	00000058 nand_change_read_column_cmd
2ffd6460 g     F ro	00000064 zeromem
2ffdf726 g     F ro	00000016 stm32mp_clk_get_rate
2ffe33e6 g     O ro	00000021 version_string
2ffdec88 g     F ro	00000018 fdt_get_rcc_secure_status
2ffde77c g     F ro	00000038 bsec_read_sr_lock
2ffd9244 g     F ro	000001f0 load_partition_table
2ffdddf0 g     F ro	00000018 mmap_add_ctx
2ffdcacc g     F ro	00000020 print_entry_point_info
2ffe31d8 g     F ro	0000001a printf
2ffdde08 g     F ro	00000168 mmap_add_dynamic_region_ctx
2ffdce94 g     F ro	0000000c stm32mp_get_boot_ctx_address
2ffea3a8 g     O .bss	00000018 mmu_cfg_params
2ffde1d2 g     F ro	00000002 xlat_tables_print
2ffe7000 g       ro	00000000 __RW_START__
2ffdaf7c g     F ro	000000b4 spi_nor_read
2ffd72e4 g     F ro	000000b0 stm32_hash_update
2ffde868 g     F ro	00000038 bsec_read_sw_lock
2ffe11c0 g     F ro	00000040 stm32_iwdg_refresh
2ffe2b9c g     F ro	0000003e fdt_getprop_namelen
2ffdd05c g     F ro	0000001c configure_mmu
2ffe2af4 g     F ro	00000018 fdt_first_property_offset
2ffd7d74 g     F ro	00000004 bl2_el3_early_platform_setup
2ffe214c g     F ro	00000028 dt_get_node_by_compatible
2ffdd6fc g     F ro	00000028 mmap_add_dynamic_region
2ffd62e0 g     F ro	0000006c asm_assert
2ffdb9c8 g     F ro	00000008 get_nand_device
2ffdb200 g     F ro	0000007c spi_mem_exec_op
2ffde8a0 g     F ro	00000044 bsec_write_otp
2ffd6260 g     F ro	00000034 do_panic
2ffd62d0 g     F ro	00000010 report_data_abort
2ffe2d9e g     F ro	00000020 fdt_parent_offset
2ffe2f7a g     F ro	0000002c memmove
2ffd9b44  w    F ro	00000004 plat_sdmmc2_use_dma
2ffdd61c g     F ro	000000ac setup_mmu_cfg
2ffe3254 g     F ro	000000e0 snprintf
2ffddf70 g     F ro	0000010c mmap_remove_dynamic_region_ctx
2ffe040c g     F ro	00000204 dt_set_pinctrl_config
2ffde378 g     F ro	0000004c tzc400_disable_filters
2ffe2cfe g     F ro	0000001a fdt_path_offset
2ffe23be g     F ro	0000001e stm32_get_zdata_from_context
2ffd74ac g     F ro	0000005c stm32_hash_init
2ffdcc74  w    F ro	00000024 plat_log_get_prefix
2ffe19b0 g     F ro	00000028 stpmic1_register_read
2ffd6714 g     F ro	00000060 plat_report_exception
2ffd6788 g     F ro	00000028 plat_report_undef_inst
2ffe33c8 g     O ro	0000001e build_message
2ffd8724 g     F ro	00000048 img_parser_check_integrity
2ffdebf8 g     F ro	0000000c fdt_get_rcc_node
2ffdd734 g     F ro	0000003c init_xlat_tables
2ffe0330 g     F ro	000000dc set_gpio
2ffdd078 g     F ro	00000020 stm32_get_gpio_bank_clock
2ffdc630 g     F ro	00000030 get_bl_mem_params_node
2ffde658 g     F ro	0000000c bsec_read_debug_conf
2ffd6568 g     F ro	00000050 console_stm32_register
2ffdf720 g     F ro	00000006 stm32mp1_clk_force_enable
2ffd8324 g     F ro	00000284 auth_mod_verify_img
2ffd876c g     F ro	00000078 img_parser_get_auth_param
2ffdd538 g     F ro	00000028 xlat_arch_regime_get_xn_desc
2ffe1640 g     F ro	00000118 initialize_pmic_i2c
2ffdf708 g     F ro	0000000c stm32mp1_clk_rcc_regs_unlock
2ffe2ed4 g     F ro	00000040 fdt_node_offset_by_compatible
2ffd7d78 g     F ro	0000009c bl2_platform_setup
2ffe22e0 g     F ro	00000050 dt_get_cpu_regulator_name
2ffd6cfc g     F ro	0000002c register_io_dev_block
2ffdc520 g     F ro	00000044 stm32mp1_ddr_clk_enable
2ffd6970 g       ro	00000000 __TEXT_RESIDENT_END__
2ffd7d70 g     F ro	00000004 get_boot_device
2ffde7b4 g     F ro	0000007c bsec_shadow_register
2ffe2f64 g     F ro	00000016 memcpy
2ffd82fc g     F ro	00000028 auth_mod_init
2ffdb7e4 g     F ro	000000cc stm32_qspi_init
2ffde744 g     F ro	00000038 bsec_set_sr_lock
2ffdc5d4 g     F ro	0000001c flush_bl_params_desc
2ffdcea8 g     F ro	00000008 stm32mp_ddrphyc_base
2ffd6460 g     F ro	00000064 zero_normalmem
2ffe2660 g     F ro	00000024 __aeabi_uldivmod
2ffe179c g     F ro	00000012 initialize_pmic
2ffdb8b0 g     F ro	00000118 nand_read
2ffe1bc0 g     F ro	00000014 stpmic1_bind_i2c
2ffd6710 g     F ro	00000004 platform_mem_init
2ffd62c0 g     F ro	00000010 report_prefetch_abort
2ffdd36c g     F ro	00000024 stm32mp_is_closed_device
2ffde6f4 g     F ro	00000050 bsec_probe
2ffde638 g     F ro	00000020 bsec_read_otp
2ffdd6f0 g     F ro	0000000c mmap_add
2ffe2480 g     F ro	0000002c stm32mp1_dbgmcu_get_chip_version
2ffe1acc g     F ro	0000002e stpmic1_register_update
2ffdceb0 g     F ro	00000008 stm32mp_pwr_base
2ffdce80 g     F ro	00000006 plat_get_syscnt_freq2
2ffdcef8 g     F ro	00000020 stm32_get_gpio_bank_offset
2ffd695c g     F ro	00000014 plat_panic_handler
2ffe2558 g     F ro	00000068 stm32mp1_syscfg_enable_io_compensation
2ffdc774 g     F ro	00000004 plat_flush_next_bl_params
2ffe2374 g     F ro	00000018 stm32mp_unlock_shregs
2ffda104 g     F ro	0000007c nand_wait_ready
2ffd9ff8 g     F ro	00000098 nand_read_page_cmd
2ffe2a56 g     F ro	00000080 fdt_subnode_offset_namelen
2ffe1790 g     F ro	0000000c bind_pmic_regulator
2ffe24dc g     F ro	0000002c stm32mp1_dbgmcu_freeze_iwdg2
2ffe23dc g     F ro	00000020 stm32_get_pll1_settings_from_context
2ffe0148 g     F ro	00000018 ddr_read_sr_mode
2ffe7e00 g       stacks	00000000 __STACKS_END__
2ffe2d80 g     F ro	0000001e fdt_node_depth
2ffdd3d0 g     F ro	00000028 stm32_iwdg_get_instance
2ffdcce2 g     F ro	0000019e __udivmoddi4
2ffd63e8 g     F ro	0000003c clean_dcache_range
2ffd8658 g     F ro	00000038 crypto_mod_verify_hash
2ffe2080 g     F ro	00000088 dt_fill_device_info
2ffdf714 g     F ro	00000006 stm32mp_clk_enable
2ffd8a14 g     F ro	0000008c plat_get_rotpk_info
2ffe2068 g     F ro	00000018 dt_set_stdout_pinctrl
2ffe7184 g     O .data	00000004 bl_mem_params_desc_ptr
2ffd71d0 g     F ro	00000034 io_size
2ffe1bd4 g     F ro	00000002 stpmic1_dump_regulators
2ffd7060 g     F ro	00000028 io_dev_open
2ffe1c4c g     F ro	00000070 stm32mp_reset_assert_to
2ffd6810 g     F ro	00000048 plat_report_data_abort
2ffd61d4  w    F ro	0000000c plat_set_my_stack
2ffde91c g     F ro	00000038 bsec_read_permanent_lock
2ffe27e4 g     F ro	00000024 fdt_check_node_offset_
2ffe1bfc g     F ro	0000000c bind_dummy_regulator
2ffdc5f0 g     F ro	00000040 get_bl_params_node_index
2ffdd024 g     F ro	0000001c stm32mp_delete_loaded_header
2ffd6378 g     F ro	00000034 asm_print_hex
2ffd7880 g     F ro	0000002c register_io_dev_stm32image
000025c0 g       *ABS*	00000000 __BSS_SIZE__
2ffde6e4 g     F ro	00000010 bsec_get_id
2ffd635c g     F ro	0000001c asm_print_str
2ffea328 g     O .bss	00000078 auth_img_flags
2ffd82bc g     F ro	00000040 auth_mod_get_parent_id
2ffd9c0c g     F ro	000001c4 stm32_sdmmc2_mmc_init
2ffd6944 g     F ro	00000008 plat_crash_console_flush
2ffdcc6a  w    F ro	00000004 plat_error_handler
2ffdcea0 g     F ro	00000008 stm32mp_ddrctrl_base
2ffe339a g     F ro	00000014 strnlen
2ffe2bda g     F ro	00000022 fdt_getprop
2ffdbaf2 g     F ro	0000002c plat_get_nor_data
2ffe0080 g     F ro	000000a4 stm32mp1_clk_probe
2ffd8248 g     F ro	00000030 bl2_plat_handle_post_image_load
2ffe6fc0 g       ro	00000000 __RO_END_UNALIGNED__
2ffdea70 g     F ro	000000a0 fdt_osc_read_freq
2ffdcbd0 g     F ro	00000058 console_putc
2ffd6874 g     F ro	00000004 plat_secondary_cold_boot_setup
2ffdbcd4 g     F ro	000004e0 stm32mp1_ddr_init
2ffe33ae g     F ro	0000001a strrchr
2ffe1c08 g     F ro	0000001c stm32mp_regulator_enable
2ffd6fac g     F ro	0000001c register_io_dev_mtd
2ffd6898 g     F ro	00000090 plat_crash_console_init
2ffd63ac g     F ro	0000003c flush_dcache_range
2ffe1078 g     F ro	00000148 stm32_i2c_is_device_ready
2ffdd184 g     F ro	00000040 stm32mp_supports_cpu_opp
2ffde42c g     F ro	00000028 timer_init
2ffdc6b4 g     F ro	000000c0 get_next_bl_params_from_mem_params_desc
2ffe2e00 g     F ro	00000046 fdt_stringlist_contains
2ffdd390 g     F ro	00000040 stm32mp_is_auth_supported
2ffe1afa g     F ro	00000014 stpmic1_regulator_enable
2ffde6d4 g     F ro	00000010 bsec_get_version
2ffdd514 g     F ro	00000006 xlat_get_min_virt_addr_space_size
2ffd7494 g     F ro	00000016 stm32_hash_final_update
2ffe1a00 g     F ro	00000074 stpmic1_regulator_voltage_get
2ffe3038 g     F ro	000001a0 vprintf
2ffdcc98 g     F ro	0000002a __popcountsi2
2ffe1f80 g     F ro	00000050 fdt_read_uint32_array
2ffdd51a g     F ro	0000001c is_dcache_enabled
2ffd8cac g     F ro	000004fc mmc_init
2ffd6868 g     F ro	00000004 plat_reset_handler
2ffd8aa0 g     F ro	0000001c plat_get_nv_ctr
2ffe2ad6 g     F ro	0000001e fdt_subnode_offset
2ffd8abc g     F ro	00000006 plat_set_nv_ctr
2ffd621c g     F ro	00000038 get_cpu_ops_ptr
2ffdc778 g     F ro	00000080 plat_get_bl_image_load_info
2ffdce88 g     F ro	0000000c stm32mp_save_boot_ctx_address
2ffe235c g     F ro	00000018 stm32mp_lock_shregs
2ffdd040 g     F ro	0000001c stm32mp_get_loaded_header
2ffdcaa8 g     F ro	00000022 load_auth_image
2ffe2f2c g     F ro	0000001c memchr
2ffe1bd6 g     F ro	0000001e stpmic1_get_version
2ffe2934 g     F ro	00000048 fdt_size_cells
2ffea3c0 g       .bss	00000000 __BL2_END__
2ffdad94 g     F ro	000000f8 spi_nand_init
2ffd9bfc g     F ro	00000010 stm32_sdmmc2_mmc_get_device_size
2ffdd5a0 g     F ro	0000003c xlat_arch_current_el
2ffde534 g     F ro	00000104 bsec_find_otp_name_in_dt
2ffded0c g     F ro	00000054 stm32mp_stgen_config
2ffe2d18 g     F ro	00000068 fdt_supernode_atdepth_offset
2ffe2330 g     F ro	0000002c dt_get_board_model
2ffe1f58 g     F ro	00000028 fdt_read_uint32_default
2ffe28c0 g     F ro	0000002a fdt_next_subnode
2ffd8690 g     F ro	00000094 img_parser_init
2ffdd0c0 g     F ro	00000030 stm32_get_otp_value_from_idx
2ffe71fc g       .data	00000000 __DATA_RAM_END__
2ffe41c0 g     O ro	00000010 crypto_lib_desc
2ffdc91c g     F ro	00000050 bl2_main
2ffe1c48 g     F ro	00000004 stm32mp_regulator_register
2ffe3372 g     F ro	00000028 strncmp
2ffd62b0 g     F ro	00000010 report_undef_inst
2ffe6f28 g       ro	00000000 __CPU_OPS_START__
2ffde3c4 g     F ro	0000005c udelay
2ffe212c g     F ro	0000001e dt_get_stdout_uart_info
2ffe2808 g     F ro	00000024 fdt_check_prop_offset_
2ffdb030 g     F ro	0000018c spi_nor_init
2ffdec58 g     F ro	00000030 fdt_rcc_read_prop
2ffd6424 g     F ro	0000003c inv_dcache_range
2ffe718c g     O .data	00000001 console_state
2ffd65c0 g     F ro	00000048 console_stm32_core_putc
2ffe242c g     F ro	00000028 stm32_restore_ddr_training_area
2ffd6000 g     F ro	00000134 bl2_entrypoint
2ffd85ec g     F ro	0000006c crypto_mod_verify_signature
2ffdcf18 g     F ro	000000c0 stm32mp_check_header
2ffd6628 g     F ro	00000030 console_stm32_core_flush
2ffde474 g     F ro	00000044 generic_delay_timer_init
2ffdcc68  w    F ro	00000002 bl2_el3_plat_prepare_exit
2ffde664 g     F ro	0000000c bsec_get_status
2ffde45c g     F ro	00000018 generic_delay_timer_init_args
2ffe2f48 g     F ro	0000001c memcmp
2ffdceb8 g     F ro	00000006 stm32mp_rcc_base
2ffe228c g     F ro	00000054 dt_get_pwr_vdd_voltage
2ffdda98 g     F ro	000000b4 xlat_desc
2ffe2c6c g     F ro	00000092 fdt_path_offset_namelen
2ffe2b0c g     F ro	00000018 fdt_next_property_offset
2ffe24ac g     F ro	00000030 stm32mp1_dbgmcu_get_chip_dev_id
2ffd6878 g     F ro	0000001c plat_is_my_cpu_primary
2ffe2108 g     F ro	00000024 dt_get_node
2ffd82b6  w    F ro	00000006 plat_set_nv_ctr2
2ffea3c0 g       .bss	00000000 __BSS_END__
2ffe6f30 g       ro	00000000 __CPU_OPS_END__
2ffe2508 g     F ro	00000050 stm32mp1_arch_security_setup
2ffde310 g     F ro	00000068 tzc400_enable_filters
2ffd686c g     F ro	00000008 plat_get_my_entrypoint
2ffd7184 g     F ro	0000004c io_seek
2ffe2dbe g     F ro	00000042 fdt_node_offset_by_phandle
2ffd724c g     F ro	00000030 io_close
2ffdccc2 g     F ro	00000020 __ctzdi2
2ffdeca0 g     F ro	00000048 fdt_get_clock_id
2ffdb27c g     F ro	000001d8 spi_mem_init_slave
2ffde254 g     F ro	000000bc tzc400_configure_region
2ffe1ea0 g     F ro	0000001c dt_open_and_check
2ffd64e0 g     F ro	00000008 disable_mmu_icache_secure
2ffe2fa6 g     F ro	00000010 memset
2ffd9474 g     F ro	00000004 partition_init
2ffe6f44 g       ro	00000000 __PARSER_LIB_DESCS_END__
2ffd7e14 g     F ro	00000434 bl2_el3_plat_arch_setup
2ffdbac0 g     F ro	00000032 plat_get_spi_nand_data
2ffdcfd8 g     F ro	0000002e stm32mp_get_cpu_supply_name
2ffe6f60 g       ro	00000000 bl2_vector_table
2ffd6e08 g     F ro	00000004 device_type_mtd
2ffd6158 g     F ro	00000040 bl2_run_next_image
2ffd6608 g     F ro	0000001c console_stm32_putc
2ffe7180 g     O .data	00000004 bl_mem_params_desc_num
2ffdcc6e  w    F ro	00000002 bl2_plat_preload_setup
2ffdd50c g     F ro	00000008 xlat_arch_get_max_supported_pa
2ffdc7fc g     F ro	00000110 bl2_load_images
2ffdd770 g     F ro	00000034 enable_mmu_svc_mon
2ffe0160 g     F ro	000001cc ddr_set_sr_mode
2ffdc96c g     F ro	00000002 bl2_arch_setup
2ffe2bfc g     F ro	00000044 fdt_get_phandle
2ffd85a8 g     F ro	00000044 crypto_mod_init
2ffe334a g     F ro	00000018 strcmp
2ffdec04 g     F ro	00000024 fdt_rcc_read_uint32_array
2ffe1200 g     F ro	00000114 stm32_iwdg_init
2ffda180 g     F ro	0000000c nand_raw_ctrl_init
2ffde1d4 g     F ro	00000024 tzc400_set_action
2ffe1b24 g     F ro	0000005c stpmic1_regulator_voltage_set
2ffd6de0 g     F ro	00000028 register_io_dev_dummy
2ffdd008 g     F ro	0000001c stm32mp_save_loaded_header
2ffe411c g     O ro	00000004 cot_desc_ptr
2ffd64ec g     F ro	0000007c console_stm32_core_init
2ffdc5a0 g     F ro	00000034 flush_bl_params_desc_args
2ffd64c4 g     F ro	0000001c disable_mmu_secure
2ffe0b98 g     F ro	00000060 stm32_i2c_get_setup_from_fdt
2ffdf95c g     F ro	00000054 stm32mp1_clk_get_maxfreq_opp
2ffe1a74 g     F ro	00000058 stpmic1_register_write
2ffe19d8 g     F ro	00000028 stpmic1_is_regulator_enabled
2ffd6658 g     F ro	0000001c console_stm32_flush
2ffda18c g     F ro	000000f0 nand_raw_init
2ffe2688 g     F ro	00000058 fdt_check_header
2ffda790 g     F ro	000003d8 stm32_fmc2_init
2ffdcc28 g     F ro	00000040 console_flush
2ffdd590 g     F ro	00000010 xlat_arch_tlbi_va_sync
2ffdf71a g     F ro	00000006 stm32mp_clk_disable
2ffe7000 g       ro	00000000 __RO_END__
2ffd7088 g     F ro	00000034 io_dev_init
2ffe29f8 g     F ro	0000005e fdt_get_name
2ffe1ed4 g     F ro	00000020 fdt_check_node
2ffd7204 g     F ro	00000048 io_read
2ffd9544 g     F ro	00000028 register_io_dev_mmc
2ffe17f8 g     F ro	00000150 pmic_ddr_power_init
2ffd61bc g     F ro	00000018 spin_unlock
2ffe289a g     F ro	00000026 fdt_first_subnode
2ffe17ae g     F ro	00000014 configure_pmic
2ffe7e00 g       .bss	00000000 __BSS_START__
2ffe7000 g       .data	00000000 __DATA_RAM_START__
2ffe1c24 g     F ro	00000024 stm32mp_regulator_disable
2ffd6000 g       ro	00000000 __RO_START__
2ffe1ba4 g     F ro	0000001a stpmic1_regulator_mask_reset_set
2ffe2204 g     F ro	00000088 dt_get_max_opp_freqvolt
2ffddd00 g     F ro	000000f0 mmap_add_region_ctx
2ffd7cec g     F ro	00000084 plat_try_next_boot_source
2ffd7394 g     F ro	00000100 stm32_hash_final
2ffd6950 g     F ro	00000008 plat_crash_console_putc
2ffde954 g     F ro	000000e0 bsec_program_otp
2ffd70ec g     F ro	00000098 io_open
2ffe282c g     F ro	0000006e fdt_next_node
2ffd8be4 g     F ro	000000c8 mmc_read_blocks
2ffdc90c g     F ro	0000000e bl2_el3_setup
2ffe1ebc g     F ro	00000018 fdt_get_address
2ffd6198 g     F ro	00000024 spin_lock
2ffdcb48 g     F ro	0000002c console_is_registered
2ffe2174 g     F ro	0000006c dt_match_instance_by_compatible
2ffe0124 g     F ro	00000022 ddr_enable_clock
2ffdeb84 g     F ro	00000074 fdt_osc_read_uint32_default
2ffe21e0 g     F ro	00000024 dt_get_ddr_size
2ffdd5dc g     F ro	00000040 is_mmu_enabled_ctx
2ffdea34 g     F ro	0000003c bsec_shadow_read_otp
2ffd7cac g     F ro	00000040 plat_get_image_source
2ffde1f8 g     F ro	0000005c tzc400_init
2ffdcaec g     F ro	0000005c tf_log
2ffd7038 g     F ro	00000028 io_register_device
2ffdeb10 g     F ro	00000074 fdt_osc_read_bool
2ffdec28 g     F ro	00000030 fdt_rcc_subnode_offset
2ffea3c0 g       .bss	00000000 __RW_END__
2ffdced0 g     F ro	00000028 stm32_get_gpio_bank_base
2ffe23fc g     F ro	00000030 stm32_save_boot_interface
2ffe1ef4 g     F ro	00000064 fdt_get_status
2ffdf6fc g     F ro	0000000c stm32mp1_clk_rcc_regs_lock
2ffe23a6 g     F ro	00000018 stm32mp_mmio_setbits_32_shregs
2ffe29e8 g     F ro	00000010 fdt_string
2ffdd448 g     F ro	00000074 stm32_iwdg_shadow_update
2ffd67b8 g     F ro	00000048 plat_report_prefetch_abort
2ffdc660 g     F ro	00000054 get_bl_load_info_from_mem_params_desc
2ffe7200 g       stacks	00000000 __STACKS_START__
2ffe271c g     F ro	000000c6 fdt_next_tag
2ffdd1c4 g     F ro	0000015c stm32mp_print_cpuinfo
2ffd6000 g       ro	00000000 __TEXT_RESIDENT_START__
2ffd91a8 g     F ro	0000009c parse_gpt_entry
2ffde07c g     F ro	00000154 init_xlat_tables_ctx
2ffe17c4 g     F ro	00000034 print_pmic_info_and_debug
2ffd7508 g     F ro	00000088 stm32_hash_register
2ffe0bf8 g     F ro	00000450 stm32_i2c_init
2ffdd4bc g     F ro	00000050 plat_bind_regulator
2ffe1048 g     F ro	0000001c stm32_i2c_mem_write
2ffdcc70  w    F ro	00000004 bl2_plat_handle_pre_image_load
2ffe2c40 g     F ro	0000002c fdt_get_alias_namelen
2ffdecfc g     F ro	00000010 stm32mp_stgen_get_counter
2ffdcebe g     F ro	00000010 stm32mp_lock_available
2ffe3362 g     F ro	00000010 strlen
2ffe1cbc g     F ro	00000074 stm32mp_reset_deassert_to
2ffdf9d0 g     F ro	000006b0 stm32mp1_clk_init
2ffe1fd0 g     F ro	00000098 fdt_get_reg_props_by_name
2ffd629c g     F ro	00000014 report_exception
2ffdd098 g     F ro	00000028 stm32_get_otp_index
2ffdd560 g     F ro	00000030 xlat_arch_tlbi_va
2ffdd3f8 g     F ro	00000050 stm32_iwdg_get_otp_config
2ffe1590 g     F ro	00000028 dt_pmic_status
2ffd70bc g     F ro	00000030 io_dev_close
2ffe2f14 g     F ro	00000018 __assert
2ffde830 g     F ro	00000038 bsec_set_sw_lock
2ffe3334 g     F ro	00000016 strchr
2ffde1d0 g     F ro	00000002 xlat_mmap_print
2ffe1b0e g     F ro	00000014 stpmic1_regulator_disable
2ffdc564 g     F ro	0000003c stm32mp1_ddr_probe
2ffe1b80 g     F ro	00000024 stpmic1_regulator_pull_down_set
2ffd6678 g     F ro	00000074 enable_mmu_direct_svc_mon
2ffe2e46 g     F ro	00000066 fdt_stringlist_search
2ffdece8 g     F ro	00000014 fdt_is_pll1_predefined
2ffe2eac g     F ro	00000028 fdt_node_check_compatible
2ffd7a1c g     F ro	00000290 stm32mp_io_setup
2ffdd724 g     F ro	00000010 mmap_remove_dynamic_region
2ffe15c4 g     F ro	0000007c dt_pmic_find_supply
2ffdd0f0 g     F ro	00000048 stm32_get_otp_value
2ffea3a0 g     O .bss	00000004 console_list
2ffd6970 g     F ro	00000004 device_type_block
2ffdd320 g     F ro	0000004c stm32mp_print_boardinfo
2ffdc7f8 g     F ro	00000004 plat_get_next_bl_params
2ffd9434 g     F ro	00000040 get_partition_entry
2ffe25c0 g     F ro	000000a0 stm32mp1_syscfg_init
2ffde8e4 g     F ro	00000038 bsec_read_sp_lock
2ffdd6c8 g     F ro	00000028 mmap_add_region
2ffe6f30 g       ro	00000000 __PARSER_LIB_DESCS_START__
2ffe15b8 g     F ro	0000000a pmic_configure_boot_on_regulators
2ffdbab0 g     F ro	00000010 plat_get_raw_nand_data



Disassembly of section ro:

2ffd6000 <bl2_entrypoint>:
2ffd6000:	e1a09000 	mov	r9, r0
2ffd6004:	e1a0a001 	mov	sl, r1
2ffd6008:	e1a0b002 	mov	fp, r2
2ffd600c:	e1a0c003 	mov	ip, r3
2ffd6010:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffd6014:	e3100001 	tst	r0, #1
2ffd6018:	0a000002 	beq	2ffd6028 <bl2_entrypoint+0x28>
2ffd601c:	e59f0110 	ldr	r0, [pc, #272]	; 2ffd6134 <do_primary_cold_boot+0x4c>
2ffd6020:	e3a010d4 	mov	r1, #212	; 0xd4
2ffd6024:	ea0000ad 	b	2ffd62e0 <asm_assert>
2ffd6028:	e59f0108 	ldr	r0, [pc, #264]	; 2ffd6138 <do_primary_cold_boot+0x50>
2ffd602c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffd6030:	f57ff06f 	isb	sy
2ffd6034:	f1020016 	cps	#22
2ffd6038:	f57ff06f 	isb	sy
2ffd603c:	eb00020a 	bl	2ffd686c <plat_get_my_entrypoint>
2ffd6040:	e3500000 	cmp	r0, #0
2ffd6044:	112fff10 	bxne	r0
2ffd6048:	e59f00ec 	ldr	r0, [pc, #236]	; 2ffd613c <do_primary_cold_boot+0x54>
2ffd604c:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
2ffd6050:	ee0c0f30 	mcr	15, 0, r0, cr12, cr0, {1}
2ffd6054:	f57ff06f 	isb	sy
2ffd6058:	eb000061 	bl	2ffd61e4 <reset_handler>
2ffd605c:	e59f10dc 	ldr	r1, [pc, #220]	; 2ffd6140 <do_primary_cold_boot+0x58>
2ffd6060:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffd6064:	e1800001 	orr	r0, r0, r1
2ffd6068:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffd606c:	f57ff06f 	isb	sy
2ffd6070:	e3a00c02 	mov	r0, #512	; 0x200
2ffd6074:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffd6078:	f1080100 	cpsie	a
2ffd607c:	f57ff06f 	isb	sy
2ffd6080:	ee110f51 	mrc	15, 0, r0, cr1, cr1, {2}
2ffd6084:	e2000807 	and	r0, r0, #458752	; 0x70000
2ffd6088:	e3800b03 	orr	r0, r0, #3072	; 0xc00
2ffd608c:	ee010f51 	mcr	15, 0, r0, cr1, cr1, {2}
2ffd6090:	f57ff06f 	isb	sy
2ffd6094:	e3a0060f 	mov	r0, #15728640	; 0xf00000
2ffd6098:	ee010f50 	mcr	15, 0, r0, cr1, cr0, {2}
2ffd609c:	f57ff06f 	isb	sy
2ffd60a0:	e59f009c 	ldr	r0, [pc, #156]	; 2ffd6144 <do_primary_cold_boot+0x5c>
2ffd60a4:	eee80a10 	vmsr	fpexc, r0
2ffd60a8:	f57ff06f 	isb	sy
2ffd60ac:	e3a00020 	mov	r0, #32
2ffd60b0:	ee090f1c 	mcr	15, 0, r0, cr9, cr12, {0}
2ffd60b4:	ee100f11 	mrc	15, 0, r0, cr0, cr1, {0}
2ffd60b8:	e200040f 	and	r0, r0, #251658240	; 0xf000000
2ffd60bc:	e3500401 	cmp	r0, #16777216	; 0x1000000
2ffd60c0:	1a000002 	bne	2ffd60d0 <bl2_entrypoint+0xd0>
2ffd60c4:	e10f0000 	mrs	r0, CPSR
2ffd60c8:	e3800602 	orr	r0, r0, #2097152	; 0x200000
2ffd60cc:	e12ff000 	msr	CPSR_fsxc, r0
2ffd60d0:	eb0001e8 	bl	2ffd6878 <plat_is_my_cpu_primary>
2ffd60d4:	e3500000 	cmp	r0, #0
2ffd60d8:	1a000002 	bne	2ffd60e8 <do_primary_cold_boot>
2ffd60dc:	eb0001e4 	bl	2ffd6874 <plat_secondary_cold_boot_setup>
2ffd60e0:	eb00021d 	bl	2ffd695c <plat_panic_handler>
2ffd60e4:	e320f000 	nop	{0}

2ffd60e8 <do_primary_cold_boot>:
2ffd60e8:	eb000188 	bl	2ffd6710 <platform_mem_init>
2ffd60ec:	e59f0054 	ldr	r0, [pc, #84]	; 2ffd6148 <do_primary_cold_boot+0x60>
2ffd60f0:	e59f1054 	ldr	r1, [pc, #84]	; 2ffd614c <do_primary_cold_boot+0x64>
2ffd60f4:	e0411000 	sub	r1, r1, r0
2ffd60f8:	eb0000c9 	bl	2ffd6424 <inv_dcache_range>
2ffd60fc:	e1a0700c 	mov	r7, ip
2ffd6100:	e59f0048 	ldr	r0, [pc, #72]	; 2ffd6150 <do_primary_cold_boot+0x68>
2ffd6104:	e59f1048 	ldr	r1, [pc, #72]	; 2ffd6154 <do_primary_cold_boot+0x6c>
2ffd6108:	eb0000d4 	bl	2ffd6460 <zero_normalmem>
2ffd610c:	e1a0c007 	mov	ip, r7
2ffd6110:	eb00002f 	bl	2ffd61d4 <plat_set_my_stack>
2ffd6114:	e1a00009 	mov	r0, r9
2ffd6118:	e1a0100a 	mov	r1, sl
2ffd611c:	e1a0200b 	mov	r2, fp
2ffd6120:	e1a0300c 	mov	r3, ip
2ffd6124:	fa0019f8 	blx	2ffdc90c <bl2_el3_setup>
2ffd6128:	fa0019fb 	blx	2ffdc91c <bl2_main>
2ffd612c:	eb00020a 	bl	2ffd695c <plat_panic_handler>
2ffd6130:	e320f000 	nop	{0}
2ffd6134:	2ffe6d2a 	.word	0x2ffe6d2a
2ffd6138:	00c50038 	.word	0x00c50038
2ffd613c:	2ffe6f60 	.word	0x2ffe6f60
2ffd6140:	00001002 	.word	0x00001002
2ffd6144:	40000700 	.word	0x40000700
2ffd6148:	2ffe7000 	.word	0x2ffe7000
2ffd614c:	2ffea3c0 	.word	0x2ffea3c0
2ffd6150:	2ffe7e00 	.word	0x2ffe7e00
2ffd6154:	000025c0 	.word	0x000025c0

2ffd6158 <bl2_run_next_image>:
2ffd6158:	e1a08000 	mov	r8, r0
2ffd615c:	eb0000df 	bl	2ffd64e0 <disable_mmu_icache_secure>
2ffd6160:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
2ffd6164:	f57ff04f 	dsb	sy
2ffd6168:	f57ff06f 	isb	sy
2ffd616c:	e1a00008 	mov	r0, r8
2ffd6170:	fa001abc 	blx	2ffdcc68 <bl2_el3_plat_prepare_exit>
2ffd6174:	e598e008 	ldr	lr, [r8, #8]
2ffd6178:	e598100c 	ldr	r1, [r8, #12]
2ffd617c:	e163f001 	msr	SPSR_xc, r1
2ffd6180:	f1020013 	cps	#19
2ffd6184:	e598e010 	ldr	lr, [r8, #16]
2ffd6188:	f1020016 	cps	#22
2ffd618c:	e2888014 	add	r8, r8, #20
2ffd6190:	e898000f 	ldm	r8, {r0, r1, r2, r3}
2ffd6194:	e160006e 	eret

2ffd6198 <spin_lock>:
2ffd6198:	e3a02001 	mov	r2, #1
2ffd619c:	e1901f9f 	ldrex	r1, [r0]
2ffd61a0:	e3510000 	cmp	r1, #0
2ffd61a4:	1320f002 	wfene
2ffd61a8:	01801f92 	strexeq	r1, r2, [r0]
2ffd61ac:	03510000 	cmpeq	r1, #0
2ffd61b0:	1afffff9 	bne	2ffd619c <spin_lock+0x4>
2ffd61b4:	f57ff05f 	dmb	sy
2ffd61b8:	e12fff1e 	bx	lr

2ffd61bc <spin_unlock>:
2ffd61bc:	e3a01000 	mov	r1, #0
2ffd61c0:	f57ff05f 	dmb	sy
2ffd61c4:	e5801000 	str	r1, [r0]
2ffd61c8:	f57ff04f 	dsb	sy
2ffd61cc:	e320f004 	sev
2ffd61d0:	e12fff1e 	bx	lr

2ffd61d4 <plat_set_my_stack>:
2ffd61d4:	e59f0004 	ldr	r0, [pc, #4]	; 2ffd61e0 <plat_set_my_stack+0xc>
2ffd61d8:	e1a0d000 	mov	sp, r0
2ffd61dc:	e12fff1e 	bx	lr
2ffd61e0:	2ffe7e00 	.word	0x2ffe7e00

2ffd61e4 <reset_handler>:
2ffd61e4:	e1a0800e 	mov	r8, lr
2ffd61e8:	eb00019e 	bl	2ffd6868 <plat_reset_handler>
2ffd61ec:	eb00000a 	bl	2ffd621c <get_cpu_ops_ptr>
2ffd61f0:	e3500000 	cmp	r0, #0
2ffd61f4:	1a000002 	bne	2ffd6204 <reset_handler+0x20>
2ffd61f8:	e59f0018 	ldr	r0, [pc, #24]	; 2ffd6218 <reset_handler+0x34>
2ffd61fc:	e3a01023 	mov	r1, #35	; 0x23
2ffd6200:	ea000036 	b	2ffd62e0 <asm_assert>
2ffd6204:	e5901004 	ldr	r1, [r0, #4]
2ffd6208:	e3510000 	cmp	r1, #0
2ffd620c:	e1a0e008 	mov	lr, r8
2ffd6210:	112fff11 	bxne	r1
2ffd6214:	e12fff1e 	bx	lr
2ffd6218:	2ffe6d53 	.word	0x2ffe6d53

2ffd621c <get_cpu_ops_ptr>:
2ffd621c:	e59f4030 	ldr	r4, [pc, #48]	; 2ffd6254 <error_exit+0x4>
2ffd6220:	e59f5030 	ldr	r5, [pc, #48]	; 2ffd6258 <error_exit+0x8>
2ffd6224:	e3a00000 	mov	r0, #0
2ffd6228:	ee102f10 	mrc	15, 0, r2, cr0, cr0, {0}
2ffd622c:	e59f3028 	ldr	r3, [pc, #40]	; 2ffd625c <error_exit+0xc>
2ffd6230:	e0022003 	and	r2, r2, r3
2ffd6234:	e1540005 	cmp	r4, r5
2ffd6238:	2a000004 	bcs	2ffd6250 <error_exit>
2ffd623c:	e4941008 	ldr	r1, [r4], #8
2ffd6240:	e0011003 	and	r1, r1, r3
2ffd6244:	e1510002 	cmp	r1, r2
2ffd6248:	1afffff9 	bne	2ffd6234 <get_cpu_ops_ptr+0x18>
2ffd624c:	e2440008 	sub	r0, r4, #8

2ffd6250 <error_exit>:
2ffd6250:	e12fff1e 	bx	lr
2ffd6254:	2ffe6f28 	.word	0x2ffe6f28
2ffd6258:	2ffe6f30 	.word	0x2ffe6f30
2ffd625c:	ff00fff0 	.word	0xff00fff0

2ffd6260 <do_panic>:
2ffd6260:	e24e6004 	sub	r6, lr, #4
2ffd6264:	eb00018b 	bl	2ffd6898 <plat_crash_console_init>
2ffd6268:	e3500000 	cmp	r0, #0
2ffd626c:	0a000006 	beq	2ffd628c <do_panic+0x2c>
2ffd6270:	e59f401c 	ldr	r4, [pc, #28]	; 2ffd6294 <do_panic+0x34>
2ffd6274:	eb000038 	bl	2ffd635c <asm_print_str>
2ffd6278:	e1a04006 	mov	r4, r6
2ffd627c:	eb00003d 	bl	2ffd6378 <asm_print_hex>
2ffd6280:	e59f4010 	ldr	r4, [pc, #16]	; 2ffd6298 <do_panic+0x38>
2ffd6284:	eb000034 	bl	2ffd635c <asm_print_str>
2ffd6288:	eb0001ad 	bl	2ffd6944 <plat_crash_console_flush>
2ffd628c:	e1a0e006 	mov	lr, r6
2ffd6290:	ea0001b1 	b	2ffd695c <plat_panic_handler>
2ffd6294:	2ffe6d72 	.word	0x2ffe6d72
2ffd6298:	2ffe6d83 	.word	0x2ffe6d83

2ffd629c <report_exception>:
2ffd629c:	e10f0000 	mrs	r0, CPSR
2ffd62a0:	e200001f 	and	r0, r0, #31
2ffd62a4:	eb00011a 	bl	2ffd6714 <plat_report_exception>
2ffd62a8:	eb0001ab 	bl	2ffd695c <plat_panic_handler>
2ffd62ac:	e320f000 	nop	{0}

2ffd62b0 <report_undef_inst>:
2ffd62b0:	e1060300 	mrs	r0, LR_und
2ffd62b4:	eb000133 	bl	2ffd6788 <plat_report_undef_inst>
2ffd62b8:	eb0001a7 	bl	2ffd695c <plat_panic_handler>
2ffd62bc:	e320f000 	nop	{0}

2ffd62c0 <report_prefetch_abort>:
2ffd62c0:	e1040300 	mrs	r0, LR_abt
2ffd62c4:	eb00013b 	bl	2ffd67b8 <plat_report_prefetch_abort>
2ffd62c8:	eb0001a3 	bl	2ffd695c <plat_panic_handler>
2ffd62cc:	e320f000 	nop	{0}

2ffd62d0 <report_data_abort>:
2ffd62d0:	e1040300 	mrs	r0, LR_abt
2ffd62d4:	eb00014d 	bl	2ffd6810 <plat_report_data_abort>
2ffd62d8:	eb00019f 	bl	2ffd695c <plat_panic_handler>
2ffd62dc:	e320f000 	nop	{0}

2ffd62e0 <asm_assert>:
2ffd62e0:	e1a05000 	mov	r5, r0
2ffd62e4:	e1a06001 	mov	r6, r1
2ffd62e8:	eb00016a 	bl	2ffd6898 <plat_crash_console_init>
2ffd62ec:	e3500000 	cmp	r0, #0
2ffd62f0:	0a000013 	beq	2ffd6344 <dec_print_loop+0x20>
2ffd62f4:	e59f4050 	ldr	r4, [pc, #80]	; 2ffd634c <dec_print_loop+0x28>
2ffd62f8:	eb000017 	bl	2ffd635c <asm_print_str>
2ffd62fc:	e1a04005 	mov	r4, r5
2ffd6300:	eb000015 	bl	2ffd635c <asm_print_str>
2ffd6304:	e59f4044 	ldr	r4, [pc, #68]	; 2ffd6350 <dec_print_loop+0x2c>
2ffd6308:	eb000013 	bl	2ffd635c <asm_print_str>
2ffd630c:	e59f4040 	ldr	r4, [pc, #64]	; 2ffd6354 <dec_print_loop+0x30>
2ffd6310:	e1160004 	tst	r6, r4
2ffd6314:	1a00000a 	bne	2ffd6344 <dec_print_loop+0x20>
2ffd6318:	e1a04006 	mov	r4, r6
2ffd631c:	e3a0600a 	mov	r6, #10
2ffd6320:	e59f5030 	ldr	r5, [pc, #48]	; 2ffd6358 <dec_print_loop+0x34>

2ffd6324 <dec_print_loop>:
2ffd6324:	e730f514 	udiv	r0, r4, r5
2ffd6328:	e0644590 	mls	r4, r0, r5, r4
2ffd632c:	e2800030 	add	r0, r0, #48	; 0x30
2ffd6330:	eb000186 	bl	2ffd6950 <plat_crash_console_putc>
2ffd6334:	e735f615 	udiv	r5, r5, r6
2ffd6338:	e3550000 	cmp	r5, #0
2ffd633c:	1afffff8 	bne	2ffd6324 <dec_print_loop>
2ffd6340:	eb00017f 	bl	2ffd6944 <plat_crash_console_flush>
2ffd6344:	eb000184 	bl	2ffd695c <plat_panic_handler>
2ffd6348:	e320f000 	nop	{0}
2ffd634c:	2ffe6d86 	.word	0x2ffe6d86
2ffd6350:	2ffe6d94 	.word	0x2ffe6d94
2ffd6354:	ffff0000 	.word	0xffff0000
2ffd6358:	00002710 	.word	0x00002710

2ffd635c <asm_print_str>:
2ffd635c:	e1a0700e 	mov	r7, lr
2ffd6360:	e4d40001 	ldrb	r0, [r4], #1
2ffd6364:	e3500000 	cmp	r0, #0
2ffd6368:	0a000001 	beq	2ffd6374 <asm_print_str+0x18>
2ffd636c:	eb000177 	bl	2ffd6950 <plat_crash_console_putc>
2ffd6370:	eafffffa 	b	2ffd6360 <asm_print_str+0x4>
2ffd6374:	e12fff17 	bx	r7

2ffd6378 <asm_print_hex>:
2ffd6378:	e1a0700e 	mov	r7, lr
2ffd637c:	e3a05020 	mov	r5, #32
2ffd6380:	e2455004 	sub	r5, r5, #4
2ffd6384:	e1a00534 	lsr	r0, r4, r5
2ffd6388:	e200000f 	and	r0, r0, #15
2ffd638c:	e350000a 	cmp	r0, #10
2ffd6390:	3a000000 	bcc	2ffd6398 <asm_print_hex+0x20>
2ffd6394:	e2800027 	add	r0, r0, #39	; 0x27
2ffd6398:	e2800030 	add	r0, r0, #48	; 0x30
2ffd639c:	eb00016b 	bl	2ffd6950 <plat_crash_console_putc>
2ffd63a0:	e3550000 	cmp	r5, #0
2ffd63a4:	1afffff5 	bne	2ffd6380 <asm_print_hex+0x8>
2ffd63a8:	e12fff17 	bx	r7

2ffd63ac <flush_dcache_range>:
2ffd63ac:	e3510000 	cmp	r1, #0
2ffd63b0:	0a00000b 	beq	2ffd63e4 <exit_loop_cimvac>
2ffd63b4:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2ffd63b8:	e7e33853 	ubfx	r3, r3, #16, #4
2ffd63bc:	e3a02004 	mov	r2, #4
2ffd63c0:	e1a02312 	lsl	r2, r2, r3
2ffd63c4:	e0801001 	add	r1, r0, r1
2ffd63c8:	e2423001 	sub	r3, r2, #1
2ffd63cc:	e1c00003 	bic	r0, r0, r3

2ffd63d0 <loop_cimvac>:
2ffd63d0:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
2ffd63d4:	e0800002 	add	r0, r0, r2
2ffd63d8:	e1500001 	cmp	r0, r1
2ffd63dc:	3afffffb 	bcc	2ffd63d0 <loop_cimvac>
2ffd63e0:	f57ff04f 	dsb	sy

2ffd63e4 <exit_loop_cimvac>:
2ffd63e4:	e12fff1e 	bx	lr

2ffd63e8 <clean_dcache_range>:
2ffd63e8:	e3510000 	cmp	r1, #0
2ffd63ec:	0a00000b 	beq	2ffd6420 <exit_loop_cmvac>
2ffd63f0:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2ffd63f4:	e7e33853 	ubfx	r3, r3, #16, #4
2ffd63f8:	e3a02004 	mov	r2, #4
2ffd63fc:	e1a02312 	lsl	r2, r2, r3
2ffd6400:	e0801001 	add	r1, r0, r1
2ffd6404:	e2423001 	sub	r3, r2, #1
2ffd6408:	e1c00003 	bic	r0, r0, r3

2ffd640c <loop_cmvac>:
2ffd640c:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
2ffd6410:	e0800002 	add	r0, r0, r2
2ffd6414:	e1500001 	cmp	r0, r1
2ffd6418:	3afffffb 	bcc	2ffd640c <loop_cmvac>
2ffd641c:	f57ff04f 	dsb	sy

2ffd6420 <exit_loop_cmvac>:
2ffd6420:	e12fff1e 	bx	lr

2ffd6424 <inv_dcache_range>:
2ffd6424:	e3510000 	cmp	r1, #0
2ffd6428:	0a00000b 	beq	2ffd645c <exit_loop_imvac>
2ffd642c:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2ffd6430:	e7e33853 	ubfx	r3, r3, #16, #4
2ffd6434:	e3a02004 	mov	r2, #4
2ffd6438:	e1a02312 	lsl	r2, r2, r3
2ffd643c:	e0801001 	add	r1, r0, r1
2ffd6440:	e2423001 	sub	r3, r2, #1
2ffd6444:	e1c00003 	bic	r0, r0, r3

2ffd6448 <loop_imvac>:
2ffd6448:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
2ffd644c:	e0800002 	add	r0, r0, r2
2ffd6450:	e1500001 	cmp	r0, r1
2ffd6454:	3afffffb 	bcc	2ffd6448 <loop_imvac>
2ffd6458:	f57ff04f 	dsb	sy

2ffd645c <exit_loop_imvac>:
2ffd645c:	e12fff1e 	bx	lr

2ffd6460 <zero_normalmem>:
2ffd6460:	e3a02000 	mov	r2, #0
2ffd6464:	e0801001 	add	r1, r0, r1
2ffd6468:	e3100007 	tst	r0, #7
2ffd646c:	0a000007 	beq	2ffd6490 <zero_normalmem+0x30>
2ffd6470:	e380c007 	orr	ip, r0, #7
2ffd6474:	e29cc001 	adds	ip, ip, #1
2ffd6478:	0a00000b 	beq	2ffd64ac <zero_normalmem+0x4c>
2ffd647c:	e15c0001 	cmp	ip, r1
2ffd6480:	2a000009 	bcs	2ffd64ac <zero_normalmem+0x4c>
2ffd6484:	e4c02001 	strb	r2, [r0], #1
2ffd6488:	e150000c 	cmp	r0, ip
2ffd648c:	1afffffc 	bne	2ffd6484 <zero_normalmem+0x24>
2ffd6490:	e3c1c007 	bic	ip, r1, #7
2ffd6494:	e150000c 	cmp	r0, ip
2ffd6498:	2a000003 	bcs	2ffd64ac <zero_normalmem+0x4c>
2ffd649c:	e3a03000 	mov	r3, #0
2ffd64a0:	e8a0000c 	stmia	r0!, {r2, r3}
2ffd64a4:	e150000c 	cmp	r0, ip
2ffd64a8:	3afffffc 	bcc	2ffd64a0 <zero_normalmem+0x40>
2ffd64ac:	e1500001 	cmp	r0, r1
2ffd64b0:	0a000002 	beq	2ffd64c0 <zero_normalmem+0x60>
2ffd64b4:	e4c02001 	strb	r2, [r0], #1
2ffd64b8:	e1500001 	cmp	r0, r1
2ffd64bc:	1afffffc 	bne	2ffd64b4 <zero_normalmem+0x54>
2ffd64c0:	e12fff1e 	bx	lr

2ffd64c4 <disable_mmu_secure>:
2ffd64c4:	e3a01005 	mov	r1, #5

2ffd64c8 <do_disable_mmu>:
2ffd64c8:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffd64cc:	e1c00001 	bic	r0, r0, r1
2ffd64d0:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffd64d4:	f57ff06f 	isb	sy
2ffd64d8:	f57ff04f 	dsb	sy
2ffd64dc:	e12fff1e 	bx	lr

2ffd64e0 <disable_mmu_icache_secure>:
2ffd64e0:	e51f1000 	ldr	r1, [pc, #-0]	; 2ffd64e8 <disable_mmu_icache_secure+0x8>
2ffd64e4:	eafffff7 	b	2ffd64c8 <do_disable_mmu>
2ffd64e8:	00001005 	.word	0x00001005

2ffd64ec <console_stm32_core_init>:
2ffd64ec:	e3500000 	cmp	r0, #0
2ffd64f0:	0a00001a 	beq	2ffd6560 <core_init_fail>
2ffd64f4:	e3510000 	cmp	r1, #0
2ffd64f8:	0a000018 	beq	2ffd6560 <core_init_fail>
2ffd64fc:	e3520000 	cmp	r2, #0
2ffd6500:	0a000016 	beq	2ffd6560 <core_init_fail>
2ffd6504:	e5903000 	ldr	r3, [r0]
2ffd6508:	e3c33001 	bic	r3, r3, #1
2ffd650c:	e5803000 	str	r3, [r0]
2ffd6510:	e3833282 	orr	r3, r3, #536870920	; 0x20000008
2ffd6514:	e5803000 	str	r3, [r0]
2ffd6518:	e5903004 	ldr	r3, [r0, #4]
2ffd651c:	e3c33a03 	bic	r3, r3, #12288	; 0x3000
2ffd6520:	e5803004 	str	r3, [r0, #4]
2ffd6524:	e1a03082 	lsl	r3, r2, #1
2ffd6528:	e0813003 	add	r3, r1, r3
2ffd652c:	e733f213 	udiv	r3, r3, r2
2ffd6530:	e580300c 	str	r3, [r0, #12]
2ffd6534:	e5903000 	ldr	r3, [r0]
2ffd6538:	e3833001 	orr	r3, r3, #1
2ffd653c:	e5803000 	str	r3, [r0]
2ffd6540:	e3a02a01 	mov	r2, #4096	; 0x1000

2ffd6544 <teack_loop>:
2ffd6544:	e2522001 	subs	r2, r2, #1
2ffd6548:	0a000004 	beq	2ffd6560 <core_init_fail>
2ffd654c:	e590301c 	ldr	r3, [r0, #28]
2ffd6550:	e3130602 	tst	r3, #2097152	; 0x200000
2ffd6554:	0afffffa 	beq	2ffd6544 <teack_loop>
2ffd6558:	e3a00001 	mov	r0, #1
2ffd655c:	e12fff1e 	bx	lr

2ffd6560 <core_init_fail>:
2ffd6560:	e3a00000 	mov	r0, #0
2ffd6564:	e12fff1e 	bx	lr

2ffd6568 <console_stm32_register>:
2ffd6568:	e92d4010 	push	{r4, lr}
2ffd656c:	e1a04003 	mov	r4, r3
2ffd6570:	e3540000 	cmp	r4, #0
2ffd6574:	0a00000e 	beq	2ffd65b4 <register_fail>
2ffd6578:	e5840014 	str	r0, [r4, #20]
2ffd657c:	ebffffda 	bl	2ffd64ec <console_stm32_core_init>
2ffd6580:	e3500000 	cmp	r0, #0
2ffd6584:	0a00000a 	beq	2ffd65b4 <register_fail>
2ffd6588:	e1a00004 	mov	r0, r4
2ffd658c:	e8bd4010 	pop	{r4, lr}
2ffd6590:	e59f1020 	ldr	r1, [pc, #32]	; 2ffd65b8 <register_fail+0x4>
2ffd6594:	e5801008 	str	r1, [r0, #8]
2ffd6598:	e3a01000 	mov	r1, #0
2ffd659c:	e580100c 	str	r1, [r0, #12]
2ffd65a0:	e59f1014 	ldr	r1, [pc, #20]	; 2ffd65bc <register_fail+0x8>
2ffd65a4:	e5801010 	str	r1, [r0, #16]
2ffd65a8:	e3a01005 	mov	r1, #5
2ffd65ac:	e5801004 	str	r1, [r0, #4]
2ffd65b0:	ea004278 	b	2ffe6f98 <__console_register_from_arm>

2ffd65b4 <register_fail>:
2ffd65b4:	e8bd8010 	pop	{r4, pc}
2ffd65b8:	2ffd6608 	.word	0x2ffd6608
2ffd65bc:	2ffd6658 	.word	0x2ffd6658

2ffd65c0 <console_stm32_core_putc>:
2ffd65c0:	e3510000 	cmp	r1, #0
2ffd65c4:	0a00000d 	beq	2ffd6600 <putc_error>
2ffd65c8:	e3a03a01 	mov	r3, #4096	; 0x1000

2ffd65cc <txe_loop>:
2ffd65cc:	e2533001 	subs	r3, r3, #1
2ffd65d0:	0a00000a 	beq	2ffd6600 <putc_error>
2ffd65d4:	e591201c 	ldr	r2, [r1, #28]
2ffd65d8:	e3120080 	tst	r2, #128	; 0x80
2ffd65dc:	0afffffa 	beq	2ffd65cc <txe_loop>
2ffd65e0:	e5810028 	str	r0, [r1, #40]	; 0x28
2ffd65e4:	e3a03a01 	mov	r3, #4096	; 0x1000

2ffd65e8 <tc_loop>:
2ffd65e8:	e2533001 	subs	r3, r3, #1
2ffd65ec:	0a000003 	beq	2ffd6600 <putc_error>
2ffd65f0:	e591201c 	ldr	r2, [r1, #28]
2ffd65f4:	e3120040 	tst	r2, #64	; 0x40
2ffd65f8:	0afffffa 	beq	2ffd65e8 <tc_loop>
2ffd65fc:	e12fff1e 	bx	lr

2ffd6600 <putc_error>:
2ffd6600:	e3e00000 	mvn	r0, #0
2ffd6604:	e12fff1e 	bx	lr

2ffd6608 <console_stm32_putc>:
2ffd6608:	e3510000 	cmp	r1, #0
2ffd660c:	1a000002 	bne	2ffd661c <console_stm32_putc+0x14>
2ffd6610:	e59f000c 	ldr	r0, [pc, #12]	; 2ffd6624 <console_stm32_putc+0x1c>
2ffd6614:	e3a010b0 	mov	r1, #176	; 0xb0
2ffd6618:	eaffff30 	b	2ffd62e0 <asm_assert>
2ffd661c:	e5911014 	ldr	r1, [r1, #20]
2ffd6620:	eaffffe6 	b	2ffd65c0 <console_stm32_core_putc>
2ffd6624:	2ffe6d9b 	.word	0x2ffe6d9b

2ffd6628 <console_stm32_core_flush>:
2ffd6628:	e3500000 	cmp	r0, #0
2ffd662c:	0a000007 	beq	2ffd6650 <flush_error>
2ffd6630:	e3a02a01 	mov	r2, #4096	; 0x1000

2ffd6634 <txe_loop_3>:
2ffd6634:	e2522001 	subs	r2, r2, #1
2ffd6638:	0a000004 	beq	2ffd6650 <flush_error>
2ffd663c:	e590101c 	ldr	r1, [r0, #28]
2ffd6640:	e3110080 	tst	r1, #128	; 0x80
2ffd6644:	0afffffa 	beq	2ffd6634 <txe_loop_3>
2ffd6648:	e3a00000 	mov	r0, #0
2ffd664c:	e12fff1e 	bx	lr

2ffd6650 <flush_error>:
2ffd6650:	e3e00000 	mvn	r0, #0
2ffd6654:	e12fff1e 	bx	lr

2ffd6658 <console_stm32_flush>:
2ffd6658:	e3500000 	cmp	r0, #0
2ffd665c:	1a000002 	bne	2ffd666c <console_stm32_flush+0x14>
2ffd6660:	e59f000c 	ldr	r0, [pc, #12]	; 2ffd6674 <console_stm32_flush+0x1c>
2ffd6664:	e3a010f0 	mov	r1, #240	; 0xf0
2ffd6668:	eaffff1c 	b	2ffd62e0 <asm_assert>
2ffd666c:	e5900014 	ldr	r0, [r0, #20]
2ffd6670:	eaffffec 	b	2ffd6628 <console_stm32_core_flush>
2ffd6674:	2ffe6d9b 	.word	0x2ffe6d9b

2ffd6678 <enable_mmu_direct_svc_mon>:
2ffd6678:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2ffd667c:	e3110001 	tst	r1, #1
2ffd6680:	0a000002 	beq	2ffd6690 <enable_mmu_direct_svc_mon+0x18>
2ffd6684:	e59f0060 	ldr	r0, [pc, #96]	; 2ffd66ec <enable_mmu_direct_svc_mon+0x74>
2ffd6688:	e3a01014 	mov	r1, #20
2ffd668c:	eaffff13 	b	2ffd62e0 <asm_assert>
2ffd6690:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
2ffd6694:	e1a03000 	mov	r3, r0
2ffd6698:	e59f0050 	ldr	r0, [pc, #80]	; 2ffd66f0 <enable_mmu_direct_svc_mon+0x78>
2ffd669c:	e5901000 	ldr	r1, [r0]
2ffd66a0:	ee0a1f12 	mcr	15, 0, r1, cr10, cr2, {0}
2ffd66a4:	e5902008 	ldr	r2, [r0, #8]
2ffd66a8:	ee022f50 	mcr	15, 0, r2, cr2, cr0, {2}
2ffd66ac:	e5901010 	ldr	r1, [r0, #16]
2ffd66b0:	e5902014 	ldr	r2, [r0, #20]
2ffd66b4:	ec421f02 	mcrr	15, 0, r1, r2, cr2
2ffd66b8:	e3a01000 	mov	r1, #0
2ffd66bc:	e3a02000 	mov	r2, #0
2ffd66c0:	ec421f12 	mcrr	15, 1, r1, r2, cr2
2ffd66c4:	f57ff04b 	dsb	ish
2ffd66c8:	f57ff06f 	isb	sy
2ffd66cc:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2ffd66d0:	e59f201c 	ldr	r2, [pc, #28]	; 2ffd66f4 <enable_mmu_direct_svc_mon+0x7c>
2ffd66d4:	e1811002 	orr	r1, r1, r2
2ffd66d8:	e3130001 	tst	r3, #1
2ffd66dc:	13c11004 	bicne	r1, r1, #4
2ffd66e0:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
2ffd66e4:	f57ff06f 	isb	sy
2ffd66e8:	e12fff1e 	bx	lr
2ffd66ec:	2ffe6dc3 	.word	0x2ffe6dc3
2ffd66f0:	2ffea3a8 	.word	0x2ffea3a8
2ffd66f4:	00080005 	.word	0x00080005

2ffd66f8 <cortex_a7_enable_smp>:
2ffd66f8:	ee110f30 	mrc	15, 0, r0, cr1, cr0, {1}
2ffd66fc:	e3800040 	orr	r0, r0, #64	; 0x40
2ffd6700:	ee010f30 	mcr	15, 0, r0, cr1, cr0, {1}
2ffd6704:	f57ff06f 	isb	sy
2ffd6708:	e12fff1e 	bx	lr

2ffd670c <cortex_a7_reset_func>:
2ffd670c:	eafffff9 	b	2ffd66f8 <cortex_a7_enable_smp>

2ffd6710 <platform_mem_init>:
2ffd6710:	e12fff1e 	bx	lr

2ffd6714 <plat_report_exception>:
2ffd6714:	e1a0800e 	mov	r8, lr
2ffd6718:	e3500017 	cmp	r0, #23
2ffd671c:	1a000002 	bne	2ffd672c <undef_inst_lbl>
2ffd6720:	e59f404c 	ldr	r4, [pc, #76]	; 2ffd6774 <print_excpetion_info+0x18>
2ffd6724:	ebffff0c 	bl	2ffd635c <asm_print_str>
2ffd6728:	ea00000b 	b	2ffd675c <print_excpetion_info>

2ffd672c <undef_inst_lbl>:
2ffd672c:	e350001b 	cmp	r0, #27
2ffd6730:	1a000002 	bne	2ffd6740 <other_excpetion_lbl>
2ffd6734:	e59f403c 	ldr	r4, [pc, #60]	; 2ffd6778 <print_excpetion_info+0x1c>
2ffd6738:	ebffff07 	bl	2ffd635c <asm_print_str>
2ffd673c:	ea000006 	b	2ffd675c <print_excpetion_info>

2ffd6740 <other_excpetion_lbl>:
2ffd6740:	e1a09000 	mov	r9, r0
2ffd6744:	e59f4030 	ldr	r4, [pc, #48]	; 2ffd677c <print_excpetion_info+0x20>
2ffd6748:	ebffff03 	bl	2ffd635c <asm_print_str>
2ffd674c:	e1a04009 	mov	r4, r9
2ffd6750:	ebffff08 	bl	2ffd6378 <asm_print_hex>
2ffd6754:	e59f4024 	ldr	r4, [pc, #36]	; 2ffd6780 <print_excpetion_info+0x24>
2ffd6758:	ebfffeff 	bl	2ffd635c <asm_print_str>

2ffd675c <print_excpetion_info>:
2ffd675c:	e1024300 	mrs	r4, LR_svc
2ffd6760:	e2444004 	sub	r4, r4, #4
2ffd6764:	ebffff03 	bl	2ffd6378 <asm_print_hex>
2ffd6768:	e59f4014 	ldr	r4, [pc, #20]	; 2ffd6784 <print_excpetion_info+0x28>
2ffd676c:	ebfffefa 	bl	2ffd635c <asm_print_str>
2ffd6770:	e12fff18 	bx	r8
2ffd6774:	2ffe6deb 	.word	0x2ffe6deb
2ffd6778:	2ffe6e23 	.word	0x2ffe6e23
2ffd677c:	2ffe6e41 	.word	0x2ffe6e41
2ffd6780:	2ffe6e54 	.word	0x2ffe6e54
2ffd6784:	2ffe6e88 	.word	0x2ffe6e88

2ffd6788 <plat_report_undef_inst>:
2ffd6788:	e1a0800e 	mov	r8, lr
2ffd678c:	e1a09000 	mov	r9, r0
2ffd6790:	e59f4018 	ldr	r4, [pc, #24]	; 2ffd67b0 <plat_report_undef_inst+0x28>
2ffd6794:	ebfffef0 	bl	2ffd635c <asm_print_str>
2ffd6798:	e1a04009 	mov	r4, r9
2ffd679c:	e2444004 	sub	r4, r4, #4
2ffd67a0:	ebfffef4 	bl	2ffd6378 <asm_print_hex>
2ffd67a4:	e59f4008 	ldr	r4, [pc, #8]	; 2ffd67b4 <plat_report_undef_inst+0x2c>
2ffd67a8:	ebfffeeb 	bl	2ffd635c <asm_print_str>
2ffd67ac:	e12fff18 	bx	r8
2ffd67b0:	2ffe6e23 	.word	0x2ffe6e23
2ffd67b4:	2ffe6e88 	.word	0x2ffe6e88

2ffd67b8 <plat_report_prefetch_abort>:
2ffd67b8:	e1a0800e 	mov	r8, lr
2ffd67bc:	e1a09000 	mov	r9, r0
2ffd67c0:	e59f4038 	ldr	r4, [pc, #56]	; 2ffd6800 <plat_report_prefetch_abort+0x48>
2ffd67c4:	ebfffee4 	bl	2ffd635c <asm_print_str>
2ffd67c8:	e1a04009 	mov	r4, r9
2ffd67cc:	e2444004 	sub	r4, r4, #4
2ffd67d0:	ebfffee8 	bl	2ffd6378 <asm_print_hex>
2ffd67d4:	e59f4028 	ldr	r4, [pc, #40]	; 2ffd6804 <plat_report_prefetch_abort+0x4c>
2ffd67d8:	ebfffedf 	bl	2ffd635c <asm_print_str>
2ffd67dc:	ee154f30 	mrc	15, 0, r4, cr5, cr0, {1}
2ffd67e0:	ebfffee4 	bl	2ffd6378 <asm_print_hex>
2ffd67e4:	e59f401c 	ldr	r4, [pc, #28]	; 2ffd6808 <plat_report_prefetch_abort+0x50>
2ffd67e8:	ebfffedb 	bl	2ffd635c <asm_print_str>
2ffd67ec:	ee164f50 	mrc	15, 0, r4, cr6, cr0, {2}
2ffd67f0:	ebfffee0 	bl	2ffd6378 <asm_print_hex>
2ffd67f4:	e59f4010 	ldr	r4, [pc, #16]	; 2ffd680c <plat_report_prefetch_abort+0x54>
2ffd67f8:	ebfffed7 	bl	2ffd635c <asm_print_str>
2ffd67fc:	e12fff18 	bx	r8
2ffd6800:	2ffe6df9 	.word	0x2ffe6df9
2ffd6804:	2ffe6e72 	.word	0x2ffe6e72
2ffd6808:	2ffe6e7d 	.word	0x2ffe6e7d
2ffd680c:	2ffe6e88 	.word	0x2ffe6e88

2ffd6810 <plat_report_data_abort>:
2ffd6810:	e1a0800e 	mov	r8, lr
2ffd6814:	e1a09000 	mov	r9, r0
2ffd6818:	e59f4038 	ldr	r4, [pc, #56]	; 2ffd6858 <plat_report_data_abort+0x48>
2ffd681c:	ebfffece 	bl	2ffd635c <asm_print_str>
2ffd6820:	e1a04009 	mov	r4, r9
2ffd6824:	e2444008 	sub	r4, r4, #8
2ffd6828:	ebfffed2 	bl	2ffd6378 <asm_print_hex>
2ffd682c:	e59f4028 	ldr	r4, [pc, #40]	; 2ffd685c <plat_report_data_abort+0x4c>
2ffd6830:	ebfffec9 	bl	2ffd635c <asm_print_str>
2ffd6834:	ee154f10 	mrc	15, 0, r4, cr5, cr0, {0}
2ffd6838:	ebfffece 	bl	2ffd6378 <asm_print_hex>
2ffd683c:	e59f401c 	ldr	r4, [pc, #28]	; 2ffd6860 <plat_report_data_abort+0x50>
2ffd6840:	ebfffec5 	bl	2ffd635c <asm_print_str>
2ffd6844:	ee164f10 	mrc	15, 0, r4, cr6, cr0, {0}
2ffd6848:	ebfffeca 	bl	2ffd6378 <asm_print_hex>
2ffd684c:	e59f4010 	ldr	r4, [pc, #16]	; 2ffd6864 <plat_report_data_abort+0x54>
2ffd6850:	ebfffec1 	bl	2ffd635c <asm_print_str>
2ffd6854:	e12fff18 	bx	r8
2ffd6858:	2ffe6e10 	.word	0x2ffe6e10
2ffd685c:	2ffe6e5c 	.word	0x2ffe6e5c
2ffd6860:	2ffe6e67 	.word	0x2ffe6e67
2ffd6864:	2ffe6e88 	.word	0x2ffe6e88

2ffd6868 <plat_reset_handler>:
2ffd6868:	e12fff1e 	bx	lr

2ffd686c <plat_get_my_entrypoint>:
2ffd686c:	e3a00000 	mov	r0, #0
2ffd6870:	e12fff1e 	bx	lr

2ffd6874 <plat_secondary_cold_boot_setup>:
2ffd6874:	eafffffe 	b	2ffd6874 <plat_secondary_cold_boot_setup>

2ffd6878 <plat_is_my_cpu_primary>:
2ffd6878:	ee100fb0 	mrc	15, 0, r0, cr0, cr0, {5}
2ffd687c:	e59f1010 	ldr	r1, [pc, #16]	; 2ffd6894 <plat_is_my_cpu_primary+0x1c>
2ffd6880:	e0000001 	and	r0, r0, r1
2ffd6884:	e3500000 	cmp	r0, #0
2ffd6888:	03a00001 	moveq	r0, #1
2ffd688c:	13a00000 	movne	r0, #0
2ffd6890:	e12fff1e 	bx	lr
2ffd6894:	0000ffff 	.word	0x0000ffff

2ffd6898 <plat_crash_console_init>:
2ffd6898:	e59f1088 	ldr	r1, [pc, #136]	; 2ffd6928 <plat_crash_console_init+0x90>
2ffd689c:	e5912000 	ldr	r2, [r1]
2ffd68a0:	e3822040 	orr	r2, r2, #64	; 0x40
2ffd68a4:	e5812000 	str	r2, [r1]
2ffd68a8:	e59f107c 	ldr	r1, [pc, #124]	; 2ffd692c <plat_crash_console_init+0x94>
2ffd68ac:	e5912000 	ldr	r2, [r1]
2ffd68b0:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2ffd68b4:	e3822502 	orr	r2, r2, #8388608	; 0x800000
2ffd68b8:	e5812000 	str	r2, [r1]
2ffd68bc:	e5912008 	ldr	r2, [r1, #8]
2ffd68c0:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2ffd68c4:	e5812008 	str	r2, [r1, #8]
2ffd68c8:	e591200c 	ldr	r2, [r1, #12]
2ffd68cc:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2ffd68d0:	e581200c 	str	r2, [r1, #12]
2ffd68d4:	e3a0200b 	mov	r2, #11
2ffd68d8:	e3520008 	cmp	r2, #8
2ffd68dc:	a5912024 	ldrge	r2, [r1, #36]	; 0x24
2ffd68e0:	a3c22a0f 	bicge	r2, r2, #61440	; 0xf000
2ffd68e4:	a3822a06 	orrge	r2, r2, #24576	; 0x6000
2ffd68e8:	a5812024 	strge	r2, [r1, #36]	; 0x24
2ffd68ec:	b5912020 	ldrlt	r2, [r1, #32]
2ffd68f0:	b3c22000 	biclt	r2, r2, #0
2ffd68f4:	b3822000 	orrlt	r2, r2, #0
2ffd68f8:	b5812020 	strlt	r2, [r1, #32]
2ffd68fc:	e59f102c 	ldr	r1, [pc, #44]	; 2ffd6930 <plat_crash_console_init+0x98>
2ffd6900:	e3a02002 	mov	r2, #2
2ffd6904:	e5812000 	str	r2, [r1]
2ffd6908:	e59f1024 	ldr	r1, [pc, #36]	; 2ffd6934 <plat_crash_console_init+0x9c>
2ffd690c:	e5912000 	ldr	r2, [r1]
2ffd6910:	e3822801 	orr	r2, r2, #65536	; 0x10000
2ffd6914:	e5812000 	str	r2, [r1]
2ffd6918:	e59f0018 	ldr	r0, [pc, #24]	; 2ffd6938 <plat_crash_console_init+0xa0>
2ffd691c:	e59f1018 	ldr	r1, [pc, #24]	; 2ffd693c <plat_crash_console_init+0xa4>
2ffd6920:	e59f2018 	ldr	r2, [pc, #24]	; 2ffd6940 <plat_crash_console_init+0xa8>
2ffd6924:	eafffef0 	b	2ffd64ec <console_stm32_core_init>
2ffd6928:	50000a28 	.word	0x50000a28
2ffd692c:	50008000 	.word	0x50008000
2ffd6930:	500008e8 	.word	0x500008e8
2ffd6934:	50000a00 	.word	0x50000a00
2ffd6938:	40010000 	.word	0x40010000
2ffd693c:	03d09000 	.word	0x03d09000
2ffd6940:	0001c200 	.word	0x0001c200

2ffd6944 <plat_crash_console_flush>:
2ffd6944:	e51f1000 	ldr	r1, [pc, #-0]	; 2ffd694c <plat_crash_console_flush+0x8>
2ffd6948:	eaffff36 	b	2ffd6628 <console_stm32_core_flush>
2ffd694c:	40010000 	.word	0x40010000

2ffd6950 <plat_crash_console_putc>:
2ffd6950:	e51f1000 	ldr	r1, [pc, #-0]	; 2ffd6958 <plat_crash_console_putc+0x8>
2ffd6954:	eaffff19 	b	2ffd65c0 <console_stm32_core_putc>
2ffd6958:	40010000 	.word	0x40010000

2ffd695c <plat_panic_handler>:
2ffd695c:	e10f0000 	mrs	r0, CPSR
2ffd6960:	e200001f 	and	r0, r0, #31
2ffd6964:	ebffff6a 	bl	2ffd6714 <plat_report_exception>
2ffd6968:	e1a0e006 	mov	lr, r6
2ffd696c:	eafffffe 	b	2ffd696c <plat_panic_handler+0x10>

2ffd6970 <device_type_block>:
2ffd6970:	2005      	movs	r0, #5
2ffd6972:	4770      	bx	lr

2ffd6974 <block_close>:
2ffd6974:	4603      	mov	r3, r0
2ffd6976:	2000      	movs	r0, #0
2ffd6978:	6058      	str	r0, [r3, #4]
2ffd697a:	4770      	bx	lr

2ffd697c <block_write>:
2ffd697c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffd6980:	b087      	sub	sp, #28
2ffd6982:	f8d0 9004 	ldr.w	r9, [r0, #4]
2ffd6986:	4690      	mov	r8, r2
2ffd6988:	9104      	str	r1, [sp, #16]
2ffd698a:	9305      	str	r3, [sp, #20]
2ffd698c:	f1b9 0f00 	cmp.w	r9, #0
2ffd6990:	d104      	bne.n	2ffd699c <block_write+0x20>
2ffd6992:	f240 117b 	movw	r1, #379	; 0x17b
2ffd6996:	4840      	ldr	r0, [pc, #256]	; (2ffd6a98 <block_write+0x11c>)
2ffd6998:	f00c fabc 	bl	2ffe2f14 <__assert>
2ffd699c:	f8d9 6000 	ldr.w	r6, [r9]
2ffd69a0:	2100      	movs	r1, #0
2ffd69a2:	6933      	ldr	r3, [r6, #16]
2ffd69a4:	9301      	str	r3, [sp, #4]
2ffd69a6:	e9d9 2304 	ldrd	r2, r3, [r9, #16]
2ffd69aa:	428b      	cmp	r3, r1
2ffd69ac:	bf08      	it	eq
2ffd69ae:	4542      	cmpeq	r2, r8
2ffd69b0:	d306      	bcc.n	2ffd69c0 <block_write+0x44>
2ffd69b2:	f1b8 0f00 	cmp.w	r8, #0
2ffd69b6:	d003      	beq.n	2ffd69c0 <block_write+0x44>
2ffd69b8:	68b3      	ldr	r3, [r6, #8]
2ffd69ba:	b10b      	cbz	r3, 2ffd69c0 <block_write+0x44>
2ffd69bc:	68f3      	ldr	r3, [r6, #12]
2ffd69be:	b913      	cbnz	r3, 2ffd69c6 <block_write+0x4a>
2ffd69c0:	f44f 71c0 	mov.w	r1, #384	; 0x180
2ffd69c4:	e7e7      	b.n	2ffd6996 <block_write+0x1a>
2ffd69c6:	9b01      	ldr	r3, [sp, #4]
2ffd69c8:	4645      	mov	r5, r8
2ffd69ca:	f04f 0a00 	mov.w	sl, #0
2ffd69ce:	3b01      	subs	r3, #1
2ffd69d0:	9302      	str	r3, [sp, #8]
2ffd69d2:	9b01      	ldr	r3, [sp, #4]
2ffd69d4:	425b      	negs	r3, r3
2ffd69d6:	9303      	str	r3, [sp, #12]
2ffd69d8:	e9d9 0102 	ldrd	r0, r1, [r9, #8]
2ffd69dc:	9b02      	ldr	r3, [sp, #8]
2ffd69de:	f8d9 7004 	ldr.w	r7, [r9, #4]
2ffd69e2:	ea03 0400 	and.w	r4, r3, r0
2ffd69e6:	2300      	movs	r3, #0
2ffd69e8:	19c0      	adds	r0, r0, r7
2ffd69ea:	9a01      	ldr	r2, [sp, #4]
2ffd69ec:	f141 0100 	adc.w	r1, r1, #0
2ffd69f0:	f00b ee36 	blx	2ffe2660 <__aeabi_uldivmod>
2ffd69f4:	6872      	ldr	r2, [r6, #4]
2ffd69f6:	4607      	mov	r7, r0
2ffd69f8:	1963      	adds	r3, r4, r5
2ffd69fa:	4293      	cmp	r3, r2
2ffd69fc:	bf9f      	itttt	ls
2ffd69fe:	9a02      	ldrls	r2, [sp, #8]
2ffd6a00:	18d2      	addls	r2, r2, r3
2ffd6a02:	9b03      	ldrls	r3, [sp, #12]
2ffd6a04:	401a      	andls	r2, r3
2ffd6a06:	1b13      	subs	r3, r2, r4
2ffd6a08:	42ab      	cmp	r3, r5
2ffd6a0a:	bf8c      	ite	hi
2ffd6a0c:	1b59      	subhi	r1, r3, r5
2ffd6a0e:	2100      	movls	r1, #0
2ffd6a10:	4321      	orrs	r1, r4
2ffd6a12:	d03a      	beq.n	2ffd6a8a <block_write+0x10e>
2ffd6a14:	68b3      	ldr	r3, [r6, #8]
2ffd6a16:	4638      	mov	r0, r7
2ffd6a18:	6831      	ldr	r1, [r6, #0]
2ffd6a1a:	4798      	blx	r3
2ffd6a1c:	9b03      	ldr	r3, [sp, #12]
2ffd6a1e:	ea03 0b00 	and.w	fp, r3, r0
2ffd6a22:	455c      	cmp	r4, fp
2ffd6a24:	d304      	bcc.n	2ffd6a30 <block_write+0xb4>
2ffd6a26:	f06f 0004 	mvn.w	r0, #4
2ffd6a2a:	b007      	add	sp, #28
2ffd6a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffd6a30:	ebab 0304 	sub.w	r3, fp, r4
2ffd6a34:	42ab      	cmp	r3, r5
2ffd6a36:	bf8c      	ite	hi
2ffd6a38:	1b5a      	subhi	r2, r3, r5
2ffd6a3a:	2200      	movls	r2, #0
2ffd6a3c:	1a9b      	subs	r3, r3, r2
2ffd6a3e:	6830      	ldr	r0, [r6, #0]
2ffd6a40:	461a      	mov	r2, r3
2ffd6a42:	9b04      	ldr	r3, [sp, #16]
2ffd6a44:	4420      	add	r0, r4
2ffd6a46:	eb03 010a 	add.w	r1, r3, sl
2ffd6a4a:	f00c fa8b 	bl	2ffe2f64 <memcpy>
2ffd6a4e:	68f3      	ldr	r3, [r6, #12]
2ffd6a50:	465a      	mov	r2, fp
2ffd6a52:	6831      	ldr	r1, [r6, #0]
2ffd6a54:	4638      	mov	r0, r7
2ffd6a56:	4798      	blx	r3
2ffd6a58:	4284      	cmp	r4, r0
2ffd6a5a:	d2e4      	bcs.n	2ffd6a26 <block_write+0xaa>
2ffd6a5c:	1b01      	subs	r1, r0, r4
2ffd6a5e:	42a9      	cmp	r1, r5
2ffd6a60:	bf8c      	ite	hi
2ffd6a62:	1b4f      	subhi	r7, r1, r5
2ffd6a64:	2700      	movls	r7, #0
2ffd6a66:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
2ffd6a6a:	1bc9      	subs	r1, r1, r7
2ffd6a6c:	1a20      	subs	r0, r4, r0
2ffd6a6e:	1852      	adds	r2, r2, r1
2ffd6a70:	4405      	add	r5, r0
2ffd6a72:	f143 0300 	adc.w	r3, r3, #0
2ffd6a76:	19ed      	adds	r5, r5, r7
2ffd6a78:	448a      	add	sl, r1
2ffd6a7a:	e9c9 2302 	strd	r2, r3, [r9, #8]
2ffd6a7e:	d1ab      	bne.n	2ffd69d8 <block_write+0x5c>
2ffd6a80:	45d0      	cmp	r8, sl
2ffd6a82:	d004      	beq.n	2ffd6a8e <block_write+0x112>
2ffd6a84:	f44f 71f4 	mov.w	r1, #488	; 0x1e8
2ffd6a88:	e785      	b.n	2ffd6996 <block_write+0x1a>
2ffd6a8a:	469b      	mov	fp, r3
2ffd6a8c:	e7d7      	b.n	2ffd6a3e <block_write+0xc2>
2ffd6a8e:	9b05      	ldr	r3, [sp, #20]
2ffd6a90:	4628      	mov	r0, r5
2ffd6a92:	f8c3 8000 	str.w	r8, [r3]
2ffd6a96:	e7c8      	b.n	2ffd6a2a <block_write+0xae>
2ffd6a98:	2ffe3407 	.word	0x2ffe3407

2ffd6a9c <block_read>:
2ffd6a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffd6aa0:	b087      	sub	sp, #28
2ffd6aa2:	f8d0 8004 	ldr.w	r8, [r0, #4]
2ffd6aa6:	4616      	mov	r6, r2
2ffd6aa8:	9101      	str	r1, [sp, #4]
2ffd6aaa:	9302      	str	r3, [sp, #8]
2ffd6aac:	f1b8 0f00 	cmp.w	r8, #0
2ffd6ab0:	d104      	bne.n	2ffd6abc <block_read+0x20>
2ffd6ab2:	f240 110b 	movw	r1, #267	; 0x10b
2ffd6ab6:	4835      	ldr	r0, [pc, #212]	; (2ffd6b8c <block_read+0xf0>)
2ffd6ab8:	f00c fa2c 	bl	2ffe2f14 <__assert>
2ffd6abc:	e9d8 2304 	ldrd	r2, r3, [r8, #16]
2ffd6ac0:	f8d8 9000 	ldr.w	r9, [r8]
2ffd6ac4:	2100      	movs	r1, #0
2ffd6ac6:	428b      	cmp	r3, r1
2ffd6ac8:	bf08      	it	eq
2ffd6aca:	42b2      	cmpeq	r2, r6
2ffd6acc:	f8d9 b010 	ldr.w	fp, [r9, #16]
2ffd6ad0:	d303      	bcc.n	2ffd6ada <block_read+0x3e>
2ffd6ad2:	b116      	cbz	r6, 2ffd6ada <block_read+0x3e>
2ffd6ad4:	f8d9 3008 	ldr.w	r3, [r9, #8]
2ffd6ad8:	b913      	cbnz	r3, 2ffd6ae0 <block_read+0x44>
2ffd6ada:	f44f 7188 	mov.w	r1, #272	; 0x110
2ffd6ade:	e7ea      	b.n	2ffd6ab6 <block_read+0x1a>
2ffd6ae0:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
2ffd6ae4:	4635      	mov	r5, r6
2ffd6ae6:	9300      	str	r3, [sp, #0]
2ffd6ae8:	f04f 0a00 	mov.w	sl, #0
2ffd6aec:	f1cb 0300 	rsb	r3, fp, #0
2ffd6af0:	9303      	str	r3, [sp, #12]
2ffd6af2:	e9d8 0102 	ldrd	r0, r1, [r8, #8]
2ffd6af6:	9b00      	ldr	r3, [sp, #0]
2ffd6af8:	465a      	mov	r2, fp
2ffd6afa:	f8d8 7004 	ldr.w	r7, [r8, #4]
2ffd6afe:	ea03 0400 	and.w	r4, r3, r0
2ffd6b02:	2300      	movs	r3, #0
2ffd6b04:	19c0      	adds	r0, r0, r7
2ffd6b06:	f141 0100 	adc.w	r1, r1, #0
2ffd6b0a:	f00b edaa 	blx	2ffe2660 <__aeabi_uldivmod>
2ffd6b0e:	f8d9 2004 	ldr.w	r2, [r9, #4]
2ffd6b12:	1963      	adds	r3, r4, r5
2ffd6b14:	4293      	cmp	r3, r2
2ffd6b16:	f8d9 7008 	ldr.w	r7, [r9, #8]
2ffd6b1a:	bf98      	it	ls
2ffd6b1c:	9a00      	ldrls	r2, [sp, #0]
2ffd6b1e:	f8d9 1000 	ldr.w	r1, [r9]
2ffd6b22:	bf9e      	ittt	ls
2ffd6b24:	189b      	addls	r3, r3, r2
2ffd6b26:	9a03      	ldrls	r2, [sp, #12]
2ffd6b28:	401a      	andls	r2, r3
2ffd6b2a:	47b8      	blx	r7
2ffd6b2c:	4284      	cmp	r4, r0
2ffd6b2e:	4607      	mov	r7, r0
2ffd6b30:	d228      	bcs.n	2ffd6b84 <block_read+0xe8>
2ffd6b32:	1b02      	subs	r2, r0, r4
2ffd6b34:	42aa      	cmp	r2, r5
2ffd6b36:	bf8c      	ite	hi
2ffd6b38:	1b53      	subhi	r3, r2, r5
2ffd6b3a:	2300      	movls	r3, #0
2ffd6b3c:	1ad2      	subs	r2, r2, r3
2ffd6b3e:	f8d9 1000 	ldr.w	r1, [r9]
2ffd6b42:	9305      	str	r3, [sp, #20]
2ffd6b44:	9b01      	ldr	r3, [sp, #4]
2ffd6b46:	4421      	add	r1, r4
2ffd6b48:	eb03 000a 	add.w	r0, r3, sl
2ffd6b4c:	9204      	str	r2, [sp, #16]
2ffd6b4e:	f00c fa09 	bl	2ffe2f64 <memcpy>
2ffd6b52:	e9d8 0102 	ldrd	r0, r1, [r8, #8]
2ffd6b56:	9a04      	ldr	r2, [sp, #16]
2ffd6b58:	1be4      	subs	r4, r4, r7
2ffd6b5a:	9b05      	ldr	r3, [sp, #20]
2ffd6b5c:	1880      	adds	r0, r0, r2
2ffd6b5e:	4425      	add	r5, r4
2ffd6b60:	f141 0100 	adc.w	r1, r1, #0
2ffd6b64:	18ed      	adds	r5, r5, r3
2ffd6b66:	4492      	add	sl, r2
2ffd6b68:	e9c8 0102 	strd	r0, r1, [r8, #8]
2ffd6b6c:	d1c1      	bne.n	2ffd6af2 <block_read+0x56>
2ffd6b6e:	4556      	cmp	r6, sl
2ffd6b70:	d002      	beq.n	2ffd6b78 <block_read+0xdc>
2ffd6b72:	f44f 71ac 	mov.w	r1, #344	; 0x158
2ffd6b76:	e79e      	b.n	2ffd6ab6 <block_read+0x1a>
2ffd6b78:	9b02      	ldr	r3, [sp, #8]
2ffd6b7a:	4628      	mov	r0, r5
2ffd6b7c:	601e      	str	r6, [r3, #0]
2ffd6b7e:	b007      	add	sp, #28
2ffd6b80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffd6b84:	f06f 0004 	mvn.w	r0, #4
2ffd6b88:	e7f9      	b.n	2ffd6b7e <block_read+0xe2>
2ffd6b8a:	bf00      	nop
2ffd6b8c:	2ffe3407 	.word	0x2ffe3407

2ffd6b90 <block_dev_open>:
2ffd6b90:	b538      	push	{r3, r4, r5, lr}
2ffd6b92:	b921      	cbnz	r1, 2ffd6b9e <block_dev_open+0xe>
2ffd6b94:	f44f 71fe 	mov.w	r1, #508	; 0x1fc
2ffd6b98:	4816      	ldr	r0, [pc, #88]	; (2ffd6bf4 <block_dev_open+0x64>)
2ffd6b9a:	f00c f9bb 	bl	2ffe2f14 <__assert>
2ffd6b9e:	4c16      	ldr	r4, [pc, #88]	; (2ffd6bf8 <block_dev_open+0x68>)
2ffd6ba0:	6823      	ldr	r3, [r4, #0]
2ffd6ba2:	bb1b      	cbnz	r3, 2ffd6bec <block_dev_open+0x5c>
2ffd6ba4:	4b15      	ldr	r3, [pc, #84]	; (2ffd6bfc <block_dev_open+0x6c>)
2ffd6ba6:	681a      	ldr	r2, [r3, #0]
2ffd6ba8:	b95a      	cbnz	r2, 2ffd6bc2 <block_dev_open+0x32>
2ffd6baa:	4a15      	ldr	r2, [pc, #84]	; (2ffd6c00 <block_dev_open+0x70>)
2ffd6bac:	4d15      	ldr	r5, [pc, #84]	; (2ffd6c04 <block_dev_open+0x74>)
2ffd6bae:	6053      	str	r3, [r2, #4]
2ffd6bb0:	6018      	str	r0, [r3, #0]
2ffd6bb2:	6903      	ldr	r3, [r0, #16]
2ffd6bb4:	6015      	str	r5, [r2, #0]
2ffd6bb6:	2501      	movs	r5, #1
2ffd6bb8:	6025      	str	r5, [r4, #0]
2ffd6bba:	b923      	cbnz	r3, 2ffd6bc6 <block_dev_open+0x36>
2ffd6bbc:	f240 2106 	movw	r1, #518	; 0x206
2ffd6bc0:	e7ea      	b.n	2ffd6b98 <block_dev_open+0x8>
2ffd6bc2:	215f      	movs	r1, #95	; 0x5f
2ffd6bc4:	e7e8      	b.n	2ffd6b98 <block_dev_open+0x8>
2ffd6bc6:	1e5c      	subs	r4, r3, #1
2ffd6bc8:	421c      	tst	r4, r3
2ffd6bca:	d1f7      	bne.n	2ffd6bbc <block_dev_open+0x2c>
2ffd6bcc:	6805      	ldr	r5, [r0, #0]
2ffd6bce:	fbb5 f4f3 	udiv	r4, r5, r3
2ffd6bd2:	fb03 5414 	mls	r4, r3, r4, r5
2ffd6bd6:	2c00      	cmp	r4, #0
2ffd6bd8:	d1f0      	bne.n	2ffd6bbc <block_dev_open+0x2c>
2ffd6bda:	6844      	ldr	r4, [r0, #4]
2ffd6bdc:	fbb4 f0f3 	udiv	r0, r4, r3
2ffd6be0:	fb03 4010 	mls	r0, r3, r0, r4
2ffd6be4:	2800      	cmp	r0, #0
2ffd6be6:	d1e9      	bne.n	2ffd6bbc <block_dev_open+0x2c>
2ffd6be8:	600a      	str	r2, [r1, #0]
2ffd6bea:	bd38      	pop	{r3, r4, r5, pc}
2ffd6bec:	f06f 0001 	mvn.w	r0, #1
2ffd6bf0:	e7fb      	b.n	2ffd6bea <block_dev_open+0x5a>
2ffd6bf2:	bf00      	nop
2ffd6bf4:	2ffe3407 	.word	0x2ffe3407
2ffd6bf8:	2ffe8b48 	.word	0x2ffe8b48
2ffd6bfc:	2ffe8828 	.word	0x2ffe8828
2ffd6c00:	2ffe8b4c 	.word	0x2ffe8b4c
2ffd6c04:	2ffe3424 	.word	0x2ffe3424

2ffd6c08 <block_seek>:
2ffd6c08:	6840      	ldr	r0, [r0, #4]
2ffd6c0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffd6c0c:	4614      	mov	r4, r2
2ffd6c0e:	461d      	mov	r5, r3
2ffd6c10:	b918      	cbnz	r0, 2ffd6c1a <block_seek+0x12>
2ffd6c12:	219b      	movs	r1, #155	; 0x9b
2ffd6c14:	4813      	ldr	r0, [pc, #76]	; (2ffd6c64 <block_seek+0x5c>)
2ffd6c16:	f00c f97d 	bl	2ffe2f14 <__assert>
2ffd6c1a:	2a00      	cmp	r2, #0
2ffd6c1c:	f175 0300 	sbcs.w	r3, r5, #0
2ffd6c20:	db05      	blt.n	2ffd6c2e <block_seek+0x26>
2ffd6c22:	e9d0 2304 	ldrd	r2, r3, [r0, #16]
2ffd6c26:	429d      	cmp	r5, r3
2ffd6c28:	bf08      	it	eq
2ffd6c2a:	4294      	cmpeq	r4, r2
2ffd6c2c:	d301      	bcc.n	2ffd6c32 <block_seek+0x2a>
2ffd6c2e:	219e      	movs	r1, #158	; 0x9e
2ffd6c30:	e7f0      	b.n	2ffd6c14 <block_seek+0xc>
2ffd6c32:	2901      	cmp	r1, #1
2ffd6c34:	d004      	beq.n	2ffd6c40 <block_seek+0x38>
2ffd6c36:	2903      	cmp	r1, #3
2ffd6c38:	d006      	beq.n	2ffd6c48 <block_seek+0x40>
2ffd6c3a:	f06f 0015 	mvn.w	r0, #21
2ffd6c3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffd6c40:	e9c0 4502 	strd	r4, r5, [r0, #8]
2ffd6c44:	2000      	movs	r0, #0
2ffd6c46:	e7fa      	b.n	2ffd6c3e <block_seek+0x36>
2ffd6c48:	6881      	ldr	r1, [r0, #8]
2ffd6c4a:	1866      	adds	r6, r4, r1
2ffd6c4c:	68c1      	ldr	r1, [r0, #12]
2ffd6c4e:	eb45 0701 	adc.w	r7, r5, r1
2ffd6c52:	429f      	cmp	r7, r3
2ffd6c54:	bf08      	it	eq
2ffd6c56:	4296      	cmpeq	r6, r2
2ffd6c58:	e9c0 6702 	strd	r6, r7, [r0, #8]
2ffd6c5c:	d3f2      	bcc.n	2ffd6c44 <block_seek+0x3c>
2ffd6c5e:	21aa      	movs	r1, #170	; 0xaa
2ffd6c60:	e7d8      	b.n	2ffd6c14 <block_seek+0xc>
2ffd6c62:	bf00      	nop
2ffd6c64:	2ffe3407 	.word	0x2ffe3407

2ffd6c68 <block_open>:
2ffd6c68:	b538      	push	{r3, r4, r5, lr}
2ffd6c6a:	6843      	ldr	r3, [r0, #4]
2ffd6c6c:	b113      	cbz	r3, 2ffd6c74 <block_open+0xc>
2ffd6c6e:	b109      	cbz	r1, 2ffd6c74 <block_open+0xc>
2ffd6c70:	6850      	ldr	r0, [r2, #4]
2ffd6c72:	b118      	cbz	r0, 2ffd6c7c <block_open+0x14>
2ffd6c74:	2185      	movs	r1, #133	; 0x85
2ffd6c76:	480e      	ldr	r0, [pc, #56]	; (2ffd6cb0 <block_open+0x48>)
2ffd6c78:	f00c f94c 	bl	2ffe2f14 <__assert>
2ffd6c7c:	6818      	ldr	r0, [r3, #0]
2ffd6c7e:	680d      	ldr	r5, [r1, #0]
2ffd6c80:	6904      	ldr	r4, [r0, #16]
2ffd6c82:	fbb5 f0f4 	udiv	r0, r5, r4
2ffd6c86:	fb04 5010 	mls	r0, r4, r0, r5
2ffd6c8a:	b928      	cbnz	r0, 2ffd6c98 <block_open+0x30>
2ffd6c8c:	6849      	ldr	r1, [r1, #4]
2ffd6c8e:	fbb1 f0f4 	udiv	r0, r1, r4
2ffd6c92:	fb04 1010 	mls	r0, r4, r0, r1
2ffd6c96:	b108      	cbz	r0, 2ffd6c9c <block_open+0x34>
2ffd6c98:	218b      	movs	r1, #139	; 0x8b
2ffd6c9a:	e7ec      	b.n	2ffd6c76 <block_open+0xe>
2ffd6c9c:	605d      	str	r5, [r3, #4]
2ffd6c9e:	2400      	movs	r4, #0
2ffd6ca0:	2500      	movs	r5, #0
2ffd6ca2:	e9c3 1004 	strd	r1, r0, [r3, #16]
2ffd6ca6:	e9c3 4502 	strd	r4, r5, [r3, #8]
2ffd6caa:	6053      	str	r3, [r2, #4]
2ffd6cac:	bd38      	pop	{r3, r4, r5, pc}
2ffd6cae:	bf00      	nop
2ffd6cb0:	2ffe3407 	.word	0x2ffe3407

2ffd6cb4 <block_dev_close>:
2ffd6cb4:	b510      	push	{r4, lr}
2ffd6cb6:	4604      	mov	r4, r0
2ffd6cb8:	b918      	cbnz	r0, 2ffd6cc2 <block_dev_close+0xe>
2ffd6cba:	480d      	ldr	r0, [pc, #52]	; (2ffd6cf0 <block_dev_close+0x3c>)
2ffd6cbc:	2171      	movs	r1, #113	; 0x71
2ffd6cbe:	f00c f929 	bl	2ffe2f14 <__assert>
2ffd6cc2:	6840      	ldr	r0, [r0, #4]
2ffd6cc4:	4b0b      	ldr	r3, [pc, #44]	; (2ffd6cf4 <block_dev_close+0x40>)
2ffd6cc6:	6802      	ldr	r2, [r0, #0]
2ffd6cc8:	681b      	ldr	r3, [r3, #0]
2ffd6cca:	429a      	cmp	r2, r3
2ffd6ccc:	d10c      	bne.n	2ffd6ce8 <block_dev_close+0x34>
2ffd6cce:	2118      	movs	r1, #24
2ffd6cd0:	f7ff ebc6 	blx	2ffd6460 <zero_normalmem>
2ffd6cd4:	4620      	mov	r0, r4
2ffd6cd6:	2108      	movs	r1, #8
2ffd6cd8:	f7ff ebc2 	blx	2ffd6460 <zero_normalmem>
2ffd6cdc:	4a06      	ldr	r2, [pc, #24]	; (2ffd6cf8 <block_dev_close+0x44>)
2ffd6cde:	2000      	movs	r0, #0
2ffd6ce0:	6813      	ldr	r3, [r2, #0]
2ffd6ce2:	3b01      	subs	r3, #1
2ffd6ce4:	6013      	str	r3, [r2, #0]
2ffd6ce6:	bd10      	pop	{r4, pc}
2ffd6ce8:	f06f 0001 	mvn.w	r0, #1
2ffd6cec:	e7fb      	b.n	2ffd6ce6 <block_dev_close+0x32>
2ffd6cee:	bf00      	nop
2ffd6cf0:	2ffe3407 	.word	0x2ffe3407
2ffd6cf4:	2ffe8828 	.word	0x2ffe8828
2ffd6cf8:	2ffe8b48 	.word	0x2ffe8b48

2ffd6cfc <register_io_dev_block>:
2ffd6cfc:	b510      	push	{r4, lr}
2ffd6cfe:	4604      	mov	r4, r0
2ffd6d00:	b920      	cbnz	r0, 2ffd6d0c <register_io_dev_block+0x10>
2ffd6d02:	4806      	ldr	r0, [pc, #24]	; (2ffd6d1c <register_io_dev_block+0x20>)
2ffd6d04:	f240 211d 	movw	r1, #541	; 0x21d
2ffd6d08:	f00c f904 	bl	2ffe2f14 <__assert>
2ffd6d0c:	4804      	ldr	r0, [pc, #16]	; (2ffd6d20 <register_io_dev_block+0x24>)
2ffd6d0e:	f000 f993 	bl	2ffd7038 <io_register_device>
2ffd6d12:	b908      	cbnz	r0, 2ffd6d18 <register_io_dev_block+0x1c>
2ffd6d14:	4b03      	ldr	r3, [pc, #12]	; (2ffd6d24 <register_io_dev_block+0x28>)
2ffd6d16:	6023      	str	r3, [r4, #0]
2ffd6d18:	bd10      	pop	{r4, pc}
2ffd6d1a:	bf00      	nop
2ffd6d1c:	2ffe3407 	.word	0x2ffe3407
2ffd6d20:	2ffe8b4c 	.word	0x2ffe8b4c
2ffd6d24:	2ffe3420 	.word	0x2ffe3420

2ffd6d28 <device_type_dummy>:
2ffd6d28:	2003      	movs	r0, #3
2ffd6d2a:	4770      	bx	lr

2ffd6d2c <dummy_dev_close>:
2ffd6d2c:	2000      	movs	r0, #0
2ffd6d2e:	4770      	bx	lr

2ffd6d30 <dummy_dev_open>:
2ffd6d30:	b508      	push	{r3, lr}
2ffd6d32:	b919      	cbnz	r1, 2ffd6d3c <dummy_dev_open+0xc>
2ffd6d34:	4803      	ldr	r0, [pc, #12]	; (2ffd6d44 <dummy_dev_open+0x14>)
2ffd6d36:	2143      	movs	r1, #67	; 0x43
2ffd6d38:	f00c f8ec 	bl	2ffe2f14 <__assert>
2ffd6d3c:	4b02      	ldr	r3, [pc, #8]	; (2ffd6d48 <dummy_dev_open+0x18>)
2ffd6d3e:	2000      	movs	r0, #0
2ffd6d40:	600b      	str	r3, [r1, #0]
2ffd6d42:	bd08      	pop	{r3, pc}
2ffd6d44:	2ffe3448 	.word	0x2ffe3448
2ffd6d48:	2ffe34b8 	.word	0x2ffe34b8

2ffd6d4c <dummy_block_close>:
2ffd6d4c:	b508      	push	{r3, lr}
2ffd6d4e:	4603      	mov	r3, r0
2ffd6d50:	b918      	cbnz	r0, 2ffd6d5a <dummy_block_close+0xe>
2ffd6d52:	4804      	ldr	r0, [pc, #16]	; (2ffd6d64 <dummy_block_close+0x18>)
2ffd6d54:	2184      	movs	r1, #132	; 0x84
2ffd6d56:	f00c f8dd 	bl	2ffe2f14 <__assert>
2ffd6d5a:	2000      	movs	r0, #0
2ffd6d5c:	6058      	str	r0, [r3, #4]
2ffd6d5e:	4b02      	ldr	r3, [pc, #8]	; (2ffd6d68 <dummy_block_close+0x1c>)
2ffd6d60:	6018      	str	r0, [r3, #0]
2ffd6d62:	bd08      	pop	{r3, pc}
2ffd6d64:	2ffe3448 	.word	0x2ffe3448
2ffd6d68:	2ffe8b54 	.word	0x2ffe8b54

2ffd6d6c <dummy_block_read>:
2ffd6d6c:	b508      	push	{r3, lr}
2ffd6d6e:	b91b      	cbnz	r3, 2ffd6d78 <dummy_block_read+0xc>
2ffd6d70:	4803      	ldr	r0, [pc, #12]	; (2ffd6d80 <dummy_block_read+0x14>)
2ffd6d72:	2179      	movs	r1, #121	; 0x79
2ffd6d74:	f00c f8ce 	bl	2ffe2f14 <__assert>
2ffd6d78:	601a      	str	r2, [r3, #0]
2ffd6d7a:	2000      	movs	r0, #0
2ffd6d7c:	bd08      	pop	{r3, pc}
2ffd6d7e:	bf00      	nop
2ffd6d80:	2ffe3448 	.word	0x2ffe3448

2ffd6d84 <dummy_block_len>:
2ffd6d84:	b508      	push	{r3, lr}
2ffd6d86:	b918      	cbnz	r0, 2ffd6d90 <dummy_block_len+0xc>
2ffd6d88:	216c      	movs	r1, #108	; 0x6c
2ffd6d8a:	4805      	ldr	r0, [pc, #20]	; (2ffd6da0 <dummy_block_len+0x1c>)
2ffd6d8c:	f00c f8c2 	bl	2ffe2f14 <__assert>
2ffd6d90:	b909      	cbnz	r1, 2ffd6d96 <dummy_block_len+0x12>
2ffd6d92:	216d      	movs	r1, #109	; 0x6d
2ffd6d94:	e7f9      	b.n	2ffd6d8a <dummy_block_len+0x6>
2ffd6d96:	6843      	ldr	r3, [r0, #4]
2ffd6d98:	2000      	movs	r0, #0
2ffd6d9a:	685b      	ldr	r3, [r3, #4]
2ffd6d9c:	600b      	str	r3, [r1, #0]
2ffd6d9e:	bd08      	pop	{r3, pc}
2ffd6da0:	2ffe3448 	.word	0x2ffe3448

2ffd6da4 <dummy_block_open>:
2ffd6da4:	4b0b      	ldr	r3, [pc, #44]	; (2ffd6dd4 <dummy_block_open+0x30>)
2ffd6da6:	b510      	push	{r4, lr}
2ffd6da8:	6818      	ldr	r0, [r3, #0]
2ffd6daa:	b968      	cbnz	r0, 2ffd6dc8 <dummy_block_open+0x24>
2ffd6dac:	b919      	cbnz	r1, 2ffd6db6 <dummy_block_open+0x12>
2ffd6dae:	2159      	movs	r1, #89	; 0x59
2ffd6db0:	4809      	ldr	r0, [pc, #36]	; (2ffd6dd8 <dummy_block_open+0x34>)
2ffd6db2:	f00c f8af 	bl	2ffe2f14 <__assert>
2ffd6db6:	b90a      	cbnz	r2, 2ffd6dbc <dummy_block_open+0x18>
2ffd6db8:	215a      	movs	r1, #90	; 0x5a
2ffd6dba:	e7f9      	b.n	2ffd6db0 <dummy_block_open+0xc>
2ffd6dbc:	6849      	ldr	r1, [r1, #4]
2ffd6dbe:	2401      	movs	r4, #1
2ffd6dc0:	601c      	str	r4, [r3, #0]
2ffd6dc2:	6059      	str	r1, [r3, #4]
2ffd6dc4:	6053      	str	r3, [r2, #4]
2ffd6dc6:	bd10      	pop	{r4, pc}
2ffd6dc8:	4804      	ldr	r0, [pc, #16]	; (2ffd6ddc <dummy_block_open+0x38>)
2ffd6dca:	f005 fe8f 	bl	2ffdcaec <tf_log>
2ffd6dce:	f06f 000b 	mvn.w	r0, #11
2ffd6dd2:	e7f8      	b.n	2ffd6dc6 <dummy_block_open+0x22>
2ffd6dd4:	2ffe8b54 	.word	0x2ffe8b54
2ffd6dd8:	2ffe3448 	.word	0x2ffe3448
2ffd6ddc:	2ffe345e 	.word	0x2ffe345e

2ffd6de0 <register_io_dev_dummy>:
2ffd6de0:	b510      	push	{r4, lr}
2ffd6de2:	4604      	mov	r4, r0
2ffd6de4:	b918      	cbnz	r0, 2ffd6dee <register_io_dev_dummy+0xe>
2ffd6de6:	4805      	ldr	r0, [pc, #20]	; (2ffd6dfc <register_io_dev_dummy+0x1c>)
2ffd6de8:	2194      	movs	r1, #148	; 0x94
2ffd6dea:	f00c f893 	bl	2ffe2f14 <__assert>
2ffd6dee:	4804      	ldr	r0, [pc, #16]	; (2ffd6e00 <register_io_dev_dummy+0x20>)
2ffd6df0:	f000 f922 	bl	2ffd7038 <io_register_device>
2ffd6df4:	b908      	cbnz	r0, 2ffd6dfa <register_io_dev_dummy+0x1a>
2ffd6df6:	4b03      	ldr	r3, [pc, #12]	; (2ffd6e04 <register_io_dev_dummy+0x24>)
2ffd6df8:	6023      	str	r3, [r4, #0]
2ffd6dfa:	bd10      	pop	{r4, pc}
2ffd6dfc:	2ffe3448 	.word	0x2ffe3448
2ffd6e00:	2ffe34b8 	.word	0x2ffe34b8
2ffd6e04:	2ffe3490 	.word	0x2ffe3490

2ffd6e08 <device_type_mtd>:
2ffd6e08:	2006      	movs	r0, #6
2ffd6e0a:	4770      	bx	lr

2ffd6e0c <mtd_close>:
2ffd6e0c:	4603      	mov	r3, r0
2ffd6e0e:	2000      	movs	r0, #0
2ffd6e10:	6058      	str	r0, [r3, #4]
2ffd6e12:	4770      	bx	lr

2ffd6e14 <mtd_read>:
2ffd6e14:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffd6e18:	4615      	mov	r5, r2
2ffd6e1a:	6844      	ldr	r4, [r0, #4]
2ffd6e1c:	9300      	str	r3, [sp, #0]
2ffd6e1e:	b91c      	cbnz	r4, 2ffd6e28 <mtd_read+0x14>
2ffd6e20:	21a9      	movs	r1, #169	; 0xa9
2ffd6e22:	481c      	ldr	r0, [pc, #112]	; (2ffd6e94 <mtd_read+0x80>)
2ffd6e24:	f00c f876 	bl	2ffe2f14 <__assert>
2ffd6e28:	b102      	cbz	r2, 2ffd6e2c <mtd_read+0x18>
2ffd6e2a:	b909      	cbnz	r1, 2ffd6e30 <mtd_read+0x1c>
2ffd6e2c:	21aa      	movs	r1, #170	; 0xaa
2ffd6e2e:	e7f8      	b.n	2ffd6e22 <mtd_read+0xe>
2ffd6e30:	6820      	ldr	r0, [r4, #0]
2ffd6e32:	f8d0 a010 	ldr.w	sl, [r0, #16]
2ffd6e36:	f1ba 0f00 	cmp.w	sl, #0
2ffd6e3a:	d101      	bne.n	2ffd6e40 <mtd_read+0x2c>
2ffd6e3c:	21ae      	movs	r1, #174	; 0xae
2ffd6e3e:	e7f0      	b.n	2ffd6e22 <mtd_read+0xe>
2ffd6e40:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
2ffd6e44:	9201      	str	r2, [sp, #4]
2ffd6e46:	eb16 0802 	adds.w	r8, r6, r2
2ffd6e4a:	f147 0900 	adc.w	r9, r7, #0
2ffd6e4e:	46c3      	mov	fp, r8
2ffd6e50:	46cc      	mov	ip, r9
2ffd6e52:	e9d0 8900 	ldrd	r8, r9, [r0]
2ffd6e56:	45e1      	cmp	r9, ip
2ffd6e58:	bf08      	it	eq
2ffd6e5a:	45d8      	cmpeq	r8, fp
2ffd6e5c:	d317      	bcc.n	2ffd6e8e <mtd_read+0x7a>
2ffd6e5e:	4630      	mov	r0, r6
2ffd6e60:	47d0      	blx	sl
2ffd6e62:	2800      	cmp	r0, #0
2ffd6e64:	db10      	blt.n	2ffd6e88 <mtd_read+0x74>
2ffd6e66:	9b00      	ldr	r3, [sp, #0]
2ffd6e68:	681b      	ldr	r3, [r3, #0]
2ffd6e6a:	42ab      	cmp	r3, r5
2ffd6e6c:	d001      	beq.n	2ffd6e72 <mtd_read+0x5e>
2ffd6e6e:	21bb      	movs	r1, #187	; 0xbb
2ffd6e70:	e7d7      	b.n	2ffd6e22 <mtd_read+0xe>
2ffd6e72:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
2ffd6e76:	9901      	ldr	r1, [sp, #4]
2ffd6e78:	185b      	adds	r3, r3, r1
2ffd6e7a:	f04f 0100 	mov.w	r1, #0
2ffd6e7e:	eb41 0202 	adc.w	r2, r1, r2
2ffd6e82:	4608      	mov	r0, r1
2ffd6e84:	e9c4 3202 	strd	r3, r2, [r4, #8]
2ffd6e88:	b003      	add	sp, #12
2ffd6e8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffd6e8e:	f06f 0015 	mvn.w	r0, #21
2ffd6e92:	e7f9      	b.n	2ffd6e88 <mtd_read+0x74>
2ffd6e94:	2ffe34c0 	.word	0x2ffe34c0

2ffd6e98 <mtd_seek>:
2ffd6e98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffd6e9c:	461f      	mov	r7, r3
2ffd6e9e:	6843      	ldr	r3, [r0, #4]
2ffd6ea0:	4616      	mov	r6, r2
2ffd6ea2:	b11b      	cbz	r3, 2ffd6eac <mtd_seek+0x14>
2ffd6ea4:	2a00      	cmp	r2, #0
2ffd6ea6:	f177 0200 	sbcs.w	r2, r7, #0
2ffd6eaa:	da03      	bge.n	2ffd6eb4 <mtd_seek+0x1c>
2ffd6eac:	4816      	ldr	r0, [pc, #88]	; (2ffd6f08 <mtd_seek+0x70>)
2ffd6eae:	2184      	movs	r1, #132	; 0x84
2ffd6eb0:	f00c f830 	bl	2ffe2f14 <__assert>
2ffd6eb4:	2901      	cmp	r1, #1
2ffd6eb6:	d004      	beq.n	2ffd6ec2 <mtd_seek+0x2a>
2ffd6eb8:	2903      	cmp	r1, #3
2ffd6eba:	d00d      	beq.n	2ffd6ed8 <mtd_seek+0x40>
2ffd6ebc:	f06f 0015 	mvn.w	r0, #21
2ffd6ec0:	e008      	b.n	2ffd6ed4 <mtd_seek+0x3c>
2ffd6ec2:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
2ffd6ec6:	428f      	cmp	r7, r1
2ffd6ec8:	bf08      	it	eq
2ffd6eca:	4286      	cmpeq	r6, r0
2ffd6ecc:	d2f6      	bcs.n	2ffd6ebc <mtd_seek+0x24>
2ffd6ece:	e9c3 6702 	strd	r6, r7, [r3, #8]
2ffd6ed2:	2000      	movs	r0, #0
2ffd6ed4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffd6ed8:	e9d3 8902 	ldrd	r8, r9, [r3, #8]
2ffd6edc:	2400      	movs	r4, #0
2ffd6ede:	2500      	movs	r5, #0
2ffd6ee0:	eb18 0006 	adds.w	r0, r8, r6
2ffd6ee4:	eb59 0107 	adcs.w	r1, r9, r7
2ffd6ee8:	e9d3 6704 	ldrd	r6, r7, [r3, #16]
2ffd6eec:	bf24      	itt	cs
2ffd6eee:	2401      	movcs	r4, #1
2ffd6ef0:	2500      	movcs	r5, #0
2ffd6ef2:	42b9      	cmp	r1, r7
2ffd6ef4:	bf08      	it	eq
2ffd6ef6:	42b0      	cmpeq	r0, r6
2ffd6ef8:	d2e0      	bcs.n	2ffd6ebc <mtd_seek+0x24>
2ffd6efa:	ea54 0205 	orrs.w	r2, r4, r5
2ffd6efe:	d1dd      	bne.n	2ffd6ebc <mtd_seek+0x24>
2ffd6f00:	e9c3 0102 	strd	r0, r1, [r3, #8]
2ffd6f04:	e7e5      	b.n	2ffd6ed2 <mtd_seek+0x3a>
2ffd6f06:	bf00      	nop
2ffd6f08:	2ffe34c0 	.word	0x2ffe34c0

2ffd6f0c <mtd_open>:
2ffd6f0c:	b538      	push	{r3, r4, r5, lr}
2ffd6f0e:	6843      	ldr	r3, [r0, #4]
2ffd6f10:	b10b      	cbz	r3, 2ffd6f16 <mtd_open+0xa>
2ffd6f12:	6850      	ldr	r0, [r2, #4]
2ffd6f14:	b118      	cbz	r0, 2ffd6f1e <mtd_open+0x12>
2ffd6f16:	4805      	ldr	r0, [pc, #20]	; (2ffd6f2c <mtd_open+0x20>)
2ffd6f18:	2176      	movs	r1, #118	; 0x76
2ffd6f1a:	f00b fffb 	bl	2ffe2f14 <__assert>
2ffd6f1e:	6053      	str	r3, [r2, #4]
2ffd6f20:	2400      	movs	r4, #0
2ffd6f22:	2500      	movs	r5, #0
2ffd6f24:	e9c3 4502 	strd	r4, r5, [r3, #8]
2ffd6f28:	bd38      	pop	{r3, r4, r5, pc}
2ffd6f2a:	bf00      	nop
2ffd6f2c:	2ffe34c0 	.word	0x2ffe34c0

2ffd6f30 <mtd_dev_close>:
2ffd6f30:	4b09      	ldr	r3, [pc, #36]	; (2ffd6f58 <mtd_dev_close+0x28>)
2ffd6f32:	b510      	push	{r4, lr}
2ffd6f34:	4604      	mov	r4, r0
2ffd6f36:	6840      	ldr	r0, [r0, #4]
2ffd6f38:	681b      	ldr	r3, [r3, #0]
2ffd6f3a:	6802      	ldr	r2, [r0, #0]
2ffd6f3c:	429a      	cmp	r2, r3
2ffd6f3e:	d108      	bne.n	2ffd6f52 <mtd_dev_close+0x22>
2ffd6f40:	2118      	movs	r1, #24
2ffd6f42:	f7ff ea8e 	blx	2ffd6460 <zero_normalmem>
2ffd6f46:	4620      	mov	r0, r4
2ffd6f48:	2108      	movs	r1, #8
2ffd6f4a:	f7ff ea8a 	blx	2ffd6460 <zero_normalmem>
2ffd6f4e:	2000      	movs	r0, #0
2ffd6f50:	bd10      	pop	{r4, pc}
2ffd6f52:	f06f 0001 	mvn.w	r0, #1
2ffd6f56:	e7fb      	b.n	2ffd6f50 <mtd_dev_close+0x20>
2ffd6f58:	2ffe8840 	.word	0x2ffe8840

2ffd6f5c <mtd_dev_open>:
2ffd6f5c:	b570      	push	{r4, r5, r6, lr}
2ffd6f5e:	4c10      	ldr	r4, [pc, #64]	; (2ffd6fa0 <mtd_dev_open+0x44>)
2ffd6f60:	6822      	ldr	r2, [r4, #0]
2ffd6f62:	4625      	mov	r5, r4
2ffd6f64:	b9c2      	cbnz	r2, 2ffd6f98 <mtd_dev_open+0x3c>
2ffd6f66:	4a0f      	ldr	r2, [pc, #60]	; (2ffd6fa4 <mtd_dev_open+0x48>)
2ffd6f68:	4e0f      	ldr	r6, [pc, #60]	; (2ffd6fa8 <mtd_dev_open+0x4c>)
2ffd6f6a:	6054      	str	r4, [r2, #4]
2ffd6f6c:	6016      	str	r6, [r2, #0]
2ffd6f6e:	6020      	str	r0, [r4, #0]
2ffd6f70:	600a      	str	r2, [r1, #0]
2ffd6f72:	68c2      	ldr	r2, [r0, #12]
2ffd6f74:	b932      	cbnz	r2, 2ffd6f84 <mtd_dev_open+0x28>
2ffd6f76:	682b      	ldr	r3, [r5, #0]
2ffd6f78:	2000      	movs	r0, #0
2ffd6f7a:	e9d3 2300 	ldrd	r2, r3, [r3]
2ffd6f7e:	e9c5 2304 	strd	r2, r3, [r5, #16]
2ffd6f82:	bd70      	pop	{r4, r5, r6, pc}
2ffd6f84:	f100 0108 	add.w	r1, r0, #8
2ffd6f88:	4790      	blx	r2
2ffd6f8a:	2800      	cmp	r0, #0
2ffd6f8c:	d0f3      	beq.n	2ffd6f76 <mtd_dev_open+0x1a>
2ffd6f8e:	2200      	movs	r2, #0
2ffd6f90:	2300      	movs	r3, #0
2ffd6f92:	e9c4 2304 	strd	r2, r3, [r4, #16]
2ffd6f96:	e7f4      	b.n	2ffd6f82 <mtd_dev_open+0x26>
2ffd6f98:	f06f 0001 	mvn.w	r0, #1
2ffd6f9c:	e7f1      	b.n	2ffd6f82 <mtd_dev_open+0x26>
2ffd6f9e:	bf00      	nop
2ffd6fa0:	2ffe8840 	.word	0x2ffe8840
2ffd6fa4:	2ffe8b5c 	.word	0x2ffe8b5c
2ffd6fa8:	2ffe34d8 	.word	0x2ffe34d8

2ffd6fac <register_io_dev_mtd>:
2ffd6fac:	b510      	push	{r4, lr}
2ffd6fae:	4604      	mov	r4, r0
2ffd6fb0:	4803      	ldr	r0, [pc, #12]	; (2ffd6fc0 <register_io_dev_mtd+0x14>)
2ffd6fb2:	f000 f841 	bl	2ffd7038 <io_register_device>
2ffd6fb6:	b908      	cbnz	r0, 2ffd6fbc <register_io_dev_mtd+0x10>
2ffd6fb8:	4b02      	ldr	r3, [pc, #8]	; (2ffd6fc4 <register_io_dev_mtd+0x18>)
2ffd6fba:	6023      	str	r3, [r4, #0]
2ffd6fbc:	bd10      	pop	{r4, pc}
2ffd6fbe:	bf00      	nop
2ffd6fc0:	2ffe8b5c 	.word	0x2ffe8b5c
2ffd6fc4:	2ffe34d4 	.word	0x2ffe34d4

2ffd6fc8 <is_valid_dev>:
2ffd6fc8:	b508      	push	{r3, lr}
2ffd6fca:	b140      	cbz	r0, 2ffd6fde <is_valid_dev+0x16>
2ffd6fcc:	6800      	ldr	r0, [r0, #0]
2ffd6fce:	b130      	cbz	r0, 2ffd6fde <is_valid_dev+0x16>
2ffd6fd0:	6800      	ldr	r0, [r0, #0]
2ffd6fd2:	b120      	cbz	r0, 2ffd6fde <is_valid_dev+0x16>
2ffd6fd4:	4780      	blx	r0
2ffd6fd6:	280a      	cmp	r0, #10
2ffd6fd8:	bf8c      	ite	hi
2ffd6fda:	2000      	movhi	r0, #0
2ffd6fdc:	2001      	movls	r0, #1
2ffd6fde:	bd08      	pop	{r3, pc}

2ffd6fe0 <is_valid_entity>:
2ffd6fe0:	b508      	push	{r3, lr}
2ffd6fe2:	b128      	cbz	r0, 2ffd6ff0 <is_valid_entity+0x10>
2ffd6fe4:	6800      	ldr	r0, [r0, #0]
2ffd6fe6:	f7ff ffef 	bl	2ffd6fc8 <is_valid_dev>
2ffd6fea:	3800      	subs	r0, #0
2ffd6fec:	bf18      	it	ne
2ffd6fee:	2001      	movne	r0, #1
2ffd6ff0:	bd08      	pop	{r3, pc}
	...

2ffd6ff4 <free_entity>:
2ffd6ff4:	b510      	push	{r4, lr}
2ffd6ff6:	b918      	cbnz	r0, 2ffd7000 <free_entity+0xc>
2ffd6ff8:	480c      	ldr	r0, [pc, #48]	; (2ffd702c <free_entity+0x38>)
2ffd6ffa:	2184      	movs	r1, #132	; 0x84
2ffd6ffc:	f00b ff8a 	bl	2ffe2f14 <__assert>
2ffd7000:	4a0b      	ldr	r2, [pc, #44]	; (2ffd7030 <free_entity+0x3c>)
2ffd7002:	2300      	movs	r3, #0
2ffd7004:	4611      	mov	r1, r2
2ffd7006:	f852 4b04 	ldr.w	r4, [r2], #4
2ffd700a:	42a0      	cmp	r0, r4
2ffd700c:	d005      	beq.n	2ffd701a <free_entity+0x26>
2ffd700e:	3301      	adds	r3, #1
2ffd7010:	2b04      	cmp	r3, #4
2ffd7012:	d1f8      	bne.n	2ffd7006 <free_entity+0x12>
2ffd7014:	f06f 0001 	mvn.w	r0, #1
2ffd7018:	bd10      	pop	{r4, pc}
2ffd701a:	4a06      	ldr	r2, [pc, #24]	; (2ffd7034 <free_entity+0x40>)
2ffd701c:	2000      	movs	r0, #0
2ffd701e:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
2ffd7022:	6813      	ldr	r3, [r2, #0]
2ffd7024:	3b01      	subs	r3, #1
2ffd7026:	6013      	str	r3, [r2, #0]
2ffd7028:	e7f6      	b.n	2ffd7018 <free_entity+0x24>
2ffd702a:	bf00      	nop
2ffd702c:	2ffe34fc 	.word	0x2ffe34fc
2ffd7030:	2ffe8b6c 	.word	0x2ffe8b6c
2ffd7034:	2ffe8b68 	.word	0x2ffe8b68

2ffd7038 <io_register_device>:
2ffd7038:	b508      	push	{r3, lr}
2ffd703a:	b918      	cbnz	r0, 2ffd7044 <io_register_device+0xc>
2ffd703c:	4806      	ldr	r0, [pc, #24]	; (2ffd7058 <io_register_device+0x20>)
2ffd703e:	2196      	movs	r1, #150	; 0x96
2ffd7040:	f00b ff68 	bl	2ffe2f14 <__assert>
2ffd7044:	4a05      	ldr	r2, [pc, #20]	; (2ffd705c <io_register_device+0x24>)
2ffd7046:	6813      	ldr	r3, [r2, #0]
2ffd7048:	2b03      	cmp	r3, #3
2ffd704a:	bf9d      	ittte	ls
2ffd704c:	3301      	addls	r3, #1
2ffd704e:	2000      	movls	r0, #0
2ffd7050:	6013      	strls	r3, [r2, #0]
2ffd7052:	f06f 000b 	mvnhi.w	r0, #11
2ffd7056:	bd08      	pop	{r3, pc}
2ffd7058:	2ffe34fc 	.word	0x2ffe34fc
2ffd705c:	2ffe8b64 	.word	0x2ffe8b64

2ffd7060 <io_dev_open>:
2ffd7060:	4603      	mov	r3, r0
2ffd7062:	4608      	mov	r0, r1
2ffd7064:	b510      	push	{r4, lr}
2ffd7066:	4611      	mov	r1, r2
2ffd7068:	b91a      	cbnz	r2, 2ffd7072 <io_dev_open+0x12>
2ffd706a:	21a7      	movs	r1, #167	; 0xa7
2ffd706c:	4805      	ldr	r0, [pc, #20]	; (2ffd7084 <io_dev_open+0x24>)
2ffd706e:	f00b ff51 	bl	2ffe2f14 <__assert>
2ffd7072:	b123      	cbz	r3, 2ffd707e <io_dev_open+0x1e>
2ffd7074:	681b      	ldr	r3, [r3, #0]
2ffd7076:	b113      	cbz	r3, 2ffd707e <io_dev_open+0x1e>
2ffd7078:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffd707c:	4718      	bx	r3
2ffd707e:	214f      	movs	r1, #79	; 0x4f
2ffd7080:	e7f4      	b.n	2ffd706c <io_dev_open+0xc>
2ffd7082:	bf00      	nop
2ffd7084:	2ffe34fc 	.word	0x2ffe34fc

2ffd7088 <io_dev_init>:
2ffd7088:	b570      	push	{r4, r5, r6, lr}
2ffd708a:	460d      	mov	r5, r1
2ffd708c:	4604      	mov	r4, r0
2ffd708e:	b918      	cbnz	r0, 2ffd7098 <io_dev_init+0x10>
2ffd7090:	21b3      	movs	r1, #179	; 0xb3
2ffd7092:	4809      	ldr	r0, [pc, #36]	; (2ffd70b8 <io_dev_init+0x30>)
2ffd7094:	f00b ff3e 	bl	2ffe2f14 <__assert>
2ffd7098:	f7ff ff96 	bl	2ffd6fc8 <is_valid_dev>
2ffd709c:	b908      	cbnz	r0, 2ffd70a2 <io_dev_init+0x1a>
2ffd709e:	21b4      	movs	r1, #180	; 0xb4
2ffd70a0:	e7f7      	b.n	2ffd7092 <io_dev_init+0xa>
2ffd70a2:	6823      	ldr	r3, [r4, #0]
2ffd70a4:	69db      	ldr	r3, [r3, #28]
2ffd70a6:	b123      	cbz	r3, 2ffd70b2 <io_dev_init+0x2a>
2ffd70a8:	4629      	mov	r1, r5
2ffd70aa:	4620      	mov	r0, r4
2ffd70ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffd70b0:	4718      	bx	r3
2ffd70b2:	4618      	mov	r0, r3
2ffd70b4:	bd70      	pop	{r4, r5, r6, pc}
2ffd70b6:	bf00      	nop
2ffd70b8:	2ffe34fc 	.word	0x2ffe34fc

2ffd70bc <io_dev_close>:
2ffd70bc:	b510      	push	{r4, lr}
2ffd70be:	4604      	mov	r4, r0
2ffd70c0:	b918      	cbnz	r0, 2ffd70ca <io_dev_close+0xe>
2ffd70c2:	21c4      	movs	r1, #196	; 0xc4
2ffd70c4:	4808      	ldr	r0, [pc, #32]	; (2ffd70e8 <io_dev_close+0x2c>)
2ffd70c6:	f00b ff25 	bl	2ffe2f14 <__assert>
2ffd70ca:	f7ff ff7d 	bl	2ffd6fc8 <is_valid_dev>
2ffd70ce:	b908      	cbnz	r0, 2ffd70d4 <io_dev_close+0x18>
2ffd70d0:	21c5      	movs	r1, #197	; 0xc5
2ffd70d2:	e7f7      	b.n	2ffd70c4 <io_dev_close+0x8>
2ffd70d4:	6823      	ldr	r3, [r4, #0]
2ffd70d6:	6a1b      	ldr	r3, [r3, #32]
2ffd70d8:	b11b      	cbz	r3, 2ffd70e2 <io_dev_close+0x26>
2ffd70da:	4620      	mov	r0, r4
2ffd70dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffd70e0:	4718      	bx	r3
2ffd70e2:	4618      	mov	r0, r3
2ffd70e4:	bd10      	pop	{r4, pc}
2ffd70e6:	bf00      	nop
2ffd70e8:	2ffe34fc 	.word	0x2ffe34fc

2ffd70ec <io_open>:
2ffd70ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffd70f0:	4606      	mov	r6, r0
2ffd70f2:	4617      	mov	r7, r2
2ffd70f4:	460d      	mov	r5, r1
2ffd70f6:	b101      	cbz	r1, 2ffd70fa <io_open+0xe>
2ffd70f8:	b91a      	cbnz	r2, 2ffd7102 <io_open+0x16>
2ffd70fa:	21d9      	movs	r1, #217	; 0xd9
2ffd70fc:	481d      	ldr	r0, [pc, #116]	; (2ffd7174 <io_open+0x88>)
2ffd70fe:	f00b ff09 	bl	2ffe2f14 <__assert>
2ffd7102:	f7ff ff61 	bl	2ffd6fc8 <is_valid_dev>
2ffd7106:	b908      	cbnz	r0, 2ffd710c <io_open+0x20>
2ffd7108:	21da      	movs	r1, #218	; 0xda
2ffd710a:	e7f7      	b.n	2ffd70fc <io_open+0x10>
2ffd710c:	4b1a      	ldr	r3, [pc, #104]	; (2ffd7178 <io_open+0x8c>)
2ffd710e:	6818      	ldr	r0, [r3, #0]
2ffd7110:	2803      	cmp	r0, #3
2ffd7112:	d81d      	bhi.n	2ffd7150 <io_open+0x64>
2ffd7114:	4a19      	ldr	r2, [pc, #100]	; (2ffd717c <io_open+0x90>)
2ffd7116:	2400      	movs	r4, #0
2ffd7118:	4611      	mov	r1, r2
2ffd711a:	f852 cb04 	ldr.w	ip, [r2], #4
2ffd711e:	f1bc 0f00 	cmp.w	ip, #0
2ffd7122:	d018      	beq.n	2ffd7156 <io_open+0x6a>
2ffd7124:	3401      	adds	r4, #1
2ffd7126:	2c04      	cmp	r4, #4
2ffd7128:	d1f7      	bne.n	2ffd711a <io_open+0x2e>
2ffd712a:	2176      	movs	r1, #118	; 0x76
2ffd712c:	e7e6      	b.n	2ffd70fc <io_open+0x10>
2ffd712e:	4629      	mov	r1, r5
2ffd7130:	464a      	mov	r2, r9
2ffd7132:	4630      	mov	r0, r6
2ffd7134:	4798      	blx	r3
2ffd7136:	4605      	mov	r5, r0
2ffd7138:	b930      	cbnz	r0, 2ffd7148 <io_open+0x5c>
2ffd713a:	f848 6034 	str.w	r6, [r8, r4, lsl #3]
2ffd713e:	f8c7 9000 	str.w	r9, [r7]
2ffd7142:	4628      	mov	r0, r5
2ffd7144:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffd7148:	4648      	mov	r0, r9
2ffd714a:	f7ff ff53 	bl	2ffd6ff4 <free_entity>
2ffd714e:	e7f8      	b.n	2ffd7142 <io_open+0x56>
2ffd7150:	f06f 050b 	mvn.w	r5, #11
2ffd7154:	e7f5      	b.n	2ffd7142 <io_open+0x56>
2ffd7156:	f8df 8028 	ldr.w	r8, [pc, #40]	; 2ffd7180 <io_open+0x94>
2ffd715a:	3001      	adds	r0, #1
2ffd715c:	6018      	str	r0, [r3, #0]
2ffd715e:	6833      	ldr	r3, [r6, #0]
2ffd7160:	eb08 09c4 	add.w	r9, r8, r4, lsl #3
2ffd7164:	685b      	ldr	r3, [r3, #4]
2ffd7166:	f841 9024 	str.w	r9, [r1, r4, lsl #2]
2ffd716a:	2b00      	cmp	r3, #0
2ffd716c:	d1df      	bne.n	2ffd712e <io_open+0x42>
2ffd716e:	21e2      	movs	r1, #226	; 0xe2
2ffd7170:	e7c4      	b.n	2ffd70fc <io_open+0x10>
2ffd7172:	bf00      	nop
2ffd7174:	2ffe34fc 	.word	0x2ffe34fc
2ffd7178:	2ffe8b68 	.word	0x2ffe8b68
2ffd717c:	2ffe8b6c 	.word	0x2ffe8b6c
2ffd7180:	2ffe8b7c 	.word	0x2ffe8b7c

2ffd7184 <io_seek>:
2ffd7184:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffd7188:	4604      	mov	r4, r0
2ffd718a:	460d      	mov	r5, r1
2ffd718c:	4617      	mov	r7, r2
2ffd718e:	461e      	mov	r6, r3
2ffd7190:	f7ff ff26 	bl	2ffd6fe0 <is_valid_entity>
2ffd7194:	b110      	cbz	r0, 2ffd719c <io_seek+0x18>
2ffd7196:	1e6b      	subs	r3, r5, #1
2ffd7198:	2b02      	cmp	r3, #2
2ffd719a:	d903      	bls.n	2ffd71a4 <io_seek+0x20>
2ffd719c:	480b      	ldr	r0, [pc, #44]	; (2ffd71cc <io_seek+0x48>)
2ffd719e:	21f3      	movs	r1, #243	; 0xf3
2ffd71a0:	f00b feb8 	bl	2ffe2f14 <__assert>
2ffd71a4:	6823      	ldr	r3, [r4, #0]
2ffd71a6:	681b      	ldr	r3, [r3, #0]
2ffd71a8:	f8d3 e008 	ldr.w	lr, [r3, #8]
2ffd71ac:	f1be 0f00 	cmp.w	lr, #0
2ffd71b0:	d007      	beq.n	2ffd71c2 <io_seek+0x3e>
2ffd71b2:	463a      	mov	r2, r7
2ffd71b4:	4633      	mov	r3, r6
2ffd71b6:	4629      	mov	r1, r5
2ffd71b8:	4620      	mov	r0, r4
2ffd71ba:	46f4      	mov	ip, lr
2ffd71bc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffd71c0:	4760      	bx	ip
2ffd71c2:	f06f 0012 	mvn.w	r0, #18
2ffd71c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffd71ca:	bf00      	nop
2ffd71cc:	2ffe34fc 	.word	0x2ffe34fc

2ffd71d0 <io_size>:
2ffd71d0:	b570      	push	{r4, r5, r6, lr}
2ffd71d2:	4604      	mov	r4, r0
2ffd71d4:	460d      	mov	r5, r1
2ffd71d6:	f7ff ff03 	bl	2ffd6fe0 <is_valid_entity>
2ffd71da:	b100      	cbz	r0, 2ffd71de <io_size+0xe>
2ffd71dc:	b925      	cbnz	r5, 2ffd71e8 <io_size+0x18>
2ffd71de:	4808      	ldr	r0, [pc, #32]	; (2ffd7200 <io_size+0x30>)
2ffd71e0:	f44f 7182 	mov.w	r1, #260	; 0x104
2ffd71e4:	f00b fe96 	bl	2ffe2f14 <__assert>
2ffd71e8:	6823      	ldr	r3, [r4, #0]
2ffd71ea:	681b      	ldr	r3, [r3, #0]
2ffd71ec:	68db      	ldr	r3, [r3, #12]
2ffd71ee:	b123      	cbz	r3, 2ffd71fa <io_size+0x2a>
2ffd71f0:	4629      	mov	r1, r5
2ffd71f2:	4620      	mov	r0, r4
2ffd71f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffd71f8:	4718      	bx	r3
2ffd71fa:	f06f 0012 	mvn.w	r0, #18
2ffd71fe:	bd70      	pop	{r4, r5, r6, pc}
2ffd7200:	2ffe34fc 	.word	0x2ffe34fc

2ffd7204 <io_read>:
2ffd7204:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffd7208:	4604      	mov	r4, r0
2ffd720a:	460d      	mov	r5, r1
2ffd720c:	4616      	mov	r6, r2
2ffd720e:	461f      	mov	r7, r3
2ffd7210:	f7ff fee6 	bl	2ffd6fe0 <is_valid_entity>
2ffd7214:	b920      	cbnz	r0, 2ffd7220 <io_read+0x1c>
2ffd7216:	480c      	ldr	r0, [pc, #48]	; (2ffd7248 <io_read+0x44>)
2ffd7218:	f44f 718c 	mov.w	r1, #280	; 0x118
2ffd721c:	f00b fe7a 	bl	2ffe2f14 <__assert>
2ffd7220:	6823      	ldr	r3, [r4, #0]
2ffd7222:	681b      	ldr	r3, [r3, #0]
2ffd7224:	f8d3 e010 	ldr.w	lr, [r3, #16]
2ffd7228:	f1be 0f00 	cmp.w	lr, #0
2ffd722c:	d007      	beq.n	2ffd723e <io_read+0x3a>
2ffd722e:	463b      	mov	r3, r7
2ffd7230:	4632      	mov	r2, r6
2ffd7232:	4629      	mov	r1, r5
2ffd7234:	4620      	mov	r0, r4
2ffd7236:	46f4      	mov	ip, lr
2ffd7238:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffd723c:	4760      	bx	ip
2ffd723e:	f06f 0012 	mvn.w	r0, #18
2ffd7242:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffd7246:	bf00      	nop
2ffd7248:	2ffe34fc 	.word	0x2ffe34fc

2ffd724c <io_close>:
2ffd724c:	b538      	push	{r3, r4, r5, lr}
2ffd724e:	4605      	mov	r5, r0
2ffd7250:	f7ff fec6 	bl	2ffd6fe0 <is_valid_entity>
2ffd7254:	b920      	cbnz	r0, 2ffd7260 <io_close+0x14>
2ffd7256:	4808      	ldr	r0, [pc, #32]	; (2ffd7278 <io_close+0x2c>)
2ffd7258:	f240 113f 	movw	r1, #319	; 0x13f
2ffd725c:	f00b fe5a 	bl	2ffe2f14 <__assert>
2ffd7260:	682b      	ldr	r3, [r5, #0]
2ffd7262:	681b      	ldr	r3, [r3, #0]
2ffd7264:	699c      	ldr	r4, [r3, #24]
2ffd7266:	b114      	cbz	r4, 2ffd726e <io_close+0x22>
2ffd7268:	4628      	mov	r0, r5
2ffd726a:	47a0      	blx	r4
2ffd726c:	4604      	mov	r4, r0
2ffd726e:	4628      	mov	r0, r5
2ffd7270:	f7ff fec0 	bl	2ffd6ff4 <free_entity>
2ffd7274:	4620      	mov	r0, r4
2ffd7276:	bd38      	pop	{r3, r4, r5, pc}
2ffd7278:	2ffe34fc 	.word	0x2ffe34fc

2ffd727c <hash_write_data>:
2ffd727c:	e92d 43d0 	stmdb	sp!, {r4, r6, r7, r8, r9, lr}
2ffd7280:	4604      	mov	r4, r0
2ffd7282:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffd7286:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffd728a:	4a12      	ldr	r2, [pc, #72]	; (2ffd72d4 <hash_write_data+0x58>)
2ffd728c:	f242 7110 	movw	r1, #10000	; 0x2710
2ffd7290:	2300      	movs	r3, #0
2ffd7292:	fba0 0101 	umull	r0, r1, r0, r1
2ffd7296:	f00b e9e4 	blx	2ffe2660 <__aeabi_uldivmod>
2ffd729a:	4b0f      	ldr	r3, [pc, #60]	; (2ffd72d8 <hash_write_data+0x5c>)
2ffd729c:	eb10 0608 	adds.w	r6, r0, r8
2ffd72a0:	681a      	ldr	r2, [r3, #0]
2ffd72a2:	eb41 0709 	adc.w	r7, r1, r9
2ffd72a6:	f102 0124 	add.w	r1, r2, #36	; 0x24
2ffd72aa:	6808      	ldr	r0, [r1, #0]
2ffd72ac:	f010 0008 	ands.w	r0, r0, #8
2ffd72b0:	d101      	bne.n	2ffd72b6 <hash_write_data+0x3a>
2ffd72b2:	6054      	str	r4, [r2, #4]
2ffd72b4:	e00b      	b.n	2ffd72ce <hash_write_data+0x52>
2ffd72b6:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffd72ba:	454f      	cmp	r7, r9
2ffd72bc:	bf08      	it	eq
2ffd72be:	4546      	cmpeq	r6, r8
2ffd72c0:	d2f3      	bcs.n	2ffd72aa <hash_write_data+0x2e>
2ffd72c2:	4806      	ldr	r0, [pc, #24]	; (2ffd72dc <hash_write_data+0x60>)
2ffd72c4:	4906      	ldr	r1, [pc, #24]	; (2ffd72e0 <hash_write_data+0x64>)
2ffd72c6:	f005 fc11 	bl	2ffdcaec <tf_log>
2ffd72ca:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2ffd72ce:	e8bd 83d0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, pc}
2ffd72d2:	bf00      	nop
2ffd72d4:	000f4240 	.word	0x000f4240
2ffd72d8:	2ffe8b9c 	.word	0x2ffe8b9c
2ffd72dc:	2ffe3514 	.word	0x2ffe3514
2ffd72e0:	2ffe3558 	.word	0x2ffe3558

2ffd72e4 <stm32_hash_update>:
2ffd72e4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffd72e8:	4680      	mov	r8, r0
2ffd72ea:	460d      	mov	r5, r1
2ffd72ec:	2900      	cmp	r1, #0
2ffd72ee:	d046      	beq.n	2ffd737e <stm32_hash_update+0x9a>
2ffd72f0:	2800      	cmp	r0, #0
2ffd72f2:	d046      	beq.n	2ffd7382 <stm32_hash_update+0x9e>
2ffd72f4:	4f24      	ldr	r7, [pc, #144]	; (2ffd7388 <stm32_hash_update+0xa4>)
2ffd72f6:	4e25      	ldr	r6, [pc, #148]	; (2ffd738c <stm32_hash_update+0xa8>)
2ffd72f8:	6878      	ldr	r0, [r7, #4]
2ffd72fa:	f008 fa0b 	bl	2ffdf714 <stm32mp_clk_enable>
2ffd72fe:	6870      	ldr	r0, [r6, #4]
2ffd7300:	b1b8      	cbz	r0, 2ffd7332 <stm32_hash_update+0x4e>
2ffd7302:	f1c0 0404 	rsb	r4, r0, #4
2ffd7306:	4641      	mov	r1, r8
2ffd7308:	42ac      	cmp	r4, r5
2ffd730a:	4430      	add	r0, r6
2ffd730c:	bf28      	it	cs
2ffd730e:	462c      	movcs	r4, r5
2ffd7310:	1b2d      	subs	r5, r5, r4
2ffd7312:	4622      	mov	r2, r4
2ffd7314:	44a0      	add	r8, r4
2ffd7316:	f00b fe25 	bl	2ffe2f64 <memcpy>
2ffd731a:	6873      	ldr	r3, [r6, #4]
2ffd731c:	2b04      	cmp	r3, #4
2ffd731e:	d108      	bne.n	2ffd7332 <stm32_hash_update+0x4e>
2ffd7320:	6830      	ldr	r0, [r6, #0]
2ffd7322:	f7ff ffab 	bl	2ffd727c <hash_write_data>
2ffd7326:	4604      	mov	r4, r0
2ffd7328:	bb00      	cbnz	r0, 2ffd736c <stm32_hash_update+0x88>
2ffd732a:	2108      	movs	r1, #8
2ffd732c:	4630      	mov	r0, r6
2ffd732e:	f7ff e898 	blx	2ffd6460 <zero_normalmem>
2ffd7332:	44a8      	add	r8, r5
2ffd7334:	eba8 0105 	sub.w	r1, r8, r5
2ffd7338:	2d03      	cmp	r5, #3
2ffd733a:	d806      	bhi.n	2ffd734a <stm32_hash_update+0x66>
2ffd733c:	b1ed      	cbz	r5, 2ffd737a <stm32_hash_update+0x96>
2ffd733e:	6874      	ldr	r4, [r6, #4]
2ffd7340:	b17c      	cbz	r4, 2ffd7362 <stm32_hash_update+0x7e>
2ffd7342:	4813      	ldr	r0, [pc, #76]	; (2ffd7390 <stm32_hash_update+0xac>)
2ffd7344:	21e4      	movs	r1, #228	; 0xe4
2ffd7346:	f00b fde5 	bl	2ffe2f14 <__assert>
2ffd734a:	2204      	movs	r2, #4
2ffd734c:	eb0d 0002 	add.w	r0, sp, r2
2ffd7350:	f00b fe08 	bl	2ffe2f64 <memcpy>
2ffd7354:	9801      	ldr	r0, [sp, #4]
2ffd7356:	f7ff ff91 	bl	2ffd727c <hash_write_data>
2ffd735a:	4604      	mov	r4, r0
2ffd735c:	b930      	cbnz	r0, 2ffd736c <stm32_hash_update+0x88>
2ffd735e:	3d04      	subs	r5, #4
2ffd7360:	e7e8      	b.n	2ffd7334 <stm32_hash_update+0x50>
2ffd7362:	480a      	ldr	r0, [pc, #40]	; (2ffd738c <stm32_hash_update+0xa8>)
2ffd7364:	462a      	mov	r2, r5
2ffd7366:	f00b fdfd 	bl	2ffe2f64 <memcpy>
2ffd736a:	6075      	str	r5, [r6, #4]
2ffd736c:	6878      	ldr	r0, [r7, #4]
2ffd736e:	f008 f9d4 	bl	2ffdf71a <stm32mp_clk_disable>
2ffd7372:	4620      	mov	r0, r4
2ffd7374:	b002      	add	sp, #8
2ffd7376:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffd737a:	462c      	mov	r4, r5
2ffd737c:	e7f6      	b.n	2ffd736c <stm32_hash_update+0x88>
2ffd737e:	460c      	mov	r4, r1
2ffd7380:	e7f7      	b.n	2ffd7372 <stm32_hash_update+0x8e>
2ffd7382:	4604      	mov	r4, r0
2ffd7384:	e7f5      	b.n	2ffd7372 <stm32_hash_update+0x8e>
2ffd7386:	bf00      	nop
2ffd7388:	2ffe8b9c 	.word	0x2ffe8b9c
2ffd738c:	2ffe8ba8 	.word	0x2ffe8ba8
2ffd7390:	2ffe3527 	.word	0x2ffe3527

2ffd7394 <stm32_hash_final>:
2ffd7394:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2ffd7398:	4682      	mov	sl, r0
2ffd739a:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 2ffd748c <stm32_hash_final+0xf8>
2ffd739e:	f8df 80f0 	ldr.w	r8, [pc, #240]	; 2ffd7490 <stm32_hash_final+0xfc>
2ffd73a2:	f8d9 0004 	ldr.w	r0, [r9, #4]
2ffd73a6:	464c      	mov	r4, r9
2ffd73a8:	f008 f9b4 	bl	2ffdf714 <stm32mp_clk_enable>
2ffd73ac:	f8d8 3004 	ldr.w	r3, [r8, #4]
2ffd73b0:	2b00      	cmp	r3, #0
2ffd73b2:	d03f      	beq.n	2ffd7434 <stm32_hash_final+0xa0>
2ffd73b4:	f8d8 0000 	ldr.w	r0, [r8]
2ffd73b8:	f7ff ff60 	bl	2ffd727c <hash_write_data>
2ffd73bc:	4605      	mov	r5, r0
2ffd73be:	b138      	cbz	r0, 2ffd73d0 <stm32_hash_final+0x3c>
2ffd73c0:	f8d9 0004 	ldr.w	r0, [r9, #4]
2ffd73c4:	f008 f9a9 	bl	2ffdf71a <stm32mp_clk_disable>
2ffd73c8:	4628      	mov	r0, r5
2ffd73ca:	b002      	add	sp, #8
2ffd73cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffd73d0:	f8d9 1000 	ldr.w	r1, [r9]
2ffd73d4:	4640      	mov	r0, r8
2ffd73d6:	f8d8 2004 	ldr.w	r2, [r8, #4]
2ffd73da:	688b      	ldr	r3, [r1, #8]
2ffd73dc:	f023 031f 	bic.w	r3, r3, #31
2ffd73e0:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
2ffd73e4:	608b      	str	r3, [r1, #8]
2ffd73e6:	2108      	movs	r1, #8
2ffd73e8:	f7ff e83a 	blx	2ffd6460 <zero_normalmem>
2ffd73ec:	6825      	ldr	r5, [r4, #0]
2ffd73ee:	68ab      	ldr	r3, [r5, #8]
2ffd73f0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2ffd73f4:	60ab      	str	r3, [r5, #8]
2ffd73f6:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffd73fa:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffd73fe:	4a1f      	ldr	r2, [pc, #124]	; (2ffd747c <stm32_hash_final+0xe8>)
2ffd7400:	f242 7110 	movw	r1, #10000	; 0x2710
2ffd7404:	2300      	movs	r3, #0
2ffd7406:	fba0 0101 	umull	r0, r1, r0, r1
2ffd740a:	f00b e92a 	blx	2ffe2660 <__aeabi_uldivmod>
2ffd740e:	eb10 0608 	adds.w	r6, r0, r8
2ffd7412:	eb41 0709 	adc.w	r7, r1, r9
2ffd7416:	6a6b      	ldr	r3, [r5, #36]	; 0x24
2ffd7418:	079b      	lsls	r3, r3, #30
2ffd741a:	d512      	bpl.n	2ffd7442 <stm32_hash_final+0xae>
2ffd741c:	2500      	movs	r5, #0
2ffd741e:	68a2      	ldr	r2, [r4, #8]
2ffd7420:	6823      	ldr	r3, [r4, #0]
2ffd7422:	ebb5 0f92 	cmp.w	r5, r2, lsr #2
2ffd7426:	d31a      	bcc.n	2ffd745e <stm32_hash_final+0xca>
2ffd7428:	2220      	movs	r2, #32
2ffd742a:	2500      	movs	r5, #0
2ffd742c:	60a2      	str	r2, [r4, #8]
2ffd742e:	4a14      	ldr	r2, [pc, #80]	; (2ffd7480 <stm32_hash_final+0xec>)
2ffd7430:	601a      	str	r2, [r3, #0]
2ffd7432:	e012      	b.n	2ffd745a <stm32_hash_final+0xc6>
2ffd7434:	f8d9 2000 	ldr.w	r2, [r9]
2ffd7438:	6893      	ldr	r3, [r2, #8]
2ffd743a:	f023 031f 	bic.w	r3, r3, #31
2ffd743e:	6093      	str	r3, [r2, #8]
2ffd7440:	e7d4      	b.n	2ffd73ec <stm32_hash_final+0x58>
2ffd7442:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffd7446:	429f      	cmp	r7, r3
2ffd7448:	bf08      	it	eq
2ffd744a:	4296      	cmpeq	r6, r2
2ffd744c:	d2e3      	bcs.n	2ffd7416 <stm32_hash_final+0x82>
2ffd744e:	490d      	ldr	r1, [pc, #52]	; (2ffd7484 <stm32_hash_final+0xf0>)
2ffd7450:	f06f 053b 	mvn.w	r5, #59	; 0x3b
2ffd7454:	480c      	ldr	r0, [pc, #48]	; (2ffd7488 <stm32_hash_final+0xf4>)
2ffd7456:	f005 fb49 	bl	2ffdcaec <tf_log>
2ffd745a:	6860      	ldr	r0, [r4, #4]
2ffd745c:	e7b2      	b.n	2ffd73c4 <stm32_hash_final+0x30>
2ffd745e:	f503 7344 	add.w	r3, r3, #784	; 0x310
2ffd7462:	2204      	movs	r2, #4
2ffd7464:	eb0a 0085 	add.w	r0, sl, r5, lsl #2
2ffd7468:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
2ffd746c:	3501      	adds	r5, #1
2ffd746e:	eb0d 0102 	add.w	r1, sp, r2
2ffd7472:	ba1b      	rev	r3, r3
2ffd7474:	9301      	str	r3, [sp, #4]
2ffd7476:	f00b fd75 	bl	2ffe2f64 <memcpy>
2ffd747a:	e7d0      	b.n	2ffd741e <stm32_hash_final+0x8a>
2ffd747c:	000f4240 	.word	0x000f4240
2ffd7480:	000400a4 	.word	0x000400a4
2ffd7484:	2ffe3567 	.word	0x2ffe3567
2ffd7488:	2ffe3514 	.word	0x2ffe3514
2ffd748c:	2ffe8b9c 	.word	0x2ffe8b9c
2ffd7490:	2ffe8ba8 	.word	0x2ffe8ba8

2ffd7494 <stm32_hash_final_update>:
2ffd7494:	b510      	push	{r4, lr}
2ffd7496:	4614      	mov	r4, r2
2ffd7498:	f7ff ff24 	bl	2ffd72e4 <stm32_hash_update>
2ffd749c:	b920      	cbnz	r0, 2ffd74a8 <stm32_hash_final_update+0x14>
2ffd749e:	4620      	mov	r0, r4
2ffd74a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffd74a4:	f7ff bf76 	b.w	2ffd7394 <stm32_hash_final>
2ffd74a8:	bd10      	pop	{r4, pc}
	...

2ffd74ac <stm32_hash_init>:
2ffd74ac:	b538      	push	{r3, r4, r5, lr}
2ffd74ae:	4605      	mov	r5, r0
2ffd74b0:	4c11      	ldr	r4, [pc, #68]	; (2ffd74f8 <stm32_hash_init+0x4c>)
2ffd74b2:	6860      	ldr	r0, [r4, #4]
2ffd74b4:	f008 f92e 	bl	2ffdf714 <stm32mp_clk_enable>
2ffd74b8:	2d01      	cmp	r5, #1
2ffd74ba:	4623      	mov	r3, r4
2ffd74bc:	d010      	beq.n	2ffd74e0 <stm32_hash_init+0x34>
2ffd74be:	2d02      	cmp	r5, #2
2ffd74c0:	d012      	beq.n	2ffd74e8 <stm32_hash_init+0x3c>
2ffd74c2:	b9ad      	cbnz	r5, 2ffd74f0 <stm32_hash_init+0x44>
2ffd74c4:	2210      	movs	r2, #16
2ffd74c6:	60a2      	str	r2, [r4, #8]
2ffd74c8:	22a4      	movs	r2, #164	; 0xa4
2ffd74ca:	6819      	ldr	r1, [r3, #0]
2ffd74cc:	6858      	ldr	r0, [r3, #4]
2ffd74ce:	600a      	str	r2, [r1, #0]
2ffd74d0:	f008 f923 	bl	2ffdf71a <stm32mp_clk_disable>
2ffd74d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffd74d8:	4808      	ldr	r0, [pc, #32]	; (2ffd74fc <stm32_hash_init+0x50>)
2ffd74da:	2108      	movs	r1, #8
2ffd74dc:	f00f bd50 	b.w	2ffe6f80 <__zeromem_from_thumb>
2ffd74e0:	2214      	movs	r2, #20
2ffd74e2:	60a2      	str	r2, [r4, #8]
2ffd74e4:	2224      	movs	r2, #36	; 0x24
2ffd74e6:	e7f0      	b.n	2ffd74ca <stm32_hash_init+0x1e>
2ffd74e8:	221c      	movs	r2, #28
2ffd74ea:	60a2      	str	r2, [r4, #8]
2ffd74ec:	4a04      	ldr	r2, [pc, #16]	; (2ffd7500 <stm32_hash_init+0x54>)
2ffd74ee:	e7ec      	b.n	2ffd74ca <stm32_hash_init+0x1e>
2ffd74f0:	2220      	movs	r2, #32
2ffd74f2:	60a2      	str	r2, [r4, #8]
2ffd74f4:	4a03      	ldr	r2, [pc, #12]	; (2ffd7504 <stm32_hash_init+0x58>)
2ffd74f6:	e7e8      	b.n	2ffd74ca <stm32_hash_init+0x1e>
2ffd74f8:	2ffe8b9c 	.word	0x2ffe8b9c
2ffd74fc:	2ffe8ba8 	.word	0x2ffe8ba8
2ffd7500:	00040024 	.word	0x00040024
2ffd7504:	000400a4 	.word	0x000400a4

2ffd7508 <stm32_hash_register>:
2ffd7508:	b530      	push	{r4, r5, lr}
2ffd750a:	b085      	sub	sp, #20
2ffd750c:	4a1e      	ldr	r2, [pc, #120]	; (2ffd7588 <stm32_hash_register+0x80>)
2ffd750e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffd7512:	4c1d      	ldr	r4, [pc, #116]	; (2ffd7588 <stm32_hash_register+0x80>)
2ffd7514:	4668      	mov	r0, sp
2ffd7516:	f00a fdf7 	bl	2ffe2108 <dt_get_node>
2ffd751a:	4601      	mov	r1, r0
2ffd751c:	1c4b      	adds	r3, r1, #1
2ffd751e:	d103      	bne.n	2ffd7528 <stm32_hash_register+0x20>
2ffd7520:	f06f 0012 	mvn.w	r0, #18
2ffd7524:	b005      	add	sp, #20
2ffd7526:	bd30      	pop	{r4, r5, pc}
2ffd7528:	9b03      	ldr	r3, [sp, #12]
2ffd752a:	bb3b      	cbnz	r3, 2ffd757c <stm32_hash_register+0x74>
2ffd752c:	4622      	mov	r2, r4
2ffd752e:	4668      	mov	r0, sp
2ffd7530:	f00a fdea 	bl	2ffe2108 <dt_get_node>
2ffd7534:	4601      	mov	r1, r0
2ffd7536:	e7f1      	b.n	2ffd751c <stm32_hash_register+0x14>
2ffd7538:	4c14      	ldr	r4, [pc, #80]	; (2ffd758c <stm32_hash_register+0x84>)
2ffd753a:	9b00      	ldr	r3, [sp, #0]
2ffd753c:	6060      	str	r0, [r4, #4]
2ffd753e:	6023      	str	r3, [r4, #0]
2ffd7540:	f008 f8e8 	bl	2ffdf714 <stm32mp_clk_enable>
2ffd7544:	9d02      	ldr	r5, [sp, #8]
2ffd7546:	2d00      	cmp	r5, #0
2ffd7548:	db13      	blt.n	2ffd7572 <stm32_hash_register+0x6a>
2ffd754a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffd754e:	4628      	mov	r0, r5
2ffd7550:	f00a fb7c 	bl	2ffe1c4c <stm32mp_reset_assert_to>
2ffd7554:	b118      	cbz	r0, 2ffd755e <stm32_hash_register+0x56>
2ffd7556:	f005 fb67 	bl	2ffdcc28 <console_flush>
2ffd755a:	f7fe ee82 	blx	2ffd6260 <do_panic>
2ffd755e:	2014      	movs	r0, #20
2ffd7560:	f006 ff30 	bl	2ffde3c4 <udelay>
2ffd7564:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffd7568:	4628      	mov	r0, r5
2ffd756a:	f00a fba7 	bl	2ffe1cbc <stm32mp_reset_deassert_to>
2ffd756e:	2800      	cmp	r0, #0
2ffd7570:	d1f1      	bne.n	2ffd7556 <stm32_hash_register+0x4e>
2ffd7572:	6860      	ldr	r0, [r4, #4]
2ffd7574:	f008 f8d1 	bl	2ffdf71a <stm32mp_clk_disable>
2ffd7578:	2000      	movs	r0, #0
2ffd757a:	e7d3      	b.n	2ffd7524 <stm32_hash_register+0x1c>
2ffd757c:	9801      	ldr	r0, [sp, #4]
2ffd757e:	2800      	cmp	r0, #0
2ffd7580:	dada      	bge.n	2ffd7538 <stm32_hash_register+0x30>
2ffd7582:	f06f 0015 	mvn.w	r0, #21
2ffd7586:	e7cd      	b.n	2ffd7524 <stm32_hash_register+0x1c>
2ffd7588:	2ffe3546 	.word	0x2ffe3546
2ffd758c:	2ffe8b9c 	.word	0x2ffe8b9c

2ffd7590 <device_type_stm32image>:
2ffd7590:	2008      	movs	r0, #8
2ffd7592:	4770      	bx	lr

2ffd7594 <stm32image_dev_close>:
2ffd7594:	4b03      	ldr	r3, [pc, #12]	; (2ffd75a4 <stm32image_dev_close+0x10>)
2ffd7596:	2000      	movs	r0, #0
2ffd7598:	6018      	str	r0, [r3, #0]
2ffd759a:	4b03      	ldr	r3, [pc, #12]	; (2ffd75a8 <stm32image_dev_close+0x14>)
2ffd759c:	6018      	str	r0, [r3, #0]
2ffd759e:	4b03      	ldr	r3, [pc, #12]	; (2ffd75ac <stm32image_dev_close+0x18>)
2ffd75a0:	6018      	str	r0, [r3, #0]
2ffd75a2:	4770      	bx	lr
2ffd75a4:	2ffe8bb0 	.word	0x2ffe8bb0
2ffd75a8:	2ffe8bb4 	.word	0x2ffe8bb4
2ffd75ac:	2ffe8dbc 	.word	0x2ffe8dbc

2ffd75b0 <stm32image_partition_close>:
2ffd75b0:	4b01      	ldr	r3, [pc, #4]	; (2ffd75b8 <stm32image_partition_close+0x8>)
2ffd75b2:	2000      	movs	r0, #0
2ffd75b4:	6018      	str	r0, [r3, #0]
2ffd75b6:	4770      	bx	lr
2ffd75b8:	2ffe8bb8 	.word	0x2ffe8bb8

2ffd75bc <stm32image_dev_init>:
2ffd75bc:	490c      	ldr	r1, [pc, #48]	; (2ffd75f0 <stm32image_dev_init+0x34>)
2ffd75be:	4a0d      	ldr	r2, [pc, #52]	; (2ffd75f4 <stm32image_dev_init+0x38>)
2ffd75c0:	6808      	ldr	r0, [r1, #0]
2ffd75c2:	b508      	push	{r3, lr}
2ffd75c4:	6813      	ldr	r3, [r2, #0]
2ffd75c6:	4303      	orrs	r3, r0
2ffd75c8:	d005      	beq.n	2ffd75d6 <stm32image_dev_init+0x1a>
2ffd75ca:	480b      	ldr	r0, [pc, #44]	; (2ffd75f8 <stm32image_dev_init+0x3c>)
2ffd75cc:	f005 fa8e 	bl	2ffdcaec <tf_log>
2ffd75d0:	f06f 000b 	mvn.w	r0, #11
2ffd75d4:	bd08      	pop	{r3, pc}
2ffd75d6:	201d      	movs	r0, #29
2ffd75d8:	f000 fb68 	bl	2ffd7cac <plat_get_image_source>
2ffd75dc:	2800      	cmp	r0, #0
2ffd75de:	d0f9      	beq.n	2ffd75d4 <stm32image_dev_init+0x18>
2ffd75e0:	4601      	mov	r1, r0
2ffd75e2:	4806      	ldr	r0, [pc, #24]	; (2ffd75fc <stm32image_dev_init+0x40>)
2ffd75e4:	f005 fa82 	bl	2ffdcaec <tf_log>
2ffd75e8:	f06f 0015 	mvn.w	r0, #21
2ffd75ec:	e7f2      	b.n	2ffd75d4 <stm32image_dev_init+0x18>
2ffd75ee:	bf00      	nop
2ffd75f0:	2ffe8bb0 	.word	0x2ffe8bb0
2ffd75f4:	2ffe8bb4 	.word	0x2ffe8bb4
2ffd75f8:	2ffe357d 	.word	0x2ffe357d
2ffd75fc:	2ffe35a8 	.word	0x2ffe35a8

2ffd7600 <stm32image_partition_read>:
2ffd7600:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffd7604:	460e      	mov	r6, r1
2ffd7606:	4690      	mov	r8, r2
2ffd7608:	461d      	mov	r5, r3
2ffd760a:	b918      	cbnz	r0, 2ffd7614 <stm32image_partition_read+0x14>
2ffd760c:	21e9      	movs	r1, #233	; 0xe9
2ffd760e:	4830      	ldr	r0, [pc, #192]	; (2ffd76d0 <stm32image_partition_read+0xd0>)
2ffd7610:	f00b fc80 	bl	2ffe2f14 <__assert>
2ffd7614:	b909      	cbnz	r1, 2ffd761a <stm32image_partition_read+0x1a>
2ffd7616:	21ea      	movs	r1, #234	; 0xea
2ffd7618:	e7f9      	b.n	2ffd760e <stm32image_partition_read+0xe>
2ffd761a:	b90b      	cbnz	r3, 2ffd7620 <stm32image_partition_read+0x20>
2ffd761c:	21eb      	movs	r1, #235	; 0xeb
2ffd761e:	e7f6      	b.n	2ffd760e <stm32image_partition_read+0xe>
2ffd7620:	4c2c      	ldr	r4, [pc, #176]	; (2ffd76d4 <stm32image_partition_read+0xd4>)
2ffd7622:	2300      	movs	r3, #0
2ffd7624:	602b      	str	r3, [r5, #0]
2ffd7626:	4620      	mov	r0, r4
2ffd7628:	f005 fcee 	bl	2ffdd008 <stm32mp_save_loaded_header>
2ffd762c:	f44f 7280 	mov.w	r2, #256	; 0x100
2ffd7630:	4630      	mov	r0, r6
2ffd7632:	18a1      	adds	r1, r4, r2
2ffd7634:	f00b fc96 	bl	2ffe2f64 <memcpy>
2ffd7638:	4b27      	ldr	r3, [pc, #156]	; (2ffd76d8 <stm32image_partition_read+0xd8>)
2ffd763a:	6c1f      	ldr	r7, [r3, #64]	; 0x40
2ffd763c:	6da3      	ldr	r3, [r4, #88]	; 0x58
2ffd763e:	b143      	cbz	r3, 2ffd7652 <stm32image_partition_read+0x52>
2ffd7640:	42b3      	cmp	r3, r6
2ffd7642:	d006      	beq.n	2ffd7652 <stm32image_partition_read+0x52>
2ffd7644:	4825      	ldr	r0, [pc, #148]	; (2ffd76dc <stm32image_partition_read+0xdc>)
2ffd7646:	f005 fa51 	bl	2ffdcaec <tf_log>
2ffd764a:	f005 faed 	bl	2ffdcc28 <console_flush>
2ffd764e:	f7fe ee08 	blx	2ffd6260 <do_panic>
2ffd7652:	4b23      	ldr	r3, [pc, #140]	; (2ffd76e0 <stm32image_partition_read+0xe0>)
2ffd7654:	aa01      	add	r2, sp, #4
2ffd7656:	6819      	ldr	r1, [r3, #0]
2ffd7658:	4b22      	ldr	r3, [pc, #136]	; (2ffd76e4 <stm32image_partition_read+0xe4>)
2ffd765a:	6818      	ldr	r0, [r3, #0]
2ffd765c:	f7ff fd46 	bl	2ffd70ec <io_open>
2ffd7660:	4604      	mov	r4, r0
2ffd7662:	b140      	cbz	r0, 2ffd7676 <stm32image_partition_read+0x76>
2ffd7664:	4920      	ldr	r1, [pc, #128]	; (2ffd76e8 <stm32image_partition_read+0xe8>)
2ffd7666:	4602      	mov	r2, r0
2ffd7668:	4820      	ldr	r0, [pc, #128]	; (2ffd76ec <stm32image_partition_read+0xec>)
2ffd766a:	f005 fa3f 	bl	2ffdcaec <tf_log>
2ffd766e:	4620      	mov	r0, r4
2ffd7670:	b002      	add	sp, #8
2ffd7672:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffd7676:	4b1e      	ldr	r3, [pc, #120]	; (2ffd76f0 <stm32image_partition_read+0xf0>)
2ffd7678:	2101      	movs	r1, #1
2ffd767a:	681b      	ldr	r3, [r3, #0]
2ffd767c:	681a      	ldr	r2, [r3, #0]
2ffd767e:	4603      	mov	r3, r0
2ffd7680:	9801      	ldr	r0, [sp, #4]
2ffd7682:	f502 7200 	add.w	r2, r2, #512	; 0x200
2ffd7686:	f7ff fd7d 	bl	2ffd7184 <io_seek>
2ffd768a:	4604      	mov	r4, r0
2ffd768c:	b140      	cbz	r0, 2ffd76a0 <stm32image_partition_read+0xa0>
2ffd768e:	4916      	ldr	r1, [pc, #88]	; (2ffd76e8 <stm32image_partition_read+0xe8>)
2ffd7690:	4602      	mov	r2, r0
2ffd7692:	4818      	ldr	r0, [pc, #96]	; (2ffd76f4 <stm32image_partition_read+0xf4>)
2ffd7694:	f005 fa2a 	bl	2ffdcaec <tf_log>
2ffd7698:	9801      	ldr	r0, [sp, #4]
2ffd769a:	f7ff fdd7 	bl	2ffd724c <io_close>
2ffd769e:	e7e6      	b.n	2ffd766e <stm32image_partition_read+0x6e>
2ffd76a0:	9801      	ldr	r0, [sp, #4]
2ffd76a2:	f46f 7380 	mvn.w	r3, #256	; 0x100
2ffd76a6:	eb08 0203 	add.w	r2, r8, r3
2ffd76aa:	1e7b      	subs	r3, r7, #1
2ffd76ac:	431a      	orrs	r2, r3
2ffd76ae:	f506 7180 	add.w	r1, r6, #256	; 0x100
2ffd76b2:	462b      	mov	r3, r5
2ffd76b4:	3201      	adds	r2, #1
2ffd76b6:	f7ff fda5 	bl	2ffd7204 <io_read>
2ffd76ba:	4604      	mov	r4, r0
2ffd76bc:	b118      	cbz	r0, 2ffd76c6 <stm32image_partition_read+0xc6>
2ffd76be:	490a      	ldr	r1, [pc, #40]	; (2ffd76e8 <stm32image_partition_read+0xe8>)
2ffd76c0:	4602      	mov	r2, r0
2ffd76c2:	480d      	ldr	r0, [pc, #52]	; (2ffd76f8 <stm32image_partition_read+0xf8>)
2ffd76c4:	e7e6      	b.n	2ffd7694 <stm32image_partition_read+0x94>
2ffd76c6:	682b      	ldr	r3, [r5, #0]
2ffd76c8:	f503 7380 	add.w	r3, r3, #256	; 0x100
2ffd76cc:	602b      	str	r3, [r5, #0]
2ffd76ce:	e7e3      	b.n	2ffd7698 <stm32image_partition_read+0x98>
2ffd76d0:	2ffe35c1 	.word	0x2ffe35c1
2ffd76d4:	2ffe8bbc 	.word	0x2ffe8bbc
2ffd76d8:	2ffe8858 	.word	0x2ffe8858
2ffd76dc:	2ffe35df 	.word	0x2ffe35df
2ffd76e0:	2ffe8bb4 	.word	0x2ffe8bb4
2ffd76e4:	2ffe8bb0 	.word	0x2ffe8bb0
2ffd76e8:	2ffe367d 	.word	0x2ffe367d
2ffd76ec:	2ffe35f4 	.word	0x2ffe35f4
2ffd76f0:	2ffe8dbc 	.word	0x2ffe8dbc
2ffd76f4:	2ffe3607 	.word	0x2ffe3607
2ffd76f8:	2ffe361a 	.word	0x2ffe361a

2ffd76fc <stm32image_partition_size>:
2ffd76fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffd76fe:	460d      	mov	r5, r1
2ffd7700:	b918      	cbnz	r0, 2ffd770a <stm32image_partition_size+0xe>
2ffd7702:	21ad      	movs	r1, #173	; 0xad
2ffd7704:	482b      	ldr	r0, [pc, #172]	; (2ffd77b4 <stm32image_partition_size+0xb8>)
2ffd7706:	f00b fc05 	bl	2ffe2f14 <__assert>
2ffd770a:	b909      	cbnz	r1, 2ffd7710 <stm32image_partition_size+0x14>
2ffd770c:	21ae      	movs	r1, #174	; 0xae
2ffd770e:	e7f9      	b.n	2ffd7704 <stm32image_partition_size+0x8>
2ffd7710:	4b29      	ldr	r3, [pc, #164]	; (2ffd77b8 <stm32image_partition_size+0xbc>)
2ffd7712:	466a      	mov	r2, sp
2ffd7714:	6819      	ldr	r1, [r3, #0]
2ffd7716:	4b29      	ldr	r3, [pc, #164]	; (2ffd77bc <stm32image_partition_size+0xc0>)
2ffd7718:	6818      	ldr	r0, [r3, #0]
2ffd771a:	f7ff fce7 	bl	2ffd70ec <io_open>
2ffd771e:	1e04      	subs	r4, r0, #0
2ffd7720:	da07      	bge.n	2ffd7732 <stm32image_partition_size+0x36>
2ffd7722:	4927      	ldr	r1, [pc, #156]	; (2ffd77c0 <stm32image_partition_size+0xc4>)
2ffd7724:	4622      	mov	r2, r4
2ffd7726:	4827      	ldr	r0, [pc, #156]	; (2ffd77c4 <stm32image_partition_size+0xc8>)
2ffd7728:	f005 f9e0 	bl	2ffdcaec <tf_log>
2ffd772c:	4620      	mov	r0, r4
2ffd772e:	b003      	add	sp, #12
2ffd7730:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffd7732:	4b25      	ldr	r3, [pc, #148]	; (2ffd77c8 <stm32image_partition_size+0xcc>)
2ffd7734:	2101      	movs	r1, #1
2ffd7736:	9800      	ldr	r0, [sp, #0]
2ffd7738:	681b      	ldr	r3, [r3, #0]
2ffd773a:	681a      	ldr	r2, [r3, #0]
2ffd773c:	2300      	movs	r3, #0
2ffd773e:	f7ff fd21 	bl	2ffd7184 <io_seek>
2ffd7742:	4604      	mov	r4, r0
2ffd7744:	b140      	cbz	r0, 2ffd7758 <stm32image_partition_size+0x5c>
2ffd7746:	491e      	ldr	r1, [pc, #120]	; (2ffd77c0 <stm32image_partition_size+0xc4>)
2ffd7748:	4602      	mov	r2, r0
2ffd774a:	4820      	ldr	r0, [pc, #128]	; (2ffd77cc <stm32image_partition_size+0xd0>)
2ffd774c:	f005 f9ce 	bl	2ffdcaec <tf_log>
2ffd7750:	9800      	ldr	r0, [sp, #0]
2ffd7752:	f7ff fd7b 	bl	2ffd724c <io_close>
2ffd7756:	e7e9      	b.n	2ffd772c <stm32image_partition_size+0x30>
2ffd7758:	4e1d      	ldr	r6, [pc, #116]	; (2ffd77d0 <stm32image_partition_size+0xd4>)
2ffd775a:	ab01      	add	r3, sp, #4
2ffd775c:	9800      	ldr	r0, [sp, #0]
2ffd775e:	f44f 7200 	mov.w	r2, #512	; 0x200
2ffd7762:	4631      	mov	r1, r6
2ffd7764:	f7ff fd4e 	bl	2ffd7204 <io_read>
2ffd7768:	4604      	mov	r4, r0
2ffd776a:	b118      	cbz	r0, 2ffd7774 <stm32image_partition_size+0x78>
2ffd776c:	4914      	ldr	r1, [pc, #80]	; (2ffd77c0 <stm32image_partition_size+0xc4>)
2ffd776e:	4602      	mov	r2, r0
2ffd7770:	4818      	ldr	r0, [pc, #96]	; (2ffd77d4 <stm32image_partition_size+0xd8>)
2ffd7772:	e7eb      	b.n	2ffd774c <stm32image_partition_size+0x50>
2ffd7774:	6832      	ldr	r2, [r6, #0]
2ffd7776:	4b18      	ldr	r3, [pc, #96]	; (2ffd77d8 <stm32image_partition_size+0xdc>)
2ffd7778:	429a      	cmp	r2, r3
2ffd777a:	d118      	bne.n	2ffd77ae <stm32image_partition_size+0xb2>
2ffd777c:	4b17      	ldr	r3, [pc, #92]	; (2ffd77dc <stm32image_partition_size+0xe0>)
2ffd777e:	f896 20ff 	ldrb.w	r2, [r6, #255]	; 0xff
2ffd7782:	681b      	ldr	r3, [r3, #0]
2ffd7784:	6a9b      	ldr	r3, [r3, #40]	; 0x28
2ffd7786:	429a      	cmp	r2, r3
2ffd7788:	d111      	bne.n	2ffd77ae <stm32image_partition_size+0xb2>
2ffd778a:	4815      	ldr	r0, [pc, #84]	; (2ffd77e0 <stm32image_partition_size+0xe4>)
2ffd778c:	2700      	movs	r7, #0
2ffd778e:	6cf1      	ldr	r1, [r6, #76]	; 0x4c
2ffd7790:	e9d0 230e 	ldrd	r2, r3, [r0, #56]	; 0x38
2ffd7794:	429f      	cmp	r7, r3
2ffd7796:	bf08      	it	eq
2ffd7798:	4291      	cmpeq	r1, r2
2ffd779a:	d208      	bcs.n	2ffd77ae <stm32image_partition_size+0xb2>
2ffd779c:	6c03      	ldr	r3, [r0, #64]	; 0x40
2ffd779e:	4811      	ldr	r0, [pc, #68]	; (2ffd77e4 <stm32image_partition_size+0xe8>)
2ffd77a0:	4299      	cmp	r1, r3
2ffd77a2:	bf38      	it	cc
2ffd77a4:	4619      	movcc	r1, r3
2ffd77a6:	6029      	str	r1, [r5, #0]
2ffd77a8:	f005 f9a0 	bl	2ffdcaec <tf_log>
2ffd77ac:	e7d0      	b.n	2ffd7750 <stm32image_partition_size+0x54>
2ffd77ae:	f06f 040b 	mvn.w	r4, #11
2ffd77b2:	e7cd      	b.n	2ffd7750 <stm32image_partition_size+0x54>
2ffd77b4:	2ffe35c1 	.word	0x2ffe35c1
2ffd77b8:	2ffe8bb4 	.word	0x2ffe8bb4
2ffd77bc:	2ffe8bb0 	.word	0x2ffe8bb0
2ffd77c0:	2ffe3663 	.word	0x2ffe3663
2ffd77c4:	2ffe35f4 	.word	0x2ffe35f4
2ffd77c8:	2ffe8dbc 	.word	0x2ffe8dbc
2ffd77cc:	2ffe3607 	.word	0x2ffe3607
2ffd77d0:	2ffe8bbc 	.word	0x2ffe8bbc
2ffd77d4:	2ffe361a 	.word	0x2ffe361a
2ffd77d8:	324d5453 	.word	0x324d5453
2ffd77dc:	2ffe8bb8 	.word	0x2ffe8bb8
2ffd77e0:	2ffe8858 	.word	0x2ffe8858
2ffd77e4:	2ffe362d 	.word	0x2ffe362d

2ffd77e8 <stm32image_dev_open>:
2ffd77e8:	b538      	push	{r3, r4, r5, lr}
2ffd77ea:	4604      	mov	r4, r0
2ffd77ec:	b919      	cbnz	r1, 2ffd77f6 <stm32image_dev_open+0xe>
2ffd77ee:	480d      	ldr	r0, [pc, #52]	; (2ffd7824 <stm32image_dev_open+0x3c>)
2ffd77f0:	2158      	movs	r1, #88	; 0x58
2ffd77f2:	f00b fb8f 	bl	2ffe2f14 <__assert>
2ffd77f6:	4b0c      	ldr	r3, [pc, #48]	; (2ffd7828 <stm32image_dev_open+0x40>)
2ffd77f8:	4d0c      	ldr	r5, [pc, #48]	; (2ffd782c <stm32image_dev_open+0x44>)
2ffd77fa:	600b      	str	r3, [r1, #0]
2ffd77fc:	4601      	mov	r1, r0
2ffd77fe:	e9d0 230e 	ldrd	r2, r3, [r0, #56]	; 0x38
2ffd7802:	e9c5 230e 	strd	r2, r3, [r5, #56]	; 0x38
2ffd7806:	6c03      	ldr	r3, [r0, #64]	; 0x40
2ffd7808:	2225      	movs	r2, #37	; 0x25
2ffd780a:	4628      	mov	r0, r5
2ffd780c:	642b      	str	r3, [r5, #64]	; 0x40
2ffd780e:	f00b fba9 	bl	2ffe2f64 <memcpy>
2ffd7812:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2ffd7814:	2000      	movs	r0, #0
2ffd7816:	62ab      	str	r3, [r5, #40]	; 0x28
2ffd7818:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2ffd781a:	62eb      	str	r3, [r5, #44]	; 0x2c
2ffd781c:	6b23      	ldr	r3, [r4, #48]	; 0x30
2ffd781e:	632b      	str	r3, [r5, #48]	; 0x30
2ffd7820:	bd38      	pop	{r3, r4, r5, pc}
2ffd7822:	bf00      	nop
2ffd7824:	2ffe35c1 	.word	0x2ffe35c1
2ffd7828:	2ffe7000 	.word	0x2ffe7000
2ffd782c:	2ffe8858 	.word	0x2ffe8858

2ffd7830 <stm32image_partition_open>:
2ffd7830:	b508      	push	{r3, lr}
2ffd7832:	b91a      	cbnz	r2, 2ffd783c <stm32image_partition_open+0xc>
2ffd7834:	2193      	movs	r1, #147	; 0x93
2ffd7836:	480d      	ldr	r0, [pc, #52]	; (2ffd786c <stm32image_partition_open+0x3c>)
2ffd7838:	f00b fb6c 	bl	2ffe2f14 <__assert>
2ffd783c:	b909      	cbnz	r1, 2ffd7842 <stm32image_partition_open+0x12>
2ffd783e:	2196      	movs	r1, #150	; 0x96
2ffd7840:	e7f9      	b.n	2ffd7836 <stm32image_partition_open+0x6>
2ffd7842:	4b0b      	ldr	r3, [pc, #44]	; (2ffd7870 <stm32image_partition_open+0x40>)
2ffd7844:	6a89      	ldr	r1, [r1, #40]	; 0x28
2ffd7846:	6a9a      	ldr	r2, [r3, #40]	; 0x28
2ffd7848:	4291      	cmp	r1, r2
2ffd784a:	d007      	beq.n	2ffd785c <stm32image_partition_open+0x2c>
2ffd784c:	4809      	ldr	r0, [pc, #36]	; (2ffd7874 <stm32image_partition_open+0x44>)
2ffd784e:	f06f 0115 	mvn.w	r1, #21
2ffd7852:	f005 f94b 	bl	2ffdcaec <tf_log>
2ffd7856:	f06f 0015 	mvn.w	r0, #21
2ffd785a:	bd08      	pop	{r3, pc}
2ffd785c:	4a06      	ldr	r2, [pc, #24]	; (2ffd7878 <stm32image_partition_open+0x48>)
2ffd785e:	2000      	movs	r0, #0
2ffd7860:	6013      	str	r3, [r2, #0]
2ffd7862:	332c      	adds	r3, #44	; 0x2c
2ffd7864:	4a05      	ldr	r2, [pc, #20]	; (2ffd787c <stm32image_partition_open+0x4c>)
2ffd7866:	6013      	str	r3, [r2, #0]
2ffd7868:	e7f7      	b.n	2ffd785a <stm32image_partition_open+0x2a>
2ffd786a:	bf00      	nop
2ffd786c:	2ffe35c1 	.word	0x2ffe35c1
2ffd7870:	2ffe8858 	.word	0x2ffe8858
2ffd7874:	2ffe3646 	.word	0x2ffe3646
2ffd7878:	2ffe8bb8 	.word	0x2ffe8bb8
2ffd787c:	2ffe8dbc 	.word	0x2ffe8dbc

2ffd7880 <register_io_dev_stm32image>:
2ffd7880:	b510      	push	{r4, lr}
2ffd7882:	4604      	mov	r4, r0
2ffd7884:	b920      	cbnz	r0, 2ffd7890 <register_io_dev_stm32image+0x10>
2ffd7886:	4806      	ldr	r0, [pc, #24]	; (2ffd78a0 <register_io_dev_stm32image+0x20>)
2ffd7888:	f44f 7197 	mov.w	r1, #302	; 0x12e
2ffd788c:	f00b fb42 	bl	2ffe2f14 <__assert>
2ffd7890:	4804      	ldr	r0, [pc, #16]	; (2ffd78a4 <register_io_dev_stm32image+0x24>)
2ffd7892:	f7ff fbd1 	bl	2ffd7038 <io_register_device>
2ffd7896:	b908      	cbnz	r0, 2ffd789c <register_io_dev_stm32image+0x1c>
2ffd7898:	4b03      	ldr	r3, [pc, #12]	; (2ffd78a8 <register_io_dev_stm32image+0x28>)
2ffd789a:	6023      	str	r3, [r4, #0]
2ffd789c:	bd10      	pop	{r4, pc}
2ffd789e:	bf00      	nop
2ffd78a0:	2ffe35c1 	.word	0x2ffe35c1
2ffd78a4:	2ffe7000 	.word	0x2ffe7000
2ffd78a8:	2ffe3698 	.word	0x2ffe3698

2ffd78ac <boot_mmc>:
2ffd78ac:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffd78ae:	b097      	sub	sp, #92	; 0x5c
2ffd78b0:	4605      	mov	r5, r0
2ffd78b2:	460c      	mov	r4, r1
2ffd78b4:	4668      	mov	r0, sp
2ffd78b6:	2118      	movs	r1, #24
2ffd78b8:	f7fe edd2 	blx	2ffd6460 <zero_normalmem>
2ffd78bc:	213c      	movs	r1, #60	; 0x3c
2ffd78be:	a807      	add	r0, sp, #28
2ffd78c0:	f7fe edce 	blx	2ffd6460 <zero_normalmem>
2ffd78c4:	9505      	str	r5, [sp, #20]
2ffd78c6:	2c02      	cmp	r4, #2
2ffd78c8:	d00a      	beq.n	2ffd78e0 <boot_mmc+0x34>
2ffd78ca:	2c03      	cmp	r4, #3
2ffd78cc:	d00a      	beq.n	2ffd78e4 <boot_mmc+0x38>
2ffd78ce:	2c01      	cmp	r4, #1
2ffd78d0:	d10a      	bne.n	2ffd78e8 <boot_mmc+0x3c>
2ffd78d2:	4b39      	ldr	r3, [pc, #228]	; (2ffd79b8 <boot_mmc+0x10c>)
2ffd78d4:	9307      	str	r3, [sp, #28]
2ffd78d6:	2d01      	cmp	r5, #1
2ffd78d8:	d110      	bne.n	2ffd78fc <boot_mmc+0x50>
2ffd78da:	2302      	movs	r3, #2
2ffd78dc:	930a      	str	r3, [sp, #40]	; 0x28
2ffd78de:	e00d      	b.n	2ffd78fc <boot_mmc+0x50>
2ffd78e0:	4b36      	ldr	r3, [pc, #216]	; (2ffd79bc <boot_mmc+0x110>)
2ffd78e2:	e7f7      	b.n	2ffd78d4 <boot_mmc+0x28>
2ffd78e4:	4b36      	ldr	r3, [pc, #216]	; (2ffd79c0 <boot_mmc+0x114>)
2ffd78e6:	e7f5      	b.n	2ffd78d4 <boot_mmc+0x28>
2ffd78e8:	4836      	ldr	r0, [pc, #216]	; (2ffd79c4 <boot_mmc+0x118>)
2ffd78ea:	f005 f8ff 	bl	2ffdcaec <tf_log>
2ffd78ee:	2d01      	cmp	r5, #1
2ffd78f0:	d102      	bne.n	2ffd78f8 <boot_mmc+0x4c>
2ffd78f2:	4b31      	ldr	r3, [pc, #196]	; (2ffd79b8 <boot_mmc+0x10c>)
2ffd78f4:	9307      	str	r3, [sp, #28]
2ffd78f6:	e7f0      	b.n	2ffd78da <boot_mmc+0x2e>
2ffd78f8:	4b30      	ldr	r3, [pc, #192]	; (2ffd79bc <boot_mmc+0x110>)
2ffd78fa:	9307      	str	r3, [sp, #28]
2ffd78fc:	f8cd d02c 	str.w	sp, [sp, #44]	; 0x2c
2ffd7900:	a807      	add	r0, sp, #28
2ffd7902:	f002 f983 	bl	2ffd9c0c <stm32_sdmmc2_mmc_init>
2ffd7906:	b120      	cbz	r0, 2ffd7912 <boot_mmc+0x66>
2ffd7908:	482f      	ldr	r0, [pc, #188]	; (2ffd79c8 <boot_mmc+0x11c>)
2ffd790a:	4621      	mov	r1, r4
2ffd790c:	f005 f8ee 	bl	2ffdcaec <tf_log>
2ffd7910:	e004      	b.n	2ffd791c <boot_mmc+0x70>
2ffd7912:	4d2e      	ldr	r5, [pc, #184]	; (2ffd79cc <boot_mmc+0x120>)
2ffd7914:	4628      	mov	r0, r5
2ffd7916:	f7ff f9f1 	bl	2ffd6cfc <register_io_dev_block>
2ffd791a:	b118      	cbz	r0, 2ffd7924 <boot_mmc+0x78>
2ffd791c:	f005 f984 	bl	2ffdcc28 <console_flush>
2ffd7920:	f7fe ec9e 	blx	2ffd6260 <do_panic>
2ffd7924:	4f2a      	ldr	r7, [pc, #168]	; (2ffd79d0 <boot_mmc+0x124>)
2ffd7926:	492b      	ldr	r1, [pc, #172]	; (2ffd79d4 <boot_mmc+0x128>)
2ffd7928:	6828      	ldr	r0, [r5, #0]
2ffd792a:	463a      	mov	r2, r7
2ffd792c:	f7ff fb98 	bl	2ffd7060 <io_dev_open>
2ffd7930:	b120      	cbz	r0, 2ffd793c <boot_mmc+0x90>
2ffd7932:	f240 116d 	movw	r1, #365	; 0x16d
2ffd7936:	4828      	ldr	r0, [pc, #160]	; (2ffd79d8 <boot_mmc+0x12c>)
2ffd7938:	f00b faec 	bl	2ffe2f14 <__assert>
2ffd793c:	201c      	movs	r0, #28
2ffd793e:	f001 fd99 	bl	2ffd9474 <partition_init>
2ffd7942:	6838      	ldr	r0, [r7, #0]
2ffd7944:	f7ff fbba 	bl	2ffd70bc <io_dev_close>
2ffd7948:	4606      	mov	r6, r0
2ffd794a:	b110      	cbz	r0, 2ffd7952 <boot_mmc+0xa6>
2ffd794c:	f44f 71b9 	mov.w	r1, #370	; 0x172
2ffd7950:	e7f1      	b.n	2ffd7936 <boot_mmc+0x8a>
2ffd7952:	4c22      	ldr	r4, [pc, #136]	; (2ffd79dc <boot_mmc+0x130>)
2ffd7954:	f002 f952 	bl	2ffd9bfc <stm32_sdmmc2_mmc_get_device_size>
2ffd7958:	e9c4 010e 	strd	r0, r1, [r4, #56]	; 0x38
2ffd795c:	4620      	mov	r0, r4
2ffd795e:	f001 fd69 	bl	2ffd9434 <get_partition_entry>
2ffd7962:	b910      	cbnz	r0, 2ffd796a <boot_mmc+0xbe>
2ffd7964:	481e      	ldr	r0, [pc, #120]	; (2ffd79e0 <boot_mmc+0x134>)
2ffd7966:	4621      	mov	r1, r4
2ffd7968:	e7d0      	b.n	2ffd790c <boot_mmc+0x60>
2ffd796a:	6803      	ldr	r3, [r0, #0]
2ffd796c:	4628      	mov	r0, r5
2ffd796e:	6326      	str	r6, [r4, #48]	; 0x30
2ffd7970:	62e3      	str	r3, [r4, #44]	; 0x2c
2ffd7972:	f001 fde7 	bl	2ffd9544 <register_io_dev_mmc>
2ffd7976:	4601      	mov	r1, r0
2ffd7978:	b110      	cbz	r0, 2ffd7980 <boot_mmc+0xd4>
2ffd797a:	f44f 71c4 	mov.w	r1, #392	; 0x188
2ffd797e:	e7da      	b.n	2ffd7936 <boot_mmc+0x8a>
2ffd7980:	6828      	ldr	r0, [r5, #0]
2ffd7982:	463a      	mov	r2, r7
2ffd7984:	f7ff fb6c 	bl	2ffd7060 <io_dev_open>
2ffd7988:	b110      	cbz	r0, 2ffd7990 <boot_mmc+0xe4>
2ffd798a:	f240 118b 	movw	r1, #395	; 0x18b
2ffd798e:	e7d2      	b.n	2ffd7936 <boot_mmc+0x8a>
2ffd7990:	4d14      	ldr	r5, [pc, #80]	; (2ffd79e4 <boot_mmc+0x138>)
2ffd7992:	4628      	mov	r0, r5
2ffd7994:	f7ff ff74 	bl	2ffd7880 <register_io_dev_stm32image>
2ffd7998:	b110      	cbz	r0, 2ffd79a0 <boot_mmc+0xf4>
2ffd799a:	f44f 71c7 	mov.w	r1, #398	; 0x18e
2ffd799e:	e7ca      	b.n	2ffd7936 <boot_mmc+0x8a>
2ffd79a0:	4a11      	ldr	r2, [pc, #68]	; (2ffd79e8 <boot_mmc+0x13c>)
2ffd79a2:	4621      	mov	r1, r4
2ffd79a4:	6828      	ldr	r0, [r5, #0]
2ffd79a6:	f7ff fb5b 	bl	2ffd7060 <io_dev_open>
2ffd79aa:	b110      	cbz	r0, 2ffd79b2 <boot_mmc+0x106>
2ffd79ac:	f240 1193 	movw	r1, #403	; 0x193
2ffd79b0:	e7c1      	b.n	2ffd7936 <boot_mmc+0x8a>
2ffd79b2:	b017      	add	sp, #92	; 0x5c
2ffd79b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffd79b6:	bf00      	nop
2ffd79b8:	58005000 	.word	0x58005000
2ffd79bc:	58007000 	.word	0x58007000
2ffd79c0:	48004000 	.word	0x48004000
2ffd79c4:	2ffe36c0 	.word	0x2ffe36c0
2ffd79c8:	2ffe36ea 	.word	0x2ffe36ea
2ffd79cc:	2ffe8dd0 	.word	0x2ffe8dd0
2ffd79d0:	2ffe8de8 	.word	0x2ffe8de8
2ffd79d4:	2ffe3854 	.word	0x2ffe3854
2ffd79d8:	2ffe3700 	.word	0x2ffe3700
2ffd79dc:	2ffe7060 	.word	0x2ffe7060
2ffd79e0:	2ffe3720 	.word	0x2ffe3720
2ffd79e4:	2ffe8de4 	.word	0x2ffe8de4
2ffd79e8:	2ffe8dcc 	.word	0x2ffe8dcc

2ffd79ec <open_storage>:
2ffd79ec:	4b02      	ldr	r3, [pc, #8]	; (2ffd79f8 <open_storage+0xc>)
2ffd79ee:	2100      	movs	r1, #0
2ffd79f0:	6818      	ldr	r0, [r3, #0]
2ffd79f2:	f7ff bb49 	b.w	2ffd7088 <io_dev_init>
2ffd79f6:	bf00      	nop
2ffd79f8:	2ffe8de8 	.word	0x2ffe8de8

2ffd79fc <open_image>:
2ffd79fc:	4b02      	ldr	r3, [pc, #8]	; (2ffd7a08 <open_image+0xc>)
2ffd79fe:	2100      	movs	r1, #0
2ffd7a00:	6818      	ldr	r0, [r3, #0]
2ffd7a02:	f7ff bb41 	b.w	2ffd7088 <io_dev_init>
2ffd7a06:	bf00      	nop
2ffd7a08:	2ffe8dcc 	.word	0x2ffe8dcc

2ffd7a0c <open_dummy>:
2ffd7a0c:	4b02      	ldr	r3, [pc, #8]	; (2ffd7a18 <open_dummy+0xc>)
2ffd7a0e:	2100      	movs	r1, #0
2ffd7a10:	6818      	ldr	r0, [r3, #0]
2ffd7a12:	f7ff bb39 	b.w	2ffd7088 <io_dev_init>
2ffd7a16:	bf00      	nop
2ffd7a18:	2ffe8dc8 	.word	0x2ffe8dc8

2ffd7a1c <stm32mp_io_setup>:
2ffd7a1c:	b538      	push	{r3, r4, r5, lr}
2ffd7a1e:	f005 fa39 	bl	2ffdce94 <stm32mp_get_boot_ctx_address>
2ffd7a22:	7843      	ldrb	r3, [r0, #1]
2ffd7a24:	4604      	mov	r4, r0
2ffd7a26:	7801      	ldrb	r1, [r0, #0]
2ffd7a28:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
2ffd7a2c:	1e4b      	subs	r3, r1, #1
2ffd7a2e:	2b06      	cmp	r3, #6
2ffd7a30:	d83b      	bhi.n	2ffd7aaa <stm32mp_io_setup+0x8e>
2ffd7a32:	e8df f003 	tbb	[pc, r3]
2ffd7a36:	2e04      	.short	0x2e04
2ffd7a38:	38363032 	.word	0x38363032
2ffd7a3c:	34          	.byte	0x34
2ffd7a3d:	00          	.byte	0x00
2ffd7a3e:	4884      	ldr	r0, [pc, #528]	; (2ffd7c50 <stm32mp_io_setup+0x234>)
2ffd7a40:	f005 f854 	bl	2ffdcaec <tf_log>
2ffd7a44:	78a1      	ldrb	r1, [r4, #2]
2ffd7a46:	78e3      	ldrb	r3, [r4, #3]
2ffd7a48:	ea51 2103 	orrs.w	r1, r1, r3, lsl #8
2ffd7a4c:	d002      	beq.n	2ffd7a54 <stm32mp_io_setup+0x38>
2ffd7a4e:	4881      	ldr	r0, [pc, #516]	; (2ffd7c54 <stm32mp_io_setup+0x238>)
2ffd7a50:	f005 f84c 	bl	2ffdcaec <tf_log>
2ffd7a54:	f894 3091 	ldrb.w	r3, [r4, #145]	; 0x91
2ffd7a58:	f894 1090 	ldrb.w	r1, [r4, #144]	; 0x90
2ffd7a5c:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
2ffd7a60:	f894 3092 	ldrb.w	r3, [r4, #146]	; 0x92
2ffd7a64:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
2ffd7a68:	f894 3093 	ldrb.w	r3, [r4, #147]	; 0x93
2ffd7a6c:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
2ffd7a70:	1e4b      	subs	r3, r1, #1
2ffd7a72:	2b01      	cmp	r3, #1
2ffd7a74:	d802      	bhi.n	2ffd7a7c <stm32mp_io_setup+0x60>
2ffd7a76:	4878      	ldr	r0, [pc, #480]	; (2ffd7c58 <stm32mp_io_setup+0x23c>)
2ffd7a78:	f005 f838 	bl	2ffdcaec <tf_log>
2ffd7a7c:	4d77      	ldr	r5, [pc, #476]	; (2ffd7c5c <stm32mp_io_setup+0x240>)
2ffd7a7e:	4628      	mov	r0, r5
2ffd7a80:	f7ff f9ae 	bl	2ffd6de0 <register_io_dev_dummy>
2ffd7a84:	4601      	mov	r1, r0
2ffd7a86:	b1b8      	cbz	r0, 2ffd7ab8 <stm32mp_io_setup+0x9c>
2ffd7a88:	f240 2192 	movw	r1, #658	; 0x292
2ffd7a8c:	4874      	ldr	r0, [pc, #464]	; (2ffd7c60 <stm32mp_io_setup+0x244>)
2ffd7a8e:	f00b fa41 	bl	2ffe2f14 <__assert>
2ffd7a92:	4874      	ldr	r0, [pc, #464]	; (2ffd7c64 <stm32mp_io_setup+0x248>)
2ffd7a94:	e7d4      	b.n	2ffd7a40 <stm32mp_io_setup+0x24>
2ffd7a96:	4874      	ldr	r0, [pc, #464]	; (2ffd7c68 <stm32mp_io_setup+0x24c>)
2ffd7a98:	e7d2      	b.n	2ffd7a40 <stm32mp_io_setup+0x24>
2ffd7a9a:	4874      	ldr	r0, [pc, #464]	; (2ffd7c6c <stm32mp_io_setup+0x250>)
2ffd7a9c:	e7d0      	b.n	2ffd7a40 <stm32mp_io_setup+0x24>
2ffd7a9e:	4874      	ldr	r0, [pc, #464]	; (2ffd7c70 <stm32mp_io_setup+0x254>)
2ffd7aa0:	e7ce      	b.n	2ffd7a40 <stm32mp_io_setup+0x24>
2ffd7aa2:	4874      	ldr	r0, [pc, #464]	; (2ffd7c74 <stm32mp_io_setup+0x258>)
2ffd7aa4:	e7cc      	b.n	2ffd7a40 <stm32mp_io_setup+0x24>
2ffd7aa6:	4874      	ldr	r0, [pc, #464]	; (2ffd7c78 <stm32mp_io_setup+0x25c>)
2ffd7aa8:	e7ca      	b.n	2ffd7a40 <stm32mp_io_setup+0x24>
2ffd7aaa:	4874      	ldr	r0, [pc, #464]	; (2ffd7c7c <stm32mp_io_setup+0x260>)
2ffd7aac:	f005 f81e 	bl	2ffdcaec <tf_log>
2ffd7ab0:	f005 f8ba 	bl	2ffdcc28 <console_flush>
2ffd7ab4:	f7fe ebd4 	blx	2ffd6260 <do_panic>
2ffd7ab8:	4a71      	ldr	r2, [pc, #452]	; (2ffd7c80 <stm32mp_io_setup+0x264>)
2ffd7aba:	6828      	ldr	r0, [r5, #0]
2ffd7abc:	f7ff fad0 	bl	2ffd7060 <io_dev_open>
2ffd7ac0:	b110      	cbz	r0, 2ffd7ac8 <stm32mp_io_setup+0xac>
2ffd7ac2:	f240 2196 	movw	r1, #662	; 0x296
2ffd7ac6:	e7e1      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7ac8:	7863      	ldrb	r3, [r4, #1]
2ffd7aca:	7821      	ldrb	r1, [r4, #0]
2ffd7acc:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
2ffd7ad0:	1e4b      	subs	r3, r1, #1
2ffd7ad2:	2b06      	cmp	r3, #6
2ffd7ad4:	f200 80b9 	bhi.w	2ffd7c4a <stm32mp_io_setup+0x22e>
2ffd7ad8:	e8df f003 	tbb	[pc, r3]
2ffd7adc:	174c0f04 	.word	0x174c0f04
2ffd7ae0:	b7b7      	.short	0xb7b7
2ffd7ae2:	82          	.byte	0x82
2ffd7ae3:	00          	.byte	0x00
2ffd7ae4:	f3bf 8f5f 	dmb	sy
2ffd7ae8:	78a3      	ldrb	r3, [r4, #2]
2ffd7aea:	2001      	movs	r0, #1
2ffd7aec:	78e1      	ldrb	r1, [r4, #3]
2ffd7aee:	ea43 2101 	orr.w	r1, r3, r1, lsl #8
2ffd7af2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffd7af6:	f7ff bed9 	b.w	2ffd78ac <boot_mmc>
2ffd7afa:	f3bf 8f5f 	dmb	sy
2ffd7afe:	78a3      	ldrb	r3, [r4, #2]
2ffd7b00:	2000      	movs	r0, #0
2ffd7b02:	78e1      	ldrb	r1, [r4, #3]
2ffd7b04:	ea43 2101 	orr.w	r1, r3, r1, lsl #8
2ffd7b08:	e7f3      	b.n	2ffd7af2 <stm32mp_io_setup+0xd6>
2ffd7b0a:	f3bf 8f5f 	dmb	sy
2ffd7b0e:	f003 fe69 	bl	2ffdb7e4 <stm32_qspi_init>
2ffd7b12:	b110      	cbz	r0, 2ffd7b1a <stm32mp_io_setup+0xfe>
2ffd7b14:	f240 119f 	movw	r1, #415	; 0x19f
2ffd7b18:	e7b8      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7b1a:	4c5a      	ldr	r4, [pc, #360]	; (2ffd7c84 <stm32mp_io_setup+0x268>)
2ffd7b1c:	4620      	mov	r0, r4
2ffd7b1e:	f7ff fa45 	bl	2ffd6fac <register_io_dev_mtd>
2ffd7b22:	b110      	cbz	r0, 2ffd7b2a <stm32mp_io_setup+0x10e>
2ffd7b24:	f44f 71d1 	mov.w	r1, #418	; 0x1a2
2ffd7b28:	e7b0      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7b2a:	4d57      	ldr	r5, [pc, #348]	; (2ffd7c88 <stm32mp_io_setup+0x26c>)
2ffd7b2c:	4a57      	ldr	r2, [pc, #348]	; (2ffd7c8c <stm32mp_io_setup+0x270>)
2ffd7b2e:	6820      	ldr	r0, [r4, #0]
2ffd7b30:	4629      	mov	r1, r5
2ffd7b32:	f7ff fa95 	bl	2ffd7060 <io_dev_open>
2ffd7b36:	b110      	cbz	r0, 2ffd7b3e <stm32mp_io_setup+0x122>
2ffd7b38:	f44f 71d4 	mov.w	r1, #424	; 0x1a8
2ffd7b3c:	e7a6      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7b3e:	4c54      	ldr	r4, [pc, #336]	; (2ffd7c90 <stm32mp_io_setup+0x274>)
2ffd7b40:	e9d5 2300 	ldrd	r2, r3, [r5]
2ffd7b44:	4d53      	ldr	r5, [pc, #332]	; (2ffd7c94 <stm32mp_io_setup+0x278>)
2ffd7b46:	e9c4 230e 	strd	r2, r3, [r4, #56]	; 0x38
2ffd7b4a:	6320      	str	r0, [r4, #48]	; 0x30
2ffd7b4c:	f44f 2300 	mov.w	r3, #524288	; 0x80000
2ffd7b50:	62e3      	str	r3, [r4, #44]	; 0x2c
2ffd7b52:	4628      	mov	r0, r5
2ffd7b54:	f7ff fe94 	bl	2ffd7880 <register_io_dev_stm32image>
2ffd7b58:	b110      	cbz	r0, 2ffd7b60 <stm32mp_io_setup+0x144>
2ffd7b5a:	f240 11c3 	movw	r1, #451	; 0x1c3
2ffd7b5e:	e795      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7b60:	4a4d      	ldr	r2, [pc, #308]	; (2ffd7c98 <stm32mp_io_setup+0x27c>)
2ffd7b62:	4621      	mov	r1, r4
2ffd7b64:	6828      	ldr	r0, [r5, #0]
2ffd7b66:	f7ff fa7b 	bl	2ffd7060 <io_dev_open>
2ffd7b6a:	2800      	cmp	r0, #0
2ffd7b6c:	d06f      	beq.n	2ffd7c4e <stm32mp_io_setup+0x232>
2ffd7b6e:	f44f 71e4 	mov.w	r1, #456	; 0x1c8
2ffd7b72:	e78b      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7b74:	f3bf 8f5f 	dmb	sy
2ffd7b78:	f002 fe0a 	bl	2ffda790 <stm32_fmc2_init>
2ffd7b7c:	b110      	cbz	r0, 2ffd7b84 <stm32mp_io_setup+0x168>
2ffd7b7e:	f44f 71ea 	mov.w	r1, #468	; 0x1d4
2ffd7b82:	e783      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7b84:	4c45      	ldr	r4, [pc, #276]	; (2ffd7c9c <stm32mp_io_setup+0x280>)
2ffd7b86:	4620      	mov	r0, r4
2ffd7b88:	f7ff fa10 	bl	2ffd6fac <register_io_dev_mtd>
2ffd7b8c:	b110      	cbz	r0, 2ffd7b94 <stm32mp_io_setup+0x178>
2ffd7b8e:	f44f 71ec 	mov.w	r1, #472	; 0x1d8
2ffd7b92:	e77b      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7b94:	4d42      	ldr	r5, [pc, #264]	; (2ffd7ca0 <stm32mp_io_setup+0x284>)
2ffd7b96:	4a3d      	ldr	r2, [pc, #244]	; (2ffd7c8c <stm32mp_io_setup+0x270>)
2ffd7b98:	6820      	ldr	r0, [r4, #0]
2ffd7b9a:	4629      	mov	r1, r5
2ffd7b9c:	f7ff fa60 	bl	2ffd7060 <io_dev_open>
2ffd7ba0:	b110      	cbz	r0, 2ffd7ba8 <stm32mp_io_setup+0x18c>
2ffd7ba2:	f240 11dd 	movw	r1, #477	; 0x1dd
2ffd7ba6:	e771      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7ba8:	4c39      	ldr	r4, [pc, #228]	; (2ffd7c90 <stm32mp_io_setup+0x274>)
2ffd7baa:	e9d5 2300 	ldrd	r2, r3, [r5]
2ffd7bae:	e9c4 230e 	strd	r2, r3, [r4, #56]	; 0x38
2ffd7bb2:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
2ffd7bb6:	62e3      	str	r3, [r4, #44]	; 0x2c
2ffd7bb8:	68ab      	ldr	r3, [r5, #8]
2ffd7bba:	4d36      	ldr	r5, [pc, #216]	; (2ffd7c94 <stm32mp_io_setup+0x278>)
2ffd7bbc:	6323      	str	r3, [r4, #48]	; 0x30
2ffd7bbe:	4628      	mov	r0, r5
2ffd7bc0:	f7ff fe5e 	bl	2ffd7880 <register_io_dev_stm32image>
2ffd7bc4:	b110      	cbz	r0, 2ffd7bcc <stm32mp_io_setup+0x1b0>
2ffd7bc6:	f44f 71fc 	mov.w	r1, #504	; 0x1f8
2ffd7bca:	e75f      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7bcc:	4a32      	ldr	r2, [pc, #200]	; (2ffd7c98 <stm32mp_io_setup+0x27c>)
2ffd7bce:	4621      	mov	r1, r4
2ffd7bd0:	6828      	ldr	r0, [r5, #0]
2ffd7bd2:	f7ff fa45 	bl	2ffd7060 <io_dev_open>
2ffd7bd6:	2800      	cmp	r0, #0
2ffd7bd8:	d039      	beq.n	2ffd7c4e <stm32mp_io_setup+0x232>
2ffd7bda:	f240 11fd 	movw	r1, #509	; 0x1fd
2ffd7bde:	e755      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7be0:	f3bf 8f5f 	dmb	sy
2ffd7be4:	f003 fdfe 	bl	2ffdb7e4 <stm32_qspi_init>
2ffd7be8:	b110      	cbz	r0, 2ffd7bf0 <stm32mp_io_setup+0x1d4>
2ffd7bea:	f240 2109 	movw	r1, #521	; 0x209
2ffd7bee:	e74d      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7bf0:	4c24      	ldr	r4, [pc, #144]	; (2ffd7c84 <stm32mp_io_setup+0x268>)
2ffd7bf2:	4620      	mov	r0, r4
2ffd7bf4:	f7ff f9da 	bl	2ffd6fac <register_io_dev_mtd>
2ffd7bf8:	b110      	cbz	r0, 2ffd7c00 <stm32mp_io_setup+0x1e4>
2ffd7bfa:	f44f 7103 	mov.w	r1, #524	; 0x20c
2ffd7bfe:	e745      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7c00:	4d28      	ldr	r5, [pc, #160]	; (2ffd7ca4 <stm32mp_io_setup+0x288>)
2ffd7c02:	4a22      	ldr	r2, [pc, #136]	; (2ffd7c8c <stm32mp_io_setup+0x270>)
2ffd7c04:	6820      	ldr	r0, [r4, #0]
2ffd7c06:	4629      	mov	r1, r5
2ffd7c08:	f7ff fa2a 	bl	2ffd7060 <io_dev_open>
2ffd7c0c:	b110      	cbz	r0, 2ffd7c14 <stm32mp_io_setup+0x1f8>
2ffd7c0e:	f240 2112 	movw	r1, #530	; 0x212
2ffd7c12:	e73b      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7c14:	4c1e      	ldr	r4, [pc, #120]	; (2ffd7c90 <stm32mp_io_setup+0x274>)
2ffd7c16:	e9d5 2300 	ldrd	r2, r3, [r5]
2ffd7c1a:	e9c4 230e 	strd	r2, r3, [r4, #56]	; 0x38
2ffd7c1e:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
2ffd7c22:	62e3      	str	r3, [r4, #44]	; 0x2c
2ffd7c24:	68ab      	ldr	r3, [r5, #8]
2ffd7c26:	4d1b      	ldr	r5, [pc, #108]	; (2ffd7c94 <stm32mp_io_setup+0x278>)
2ffd7c28:	6323      	str	r3, [r4, #48]	; 0x30
2ffd7c2a:	4628      	mov	r0, r5
2ffd7c2c:	f7ff fe28 	bl	2ffd7880 <register_io_dev_stm32image>
2ffd7c30:	b110      	cbz	r0, 2ffd7c38 <stm32mp_io_setup+0x21c>
2ffd7c32:	f240 212e 	movw	r1, #558	; 0x22e
2ffd7c36:	e729      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7c38:	4a17      	ldr	r2, [pc, #92]	; (2ffd7c98 <stm32mp_io_setup+0x27c>)
2ffd7c3a:	4621      	mov	r1, r4
2ffd7c3c:	6828      	ldr	r0, [r5, #0]
2ffd7c3e:	f7ff fa0f 	bl	2ffd7060 <io_dev_open>
2ffd7c42:	b120      	cbz	r0, 2ffd7c4e <stm32mp_io_setup+0x232>
2ffd7c44:	f240 2133 	movw	r1, #563	; 0x233
2ffd7c48:	e720      	b.n	2ffd7a8c <stm32mp_io_setup+0x70>
2ffd7c4a:	4817      	ldr	r0, [pc, #92]	; (2ffd7ca8 <stm32mp_io_setup+0x28c>)
2ffd7c4c:	e72e      	b.n	2ffd7aac <stm32mp_io_setup+0x90>
2ffd7c4e:	bd38      	pop	{r3, r4, r5, pc}
2ffd7c50:	2ffe3739 	.word	0x2ffe3739
2ffd7c54:	2ffe37be 	.word	0x2ffe37be
2ffd7c58:	2ffe37ce 	.word	0x2ffe37ce
2ffd7c5c:	2ffe8dc4 	.word	0x2ffe8dc4
2ffd7c60:	2ffe3700 	.word	0x2ffe3700
2ffd7c64:	2ffe3747 	.word	0x2ffe3747
2ffd7c68:	2ffe3754 	.word	0x2ffe3754
2ffd7c6c:	2ffe3765 	.word	0x2ffe3765
2ffd7c70:	2ffe3776 	.word	0x2ffe3776
2ffd7c74:	2ffe3787 	.word	0x2ffe3787
2ffd7c78:	2ffe3794 	.word	0x2ffe3794
2ffd7c7c:	2ffe37a0 	.word	0x2ffe37a0
2ffd7c80:	2ffe8dc8 	.word	0x2ffe8dc8
2ffd7c84:	2ffe8dd8 	.word	0x2ffe8dd8
2ffd7c88:	2ffe7048 	.word	0x2ffe7048
2ffd7c8c:	2ffe8de8 	.word	0x2ffe8de8
2ffd7c90:	2ffe7060 	.word	0x2ffe7060
2ffd7c94:	2ffe8de4 	.word	0x2ffe8de4
2ffd7c98:	2ffe8dcc 	.word	0x2ffe8dcc
2ffd7c9c:	2ffe8dd4 	.word	0x2ffe8dd4
2ffd7ca0:	2ffe7018 	.word	0x2ffe7018
2ffd7ca4:	2ffe7030 	.word	0x2ffe7030
2ffd7ca8:	2ffe37eb 	.word	0x2ffe37eb

2ffd7cac <plat_get_image_source>:
2ffd7cac:	281d      	cmp	r0, #29
2ffd7cae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffd7cb2:	460d      	mov	r5, r1
2ffd7cb4:	4616      	mov	r6, r2
2ffd7cb6:	d904      	bls.n	2ffd7cc2 <plat_get_image_source+0x16>
2ffd7cb8:	480a      	ldr	r0, [pc, #40]	; (2ffd7ce4 <plat_get_image_source+0x38>)
2ffd7cba:	f240 21d6 	movw	r1, #726	; 0x2d6
2ffd7cbe:	f00b f929 	bl	2ffe2f14 <__assert>
2ffd7cc2:	4f09      	ldr	r7, [pc, #36]	; (2ffd7ce8 <plat_get_image_source+0x3c>)
2ffd7cc4:	240c      	movs	r4, #12
2ffd7cc6:	4344      	muls	r4, r0
2ffd7cc8:	193b      	adds	r3, r7, r4
2ffd7cca:	f8d3 8004 	ldr.w	r8, [r3, #4]
2ffd7cce:	689b      	ldr	r3, [r3, #8]
2ffd7cd0:	4640      	mov	r0, r8
2ffd7cd2:	4798      	blx	r3
2ffd7cd4:	b920      	cbnz	r0, 2ffd7ce0 <plat_get_image_source+0x34>
2ffd7cd6:	593b      	ldr	r3, [r7, r4]
2ffd7cd8:	f8c6 8000 	str.w	r8, [r6]
2ffd7cdc:	681b      	ldr	r3, [r3, #0]
2ffd7cde:	602b      	str	r3, [r5, #0]
2ffd7ce0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffd7ce4:	2ffe3700 	.word	0x2ffe3700
2ffd7ce8:	2ffe3868 	.word	0x2ffe3868

2ffd7cec <plat_try_next_boot_source>:
2ffd7cec:	281d      	cmp	r0, #29
2ffd7cee:	b508      	push	{r3, lr}
2ffd7cf0:	d904      	bls.n	2ffd7cfc <plat_try_next_boot_source+0x10>
2ffd7cf2:	f44f 713c 	mov.w	r1, #752	; 0x2f0
2ffd7cf6:	4817      	ldr	r0, [pc, #92]	; (2ffd7d54 <plat_try_next_boot_source+0x68>)
2ffd7cf8:	f00b f90c 	bl	2ffe2f14 <__assert>
2ffd7cfc:	4b16      	ldr	r3, [pc, #88]	; (2ffd7d58 <plat_try_next_boot_source+0x6c>)
2ffd7cfe:	681a      	ldr	r2, [r3, #0]
2ffd7d00:	4282      	cmp	r2, r0
2ffd7d02:	4a16      	ldr	r2, [pc, #88]	; (2ffd7d5c <plat_try_next_boot_source+0x70>)
2ffd7d04:	bf1e      	ittt	ne
2ffd7d06:	6018      	strne	r0, [r3, #0]
2ffd7d08:	2300      	movne	r3, #0
2ffd7d0a:	6013      	strne	r3, [r2, #0]
2ffd7d0c:	6813      	ldr	r3, [r2, #0]
2ffd7d0e:	3301      	adds	r3, #1
2ffd7d10:	6013      	str	r3, [r2, #0]
2ffd7d12:	2b13      	cmp	r3, #19
2ffd7d14:	d81a      	bhi.n	2ffd7d4c <plat_try_next_boot_source+0x60>
2ffd7d16:	4b12      	ldr	r3, [pc, #72]	; (2ffd7d60 <plat_try_next_boot_source+0x74>)
2ffd7d18:	220c      	movs	r2, #12
2ffd7d1a:	4912      	ldr	r1, [pc, #72]	; (2ffd7d64 <plat_try_next_boot_source+0x78>)
2ffd7d1c:	fb02 3000 	mla	r0, r2, r0, r3
2ffd7d20:	6a8a      	ldr	r2, [r1, #40]	; 0x28
2ffd7d22:	6843      	ldr	r3, [r0, #4]
2ffd7d24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
2ffd7d26:	429a      	cmp	r2, r3
2ffd7d28:	d10d      	bne.n	2ffd7d46 <plat_try_next_boot_source+0x5a>
2ffd7d2a:	6b08      	ldr	r0, [r1, #48]	; 0x30
2ffd7d2c:	b178      	cbz	r0, 2ffd7d4e <plat_try_next_boot_source+0x62>
2ffd7d2e:	6acb      	ldr	r3, [r1, #44]	; 0x2c
2ffd7d30:	4a0d      	ldr	r2, [pc, #52]	; (2ffd7d68 <plat_try_next_boot_source+0x7c>)
2ffd7d32:	4418      	add	r0, r3
2ffd7d34:	4b0d      	ldr	r3, [pc, #52]	; (2ffd7d6c <plat_try_next_boot_source+0x80>)
2ffd7d36:	62c8      	str	r0, [r1, #44]	; 0x2c
2ffd7d38:	6818      	ldr	r0, [r3, #0]
2ffd7d3a:	f7ff f991 	bl	2ffd7060 <io_dev_open>
2ffd7d3e:	b138      	cbz	r0, 2ffd7d50 <plat_try_next_boot_source+0x64>
2ffd7d40:	f44f 7145 	mov.w	r1, #788	; 0x314
2ffd7d44:	e7d7      	b.n	2ffd7cf6 <plat_try_next_boot_source+0xa>
2ffd7d46:	f240 3106 	movw	r1, #774	; 0x306
2ffd7d4a:	e7d4      	b.n	2ffd7cf6 <plat_try_next_boot_source+0xa>
2ffd7d4c:	2000      	movs	r0, #0
2ffd7d4e:	bd08      	pop	{r3, pc}
2ffd7d50:	2001      	movs	r0, #1
2ffd7d52:	e7fc      	b.n	2ffd7d4e <plat_try_next_boot_source+0x62>
2ffd7d54:	2ffe3700 	.word	0x2ffe3700
2ffd7d58:	2ffe7008 	.word	0x2ffe7008
2ffd7d5c:	2ffe8dc0 	.word	0x2ffe8dc0
2ffd7d60:	2ffe3868 	.word	0x2ffe3868
2ffd7d64:	2ffe7060 	.word	0x2ffe7060
2ffd7d68:	2ffe8dcc 	.word	0x2ffe8dcc
2ffd7d6c:	2ffe8de4 	.word	0x2ffe8de4

2ffd7d70 <get_boot_device>:
2ffd7d70:	2001      	movs	r0, #1
2ffd7d72:	4770      	bx	lr

2ffd7d74 <bl2_el3_early_platform_setup>:
2ffd7d74:	f005 b888 	b.w	2ffdce88 <stm32mp_save_boot_ctx_address>

2ffd7d78 <bl2_platform_setup>:
2ffd7d78:	2319      	movs	r3, #25
2ffd7d7a:	b507      	push	{r0, r1, r2, lr}
2ffd7d7c:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
2ffd7d80:	9300      	str	r3, [sp, #0]
2ffd7d82:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
2ffd7d86:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
2ffd7d8a:	2100      	movs	r1, #0
2ffd7d8c:	f005 fcb6 	bl	2ffdd6fc <mmap_add_dynamic_region>
2ffd7d90:	b118      	cbz	r0, 2ffd7d9a <bl2_platform_setup+0x22>
2ffd7d92:	21ac      	movs	r1, #172	; 0xac
2ffd7d94:	481b      	ldr	r0, [pc, #108]	; (2ffd7e04 <bl2_platform_setup+0x8c>)
2ffd7d96:	f00b f8bd 	bl	2ffe2f14 <__assert>
2ffd7d9a:	f004 fbe3 	bl	2ffdc564 <stm32mp1_ddr_probe>
2ffd7d9e:	1e01      	subs	r1, r0, #0
2ffd7da0:	da06      	bge.n	2ffd7db0 <bl2_platform_setup+0x38>
2ffd7da2:	4819      	ldr	r0, [pc, #100]	; (2ffd7e08 <bl2_platform_setup+0x90>)
2ffd7da4:	f004 fea2 	bl	2ffdcaec <tf_log>
2ffd7da8:	f004 ff3e 	bl	2ffdcc28 <console_flush>
2ffd7dac:	f7fe ea58 	blx	2ffd6260 <do_panic>
2ffd7db0:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
2ffd7db4:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
2ffd7db8:	f005 fcb4 	bl	2ffdd724 <mmap_remove_dynamic_region>
2ffd7dbc:	b108      	cbz	r0, 2ffd7dc2 <bl2_platform_setup+0x4a>
2ffd7dbe:	21b6      	movs	r1, #182	; 0xb6
2ffd7dc0:	e7e8      	b.n	2ffd7d94 <bl2_platform_setup+0x1c>
2ffd7dc2:	4812      	ldr	r0, [pc, #72]	; (2ffd7e0c <bl2_platform_setup+0x94>)
2ffd7dc4:	f004 fe92 	bl	2ffdcaec <tf_log>
2ffd7dc8:	f00a fa0a 	bl	2ffe21e0 <dt_get_ddr_size>
2ffd7dcc:	221a      	movs	r2, #26
2ffd7dce:	4603      	mov	r3, r0
2ffd7dd0:	9200      	str	r2, [sp, #0]
2ffd7dd2:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
2ffd7dd6:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
2ffd7dda:	2100      	movs	r1, #0
2ffd7ddc:	f005 fc8e 	bl	2ffdd6fc <mmap_add_dynamic_region>
2ffd7de0:	b108      	cbz	r0, 2ffd7de6 <bl2_platform_setup+0x6e>
2ffd7de2:	21d5      	movs	r1, #213	; 0xd5
2ffd7de4:	e7d6      	b.n	2ffd7d94 <bl2_platform_setup+0x1c>
2ffd7de6:	f009 fbd3 	bl	2ffe1590 <dt_pmic_status>
2ffd7dea:	2800      	cmp	r0, #0
2ffd7dec:	dd07      	ble.n	2ffd7dfe <bl2_platform_setup+0x86>
2ffd7dee:	4b08      	ldr	r3, [pc, #32]	; (2ffd7e10 <bl2_platform_setup+0x98>)
2ffd7df0:	781b      	ldrb	r3, [r3, #0]
2ffd7df2:	b923      	cbnz	r3, 2ffd7dfe <bl2_platform_setup+0x86>
2ffd7df4:	b003      	add	sp, #12
2ffd7df6:	f85d eb04 	ldr.w	lr, [sp], #4
2ffd7dfa:	f009 bcd8 	b.w	2ffe17ae <configure_pmic>
2ffd7dfe:	b003      	add	sp, #12
2ffd7e00:	f85d fb04 	ldr.w	pc, [sp], #4
2ffd7e04:	2ffe39d0 	.word	0x2ffe39d0
2ffd7e08:	2ffe39f2 	.word	0x2ffe39f2
2ffd7e0c:	2ffe3a0f 	.word	0x2ffe3a0f
2ffd7e10:	2ffe9126 	.word	0x2ffe9126

2ffd7e14 <bl2_el3_plat_arch_setup>:
2ffd7e14:	b570      	push	{r4, r5, r6, lr}
2ffd7e16:	b08a      	sub	sp, #40	; 0x28
2ffd7e18:	2522      	movs	r5, #34	; 0x22
2ffd7e1a:	f005 f83b 	bl	2ffdce94 <stm32mp_get_boot_ctx_address>
2ffd7e1e:	4a5d      	ldr	r2, [pc, #372]	; (2ffd7f94 <bl2_el3_plat_arch_setup+0x180>)
2ffd7e20:	2302      	movs	r3, #2
2ffd7e22:	9300      	str	r3, [sp, #0]
2ffd7e24:	2100      	movs	r1, #0
2ffd7e26:	4b5c      	ldr	r3, [pc, #368]	; (2ffd7f98 <bl2_el3_plat_arch_setup+0x184>)
2ffd7e28:	4604      	mov	r4, r0
2ffd7e2a:	4610      	mov	r0, r2
2ffd7e2c:	1a9b      	subs	r3, r3, r2
2ffd7e2e:	f005 fc4b 	bl	2ffdd6c8 <mmap_add_region>
2ffd7e32:	4a5a      	ldr	r2, [pc, #360]	; (2ffd7f9c <bl2_el3_plat_arch_setup+0x188>)
2ffd7e34:	f44f 3390 	mov.w	r3, #73728	; 0x12000
2ffd7e38:	4858      	ldr	r0, [pc, #352]	; (2ffd7f9c <bl2_el3_plat_arch_setup+0x188>)
2ffd7e3a:	2100      	movs	r1, #0
2ffd7e3c:	9500      	str	r5, [sp, #0]
2ffd7e3e:	f005 fc43 	bl	2ffdd6c8 <mmap_add_region>
2ffd7e42:	4a57      	ldr	r2, [pc, #348]	; (2ffd7fa0 <bl2_el3_plat_arch_setup+0x18c>)
2ffd7e44:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
2ffd7e48:	4855      	ldr	r0, [pc, #340]	; (2ffd7fa0 <bl2_el3_plat_arch_setup+0x18c>)
2ffd7e4a:	2100      	movs	r1, #0
2ffd7e4c:	9500      	str	r5, [sp, #0]
2ffd7e4e:	f005 fc3b 	bl	2ffdd6c8 <mmap_add_region>
2ffd7e52:	f005 f903 	bl	2ffdd05c <configure_mmu>
2ffd7e56:	f00a f823 	bl	2ffe1ea0 <dt_open_and_check>
2ffd7e5a:	2800      	cmp	r0, #0
2ffd7e5c:	da03      	bge.n	2ffd7e66 <bl2_el3_plat_arch_setup+0x52>
2ffd7e5e:	f004 fee3 	bl	2ffdcc28 <console_flush>
2ffd7e62:	f7fe e9fe 	blx	2ffd6260 <do_panic>
2ffd7e66:	f005 f823 	bl	2ffdceb0 <stm32mp_pwr_base>
2ffd7e6a:	4606      	mov	r6, r0
2ffd7e6c:	f005 f824 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffd7e70:	2303      	movs	r3, #3
2ffd7e72:	4605      	mov	r5, r0
2ffd7e74:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
2ffd7e78:	6833      	ldr	r3, [r6, #0]
2ffd7e7a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2ffd7e7e:	6033      	str	r3, [r6, #0]
2ffd7e80:	6833      	ldr	r3, [r6, #0]
2ffd7e82:	05d9      	lsls	r1, r3, #23
2ffd7e84:	d5fc      	bpl.n	2ffd7e80 <bl2_el3_plat_arch_setup+0x6c>
2ffd7e86:	6973      	ldr	r3, [r6, #20]
2ffd7e88:	f043 0301 	orr.w	r3, r3, #1
2ffd7e8c:	6173      	str	r3, [r6, #20]
2ffd7e8e:	f006 fc31 	bl	2ffde6f4 <bsec_probe>
2ffd7e92:	2800      	cmp	r0, #0
2ffd7e94:	d1e3      	bne.n	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd7e96:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
2ffd7e9a:	f505 72a0 	add.w	r2, r5, #320	; 0x140
2ffd7e9e:	f413 3f40 	tst.w	r3, #196608	; 0x30000
2ffd7ea2:	d10e      	bne.n	2ffd7ec2 <bl2_el3_plat_arch_setup+0xae>
2ffd7ea4:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
2ffd7ea8:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2ffd7eac:	f8c5 3140 	str.w	r3, [r5, #320]	; 0x140
2ffd7eb0:	6813      	ldr	r3, [r2, #0]
2ffd7eb2:	2b00      	cmp	r3, #0
2ffd7eb4:	dafc      	bge.n	2ffd7eb0 <bl2_el3_plat_arch_setup+0x9c>
2ffd7eb6:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
2ffd7eba:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2ffd7ebe:	f8c5 3140 	str.w	r3, [r5, #320]	; 0x140
2ffd7ec2:	f8d5 341c 	ldr.w	r3, [r5, #1052]	; 0x41c
2ffd7ec6:	f04f 120a 	mov.w	r2, #655370	; 0xa000a
2ffd7eca:	0d9b      	lsrs	r3, r3, #22
2ffd7ecc:	059b      	lsls	r3, r3, #22
2ffd7ece:	f043 0305 	orr.w	r3, r3, #5
2ffd7ed2:	f8c5 341c 	str.w	r3, [r5, #1052]	; 0x41c
2ffd7ed6:	68b3      	ldr	r3, [r6, #8]
2ffd7ed8:	f023 0303 	bic.w	r3, r3, #3
2ffd7edc:	60b3      	str	r3, [r6, #8]
2ffd7ede:	682b      	ldr	r3, [r5, #0]
2ffd7ee0:	f023 0302 	bic.w	r3, r3, #2
2ffd7ee4:	602b      	str	r3, [r5, #0]
2ffd7ee6:	4b2f      	ldr	r3, [pc, #188]	; (2ffd7fa4 <bl2_el3_plat_arch_setup+0x190>)
2ffd7ee8:	4d2f      	ldr	r5, [pc, #188]	; (2ffd7fa8 <bl2_el3_plat_arch_setup+0x194>)
2ffd7eea:	601a      	str	r2, [r3, #0]
2ffd7eec:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
2ffd7ef0:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
2ffd7ef4:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffd7ef8:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
2ffd7efc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
2ffd7f00:	f894 204f 	ldrb.w	r2, [r4, #79]	; 0x4f
2ffd7f04:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffd7f08:	3b0a      	subs	r3, #10
2ffd7f0a:	2b01      	cmp	r3, #1
2ffd7f0c:	4b27      	ldr	r3, [pc, #156]	; (2ffd7fac <bl2_el3_plat_arch_setup+0x198>)
2ffd7f0e:	bf81      	itttt	hi
2ffd7f10:	2200      	movhi	r2, #0
2ffd7f12:	4927      	ldrhi	r1, [pc, #156]	; (2ffd7fb0 <bl2_el3_plat_arch_setup+0x19c>)
2ffd7f14:	601a      	strhi	r2, [r3, #0]
2ffd7f16:	600a      	strhi	r2, [r1, #0]
2ffd7f18:	681b      	ldr	r3, [r3, #0]
2ffd7f1a:	3b00      	subs	r3, #0
2ffd7f1c:	bf18      	it	ne
2ffd7f1e:	2301      	movne	r3, #1
2ffd7f20:	702b      	strb	r3, [r5, #0]
2ffd7f22:	f006 faa7 	bl	2ffde474 <generic_delay_timer_init>
2ffd7f26:	f008 f8ab 	bl	2ffe0080 <stm32mp1_clk_probe>
2ffd7f2a:	2800      	cmp	r0, #0
2ffd7f2c:	db97      	blt.n	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd7f2e:	f009 fb2f 	bl	2ffe1590 <dt_pmic_status>
2ffd7f32:	2800      	cmp	r0, #0
2ffd7f34:	dd01      	ble.n	2ffd7f3a <bl2_el3_plat_arch_setup+0x126>
2ffd7f36:	f009 fc31 	bl	2ffe179c <initialize_pmic>
2ffd7f3a:	2300      	movs	r3, #0
2ffd7f3c:	e9cd 3302 	strd	r3, r3, [sp, #8]
2ffd7f40:	782b      	ldrb	r3, [r5, #0]
2ffd7f42:	2b00      	cmp	r3, #0
2ffd7f44:	d136      	bne.n	2ffd7fb4 <bl2_el3_plat_arch_setup+0x1a0>
2ffd7f46:	f006 fecf 	bl	2ffdece8 <fdt_is_pll1_predefined>
2ffd7f4a:	2800      	cmp	r0, #0
2ffd7f4c:	d136      	bne.n	2ffd7fbc <bl2_el3_plat_arch_setup+0x1a8>
2ffd7f4e:	782b      	ldrb	r3, [r5, #0]
2ffd7f50:	a902      	add	r1, sp, #8
2ffd7f52:	a803      	add	r0, sp, #12
2ffd7f54:	2b00      	cmp	r3, #0
2ffd7f56:	f000 80eb 	beq.w	2ffd8130 <bl2_el3_plat_arch_setup+0x31c>
2ffd7f5a:	f007 fcff 	bl	2ffdf95c <stm32mp1_clk_get_maxfreq_opp>
2ffd7f5e:	2800      	cmp	r0, #0
2ffd7f60:	f47f af7d 	bne.w	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd7f64:	f009 fb14 	bl	2ffe1590 <dt_pmic_status>
2ffd7f68:	2800      	cmp	r0, #0
2ffd7f6a:	dd27      	ble.n	2ffd7fbc <bl2_el3_plat_arch_setup+0x1a8>
2ffd7f6c:	f005 f834 	bl	2ffdcfd8 <stm32mp_get_cpu_supply_name>
2ffd7f70:	4605      	mov	r5, r0
2ffd7f72:	2800      	cmp	r0, #0
2ffd7f74:	f43f af73 	beq.w	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd7f78:	f009 fd42 	bl	2ffe1a00 <stpmic1_regulator_voltage_get>
2ffd7f7c:	2800      	cmp	r0, #0
2ffd7f7e:	f6ff af6e 	blt.w	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd7f82:	9902      	ldr	r1, [sp, #8]
2ffd7f84:	4281      	cmp	r1, r0
2ffd7f86:	d019      	beq.n	2ffd7fbc <bl2_el3_plat_arch_setup+0x1a8>
2ffd7f88:	b289      	uxth	r1, r1
2ffd7f8a:	4628      	mov	r0, r5
2ffd7f8c:	f009 fdca 	bl	2ffe1b24 <stpmic1_regulator_voltage_set>
2ffd7f90:	b1a0      	cbz	r0, 2ffd7fbc <bl2_el3_plat_arch_setup+0x1a8>
2ffd7f92:	e764      	b.n	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd7f94:	2ffd6000 	.word	0x2ffd6000
2ffd7f98:	2ffe7000 	.word	0x2ffe7000
2ffd7f9c:	2ffed000 	.word	0x2ffed000
2ffd7fa0:	2ffcc000 	.word	0x2ffcc000
2ffd7fa4:	5c00a020 	.word	0x5c00a020
2ffd7fa8:	2ffe9126 	.word	0x2ffe9126
2ffd7fac:	5c00a114 	.word	0x5c00a114
2ffd7fb0:	5c00a110 	.word	0x5c00a110
2ffd7fb4:	f00a fa12 	bl	2ffe23dc <stm32_get_pll1_settings_from_context>
2ffd7fb8:	2800      	cmp	r0, #0
2ffd7fba:	d0c4      	beq.n	2ffd7f46 <bl2_el3_plat_arch_setup+0x132>
2ffd7fbc:	9803      	ldr	r0, [sp, #12]
2ffd7fbe:	f007 fd07 	bl	2ffdf9d0 <stm32mp1_clk_init>
2ffd7fc2:	2800      	cmp	r0, #0
2ffd7fc4:	f6ff af4b 	blt.w	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd7fc8:	a806      	add	r0, sp, #24
2ffd7fca:	f00a f8af 	bl	2ffe212c <dt_get_stdout_uart_info>
2ffd7fce:	2800      	cmp	r0, #0
2ffd7fd0:	dd5f      	ble.n	2ffd8092 <bl2_el3_plat_arch_setup+0x27e>
2ffd7fd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
2ffd7fd4:	2b00      	cmp	r3, #0
2ffd7fd6:	d05c      	beq.n	2ffd8092 <bl2_el3_plat_arch_setup+0x27e>
2ffd7fd8:	9b07      	ldr	r3, [sp, #28]
2ffd7fda:	2b00      	cmp	r3, #0
2ffd7fdc:	db59      	blt.n	2ffd8092 <bl2_el3_plat_arch_setup+0x27e>
2ffd7fde:	9b08      	ldr	r3, [sp, #32]
2ffd7fe0:	2b00      	cmp	r3, #0
2ffd7fe2:	db56      	blt.n	2ffd8092 <bl2_el3_plat_arch_setup+0x27e>
2ffd7fe4:	f00a f840 	bl	2ffe2068 <dt_set_stdout_pinctrl>
2ffd7fe8:	2800      	cmp	r0, #0
2ffd7fea:	d152      	bne.n	2ffd8092 <bl2_el3_plat_arch_setup+0x27e>
2ffd7fec:	9b09      	ldr	r3, [sp, #36]	; 0x24
2ffd7fee:	2b00      	cmp	r3, #0
2ffd7ff0:	f43f af35 	beq.w	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd7ff4:	9807      	ldr	r0, [sp, #28]
2ffd7ff6:	f007 fb8d 	bl	2ffdf714 <stm32mp_clk_enable>
2ffd7ffa:	9d08      	ldr	r5, [sp, #32]
2ffd7ffc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffd8000:	4628      	mov	r0, r5
2ffd8002:	f009 fe23 	bl	2ffe1c4c <stm32mp_reset_assert_to>
2ffd8006:	2800      	cmp	r0, #0
2ffd8008:	f47f af29 	bne.w	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd800c:	2002      	movs	r0, #2
2ffd800e:	f006 f9d9 	bl	2ffde3c4 <udelay>
2ffd8012:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffd8016:	4628      	mov	r0, r5
2ffd8018:	f009 fe50 	bl	2ffe1cbc <stm32mp_reset_deassert_to>
2ffd801c:	2800      	cmp	r0, #0
2ffd801e:	f47f af1e 	bne.w	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd8022:	2001      	movs	r0, #1
2ffd8024:	f006 f9fc 	bl	2ffde420 <mdelay>
2ffd8028:	9807      	ldr	r0, [sp, #28]
2ffd802a:	f007 fb7c 	bl	2ffdf726 <stm32mp_clk_get_rate>
2ffd802e:	4b69      	ldr	r3, [pc, #420]	; (2ffd81d4 <bl2_el3_plat_arch_setup+0x3c0>)
2ffd8030:	4601      	mov	r1, r0
2ffd8032:	9806      	ldr	r0, [sp, #24]
2ffd8034:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
2ffd8038:	f7fe ea96 	blx	2ffd6568 <console_stm32_register>
2ffd803c:	2800      	cmp	r0, #0
2ffd803e:	f43f af0e 	beq.w	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd8042:	4864      	ldr	r0, [pc, #400]	; (2ffd81d4 <bl2_el3_plat_arch_setup+0x3c0>)
2ffd8044:	f240 1105 	movw	r1, #261	; 0x105
2ffd8048:	f004 fdb4 	bl	2ffdcbb4 <console_set_scope>
2ffd804c:	f005 f8ba 	bl	2ffdd1c4 <stm32mp_print_cpuinfo>
2ffd8050:	f00a f96e 	bl	2ffe2330 <dt_get_board_model>
2ffd8054:	4601      	mov	r1, r0
2ffd8056:	b110      	cbz	r0, 2ffd805e <bl2_el3_plat_arch_setup+0x24a>
2ffd8058:	485f      	ldr	r0, [pc, #380]	; (2ffd81d8 <bl2_el3_plat_arch_setup+0x3c4>)
2ffd805a:	f004 fd47 	bl	2ffdcaec <tf_log>
2ffd805e:	f005 f95f 	bl	2ffdd320 <stm32mp_print_boardinfo>
2ffd8062:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
2ffd8066:	f894 1058 	ldrb.w	r1, [r4, #88]	; 0x58
2ffd806a:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
2ffd806e:	f894 305a 	ldrb.w	r3, [r4, #90]	; 0x5a
2ffd8072:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
2ffd8076:	f894 305b 	ldrb.w	r3, [r4, #91]	; 0x5b
2ffd807a:	ea51 6103 	orrs.w	r1, r1, r3, lsl #24
2ffd807e:	d008      	beq.n	2ffd8092 <bl2_el3_plat_arch_setup+0x27e>
2ffd8080:	4a56      	ldr	r2, [pc, #344]	; (2ffd81dc <bl2_el3_plat_arch_setup+0x3c8>)
2ffd8082:	4b57      	ldr	r3, [pc, #348]	; (2ffd81e0 <bl2_el3_plat_arch_setup+0x3cc>)
2ffd8084:	4857      	ldr	r0, [pc, #348]	; (2ffd81e4 <bl2_el3_plat_arch_setup+0x3d0>)
2ffd8086:	2901      	cmp	r1, #1
2ffd8088:	bf0c      	ite	eq
2ffd808a:	4611      	moveq	r1, r2
2ffd808c:	4619      	movne	r1, r3
2ffd808e:	f004 fd2d 	bl	2ffdcaec <tf_log>
2ffd8092:	f00a fa95 	bl	2ffe25c0 <stm32mp1_syscfg_init>
2ffd8096:	f009 f8b3 	bl	2ffe1200 <stm32_iwdg_init>
2ffd809a:	2800      	cmp	r0, #0
2ffd809c:	f6ff aedf 	blt.w	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd80a0:	f009 f88e 	bl	2ffe11c0 <stm32_iwdg_refresh>
2ffd80a4:	f006 fad8 	bl	2ffde658 <bsec_read_debug_conf>
2ffd80a8:	b168      	cbz	r0, 2ffd80c6 <bl2_el3_plat_arch_setup+0x2b2>
2ffd80aa:	f00a fa17 	bl	2ffe24dc <stm32mp1_dbgmcu_freeze_iwdg2>
2ffd80ae:	4601      	mov	r1, r0
2ffd80b0:	b110      	cbz	r0, 2ffd80b8 <bl2_el3_plat_arch_setup+0x2a4>
2ffd80b2:	484d      	ldr	r0, [pc, #308]	; (2ffd81e8 <bl2_el3_plat_arch_setup+0x3d4>)
2ffd80b4:	f004 fd1a 	bl	2ffdcaec <tf_log>
2ffd80b8:	f005 f958 	bl	2ffdd36c <stm32mp_is_closed_device>
2ffd80bc:	b118      	cbz	r0, 2ffd80c6 <bl2_el3_plat_arch_setup+0x2b2>
2ffd80be:	494b      	ldr	r1, [pc, #300]	; (2ffd81ec <bl2_el3_plat_arch_setup+0x3d8>)
2ffd80c0:	484b      	ldr	r0, [pc, #300]	; (2ffd81f0 <bl2_el3_plat_arch_setup+0x3dc>)
2ffd80c2:	f004 fd13 	bl	2ffdcaec <tf_log>
2ffd80c6:	78a2      	ldrb	r2, [r4, #2]
2ffd80c8:	78e1      	ldrb	r1, [r4, #3]
2ffd80ca:	7823      	ldrb	r3, [r4, #0]
2ffd80cc:	7860      	ldrb	r0, [r4, #1]
2ffd80ce:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
2ffd80d2:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
2ffd80d6:	f00a f991 	bl	2ffe23fc <stm32_save_boot_interface>
2ffd80da:	b110      	cbz	r0, 2ffd80e2 <bl2_el3_plat_arch_setup+0x2ce>
2ffd80dc:	4845      	ldr	r0, [pc, #276]	; (2ffd81f4 <bl2_el3_plat_arch_setup+0x3e0>)
2ffd80de:	f004 fd05 	bl	2ffdcaec <tf_log>
2ffd80e2:	f00a fa11 	bl	2ffe2508 <stm32mp1_arch_security_setup>
2ffd80e6:	f004 fee7 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffd80ea:	f8d0 4408 	ldr.w	r4, [r0, #1032]	; 0x408
2ffd80ee:	bb14      	cbnz	r4, 2ffd8136 <bl2_el3_plat_arch_setup+0x322>
2ffd80f0:	4841      	ldr	r0, [pc, #260]	; (2ffd81f8 <bl2_el3_plat_arch_setup+0x3e4>)
2ffd80f2:	f004 fcfb 	bl	2ffdcaec <tf_log>
2ffd80f6:	4841      	ldr	r0, [pc, #260]	; (2ffd81fc <bl2_el3_plat_arch_setup+0x3e8>)
2ffd80f8:	2200      	movs	r2, #0
2ffd80fa:	a905      	add	r1, sp, #20
2ffd80fc:	f004 ffcc 	bl	2ffdd098 <stm32_get_otp_index>
2ffd8100:	2800      	cmp	r0, #0
2ffd8102:	f47f aeac 	bne.w	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd8106:	483d      	ldr	r0, [pc, #244]	; (2ffd81fc <bl2_el3_plat_arch_setup+0x3e8>)
2ffd8108:	a904      	add	r1, sp, #16
2ffd810a:	f004 fff1 	bl	2ffdd0f0 <stm32_get_otp_value>
2ffd810e:	2800      	cmp	r0, #0
2ffd8110:	f47f aea5 	bne.w	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd8114:	9a04      	ldr	r2, [sp, #16]
2ffd8116:	3201      	adds	r2, #1
2ffd8118:	d14f      	bne.n	2ffd81ba <bl2_el3_plat_arch_setup+0x3a6>
2ffd811a:	9905      	ldr	r1, [sp, #20]
2ffd811c:	9004      	str	r0, [sp, #16]
2ffd811e:	f006 fc19 	bl	2ffde954 <bsec_program_otp>
2ffd8122:	4601      	mov	r1, r0
2ffd8124:	2800      	cmp	r0, #0
2ffd8126:	d044      	beq.n	2ffd81b2 <bl2_el3_plat_arch_setup+0x39e>
2ffd8128:	4835      	ldr	r0, [pc, #212]	; (2ffd8200 <bl2_el3_plat_arch_setup+0x3ec>)
2ffd812a:	f004 fcdf 	bl	2ffdcaec <tf_log>
2ffd812e:	e696      	b.n	2ffd7e5e <bl2_el3_plat_arch_setup+0x4a>
2ffd8130:	f00a f868 	bl	2ffe2204 <dt_get_max_opp_freqvolt>
2ffd8134:	e713      	b.n	2ffd7f5e <bl2_el3_plat_arch_setup+0x14a>
2ffd8136:	4833      	ldr	r0, [pc, #204]	; (2ffd8204 <bl2_el3_plat_arch_setup+0x3f0>)
2ffd8138:	4621      	mov	r1, r4
2ffd813a:	f004 fcd7 	bl	2ffdcaec <tf_log>
2ffd813e:	f014 0304 	ands.w	r3, r4, #4
2ffd8142:	d107      	bne.n	2ffd8154 <bl2_el3_plat_arch_setup+0x340>
2ffd8144:	0522      	lsls	r2, r4, #20
2ffd8146:	d501      	bpl.n	2ffd814c <bl2_el3_plat_arch_setup+0x338>
2ffd8148:	482f      	ldr	r0, [pc, #188]	; (2ffd8208 <bl2_el3_plat_arch_setup+0x3f4>)
2ffd814a:	e7d2      	b.n	2ffd80f2 <bl2_el3_plat_arch_setup+0x2de>
2ffd814c:	04e6      	lsls	r6, r4, #19
2ffd814e:	d501      	bpl.n	2ffd8154 <bl2_el3_plat_arch_setup+0x340>
2ffd8150:	482e      	ldr	r0, [pc, #184]	; (2ffd820c <bl2_el3_plat_arch_setup+0x3f8>)
2ffd8152:	e7ce      	b.n	2ffd80f2 <bl2_el3_plat_arch_setup+0x2de>
2ffd8154:	07e5      	lsls	r5, r4, #31
2ffd8156:	d501      	bpl.n	2ffd815c <bl2_el3_plat_arch_setup+0x348>
2ffd8158:	482d      	ldr	r0, [pc, #180]	; (2ffd8210 <bl2_el3_plat_arch_setup+0x3fc>)
2ffd815a:	e7ca      	b.n	2ffd80f2 <bl2_el3_plat_arch_setup+0x2de>
2ffd815c:	07a0      	lsls	r0, r4, #30
2ffd815e:	d501      	bpl.n	2ffd8164 <bl2_el3_plat_arch_setup+0x350>
2ffd8160:	482c      	ldr	r0, [pc, #176]	; (2ffd8214 <bl2_el3_plat_arch_setup+0x400>)
2ffd8162:	e7c6      	b.n	2ffd80f2 <bl2_el3_plat_arch_setup+0x2de>
2ffd8164:	0621      	lsls	r1, r4, #24
2ffd8166:	d504      	bpl.n	2ffd8172 <bl2_el3_plat_arch_setup+0x35e>
2ffd8168:	b10b      	cbz	r3, 2ffd816e <bl2_el3_plat_arch_setup+0x35a>
2ffd816a:	482b      	ldr	r0, [pc, #172]	; (2ffd8218 <bl2_el3_plat_arch_setup+0x404>)
2ffd816c:	e7c1      	b.n	2ffd80f2 <bl2_el3_plat_arch_setup+0x2de>
2ffd816e:	482b      	ldr	r0, [pc, #172]	; (2ffd821c <bl2_el3_plat_arch_setup+0x408>)
2ffd8170:	e7bf      	b.n	2ffd80f2 <bl2_el3_plat_arch_setup+0x2de>
2ffd8172:	0662      	lsls	r2, r4, #25
2ffd8174:	d501      	bpl.n	2ffd817a <bl2_el3_plat_arch_setup+0x366>
2ffd8176:	482a      	ldr	r0, [pc, #168]	; (2ffd8220 <bl2_el3_plat_arch_setup+0x40c>)
2ffd8178:	e7bb      	b.n	2ffd80f2 <bl2_el3_plat_arch_setup+0x2de>
2ffd817a:	0726      	lsls	r6, r4, #28
2ffd817c:	d501      	bpl.n	2ffd8182 <bl2_el3_plat_arch_setup+0x36e>
2ffd817e:	4829      	ldr	r0, [pc, #164]	; (2ffd8224 <bl2_el3_plat_arch_setup+0x410>)
2ffd8180:	e7b7      	b.n	2ffd80f2 <bl2_el3_plat_arch_setup+0x2de>
2ffd8182:	05e5      	lsls	r5, r4, #23
2ffd8184:	d501      	bpl.n	2ffd818a <bl2_el3_plat_arch_setup+0x376>
2ffd8186:	4828      	ldr	r0, [pc, #160]	; (2ffd8228 <bl2_el3_plat_arch_setup+0x414>)
2ffd8188:	e7b3      	b.n	2ffd80f2 <bl2_el3_plat_arch_setup+0x2de>
2ffd818a:	05a0      	lsls	r0, r4, #22
2ffd818c:	d501      	bpl.n	2ffd8192 <bl2_el3_plat_arch_setup+0x37e>
2ffd818e:	4827      	ldr	r0, [pc, #156]	; (2ffd822c <bl2_el3_plat_arch_setup+0x418>)
2ffd8190:	e7af      	b.n	2ffd80f2 <bl2_el3_plat_arch_setup+0x2de>
2ffd8192:	04a1      	lsls	r1, r4, #18
2ffd8194:	d501      	bpl.n	2ffd819a <bl2_el3_plat_arch_setup+0x386>
2ffd8196:	4826      	ldr	r0, [pc, #152]	; (2ffd8230 <bl2_el3_plat_arch_setup+0x41c>)
2ffd8198:	e7ab      	b.n	2ffd80f2 <bl2_el3_plat_arch_setup+0x2de>
2ffd819a:	0462      	lsls	r2, r4, #17
2ffd819c:	d501      	bpl.n	2ffd81a2 <bl2_el3_plat_arch_setup+0x38e>
2ffd819e:	4825      	ldr	r0, [pc, #148]	; (2ffd8234 <bl2_el3_plat_arch_setup+0x420>)
2ffd81a0:	e7a7      	b.n	2ffd80f2 <bl2_el3_plat_arch_setup+0x2de>
2ffd81a2:	b10b      	cbz	r3, 2ffd81a8 <bl2_el3_plat_arch_setup+0x394>
2ffd81a4:	4824      	ldr	r0, [pc, #144]	; (2ffd8238 <bl2_el3_plat_arch_setup+0x424>)
2ffd81a6:	e7a4      	b.n	2ffd80f2 <bl2_el3_plat_arch_setup+0x2de>
2ffd81a8:	06e3      	lsls	r3, r4, #27
2ffd81aa:	bf4c      	ite	mi
2ffd81ac:	4823      	ldrmi	r0, [pc, #140]	; (2ffd823c <bl2_el3_plat_arch_setup+0x428>)
2ffd81ae:	4824      	ldrpl	r0, [pc, #144]	; (2ffd8240 <bl2_el3_plat_arch_setup+0x42c>)
2ffd81b0:	e79f      	b.n	2ffd80f2 <bl2_el3_plat_arch_setup+0x2de>
2ffd81b2:	9904      	ldr	r1, [sp, #16]
2ffd81b4:	4823      	ldr	r0, [pc, #140]	; (2ffd8244 <bl2_el3_plat_arch_setup+0x430>)
2ffd81b6:	f004 fc99 	bl	2ffdcaec <tf_log>
2ffd81ba:	f009 f9e9 	bl	2ffe1590 <dt_pmic_status>
2ffd81be:	2800      	cmp	r0, #0
2ffd81c0:	dd03      	ble.n	2ffd81ca <bl2_el3_plat_arch_setup+0x3b6>
2ffd81c2:	f009 faeb 	bl	2ffe179c <initialize_pmic>
2ffd81c6:	f009 fafd 	bl	2ffe17c4 <print_pmic_info_and_debug>
2ffd81ca:	f7ff fc27 	bl	2ffd7a1c <stm32mp_io_setup>
2ffd81ce:	b00a      	add	sp, #40	; 0x28
2ffd81d0:	bd70      	pop	{r4, r5, r6, pc}
2ffd81d2:	bf00      	nop
2ffd81d4:	2ffe8dec 	.word	0x2ffe8dec
2ffd81d8:	2ffe3a38 	.word	0x2ffe3a38
2ffd81dc:	2ffe3a27 	.word	0x2ffe3a27
2ffd81e0:	2ffe3a2e 	.word	0x2ffe3a2e
2ffd81e4:	2ffe3a44 	.word	0x2ffe3a44
2ffd81e8:	2ffe3a60 	.word	0x2ffe3a60
2ffd81ec:	2ffe3d1c 	.word	0x2ffe3d1c
2ffd81f0:	2ffe3a7a 	.word	0x2ffe3a7a
2ffd81f4:	2ffe3a7f 	.word	0x2ffe3a7f
2ffd81f8:	2ffe3a9c 	.word	0x2ffe3a9c
2ffd81fc:	2ffe3cb1 	.word	0x2ffe3cb1
2ffd8200:	2ffe3cbf 	.word	0x2ffe3cbf
2ffd8204:	2ffe3ab3 	.word	0x2ffe3ab3
2ffd8208:	2ffe3aca 	.word	0x2ffe3aca
2ffd820c:	2ffe3ae6 	.word	0x2ffe3ae6
2ffd8210:	2ffe3b00 	.word	0x2ffe3b00
2ffd8214:	2ffe3b1d 	.word	0x2ffe3b1d
2ffd8218:	2ffe3b3a 	.word	0x2ffe3b3a
2ffd821c:	2ffe3b67 	.word	0x2ffe3b67
2ffd8220:	2ffe3b93 	.word	0x2ffe3b93
2ffd8224:	2ffe3bc0 	.word	0x2ffe3bc0
2ffd8228:	2ffe3be8 	.word	0x2ffe3be8
2ffd822c:	2ffe3c04 	.word	0x2ffe3c04
2ffd8230:	2ffe3c20 	.word	0x2ffe3c20
2ffd8234:	2ffe3c3a 	.word	0x2ffe3c3a
2ffd8238:	2ffe3c54 	.word	0x2ffe3c54
2ffd823c:	2ffe3c6c 	.word	0x2ffe3c6c
2ffd8240:	2ffe3c93 	.word	0x2ffe3c93
2ffd8244:	2ffe3ce6 	.word	0x2ffe3ce6

2ffd8248 <bl2_plat_handle_post_image_load>:
2ffd8248:	b538      	push	{r3, r4, r5, lr}
2ffd824a:	4605      	mov	r5, r0
2ffd824c:	f004 f9f0 	bl	2ffdc630 <get_bl_mem_params_node>
2ffd8250:	4604      	mov	r4, r0
2ffd8252:	b920      	cbnz	r0, 2ffd825e <bl2_plat_handle_post_image_load+0x16>
2ffd8254:	4807      	ldr	r0, [pc, #28]	; (2ffd8274 <bl2_plat_handle_post_image_load+0x2c>)
2ffd8256:	f240 2163 	movw	r1, #611	; 0x263
2ffd825a:	f00a fe5b 	bl	2ffe2f14 <__assert>
2ffd825e:	f004 fee1 	bl	2ffdd024 <stm32mp_delete_loaded_header>
2ffd8262:	2d05      	cmp	r5, #5
2ffd8264:	d103      	bne.n	2ffd826e <bl2_plat_handle_post_image_load+0x26>
2ffd8266:	6961      	ldr	r1, [r4, #20]
2ffd8268:	68e0      	ldr	r0, [r4, #12]
2ffd826a:	f7fe e8a0 	blx	2ffd63ac <flush_dcache_range>
2ffd826e:	2000      	movs	r0, #0
2ffd8270:	bd38      	pop	{r3, r4, r5, pc}
2ffd8272:	bf00      	nop
2ffd8274:	2ffe39d0 	.word	0x2ffe39d0

2ffd8278 <auth_get_param.isra.0>:
2ffd8278:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffd827a:	469c      	mov	ip, r3
2ffd827c:	680d      	ldr	r5, [r1, #0]
2ffd827e:	b1c5      	cbz	r5, 2ffd82b2 <auth_get_param.isra.0+0x3a>
2ffd8280:	6807      	ldr	r7, [r0, #0]
2ffd8282:	2400      	movs	r4, #0
2ffd8284:	592e      	ldr	r6, [r5, r4]
2ffd8286:	eb05 0e04 	add.w	lr, r5, r4
2ffd828a:	6833      	ldr	r3, [r6, #0]
2ffd828c:	429f      	cmp	r7, r3
2ffd828e:	d10d      	bne.n	2ffd82ac <auth_get_param.isra.0+0x34>
2ffd8290:	6876      	ldr	r6, [r6, #4]
2ffd8292:	6843      	ldr	r3, [r0, #4]
2ffd8294:	42b3      	cmp	r3, r6
2ffd8296:	d109      	bne.n	2ffd82ac <auth_get_param.isra.0+0x34>
2ffd8298:	f8de 0004 	ldr.w	r0, [lr, #4]
2ffd829c:	6010      	str	r0, [r2, #0]
2ffd829e:	2000      	movs	r0, #0
2ffd82a0:	680a      	ldr	r2, [r1, #0]
2ffd82a2:	4414      	add	r4, r2
2ffd82a4:	68a2      	ldr	r2, [r4, #8]
2ffd82a6:	f8cc 2000 	str.w	r2, [ip]
2ffd82aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffd82ac:	340c      	adds	r4, #12
2ffd82ae:	2c30      	cmp	r4, #48	; 0x30
2ffd82b0:	d1e8      	bne.n	2ffd8284 <auth_get_param.isra.0+0xc>
2ffd82b2:	2001      	movs	r0, #1
2ffd82b4:	e7f9      	b.n	2ffd82aa <auth_get_param.isra.0+0x32>

2ffd82b6 <plat_set_nv_ctr2>:
2ffd82b6:	4611      	mov	r1, r2
2ffd82b8:	f000 bc00 	b.w	2ffd8abc <plat_set_nv_ctr>

2ffd82bc <auth_mod_get_parent_id>:
2ffd82bc:	b508      	push	{r3, lr}
2ffd82be:	b921      	cbnz	r1, 2ffd82ca <auth_mod_get_parent_id+0xe>
2ffd82c0:	480b      	ldr	r0, [pc, #44]	; (2ffd82f0 <auth_mod_get_parent_id+0x34>)
2ffd82c2:	f240 1133 	movw	r1, #307	; 0x133
2ffd82c6:	f00a fe25 	bl	2ffe2f14 <__assert>
2ffd82ca:	4b0a      	ldr	r3, [pc, #40]	; (2ffd82f4 <auth_mod_get_parent_id+0x38>)
2ffd82cc:	681b      	ldr	r3, [r3, #0]
2ffd82ce:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
2ffd82d2:	689b      	ldr	r3, [r3, #8]
2ffd82d4:	b91b      	cbnz	r3, 2ffd82de <auth_mod_get_parent_id+0x22>
2ffd82d6:	2001      	movs	r0, #1
2ffd82d8:	2300      	movs	r3, #0
2ffd82da:	600b      	str	r3, [r1, #0]
2ffd82dc:	bd08      	pop	{r3, pc}
2ffd82de:	681b      	ldr	r3, [r3, #0]
2ffd82e0:	4a05      	ldr	r2, [pc, #20]	; (2ffd82f8 <auth_mod_get_parent_id+0x3c>)
2ffd82e2:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
2ffd82e6:	f010 0001 	ands.w	r0, r0, #1
2ffd82ea:	d1f4      	bne.n	2ffd82d6 <auth_mod_get_parent_id+0x1a>
2ffd82ec:	600b      	str	r3, [r1, #0]
2ffd82ee:	e7f5      	b.n	2ffd82dc <auth_mod_get_parent_id+0x20>
2ffd82f0:	2ffe3f8e 	.word	0x2ffe3f8e
2ffd82f4:	2ffe411c 	.word	0x2ffe411c
2ffd82f8:	2ffea328 	.word	0x2ffea328

2ffd82fc <auth_mod_init>:
2ffd82fc:	b508      	push	{r3, lr}
2ffd82fe:	4b07      	ldr	r3, [pc, #28]	; (2ffd831c <auth_mod_init+0x20>)
2ffd8300:	681b      	ldr	r3, [r3, #0]
2ffd8302:	b923      	cbnz	r3, 2ffd830e <auth_mod_init+0x12>
2ffd8304:	4806      	ldr	r0, [pc, #24]	; (2ffd8320 <auth_mod_init+0x24>)
2ffd8306:	f44f 71a7 	mov.w	r1, #334	; 0x14e
2ffd830a:	f00a fe03 	bl	2ffe2f14 <__assert>
2ffd830e:	f000 f94b 	bl	2ffd85a8 <crypto_mod_init>
2ffd8312:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffd8316:	f000 b9bb 	b.w	2ffd8690 <img_parser_init>
2ffd831a:	bf00      	nop
2ffd831c:	2ffe411c 	.word	0x2ffe411c
2ffd8320:	2ffe3f8e 	.word	0x2ffe3f8e

2ffd8324 <auth_mod_verify_img>:
2ffd8324:	4b9c      	ldr	r3, [pc, #624]	; (2ffd8598 <auth_mod_verify_img+0x274>)
2ffd8326:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffd832a:	b091      	sub	sp, #68	; 0x44
2ffd832c:	681b      	ldr	r3, [r3, #0]
2ffd832e:	460f      	mov	r7, r1
2ffd8330:	4690      	mov	r8, r2
2ffd8332:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
2ffd8336:	6860      	ldr	r0, [r4, #4]
2ffd8338:	f000 f9f4 	bl	2ffd8724 <img_parser_check_integrity>
2ffd833c:	4605      	mov	r5, r0
2ffd833e:	2800      	cmp	r0, #0
2ffd8340:	f040 809e 	bne.w	2ffd8480 <auth_mod_verify_img+0x15c>
2ffd8344:	68e3      	ldr	r3, [r4, #12]
2ffd8346:	b90b      	cbnz	r3, 2ffd834c <auth_mod_verify_img+0x28>
2ffd8348:	2501      	movs	r5, #1
2ffd834a:	e099      	b.n	2ffd8480 <auth_mod_verify_img+0x15c>
2ffd834c:	4682      	mov	sl, r0
2ffd834e:	68e3      	ldr	r3, [r4, #12]
2ffd8350:	eb03 060a 	add.w	r6, r3, sl
2ffd8354:	f853 300a 	ldr.w	r3, [r3, sl]
2ffd8358:	2b03      	cmp	r3, #3
2ffd835a:	d8f5      	bhi.n	2ffd8348 <auth_mod_verify_img+0x24>
2ffd835c:	e8df f013 	tbh	[pc, r3, lsl #1]
2ffd8360:	0004007f 	.word	0x0004007f
2ffd8364:	00af0021 	.word	0x00af0021
2ffd8368:	68a1      	ldr	r1, [r4, #8]
2ffd836a:	ab0f      	add	r3, sp, #60	; 0x3c
2ffd836c:	68b0      	ldr	r0, [r6, #8]
2ffd836e:	aa0d      	add	r2, sp, #52	; 0x34
2ffd8370:	3110      	adds	r1, #16
2ffd8372:	f7ff ff81 	bl	2ffd8278 <auth_get_param.isra.0>
2ffd8376:	b990      	cbnz	r0, 2ffd839e <auth_mod_verify_img+0x7a>
2ffd8378:	ab0e      	add	r3, sp, #56	; 0x38
2ffd837a:	463a      	mov	r2, r7
2ffd837c:	9301      	str	r3, [sp, #4]
2ffd837e:	ab0c      	add	r3, sp, #48	; 0x30
2ffd8380:	9300      	str	r3, [sp, #0]
2ffd8382:	4643      	mov	r3, r8
2ffd8384:	6871      	ldr	r1, [r6, #4]
2ffd8386:	6860      	ldr	r0, [r4, #4]
2ffd8388:	f000 f9f0 	bl	2ffd876c <img_parser_get_auth_param>
2ffd838c:	b938      	cbnz	r0, 2ffd839e <auth_mod_verify_img+0x7a>
2ffd838e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
2ffd8390:	9a0d      	ldr	r2, [sp, #52]	; 0x34
2ffd8392:	990e      	ldr	r1, [sp, #56]	; 0x38
2ffd8394:	980c      	ldr	r0, [sp, #48]	; 0x30
2ffd8396:	f000 f95f 	bl	2ffd8658 <crypto_mod_verify_hash>
2ffd839a:	2800      	cmp	r0, #0
2ffd839c:	d05f      	beq.n	2ffd845e <auth_mod_verify_img+0x13a>
2ffd839e:	4605      	mov	r5, r0
2ffd83a0:	e06e      	b.n	2ffd8480 <auth_mod_verify_img+0x15c>
2ffd83a2:	2300      	movs	r3, #0
2ffd83a4:	463a      	mov	r2, r7
2ffd83a6:	930f      	str	r3, [sp, #60]	; 0x3c
2ffd83a8:	ab0b      	add	r3, sp, #44	; 0x2c
2ffd83aa:	9301      	str	r3, [sp, #4]
2ffd83ac:	ab07      	add	r3, sp, #28
2ffd83ae:	9300      	str	r3, [sp, #0]
2ffd83b0:	4643      	mov	r3, r8
2ffd83b2:	6931      	ldr	r1, [r6, #16]
2ffd83b4:	6860      	ldr	r0, [r4, #4]
2ffd83b6:	f000 f9d9 	bl	2ffd876c <img_parser_get_auth_param>
2ffd83ba:	2800      	cmp	r0, #0
2ffd83bc:	d1ef      	bne.n	2ffd839e <auth_mod_verify_img+0x7a>
2ffd83be:	ab0d      	add	r3, sp, #52	; 0x34
2ffd83c0:	463a      	mov	r2, r7
2ffd83c2:	9301      	str	r3, [sp, #4]
2ffd83c4:	ab09      	add	r3, sp, #36	; 0x24
2ffd83c6:	9300      	str	r3, [sp, #0]
2ffd83c8:	4643      	mov	r3, r8
2ffd83ca:	68b1      	ldr	r1, [r6, #8]
2ffd83cc:	6860      	ldr	r0, [r4, #4]
2ffd83ce:	f000 f9cd 	bl	2ffd876c <img_parser_get_auth_param>
2ffd83d2:	2800      	cmp	r0, #0
2ffd83d4:	d1e3      	bne.n	2ffd839e <auth_mod_verify_img+0x7a>
2ffd83d6:	ab0e      	add	r3, sp, #56	; 0x38
2ffd83d8:	463a      	mov	r2, r7
2ffd83da:	9301      	str	r3, [sp, #4]
2ffd83dc:	ab0a      	add	r3, sp, #40	; 0x28
2ffd83de:	9300      	str	r3, [sp, #0]
2ffd83e0:	4643      	mov	r3, r8
2ffd83e2:	68f1      	ldr	r1, [r6, #12]
2ffd83e4:	6860      	ldr	r0, [r4, #4]
2ffd83e6:	f000 f9c1 	bl	2ffd876c <img_parser_get_auth_param>
2ffd83ea:	2800      	cmp	r0, #0
2ffd83ec:	d1d7      	bne.n	2ffd839e <auth_mod_verify_img+0x7a>
2ffd83ee:	68a1      	ldr	r1, [r4, #8]
2ffd83f0:	f10d 0930 	add.w	r9, sp, #48	; 0x30
2ffd83f4:	6870      	ldr	r0, [r6, #4]
2ffd83f6:	f10d 0b20 	add.w	fp, sp, #32
2ffd83fa:	2900      	cmp	r1, #0
2ffd83fc:	d044      	beq.n	2ffd8488 <auth_mod_verify_img+0x164>
2ffd83fe:	464b      	mov	r3, r9
2ffd8400:	465a      	mov	r2, fp
2ffd8402:	3110      	adds	r1, #16
2ffd8404:	f7ff ff38 	bl	2ffd8278 <auth_get_param.isra.0>
2ffd8408:	2800      	cmp	r0, #0
2ffd840a:	d1c8      	bne.n	2ffd839e <auth_mod_verify_img+0x7a>
2ffd840c:	9b08      	ldr	r3, [sp, #32]
2ffd840e:	9305      	str	r3, [sp, #20]
2ffd8410:	9b0c      	ldr	r3, [sp, #48]	; 0x30
2ffd8412:	9304      	str	r3, [sp, #16]
2ffd8414:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
2ffd8416:	079a      	lsls	r2, r3, #30
2ffd8418:	d042      	beq.n	2ffd84a0 <auth_mod_verify_img+0x17c>
2ffd841a:	f8cd 9004 	str.w	r9, [sp, #4]
2ffd841e:	4643      	mov	r3, r8
2ffd8420:	f8cd b000 	str.w	fp, [sp]
2ffd8424:	463a      	mov	r2, r7
2ffd8426:	6871      	ldr	r1, [r6, #4]
2ffd8428:	6860      	ldr	r0, [r4, #4]
2ffd842a:	f000 f99f 	bl	2ffd876c <img_parser_get_auth_param>
2ffd842e:	2800      	cmp	r0, #0
2ffd8430:	d1b5      	bne.n	2ffd839e <auth_mod_verify_img+0x7a>
2ffd8432:	9b0c      	ldr	r3, [sp, #48]	; 0x30
2ffd8434:	9a09      	ldr	r2, [sp, #36]	; 0x24
2ffd8436:	9303      	str	r3, [sp, #12]
2ffd8438:	9b08      	ldr	r3, [sp, #32]
2ffd843a:	990b      	ldr	r1, [sp, #44]	; 0x2c
2ffd843c:	9302      	str	r3, [sp, #8]
2ffd843e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2ffd8440:	9807      	ldr	r0, [sp, #28]
2ffd8442:	9301      	str	r3, [sp, #4]
2ffd8444:	9b0a      	ldr	r3, [sp, #40]	; 0x28
2ffd8446:	9300      	str	r3, [sp, #0]
2ffd8448:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2ffd844a:	f000 f8cf 	bl	2ffd85ec <crypto_mod_verify_signature>
2ffd844e:	2800      	cmp	r0, #0
2ffd8450:	d1a5      	bne.n	2ffd839e <auth_mod_verify_img+0x7a>
2ffd8452:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
2ffd8454:	079b      	lsls	r3, r3, #30
2ffd8456:	d51e      	bpl.n	2ffd8496 <auth_mod_verify_img+0x172>
2ffd8458:	4850      	ldr	r0, [pc, #320]	; (2ffd859c <auth_mod_verify_img+0x278>)
2ffd845a:	f004 fb47 	bl	2ffdcaec <tf_log>
2ffd845e:	f10a 0a14 	add.w	sl, sl, #20
2ffd8462:	f1ba 0f50 	cmp.w	sl, #80	; 0x50
2ffd8466:	f47f af72 	bne.w	2ffd834e <auth_mod_verify_img+0x2a>
2ffd846a:	6923      	ldr	r3, [r4, #16]
2ffd846c:	2b00      	cmp	r3, #0
2ffd846e:	d170      	bne.n	2ffd8552 <auth_mod_verify_img+0x22e>
2ffd8470:	6821      	ldr	r1, [r4, #0]
2ffd8472:	4a4b      	ldr	r2, [pc, #300]	; (2ffd85a0 <auth_mod_verify_img+0x27c>)
2ffd8474:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
2ffd8478:	f043 0301 	orr.w	r3, r3, #1
2ffd847c:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
2ffd8480:	4628      	mov	r0, r5
2ffd8482:	b011      	add	sp, #68	; 0x44
2ffd8484:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffd8488:	6840      	ldr	r0, [r0, #4]
2ffd848a:	ab0f      	add	r3, sp, #60	; 0x3c
2ffd848c:	464a      	mov	r2, r9
2ffd848e:	4659      	mov	r1, fp
2ffd8490:	f000 fac0 	bl	2ffd8a14 <plat_get_rotpk_info>
2ffd8494:	e7b8      	b.n	2ffd8408 <auth_mod_verify_img+0xe4>
2ffd8496:	9b04      	ldr	r3, [sp, #16]
2ffd8498:	9a05      	ldr	r2, [sp, #20]
2ffd849a:	990c      	ldr	r1, [sp, #48]	; 0x30
2ffd849c:	9808      	ldr	r0, [sp, #32]
2ffd849e:	e77a      	b.n	2ffd8396 <auth_mod_verify_img+0x72>
2ffd84a0:	9b04      	ldr	r3, [sp, #16]
2ffd84a2:	9a09      	ldr	r2, [sp, #36]	; 0x24
2ffd84a4:	9303      	str	r3, [sp, #12]
2ffd84a6:	9b05      	ldr	r3, [sp, #20]
2ffd84a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
2ffd84aa:	9302      	str	r3, [sp, #8]
2ffd84ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2ffd84ae:	9807      	ldr	r0, [sp, #28]
2ffd84b0:	9301      	str	r3, [sp, #4]
2ffd84b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
2ffd84b4:	9300      	str	r3, [sp, #0]
2ffd84b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2ffd84b8:	f000 f898 	bl	2ffd85ec <crypto_mod_verify_signature>
2ffd84bc:	e76d      	b.n	2ffd839a <auth_mod_verify_img+0x76>
2ffd84be:	2300      	movs	r3, #0
2ffd84c0:	463a      	mov	r2, r7
2ffd84c2:	930d      	str	r3, [sp, #52]	; 0x34
2ffd84c4:	ab0e      	add	r3, sp, #56	; 0x38
2ffd84c6:	9301      	str	r3, [sp, #4]
2ffd84c8:	ab0d      	add	r3, sp, #52	; 0x34
2ffd84ca:	9300      	str	r3, [sp, #0]
2ffd84cc:	4643      	mov	r3, r8
2ffd84ce:	6871      	ldr	r1, [r6, #4]
2ffd84d0:	6860      	ldr	r0, [r4, #4]
2ffd84d2:	f000 f94b 	bl	2ffd876c <img_parser_get_auth_param>
2ffd84d6:	2800      	cmp	r0, #0
2ffd84d8:	f47f af61 	bne.w	2ffd839e <auth_mod_verify_img+0x7a>
2ffd84dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2ffd84de:	b91b      	cbnz	r3, 2ffd84e8 <auth_mod_verify_img+0x1c4>
2ffd84e0:	4830      	ldr	r0, [pc, #192]	; (2ffd85a4 <auth_mod_verify_img+0x280>)
2ffd84e2:	21f9      	movs	r1, #249	; 0xf9
2ffd84e4:	f00a fd16 	bl	2ffe2f14 <__assert>
2ffd84e8:	781a      	ldrb	r2, [r3, #0]
2ffd84ea:	2a02      	cmp	r2, #2
2ffd84ec:	f47f af2c 	bne.w	2ffd8348 <auth_mod_verify_img+0x24>
2ffd84f0:	f993 2001 	ldrsb.w	r2, [r3, #1]
2ffd84f4:	7859      	ldrb	r1, [r3, #1]
2ffd84f6:	2a00      	cmp	r2, #0
2ffd84f8:	f6ff af26 	blt.w	2ffd8348 <auth_mod_verify_img+0x24>
2ffd84fc:	2904      	cmp	r1, #4
2ffd84fe:	f63f af23 	bhi.w	2ffd8348 <auth_mod_verify_img+0x24>
2ffd8502:	f993 2002 	ldrsb.w	r2, [r3, #2]
2ffd8506:	2a00      	cmp	r2, #0
2ffd8508:	f6ff af1e 	blt.w	2ffd8348 <auth_mod_verify_img+0x24>
2ffd850c:	1c9a      	adds	r2, r3, #2
2ffd850e:	f1c3 23ff 	rsb	r3, r3, #4278255360	; 0xff00ff00
2ffd8512:	f503 037f 	add.w	r3, r3, #16711680	; 0xff0000
2ffd8516:	4681      	mov	r9, r0
2ffd8518:	33fe      	adds	r3, #254	; 0xfe
2ffd851a:	18d0      	adds	r0, r2, r3
2ffd851c:	4288      	cmp	r0, r1
2ffd851e:	d313      	bcc.n	2ffd8548 <auth_mod_verify_img+0x224>
2ffd8520:	68b3      	ldr	r3, [r6, #8]
2ffd8522:	a90f      	add	r1, sp, #60	; 0x3c
2ffd8524:	6858      	ldr	r0, [r3, #4]
2ffd8526:	f000 fabb 	bl	2ffd8aa0 <plat_get_nv_ctr>
2ffd852a:	2800      	cmp	r0, #0
2ffd852c:	f47f af37 	bne.w	2ffd839e <auth_mod_verify_img+0x7a>
2ffd8530:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
2ffd8532:	4599      	cmp	r9, r3
2ffd8534:	f4ff af08 	bcc.w	2ffd8348 <auth_mod_verify_img+0x24>
2ffd8538:	d991      	bls.n	2ffd845e <auth_mod_verify_img+0x13a>
2ffd853a:	68b3      	ldr	r3, [r6, #8]
2ffd853c:	464a      	mov	r2, r9
2ffd853e:	4621      	mov	r1, r4
2ffd8540:	6858      	ldr	r0, [r3, #4]
2ffd8542:	f7ff feb8 	bl	2ffd82b6 <plat_set_nv_ctr2>
2ffd8546:	e728      	b.n	2ffd839a <auth_mod_verify_img+0x76>
2ffd8548:	f812 0b01 	ldrb.w	r0, [r2], #1
2ffd854c:	ea40 2909 	orr.w	r9, r0, r9, lsl #8
2ffd8550:	e7e3      	b.n	2ffd851a <auth_mod_verify_img+0x1f6>
2ffd8552:	2600      	movs	r6, #0
2ffd8554:	f10d 093c 	add.w	r9, sp, #60	; 0x3c
2ffd8558:	f10d 0a38 	add.w	sl, sp, #56	; 0x38
2ffd855c:	6923      	ldr	r3, [r4, #16]
2ffd855e:	5999      	ldr	r1, [r3, r6]
2ffd8560:	b1b1      	cbz	r1, 2ffd8590 <auth_mod_verify_img+0x26c>
2ffd8562:	f8cd 9004 	str.w	r9, [sp, #4]
2ffd8566:	4643      	mov	r3, r8
2ffd8568:	f8cd a000 	str.w	sl, [sp]
2ffd856c:	463a      	mov	r2, r7
2ffd856e:	6860      	ldr	r0, [r4, #4]
2ffd8570:	f000 f8fc 	bl	2ffd876c <img_parser_get_auth_param>
2ffd8574:	2800      	cmp	r0, #0
2ffd8576:	f47f af12 	bne.w	2ffd839e <auth_mod_verify_img+0x7a>
2ffd857a:	6923      	ldr	r3, [r4, #16]
2ffd857c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
2ffd857e:	4433      	add	r3, r6
2ffd8580:	6899      	ldr	r1, [r3, #8]
2ffd8582:	4291      	cmp	r1, r2
2ffd8584:	f4ff aee0 	bcc.w	2ffd8348 <auth_mod_verify_img+0x24>
2ffd8588:	990e      	ldr	r1, [sp, #56]	; 0x38
2ffd858a:	6858      	ldr	r0, [r3, #4]
2ffd858c:	f00a fcea 	bl	2ffe2f64 <memcpy>
2ffd8590:	360c      	adds	r6, #12
2ffd8592:	2e30      	cmp	r6, #48	; 0x30
2ffd8594:	d1e2      	bne.n	2ffd855c <auth_mod_verify_img+0x238>
2ffd8596:	e76b      	b.n	2ffd8470 <auth_mod_verify_img+0x14c>
2ffd8598:	2ffe411c 	.word	0x2ffe411c
2ffd859c:	2ffe3fa6 	.word	0x2ffe3fa6
2ffd85a0:	2ffea328 	.word	0x2ffea328
2ffd85a4:	2ffe3f8e 	.word	0x2ffe3f8e

2ffd85a8 <crypto_mod_init>:
2ffd85a8:	4b0d      	ldr	r3, [pc, #52]	; (2ffd85e0 <crypto_mod_init+0x38>)
2ffd85aa:	b510      	push	{r4, lr}
2ffd85ac:	681c      	ldr	r4, [r3, #0]
2ffd85ae:	b91c      	cbnz	r4, 2ffd85b8 <crypto_mod_init+0x10>
2ffd85b0:	212f      	movs	r1, #47	; 0x2f
2ffd85b2:	480c      	ldr	r0, [pc, #48]	; (2ffd85e4 <crypto_mod_init+0x3c>)
2ffd85b4:	f00a fcae 	bl	2ffe2f14 <__assert>
2ffd85b8:	685a      	ldr	r2, [r3, #4]
2ffd85ba:	b90a      	cbnz	r2, 2ffd85c0 <crypto_mod_init+0x18>
2ffd85bc:	2130      	movs	r1, #48	; 0x30
2ffd85be:	e7f8      	b.n	2ffd85b2 <crypto_mod_init+0xa>
2ffd85c0:	6899      	ldr	r1, [r3, #8]
2ffd85c2:	b909      	cbnz	r1, 2ffd85c8 <crypto_mod_init+0x20>
2ffd85c4:	2131      	movs	r1, #49	; 0x31
2ffd85c6:	e7f4      	b.n	2ffd85b2 <crypto_mod_init+0xa>
2ffd85c8:	68db      	ldr	r3, [r3, #12]
2ffd85ca:	b90b      	cbnz	r3, 2ffd85d0 <crypto_mod_init+0x28>
2ffd85cc:	2132      	movs	r1, #50	; 0x32
2ffd85ce:	e7f0      	b.n	2ffd85b2 <crypto_mod_init+0xa>
2ffd85d0:	4790      	blx	r2
2ffd85d2:	4805      	ldr	r0, [pc, #20]	; (2ffd85e8 <crypto_mod_init+0x40>)
2ffd85d4:	4621      	mov	r1, r4
2ffd85d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffd85da:	f004 ba87 	b.w	2ffdcaec <tf_log>
2ffd85de:	bf00      	nop
2ffd85e0:	2ffe41c0 	.word	0x2ffe41c0
2ffd85e4:	2ffe3fe8 	.word	0x2ffe3fe8
2ffd85e8:	2ffe4002 	.word	0x2ffe4002

2ffd85ec <crypto_mod_verify_signature>:
2ffd85ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffd85f0:	f8dd 8020 	ldr.w	r8, [sp, #32]
2ffd85f4:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
2ffd85f8:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
2ffd85fc:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
2ffd85fe:	b918      	cbnz	r0, 2ffd8608 <crypto_mod_verify_signature+0x1c>
2ffd8600:	2148      	movs	r1, #72	; 0x48
2ffd8602:	4813      	ldr	r0, [pc, #76]	; (2ffd8650 <crypto_mod_verify_signature+0x64>)
2ffd8604:	f00a fc86 	bl	2ffe2f14 <__assert>
2ffd8608:	b909      	cbnz	r1, 2ffd860e <crypto_mod_verify_signature+0x22>
2ffd860a:	2149      	movs	r1, #73	; 0x49
2ffd860c:	e7f9      	b.n	2ffd8602 <crypto_mod_verify_signature+0x16>
2ffd860e:	b90a      	cbnz	r2, 2ffd8614 <crypto_mod_verify_signature+0x28>
2ffd8610:	214a      	movs	r1, #74	; 0x4a
2ffd8612:	e7f6      	b.n	2ffd8602 <crypto_mod_verify_signature+0x16>
2ffd8614:	b90b      	cbnz	r3, 2ffd861a <crypto_mod_verify_signature+0x2e>
2ffd8616:	214b      	movs	r1, #75	; 0x4b
2ffd8618:	e7f3      	b.n	2ffd8602 <crypto_mod_verify_signature+0x16>
2ffd861a:	f1b8 0f00 	cmp.w	r8, #0
2ffd861e:	d101      	bne.n	2ffd8624 <crypto_mod_verify_signature+0x38>
2ffd8620:	214c      	movs	r1, #76	; 0x4c
2ffd8622:	e7ee      	b.n	2ffd8602 <crypto_mod_verify_signature+0x16>
2ffd8624:	f1be 0f00 	cmp.w	lr, #0
2ffd8628:	d101      	bne.n	2ffd862e <crypto_mod_verify_signature+0x42>
2ffd862a:	214d      	movs	r1, #77	; 0x4d
2ffd862c:	e7e9      	b.n	2ffd8602 <crypto_mod_verify_signature+0x16>
2ffd862e:	f1bc 0f00 	cmp.w	ip, #0
2ffd8632:	d101      	bne.n	2ffd8638 <crypto_mod_verify_signature+0x4c>
2ffd8634:	214e      	movs	r1, #78	; 0x4e
2ffd8636:	e7e4      	b.n	2ffd8602 <crypto_mod_verify_signature+0x16>
2ffd8638:	b90f      	cbnz	r7, 2ffd863e <crypto_mod_verify_signature+0x52>
2ffd863a:	214f      	movs	r1, #79	; 0x4f
2ffd863c:	e7e1      	b.n	2ffd8602 <crypto_mod_verify_signature+0x16>
2ffd863e:	4c05      	ldr	r4, [pc, #20]	; (2ffd8654 <crypto_mod_verify_signature+0x68>)
2ffd8640:	68a4      	ldr	r4, [r4, #8]
2ffd8642:	9401      	str	r4, [sp, #4]
2ffd8644:	46a4      	mov	ip, r4
2ffd8646:	b002      	add	sp, #8
2ffd8648:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffd864c:	4760      	bx	ip
2ffd864e:	bf00      	nop
2ffd8650:	2ffe3fe8 	.word	0x2ffe3fe8
2ffd8654:	2ffe41c0 	.word	0x2ffe41c0

2ffd8658 <crypto_mod_verify_hash>:
2ffd8658:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffd865a:	b918      	cbnz	r0, 2ffd8664 <crypto_mod_verify_hash+0xc>
2ffd865c:	2162      	movs	r1, #98	; 0x62
2ffd865e:	480a      	ldr	r0, [pc, #40]	; (2ffd8688 <crypto_mod_verify_hash+0x30>)
2ffd8660:	f00a fc58 	bl	2ffe2f14 <__assert>
2ffd8664:	b909      	cbnz	r1, 2ffd866a <crypto_mod_verify_hash+0x12>
2ffd8666:	2163      	movs	r1, #99	; 0x63
2ffd8668:	e7f9      	b.n	2ffd865e <crypto_mod_verify_hash+0x6>
2ffd866a:	b90a      	cbnz	r2, 2ffd8670 <crypto_mod_verify_hash+0x18>
2ffd866c:	2164      	movs	r1, #100	; 0x64
2ffd866e:	e7f6      	b.n	2ffd865e <crypto_mod_verify_hash+0x6>
2ffd8670:	b90b      	cbnz	r3, 2ffd8676 <crypto_mod_verify_hash+0x1e>
2ffd8672:	2165      	movs	r1, #101	; 0x65
2ffd8674:	e7f3      	b.n	2ffd865e <crypto_mod_verify_hash+0x6>
2ffd8676:	4c05      	ldr	r4, [pc, #20]	; (2ffd868c <crypto_mod_verify_hash+0x34>)
2ffd8678:	68e4      	ldr	r4, [r4, #12]
2ffd867a:	9401      	str	r4, [sp, #4]
2ffd867c:	46a4      	mov	ip, r4
2ffd867e:	b002      	add	sp, #8
2ffd8680:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffd8684:	4760      	bx	ip
2ffd8686:	bf00      	nop
2ffd8688:	2ffe3fe8 	.word	0x2ffe3fe8
2ffd868c:	2ffe41c0 	.word	0x2ffe41c0

2ffd8690 <img_parser_init>:
2ffd8690:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffd8694:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
2ffd8698:	4e1d      	ldr	r6, [pc, #116]	; (2ffd8710 <img_parser_init+0x80>)
2ffd869a:	2114      	movs	r1, #20
2ffd869c:	481d      	ldr	r0, [pc, #116]	; (2ffd8714 <img_parser_init+0x84>)
2ffd869e:	6032      	str	r2, [r6, #0]
2ffd86a0:	6072      	str	r2, [r6, #4]
2ffd86a2:	60b2      	str	r2, [r6, #8]
2ffd86a4:	4a1c      	ldr	r2, [pc, #112]	; (2ffd8718 <img_parser_init+0x88>)
2ffd86a6:	1a12      	subs	r2, r2, r0
2ffd86a8:	2a13      	cmp	r2, #19
2ffd86aa:	fbb2 f8f1 	udiv	r8, r2, r1
2ffd86ae:	d803      	bhi.n	2ffd86b8 <img_parser_init+0x28>
2ffd86b0:	212f      	movs	r1, #47	; 0x2f
2ffd86b2:	481a      	ldr	r0, [pc, #104]	; (2ffd871c <img_parser_init+0x8c>)
2ffd86b4:	f00a fc2e 	bl	2ffe2f14 <__assert>
2ffd86b8:	4d19      	ldr	r5, [pc, #100]	; (2ffd8720 <img_parser_init+0x90>)
2ffd86ba:	2400      	movs	r4, #0
2ffd86bc:	4689      	mov	r9, r1
2ffd86be:	6028      	str	r0, [r5, #0]
2ffd86c0:	4544      	cmp	r4, r8
2ffd86c2:	d101      	bne.n	2ffd86c8 <img_parser_init+0x38>
2ffd86c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffd86c8:	fb09 f704 	mul.w	r7, r9, r4
2ffd86cc:	682b      	ldr	r3, [r5, #0]
2ffd86ce:	19db      	adds	r3, r3, r7
2ffd86d0:	d101      	bne.n	2ffd86d6 <img_parser_init+0x46>
2ffd86d2:	211b      	movs	r1, #27
2ffd86d4:	e7ed      	b.n	2ffd86b2 <img_parser_init+0x22>
2ffd86d6:	689a      	ldr	r2, [r3, #8]
2ffd86d8:	b90a      	cbnz	r2, 2ffd86de <img_parser_init+0x4e>
2ffd86da:	211c      	movs	r1, #28
2ffd86dc:	e7e9      	b.n	2ffd86b2 <img_parser_init+0x22>
2ffd86de:	6858      	ldr	r0, [r3, #4]
2ffd86e0:	b908      	cbnz	r0, 2ffd86e6 <img_parser_init+0x56>
2ffd86e2:	211d      	movs	r1, #29
2ffd86e4:	e7e5      	b.n	2ffd86b2 <img_parser_init+0x22>
2ffd86e6:	68d8      	ldr	r0, [r3, #12]
2ffd86e8:	b908      	cbnz	r0, 2ffd86ee <img_parser_init+0x5e>
2ffd86ea:	211e      	movs	r1, #30
2ffd86ec:	e7e1      	b.n	2ffd86b2 <img_parser_init+0x22>
2ffd86ee:	691b      	ldr	r3, [r3, #16]
2ffd86f0:	b90b      	cbnz	r3, 2ffd86f6 <img_parser_init+0x66>
2ffd86f2:	211f      	movs	r1, #31
2ffd86f4:	e7dd      	b.n	2ffd86b2 <img_parser_init+0x22>
2ffd86f6:	4790      	blx	r2
2ffd86f8:	682b      	ldr	r3, [r5, #0]
2ffd86fa:	59db      	ldr	r3, [r3, r7]
2ffd86fc:	f856 2023 	ldr.w	r2, [r6, r3, lsl #2]
2ffd8700:	3201      	adds	r2, #1
2ffd8702:	d001      	beq.n	2ffd8708 <img_parser_init+0x78>
2ffd8704:	213b      	movs	r1, #59	; 0x3b
2ffd8706:	e7d4      	b.n	2ffd86b2 <img_parser_init+0x22>
2ffd8708:	f846 4023 	str.w	r4, [r6, r3, lsl #2]
2ffd870c:	3401      	adds	r4, #1
2ffd870e:	e7d7      	b.n	2ffd86c0 <img_parser_init+0x30>
2ffd8710:	2ffe8e08 	.word	0x2ffe8e08
2ffd8714:	2ffe6f30 	.word	0x2ffe6f30
2ffd8718:	2ffe6f44 	.word	0x2ffe6f44
2ffd871c:	2ffe401e 	.word	0x2ffe401e
2ffd8720:	2ffe8e04 	.word	0x2ffe8e04

2ffd8724 <img_parser_check_integrity>:
2ffd8724:	460b      	mov	r3, r1
2ffd8726:	4611      	mov	r1, r2
2ffd8728:	b510      	push	{r4, lr}
2ffd872a:	b91b      	cbnz	r3, 2ffd8734 <img_parser_check_integrity+0x10>
2ffd872c:	2148      	movs	r1, #72	; 0x48
2ffd872e:	480c      	ldr	r0, [pc, #48]	; (2ffd8760 <img_parser_check_integrity+0x3c>)
2ffd8730:	f00a fbf0 	bl	2ffe2f14 <__assert>
2ffd8734:	b90a      	cbnz	r2, 2ffd873a <img_parser_check_integrity+0x16>
2ffd8736:	2149      	movs	r1, #73	; 0x49
2ffd8738:	e7f9      	b.n	2ffd872e <img_parser_check_integrity+0xa>
2ffd873a:	b180      	cbz	r0, 2ffd875e <img_parser_check_integrity+0x3a>
2ffd873c:	4a09      	ldr	r2, [pc, #36]	; (2ffd8764 <img_parser_check_integrity+0x40>)
2ffd873e:	f852 2020 	ldr.w	r2, [r2, r0, lsl #2]
2ffd8742:	1c50      	adds	r0, r2, #1
2ffd8744:	d101      	bne.n	2ffd874a <img_parser_check_integrity+0x26>
2ffd8746:	2152      	movs	r1, #82	; 0x52
2ffd8748:	e7f1      	b.n	2ffd872e <img_parser_check_integrity+0xa>
2ffd874a:	4807      	ldr	r0, [pc, #28]	; (2ffd8768 <img_parser_check_integrity+0x44>)
2ffd874c:	2414      	movs	r4, #20
2ffd874e:	6800      	ldr	r0, [r0, #0]
2ffd8750:	fb04 0202 	mla	r2, r4, r2, r0
2ffd8754:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffd8758:	68d2      	ldr	r2, [r2, #12]
2ffd875a:	4618      	mov	r0, r3
2ffd875c:	4710      	bx	r2
2ffd875e:	bd10      	pop	{r4, pc}
2ffd8760:	2ffe401e 	.word	0x2ffe401e
2ffd8764:	2ffe8e08 	.word	0x2ffe8e08
2ffd8768:	2ffe8e04 	.word	0x2ffe8e04

2ffd876c <img_parser_get_auth_param>:
2ffd876c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffd8770:	4615      	mov	r5, r2
2ffd8772:	9f07      	ldr	r7, [sp, #28]
2ffd8774:	461a      	mov	r2, r3
2ffd8776:	9b06      	ldr	r3, [sp, #24]
2ffd8778:	460c      	mov	r4, r1
2ffd877a:	b919      	cbnz	r1, 2ffd8784 <img_parser_get_auth_param+0x18>
2ffd877c:	216a      	movs	r1, #106	; 0x6a
2ffd877e:	4816      	ldr	r0, [pc, #88]	; (2ffd87d8 <img_parser_get_auth_param+0x6c>)
2ffd8780:	f00a fbc8 	bl	2ffe2f14 <__assert>
2ffd8784:	b90d      	cbnz	r5, 2ffd878a <img_parser_get_auth_param+0x1e>
2ffd8786:	216b      	movs	r1, #107	; 0x6b
2ffd8788:	e7f9      	b.n	2ffd877e <img_parser_get_auth_param+0x12>
2ffd878a:	b90a      	cbnz	r2, 2ffd8790 <img_parser_get_auth_param+0x24>
2ffd878c:	216c      	movs	r1, #108	; 0x6c
2ffd878e:	e7f6      	b.n	2ffd877e <img_parser_get_auth_param+0x12>
2ffd8790:	b90b      	cbnz	r3, 2ffd8796 <img_parser_get_auth_param+0x2a>
2ffd8792:	216d      	movs	r1, #109	; 0x6d
2ffd8794:	e7f3      	b.n	2ffd877e <img_parser_get_auth_param+0x12>
2ffd8796:	b90f      	cbnz	r7, 2ffd879c <img_parser_get_auth_param+0x30>
2ffd8798:	216e      	movs	r1, #110	; 0x6e
2ffd879a:	e7f0      	b.n	2ffd877e <img_parser_get_auth_param+0x12>
2ffd879c:	b940      	cbnz	r0, 2ffd87b0 <img_parser_get_auth_param+0x44>
2ffd879e:	6809      	ldr	r1, [r1, #0]
2ffd87a0:	2901      	cmp	r1, #1
2ffd87a2:	d001      	beq.n	2ffd87a8 <img_parser_get_auth_param+0x3c>
2ffd87a4:	2172      	movs	r1, #114	; 0x72
2ffd87a6:	e7ea      	b.n	2ffd877e <img_parser_get_auth_param+0x12>
2ffd87a8:	601d      	str	r5, [r3, #0]
2ffd87aa:	603a      	str	r2, [r7, #0]
2ffd87ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffd87b0:	490a      	ldr	r1, [pc, #40]	; (2ffd87dc <img_parser_get_auth_param+0x70>)
2ffd87b2:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
2ffd87b6:	1c48      	adds	r0, r1, #1
2ffd87b8:	d101      	bne.n	2ffd87be <img_parser_get_auth_param+0x52>
2ffd87ba:	217a      	movs	r1, #122	; 0x7a
2ffd87bc:	e7df      	b.n	2ffd877e <img_parser_get_auth_param+0x12>
2ffd87be:	4808      	ldr	r0, [pc, #32]	; (2ffd87e0 <img_parser_get_auth_param+0x74>)
2ffd87c0:	2614      	movs	r6, #20
2ffd87c2:	6800      	ldr	r0, [r0, #0]
2ffd87c4:	9706      	str	r7, [sp, #24]
2ffd87c6:	fb06 0101 	mla	r1, r6, r1, r0
2ffd87ca:	4620      	mov	r0, r4
2ffd87cc:	690e      	ldr	r6, [r1, #16]
2ffd87ce:	4629      	mov	r1, r5
2ffd87d0:	46b4      	mov	ip, r6
2ffd87d2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffd87d6:	4760      	bx	ip
2ffd87d8:	2ffe401e 	.word	0x2ffe401e
2ffd87dc:	2ffe8e08 	.word	0x2ffe8e08
2ffd87e0:	2ffe8e04 	.word	0x2ffe8e04

2ffd87e4 <crypto_verify_hash>:
2ffd87e4:	2b20      	cmp	r3, #32
2ffd87e6:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffd87e8:	4604      	mov	r4, r0
2ffd87ea:	b089      	sub	sp, #36	; 0x24
2ffd87ec:	460f      	mov	r7, r1
2ffd87ee:	4616      	mov	r6, r2
2ffd87f0:	461d      	mov	r5, r3
2ffd87f2:	d117      	bne.n	2ffd8824 <crypto_verify_hash+0x40>
2ffd87f4:	2003      	movs	r0, #3
2ffd87f6:	f7fe fe59 	bl	2ffd74ac <stm32_hash_init>
2ffd87fa:	4620      	mov	r0, r4
2ffd87fc:	466a      	mov	r2, sp
2ffd87fe:	4639      	mov	r1, r7
2ffd8800:	f7fe fe48 	bl	2ffd7494 <stm32_hash_final_update>
2ffd8804:	4604      	mov	r4, r0
2ffd8806:	b940      	cbnz	r0, 2ffd881a <crypto_verify_hash+0x36>
2ffd8808:	462a      	mov	r2, r5
2ffd880a:	4631      	mov	r1, r6
2ffd880c:	4668      	mov	r0, sp
2ffd880e:	f00a fb9b 	bl	2ffe2f48 <memcmp>
2ffd8812:	1e04      	subs	r4, r0, #0
2ffd8814:	bf18      	it	ne
2ffd8816:	f06f 044f 	mvnne.w	r4, #79	; 0x4f
2ffd881a:	f004 fc03 	bl	2ffdd024 <stm32mp_delete_loaded_header>
2ffd881e:	4620      	mov	r0, r4
2ffd8820:	b009      	add	sp, #36	; 0x24
2ffd8822:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffd8824:	f06f 0415 	mvn.w	r4, #21
2ffd8828:	e7f7      	b.n	2ffd881a <crypto_verify_hash+0x36>
	...

2ffd882c <crypto_verify_signature>:
2ffd882c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffd8830:	b08d      	sub	sp, #52	; 0x34
2ffd8832:	469b      	mov	fp, r3
2ffd8834:	4606      	mov	r6, r0
2ffd8836:	9c16      	ldr	r4, [sp, #88]	; 0x58
2ffd8838:	460f      	mov	r7, r1
2ffd883a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
2ffd883e:	4615      	mov	r5, r2
2ffd8840:	f004 fbfe 	bl	2ffdd040 <stm32mp_get_loaded_header>
2ffd8844:	07a3      	lsls	r3, r4, #30
2ffd8846:	4680      	mov	r8, r0
2ffd8848:	d005      	beq.n	2ffd8856 <crypto_verify_signature+0x2a>
2ffd884a:	f06f 0415 	mvn.w	r4, #21
2ffd884e:	4620      	mov	r0, r4
2ffd8850:	b00d      	add	sp, #52	; 0x34
2ffd8852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffd8856:	9b17      	ldr	r3, [sp, #92]	; 0x5c
2ffd8858:	2b08      	cmp	r3, #8
2ffd885a:	d1f6      	bne.n	2ffd884a <crypto_verify_signature+0x1e>
2ffd885c:	6823      	ldr	r3, [r4, #0]
2ffd885e:	f8d4 a004 	ldr.w	sl, [r4, #4]
2ffd8862:	9303      	str	r3, [sp, #12]
2ffd8864:	f004 fd82 	bl	2ffdd36c <stm32mp_is_closed_device>
2ffd8868:	4604      	mov	r4, r0
2ffd886a:	b950      	cbnz	r0, 2ffd8882 <crypto_verify_signature+0x56>
2ffd886c:	9b03      	ldr	r3, [sp, #12]
2ffd886e:	b12b      	cbz	r3, 2ffd887c <crypto_verify_signature+0x50>
2ffd8870:	4829      	ldr	r0, [pc, #164]	; (2ffd8918 <crypto_verify_signature+0xec>)
2ffd8872:	f004 f93b 	bl	2ffdcaec <tf_log>
2ffd8876:	f004 fbd5 	bl	2ffdd024 <stm32mp_delete_loaded_header>
2ffd887a:	e7e8      	b.n	2ffd884e <crypto_verify_signature+0x22>
2ffd887c:	4827      	ldr	r0, [pc, #156]	; (2ffd891c <crypto_verify_signature+0xf0>)
2ffd887e:	f004 f935 	bl	2ffdcaec <tf_log>
2ffd8882:	9b19      	ldr	r3, [sp, #100]	; 0x64
2ffd8884:	2b40      	cmp	r3, #64	; 0x40
2ffd8886:	d1e0      	bne.n	2ffd884a <crypto_verify_signature+0x1e>
2ffd8888:	f1bb 0f40 	cmp.w	fp, #64	; 0x40
2ffd888c:	d1dd      	bne.n	2ffd884a <crypto_verify_signature+0x1e>
2ffd888e:	2302      	movs	r3, #2
2ffd8890:	2200      	movs	r2, #0
2ffd8892:	9300      	str	r3, [sp, #0]
2ffd8894:	2000      	movs	r0, #0
2ffd8896:	f44f 3300 	mov.w	r3, #131072	; 0x20000
2ffd889a:	2100      	movs	r1, #0
2ffd889c:	f004 ff2e 	bl	2ffdd6fc <mmap_add_dynamic_region>
2ffd88a0:	4604      	mov	r4, r0
2ffd88a2:	2800      	cmp	r0, #0
2ffd88a4:	d1d3      	bne.n	2ffd884e <crypto_verify_signature+0x22>
2ffd88a6:	f004 fd61 	bl	2ffdd36c <stm32mp_is_closed_device>
2ffd88aa:	b9b0      	cbnz	r0, 2ffd88da <crypto_verify_signature+0xae>
2ffd88ac:	4b1c      	ldr	r3, [pc, #112]	; (2ffd8920 <crypto_verify_signature+0xf4>)
2ffd88ae:	4621      	mov	r1, r4
2ffd88b0:	4648      	mov	r0, r9
2ffd88b2:	681b      	ldr	r3, [r3, #0]
2ffd88b4:	4798      	blx	r3
2ffd88b6:	2877      	cmp	r0, #119	; 0x77
2ffd88b8:	d00c      	beq.n	2ffd88d4 <crypto_verify_signature+0xa8>
2ffd88ba:	481a      	ldr	r0, [pc, #104]	; (2ffd8924 <crypto_verify_signature+0xf8>)
2ffd88bc:	f06f 0415 	mvn.w	r4, #21
2ffd88c0:	f004 f914 	bl	2ffdcaec <tf_log>
2ffd88c4:	f44f 3100 	mov.w	r1, #131072	; 0x20000
2ffd88c8:	2000      	movs	r0, #0
2ffd88ca:	f004 ff2b 	bl	2ffdd724 <mmap_remove_dynamic_region>
2ffd88ce:	2c00      	cmp	r4, #0
2ffd88d0:	d0bd      	beq.n	2ffd884e <crypto_verify_signature+0x22>
2ffd88d2:	e7d0      	b.n	2ffd8876 <crypto_verify_signature+0x4a>
2ffd88d4:	4814      	ldr	r0, [pc, #80]	; (2ffd8928 <crypto_verify_signature+0xfc>)
2ffd88d6:	f004 f909 	bl	2ffdcaec <tf_log>
2ffd88da:	2003      	movs	r0, #3
2ffd88dc:	f7fe fde6 	bl	2ffd74ac <stm32_hash_init>
2ffd88e0:	21b8      	movs	r1, #184	; 0xb8
2ffd88e2:	f108 0048 	add.w	r0, r8, #72	; 0x48
2ffd88e6:	f7fe fcfd 	bl	2ffd72e4 <stm32_hash_update>
2ffd88ea:	4604      	mov	r4, r0
2ffd88ec:	2800      	cmp	r0, #0
2ffd88ee:	d1e9      	bne.n	2ffd88c4 <crypto_verify_signature+0x98>
2ffd88f0:	aa04      	add	r2, sp, #16
2ffd88f2:	4639      	mov	r1, r7
2ffd88f4:	4630      	mov	r0, r6
2ffd88f6:	f7fe fdcd 	bl	2ffd7494 <stm32_hash_final_update>
2ffd88fa:	4604      	mov	r4, r0
2ffd88fc:	2800      	cmp	r0, #0
2ffd88fe:	d1e1      	bne.n	2ffd88c4 <crypto_verify_signature+0x98>
2ffd8900:	4b07      	ldr	r3, [pc, #28]	; (2ffd8920 <crypto_verify_signature+0xf4>)
2ffd8902:	462a      	mov	r2, r5
2ffd8904:	4649      	mov	r1, r9
2ffd8906:	a804      	add	r0, sp, #16
2ffd8908:	685e      	ldr	r6, [r3, #4]
2ffd890a:	4653      	mov	r3, sl
2ffd890c:	47b0      	blx	r6
2ffd890e:	2877      	cmp	r0, #119	; 0x77
2ffd8910:	bf18      	it	ne
2ffd8912:	f06f 044f 	mvnne.w	r4, #79	; 0x4f
2ffd8916:	e7d5      	b.n	2ffd88c4 <crypto_verify_signature+0x98>
2ffd8918:	2ffe4120 	.word	0x2ffe4120
2ffd891c:	2ffe4147 	.word	0x2ffe4147
2ffd8920:	2ffe8e14 	.word	0x2ffe8e14
2ffd8924:	2ffe4168 	.word	0x2ffe4168
2ffd8928:	2ffe4184 	.word	0x2ffe4184

2ffd892c <crypto_lib_init>:
2ffd892c:	b510      	push	{r4, lr}
2ffd892e:	f004 fab1 	bl	2ffdce94 <stm32mp_get_boot_ctx_address>
2ffd8932:	4604      	mov	r4, r0
2ffd8934:	f004 fd2c 	bl	2ffdd390 <stm32mp_is_auth_supported>
2ffd8938:	b328      	cbz	r0, 2ffd8986 <crypto_lib_init+0x5a>
2ffd893a:	f894 105d 	ldrb.w	r1, [r4, #93]	; 0x5d
2ffd893e:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
2ffd8942:	4a11      	ldr	r2, [pc, #68]	; (2ffd8988 <crypto_lib_init+0x5c>)
2ffd8944:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
2ffd8948:	f894 105e 	ldrb.w	r1, [r4, #94]	; 0x5e
2ffd894c:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffd8950:	f894 105f 	ldrb.w	r1, [r4, #95]	; 0x5f
2ffd8954:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
2ffd8958:	6013      	str	r3, [r2, #0]
2ffd895a:	f894 1061 	ldrb.w	r1, [r4, #97]	; 0x61
2ffd895e:	f894 3060 	ldrb.w	r3, [r4, #96]	; 0x60
2ffd8962:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
2ffd8966:	f894 1062 	ldrb.w	r1, [r4, #98]	; 0x62
2ffd896a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffd896e:	f894 1063 	ldrb.w	r1, [r4, #99]	; 0x63
2ffd8972:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
2ffd8976:	6053      	str	r3, [r2, #4]
2ffd8978:	f7fe fdc6 	bl	2ffd7508 <stm32_hash_register>
2ffd897c:	b118      	cbz	r0, 2ffd8986 <crypto_lib_init+0x5a>
2ffd897e:	f004 f953 	bl	2ffdcc28 <console_flush>
2ffd8982:	f7fd ec6e 	blx	2ffd6260 <do_panic>
2ffd8986:	bd10      	pop	{r4, pc}
2ffd8988:	2ffe8e14 	.word	0x2ffe8e14

2ffd898c <img_lib_init>:
2ffd898c:	4770      	bx	lr

2ffd898e <img_get_auth_param>:
2ffd898e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffd8990:	4606      	mov	r6, r0
2ffd8992:	9d06      	ldr	r5, [sp, #24]
2ffd8994:	461c      	mov	r4, r3
2ffd8996:	460f      	mov	r7, r1
2ffd8998:	f004 fb52 	bl	2ffdd040 <stm32mp_get_loaded_header>
2ffd899c:	6833      	ldr	r3, [r6, #0]
2ffd899e:	3b01      	subs	r3, #1
2ffd89a0:	2b05      	cmp	r3, #5
2ffd89a2:	d82b      	bhi.n	2ffd89fc <img_get_auth_param+0x6e>
2ffd89a4:	e8df f003 	tbb	[pc, r3]
2ffd89a8:	2a090311 	.word	0x2a090311
2ffd89ac:	240d      	.short	0x240d
2ffd89ae:	3004      	adds	r0, #4
2ffd89b0:	2340      	movs	r3, #64	; 0x40
2ffd89b2:	602b      	str	r3, [r5, #0]
2ffd89b4:	6020      	str	r0, [r4, #0]
2ffd89b6:	2000      	movs	r0, #0
2ffd89b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffd89ba:	2308      	movs	r3, #8
2ffd89bc:	3064      	adds	r0, #100	; 0x64
2ffd89be:	602b      	str	r3, [r5, #0]
2ffd89c0:	e7f8      	b.n	2ffd89b4 <img_get_auth_param+0x26>
2ffd89c2:	2340      	movs	r3, #64	; 0x40
2ffd89c4:	306c      	adds	r0, #108	; 0x6c
2ffd89c6:	602b      	str	r3, [r5, #0]
2ffd89c8:	e7f4      	b.n	2ffd89b4 <img_get_auth_param+0x26>
2ffd89ca:	6872      	ldr	r2, [r6, #4]
2ffd89cc:	b9b2      	cbnz	r2, 2ffd89fc <img_get_auth_param+0x6e>
2ffd89ce:	f890 104d 	ldrb.w	r1, [r0, #77]	; 0x4d
2ffd89d2:	f890 304c 	ldrb.w	r3, [r0, #76]	; 0x4c
2ffd89d6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
2ffd89da:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
2ffd89de:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffd89e2:	f890 104f 	ldrb.w	r1, [r0, #79]	; 0x4f
2ffd89e6:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
2ffd89ea:	602b      	str	r3, [r5, #0]
2ffd89ec:	6027      	str	r7, [r4, #0]
2ffd89ee:	e7e2      	b.n	2ffd89b6 <img_get_auth_param+0x28>
2ffd89f0:	6872      	ldr	r2, [r6, #4]
2ffd89f2:	b91a      	cbnz	r2, 2ffd89fc <img_get_auth_param+0x6e>
2ffd89f4:	2304      	movs	r3, #4
2ffd89f6:	3060      	adds	r0, #96	; 0x60
2ffd89f8:	602b      	str	r3, [r5, #0]
2ffd89fa:	e7db      	b.n	2ffd89b4 <img_get_auth_param+0x26>
2ffd89fc:	f06f 0015 	mvn.w	r0, #21
2ffd8a00:	e7da      	b.n	2ffd89b8 <img_get_auth_param+0x2a>

2ffd8a02 <img_check_integrity>:
2ffd8a02:	b510      	push	{r4, lr}
2ffd8a04:	4604      	mov	r4, r0
2ffd8a06:	f004 fb1b 	bl	2ffdd040 <stm32mp_get_loaded_header>
2ffd8a0a:	4621      	mov	r1, r4
2ffd8a0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffd8a10:	f004 ba82 	b.w	2ffdcf18 <stm32mp_check_header>

2ffd8a14 <plat_get_rotpk_info>:
2ffd8a14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffd8a18:	4689      	mov	r9, r1
2ffd8a1a:	b085      	sub	sp, #20
2ffd8a1c:	4690      	mov	r8, r2
2ffd8a1e:	461f      	mov	r7, r3
2ffd8a20:	b128      	cbz	r0, 2ffd8a2e <plat_get_rotpk_info+0x1a>
2ffd8a22:	f06f 0615 	mvn.w	r6, #21
2ffd8a26:	4630      	mov	r0, r6
2ffd8a28:	b005      	add	sp, #20
2ffd8a2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffd8a2e:	481a      	ldr	r0, [pc, #104]	; (2ffd8a98 <plat_get_rotpk_info+0x84>)
2ffd8a30:	aa03      	add	r2, sp, #12
2ffd8a32:	a901      	add	r1, sp, #4
2ffd8a34:	f004 fb30 	bl	2ffdd098 <stm32_get_otp_index>
2ffd8a38:	4604      	mov	r4, r0
2ffd8a3a:	2800      	cmp	r0, #0
2ffd8a3c:	d1f1      	bne.n	2ffd8a22 <plat_get_rotpk_info+0xe>
2ffd8a3e:	9b03      	ldr	r3, [sp, #12]
2ffd8a40:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
2ffd8a44:	d1ed      	bne.n	2ffd8a22 <plat_get_rotpk_info+0xe>
2ffd8a46:	f8df a054 	ldr.w	sl, [pc, #84]	; 2ffd8a9c <plat_get_rotpk_info+0x88>
2ffd8a4a:	46d3      	mov	fp, sl
2ffd8a4c:	9801      	ldr	r0, [sp, #4]
2ffd8a4e:	a902      	add	r1, sp, #8
2ffd8a50:	4420      	add	r0, r4
2ffd8a52:	f004 fb35 	bl	2ffdd0c0 <stm32_get_otp_value_from_idx>
2ffd8a56:	4606      	mov	r6, r0
2ffd8a58:	2800      	cmp	r0, #0
2ffd8a5a:	d1e2      	bne.n	2ffd8a22 <plat_get_rotpk_info+0xe>
2ffd8a5c:	9d02      	ldr	r5, [sp, #8]
2ffd8a5e:	ea85 4335 	eor.w	r3, r5, r5, ror #16
2ffd8a62:	f423 037f 	bic.w	r3, r3, #16711680	; 0xff0000
2ffd8a66:	ea4f 2535 	mov.w	r5, r5, ror #8
2ffd8a6a:	ea85 2513 	eor.w	r5, r5, r3, lsr #8
2ffd8a6e:	f84a 5b04 	str.w	r5, [sl], #4
2ffd8a72:	3401      	adds	r4, #1
2ffd8a74:	2c08      	cmp	r4, #8
2ffd8a76:	d1e9      	bne.n	2ffd8a4c <plat_get_rotpk_info+0x38>
2ffd8a78:	f8c9 b000 	str.w	fp, [r9]
2ffd8a7c:	2320      	movs	r3, #32
2ffd8a7e:	f8c8 3000 	str.w	r3, [r8]
2ffd8a82:	2301      	movs	r3, #1
2ffd8a84:	603b      	str	r3, [r7, #0]
2ffd8a86:	f004 fc71 	bl	2ffdd36c <stm32mp_is_closed_device>
2ffd8a8a:	2800      	cmp	r0, #0
2ffd8a8c:	d1cb      	bne.n	2ffd8a26 <plat_get_rotpk_info+0x12>
2ffd8a8e:	683b      	ldr	r3, [r7, #0]
2ffd8a90:	f043 0302 	orr.w	r3, r3, #2
2ffd8a94:	603b      	str	r3, [r7, #0]
2ffd8a96:	e7c6      	b.n	2ffd8a26 <plat_get_rotpk_info+0x12>
2ffd8a98:	2ffe41e5 	.word	0x2ffe41e5
2ffd8a9c:	2ffe8e1c 	.word	0x2ffe8e1c

2ffd8aa0 <plat_get_nv_ctr>:
2ffd8aa0:	b508      	push	{r3, lr}
2ffd8aa2:	b110      	cbz	r0, 2ffd8aaa <plat_get_nv_ctr+0xa>
2ffd8aa4:	f06f 0015 	mvn.w	r0, #21
2ffd8aa8:	bd08      	pop	{r3, pc}
2ffd8aaa:	4803      	ldr	r0, [pc, #12]	; (2ffd8ab8 <plat_get_nv_ctr+0x18>)
2ffd8aac:	f004 fb20 	bl	2ffdd0f0 <stm32_get_otp_value>
2ffd8ab0:	2800      	cmp	r0, #0
2ffd8ab2:	d0f9      	beq.n	2ffd8aa8 <plat_get_nv_ctr+0x8>
2ffd8ab4:	e7f6      	b.n	2ffd8aa4 <plat_get_nv_ctr+0x4>
2ffd8ab6:	bf00      	nop
2ffd8ab8:	2ffe3cb1 	.word	0x2ffe3cb1

2ffd8abc <plat_set_nv_ctr>:
2ffd8abc:	f06f 0015 	mvn.w	r0, #21
2ffd8ac0:	4770      	bx	lr
	...

2ffd8ac4 <mmc_send_cmd>:
2ffd8ac4:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffd8ac6:	b089      	sub	sp, #36	; 0x24
2ffd8ac8:	4607      	mov	r7, r0
2ffd8aca:	460e      	mov	r6, r1
2ffd8acc:	a801      	add	r0, sp, #4
2ffd8ace:	211c      	movs	r1, #28
2ffd8ad0:	4615      	mov	r5, r2
2ffd8ad2:	461c      	mov	r4, r3
2ffd8ad4:	f7fd ecc4 	blx	2ffd6460 <zero_normalmem>
2ffd8ad8:	4b0a      	ldr	r3, [pc, #40]	; (2ffd8b04 <mmc_send_cmd+0x40>)
2ffd8ada:	a801      	add	r0, sp, #4
2ffd8adc:	9701      	str	r7, [sp, #4]
2ffd8ade:	681b      	ldr	r3, [r3, #0]
2ffd8ae0:	9602      	str	r6, [sp, #8]
2ffd8ae2:	685b      	ldr	r3, [r3, #4]
2ffd8ae4:	9503      	str	r5, [sp, #12]
2ffd8ae6:	4798      	blx	r3
2ffd8ae8:	b948      	cbnz	r0, 2ffd8afe <mmc_send_cmd+0x3a>
2ffd8aea:	b144      	cbz	r4, 2ffd8afe <mmc_send_cmd+0x3a>
2ffd8aec:	ab04      	add	r3, sp, #16
2ffd8aee:	f104 0210 	add.w	r2, r4, #16
2ffd8af2:	f853 1b04 	ldr.w	r1, [r3], #4
2ffd8af6:	f844 1b04 	str.w	r1, [r4], #4
2ffd8afa:	4294      	cmp	r4, r2
2ffd8afc:	d1f9      	bne.n	2ffd8af2 <mmc_send_cmd+0x2e>
2ffd8afe:	b009      	add	sp, #36	; 0x24
2ffd8b00:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffd8b02:	bf00      	nop
2ffd8b04:	2ffe8e58 	.word	0x2ffe8e58

2ffd8b08 <mmc_device_state>:
2ffd8b08:	b530      	push	{r4, r5, lr}
2ffd8b0a:	2404      	movs	r4, #4
2ffd8b0c:	4d0d      	ldr	r5, [pc, #52]	; (2ffd8b44 <mmc_device_state+0x3c>)
2ffd8b0e:	b085      	sub	sp, #20
2ffd8b10:	6829      	ldr	r1, [r5, #0]
2ffd8b12:	220d      	movs	r2, #13
2ffd8b14:	466b      	mov	r3, sp
2ffd8b16:	4610      	mov	r0, r2
2ffd8b18:	0409      	lsls	r1, r1, #16
2ffd8b1a:	f7ff ffd3 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8b1e:	9b00      	ldr	r3, [sp, #0]
2ffd8b20:	b908      	cbnz	r0, 2ffd8b26 <mmc_device_state+0x1e>
2ffd8b22:	0619      	lsls	r1, r3, #24
2ffd8b24:	d40b      	bmi.n	2ffd8b3e <mmc_device_state+0x36>
2ffd8b26:	05da      	lsls	r2, r3, #23
2ffd8b28:	d503      	bpl.n	2ffd8b32 <mmc_device_state+0x2a>
2ffd8b2a:	f3c3 2043 	ubfx	r0, r3, #9, #4
2ffd8b2e:	b005      	add	sp, #20
2ffd8b30:	bd30      	pop	{r4, r5, pc}
2ffd8b32:	3c01      	subs	r4, #1
2ffd8b34:	d2ec      	bcs.n	2ffd8b10 <mmc_device_state+0x8>
2ffd8b36:	4804      	ldr	r0, [pc, #16]	; (2ffd8b48 <mmc_device_state+0x40>)
2ffd8b38:	2105      	movs	r1, #5
2ffd8b3a:	f003 ffd7 	bl	2ffdcaec <tf_log>
2ffd8b3e:	f06f 0004 	mvn.w	r0, #4
2ffd8b42:	e7f4      	b.n	2ffd8b2e <mmc_device_state+0x26>
2ffd8b44:	2ffe8e5c 	.word	0x2ffe8e5c
2ffd8b48:	2ffe41ed 	.word	0x2ffe41ed

2ffd8b4c <mmc_reset_to_idle>:
2ffd8b4c:	2300      	movs	r3, #0
2ffd8b4e:	b510      	push	{r4, lr}
2ffd8b50:	461a      	mov	r2, r3
2ffd8b52:	4619      	mov	r1, r3
2ffd8b54:	4618      	mov	r0, r3
2ffd8b56:	f7ff ffb5 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8b5a:	4604      	mov	r4, r0
2ffd8b5c:	b910      	cbnz	r0, 2ffd8b64 <mmc_reset_to_idle+0x18>
2ffd8b5e:	2002      	movs	r0, #2
2ffd8b60:	f005 fc5e 	bl	2ffde420 <mdelay>
2ffd8b64:	4620      	mov	r0, r4
2ffd8b66:	bd10      	pop	{r4, pc}

2ffd8b68 <mmc_set_ext_csd>:
2ffd8b68:	0209      	lsls	r1, r1, #8
2ffd8b6a:	2300      	movs	r3, #0
2ffd8b6c:	b289      	uxth	r1, r1
2ffd8b6e:	221d      	movs	r2, #29
2ffd8b70:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
2ffd8b74:	2006      	movs	r0, #6
2ffd8b76:	f041 7140 	orr.w	r1, r1, #50331648	; 0x3000000
2ffd8b7a:	b510      	push	{r4, lr}
2ffd8b7c:	f041 0101 	orr.w	r1, r1, #1
2ffd8b80:	f7ff ffa0 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8b84:	4604      	mov	r4, r0
2ffd8b86:	b928      	cbnz	r0, 2ffd8b94 <mmc_set_ext_csd+0x2c>
2ffd8b88:	f7ff ffbe 	bl	2ffd8b08 <mmc_device_state>
2ffd8b8c:	2800      	cmp	r0, #0
2ffd8b8e:	db03      	blt.n	2ffd8b98 <mmc_set_ext_csd+0x30>
2ffd8b90:	2807      	cmp	r0, #7
2ffd8b92:	d0f9      	beq.n	2ffd8b88 <mmc_set_ext_csd+0x20>
2ffd8b94:	4620      	mov	r0, r4
2ffd8b96:	bd10      	pop	{r4, pc}
2ffd8b98:	4604      	mov	r4, r0
2ffd8b9a:	e7fb      	b.n	2ffd8b94 <mmc_set_ext_csd+0x2c>

2ffd8b9c <sd_switch.constprop.0>:
2ffd8b9c:	b570      	push	{r4, r5, r6, lr}
2ffd8b9e:	2240      	movs	r2, #64	; 0x40
2ffd8ba0:	4d0d      	ldr	r5, [pc, #52]	; (2ffd8bd8 <sd_switch.constprop.0+0x3c>)
2ffd8ba2:	4604      	mov	r4, r0
2ffd8ba4:	490d      	ldr	r1, [pc, #52]	; (2ffd8bdc <sd_switch.constprop.0+0x40>)
2ffd8ba6:	2000      	movs	r0, #0
2ffd8ba8:	682b      	ldr	r3, [r5, #0]
2ffd8baa:	68db      	ldr	r3, [r3, #12]
2ffd8bac:	4798      	blx	r3
2ffd8bae:	4603      	mov	r3, r0
2ffd8bb0:	b978      	cbnz	r0, 2ffd8bd2 <sd_switch.constprop.0+0x36>
2ffd8bb2:	490b      	ldr	r1, [pc, #44]	; (2ffd8be0 <sd_switch.constprop.0+0x44>)
2ffd8bb4:	220d      	movs	r2, #13
2ffd8bb6:	2006      	movs	r0, #6
2ffd8bb8:	ea41 71c4 	orr.w	r1, r1, r4, lsl #31
2ffd8bbc:	f7ff ff82 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8bc0:	4603      	mov	r3, r0
2ffd8bc2:	b930      	cbnz	r0, 2ffd8bd2 <sd_switch.constprop.0+0x36>
2ffd8bc4:	682b      	ldr	r3, [r5, #0]
2ffd8bc6:	2240      	movs	r2, #64	; 0x40
2ffd8bc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffd8bcc:	691b      	ldr	r3, [r3, #16]
2ffd8bce:	4903      	ldr	r1, [pc, #12]	; (2ffd8bdc <sd_switch.constprop.0+0x40>)
2ffd8bd0:	4718      	bx	r3
2ffd8bd2:	4618      	mov	r0, r3
2ffd8bd4:	bd70      	pop	{r4, r5, r6, pc}
2ffd8bd6:	bf00      	nop
2ffd8bd8:	2ffe8e58 	.word	0x2ffe8e58
2ffd8bdc:	2ffe90e4 	.word	0x2ffe90e4
2ffd8be0:	00fffff1 	.word	0x00fffff1

2ffd8be4 <mmc_read_blocks>:
2ffd8be4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffd8be8:	4605      	mov	r5, r0
2ffd8bea:	4b2b      	ldr	r3, [pc, #172]	; (2ffd8c98 <mmc_read_blocks+0xb4>)
2ffd8bec:	4689      	mov	r9, r1
2ffd8bee:	4614      	mov	r4, r2
2ffd8bf0:	681f      	ldr	r7, [r3, #0]
2ffd8bf2:	4698      	mov	r8, r3
2ffd8bf4:	b12f      	cbz	r7, 2ffd8c02 <mmc_read_blocks+0x1e>
2ffd8bf6:	693b      	ldr	r3, [r7, #16]
2ffd8bf8:	b11b      	cbz	r3, 2ffd8c02 <mmc_read_blocks+0x1e>
2ffd8bfa:	b112      	cbz	r2, 2ffd8c02 <mmc_read_blocks+0x1e>
2ffd8bfc:	f3c2 0608 	ubfx	r6, r2, #0, #9
2ffd8c00:	b126      	cbz	r6, 2ffd8c0c <mmc_read_blocks+0x28>
2ffd8c02:	4826      	ldr	r0, [pc, #152]	; (2ffd8c9c <mmc_read_blocks+0xb8>)
2ffd8c04:	f240 213a 	movw	r1, #570	; 0x23a
2ffd8c08:	f00a f984 	bl	2ffe2f14 <__assert>
2ffd8c0c:	68fb      	ldr	r3, [r7, #12]
2ffd8c0e:	4798      	blx	r3
2ffd8c10:	2800      	cmp	r0, #0
2ffd8c12:	d139      	bne.n	2ffd8c88 <mmc_read_blocks+0xa4>
2ffd8c14:	4f22      	ldr	r7, [pc, #136]	; (2ffd8ca0 <mmc_read_blocks+0xbc>)
2ffd8c16:	683b      	ldr	r3, [r7, #0]
2ffd8c18:	07db      	lsls	r3, r3, #31
2ffd8c1a:	d538      	bpl.n	2ffd8c8e <mmc_read_blocks+0xaa>
2ffd8c1c:	4633      	mov	r3, r6
2ffd8c1e:	220d      	movs	r2, #13
2ffd8c20:	0a61      	lsrs	r1, r4, #9
2ffd8c22:	2017      	movs	r0, #23
2ffd8c24:	f7ff ff4e 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8c28:	bb70      	cbnz	r0, 2ffd8c88 <mmc_read_blocks+0xa4>
2ffd8c2a:	2012      	movs	r0, #18
2ffd8c2c:	4b1d      	ldr	r3, [pc, #116]	; (2ffd8ca4 <mmc_read_blocks+0xc0>)
2ffd8c2e:	4629      	mov	r1, r5
2ffd8c30:	681b      	ldr	r3, [r3, #0]
2ffd8c32:	f013 4fc0 	tst.w	r3, #1610612736	; 0x60000000
2ffd8c36:	d105      	bne.n	2ffd8c44 <mmc_read_blocks+0x60>
2ffd8c38:	4b1b      	ldr	r3, [pc, #108]	; (2ffd8ca8 <mmc_read_blocks+0xc4>)
2ffd8c3a:	681b      	ldr	r3, [r3, #0]
2ffd8c3c:	695b      	ldr	r3, [r3, #20]
2ffd8c3e:	2b02      	cmp	r3, #2
2ffd8c40:	bf18      	it	ne
2ffd8c42:	0269      	lslne	r1, r5, #9
2ffd8c44:	2300      	movs	r3, #0
2ffd8c46:	220d      	movs	r2, #13
2ffd8c48:	f7ff ff3c 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8c4c:	b9e0      	cbnz	r0, 2ffd8c88 <mmc_read_blocks+0xa4>
2ffd8c4e:	f8d8 3000 	ldr.w	r3, [r8]
2ffd8c52:	4622      	mov	r2, r4
2ffd8c54:	4649      	mov	r1, r9
2ffd8c56:	4628      	mov	r0, r5
2ffd8c58:	691b      	ldr	r3, [r3, #16]
2ffd8c5a:	4798      	blx	r3
2ffd8c5c:	b9a0      	cbnz	r0, 2ffd8c88 <mmc_read_blocks+0xa4>
2ffd8c5e:	f7ff ff53 	bl	2ffd8b08 <mmc_device_state>
2ffd8c62:	2800      	cmp	r0, #0
2ffd8c64:	db10      	blt.n	2ffd8c88 <mmc_read_blocks+0xa4>
2ffd8c66:	3804      	subs	r0, #4
2ffd8c68:	2801      	cmp	r0, #1
2ffd8c6a:	d8f8      	bhi.n	2ffd8c5e <mmc_read_blocks+0x7a>
2ffd8c6c:	683b      	ldr	r3, [r7, #0]
2ffd8c6e:	f013 0301 	ands.w	r3, r3, #1
2ffd8c72:	d108      	bne.n	2ffd8c86 <mmc_read_blocks+0xa2>
2ffd8c74:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
2ffd8c78:	d905      	bls.n	2ffd8c86 <mmc_read_blocks+0xa2>
2ffd8c7a:	221d      	movs	r2, #29
2ffd8c7c:	4619      	mov	r1, r3
2ffd8c7e:	200c      	movs	r0, #12
2ffd8c80:	f7ff ff20 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8c84:	b900      	cbnz	r0, 2ffd8c88 <mmc_read_blocks+0xa4>
2ffd8c86:	4626      	mov	r6, r4
2ffd8c88:	4630      	mov	r0, r6
2ffd8c8a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffd8c8e:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
2ffd8c92:	d8ca      	bhi.n	2ffd8c2a <mmc_read_blocks+0x46>
2ffd8c94:	2011      	movs	r0, #17
2ffd8c96:	e7c9      	b.n	2ffd8c2c <mmc_read_blocks+0x48>
2ffd8c98:	2ffe8e58 	.word	0x2ffe8e58
2ffd8c9c:	2ffe420d 	.word	0x2ffe420d
2ffd8ca0:	2ffe8e50 	.word	0x2ffe8e50
2ffd8ca4:	2ffe8e54 	.word	0x2ffe8e54
2ffd8ca8:	2ffe8e4c 	.word	0x2ffe8e4c

2ffd8cac <mmc_init>:
2ffd8cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffd8cb0:	b08b      	sub	sp, #44	; 0x2c
2ffd8cb2:	4689      	mov	r9, r1
2ffd8cb4:	4616      	mov	r6, r2
2ffd8cb6:	9914      	ldr	r1, [sp, #80]	; 0x50
2ffd8cb8:	b1a0      	cbz	r0, 2ffd8ce4 <mmc_init+0x38>
2ffd8cba:	6802      	ldr	r2, [r0, #0]
2ffd8cbc:	b192      	cbz	r2, 2ffd8ce4 <mmc_init+0x38>
2ffd8cbe:	6844      	ldr	r4, [r0, #4]
2ffd8cc0:	b184      	cbz	r4, 2ffd8ce4 <mmc_init+0x38>
2ffd8cc2:	6884      	ldr	r4, [r0, #8]
2ffd8cc4:	b174      	cbz	r4, 2ffd8ce4 <mmc_init+0x38>
2ffd8cc6:	68c4      	ldr	r4, [r0, #12]
2ffd8cc8:	b164      	cbz	r4, 2ffd8ce4 <mmc_init+0x38>
2ffd8cca:	6904      	ldr	r4, [r0, #16]
2ffd8ccc:	b154      	cbz	r4, 2ffd8ce4 <mmc_init+0x38>
2ffd8cce:	6944      	ldr	r4, [r0, #20]
2ffd8cd0:	b144      	cbz	r4, 2ffd8ce4 <mmc_init+0x38>
2ffd8cd2:	b139      	cbz	r1, 2ffd8ce4 <mmc_init+0x38>
2ffd8cd4:	f1b9 0f00 	cmp.w	r9, #0
2ffd8cd8:	d004      	beq.n	2ffd8ce4 <mmc_init+0x38>
2ffd8cda:	2e02      	cmp	r6, #2
2ffd8cdc:	d907      	bls.n	2ffd8cee <mmc_init+0x42>
2ffd8cde:	1f74      	subs	r4, r6, #5
2ffd8ce0:	2c01      	cmp	r4, #1
2ffd8ce2:	d904      	bls.n	2ffd8cee <mmc_init+0x42>
2ffd8ce4:	f240 310e 	movw	r1, #782	; 0x30e
2ffd8ce8:	487f      	ldr	r0, [pc, #508]	; (2ffd8ee8 <mmc_init+0x23c>)
2ffd8cea:	f00a f913 	bl	2ffe2f14 <__assert>
2ffd8cee:	f8df 8224 	ldr.w	r8, [pc, #548]	; 2ffd8f14 <mmc_init+0x268>
2ffd8cf2:	4f7e      	ldr	r7, [pc, #504]	; (2ffd8eec <mmc_init+0x240>)
2ffd8cf4:	4d7e      	ldr	r5, [pc, #504]	; (2ffd8ef0 <mmc_init+0x244>)
2ffd8cf6:	6038      	str	r0, [r7, #0]
2ffd8cf8:	f8c8 3000 	str.w	r3, [r8]
2ffd8cfc:	6029      	str	r1, [r5, #0]
2ffd8cfe:	4790      	blx	r2
2ffd8d00:	f7ff ff24 	bl	2ffd8b4c <mmc_reset_to_idle>
2ffd8d04:	f8cd 8004 	str.w	r8, [sp, #4]
2ffd8d08:	4604      	mov	r4, r0
2ffd8d0a:	2800      	cmp	r0, #0
2ffd8d0c:	f040 809c 	bne.w	2ffd8e48 <mmc_init+0x19c>
2ffd8d10:	682b      	ldr	r3, [r5, #0]
2ffd8d12:	695b      	ldr	r3, [r3, #20]
2ffd8d14:	2b00      	cmp	r3, #0
2ffd8d16:	f040 809b 	bne.w	2ffd8e50 <mmc_init+0x1a4>
2ffd8d1a:	f7ff ff17 	bl	2ffd8b4c <mmc_reset_to_idle>
2ffd8d1e:	4604      	mov	r4, r0
2ffd8d20:	2800      	cmp	r0, #0
2ffd8d22:	f040 8091 	bne.w	2ffd8e48 <mmc_init+0x19c>
2ffd8d26:	f8df a1f0 	ldr.w	sl, [pc, #496]	; 2ffd8f18 <mmc_init+0x26c>
2ffd8d2a:	f04f 0864 	mov.w	r8, #100	; 0x64
2ffd8d2e:	2201      	movs	r2, #1
2ffd8d30:	ab06      	add	r3, sp, #24
2ffd8d32:	4651      	mov	r1, sl
2ffd8d34:	4610      	mov	r0, r2
2ffd8d36:	f7ff fec5 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8d3a:	4604      	mov	r4, r0
2ffd8d3c:	2800      	cmp	r0, #0
2ffd8d3e:	f040 8083 	bne.w	2ffd8e48 <mmc_init+0x19c>
2ffd8d42:	9b06      	ldr	r3, [sp, #24]
2ffd8d44:	2b00      	cmp	r3, #0
2ffd8d46:	da72      	bge.n	2ffd8e2e <mmc_init+0x182>
2ffd8d48:	4a6a      	ldr	r2, [pc, #424]	; (2ffd8ef4 <mmc_init+0x248>)
2ffd8d4a:	6013      	str	r3, [r2, #0]
2ffd8d4c:	2300      	movs	r3, #0
2ffd8d4e:	2207      	movs	r2, #7
2ffd8d50:	4619      	mov	r1, r3
2ffd8d52:	2002      	movs	r0, #2
2ffd8d54:	f7ff feb6 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8d58:	4604      	mov	r4, r0
2ffd8d5a:	2800      	cmp	r0, #0
2ffd8d5c:	d174      	bne.n	2ffd8e48 <mmc_init+0x19c>
2ffd8d5e:	682b      	ldr	r3, [r5, #0]
2ffd8d60:	695b      	ldr	r3, [r3, #20]
2ffd8d62:	2b00      	cmp	r3, #0
2ffd8d64:	f040 80b0 	bne.w	2ffd8ec8 <mmc_init+0x21c>
2ffd8d68:	4b63      	ldr	r3, [pc, #396]	; (2ffd8ef8 <mmc_init+0x24c>)
2ffd8d6a:	2206      	movs	r2, #6
2ffd8d6c:	f44f 21c0 	mov.w	r1, #393216	; 0x60000
2ffd8d70:	601a      	str	r2, [r3, #0]
2ffd8d72:	4603      	mov	r3, r0
2ffd8d74:	220d      	movs	r2, #13
2ffd8d76:	2003      	movs	r0, #3
2ffd8d78:	f7ff fea4 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8d7c:	4604      	mov	r4, r0
2ffd8d7e:	2800      	cmp	r0, #0
2ffd8d80:	d162      	bne.n	2ffd8e48 <mmc_init+0x19c>
2ffd8d82:	f8df 8174 	ldr.w	r8, [pc, #372]	; 2ffd8ef8 <mmc_init+0x24c>
2ffd8d86:	ab02      	add	r3, sp, #8
2ffd8d88:	2207      	movs	r2, #7
2ffd8d8a:	2009      	movs	r0, #9
2ffd8d8c:	f8d8 1000 	ldr.w	r1, [r8]
2ffd8d90:	0409      	lsls	r1, r1, #16
2ffd8d92:	f7ff fe97 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8d96:	4604      	mov	r4, r0
2ffd8d98:	2800      	cmp	r0, #0
2ffd8d9a:	d155      	bne.n	2ffd8e48 <mmc_init+0x19c>
2ffd8d9c:	4857      	ldr	r0, [pc, #348]	; (2ffd8efc <mmc_init+0x250>)
2ffd8d9e:	2210      	movs	r2, #16
2ffd8da0:	a902      	add	r1, sp, #8
2ffd8da2:	f00a f8df 	bl	2ffe2f64 <memcpy>
2ffd8da6:	f8d8 1000 	ldr.w	r1, [r8]
2ffd8daa:	4623      	mov	r3, r4
2ffd8dac:	220d      	movs	r2, #13
2ffd8dae:	2007      	movs	r0, #7
2ffd8db0:	0409      	lsls	r1, r1, #16
2ffd8db2:	f7ff fe87 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8db6:	4604      	mov	r4, r0
2ffd8db8:	2800      	cmp	r0, #0
2ffd8dba:	d145      	bne.n	2ffd8e48 <mmc_init+0x19c>
2ffd8dbc:	f7ff fea4 	bl	2ffd8b08 <mmc_device_state>
2ffd8dc0:	1e04      	subs	r4, r0, #0
2ffd8dc2:	db41      	blt.n	2ffd8e48 <mmc_init+0x19c>
2ffd8dc4:	2c04      	cmp	r4, #4
2ffd8dc6:	d1f9      	bne.n	2ffd8dbc <mmc_init+0x110>
2ffd8dc8:	682b      	ldr	r3, [r5, #0]
2ffd8dca:	695b      	ldr	r3, [r3, #20]
2ffd8dcc:	2b00      	cmp	r3, #0
2ffd8dce:	f000 8129 	beq.w	2ffd9024 <mmc_init+0x378>
2ffd8dd2:	2e02      	cmp	r6, #2
2ffd8dd4:	f040 8086 	bne.w	2ffd8ee4 <mmc_init+0x238>
2ffd8dd8:	4849      	ldr	r0, [pc, #292]	; (2ffd8f00 <mmc_init+0x254>)
2ffd8dda:	f04f 0b01 	mov.w	fp, #1
2ffd8dde:	f003 fe85 	bl	2ffdcaec <tf_log>
2ffd8de2:	683b      	ldr	r3, [r7, #0]
2ffd8de4:	2208      	movs	r2, #8
2ffd8de6:	4947      	ldr	r1, [pc, #284]	; (2ffd8f04 <mmc_init+0x258>)
2ffd8de8:	2000      	movs	r0, #0
2ffd8dea:	68db      	ldr	r3, [r3, #12]
2ffd8dec:	4798      	blx	r3
2ffd8dee:	4604      	mov	r4, r0
2ffd8df0:	bb50      	cbnz	r0, 2ffd8e48 <mmc_init+0x19c>
2ffd8df2:	f8d8 1000 	ldr.w	r1, [r8]
2ffd8df6:	4603      	mov	r3, r0
2ffd8df8:	220d      	movs	r2, #13
2ffd8dfa:	2037      	movs	r0, #55	; 0x37
2ffd8dfc:	0409      	lsls	r1, r1, #16
2ffd8dfe:	f7ff fe61 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8e02:	4604      	mov	r4, r0
2ffd8e04:	bb00      	cbnz	r0, 2ffd8e48 <mmc_init+0x19c>
2ffd8e06:	f04f 0a05 	mov.w	sl, #5
2ffd8e0a:	2300      	movs	r3, #0
2ffd8e0c:	220d      	movs	r2, #13
2ffd8e0e:	4619      	mov	r1, r3
2ffd8e10:	2033      	movs	r0, #51	; 0x33
2ffd8e12:	f7ff fe57 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8e16:	4604      	mov	r4, r0
2ffd8e18:	2800      	cmp	r0, #0
2ffd8e1a:	d07f      	beq.n	2ffd8f1c <mmc_init+0x270>
2ffd8e1c:	f1ba 0f00 	cmp.w	sl, #0
2ffd8e20:	d17c      	bne.n	2ffd8f1c <mmc_init+0x270>
2ffd8e22:	4602      	mov	r2, r0
2ffd8e24:	2105      	movs	r1, #5
2ffd8e26:	4838      	ldr	r0, [pc, #224]	; (2ffd8f08 <mmc_init+0x25c>)
2ffd8e28:	f003 fe60 	bl	2ffdcaec <tf_log>
2ffd8e2c:	e00c      	b.n	2ffd8e48 <mmc_init+0x19c>
2ffd8e2e:	200a      	movs	r0, #10
2ffd8e30:	f005 faf6 	bl	2ffde420 <mdelay>
2ffd8e34:	f1b8 0801 	subs.w	r8, r8, #1
2ffd8e38:	f47f af79 	bne.w	2ffd8d2e <mmc_init+0x82>
2ffd8e3c:	4833      	ldr	r0, [pc, #204]	; (2ffd8f0c <mmc_init+0x260>)
2ffd8e3e:	2164      	movs	r1, #100	; 0x64
2ffd8e40:	f06f 0404 	mvn.w	r4, #4
2ffd8e44:	f003 fe52 	bl	2ffdcaec <tf_log>
2ffd8e48:	4620      	mov	r0, r4
2ffd8e4a:	b00b      	add	sp, #44	; 0x2c
2ffd8e4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffd8e50:	ab02      	add	r3, sp, #8
2ffd8e52:	220d      	movs	r2, #13
2ffd8e54:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
2ffd8e58:	2008      	movs	r0, #8
2ffd8e5a:	f7ff fe33 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8e5e:	4604      	mov	r4, r0
2ffd8e60:	2800      	cmp	r0, #0
2ffd8e62:	d1f1      	bne.n	2ffd8e48 <mmc_init+0x19c>
2ffd8e64:	f89d 3008 	ldrb.w	r3, [sp, #8]
2ffd8e68:	2baa      	cmp	r3, #170	; 0xaa
2ffd8e6a:	f47f af6f 	bne.w	2ffd8d4c <mmc_init+0xa0>
2ffd8e6e:	f04f 0864 	mov.w	r8, #100	; 0x64
2ffd8e72:	2300      	movs	r3, #0
2ffd8e74:	220d      	movs	r2, #13
2ffd8e76:	4619      	mov	r1, r3
2ffd8e78:	2037      	movs	r0, #55	; 0x37
2ffd8e7a:	f7ff fe23 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8e7e:	4604      	mov	r4, r0
2ffd8e80:	2800      	cmp	r0, #0
2ffd8e82:	d1e1      	bne.n	2ffd8e48 <mmc_init+0x19c>
2ffd8e84:	682b      	ldr	r3, [r5, #0]
2ffd8e86:	2201      	movs	r2, #1
2ffd8e88:	2029      	movs	r0, #41	; 0x29
2ffd8e8a:	6919      	ldr	r1, [r3, #16]
2ffd8e8c:	ab06      	add	r3, sp, #24
2ffd8e8e:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
2ffd8e92:	f7ff fe17 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8e96:	4604      	mov	r4, r0
2ffd8e98:	2800      	cmp	r0, #0
2ffd8e9a:	d1d5      	bne.n	2ffd8e48 <mmc_init+0x19c>
2ffd8e9c:	9b06      	ldr	r3, [sp, #24]
2ffd8e9e:	2b00      	cmp	r3, #0
2ffd8ea0:	da09      	bge.n	2ffd8eb6 <mmc_init+0x20a>
2ffd8ea2:	4a14      	ldr	r2, [pc, #80]	; (2ffd8ef4 <mmc_init+0x248>)
2ffd8ea4:	0058      	lsls	r0, r3, #1
2ffd8ea6:	6013      	str	r3, [r2, #0]
2ffd8ea8:	bf48      	it	mi
2ffd8eaa:	2302      	movmi	r3, #2
2ffd8eac:	682a      	ldr	r2, [r5, #0]
2ffd8eae:	bf58      	it	pl
2ffd8eb0:	2301      	movpl	r3, #1
2ffd8eb2:	6153      	str	r3, [r2, #20]
2ffd8eb4:	e74a      	b.n	2ffd8d4c <mmc_init+0xa0>
2ffd8eb6:	200a      	movs	r0, #10
2ffd8eb8:	f005 fab2 	bl	2ffde420 <mdelay>
2ffd8ebc:	f1b8 0801 	subs.w	r8, r8, #1
2ffd8ec0:	d1d7      	bne.n	2ffd8e72 <mmc_init+0x1c6>
2ffd8ec2:	4813      	ldr	r0, [pc, #76]	; (2ffd8f10 <mmc_init+0x264>)
2ffd8ec4:	2164      	movs	r1, #100	; 0x64
2ffd8ec6:	e7bb      	b.n	2ffd8e40 <mmc_init+0x194>
2ffd8ec8:	4601      	mov	r1, r0
2ffd8eca:	ab02      	add	r3, sp, #8
2ffd8ecc:	220d      	movs	r2, #13
2ffd8ece:	2003      	movs	r0, #3
2ffd8ed0:	f7ff fdf8 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8ed4:	4604      	mov	r4, r0
2ffd8ed6:	2800      	cmp	r0, #0
2ffd8ed8:	d1b6      	bne.n	2ffd8e48 <mmc_init+0x19c>
2ffd8eda:	f8bd 200a 	ldrh.w	r2, [sp, #10]
2ffd8ede:	4b06      	ldr	r3, [pc, #24]	; (2ffd8ef8 <mmc_init+0x24c>)
2ffd8ee0:	601a      	str	r2, [r3, #0]
2ffd8ee2:	e74e      	b.n	2ffd8d82 <mmc_init+0xd6>
2ffd8ee4:	46b3      	mov	fp, r6
2ffd8ee6:	e77c      	b.n	2ffd8de2 <mmc_init+0x136>
2ffd8ee8:	2ffe420d 	.word	0x2ffe420d
2ffd8eec:	2ffe8e58 	.word	0x2ffe8e58
2ffd8ef0:	2ffe8e4c 	.word	0x2ffe8e4c
2ffd8ef4:	2ffe8e54 	.word	0x2ffe8e54
2ffd8ef8:	2ffe8e5c 	.word	0x2ffe8e5c
2ffd8efc:	2ffe8e3c 	.word	0x2ffe8e3c
2ffd8f00:	2ffe425f 	.word	0x2ffe425f
2ffd8f04:	2ffe8820 	.word	0x2ffe8820
2ffd8f08:	2ffe428a 	.word	0x2ffe428a
2ffd8f0c:	2ffe421f 	.word	0x2ffe421f
2ffd8f10:	2ffe423e 	.word	0x2ffe423e
2ffd8f14:	2ffe8e50 	.word	0x2ffe8e50
2ffd8f18:	40ff8080 	.word	0x40ff8080
2ffd8f1c:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
2ffd8f20:	2c00      	cmp	r4, #0
2ffd8f22:	f47f af72 	bne.w	2ffd8e0a <mmc_init+0x15e>
2ffd8f26:	683b      	ldr	r3, [r7, #0]
2ffd8f28:	4620      	mov	r0, r4
2ffd8f2a:	4997      	ldr	r1, [pc, #604]	; (2ffd9188 <mmc_init+0x4dc>)
2ffd8f2c:	2208      	movs	r2, #8
2ffd8f2e:	691b      	ldr	r3, [r3, #16]
2ffd8f30:	4798      	blx	r3
2ffd8f32:	4604      	mov	r4, r0
2ffd8f34:	2800      	cmp	r0, #0
2ffd8f36:	d187      	bne.n	2ffd8e48 <mmc_init+0x19c>
2ffd8f38:	4b93      	ldr	r3, [pc, #588]	; (2ffd9188 <mmc_init+0x4dc>)
2ffd8f3a:	681b      	ldr	r3, [r3, #0]
2ffd8f3c:	f413 6a80 	ands.w	sl, r3, #1024	; 0x400
2ffd8f40:	d006      	beq.n	2ffd8f50 <mmc_init+0x2a4>
2ffd8f42:	f1bb 0f01 	cmp.w	fp, #1
2ffd8f46:	bf0c      	ite	eq
2ffd8f48:	f04f 0a02 	moveq.w	sl, #2
2ffd8f4c:	f04f 0a00 	movne.w	sl, #0
2ffd8f50:	f8d8 1000 	ldr.w	r1, [r8]
2ffd8f54:	2300      	movs	r3, #0
2ffd8f56:	220d      	movs	r2, #13
2ffd8f58:	2037      	movs	r0, #55	; 0x37
2ffd8f5a:	0409      	lsls	r1, r1, #16
2ffd8f5c:	f7ff fdb2 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8f60:	4604      	mov	r4, r0
2ffd8f62:	2800      	cmp	r0, #0
2ffd8f64:	f47f af70 	bne.w	2ffd8e48 <mmc_init+0x19c>
2ffd8f68:	4603      	mov	r3, r0
2ffd8f6a:	220d      	movs	r2, #13
2ffd8f6c:	4651      	mov	r1, sl
2ffd8f6e:	2006      	movs	r0, #6
2ffd8f70:	f7ff fda8 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8f74:	4604      	mov	r4, r0
2ffd8f76:	2800      	cmp	r0, #0
2ffd8f78:	f47f af66 	bne.w	2ffd8e48 <mmc_init+0x19c>
2ffd8f7c:	f7ff fdc4 	bl	2ffd8b08 <mmc_device_state>
2ffd8f80:	1e04      	subs	r4, r0, #0
2ffd8f82:	f6ff af61 	blt.w	2ffd8e48 <mmc_init+0x19c>
2ffd8f86:	2c07      	cmp	r4, #7
2ffd8f88:	d0f8      	beq.n	2ffd8f7c <mmc_init+0x2d0>
2ffd8f8a:	683b      	ldr	r3, [r7, #0]
2ffd8f8c:	4659      	mov	r1, fp
2ffd8f8e:	4648      	mov	r0, r9
2ffd8f90:	689b      	ldr	r3, [r3, #8]
2ffd8f92:	4798      	blx	r3
2ffd8f94:	4604      	mov	r4, r0
2ffd8f96:	2800      	cmp	r0, #0
2ffd8f98:	f47f af56 	bne.w	2ffd8e48 <mmc_init+0x19c>
2ffd8f9c:	f8d5 c000 	ldr.w	ip, [r5]
2ffd8fa0:	f8dc 3014 	ldr.w	r3, [ip, #20]
2ffd8fa4:	2b01      	cmp	r3, #1
2ffd8fa6:	d04d      	beq.n	2ffd9044 <mmc_init+0x398>
2ffd8fa8:	2b02      	cmp	r3, #2
2ffd8faa:	f000 808a 	beq.w	2ffd90c2 <mmc_init+0x416>
2ffd8fae:	2b00      	cmp	r3, #0
2ffd8fb0:	f040 80e4 	bne.w	2ffd917c <mmc_init+0x4d0>
2ffd8fb4:	683b      	ldr	r3, [r7, #0]
2ffd8fb6:	f44f 7800 	mov.w	r8, #512	; 0x200
2ffd8fba:	4974      	ldr	r1, [pc, #464]	; (2ffd918c <mmc_init+0x4e0>)
2ffd8fbc:	4642      	mov	r2, r8
2ffd8fbe:	68db      	ldr	r3, [r3, #12]
2ffd8fc0:	f8cc 8008 	str.w	r8, [ip, #8]
2ffd8fc4:	f8df a1c4 	ldr.w	sl, [pc, #452]	; 2ffd918c <mmc_init+0x4e0>
2ffd8fc8:	4798      	blx	r3
2ffd8fca:	2800      	cmp	r0, #0
2ffd8fcc:	f040 80ce 	bne.w	2ffd916c <mmc_init+0x4c0>
2ffd8fd0:	4623      	mov	r3, r4
2ffd8fd2:	220d      	movs	r2, #13
2ffd8fd4:	4621      	mov	r1, r4
2ffd8fd6:	2008      	movs	r0, #8
2ffd8fd8:	f7ff fd74 	bl	2ffd8ac4 <mmc_send_cmd>
2ffd8fdc:	2800      	cmp	r0, #0
2ffd8fde:	f040 80d0 	bne.w	2ffd9182 <mmc_init+0x4d6>
2ffd8fe2:	683b      	ldr	r3, [r7, #0]
2ffd8fe4:	4642      	mov	r2, r8
2ffd8fe6:	4651      	mov	r1, sl
2ffd8fe8:	691b      	ldr	r3, [r3, #16]
2ffd8fea:	4798      	blx	r3
2ffd8fec:	2800      	cmp	r0, #0
2ffd8fee:	f040 80bd 	bne.w	2ffd916c <mmc_init+0x4c0>
2ffd8ff2:	f7ff fd89 	bl	2ffd8b08 <mmc_device_state>
2ffd8ff6:	2800      	cmp	r0, #0
2ffd8ff8:	f2c0 80b8 	blt.w	2ffd916c <mmc_init+0x4c0>
2ffd8ffc:	2804      	cmp	r0, #4
2ffd8ffe:	d1f8      	bne.n	2ffd8ff2 <mmc_init+0x346>
2ffd9000:	6829      	ldr	r1, [r5, #0]
2ffd9002:	f8da 20d4 	ldr.w	r2, [sl, #212]	; 0xd4
2ffd9006:	688b      	ldr	r3, [r1, #8]
2ffd9008:	fba2 2303 	umull	r2, r3, r2, r3
2ffd900c:	e9c1 2300 	strd	r2, r3, [r1]
2ffd9010:	4b5f      	ldr	r3, [pc, #380]	; (2ffd9190 <mmc_init+0x4e4>)
2ffd9012:	7b18      	ldrb	r0, [r3, #12]
2ffd9014:	f3c0 03c3 	ubfx	r3, r0, #3, #4
2ffd9018:	f010 0f78 	tst.w	r0, #120	; 0x78
2ffd901c:	d16f      	bne.n	2ffd90fe <mmc_init+0x452>
2ffd901e:	f240 113d 	movw	r1, #317	; 0x13d
2ffd9022:	e661      	b.n	2ffd8ce8 <mmc_init+0x3c>
2ffd9024:	4b5a      	ldr	r3, [pc, #360]	; (2ffd9190 <mmc_init+0x4e4>)
2ffd9026:	7bdb      	ldrb	r3, [r3, #15]
2ffd9028:	f003 033c 	and.w	r3, r3, #60	; 0x3c
2ffd902c:	2b10      	cmp	r3, #16
2ffd902e:	d001      	beq.n	2ffd9034 <mmc_init+0x388>
2ffd9030:	46b3      	mov	fp, r6
2ffd9032:	e7aa      	b.n	2ffd8f8a <mmc_init+0x2de>
2ffd9034:	4631      	mov	r1, r6
2ffd9036:	20b7      	movs	r0, #183	; 0xb7
2ffd9038:	f7ff fd96 	bl	2ffd8b68 <mmc_set_ext_csd>
2ffd903c:	4604      	mov	r4, r0
2ffd903e:	2800      	cmp	r0, #0
2ffd9040:	d0f6      	beq.n	2ffd9030 <mmc_init+0x384>
2ffd9042:	e701      	b.n	2ffd8e48 <mmc_init+0x19c>
2ffd9044:	f8df e148 	ldr.w	lr, [pc, #328]	; 2ffd9190 <mmc_init+0x4e4>
2ffd9048:	f640 71fc 	movw	r1, #4092	; 0xffc
2ffd904c:	f04f 0b00 	mov.w	fp, #0
2ffd9050:	f89e 500a 	ldrb.w	r5, [lr, #10]
2ffd9054:	f89e 0007 	ldrb.w	r0, [lr, #7]
2ffd9058:	f005 050f 	and.w	r5, r5, #15
2ffd905c:	fa03 f505 	lsl.w	r5, r3, r5
2ffd9060:	f8be 3008 	ldrh.w	r3, [lr, #8]
2ffd9064:	f8cc 5008 	str.w	r5, [ip, #8]
2ffd9068:	009b      	lsls	r3, r3, #2
2ffd906a:	4019      	ands	r1, r3
2ffd906c:	ea41 1a90 	orr.w	sl, r1, r0, lsr #6
2ffd9070:	2100      	movs	r1, #0
2ffd9072:	458b      	cmp	fp, r1
2ffd9074:	f640 70ff 	movw	r0, #4095	; 0xfff
2ffd9078:	bf08      	it	eq
2ffd907a:	4582      	cmpeq	sl, r0
2ffd907c:	d102      	bne.n	2ffd9084 <mmc_init+0x3d8>
2ffd907e:	f240 111b 	movw	r1, #283	; 0x11b
2ffd9082:	e631      	b.n	2ffd8ce8 <mmc_init+0x3c>
2ffd9084:	f8de 3004 	ldr.w	r3, [lr, #4]
2ffd9088:	f11a 0201 	adds.w	r2, sl, #1
2ffd908c:	f14b 0100 	adc.w	r1, fp, #0
2ffd9090:	f3c3 33c2 	ubfx	r3, r3, #15, #3
2ffd9094:	f103 0e02 	add.w	lr, r3, #2
2ffd9098:	f1a3 001e 	sub.w	r0, r3, #30
2ffd909c:	f1c3 031e 	rsb	r3, r3, #30
2ffd90a0:	fa02 f000 	lsl.w	r0, r2, r0
2ffd90a4:	fa01 f10e 	lsl.w	r1, r1, lr
2ffd90a8:	fa22 f303 	lsr.w	r3, r2, r3
2ffd90ac:	4301      	orrs	r1, r0
2ffd90ae:	fa02 f20e 	lsl.w	r2, r2, lr
2ffd90b2:	4319      	orrs	r1, r3
2ffd90b4:	fba2 2305 	umull	r2, r3, r2, r5
2ffd90b8:	fb05 3301 	mla	r3, r5, r1, r3
2ffd90bc:	e9cc 2300 	strd	r2, r3, [ip]
2ffd90c0:	e7a6      	b.n	2ffd9010 <mmc_init+0x364>
2ffd90c2:	4b33      	ldr	r3, [pc, #204]	; (2ffd9190 <mmc_init+0x4e4>)
2ffd90c4:	7bda      	ldrb	r2, [r3, #15]
2ffd90c6:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
2ffd90ca:	2a40      	cmp	r2, #64	; 0x40
2ffd90cc:	d002      	beq.n	2ffd90d4 <mmc_init+0x428>
2ffd90ce:	f44f 7192 	mov.w	r1, #292	; 0x124
2ffd90d2:	e609      	b.n	2ffd8ce8 <mmc_init+0x3c>
2ffd90d4:	7a1d      	ldrb	r5, [r3, #8]
2ffd90d6:	f44f 7200 	mov.w	r2, #512	; 0x200
2ffd90da:	88d8      	ldrh	r0, [r3, #6]
2ffd90dc:	042d      	lsls	r5, r5, #16
2ffd90de:	f8cc 2008 	str.w	r2, [ip, #8]
2ffd90e2:	f405 157c 	and.w	r5, r5, #4128768	; 0x3f0000
2ffd90e6:	ea45 0300 	orr.w	r3, r5, r0
2ffd90ea:	2200      	movs	r2, #0
2ffd90ec:	3301      	adds	r3, #1
2ffd90ee:	4152      	adcs	r2, r2
2ffd90f0:	04d2      	lsls	r2, r2, #19
2ffd90f2:	ea42 3253 	orr.w	r2, r2, r3, lsr #13
2ffd90f6:	04db      	lsls	r3, r3, #19
2ffd90f8:	e9cc 3200 	strd	r3, r2, [ip]
2ffd90fc:	e788      	b.n	2ffd9010 <mmc_init+0x364>
2ffd90fe:	4d25      	ldr	r5, [pc, #148]	; (2ffd9194 <mmc_init+0x4e8>)
2ffd9100:	6829      	ldr	r1, [r5, #0]
2ffd9102:	f8d1 c014 	ldr.w	ip, [r1, #20]
2ffd9106:	f1bc 0f00 	cmp.w	ip, #0
2ffd910a:	d131      	bne.n	2ffd9170 <mmc_init+0x4c4>
2ffd910c:	4a22      	ldr	r2, [pc, #136]	; (2ffd9198 <mmc_init+0x4ec>)
2ffd910e:	5cd3      	ldrb	r3, [r2, r3]
2ffd9110:	f000 0007 	and.w	r0, r0, #7
2ffd9114:	220a      	movs	r2, #10
2ffd9116:	60cb      	str	r3, [r1, #12]
2ffd9118:	68cb      	ldr	r3, [r1, #12]
2ffd911a:	bb58      	cbnz	r0, 2ffd9174 <mmc_init+0x4c8>
2ffd911c:	f242 7210 	movw	r2, #10000	; 0x2710
2ffd9120:	4353      	muls	r3, r2
2ffd9122:	60cb      	str	r3, [r1, #12]
2ffd9124:	9b01      	ldr	r3, [sp, #4]
2ffd9126:	681b      	ldr	r3, [r3, #0]
2ffd9128:	0799      	lsls	r1, r3, #30
2ffd912a:	f57f ae8d 	bpl.w	2ffd8e48 <mmc_init+0x19c>
2ffd912e:	f1bc 0f02 	cmp.w	ip, #2
2ffd9132:	f47f ae89 	bne.w	2ffd8e48 <mmc_init+0x19c>
2ffd9136:	f7ff fd31 	bl	2ffd8b9c <sd_switch.constprop.0>
2ffd913a:	b9b8      	cbnz	r0, 2ffd916c <mmc_init+0x4c0>
2ffd913c:	f8df 8064 	ldr.w	r8, [pc, #100]	; 2ffd91a4 <mmc_init+0x4f8>
2ffd9140:	f8b8 300c 	ldrh.w	r3, [r8, #12]
2ffd9144:	059a      	lsls	r2, r3, #22
2ffd9146:	f57f ae7f 	bpl.w	2ffd8e48 <mmc_init+0x19c>
2ffd914a:	2001      	movs	r0, #1
2ffd914c:	f7ff fd26 	bl	2ffd8b9c <sd_switch.constprop.0>
2ffd9150:	b960      	cbnz	r0, 2ffd916c <mmc_init+0x4c0>
2ffd9152:	f898 3010 	ldrb.w	r3, [r8, #16]
2ffd9156:	07db      	lsls	r3, r3, #31
2ffd9158:	f57f ae76 	bpl.w	2ffd8e48 <mmc_init+0x19c>
2ffd915c:	682b      	ldr	r3, [r5, #0]
2ffd915e:	4631      	mov	r1, r6
2ffd9160:	4a0e      	ldr	r2, [pc, #56]	; (2ffd919c <mmc_init+0x4f0>)
2ffd9162:	4648      	mov	r0, r9
2ffd9164:	60da      	str	r2, [r3, #12]
2ffd9166:	683b      	ldr	r3, [r7, #0]
2ffd9168:	689b      	ldr	r3, [r3, #8]
2ffd916a:	4798      	blx	r3
2ffd916c:	4604      	mov	r4, r0
2ffd916e:	e66b      	b.n	2ffd8e48 <mmc_init+0x19c>
2ffd9170:	4a0b      	ldr	r2, [pc, #44]	; (2ffd91a0 <mmc_init+0x4f4>)
2ffd9172:	e7cc      	b.n	2ffd910e <mmc_init+0x462>
2ffd9174:	4353      	muls	r3, r2
2ffd9176:	3801      	subs	r0, #1
2ffd9178:	60cb      	str	r3, [r1, #12]
2ffd917a:	e7cd      	b.n	2ffd9118 <mmc_init+0x46c>
2ffd917c:	f06f 0415 	mvn.w	r4, #21
2ffd9180:	e662      	b.n	2ffd8e48 <mmc_init+0x19c>
2ffd9182:	4604      	mov	r4, r0
2ffd9184:	e660      	b.n	2ffd8e48 <mmc_init+0x19c>
2ffd9186:	bf00      	nop
2ffd9188:	2ffe8820 	.word	0x2ffe8820
2ffd918c:	2ffe8620 	.word	0x2ffe8620
2ffd9190:	2ffe8e3c 	.word	0x2ffe8e3c
2ffd9194:	2ffe8e4c 	.word	0x2ffe8e4c
2ffd9198:	2ffe42c4 	.word	0x2ffe42c4
2ffd919c:	02faf080 	.word	0x02faf080
2ffd91a0:	2ffe42b4 	.word	0x2ffe42b4
2ffd91a4:	2ffe90e4 	.word	0x2ffe90e4

2ffd91a8 <parse_gpt_entry>:
2ffd91a8:	b570      	push	{r4, r5, r6, lr}
2ffd91aa:	460d      	mov	r5, r1
2ffd91ac:	4604      	mov	r4, r0
2ffd91ae:	b100      	cbz	r0, 2ffd91b2 <parse_gpt_entry+0xa>
2ffd91b0:	b919      	cbnz	r1, 2ffd91ba <parse_gpt_entry+0x12>
2ffd91b2:	212c      	movs	r1, #44	; 0x2c
2ffd91b4:	4822      	ldr	r0, [pc, #136]	; (2ffd9240 <parse_gpt_entry+0x98>)
2ffd91b6:	f009 fead 	bl	2ffe2f14 <__assert>
2ffd91ba:	e9d0 2308 	ldrd	r2, r3, [r0, #32]
2ffd91be:	4313      	orrs	r3, r2
2ffd91c0:	d103      	bne.n	2ffd91ca <parse_gpt_entry+0x22>
2ffd91c2:	e9d0 230a 	ldrd	r2, r3, [r0, #40]	; 0x28
2ffd91c6:	4313      	orrs	r3, r2
2ffd91c8:	d037      	beq.n	2ffd923a <parse_gpt_entry+0x92>
2ffd91ca:	2138      	movs	r1, #56	; 0x38
2ffd91cc:	4628      	mov	r0, r5
2ffd91ce:	f7fd e948 	blx	2ffd6460 <zero_normalmem>
2ffd91d2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
2ffd91d6:	b90b      	cbnz	r3, 2ffd91dc <parse_gpt_entry+0x34>
2ffd91d8:	2118      	movs	r1, #24
2ffd91da:	e7eb      	b.n	2ffd91b4 <parse_gpt_entry+0xc>
2ffd91dc:	4622      	mov	r2, r4
2ffd91de:	f104 0048 	add.w	r0, r4, #72	; 0x48
2ffd91e2:	4621      	mov	r1, r4
2ffd91e4:	f891 3039 	ldrb.w	r3, [r1, #57]	; 0x39
2ffd91e8:	bb3b      	cbnz	r3, 2ffd923a <parse_gpt_entry+0x92>
2ffd91ea:	3102      	adds	r1, #2
2ffd91ec:	4281      	cmp	r1, r0
2ffd91ee:	d1f9      	bne.n	2ffd91e4 <parse_gpt_entry+0x3c>
2ffd91f0:	f105 0110 	add.w	r1, r5, #16
2ffd91f4:	1058      	asrs	r0, r3, #1
2ffd91f6:	f892 6038 	ldrb.w	r6, [r2, #56]	; 0x38
2ffd91fa:	540e      	strb	r6, [r1, r0]
2ffd91fc:	f892 0038 	ldrb.w	r0, [r2, #56]	; 0x38
2ffd9200:	b118      	cbz	r0, 2ffd920a <parse_gpt_entry+0x62>
2ffd9202:	3302      	adds	r3, #2
2ffd9204:	3202      	adds	r2, #2
2ffd9206:	2b48      	cmp	r3, #72	; 0x48
2ffd9208:	d1f4      	bne.n	2ffd91f4 <parse_gpt_entry+0x4c>
2ffd920a:	e9d4 1008 	ldrd	r1, r0, [r4, #32]
2ffd920e:	0243      	lsls	r3, r0, #9
2ffd9210:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
2ffd9214:	024a      	lsls	r2, r1, #9
2ffd9216:	e9c5 2300 	strd	r2, r3, [r5]
2ffd921a:	e9d4 320a 	ldrd	r3, r2, [r4, #40]	; 0x28
2ffd921e:	3301      	adds	r3, #1
2ffd9220:	f142 0200 	adc.w	r2, r2, #0
2ffd9224:	1a5b      	subs	r3, r3, r1
2ffd9226:	eb62 0200 	sbc.w	r2, r2, r0
2ffd922a:	2000      	movs	r0, #0
2ffd922c:	0252      	lsls	r2, r2, #9
2ffd922e:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
2ffd9232:	025b      	lsls	r3, r3, #9
2ffd9234:	e9c5 3202 	strd	r3, r2, [r5, #8]
2ffd9238:	e001      	b.n	2ffd923e <parse_gpt_entry+0x96>
2ffd923a:	f06f 0015 	mvn.w	r0, #21
2ffd923e:	bd70      	pop	{r4, r5, r6, pc}
2ffd9240:	2ffe42d4 	.word	0x2ffe42d4

2ffd9244 <load_partition_table>:
2ffd9244:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffd9248:	b0a9      	sub	sp, #164	; 0xa4
2ffd924a:	2300      	movs	r3, #0
2ffd924c:	aa02      	add	r2, sp, #8
2ffd924e:	9302      	str	r3, [sp, #8]
2ffd9250:	4669      	mov	r1, sp
2ffd9252:	4605      	mov	r5, r0
2ffd9254:	f7fe fd2a 	bl	2ffd7cac <plat_get_image_source>
2ffd9258:	4604      	mov	r4, r0
2ffd925a:	b140      	cbz	r0, 2ffd926e <load_partition_table+0x2a>
2ffd925c:	4602      	mov	r2, r0
2ffd925e:	4629      	mov	r1, r5
2ffd9260:	486c      	ldr	r0, [pc, #432]	; (2ffd9414 <load_partition_table+0x1d0>)
2ffd9262:	f003 fc43 	bl	2ffdcaec <tf_log>
2ffd9266:	4620      	mov	r0, r4
2ffd9268:	b029      	add	sp, #164	; 0xa4
2ffd926a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffd926e:	9902      	ldr	r1, [sp, #8]
2ffd9270:	aa01      	add	r2, sp, #4
2ffd9272:	9800      	ldr	r0, [sp, #0]
2ffd9274:	f7fd ff3a 	bl	2ffd70ec <io_open>
2ffd9278:	4604      	mov	r4, r0
2ffd927a:	b118      	cbz	r0, 2ffd9284 <load_partition_table+0x40>
2ffd927c:	4866      	ldr	r0, [pc, #408]	; (2ffd9418 <load_partition_table+0x1d4>)
2ffd927e:	4622      	mov	r2, r4
2ffd9280:	4629      	mov	r1, r5
2ffd9282:	e7ee      	b.n	2ffd9262 <load_partition_table+0x1e>
2ffd9284:	9e01      	ldr	r6, [sp, #4]
2ffd9286:	2200      	movs	r2, #0
2ffd9288:	2300      	movs	r3, #0
2ffd928a:	2101      	movs	r1, #1
2ffd928c:	4630      	mov	r0, r6
2ffd928e:	f7fd ff79 	bl	2ffd7184 <io_seek>
2ffd9292:	4604      	mov	r4, r0
2ffd9294:	b120      	cbz	r0, 2ffd92a0 <load_partition_table+0x5c>
2ffd9296:	4601      	mov	r1, r0
2ffd9298:	4860      	ldr	r0, [pc, #384]	; (2ffd941c <load_partition_table+0x1d8>)
2ffd929a:	f003 fc27 	bl	2ffdcaec <tf_log>
2ffd929e:	e7ed      	b.n	2ffd927c <load_partition_table+0x38>
2ffd92a0:	4f5f      	ldr	r7, [pc, #380]	; (2ffd9420 <load_partition_table+0x1dc>)
2ffd92a2:	ab08      	add	r3, sp, #32
2ffd92a4:	f44f 7200 	mov.w	r2, #512	; 0x200
2ffd92a8:	4630      	mov	r0, r6
2ffd92aa:	4639      	mov	r1, r7
2ffd92ac:	46bb      	mov	fp, r7
2ffd92ae:	f7fd ffa9 	bl	2ffd7204 <io_read>
2ffd92b2:	4604      	mov	r4, r0
2ffd92b4:	b110      	cbz	r0, 2ffd92bc <load_partition_table+0x78>
2ffd92b6:	4601      	mov	r1, r0
2ffd92b8:	485a      	ldr	r0, [pc, #360]	; (2ffd9424 <load_partition_table+0x1e0>)
2ffd92ba:	e7ee      	b.n	2ffd929a <load_partition_table+0x56>
2ffd92bc:	f897 31fe 	ldrb.w	r3, [r7, #510]	; 0x1fe
2ffd92c0:	2b55      	cmp	r3, #85	; 0x55
2ffd92c2:	d002      	beq.n	2ffd92ca <load_partition_table+0x86>
2ffd92c4:	f06f 0401 	mvn.w	r4, #1
2ffd92c8:	e7d8      	b.n	2ffd927c <load_partition_table+0x38>
2ffd92ca:	f897 31ff 	ldrb.w	r3, [r7, #511]	; 0x1ff
2ffd92ce:	2baa      	cmp	r3, #170	; 0xaa
2ffd92d0:	d1f8      	bne.n	2ffd92c4 <load_partition_table+0x80>
2ffd92d2:	4d55      	ldr	r5, [pc, #340]	; (2ffd9428 <load_partition_table+0x1e4>)
2ffd92d4:	2210      	movs	r2, #16
2ffd92d6:	eb0d 0002 	add.w	r0, sp, r2
2ffd92da:	f507 7adf 	add.w	sl, r7, #446	; 0x1be
2ffd92de:	4651      	mov	r1, sl
2ffd92e0:	f009 fe40 	bl	2ffe2f64 <memcpy>
2ffd92e4:	f89d 3014 	ldrb.w	r3, [sp, #20]
2ffd92e8:	f8dd 9004 	ldr.w	r9, [sp, #4]
2ffd92ec:	2bee      	cmp	r3, #238	; 0xee
2ffd92ee:	d152      	bne.n	2ffd9396 <load_partition_table+0x152>
2ffd92f0:	f44f 7200 	mov.w	r2, #512	; 0x200
2ffd92f4:	2300      	movs	r3, #0
2ffd92f6:	2101      	movs	r1, #1
2ffd92f8:	4648      	mov	r0, r9
2ffd92fa:	f7fd ff43 	bl	2ffd7184 <io_seek>
2ffd92fe:	bb00      	cbnz	r0, 2ffd9342 <load_partition_table+0xfe>
2ffd9300:	ab03      	add	r3, sp, #12
2ffd9302:	2260      	movs	r2, #96	; 0x60
2ffd9304:	a908      	add	r1, sp, #32
2ffd9306:	4648      	mov	r0, r9
2ffd9308:	f7fd ff7c 	bl	2ffd7204 <io_read>
2ffd930c:	b9c8      	cbnz	r0, 2ffd9342 <load_partition_table+0xfe>
2ffd930e:	9b03      	ldr	r3, [sp, #12]
2ffd9310:	2b60      	cmp	r3, #96	; 0x60
2ffd9312:	d10b      	bne.n	2ffd932c <load_partition_table+0xe8>
2ffd9314:	4945      	ldr	r1, [pc, #276]	; (2ffd942c <load_partition_table+0x1e8>)
2ffd9316:	2208      	movs	r2, #8
2ffd9318:	a808      	add	r0, sp, #32
2ffd931a:	f009 fe15 	bl	2ffe2f48 <memcmp>
2ffd931e:	b980      	cbnz	r0, 2ffd9342 <load_partition_table+0xfe>
2ffd9320:	9b1c      	ldr	r3, [sp, #112]	; 0x70
2ffd9322:	2b03      	cmp	r3, #3
2ffd9324:	bfc8      	it	gt
2ffd9326:	2303      	movgt	r3, #3
2ffd9328:	f8c5 30a8 	str.w	r3, [r5, #168]	; 0xa8
2ffd932c:	9801      	ldr	r0, [sp, #4]
2ffd932e:	f44f 6280 	mov.w	r2, #1024	; 0x400
2ffd9332:	2300      	movs	r3, #0
2ffd9334:	2101      	movs	r1, #1
2ffd9336:	f7fd ff25 	bl	2ffd7184 <io_seek>
2ffd933a:	4604      	mov	r4, r0
2ffd933c:	b128      	cbz	r0, 2ffd934a <load_partition_table+0x106>
2ffd933e:	21e2      	movs	r1, #226	; 0xe2
2ffd9340:	e000      	b.n	2ffd9344 <load_partition_table+0x100>
2ffd9342:	21e0      	movs	r1, #224	; 0xe0
2ffd9344:	483a      	ldr	r0, [pc, #232]	; (2ffd9430 <load_partition_table+0x1ec>)
2ffd9346:	f009 fde5 	bl	2ffe2f14 <__assert>
2ffd934a:	f8dd 8004 	ldr.w	r8, [sp, #4]
2ffd934e:	4606      	mov	r6, r0
2ffd9350:	4f35      	ldr	r7, [pc, #212]	; (2ffd9428 <load_partition_table+0x1e4>)
2ffd9352:	f8d5 30a8 	ldr.w	r3, [r5, #168]	; 0xa8
2ffd9356:	429e      	cmp	r6, r3
2ffd9358:	da11      	bge.n	2ffd937e <load_partition_table+0x13a>
2ffd935a:	ab03      	add	r3, sp, #12
2ffd935c:	2280      	movs	r2, #128	; 0x80
2ffd935e:	a908      	add	r1, sp, #32
2ffd9360:	4640      	mov	r0, r8
2ffd9362:	f7fd ff4f 	bl	2ffd7204 <io_read>
2ffd9366:	9b03      	ldr	r3, [sp, #12]
2ffd9368:	2b80      	cmp	r3, #128	; 0x80
2ffd936a:	d100      	bne.n	2ffd936e <load_partition_table+0x12a>
2ffd936c:	b108      	cbz	r0, 2ffd9372 <load_partition_table+0x12e>
2ffd936e:	21b3      	movs	r1, #179	; 0xb3
2ffd9370:	e7e8      	b.n	2ffd9344 <load_partition_table+0x100>
2ffd9372:	4639      	mov	r1, r7
2ffd9374:	a808      	add	r0, sp, #32
2ffd9376:	3738      	adds	r7, #56	; 0x38
2ffd9378:	f7ff ff16 	bl	2ffd91a8 <parse_gpt_entry>
2ffd937c:	b118      	cbz	r0, 2ffd9386 <load_partition_table+0x142>
2ffd937e:	b926      	cbnz	r6, 2ffd938a <load_partition_table+0x146>
2ffd9380:	f06f 0415 	mvn.w	r4, #21
2ffd9384:	e003      	b.n	2ffd938e <load_partition_table+0x14a>
2ffd9386:	3601      	adds	r6, #1
2ffd9388:	e7e3      	b.n	2ffd9352 <load_partition_table+0x10e>
2ffd938a:	f8c5 60a8 	str.w	r6, [r5, #168]	; 0xa8
2ffd938e:	9801      	ldr	r0, [sp, #4]
2ffd9390:	f7fd ff5c 	bl	2ffd724c <io_close>
2ffd9394:	e767      	b.n	2ffd9266 <load_partition_table+0x22>
2ffd9396:	462e      	mov	r6, r5
2ffd9398:	46a0      	mov	r8, r4
2ffd939a:	2304      	movs	r3, #4
2ffd939c:	f8c5 30a8 	str.w	r3, [r5, #168]	; 0xa8
2ffd93a0:	2101      	movs	r1, #1
2ffd93a2:	2200      	movs	r2, #0
2ffd93a4:	2300      	movs	r3, #0
2ffd93a6:	4648      	mov	r0, r9
2ffd93a8:	f7fd feec 	bl	2ffd7184 <io_seek>
2ffd93ac:	4601      	mov	r1, r0
2ffd93ae:	b1b8      	cbz	r0, 2ffd93e0 <load_partition_table+0x19c>
2ffd93b0:	481a      	ldr	r0, [pc, #104]	; (2ffd941c <load_partition_table+0x1d8>)
2ffd93b2:	f003 fb9b 	bl	2ffdcaec <tf_log>
2ffd93b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
2ffd93b8:	2200      	movs	r2, #0
2ffd93ba:	f108 0801 	add.w	r8, r8, #1
2ffd93be:	025b      	lsls	r3, r3, #9
2ffd93c0:	e9c6 3200 	strd	r3, r2, [r6]
2ffd93c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
2ffd93c6:	025b      	lsls	r3, r3, #9
2ffd93c8:	e9c6 3202 	strd	r3, r2, [r6, #8]
2ffd93cc:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
2ffd93d0:	3638      	adds	r6, #56	; 0x38
2ffd93d2:	f806 3c28 	strb.w	r3, [r6, #-40]
2ffd93d6:	f8d5 30a8 	ldr.w	r3, [r5, #168]	; 0xa8
2ffd93da:	4598      	cmp	r8, r3
2ffd93dc:	dbe0      	blt.n	2ffd93a0 <load_partition_table+0x15c>
2ffd93de:	e7d6      	b.n	2ffd938e <load_partition_table+0x14a>
2ffd93e0:	4639      	mov	r1, r7
2ffd93e2:	ab03      	add	r3, sp, #12
2ffd93e4:	f44f 7200 	mov.w	r2, #512	; 0x200
2ffd93e8:	4648      	mov	r0, r9
2ffd93ea:	f7fd ff0b 	bl	2ffd7204 <io_read>
2ffd93ee:	4601      	mov	r1, r0
2ffd93f0:	b108      	cbz	r0, 2ffd93f6 <load_partition_table+0x1b2>
2ffd93f2:	480c      	ldr	r0, [pc, #48]	; (2ffd9424 <load_partition_table+0x1e0>)
2ffd93f4:	e7dd      	b.n	2ffd93b2 <load_partition_table+0x16e>
2ffd93f6:	f89b 31fe 	ldrb.w	r3, [fp, #510]	; 0x1fe
2ffd93fa:	2b55      	cmp	r3, #85	; 0x55
2ffd93fc:	d1db      	bne.n	2ffd93b6 <load_partition_table+0x172>
2ffd93fe:	f89b 31ff 	ldrb.w	r3, [fp, #511]	; 0x1ff
2ffd9402:	2baa      	cmp	r3, #170	; 0xaa
2ffd9404:	d1d7      	bne.n	2ffd93b6 <load_partition_table+0x172>
2ffd9406:	2210      	movs	r2, #16
2ffd9408:	a808      	add	r0, sp, #32
2ffd940a:	eb0a 1108 	add.w	r1, sl, r8, lsl #4
2ffd940e:	f009 fda9 	bl	2ffe2f64 <memcpy>
2ffd9412:	e7d0      	b.n	2ffd93b6 <load_partition_table+0x172>
2ffd9414:	2ffe42ec 	.word	0x2ffe42ec
2ffd9418:	2ffe431d 	.word	0x2ffe431d
2ffd941c:	2ffe4341 	.word	0x2ffe4341
2ffd9420:	2ffe9127 	.word	0x2ffe9127
2ffd9424:	2ffe4357 	.word	0x2ffe4357
2ffd9428:	2ffe88a0 	.word	0x2ffe88a0
2ffd942c:	2ffe4372 	.word	0x2ffe4372
2ffd9430:	2ffe437b 	.word	0x2ffe437b

2ffd9434 <get_partition_entry>:
2ffd9434:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffd9438:	4607      	mov	r7, r0
2ffd943a:	4e0d      	ldr	r6, [pc, #52]	; (2ffd9470 <get_partition_entry+0x3c>)
2ffd943c:	2500      	movs	r5, #0
2ffd943e:	f04f 0838 	mov.w	r8, #56	; 0x38
2ffd9442:	4634      	mov	r4, r6
2ffd9444:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
2ffd9448:	42ab      	cmp	r3, r5
2ffd944a:	dc01      	bgt.n	2ffd9450 <get_partition_entry+0x1c>
2ffd944c:	2000      	movs	r0, #0
2ffd944e:	e00a      	b.n	2ffd9466 <get_partition_entry+0x32>
2ffd9450:	f106 0110 	add.w	r1, r6, #16
2ffd9454:	4638      	mov	r0, r7
2ffd9456:	f009 ff78 	bl	2ffe334a <strcmp>
2ffd945a:	fb08 f905 	mul.w	r9, r8, r5
2ffd945e:	3638      	adds	r6, #56	; 0x38
2ffd9460:	b918      	cbnz	r0, 2ffd946a <get_partition_entry+0x36>
2ffd9462:	eb04 0009 	add.w	r0, r4, r9
2ffd9466:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffd946a:	3501      	adds	r5, #1
2ffd946c:	e7ea      	b.n	2ffd9444 <get_partition_entry+0x10>
2ffd946e:	bf00      	nop
2ffd9470:	2ffe88a0 	.word	0x2ffe88a0

2ffd9474 <partition_init>:
2ffd9474:	f7ff bee6 	b.w	2ffd9244 <load_partition_table>

2ffd9478 <device_type_mmc>:
2ffd9478:	2007      	movs	r0, #7
2ffd947a:	4770      	bx	lr

2ffd947c <mmc_dev_init>:
2ffd947c:	2000      	movs	r0, #0
2ffd947e:	4770      	bx	lr

2ffd9480 <mmc_block_open>:
2ffd9480:	4b02      	ldr	r3, [pc, #8]	; (2ffd948c <mmc_block_open+0xc>)
2ffd9482:	2000      	movs	r0, #0
2ffd9484:	2100      	movs	r1, #0
2ffd9486:	e9c3 0100 	strd	r0, r1, [r3]
2ffd948a:	4770      	bx	lr
2ffd948c:	2ffe8950 	.word	0x2ffe8950

2ffd9490 <mmc_block_seek>:
2ffd9490:	4619      	mov	r1, r3
2ffd9492:	4610      	mov	r0, r2
2ffd9494:	4b02      	ldr	r3, [pc, #8]	; (2ffd94a0 <mmc_block_seek+0x10>)
2ffd9496:	e9c3 0100 	strd	r0, r1, [r3]
2ffd949a:	2000      	movs	r0, #0
2ffd949c:	4770      	bx	lr
2ffd949e:	bf00      	nop
2ffd94a0:	2ffe8950 	.word	0x2ffe8950

2ffd94a4 <mmc_block_close>:
2ffd94a4:	2000      	movs	r0, #0
2ffd94a6:	4770      	bx	lr

2ffd94a8 <mmc_block_read>:
2ffd94a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffd94ac:	461f      	mov	r7, r3
2ffd94ae:	4b1c      	ldr	r3, [pc, #112]	; (2ffd9520 <mmc_block_read+0x78>)
2ffd94b0:	4616      	mov	r6, r2
2ffd94b2:	4688      	mov	r8, r1
2ffd94b4:	e9d3 4500 	ldrd	r4, r5, [r3]
2ffd94b8:	4699      	mov	r9, r3
2ffd94ba:	2c00      	cmp	r4, #0
2ffd94bc:	f175 0200 	sbcs.w	r2, r5, #0
2ffd94c0:	da06      	bge.n	2ffd94d0 <mmc_block_read+0x28>
2ffd94c2:	f240 13ff 	movw	r3, #511	; 0x1ff
2ffd94c6:	18e4      	adds	r4, r4, r3
2ffd94c8:	f04f 0300 	mov.w	r3, #0
2ffd94cc:	eb43 0505 	adc.w	r5, r3, r5
2ffd94d0:	0a60      	lsrs	r0, r4, #9
2ffd94d2:	4632      	mov	r2, r6
2ffd94d4:	ea40 50c5 	orr.w	r0, r0, r5, lsl #23
2ffd94d8:	4641      	mov	r1, r8
2ffd94da:	f7ff fb83 	bl	2ffd8be4 <mmc_read_blocks>
2ffd94de:	4286      	cmp	r6, r0
2ffd94e0:	6038      	str	r0, [r7, #0]
2ffd94e2:	d102      	bne.n	2ffd94ea <mmc_block_read+0x42>
2ffd94e4:	2000      	movs	r0, #0
2ffd94e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffd94ea:	e9d9 4500 	ldrd	r4, r5, [r9]
2ffd94ee:	2c00      	cmp	r4, #0
2ffd94f0:	f175 0300 	sbcs.w	r3, r5, #0
2ffd94f4:	da06      	bge.n	2ffd9504 <mmc_block_read+0x5c>
2ffd94f6:	f240 13ff 	movw	r3, #511	; 0x1ff
2ffd94fa:	18e4      	adds	r4, r4, r3
2ffd94fc:	f04f 0300 	mov.w	r3, #0
2ffd9500:	eb43 0505 	adc.w	r5, r3, r5
2ffd9504:	0a60      	lsrs	r0, r4, #9
2ffd9506:	4632      	mov	r2, r6
2ffd9508:	ea40 50c5 	orr.w	r0, r0, r5, lsl #23
2ffd950c:	4641      	mov	r1, r8
2ffd950e:	f7ff fb69 	bl	2ffd8be4 <mmc_read_blocks>
2ffd9512:	4286      	cmp	r6, r0
2ffd9514:	6038      	str	r0, [r7, #0]
2ffd9516:	d0e5      	beq.n	2ffd94e4 <mmc_block_read+0x3c>
2ffd9518:	f06f 0004 	mvn.w	r0, #4
2ffd951c:	e7e3      	b.n	2ffd94e6 <mmc_block_read+0x3e>
2ffd951e:	bf00      	nop
2ffd9520:	2ffe8950 	.word	0x2ffe8950

2ffd9524 <mmc_dev_open>:
2ffd9524:	b508      	push	{r3, lr}
2ffd9526:	b919      	cbnz	r1, 2ffd9530 <mmc_dev_open+0xc>
2ffd9528:	4803      	ldr	r0, [pc, #12]	; (2ffd9538 <mmc_dev_open+0x14>)
2ffd952a:	213f      	movs	r1, #63	; 0x3f
2ffd952c:	f009 fcf2 	bl	2ffe2f14 <__assert>
2ffd9530:	4b02      	ldr	r3, [pc, #8]	; (2ffd953c <mmc_dev_open+0x18>)
2ffd9532:	2000      	movs	r0, #0
2ffd9534:	600b      	str	r3, [r1, #0]
2ffd9536:	bd08      	pop	{r3, pc}
2ffd9538:	2ffe4399 	.word	0x2ffe4399
2ffd953c:	2ffe43d8 	.word	0x2ffe43d8

2ffd9540 <mmc_dev_close>:
2ffd9540:	2000      	movs	r0, #0
2ffd9542:	4770      	bx	lr

2ffd9544 <register_io_dev_mmc>:
2ffd9544:	b510      	push	{r4, lr}
2ffd9546:	4604      	mov	r4, r0
2ffd9548:	b918      	cbnz	r0, 2ffd9552 <register_io_dev_mmc+0xe>
2ffd954a:	4805      	ldr	r0, [pc, #20]	; (2ffd9560 <register_io_dev_mmc+0x1c>)
2ffd954c:	217f      	movs	r1, #127	; 0x7f
2ffd954e:	f009 fce1 	bl	2ffe2f14 <__assert>
2ffd9552:	4804      	ldr	r0, [pc, #16]	; (2ffd9564 <register_io_dev_mmc+0x20>)
2ffd9554:	f7fd fd70 	bl	2ffd7038 <io_register_device>
2ffd9558:	b908      	cbnz	r0, 2ffd955e <register_io_dev_mmc+0x1a>
2ffd955a:	4b03      	ldr	r3, [pc, #12]	; (2ffd9568 <register_io_dev_mmc+0x24>)
2ffd955c:	6023      	str	r3, [r4, #0]
2ffd955e:	bd10      	pop	{r4, pc}
2ffd9560:	2ffe4399 	.word	0x2ffe4399
2ffd9564:	2ffe43d8 	.word	0x2ffe43d8
2ffd9568:	2ffe43b0 	.word	0x2ffe43b0

2ffd956c <stm32_sdmmc2_write>:
2ffd956c:	2000      	movs	r0, #0
2ffd956e:	4770      	bx	lr

2ffd9570 <dump_registers>:
2ffd9570:	4b20      	ldr	r3, [pc, #128]	; (2ffd95f4 <dump_registers+0x84>)
2ffd9572:	b510      	push	{r4, lr}
2ffd9574:	681c      	ldr	r4, [r3, #0]
2ffd9576:	4820      	ldr	r0, [pc, #128]	; (2ffd95f8 <dump_registers+0x88>)
2ffd9578:	6821      	ldr	r1, [r4, #0]
2ffd957a:	f003 fab7 	bl	2ffdcaec <tf_log>
2ffd957e:	6861      	ldr	r1, [r4, #4]
2ffd9580:	481e      	ldr	r0, [pc, #120]	; (2ffd95fc <dump_registers+0x8c>)
2ffd9582:	f003 fab3 	bl	2ffdcaec <tf_log>
2ffd9586:	68a1      	ldr	r1, [r4, #8]
2ffd9588:	481d      	ldr	r0, [pc, #116]	; (2ffd9600 <dump_registers+0x90>)
2ffd958a:	f003 faaf 	bl	2ffdcaec <tf_log>
2ffd958e:	68e1      	ldr	r1, [r4, #12]
2ffd9590:	481c      	ldr	r0, [pc, #112]	; (2ffd9604 <dump_registers+0x94>)
2ffd9592:	f003 faab 	bl	2ffdcaec <tf_log>
2ffd9596:	6921      	ldr	r1, [r4, #16]
2ffd9598:	481b      	ldr	r0, [pc, #108]	; (2ffd9608 <dump_registers+0x98>)
2ffd959a:	f003 faa7 	bl	2ffdcaec <tf_log>
2ffd959e:	6961      	ldr	r1, [r4, #20]
2ffd95a0:	481a      	ldr	r0, [pc, #104]	; (2ffd960c <dump_registers+0x9c>)
2ffd95a2:	f003 faa3 	bl	2ffdcaec <tf_log>
2ffd95a6:	69a1      	ldr	r1, [r4, #24]
2ffd95a8:	4819      	ldr	r0, [pc, #100]	; (2ffd9610 <dump_registers+0xa0>)
2ffd95aa:	f003 fa9f 	bl	2ffdcaec <tf_log>
2ffd95ae:	69e1      	ldr	r1, [r4, #28]
2ffd95b0:	4818      	ldr	r0, [pc, #96]	; (2ffd9614 <dump_registers+0xa4>)
2ffd95b2:	f003 fa9b 	bl	2ffdcaec <tf_log>
2ffd95b6:	6a21      	ldr	r1, [r4, #32]
2ffd95b8:	4817      	ldr	r0, [pc, #92]	; (2ffd9618 <dump_registers+0xa8>)
2ffd95ba:	f003 fa97 	bl	2ffdcaec <tf_log>
2ffd95be:	6a61      	ldr	r1, [r4, #36]	; 0x24
2ffd95c0:	4816      	ldr	r0, [pc, #88]	; (2ffd961c <dump_registers+0xac>)
2ffd95c2:	f003 fa93 	bl	2ffdcaec <tf_log>
2ffd95c6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2ffd95c8:	4815      	ldr	r0, [pc, #84]	; (2ffd9620 <dump_registers+0xb0>)
2ffd95ca:	f003 fa8f 	bl	2ffdcaec <tf_log>
2ffd95ce:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
2ffd95d0:	4814      	ldr	r0, [pc, #80]	; (2ffd9624 <dump_registers+0xb4>)
2ffd95d2:	f003 fa8b 	bl	2ffdcaec <tf_log>
2ffd95d6:	6b21      	ldr	r1, [r4, #48]	; 0x30
2ffd95d8:	4813      	ldr	r0, [pc, #76]	; (2ffd9628 <dump_registers+0xb8>)
2ffd95da:	f003 fa87 	bl	2ffdcaec <tf_log>
2ffd95de:	6be1      	ldr	r1, [r4, #60]	; 0x3c
2ffd95e0:	4812      	ldr	r0, [pc, #72]	; (2ffd962c <dump_registers+0xbc>)
2ffd95e2:	f003 fa83 	bl	2ffdcaec <tf_log>
2ffd95e6:	6c21      	ldr	r1, [r4, #64]	; 0x40
2ffd95e8:	4811      	ldr	r0, [pc, #68]	; (2ffd9630 <dump_registers+0xc0>)
2ffd95ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffd95ee:	f003 ba7d 	b.w	2ffdcaec <tf_log>
2ffd95f2:	bf00      	nop
2ffd95f4:	2ffe8e60 	.word	0x2ffe8e60
2ffd95f8:	2ffe43e0 	.word	0x2ffe43e0
2ffd95fc:	2ffe43f8 	.word	0x2ffe43f8
2ffd9600:	2ffe4410 	.word	0x2ffe4410
2ffd9604:	2ffe4428 	.word	0x2ffe4428
2ffd9608:	2ffe4440 	.word	0x2ffe4440
2ffd960c:	2ffe4458 	.word	0x2ffe4458
2ffd9610:	2ffe4470 	.word	0x2ffe4470
2ffd9614:	2ffe4488 	.word	0x2ffe4488
2ffd9618:	2ffe44a0 	.word	0x2ffe44a0
2ffd961c:	2ffe44b8 	.word	0x2ffe44b8
2ffd9620:	2ffe44d0 	.word	0x2ffe44d0
2ffd9624:	2ffe44e8 	.word	0x2ffe44e8
2ffd9628:	2ffe4500 	.word	0x2ffe4500
2ffd962c:	2ffe4518 	.word	0x2ffe4518
2ffd9630:	2ffe4530 	.word	0x2ffe4530

2ffd9634 <stm32_sdmmc2_set_ios>:
2ffd9634:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffd9636:	2902      	cmp	r1, #2
2ffd9638:	4c16      	ldr	r4, [pc, #88]	; (2ffd9694 <stm32_sdmmc2_set_ios+0x60>)
2ffd963a:	6923      	ldr	r3, [r4, #16]
2ffd963c:	6825      	ldr	r5, [r4, #0]
2ffd963e:	6860      	ldr	r0, [r4, #4]
2ffd9640:	68da      	ldr	r2, [r3, #12]
2ffd9642:	d806      	bhi.n	2ffd9652 <stm32_sdmmc2_set_ios+0x1e>
2ffd9644:	695b      	ldr	r3, [r3, #20]
2ffd9646:	0389      	lsls	r1, r1, #14
2ffd9648:	b13b      	cbz	r3, 2ffd965a <stm32_sdmmc2_set_ios+0x26>
2ffd964a:	4f13      	ldr	r7, [pc, #76]	; (2ffd9698 <stm32_sdmmc2_set_ios+0x64>)
2ffd964c:	4e13      	ldr	r6, [pc, #76]	; (2ffd969c <stm32_sdmmc2_set_ios+0x68>)
2ffd964e:	4b14      	ldr	r3, [pc, #80]	; (2ffd96a0 <stm32_sdmmc2_set_ios+0x6c>)
2ffd9650:	e006      	b.n	2ffd9660 <stm32_sdmmc2_set_ios+0x2c>
2ffd9652:	f003 fae9 	bl	2ffdcc28 <console_flush>
2ffd9656:	f7fc ee04 	blx	2ffd6260 <do_panic>
2ffd965a:	4f12      	ldr	r7, [pc, #72]	; (2ffd96a4 <stm32_sdmmc2_set_ios+0x70>)
2ffd965c:	4e12      	ldr	r6, [pc, #72]	; (2ffd96a8 <stm32_sdmmc2_set_ios+0x74>)
2ffd965e:	4b13      	ldr	r3, [pc, #76]	; (2ffd96ac <stm32_sdmmc2_set_ios+0x78>)
2ffd9660:	42ba      	cmp	r2, r7
2ffd9662:	bf8c      	ite	hi
2ffd9664:	4632      	movhi	r2, r6
2ffd9666:	461a      	movls	r2, r3
2ffd9668:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2ffd966a:	b113      	cbz	r3, 2ffd9672 <stm32_sdmmc2_set_ios+0x3e>
2ffd966c:	429a      	cmp	r2, r3
2ffd966e:	bf28      	it	cs
2ffd9670:	461a      	movcs	r2, r3
2ffd9672:	69a3      	ldr	r3, [r4, #24]
2ffd9674:	3801      	subs	r0, #1
2ffd9676:	0056      	lsls	r6, r2, #1
2ffd9678:	eb00 0242 	add.w	r2, r0, r2, lsl #1
2ffd967c:	2000      	movs	r0, #0
2ffd967e:	6964      	ldr	r4, [r4, #20]
2ffd9680:	fbb2 f2f6 	udiv	r2, r2, r6
2ffd9684:	4323      	orrs	r3, r4
2ffd9686:	4313      	orrs	r3, r2
2ffd9688:	430b      	orrs	r3, r1
2ffd968a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
2ffd968e:	606b      	str	r3, [r5, #4]
2ffd9690:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffd9692:	bf00      	nop
2ffd9694:	2ffe8e60 	.word	0x2ffe8e60
2ffd9698:	02faf07f 	.word	0x02faf07f
2ffd969c:	02faf080 	.word	0x02faf080
2ffd96a0:	017d7840 	.word	0x017d7840
2ffd96a4:	031974ff 	.word	0x031974ff
2ffd96a8:	03197500 	.word	0x03197500
2ffd96ac:	018cba80 	.word	0x018cba80

2ffd96b0 <stm32_sdmmc2_init>:
2ffd96b0:	b570      	push	{r4, r5, r6, lr}
2ffd96b2:	4c21      	ldr	r4, [pc, #132]	; (2ffd9738 <stm32_sdmmc2_init+0x88>)
2ffd96b4:	4b21      	ldr	r3, [pc, #132]	; (2ffd973c <stm32_sdmmc2_init+0x8c>)
2ffd96b6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
2ffd96b8:	6825      	ldr	r5, [r4, #0]
2ffd96ba:	2e00      	cmp	r6, #0
2ffd96bc:	d03a      	beq.n	2ffd9734 <stm32_sdmmc2_init+0x84>
2ffd96be:	429e      	cmp	r6, r3
2ffd96c0:	bf28      	it	cs
2ffd96c2:	461e      	movcs	r6, r3
2ffd96c4:	6b63      	ldr	r3, [r4, #52]	; 0x34
2ffd96c6:	3301      	adds	r3, #1
2ffd96c8:	d005      	beq.n	2ffd96d6 <stm32_sdmmc2_init+0x26>
2ffd96ca:	481d      	ldr	r0, [pc, #116]	; (2ffd9740 <stm32_sdmmc2_init+0x90>)
2ffd96cc:	f008 fabc 	bl	2ffe1c48 <stm32mp_regulator_register>
2ffd96d0:	481b      	ldr	r0, [pc, #108]	; (2ffd9740 <stm32_sdmmc2_init+0x90>)
2ffd96d2:	f008 faa7 	bl	2ffe1c24 <stm32mp_regulator_disable>
2ffd96d6:	2002      	movs	r0, #2
2ffd96d8:	f004 fea2 	bl	2ffde420 <mdelay>
2ffd96dc:	69e3      	ldr	r3, [r4, #28]
2ffd96de:	2002      	movs	r0, #2
2ffd96e0:	f043 0302 	orr.w	r3, r3, #2
2ffd96e4:	602b      	str	r3, [r5, #0]
2ffd96e6:	f004 fe9b 	bl	2ffde420 <mdelay>
2ffd96ea:	6b63      	ldr	r3, [r4, #52]	; 0x34
2ffd96ec:	3301      	adds	r3, #1
2ffd96ee:	d002      	beq.n	2ffd96f6 <stm32_sdmmc2_init+0x46>
2ffd96f0:	4813      	ldr	r0, [pc, #76]	; (2ffd9740 <stm32_sdmmc2_init+0x90>)
2ffd96f2:	f008 fa89 	bl	2ffe1c08 <stm32mp_regulator_enable>
2ffd96f6:	2002      	movs	r0, #2
2ffd96f8:	f004 fe92 	bl	2ffde420 <mdelay>
2ffd96fc:	69e3      	ldr	r3, [r4, #28]
2ffd96fe:	2002      	movs	r0, #2
2ffd9700:	602b      	str	r3, [r5, #0]
2ffd9702:	f004 fe8d 	bl	2ffde420 <mdelay>
2ffd9706:	6863      	ldr	r3, [r4, #4]
2ffd9708:	2001      	movs	r0, #1
2ffd970a:	0072      	lsls	r2, r6, #1
2ffd970c:	6961      	ldr	r1, [r4, #20]
2ffd970e:	3b01      	subs	r3, #1
2ffd9710:	eb03 0346 	add.w	r3, r3, r6, lsl #1
2ffd9714:	fbb3 f3f2 	udiv	r3, r3, r2
2ffd9718:	69a2      	ldr	r2, [r4, #24]
2ffd971a:	430a      	orrs	r2, r1
2ffd971c:	4313      	orrs	r3, r2
2ffd971e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
2ffd9722:	606b      	str	r3, [r5, #4]
2ffd9724:	69e3      	ldr	r3, [r4, #28]
2ffd9726:	f043 0303 	orr.w	r3, r3, #3
2ffd972a:	602b      	str	r3, [r5, #0]
2ffd972c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffd9730:	f004 be76 	b.w	2ffde420 <mdelay>
2ffd9734:	461e      	mov	r6, r3
2ffd9736:	e7c5      	b.n	2ffd96c4 <stm32_sdmmc2_init+0x14>
2ffd9738:	2ffe8e60 	.word	0x2ffe8e60
2ffd973c:	00061a80 	.word	0x00061a80
2ffd9740:	2ffe8e90 	.word	0x2ffe8e90

2ffd9744 <stm32_sdmmc2_send_cmd>:
2ffd9744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffd9748:	4605      	mov	r5, r0
2ffd974a:	b089      	sub	sp, #36	; 0x24
2ffd974c:	b920      	cbnz	r0, 2ffd9758 <stm32_sdmmc2_send_cmd+0x14>
2ffd974e:	489c      	ldr	r0, [pc, #624]	; (2ffd99c0 <stm32_sdmmc2_send_cmd+0x27c>)
2ffd9750:	f240 11bf 	movw	r1, #447	; 0x1bf
2ffd9754:	f009 fbde 	bl	2ffe2f14 <__assert>
2ffd9758:	f8df a268 	ldr.w	sl, [pc, #616]	; 2ffd99c4 <stm32_sdmmc2_send_cmd+0x280>
2ffd975c:	2300      	movs	r3, #0
2ffd975e:	9300      	str	r3, [sp, #0]
2ffd9760:	4b98      	ldr	r3, [pc, #608]	; (2ffd99c4 <stm32_sdmmc2_send_cmd+0x280>)
2ffd9762:	6869      	ldr	r1, [r5, #4]
2ffd9764:	681e      	ldr	r6, [r3, #0]
2ffd9766:	68f3      	ldr	r3, [r6, #12]
2ffd9768:	04da      	lsls	r2, r3, #19
2ffd976a:	bf44      	itt	mi
2ffd976c:	2300      	movmi	r3, #0
2ffd976e:	60f3      	strmi	r3, [r6, #12]
2ffd9770:	682a      	ldr	r2, [r5, #0]
2ffd9772:	68a8      	ldr	r0, [r5, #8]
2ffd9774:	f442 5b80 	orr.w	fp, r2, #4096	; 0x1000
2ffd9778:	b310      	cbz	r0, 2ffd97c0 <stm32_sdmmc2_send_cmd+0x7c>
2ffd977a:	07c3      	lsls	r3, r0, #31
2ffd977c:	d523      	bpl.n	2ffd97c6 <stm32_sdmmc2_send_cmd+0x82>
2ffd977e:	0787      	lsls	r7, r0, #30
2ffd9780:	d504      	bpl.n	2ffd978c <stm32_sdmmc2_send_cmd+0x48>
2ffd9782:	f442 5b98 	orr.w	fp, r2, #4864	; 0x1300
2ffd9786:	f04f 0844 	mov.w	r8, #68	; 0x44
2ffd978a:	e005      	b.n	2ffd9798 <stm32_sdmmc2_send_cmd+0x54>
2ffd978c:	0744      	lsls	r4, r0, #29
2ffd978e:	d514      	bpl.n	2ffd97ba <stm32_sdmmc2_send_cmd+0x76>
2ffd9790:	f442 5b88 	orr.w	fp, r2, #4352	; 0x1100
2ffd9794:	f04f 0845 	mov.w	r8, #69	; 0x45
2ffd9798:	2a12      	cmp	r2, #18
2ffd979a:	d817      	bhi.n	2ffd97cc <stm32_sdmmc2_send_cmd+0x88>
2ffd979c:	b1d2      	cbz	r2, 2ffd97d4 <stm32_sdmmc2_send_cmd+0x90>
2ffd979e:	1e53      	subs	r3, r2, #1
2ffd97a0:	2b11      	cmp	r3, #17
2ffd97a2:	d817      	bhi.n	2ffd97d4 <stm32_sdmmc2_send_cmd+0x90>
2ffd97a4:	e8df f003 	tbb	[pc, r3]
2ffd97a8:	16161618 	.word	0x16161618
2ffd97ac:	2b161b16 	.word	0x2b161b16
2ffd97b0:	73161616 	.word	0x73161616
2ffd97b4:	16161616 	.word	0x16161616
2ffd97b8:	7676      	.short	0x7676
2ffd97ba:	f442 5b90 	orr.w	fp, r2, #4608	; 0x1200
2ffd97be:	e7e2      	b.n	2ffd9786 <stm32_sdmmc2_send_cmd+0x42>
2ffd97c0:	f04f 0884 	mov.w	r8, #132	; 0x84
2ffd97c4:	e7e8      	b.n	2ffd9798 <stm32_sdmmc2_send_cmd+0x54>
2ffd97c6:	f04f 0804 	mov.w	r8, #4
2ffd97ca:	e7e5      	b.n	2ffd9798 <stm32_sdmmc2_send_cmd+0x54>
2ffd97cc:	2a29      	cmp	r2, #41	; 0x29
2ffd97ce:	d06a      	beq.n	2ffd98a6 <stm32_sdmmc2_send_cmd+0x162>
2ffd97d0:	2a33      	cmp	r2, #51	; 0x33
2ffd97d2:	d00d      	beq.n	2ffd97f0 <stm32_sdmmc2_send_cmd+0xac>
2ffd97d4:	2400      	movs	r4, #0
2ffd97d6:	e019      	b.n	2ffd980c <stm32_sdmmc2_send_cmd+0xc8>
2ffd97d8:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
2ffd97dc:	e7fa      	b.n	2ffd97d4 <stm32_sdmmc2_send_cmd+0x90>
2ffd97de:	f8da 3010 	ldr.w	r3, [sl, #16]
2ffd97e2:	695b      	ldr	r3, [r3, #20]
2ffd97e4:	2b02      	cmp	r3, #2
2ffd97e6:	d1f5      	bne.n	2ffd97d4 <stm32_sdmmc2_send_cmd+0x90>
2ffd97e8:	4b77      	ldr	r3, [pc, #476]	; (2ffd99c8 <stm32_sdmmc2_send_cmd+0x284>)
2ffd97ea:	781b      	ldrb	r3, [r3, #0]
2ffd97ec:	2b00      	cmp	r3, #0
2ffd97ee:	d1f1      	bne.n	2ffd97d4 <stm32_sdmmc2_send_cmd+0x90>
2ffd97f0:	f89a 302c 	ldrb.w	r3, [sl, #44]	; 0x2c
2ffd97f4:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
2ffd97f8:	4c74      	ldr	r4, [pc, #464]	; (2ffd99cc <stm32_sdmmc2_send_cmd+0x288>)
2ffd97fa:	2b00      	cmp	r3, #0
2ffd97fc:	e050      	b.n	2ffd98a0 <stm32_sdmmc2_send_cmd+0x15c>
2ffd97fe:	f8da 3010 	ldr.w	r3, [sl, #16]
2ffd9802:	695c      	ldr	r4, [r3, #20]
2ffd9804:	2c00      	cmp	r4, #0
2ffd9806:	d1e5      	bne.n	2ffd97d4 <stm32_sdmmc2_send_cmd+0x90>
2ffd9808:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
2ffd980c:	4b6e      	ldr	r3, [pc, #440]	; (2ffd99c8 <stm32_sdmmc2_send_cmd+0x284>)
2ffd980e:	f1a2 0737 	sub.w	r7, r2, #55	; 0x37
2ffd9812:	427a      	negs	r2, r7
2ffd9814:	417a      	adcs	r2, r7
2ffd9816:	701a      	strb	r2, [r3, #0]
2ffd9818:	06c3      	lsls	r3, r0, #27
2ffd981a:	bf44      	itt	mi
2ffd981c:	f04f 33ff 	movmi.w	r3, #4294967295	; 0xffffffff
2ffd9820:	6273      	strmi	r3, [r6, #36]	; 0x24
2ffd9822:	f106 0334 	add.w	r3, r6, #52	; 0x34
2ffd9826:	60b1      	str	r1, [r6, #8]
2ffd9828:	9301      	str	r3, [sp, #4]
2ffd982a:	f8c6 b00c 	str.w	fp, [r6, #12]
2ffd982e:	6b77      	ldr	r7, [r6, #52]	; 0x34
2ffd9830:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffd9834:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffd9838:	f242 7110 	movw	r1, #10000	; 0x2710
2ffd983c:	e9cd 2306 	strd	r2, r3, [sp, #24]
2ffd9840:	fba0 0101 	umull	r0, r1, r0, r1
2ffd9844:	4a62      	ldr	r2, [pc, #392]	; (2ffd99d0 <stm32_sdmmc2_send_cmd+0x28c>)
2ffd9846:	2300      	movs	r3, #0
2ffd9848:	f008 ef0a 	blx	2ffe2660 <__aeabi_uldivmod>
2ffd984c:	9b06      	ldr	r3, [sp, #24]
2ffd984e:	18c3      	adds	r3, r0, r3
2ffd9850:	9302      	str	r3, [sp, #8]
2ffd9852:	9b07      	ldr	r3, [sp, #28]
2ffd9854:	eb41 0303 	adc.w	r3, r1, r3
2ffd9858:	9303      	str	r3, [sp, #12]
2ffd985a:	ea18 0f07 	tst.w	r8, r7
2ffd985e:	d025      	beq.n	2ffd98ac <stm32_sdmmc2_send_cmd+0x168>
2ffd9860:	f017 0f05 	tst.w	r7, #5
2ffd9864:	d043      	beq.n	2ffd98ee <stm32_sdmmc2_send_cmd+0x1aa>
2ffd9866:	0779      	lsls	r1, r7, #29
2ffd9868:	682a      	ldr	r2, [r5, #0]
2ffd986a:	d52f      	bpl.n	2ffd98cc <stm32_sdmmc2_send_cmd+0x188>
2ffd986c:	2a01      	cmp	r2, #1
2ffd986e:	d00b      	beq.n	2ffd9888 <stm32_sdmmc2_send_cmd+0x144>
2ffd9870:	2a0d      	cmp	r2, #13
2ffd9872:	d009      	beq.n	2ffd9888 <stm32_sdmmc2_send_cmd+0x144>
2ffd9874:	2a08      	cmp	r2, #8
2ffd9876:	d102      	bne.n	2ffd987e <stm32_sdmmc2_send_cmd+0x13a>
2ffd9878:	68ab      	ldr	r3, [r5, #8]
2ffd987a:	2b0d      	cmp	r3, #13
2ffd987c:	d004      	beq.n	2ffd9888 <stm32_sdmmc2_send_cmd+0x144>
2ffd987e:	4955      	ldr	r1, [pc, #340]	; (2ffd99d4 <stm32_sdmmc2_send_cmd+0x290>)
2ffd9880:	463b      	mov	r3, r7
2ffd9882:	4855      	ldr	r0, [pc, #340]	; (2ffd99d8 <stm32_sdmmc2_send_cmd+0x294>)
2ffd9884:	f003 f932 	bl	2ffdcaec <tf_log>
2ffd9888:	f06f 043b 	mvn.w	r4, #59	; 0x3b
2ffd988c:	e025      	b.n	2ffd98da <stm32_sdmmc2_send_cmd+0x196>
2ffd988e:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
2ffd9892:	e79f      	b.n	2ffd97d4 <stm32_sdmmc2_send_cmd+0x90>
2ffd9894:	f89a 302c 	ldrb.w	r3, [sl, #44]	; 0x2c
2ffd9898:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
2ffd989c:	4c4f      	ldr	r4, [pc, #316]	; (2ffd99dc <stm32_sdmmc2_send_cmd+0x298>)
2ffd989e:	2b00      	cmp	r3, #0
2ffd98a0:	bf08      	it	eq
2ffd98a2:	2400      	moveq	r4, #0
2ffd98a4:	e7b2      	b.n	2ffd980c <stm32_sdmmc2_send_cmd+0xc8>
2ffd98a6:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
2ffd98aa:	e793      	b.n	2ffd97d4 <stm32_sdmmc2_send_cmd+0x90>
2ffd98ac:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffd98b0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
2ffd98b4:	4299      	cmp	r1, r3
2ffd98b6:	bf08      	it	eq
2ffd98b8:	4290      	cmpeq	r0, r2
2ffd98ba:	d204      	bcs.n	2ffd98c6 <stm32_sdmmc2_send_cmd+0x182>
2ffd98bc:	682a      	ldr	r2, [r5, #0]
2ffd98be:	463b      	mov	r3, r7
2ffd98c0:	4944      	ldr	r1, [pc, #272]	; (2ffd99d4 <stm32_sdmmc2_send_cmd+0x290>)
2ffd98c2:	4847      	ldr	r0, [pc, #284]	; (2ffd99e0 <stm32_sdmmc2_send_cmd+0x29c>)
2ffd98c4:	e7de      	b.n	2ffd9884 <stm32_sdmmc2_send_cmd+0x140>
2ffd98c6:	9b01      	ldr	r3, [sp, #4]
2ffd98c8:	681f      	ldr	r7, [r3, #0]
2ffd98ca:	e7c6      	b.n	2ffd985a <stm32_sdmmc2_send_cmd+0x116>
2ffd98cc:	4941      	ldr	r1, [pc, #260]	; (2ffd99d4 <stm32_sdmmc2_send_cmd+0x290>)
2ffd98ce:	463b      	mov	r3, r7
2ffd98d0:	4844      	ldr	r0, [pc, #272]	; (2ffd99e4 <stm32_sdmmc2_send_cmd+0x2a0>)
2ffd98d2:	f06f 0404 	mvn.w	r4, #4
2ffd98d6:	f003 f909 	bl	2ffdcaec <tf_log>
2ffd98da:	4b43      	ldr	r3, [pc, #268]	; (2ffd99e8 <stm32_sdmmc2_send_cmd+0x2a4>)
2ffd98dc:	63b3      	str	r3, [r6, #56]	; 0x38
2ffd98de:	68f3      	ldr	r3, [r6, #12]
2ffd98e0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
2ffd98e4:	60f3      	str	r3, [r6, #12]
2ffd98e6:	2c00      	cmp	r4, #0
2ffd98e8:	d14c      	bne.n	2ffd9984 <stm32_sdmmc2_send_cmd+0x240>
2ffd98ea:	2400      	movs	r4, #0
2ffd98ec:	e013      	b.n	2ffd9916 <stm32_sdmmc2_send_cmd+0x1d2>
2ffd98ee:	f41b 7b40 	ands.w	fp, fp, #768	; 0x300
2ffd98f2:	d00d      	beq.n	2ffd9910 <stm32_sdmmc2_send_cmd+0x1cc>
2ffd98f4:	682b      	ldr	r3, [r5, #0]
2ffd98f6:	2b09      	cmp	r3, #9
2ffd98f8:	d111      	bne.n	2ffd991e <stm32_sdmmc2_send_cmd+0x1da>
2ffd98fa:	f5bb 7f40 	cmp.w	fp, #768	; 0x300
2ffd98fe:	d10e      	bne.n	2ffd991e <stm32_sdmmc2_send_cmd+0x1da>
2ffd9900:	6a33      	ldr	r3, [r6, #32]
2ffd9902:	60eb      	str	r3, [r5, #12]
2ffd9904:	69f3      	ldr	r3, [r6, #28]
2ffd9906:	612b      	str	r3, [r5, #16]
2ffd9908:	69b3      	ldr	r3, [r6, #24]
2ffd990a:	616b      	str	r3, [r5, #20]
2ffd990c:	6973      	ldr	r3, [r6, #20]
2ffd990e:	61ab      	str	r3, [r5, #24]
2ffd9910:	b984      	cbnz	r4, 2ffd9934 <stm32_sdmmc2_send_cmd+0x1f0>
2ffd9912:	4b35      	ldr	r3, [pc, #212]	; (2ffd99e8 <stm32_sdmmc2_send_cmd+0x2a4>)
2ffd9914:	63b3      	str	r3, [r6, #56]	; 0x38
2ffd9916:	4620      	mov	r0, r4
2ffd9918:	b009      	add	sp, #36	; 0x24
2ffd991a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffd991e:	6973      	ldr	r3, [r6, #20]
2ffd9920:	f5bb 7f40 	cmp.w	fp, #768	; 0x300
2ffd9924:	60eb      	str	r3, [r5, #12]
2ffd9926:	d1f3      	bne.n	2ffd9910 <stm32_sdmmc2_send_cmd+0x1cc>
2ffd9928:	69b3      	ldr	r3, [r6, #24]
2ffd992a:	612b      	str	r3, [r5, #16]
2ffd992c:	69f3      	ldr	r3, [r6, #28]
2ffd992e:	616b      	str	r3, [r5, #20]
2ffd9930:	6a33      	ldr	r3, [r6, #32]
2ffd9932:	e7ec      	b.n	2ffd990e <stm32_sdmmc2_send_cmd+0x1ca>
2ffd9934:	6b77      	ldr	r7, [r6, #52]	; 0x34
2ffd9936:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffd993a:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffd993e:	4a24      	ldr	r2, [pc, #144]	; (2ffd99d0 <stm32_sdmmc2_send_cmd+0x28c>)
2ffd9940:	f242 7110 	movw	r1, #10000	; 0x2710
2ffd9944:	2300      	movs	r3, #0
2ffd9946:	fba0 0101 	umull	r0, r1, r0, r1
2ffd994a:	f008 ee8a 	blx	2ffe2660 <__aeabi_uldivmod>
2ffd994e:	eb10 0308 	adds.w	r3, r0, r8
2ffd9952:	9304      	str	r3, [sp, #16]
2ffd9954:	eb41 0309 	adc.w	r3, r1, r9
2ffd9958:	9305      	str	r3, [sp, #20]
2ffd995a:	423c      	tst	r4, r7
2ffd995c:	d007      	beq.n	2ffd996e <stm32_sdmmc2_send_cmd+0x22a>
2ffd995e:	4c23      	ldr	r4, [pc, #140]	; (2ffd99ec <stm32_sdmmc2_send_cmd+0x2a8>)
2ffd9960:	403c      	ands	r4, r7
2ffd9962:	d0ba      	beq.n	2ffd98da <stm32_sdmmc2_send_cmd+0x196>
2ffd9964:	682a      	ldr	r2, [r5, #0]
2ffd9966:	463b      	mov	r3, r7
2ffd9968:	491a      	ldr	r1, [pc, #104]	; (2ffd99d4 <stm32_sdmmc2_send_cmd+0x290>)
2ffd996a:	4821      	ldr	r0, [pc, #132]	; (2ffd99f0 <stm32_sdmmc2_send_cmd+0x2ac>)
2ffd996c:	e7b1      	b.n	2ffd98d2 <stm32_sdmmc2_send_cmd+0x18e>
2ffd996e:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffd9972:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
2ffd9976:	4299      	cmp	r1, r3
2ffd9978:	bf08      	it	eq
2ffd997a:	4290      	cmpeq	r0, r2
2ffd997c:	d39e      	bcc.n	2ffd98bc <stm32_sdmmc2_send_cmd+0x178>
2ffd997e:	9b01      	ldr	r3, [sp, #4]
2ffd9980:	681f      	ldr	r7, [r3, #0]
2ffd9982:	e7ea      	b.n	2ffd995a <stm32_sdmmc2_send_cmd+0x216>
2ffd9984:	04fb      	lsls	r3, r7, #19
2ffd9986:	d504      	bpl.n	2ffd9992 <stm32_sdmmc2_send_cmd+0x24e>
2ffd9988:	f000 f836 	bl	2ffd99f8 <stm32_sdmmc2_stop_transfer>
2ffd998c:	2800      	cmp	r0, #0
2ffd998e:	bf18      	it	ne
2ffd9990:	4604      	movne	r4, r0
2ffd9992:	6829      	ldr	r1, [r5, #0]
2ffd9994:	2901      	cmp	r1, #1
2ffd9996:	d0a8      	beq.n	2ffd98ea <stm32_sdmmc2_send_cmd+0x1a6>
2ffd9998:	290d      	cmp	r1, #13
2ffd999a:	d0a6      	beq.n	2ffd98ea <stm32_sdmmc2_send_cmd+0x1a6>
2ffd999c:	2908      	cmp	r1, #8
2ffd999e:	d004      	beq.n	2ffd99aa <stm32_sdmmc2_send_cmd+0x266>
2ffd99a0:	9a00      	ldr	r2, [sp, #0]
2ffd99a2:	4623      	mov	r3, r4
2ffd99a4:	4813      	ldr	r0, [pc, #76]	; (2ffd99f4 <stm32_sdmmc2_send_cmd+0x2b0>)
2ffd99a6:	f003 f8a1 	bl	2ffdcaec <tf_log>
2ffd99aa:	200a      	movs	r0, #10
2ffd99ac:	f004 fd0a 	bl	2ffde3c4 <udelay>
2ffd99b0:	9b00      	ldr	r3, [sp, #0]
2ffd99b2:	3301      	adds	r3, #1
2ffd99b4:	9300      	str	r3, [sp, #0]
2ffd99b6:	2b04      	cmp	r3, #4
2ffd99b8:	f47f aed2 	bne.w	2ffd9760 <stm32_sdmmc2_send_cmd+0x1c>
2ffd99bc:	e7ab      	b.n	2ffd9916 <stm32_sdmmc2_send_cmd+0x1d2>
2ffd99be:	bf00      	nop
2ffd99c0:	2ffe4548 	.word	0x2ffe4548
2ffd99c4:	2ffe8e60 	.word	0x2ffe8e60
2ffd99c8:	2ffe9327 	.word	0x2ffe9327
2ffd99cc:	0800052a 	.word	0x0800052a
2ffd99d0:	000f4240 	.word	0x000f4240
2ffd99d4:	2ffe46d8 	.word	0x2ffe46d8
2ffd99d8:	2ffe4590 	.word	0x2ffe4590
2ffd99dc:	0800012a 	.word	0x0800012a
2ffd99e0:	2ffe4566 	.word	0x2ffe4566
2ffd99e4:	2ffe45b6 	.word	0x2ffe45b6
2ffd99e8:	180005ff 	.word	0x180005ff
2ffd99ec:	0800003a 	.word	0x0800003a
2ffd99f0:	2ffe45db 	.word	0x2ffe45db
2ffd99f4:	2ffe4603 	.word	0x2ffe4603

2ffd99f8 <stm32_sdmmc2_stop_transfer>:
2ffd99f8:	b500      	push	{lr}
2ffd99fa:	b089      	sub	sp, #36	; 0x24
2ffd99fc:	211c      	movs	r1, #28
2ffd99fe:	a801      	add	r0, sp, #4
2ffd9a00:	f7fc ed2e 	blx	2ffd6460 <zero_normalmem>
2ffd9a04:	230c      	movs	r3, #12
2ffd9a06:	a801      	add	r0, sp, #4
2ffd9a08:	9301      	str	r3, [sp, #4]
2ffd9a0a:	231d      	movs	r3, #29
2ffd9a0c:	9303      	str	r3, [sp, #12]
2ffd9a0e:	f7ff fe99 	bl	2ffd9744 <stm32_sdmmc2_send_cmd>
2ffd9a12:	b009      	add	sp, #36	; 0x24
2ffd9a14:	f85d fb04 	ldr.w	pc, [sp], #4

2ffd9a18 <stm32_sdmmc2_read>:
2ffd9a18:	4b42      	ldr	r3, [pc, #264]	; (2ffd9b24 <stm32_sdmmc2_read+0x10c>)
2ffd9a1a:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2ffd9a1e:	f011 0703 	ands.w	r7, r1, #3
2ffd9a22:	681c      	ldr	r4, [r3, #0]
2ffd9a24:	4608      	mov	r0, r1
2ffd9a26:	4616      	mov	r6, r2
2ffd9a28:	f104 0a80 	add.w	sl, r4, #128	; 0x80
2ffd9a2c:	d004      	beq.n	2ffd9a38 <stm32_sdmmc2_read+0x20>
2ffd9a2e:	483e      	ldr	r0, [pc, #248]	; (2ffd9b28 <stm32_sdmmc2_read+0x110>)
2ffd9a30:	f44f 7116 	mov.w	r1, #600	; 0x258
2ffd9a34:	f009 fa6e 	bl	2ffe2f14 <__assert>
2ffd9a38:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
2ffd9a3c:	460d      	mov	r5, r1
2ffd9a3e:	b133      	cbz	r3, 2ffd9a4e <stm32_sdmmc2_read+0x36>
2ffd9a40:	4611      	mov	r1, r2
2ffd9a42:	f7fc ecf0 	blx	2ffd6424 <inv_dcache_range>
2ffd9a46:	4638      	mov	r0, r7
2ffd9a48:	b002      	add	sp, #8
2ffd9a4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffd9a4e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
2ffd9a52:	f240 572a 	movw	r7, #1322	; 0x52a
2ffd9a56:	bf88      	it	hi
2ffd9a58:	f44f 7795 	movhi.w	r7, #298	; 0x12a
2ffd9a5c:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffd9a60:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffd9a64:	4931      	ldr	r1, [pc, #196]	; (2ffd9b2c <stm32_sdmmc2_read+0x114>)
2ffd9a66:	2300      	movs	r3, #0
2ffd9a68:	4a30      	ldr	r2, [pc, #192]	; (2ffd9b2c <stm32_sdmmc2_read+0x114>)
2ffd9a6a:	fba0 0101 	umull	r0, r1, r0, r1
2ffd9a6e:	f008 edf8 	blx	2ffe2660 <__aeabi_uldivmod>
2ffd9a72:	eb10 0308 	adds.w	r3, r0, r8
2ffd9a76:	9300      	str	r3, [sp, #0]
2ffd9a78:	eb41 0309 	adc.w	r3, r1, r9
2ffd9a7c:	9301      	str	r3, [sp, #4]
2ffd9a7e:	6b62      	ldr	r2, [r4, #52]	; 0x34
2ffd9a80:	f012 0f2a 	tst.w	r2, #42	; 0x2a
2ffd9a84:	d011      	beq.n	2ffd9aaa <stm32_sdmmc2_read+0x92>
2ffd9a86:	492a      	ldr	r1, [pc, #168]	; (2ffd9b30 <stm32_sdmmc2_read+0x118>)
2ffd9a88:	482a      	ldr	r0, [pc, #168]	; (2ffd9b34 <stm32_sdmmc2_read+0x11c>)
2ffd9a8a:	f003 f82f 	bl	2ffdcaec <tf_log>
2ffd9a8e:	f7ff fd6f 	bl	2ffd9570 <dump_registers>
2ffd9a92:	f44f 5300 	mov.w	r3, #8192	; 0x2000
2ffd9a96:	62e3      	str	r3, [r4, #44]	; 0x2c
2ffd9a98:	4b27      	ldr	r3, [pc, #156]	; (2ffd9b38 <stm32_sdmmc2_read+0x120>)
2ffd9a9a:	63a3      	str	r3, [r4, #56]	; 0x38
2ffd9a9c:	f7ff ffac 	bl	2ffd99f8 <stm32_sdmmc2_stop_transfer>
2ffd9aa0:	2800      	cmp	r0, #0
2ffd9aa2:	bf08      	it	eq
2ffd9aa4:	f06f 0004 	mvneq.w	r0, #4
2ffd9aa8:	e7ce      	b.n	2ffd9a48 <stm32_sdmmc2_read+0x30>
2ffd9aaa:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffd9aae:	e9dd 8900 	ldrd	r8, r9, [sp]
2ffd9ab2:	4589      	cmp	r9, r1
2ffd9ab4:	bf08      	it	eq
2ffd9ab6:	4580      	cmpeq	r8, r0
2ffd9ab8:	d20e      	bcs.n	2ffd9ad8 <stm32_sdmmc2_read+0xc0>
2ffd9aba:	491d      	ldr	r1, [pc, #116]	; (2ffd9b30 <stm32_sdmmc2_read+0x118>)
2ffd9abc:	481f      	ldr	r0, [pc, #124]	; (2ffd9b3c <stm32_sdmmc2_read+0x124>)
2ffd9abe:	f003 f815 	bl	2ffdcaec <tf_log>
2ffd9ac2:	f7ff fd55 	bl	2ffd9570 <dump_registers>
2ffd9ac6:	4b1c      	ldr	r3, [pc, #112]	; (2ffd9b38 <stm32_sdmmc2_read+0x120>)
2ffd9ac8:	63a3      	str	r3, [r4, #56]	; 0x38
2ffd9aca:	f7ff ff95 	bl	2ffd99f8 <stm32_sdmmc2_stop_transfer>
2ffd9ace:	2800      	cmp	r0, #0
2ffd9ad0:	bf08      	it	eq
2ffd9ad2:	f06f 003b 	mvneq.w	r0, #59	; 0x3b
2ffd9ad6:	e7b7      	b.n	2ffd9a48 <stm32_sdmmc2_read+0x30>
2ffd9ad8:	2e1f      	cmp	r6, #31
2ffd9ada:	d817      	bhi.n	2ffd9b0c <stm32_sdmmc2_read+0xf4>
2ffd9adc:	6b23      	ldr	r3, [r4, #48]	; 0x30
2ffd9ade:	b12b      	cbz	r3, 2ffd9aec <stm32_sdmmc2_read+0xd4>
2ffd9ae0:	0311      	lsls	r1, r2, #12
2ffd9ae2:	d403      	bmi.n	2ffd9aec <stm32_sdmmc2_read+0xd4>
2ffd9ae4:	f8da 3000 	ldr.w	r3, [sl]
2ffd9ae8:	f845 3b04 	str.w	r3, [r5], #4
2ffd9aec:	4217      	tst	r7, r2
2ffd9aee:	d0c6      	beq.n	2ffd9a7e <stm32_sdmmc2_read+0x66>
2ffd9af0:	4b11      	ldr	r3, [pc, #68]	; (2ffd9b38 <stm32_sdmmc2_read+0x120>)
2ffd9af2:	f412 5080 	ands.w	r0, r2, #4096	; 0x1000
2ffd9af6:	63a3      	str	r3, [r4, #56]	; 0x38
2ffd9af8:	d0a6      	beq.n	2ffd9a48 <stm32_sdmmc2_read+0x30>
2ffd9afa:	490d      	ldr	r1, [pc, #52]	; (2ffd9b30 <stm32_sdmmc2_read+0x118>)
2ffd9afc:	4810      	ldr	r0, [pc, #64]	; (2ffd9b40 <stm32_sdmmc2_read+0x128>)
2ffd9afe:	f002 fff5 	bl	2ffdcaec <tf_log>
2ffd9b02:	b002      	add	sp, #8
2ffd9b04:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffd9b08:	f7ff bf76 	b.w	2ffd99f8 <stm32_sdmmc2_stop_transfer>
2ffd9b0c:	0413      	lsls	r3, r2, #16
2ffd9b0e:	d5ed      	bpl.n	2ffd9aec <stm32_sdmmc2_read+0xd4>
2ffd9b10:	f105 0320 	add.w	r3, r5, #32
2ffd9b14:	f8da 1000 	ldr.w	r1, [sl]
2ffd9b18:	f845 1b04 	str.w	r1, [r5], #4
2ffd9b1c:	42ab      	cmp	r3, r5
2ffd9b1e:	d1f9      	bne.n	2ffd9b14 <stm32_sdmmc2_read+0xfc>
2ffd9b20:	e7e4      	b.n	2ffd9aec <stm32_sdmmc2_read+0xd4>
2ffd9b22:	bf00      	nop
2ffd9b24:	2ffe8e60 	.word	0x2ffe8e60
2ffd9b28:	2ffe4548 	.word	0x2ffe4548
2ffd9b2c:	000f4240 	.word	0x000f4240
2ffd9b30:	2ffe46f2 	.word	0x2ffe46f2
2ffd9b34:	2ffe4622 	.word	0x2ffe4622
2ffd9b38:	180005ff 	.word	0x180005ff
2ffd9b3c:	2ffe4641 	.word	0x2ffe4641
2ffd9b40:	2ffe4660 	.word	0x2ffe4660

2ffd9b44 <plat_sdmmc2_use_dma>:
2ffd9b44:	2000      	movs	r0, #0
2ffd9b46:	4770      	bx	lr

2ffd9b48 <stm32_sdmmc2_prepare>:
2ffd9b48:	4b29      	ldr	r3, [pc, #164]	; (2ffd9bf0 <stm32_sdmmc2_prepare+0xa8>)
2ffd9b4a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2ffd9b4e:	460e      	mov	r6, r1
2ffd9b50:	681c      	ldr	r4, [r3, #0]
2ffd9b52:	b089      	sub	sp, #36	; 0x24
2ffd9b54:	4615      	mov	r5, r2
2ffd9b56:	4698      	mov	r8, r3
2ffd9b58:	b922      	cbnz	r2, 2ffd9b64 <stm32_sdmmc2_prepare+0x1c>
2ffd9b5a:	4826      	ldr	r0, [pc, #152]	; (2ffd9bf4 <stm32_sdmmc2_prepare+0xac>)
2ffd9b5c:	f44f 7105 	mov.w	r1, #532	; 0x214
2ffd9b60:	f009 f9d8 	bl	2ffe2f14 <__assert>
2ffd9b64:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
2ffd9b68:	4620      	mov	r0, r4
2ffd9b6a:	4691      	mov	r9, r2
2ffd9b6c:	bf28      	it	cs
2ffd9b6e:	f44f 7900 	movcs.w	r9, #512	; 0x200
2ffd9b72:	f7ff ffe7 	bl	2ffd9b44 <plat_sdmmc2_use_dma>
2ffd9b76:	f888 002c 	strb.w	r0, [r8, #44]	; 0x2c
2ffd9b7a:	b118      	cbz	r0, 2ffd9b84 <stm32_sdmmc2_prepare+0x3c>
2ffd9b7c:	4629      	mov	r1, r5
2ffd9b7e:	4630      	mov	r0, r6
2ffd9b80:	f7fc ec50 	blx	2ffd6424 <inv_dcache_range>
2ffd9b84:	2300      	movs	r3, #0
2ffd9b86:	211c      	movs	r1, #28
2ffd9b88:	6263      	str	r3, [r4, #36]	; 0x24
2ffd9b8a:	a801      	add	r0, sp, #4
2ffd9b8c:	62a3      	str	r3, [r4, #40]	; 0x28
2ffd9b8e:	62e3      	str	r3, [r4, #44]	; 0x2c
2ffd9b90:	f7fc ec66 	blx	2ffd6460 <zero_normalmem>
2ffd9b94:	f8cd 9008 	str.w	r9, [sp, #8]
2ffd9b98:	2310      	movs	r3, #16
2ffd9b9a:	9301      	str	r3, [sp, #4]
2ffd9b9c:	a801      	add	r0, sp, #4
2ffd9b9e:	230d      	movs	r3, #13
2ffd9ba0:	9303      	str	r3, [sp, #12]
2ffd9ba2:	f7ff fdcf 	bl	2ffd9744 <stm32_sdmmc2_send_cmd>
2ffd9ba6:	4607      	mov	r7, r0
2ffd9ba8:	b130      	cbz	r0, 2ffd9bb8 <stm32_sdmmc2_prepare+0x70>
2ffd9baa:	4813      	ldr	r0, [pc, #76]	; (2ffd9bf8 <stm32_sdmmc2_prepare+0xb0>)
2ffd9bac:	f002 ff9e 	bl	2ffdcaec <tf_log>
2ffd9bb0:	4638      	mov	r0, r7
2ffd9bb2:	b009      	add	sp, #36	; 0x24
2ffd9bb4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffd9bb8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2ffd9bbc:	6263      	str	r3, [r4, #36]	; 0x24
2ffd9bbe:	f898 302c 	ldrb.w	r3, [r8, #44]	; 0x2c
2ffd9bc2:	62a5      	str	r5, [r4, #40]	; 0x28
2ffd9bc4:	b133      	cbz	r3, 2ffd9bd4 <stm32_sdmmc2_prepare+0x8c>
2ffd9bc6:	2301      	movs	r3, #1
2ffd9bc8:	4629      	mov	r1, r5
2ffd9bca:	6523      	str	r3, [r4, #80]	; 0x50
2ffd9bcc:	4630      	mov	r0, r6
2ffd9bce:	65a6      	str	r6, [r4, #88]	; 0x58
2ffd9bd0:	f7fc ebec 	blx	2ffd63ac <flush_dcache_range>
2ffd9bd4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2ffd9bd6:	fa99 f9a9 	rbit	r9, r9
2ffd9bda:	fab9 f989 	clz	r9, r9
2ffd9bde:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
2ffd9be2:	ea43 1309 	orr.w	r3, r3, r9, lsl #4
2ffd9be6:	f043 0302 	orr.w	r3, r3, #2
2ffd9bea:	62e3      	str	r3, [r4, #44]	; 0x2c
2ffd9bec:	e7e0      	b.n	2ffd9bb0 <stm32_sdmmc2_prepare+0x68>
2ffd9bee:	bf00      	nop
2ffd9bf0:	2ffe8e60 	.word	0x2ffe8e60
2ffd9bf4:	2ffe4548 	.word	0x2ffe4548
2ffd9bf8:	2ffe467b 	.word	0x2ffe467b

2ffd9bfc <stm32_sdmmc2_mmc_get_device_size>:
2ffd9bfc:	4b02      	ldr	r3, [pc, #8]	; (2ffd9c08 <stm32_sdmmc2_mmc_get_device_size+0xc>)
2ffd9bfe:	691b      	ldr	r3, [r3, #16]
2ffd9c00:	e9d3 0100 	ldrd	r0, r1, [r3]
2ffd9c04:	4770      	bx	lr
2ffd9c06:	bf00      	nop
2ffd9c08:	2ffe8e60 	.word	0x2ffe8e60

2ffd9c0c <stm32_sdmmc2_mmc_init>:
2ffd9c0c:	b530      	push	{r4, r5, lr}
2ffd9c0e:	4601      	mov	r1, r0
2ffd9c10:	b089      	sub	sp, #36	; 0x24
2ffd9c12:	b130      	cbz	r0, 2ffd9c22 <stm32_sdmmc2_mmc_init+0x16>
2ffd9c14:	6805      	ldr	r5, [r0, #0]
2ffd9c16:	f3c5 0508 	ubfx	r5, r5, #0, #9
2ffd9c1a:	b915      	cbnz	r5, 2ffd9c22 <stm32_sdmmc2_mmc_init+0x16>
2ffd9c1c:	6883      	ldr	r3, [r0, #8]
2ffd9c1e:	2b02      	cmp	r3, #2
2ffd9c20:	d904      	bls.n	2ffd9c2c <stm32_sdmmc2_mmc_init+0x20>
2ffd9c22:	485f      	ldr	r0, [pc, #380]	; (2ffd9da0 <stm32_sdmmc2_mmc_init+0x194>)
2ffd9c24:	f240 21fd 	movw	r1, #765	; 0x2fd
2ffd9c28:	f009 f974 	bl	2ffe2f14 <__assert>
2ffd9c2c:	4c5d      	ldr	r4, [pc, #372]	; (2ffd9da4 <stm32_sdmmc2_mmc_init+0x198>)
2ffd9c2e:	223c      	movs	r2, #60	; 0x3c
2ffd9c30:	4620      	mov	r0, r4
2ffd9c32:	f009 f997 	bl	2ffe2f64 <memcpy>
2ffd9c36:	9503      	str	r5, [sp, #12]
2ffd9c38:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2ffd9c3c:	6363      	str	r3, [r4, #52]	; 0x34
2ffd9c3e:	a803      	add	r0, sp, #12
2ffd9c40:	f008 f93c 	bl	2ffe1ebc <fdt_get_address>
2ffd9c44:	b938      	cbnz	r0, 2ffd9c56 <stm32_sdmmc2_mmc_init+0x4a>
2ffd9c46:	4858      	ldr	r0, [pc, #352]	; (2ffd9da8 <stm32_sdmmc2_mmc_init+0x19c>)
2ffd9c48:	4958      	ldr	r1, [pc, #352]	; (2ffd9dac <stm32_sdmmc2_mmc_init+0x1a0>)
2ffd9c4a:	f002 ff4f 	bl	2ffdcaec <tf_log>
2ffd9c4e:	f06f 000b 	mvn.w	r0, #11
2ffd9c52:	b009      	add	sp, #36	; 0x24
2ffd9c54:	bd30      	pop	{r4, r5, pc}
2ffd9c56:	9b03      	ldr	r3, [sp, #12]
2ffd9c58:	2b00      	cmp	r3, #0
2ffd9c5a:	d0f4      	beq.n	2ffd9c46 <stm32_sdmmc2_mmc_init+0x3a>
2ffd9c5c:	6821      	ldr	r1, [r4, #0]
2ffd9c5e:	4854      	ldr	r0, [pc, #336]	; (2ffd9db0 <stm32_sdmmc2_mmc_init+0x1a4>)
2ffd9c60:	f008 fa88 	bl	2ffe2174 <dt_match_instance_by_compatible>
2ffd9c64:	1c43      	adds	r3, r0, #1
2ffd9c66:	4605      	mov	r5, r0
2ffd9c68:	d0ed      	beq.n	2ffd9c46 <stm32_sdmmc2_mmc_init+0x3a>
2ffd9c6a:	4601      	mov	r1, r0
2ffd9c6c:	a804      	add	r0, sp, #16
2ffd9c6e:	f008 fa07 	bl	2ffe2080 <dt_fill_device_info>
2ffd9c72:	9b07      	ldr	r3, [sp, #28]
2ffd9c74:	2b00      	cmp	r3, #0
2ffd9c76:	d0e6      	beq.n	2ffd9c46 <stm32_sdmmc2_mmc_init+0x3a>
2ffd9c78:	4628      	mov	r0, r5
2ffd9c7a:	f006 fbc7 	bl	2ffe040c <dt_set_pinctrl_config>
2ffd9c7e:	4603      	mov	r3, r0
2ffd9c80:	2800      	cmp	r0, #0
2ffd9c82:	d1e0      	bne.n	2ffd9c46 <stm32_sdmmc2_mmc_init+0x3a>
2ffd9c84:	9a05      	ldr	r2, [sp, #20]
2ffd9c86:	4629      	mov	r1, r5
2ffd9c88:	9803      	ldr	r0, [sp, #12]
2ffd9c8a:	6222      	str	r2, [r4, #32]
2ffd9c8c:	9a06      	ldr	r2, [sp, #24]
2ffd9c8e:	6262      	str	r2, [r4, #36]	; 0x24
2ffd9c90:	4a48      	ldr	r2, [pc, #288]	; (2ffd9db4 <stm32_sdmmc2_mmc_init+0x1a8>)
2ffd9c92:	f008 ffa2 	bl	2ffe2bda <fdt_getprop>
2ffd9c96:	b110      	cbz	r0, 2ffd9c9e <stm32_sdmmc2_mmc_init+0x92>
2ffd9c98:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
2ffd9c9c:	6163      	str	r3, [r4, #20]
2ffd9c9e:	4a46      	ldr	r2, [pc, #280]	; (2ffd9db8 <stm32_sdmmc2_mmc_init+0x1ac>)
2ffd9ca0:	2300      	movs	r3, #0
2ffd9ca2:	9803      	ldr	r0, [sp, #12]
2ffd9ca4:	4629      	mov	r1, r5
2ffd9ca6:	f008 ff98 	bl	2ffe2bda <fdt_getprop>
2ffd9caa:	b108      	cbz	r0, 2ffd9cb0 <stm32_sdmmc2_mmc_init+0xa4>
2ffd9cac:	2310      	movs	r3, #16
2ffd9cae:	61e3      	str	r3, [r4, #28]
2ffd9cb0:	4a42      	ldr	r2, [pc, #264]	; (2ffd9dbc <stm32_sdmmc2_mmc_init+0x1b0>)
2ffd9cb2:	2300      	movs	r3, #0
2ffd9cb4:	9803      	ldr	r0, [sp, #12]
2ffd9cb6:	4629      	mov	r1, r5
2ffd9cb8:	f008 ff8f 	bl	2ffe2bda <fdt_getprop>
2ffd9cbc:	b110      	cbz	r0, 2ffd9cc4 <stm32_sdmmc2_mmc_init+0xb8>
2ffd9cbe:	f44f 3380 	mov.w	r3, #65536	; 0x10000
2ffd9cc2:	61a3      	str	r3, [r4, #24]
2ffd9cc4:	4a3e      	ldr	r2, [pc, #248]	; (2ffd9dc0 <stm32_sdmmc2_mmc_init+0x1b4>)
2ffd9cc6:	2300      	movs	r3, #0
2ffd9cc8:	9803      	ldr	r0, [sp, #12]
2ffd9cca:	4629      	mov	r1, r5
2ffd9ccc:	f008 ff85 	bl	2ffe2bda <fdt_getprop>
2ffd9cd0:	b178      	cbz	r0, 2ffd9cf2 <stm32_sdmmc2_mmc_init+0xe6>
2ffd9cd2:	6802      	ldr	r2, [r0, #0]
2ffd9cd4:	0e13      	lsrs	r3, r2, #24
2ffd9cd6:	f3c2 2107 	ubfx	r1, r2, #8, #8
2ffd9cda:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffd9cde:	f3c2 4207 	ubfx	r2, r2, #16, #8
2ffd9ce2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffd9ce6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffd9cea:	2b04      	cmp	r3, #4
2ffd9cec:	d036      	beq.n	2ffd9d5c <stm32_sdmmc2_mmc_init+0x150>
2ffd9cee:	2b08      	cmp	r3, #8
2ffd9cf0:	d037      	beq.n	2ffd9d62 <stm32_sdmmc2_mmc_init+0x156>
2ffd9cf2:	4a34      	ldr	r2, [pc, #208]	; (2ffd9dc4 <stm32_sdmmc2_mmc_init+0x1b8>)
2ffd9cf4:	2300      	movs	r3, #0
2ffd9cf6:	9803      	ldr	r0, [sp, #12]
2ffd9cf8:	4629      	mov	r1, r5
2ffd9cfa:	f008 ff6e 	bl	2ffe2bda <fdt_getprop>
2ffd9cfe:	b160      	cbz	r0, 2ffd9d1a <stm32_sdmmc2_mmc_init+0x10e>
2ffd9d00:	6802      	ldr	r2, [r0, #0]
2ffd9d02:	0e13      	lsrs	r3, r2, #24
2ffd9d04:	f3c2 2107 	ubfx	r1, r2, #8, #8
2ffd9d08:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffd9d0c:	f3c2 4207 	ubfx	r2, r2, #16, #8
2ffd9d10:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffd9d14:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffd9d18:	62a3      	str	r3, [r4, #40]	; 0x28
2ffd9d1a:	4a2b      	ldr	r2, [pc, #172]	; (2ffd9dc8 <stm32_sdmmc2_mmc_init+0x1bc>)
2ffd9d1c:	2300      	movs	r3, #0
2ffd9d1e:	9803      	ldr	r0, [sp, #12]
2ffd9d20:	4629      	mov	r1, r5
2ffd9d22:	f008 ff5a 	bl	2ffe2bda <fdt_getprop>
2ffd9d26:	b160      	cbz	r0, 2ffd9d42 <stm32_sdmmc2_mmc_init+0x136>
2ffd9d28:	6802      	ldr	r2, [r0, #0]
2ffd9d2a:	0e13      	lsrs	r3, r2, #24
2ffd9d2c:	f3c2 2107 	ubfx	r1, r2, #8, #8
2ffd9d30:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffd9d34:	f3c2 4207 	ubfx	r2, r2, #16, #8
2ffd9d38:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffd9d3c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffd9d40:	6363      	str	r3, [r4, #52]	; 0x34
2ffd9d42:	6a20      	ldr	r0, [r4, #32]
2ffd9d44:	f005 fce6 	bl	2ffdf714 <stm32mp_clk_enable>
2ffd9d48:	6a60      	ldr	r0, [r4, #36]	; 0x24
2ffd9d4a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffd9d4e:	f007 ff7d 	bl	2ffe1c4c <stm32mp_reset_assert_to>
2ffd9d52:	b140      	cbz	r0, 2ffd9d66 <stm32_sdmmc2_mmc_init+0x15a>
2ffd9d54:	f002 ff68 	bl	2ffdcc28 <console_flush>
2ffd9d58:	f7fc ea82 	blx	2ffd6260 <do_panic>
2ffd9d5c:	2301      	movs	r3, #1
2ffd9d5e:	60a3      	str	r3, [r4, #8]
2ffd9d60:	e7c7      	b.n	2ffd9cf2 <stm32_sdmmc2_mmc_init+0xe6>
2ffd9d62:	2302      	movs	r3, #2
2ffd9d64:	e7fb      	b.n	2ffd9d5e <stm32_sdmmc2_mmc_init+0x152>
2ffd9d66:	2002      	movs	r0, #2
2ffd9d68:	f004 fb2c 	bl	2ffde3c4 <udelay>
2ffd9d6c:	6a60      	ldr	r0, [r4, #36]	; 0x24
2ffd9d6e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffd9d72:	f007 ffa3 	bl	2ffe1cbc <stm32mp_reset_deassert_to>
2ffd9d76:	2800      	cmp	r0, #0
2ffd9d78:	d1ec      	bne.n	2ffd9d54 <stm32_sdmmc2_mmc_init+0x148>
2ffd9d7a:	2001      	movs	r0, #1
2ffd9d7c:	f004 fb50 	bl	2ffde420 <mdelay>
2ffd9d80:	6a20      	ldr	r0, [r4, #32]
2ffd9d82:	f005 fcd0 	bl	2ffdf726 <stm32mp_clk_get_rate>
2ffd9d86:	6923      	ldr	r3, [r4, #16]
2ffd9d88:	f44f 1240 	mov.w	r2, #3145728	; 0x300000
2ffd9d8c:	6060      	str	r0, [r4, #4]
2ffd9d8e:	4601      	mov	r1, r0
2ffd9d90:	611a      	str	r2, [r3, #16]
2ffd9d92:	480e      	ldr	r0, [pc, #56]	; (2ffd9dcc <stm32_sdmmc2_mmc_init+0x1c0>)
2ffd9d94:	9300      	str	r3, [sp, #0]
2ffd9d96:	68a2      	ldr	r2, [r4, #8]
2ffd9d98:	68e3      	ldr	r3, [r4, #12]
2ffd9d9a:	f7fe ff87 	bl	2ffd8cac <mmc_init>
2ffd9d9e:	e758      	b.n	2ffd9c52 <stm32_sdmmc2_mmc_init+0x46>
2ffd9da0:	2ffe4548 	.word	0x2ffe4548
2ffd9da4:	2ffe8e60 	.word	0x2ffe8e60
2ffd9da8:	2ffe468a 	.word	0x2ffe468a
2ffd9dac:	2ffe4704 	.word	0x2ffe4704
2ffd9db0:	2ffe4699 	.word	0x2ffe4699
2ffd9db4:	2ffe46a9 	.word	0x2ffe46a9
2ffd9db8:	2ffe46b5 	.word	0x2ffe46b5
2ffd9dbc:	2ffe46c0 	.word	0x2ffe46c0
2ffd9dc0:	2ffe49d6 	.word	0x2ffe49d6
2ffd9dc4:	2ffe4954 	.word	0x2ffe4954
2ffd9dc8:	2ffe46cc 	.word	0x2ffe46cc
2ffd9dcc:	2ffe471c 	.word	0x2ffe471c

2ffd9dd0 <nand_send_addr>:
2ffd9dd0:	b510      	push	{r4, lr}
2ffd9dd2:	b088      	sub	sp, #32
2ffd9dd4:	460c      	mov	r4, r1
2ffd9dd6:	2118      	movs	r1, #24
2ffd9dd8:	f88d 0007 	strb.w	r0, [sp, #7]
2ffd9ddc:	a802      	add	r0, sp, #8
2ffd9dde:	f7fc eb40 	blx	2ffd6460 <zero_normalmem>
2ffd9de2:	4b08      	ldr	r3, [pc, #32]	; (2ffd9e04 <nand_send_addr+0x34>)
2ffd9de4:	a802      	add	r0, sp, #8
2ffd9de6:	9407      	str	r4, [sp, #28]
2ffd9de8:	681a      	ldr	r2, [r3, #0]
2ffd9dea:	685b      	ldr	r3, [r3, #4]
2ffd9dec:	9202      	str	r2, [sp, #8]
2ffd9dee:	f44f 5280 	mov.w	r2, #4096	; 0x1000
2ffd9df2:	f8ad 200c 	strh.w	r2, [sp, #12]
2ffd9df6:	f10d 0207 	add.w	r2, sp, #7
2ffd9dfa:	681b      	ldr	r3, [r3, #0]
2ffd9dfc:	9204      	str	r2, [sp, #16]
2ffd9dfe:	4798      	blx	r3
2ffd9e00:	b008      	add	sp, #32
2ffd9e02:	bd10      	pop	{r4, pc}
2ffd9e04:	2ffe8e9c 	.word	0x2ffe8e9c

2ffd9e08 <nand_send_cmd>:
2ffd9e08:	b530      	push	{r4, r5, lr}
2ffd9e0a:	b087      	sub	sp, #28
2ffd9e0c:	4605      	mov	r5, r0
2ffd9e0e:	460c      	mov	r4, r1
2ffd9e10:	4668      	mov	r0, sp
2ffd9e12:	2118      	movs	r1, #24
2ffd9e14:	f7fc eb24 	blx	2ffd6460 <zero_normalmem>
2ffd9e18:	4b05      	ldr	r3, [pc, #20]	; (2ffd9e30 <nand_send_cmd+0x28>)
2ffd9e1a:	4668      	mov	r0, sp
2ffd9e1c:	f8ad 5004 	strh.w	r5, [sp, #4]
2ffd9e20:	681a      	ldr	r2, [r3, #0]
2ffd9e22:	685b      	ldr	r3, [r3, #4]
2ffd9e24:	9200      	str	r2, [sp, #0]
2ffd9e26:	681b      	ldr	r3, [r3, #0]
2ffd9e28:	9405      	str	r4, [sp, #20]
2ffd9e2a:	4798      	blx	r3
2ffd9e2c:	b007      	add	sp, #28
2ffd9e2e:	bd30      	pop	{r4, r5, pc}
2ffd9e30:	2ffe8e9c 	.word	0x2ffe8e9c

2ffd9e34 <nand_read_data>:
2ffd9e34:	b570      	push	{r4, r5, r6, lr}
2ffd9e36:	b086      	sub	sp, #24
2ffd9e38:	4605      	mov	r5, r0
2ffd9e3a:	460c      	mov	r4, r1
2ffd9e3c:	4668      	mov	r0, sp
2ffd9e3e:	2118      	movs	r1, #24
2ffd9e40:	4616      	mov	r6, r2
2ffd9e42:	f7fc eb0e 	blx	2ffd6460 <zero_normalmem>
2ffd9e46:	4b0a      	ldr	r3, [pc, #40]	; (2ffd9e70 <nand_read_data+0x3c>)
2ffd9e48:	2e00      	cmp	r6, #0
2ffd9e4a:	4668      	mov	r0, sp
2ffd9e4c:	681a      	ldr	r2, [r3, #0]
2ffd9e4e:	685b      	ldr	r3, [r3, #4]
2ffd9e50:	9200      	str	r2, [sp, #0]
2ffd9e52:	bf18      	it	ne
2ffd9e54:	f44f 4220 	movne.w	r2, #40960	; 0xa000
2ffd9e58:	681b      	ldr	r3, [r3, #0]
2ffd9e5a:	bf08      	it	eq
2ffd9e5c:	f44f 5200 	moveq.w	r2, #8192	; 0x2000
2ffd9e60:	f8ad 2004 	strh.w	r2, [sp, #4]
2ffd9e64:	e9cd 5402 	strd	r5, r4, [sp, #8]
2ffd9e68:	4798      	blx	r3
2ffd9e6a:	b006      	add	sp, #24
2ffd9e6c:	bd70      	pop	{r4, r5, r6, pc}
2ffd9e6e:	bf00      	nop
2ffd9e70:	2ffe8e9c 	.word	0x2ffe8e9c

2ffd9e74 <nand_send_wait>:
2ffd9e74:	b530      	push	{r4, r5, lr}
2ffd9e76:	b087      	sub	sp, #28
2ffd9e78:	4604      	mov	r4, r0
2ffd9e7a:	460d      	mov	r5, r1
2ffd9e7c:	4668      	mov	r0, sp
2ffd9e7e:	2118      	movs	r1, #24
2ffd9e80:	f7fc eaee 	blx	2ffd6460 <zero_normalmem>
2ffd9e84:	4b07      	ldr	r3, [pc, #28]	; (2ffd9ea4 <nand_send_wait+0x30>)
2ffd9e86:	4668      	mov	r0, sp
2ffd9e88:	e9cd 4504 	strd	r4, r5, [sp, #16]
2ffd9e8c:	681a      	ldr	r2, [r3, #0]
2ffd9e8e:	685b      	ldr	r3, [r3, #4]
2ffd9e90:	9200      	str	r2, [sp, #0]
2ffd9e92:	f44f 4280 	mov.w	r2, #16384	; 0x4000
2ffd9e96:	681b      	ldr	r3, [r3, #0]
2ffd9e98:	f8ad 2004 	strh.w	r2, [sp, #4]
2ffd9e9c:	4798      	blx	r3
2ffd9e9e:	b007      	add	sp, #28
2ffd9ea0:	bd30      	pop	{r4, r5, pc}
2ffd9ea2:	bf00      	nop
2ffd9ea4:	2ffe8e9c 	.word	0x2ffe8e9c

2ffd9ea8 <nand_read_param_page>:
2ffd9ea8:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffd9eaa:	2100      	movs	r1, #0
2ffd9eac:	b0c1      	sub	sp, #260	; 0x104
2ffd9eae:	20ec      	movs	r0, #236	; 0xec
2ffd9eb0:	f7ff ffaa 	bl	2ffd9e08 <nand_send_cmd>
2ffd9eb4:	4603      	mov	r3, r0
2ffd9eb6:	b9f8      	cbnz	r0, 2ffd9ef8 <nand_read_param_page+0x50>
2ffd9eb8:	4933      	ldr	r1, [pc, #204]	; (2ffd9f88 <nand_read_param_page+0xe0>)
2ffd9eba:	f7ff ff89 	bl	2ffd9dd0 <nand_send_addr>
2ffd9ebe:	4603      	mov	r3, r0
2ffd9ec0:	b9d0      	cbnz	r0, 2ffd9ef8 <nand_read_param_page+0x50>
2ffd9ec2:	f649 4140 	movw	r1, #40000	; 0x9c40
2ffd9ec6:	2001      	movs	r0, #1
2ffd9ec8:	f7ff ffd4 	bl	2ffd9e74 <nand_send_wait>
2ffd9ecc:	4603      	mov	r3, r0
2ffd9ece:	b998      	cbnz	r0, 2ffd9ef8 <nand_read_param_page+0x50>
2ffd9ed0:	2201      	movs	r2, #1
2ffd9ed2:	f44f 7180 	mov.w	r1, #256	; 0x100
2ffd9ed6:	4668      	mov	r0, sp
2ffd9ed8:	f7ff ffac 	bl	2ffd9e34 <nand_read_data>
2ffd9edc:	4603      	mov	r3, r0
2ffd9ede:	b958      	cbnz	r0, 2ffd9ef8 <nand_read_param_page+0x50>
2ffd9ee0:	492a      	ldr	r1, [pc, #168]	; (2ffd9f8c <nand_read_param_page+0xe4>)
2ffd9ee2:	2204      	movs	r2, #4
2ffd9ee4:	4668      	mov	r0, sp
2ffd9ee6:	f009 fa44 	bl	2ffe3372 <strncmp>
2ffd9eea:	4603      	mov	r3, r0
2ffd9eec:	b138      	cbz	r0, 2ffd9efe <nand_read_param_page+0x56>
2ffd9eee:	4828      	ldr	r0, [pc, #160]	; (2ffd9f90 <nand_read_param_page+0xe8>)
2ffd9ef0:	f002 fdfc 	bl	2ffdcaec <tf_log>
2ffd9ef4:	f06f 0315 	mvn.w	r3, #21
2ffd9ef8:	4618      	mov	r0, r3
2ffd9efa:	b041      	add	sp, #260	; 0x104
2ffd9efc:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffd9efe:	4f25      	ldr	r7, [pc, #148]	; (2ffd9f94 <nand_read_param_page+0xec>)
2ffd9f00:	f644 724e 	movw	r2, #20302	; 0x4f4e
2ffd9f04:	4604      	mov	r4, r0
2ffd9f06:	466e      	mov	r6, sp
2ffd9f08:	f248 0c05 	movw	ip, #32773	; 0x8005
2ffd9f0c:	f816 eb01 	ldrb.w	lr, [r6], #1
2ffd9f10:	2108      	movs	r1, #8
2ffd9f12:	2580      	movs	r5, #128	; 0x80
2ffd9f14:	ea1e 0f05 	tst.w	lr, r5
2ffd9f18:	ea4f 0042 	mov.w	r0, r2, lsl #1
2ffd9f1c:	bf0c      	ite	eq
2ffd9f1e:	403a      	andeq	r2, r7
2ffd9f20:	ea27 0202 	bicne.w	r2, r7, r2
2ffd9f24:	b280      	uxth	r0, r0
2ffd9f26:	bf18      	it	ne
2ffd9f28:	b292      	uxthne	r2, r2
2ffd9f2a:	b16a      	cbz	r2, 2ffd9f48 <nand_read_param_page+0xa0>
2ffd9f2c:	ea80 020c 	eor.w	r2, r0, ip
2ffd9f30:	086d      	lsrs	r5, r5, #1
2ffd9f32:	3901      	subs	r1, #1
2ffd9f34:	d1ee      	bne.n	2ffd9f14 <nand_read_param_page+0x6c>
2ffd9f36:	3401      	adds	r4, #1
2ffd9f38:	2cfe      	cmp	r4, #254	; 0xfe
2ffd9f3a:	d1e7      	bne.n	2ffd9f0c <nand_read_param_page+0x64>
2ffd9f3c:	f8bd 00fe 	ldrh.w	r0, [sp, #254]	; 0xfe
2ffd9f40:	4290      	cmp	r0, r2
2ffd9f42:	d003      	beq.n	2ffd9f4c <nand_read_param_page+0xa4>
2ffd9f44:	4814      	ldr	r0, [pc, #80]	; (2ffd9f98 <nand_read_param_page+0xf0>)
2ffd9f46:	e7d3      	b.n	2ffd9ef0 <nand_read_param_page+0x48>
2ffd9f48:	4602      	mov	r2, r0
2ffd9f4a:	e7f1      	b.n	2ffd9f30 <nand_read_param_page+0x88>
2ffd9f4c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
2ffd9f50:	4a12      	ldr	r2, [pc, #72]	; (2ffd9f9c <nand_read_param_page+0xf4>)
2ffd9f52:	07c0      	lsls	r0, r0, #31
2ffd9f54:	6812      	ldr	r2, [r2, #0]
2ffd9f56:	bf48      	it	mi
2ffd9f58:	2101      	movmi	r1, #1
2ffd9f5a:	9814      	ldr	r0, [sp, #80]	; 0x50
2ffd9f5c:	6151      	str	r1, [r2, #20]
2ffd9f5e:	9917      	ldr	r1, [sp, #92]	; 0x5c
2ffd9f60:	4341      	muls	r1, r0
2ffd9f62:	e9c2 1000 	strd	r1, r0, [r2]
2ffd9f66:	f89d 0064 	ldrb.w	r0, [sp, #100]	; 0x64
2ffd9f6a:	4341      	muls	r1, r0
2ffd9f6c:	9818      	ldr	r0, [sp, #96]	; 0x60
2ffd9f6e:	4341      	muls	r1, r0
2ffd9f70:	6091      	str	r1, [r2, #8]
2ffd9f72:	2100      	movs	r1, #0
2ffd9f74:	60d1      	str	r1, [r2, #12]
2ffd9f76:	f89d 1070 	ldrb.w	r1, [sp, #112]	; 0x70
2ffd9f7a:	29ff      	cmp	r1, #255	; 0xff
2ffd9f7c:	bf1e      	ittt	ne
2ffd9f7e:	6251      	strne	r1, [r2, #36]	; 0x24
2ffd9f80:	f44f 7100 	movne.w	r1, #512	; 0x200
2ffd9f84:	61d1      	strne	r1, [r2, #28]
2ffd9f86:	e7b7      	b.n	2ffd9ef8 <nand_read_param_page+0x50>
2ffd9f88:	00030d40 	.word	0x00030d40
2ffd9f8c:	2ffe4734 	.word	0x2ffe4734
2ffd9f90:	2ffe4739 	.word	0x2ffe4739
2ffd9f94:	ffff8000 	.word	0xffff8000
2ffd9f98:	2ffe4750 	.word	0x2ffe4750
2ffd9f9c:	2ffe8e9c 	.word	0x2ffe8e9c

2ffd9fa0 <nand_change_read_column_cmd>:
2ffd9fa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffd9fa2:	4604      	mov	r4, r0
2ffd9fa4:	460d      	mov	r5, r1
2ffd9fa6:	2005      	movs	r0, #5
2ffd9fa8:	2100      	movs	r1, #0
2ffd9faa:	4616      	mov	r6, r2
2ffd9fac:	f7ff ff2c 	bl	2ffd9e08 <nand_send_cmd>
2ffd9fb0:	b9e8      	cbnz	r0, 2ffd9fee <nand_change_read_column_cmd+0x4e>
2ffd9fb2:	4b0f      	ldr	r3, [pc, #60]	; (2ffd9ff0 <nand_change_read_column_cmd+0x50>)
2ffd9fb4:	2100      	movs	r1, #0
2ffd9fb6:	681b      	ldr	r3, [r3, #0]
2ffd9fb8:	695b      	ldr	r3, [r3, #20]
2ffd9fba:	2b01      	cmp	r3, #1
2ffd9fbc:	bf08      	it	eq
2ffd9fbe:	0864      	lsreq	r4, r4, #1
2ffd9fc0:	f3c4 2707 	ubfx	r7, r4, #8, #8
2ffd9fc4:	b2e0      	uxtb	r0, r4
2ffd9fc6:	f7ff ff03 	bl	2ffd9dd0 <nand_send_addr>
2ffd9fca:	b980      	cbnz	r0, 2ffd9fee <nand_change_read_column_cmd+0x4e>
2ffd9fcc:	4601      	mov	r1, r0
2ffd9fce:	4638      	mov	r0, r7
2ffd9fd0:	f7ff fefe 	bl	2ffd9dd0 <nand_send_addr>
2ffd9fd4:	b958      	cbnz	r0, 2ffd9fee <nand_change_read_column_cmd+0x4e>
2ffd9fd6:	4907      	ldr	r1, [pc, #28]	; (2ffd9ff4 <nand_change_read_column_cmd+0x54>)
2ffd9fd8:	20e0      	movs	r0, #224	; 0xe0
2ffd9fda:	f7ff ff15 	bl	2ffd9e08 <nand_send_cmd>
2ffd9fde:	b930      	cbnz	r0, 2ffd9fee <nand_change_read_column_cmd+0x4e>
2ffd9fe0:	4602      	mov	r2, r0
2ffd9fe2:	4631      	mov	r1, r6
2ffd9fe4:	4628      	mov	r0, r5
2ffd9fe6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2ffd9fea:	f7ff bf23 	b.w	2ffd9e34 <nand_read_data>
2ffd9fee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffd9ff0:	2ffe8e9c 	.word	0x2ffe8e9c
2ffd9ff4:	0007a120 	.word	0x0007a120

2ffd9ff8 <nand_read_page_cmd>:
2ffd9ff8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffd9ffc:	461d      	mov	r5, r3
2ffd9ffe:	4b22      	ldr	r3, [pc, #136]	; (2ffda088 <nand_read_page_cmd+0x90>)
2ffda000:	4614      	mov	r4, r2
2ffda002:	f8ad 0002 	strh.w	r0, [sp, #2]
2ffda006:	2700      	movs	r7, #0
2ffda008:	681b      	ldr	r3, [r3, #0]
2ffda00a:	f04f 6600 	mov.w	r6, #134217728	; 0x8000000
2ffda00e:	695a      	ldr	r2, [r3, #20]
2ffda010:	2a01      	cmp	r2, #1
2ffda012:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
2ffda016:	bf08      	it	eq
2ffda018:	0849      	lsreq	r1, r1, #1
2ffda01a:	429f      	cmp	r7, r3
2ffda01c:	bf08      	it	eq
2ffda01e:	4296      	cmpeq	r6, r2
2ffda020:	bf3c      	itt	cc
2ffda022:	0c00      	lsrcc	r0, r0, #16
2ffda024:	2705      	movcc	r7, #5
2ffda026:	f8ad 1000 	strh.w	r1, [sp]
2ffda02a:	f04f 0100 	mov.w	r1, #0
2ffda02e:	bf38      	it	cc
2ffda030:	f88d 0004 	strbcc.w	r0, [sp, #4]
2ffda034:	4608      	mov	r0, r1
2ffda036:	bf28      	it	cs
2ffda038:	2704      	movcs	r7, #4
2ffda03a:	f7ff fee5 	bl	2ffd9e08 <nand_send_cmd>
2ffda03e:	b9f8      	cbnz	r0, 2ffda080 <nand_read_page_cmd+0x88>
2ffda040:	46e8      	mov	r8, sp
2ffda042:	4606      	mov	r6, r0
2ffda044:	f818 0b01 	ldrb.w	r0, [r8], #1
2ffda048:	2100      	movs	r1, #0
2ffda04a:	f7ff fec1 	bl	2ffd9dd0 <nand_send_addr>
2ffda04e:	b9b8      	cbnz	r0, 2ffda080 <nand_read_page_cmd+0x88>
2ffda050:	3601      	adds	r6, #1
2ffda052:	b2f6      	uxtb	r6, r6
2ffda054:	42b7      	cmp	r7, r6
2ffda056:	d1f5      	bne.n	2ffda044 <nand_read_page_cmd+0x4c>
2ffda058:	490c      	ldr	r1, [pc, #48]	; (2ffda08c <nand_read_page_cmd+0x94>)
2ffda05a:	2030      	movs	r0, #48	; 0x30
2ffda05c:	f7ff fed4 	bl	2ffd9e08 <nand_send_cmd>
2ffda060:	b970      	cbnz	r0, 2ffda080 <nand_read_page_cmd+0x88>
2ffda062:	f649 4140 	movw	r1, #40000	; 0x9c40
2ffda066:	2001      	movs	r0, #1
2ffda068:	f7ff ff04 	bl	2ffd9e74 <nand_send_wait>
2ffda06c:	b940      	cbnz	r0, 2ffda080 <nand_read_page_cmd+0x88>
2ffda06e:	b13c      	cbz	r4, 2ffda080 <nand_read_page_cmd+0x88>
2ffda070:	4602      	mov	r2, r0
2ffda072:	4629      	mov	r1, r5
2ffda074:	4620      	mov	r0, r4
2ffda076:	b002      	add	sp, #8
2ffda078:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffda07c:	f7ff beda 	b.w	2ffd9e34 <nand_read_data>
2ffda080:	b002      	add	sp, #8
2ffda082:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffda086:	bf00      	nop
2ffda088:	2ffe8e9c 	.word	0x2ffe8e9c
2ffda08c:	00030d40 	.word	0x00030d40

2ffda090 <nand_mtd_read_page_raw>:
2ffda090:	4b03      	ldr	r3, [pc, #12]	; (2ffda0a0 <nand_mtd_read_page_raw+0x10>)
2ffda092:	4608      	mov	r0, r1
2ffda094:	2100      	movs	r1, #0
2ffda096:	681b      	ldr	r3, [r3, #0]
2ffda098:	685b      	ldr	r3, [r3, #4]
2ffda09a:	f7ff bfad 	b.w	2ffd9ff8 <nand_read_page_cmd>
2ffda09e:	bf00      	nop
2ffda0a0:	2ffe8e9c 	.word	0x2ffe8e9c

2ffda0a4 <nand_mtd_block_is_bad>:
2ffda0a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffda0a6:	4605      	mov	r5, r0
2ffda0a8:	4e14      	ldr	r6, [pc, #80]	; (2ffda0fc <nand_mtd_block_is_bad+0x58>)
2ffda0aa:	aa01      	add	r2, sp, #4
2ffda0ac:	6833      	ldr	r3, [r6, #0]
2ffda0ae:	e9d3 4100 	ldrd	r4, r1, [r3]
2ffda0b2:	2302      	movs	r3, #2
2ffda0b4:	fbb4 f4f1 	udiv	r4, r4, r1
2ffda0b8:	4344      	muls	r4, r0
2ffda0ba:	4620      	mov	r0, r4
2ffda0bc:	f7ff ff9c 	bl	2ffd9ff8 <nand_read_page_cmd>
2ffda0c0:	b9d0      	cbnz	r0, 2ffda0f8 <nand_mtd_block_is_bad+0x54>
2ffda0c2:	f89d 3004 	ldrb.w	r3, [sp, #4]
2ffda0c6:	f89d 2005 	ldrb.w	r2, [sp, #5]
2ffda0ca:	4013      	ands	r3, r2
2ffda0cc:	2bff      	cmp	r3, #255	; 0xff
2ffda0ce:	d10e      	bne.n	2ffda0ee <nand_mtd_block_is_bad+0x4a>
2ffda0d0:	6831      	ldr	r1, [r6, #0]
2ffda0d2:	2302      	movs	r3, #2
2ffda0d4:	aa01      	add	r2, sp, #4
2ffda0d6:	4620      	mov	r0, r4
2ffda0d8:	6849      	ldr	r1, [r1, #4]
2ffda0da:	f7ff ff8d 	bl	2ffd9ff8 <nand_read_page_cmd>
2ffda0de:	b958      	cbnz	r0, 2ffda0f8 <nand_mtd_block_is_bad+0x54>
2ffda0e0:	f89d 3004 	ldrb.w	r3, [sp, #4]
2ffda0e4:	f89d 2005 	ldrb.w	r2, [sp, #5]
2ffda0e8:	4013      	ands	r3, r2
2ffda0ea:	2bff      	cmp	r3, #255	; 0xff
2ffda0ec:	d004      	beq.n	2ffda0f8 <nand_mtd_block_is_bad+0x54>
2ffda0ee:	4804      	ldr	r0, [pc, #16]	; (2ffda100 <nand_mtd_block_is_bad+0x5c>)
2ffda0f0:	4629      	mov	r1, r5
2ffda0f2:	f002 fcfb 	bl	2ffdcaec <tf_log>
2ffda0f6:	2001      	movs	r0, #1
2ffda0f8:	b002      	add	sp, #8
2ffda0fa:	bd70      	pop	{r4, r5, r6, pc}
2ffda0fc:	2ffe8e9c 	.word	0x2ffe8e9c
2ffda100:	2ffe4766 	.word	0x2ffe4766

2ffda104 <nand_wait_ready>:
2ffda104:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffda108:	4680      	mov	r8, r0
2ffda10a:	2001      	movs	r0, #1
2ffda10c:	f004 f95a 	bl	2ffde3c4 <udelay>
2ffda110:	4919      	ldr	r1, [pc, #100]	; (2ffda178 <nand_wait_ready+0x74>)
2ffda112:	2070      	movs	r0, #112	; 0x70
2ffda114:	f7ff fe78 	bl	2ffd9e08 <nand_send_cmd>
2ffda118:	4601      	mov	r1, r0
2ffda11a:	bb20      	cbnz	r0, 2ffda166 <nand_wait_ready+0x62>
2ffda11c:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffda120:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffda124:	4a15      	ldr	r2, [pc, #84]	; (2ffda17c <nand_wait_ready+0x78>)
2ffda126:	2300      	movs	r3, #0
2ffda128:	fba8 0100 	umull	r0, r1, r8, r0
2ffda12c:	f008 ea98 	blx	2ffe2660 <__aeabi_uldivmod>
2ffda130:	1984      	adds	r4, r0, r6
2ffda132:	eb41 0507 	adc.w	r5, r1, r7
2ffda136:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffda13a:	429d      	cmp	r5, r3
2ffda13c:	bf08      	it	eq
2ffda13e:	4294      	cmpeq	r4, r2
2ffda140:	d202      	bcs.n	2ffda148 <nand_wait_ready+0x44>
2ffda142:	f06f 013b 	mvn.w	r1, #59	; 0x3b
2ffda146:	e00e      	b.n	2ffda166 <nand_wait_ready+0x62>
2ffda148:	2201      	movs	r2, #1
2ffda14a:	f10d 0007 	add.w	r0, sp, #7
2ffda14e:	4611      	mov	r1, r2
2ffda150:	f7ff fe70 	bl	2ffd9e34 <nand_read_data>
2ffda154:	4601      	mov	r1, r0
2ffda156:	b930      	cbnz	r0, 2ffda166 <nand_wait_ready+0x62>
2ffda158:	f89d 3007 	ldrb.w	r3, [sp, #7]
2ffda15c:	065b      	lsls	r3, r3, #25
2ffda15e:	d506      	bpl.n	2ffda16e <nand_wait_ready+0x6a>
2ffda160:	f7ff fe52 	bl	2ffd9e08 <nand_send_cmd>
2ffda164:	4601      	mov	r1, r0
2ffda166:	4608      	mov	r0, r1
2ffda168:	b002      	add	sp, #8
2ffda16a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffda16e:	200a      	movs	r0, #10
2ffda170:	f004 f928 	bl	2ffde3c4 <udelay>
2ffda174:	e7df      	b.n	2ffda136 <nand_wait_ready+0x32>
2ffda176:	bf00      	nop
2ffda178:	0001d4c0 	.word	0x0001d4c0
2ffda17c:	000f4240 	.word	0x000f4240

2ffda180 <nand_raw_ctrl_init>:
2ffda180:	4b01      	ldr	r3, [pc, #4]	; (2ffda188 <nand_raw_ctrl_init+0x8>)
2ffda182:	6058      	str	r0, [r3, #4]
2ffda184:	4770      	bx	lr
2ffda186:	bf00      	nop
2ffda188:	2ffe8e9c 	.word	0x2ffe8e9c

2ffda18c <nand_raw_init>:
2ffda18c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffda18e:	4607      	mov	r7, r0
2ffda190:	4d31      	ldr	r5, [pc, #196]	; (2ffda258 <nand_raw_init+0xcc>)
2ffda192:	460e      	mov	r6, r1
2ffda194:	f001 fc18 	bl	2ffdb9c8 <get_nand_device>
2ffda198:	6028      	str	r0, [r5, #0]
2ffda19a:	b920      	cbnz	r0, 2ffda1a6 <nand_raw_init+0x1a>
2ffda19c:	f06f 0415 	mvn.w	r4, #21
2ffda1a0:	4620      	mov	r0, r4
2ffda1a2:	b003      	add	sp, #12
2ffda1a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffda1a6:	4b2d      	ldr	r3, [pc, #180]	; (2ffda25c <nand_raw_init+0xd0>)
2ffda1a8:	6283      	str	r3, [r0, #40]	; 0x28
2ffda1aa:	4b2d      	ldr	r3, [pc, #180]	; (2ffda260 <nand_raw_init+0xd4>)
2ffda1ac:	62c3      	str	r3, [r0, #44]	; 0x2c
2ffda1ae:	2300      	movs	r3, #0
2ffda1b0:	6183      	str	r3, [r0, #24]
2ffda1b2:	686b      	ldr	r3, [r5, #4]
2ffda1b4:	685a      	ldr	r2, [r3, #4]
2ffda1b6:	2a00      	cmp	r2, #0
2ffda1b8:	d04b      	beq.n	2ffda252 <nand_raw_init+0xc6>
2ffda1ba:	681b      	ldr	r3, [r3, #0]
2ffda1bc:	2b00      	cmp	r3, #0
2ffda1be:	d048      	beq.n	2ffda252 <nand_raw_init+0xc6>
2ffda1c0:	4928      	ldr	r1, [pc, #160]	; (2ffda264 <nand_raw_init+0xd8>)
2ffda1c2:	20ff      	movs	r0, #255	; 0xff
2ffda1c4:	f7ff fe20 	bl	2ffd9e08 <nand_send_cmd>
2ffda1c8:	4601      	mov	r1, r0
2ffda1ca:	b9f0      	cbnz	r0, 2ffda20a <nand_raw_init+0x7e>
2ffda1cc:	20fa      	movs	r0, #250	; 0xfa
2ffda1ce:	f7ff fe51 	bl	2ffd9e74 <nand_send_wait>
2ffda1d2:	4601      	mov	r1, r0
2ffda1d4:	b9c8      	cbnz	r0, 2ffda20a <nand_raw_init+0x7e>
2ffda1d6:	2090      	movs	r0, #144	; 0x90
2ffda1d8:	f7ff fe16 	bl	2ffd9e08 <nand_send_cmd>
2ffda1dc:	b9a8      	cbnz	r0, 2ffda20a <nand_raw_init+0x7e>
2ffda1de:	4922      	ldr	r1, [pc, #136]	; (2ffda268 <nand_raw_init+0xdc>)
2ffda1e0:	2020      	movs	r0, #32
2ffda1e2:	f7ff fdf5 	bl	2ffd9dd0 <nand_send_addr>
2ffda1e6:	b980      	cbnz	r0, 2ffda20a <nand_raw_init+0x7e>
2ffda1e8:	2104      	movs	r1, #4
2ffda1ea:	2201      	movs	r2, #1
2ffda1ec:	eb0d 0001 	add.w	r0, sp, r1
2ffda1f0:	f7ff fe20 	bl	2ffd9e34 <nand_read_data>
2ffda1f4:	b948      	cbnz	r0, 2ffda20a <nand_raw_init+0x7e>
2ffda1f6:	491d      	ldr	r1, [pc, #116]	; (2ffda26c <nand_raw_init+0xe0>)
2ffda1f8:	2204      	movs	r2, #4
2ffda1fa:	eb0d 0002 	add.w	r0, sp, r2
2ffda1fe:	f009 f8b8 	bl	2ffe3372 <strncmp>
2ffda202:	b130      	cbz	r0, 2ffda212 <nand_raw_init+0x86>
2ffda204:	481a      	ldr	r0, [pc, #104]	; (2ffda270 <nand_raw_init+0xe4>)
2ffda206:	f002 fc71 	bl	2ffdcaec <tf_log>
2ffda20a:	481a      	ldr	r0, [pc, #104]	; (2ffda274 <nand_raw_init+0xe8>)
2ffda20c:	f002 fc6e 	bl	2ffdcaec <tf_log>
2ffda210:	e003      	b.n	2ffda21a <nand_raw_init+0x8e>
2ffda212:	f7ff fe49 	bl	2ffd9ea8 <nand_read_param_page>
2ffda216:	2800      	cmp	r0, #0
2ffda218:	d1f7      	bne.n	2ffda20a <nand_raw_init+0x7e>
2ffda21a:	480f      	ldr	r0, [pc, #60]	; (2ffda258 <nand_raw_init+0xcc>)
2ffda21c:	f001 fc48 	bl	2ffdbab0 <plat_get_raw_nand_data>
2ffda220:	4604      	mov	r4, r0
2ffda222:	2800      	cmp	r0, #0
2ffda224:	d1ba      	bne.n	2ffda19c <nand_raw_init+0x10>
2ffda226:	6828      	ldr	r0, [r5, #0]
2ffda228:	6843      	ldr	r3, [r0, #4]
2ffda22a:	b133      	cbz	r3, 2ffda23a <nand_raw_init+0xae>
2ffda22c:	6801      	ldr	r1, [r0, #0]
2ffda22e:	b121      	cbz	r1, 2ffda23a <nand_raw_init+0xae>
2ffda230:	e9d0 2302 	ldrd	r2, r3, [r0, #8]
2ffda234:	ea52 0c03 	orrs.w	ip, r2, r3
2ffda238:	d104      	bne.n	2ffda244 <nand_raw_init+0xb8>
2ffda23a:	480f      	ldr	r0, [pc, #60]	; (2ffda278 <nand_raw_init+0xec>)
2ffda23c:	f44f 71da 	mov.w	r1, #436	; 0x1b4
2ffda240:	f008 fe68 	bl	2ffe2f14 <__assert>
2ffda244:	e9c7 2300 	strd	r2, r3, [r7]
2ffda248:	686b      	ldr	r3, [r5, #4]
2ffda24a:	6031      	str	r1, [r6, #0]
2ffda24c:	685b      	ldr	r3, [r3, #4]
2ffda24e:	4798      	blx	r3
2ffda250:	e7a6      	b.n	2ffda1a0 <nand_raw_init+0x14>
2ffda252:	f06f 0412 	mvn.w	r4, #18
2ffda256:	e7a3      	b.n	2ffda1a0 <nand_raw_init+0x14>
2ffda258:	2ffe8e9c 	.word	0x2ffe8e9c
2ffda25c:	2ffda0a5 	.word	0x2ffda0a5
2ffda260:	2ffda091 	.word	0x2ffda091
2ffda264:	00030d40 	.word	0x00030d40
2ffda268:	0001d4c0 	.word	0x0001d4c0
2ffda26c:	2ffe4734 	.word	0x2ffe4734
2ffda270:	2ffe4778 	.word	0x2ffe4778
2ffda274:	2ffe4791 	.word	0x2ffe4791
2ffda278:	2ffe47a6 	.word	0x2ffe47a6

2ffda27c <fdt32_to_cpu>:
2ffda27c:	ba00      	rev	r0, r0
2ffda27e:	4770      	bx	lr

2ffda280 <stm32_fmc2_set_buswidth_16>:
2ffda280:	4b06      	ldr	r3, [pc, #24]	; (2ffda29c <stm32_fmc2_set_buswidth_16+0x1c>)
2ffda282:	2800      	cmp	r0, #0
2ffda284:	bf14      	ite	ne
2ffda286:	2110      	movne	r1, #16
2ffda288:	2100      	moveq	r1, #0
2ffda28a:	681a      	ldr	r2, [r3, #0]
2ffda28c:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
2ffda290:	f023 0330 	bic.w	r3, r3, #48	; 0x30
2ffda294:	430b      	orrs	r3, r1
2ffda296:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
2ffda29a:	4770      	bx	lr
2ffda29c:	2ffe8ea4 	.word	0x2ffe8ea4

2ffda2a0 <stm32_fmc2_set_ecc>:
2ffda2a0:	4b06      	ldr	r3, [pc, #24]	; (2ffda2bc <stm32_fmc2_set_ecc+0x1c>)
2ffda2a2:	2800      	cmp	r0, #0
2ffda2a4:	bf14      	ite	ne
2ffda2a6:	2140      	movne	r1, #64	; 0x40
2ffda2a8:	2100      	moveq	r1, #0
2ffda2aa:	681a      	ldr	r2, [r3, #0]
2ffda2ac:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
2ffda2b0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
2ffda2b4:	430b      	orrs	r3, r1
2ffda2b6:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
2ffda2ba:	4770      	bx	lr
2ffda2bc:	2ffe8ea4 	.word	0x2ffe8ea4

2ffda2c0 <stm32_fmc2_setup>:
2ffda2c0:	4b18      	ldr	r3, [pc, #96]	; (2ffda324 <stm32_fmc2_setup+0x64>)
2ffda2c2:	6942      	ldr	r2, [r0, #20]
2ffda2c4:	6819      	ldr	r1, [r3, #0]
2ffda2c6:	b510      	push	{r4, lr}
2ffda2c8:	2a01      	cmp	r2, #1
2ffda2ca:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
2ffda2ce:	6984      	ldr	r4, [r0, #24]
2ffda2d0:	f023 0330 	bic.w	r3, r3, #48	; 0x30
2ffda2d4:	bf08      	it	eq
2ffda2d6:	f043 0310 	orreq.w	r3, r3, #16
2ffda2da:	2c01      	cmp	r4, #1
2ffda2dc:	d119      	bne.n	2ffda312 <stm32_fmc2_setup+0x52>
2ffda2de:	4c12      	ldr	r4, [pc, #72]	; (2ffda328 <stm32_fmc2_setup+0x68>)
2ffda2e0:	f023 2301 	bic.w	r3, r3, #16777472	; 0x1000100
2ffda2e4:	62c4      	str	r4, [r0, #44]	; 0x2c
2ffda2e6:	6a44      	ldr	r4, [r0, #36]	; 0x24
2ffda2e8:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
2ffda2ec:	2c01      	cmp	r4, #1
2ffda2ee:	d007      	beq.n	2ffda300 <stm32_fmc2_setup+0x40>
2ffda2f0:	2c08      	cmp	r4, #8
2ffda2f2:	d011      	beq.n	2ffda318 <stm32_fmc2_setup+0x58>
2ffda2f4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
2ffda2f8:	2407      	movs	r4, #7
2ffda2fa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2ffda2fe:	e002      	b.n	2ffda306 <stm32_fmc2_setup+0x46>
2ffda300:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
2ffda304:	2403      	movs	r4, #3
2ffda306:	07d2      	lsls	r2, r2, #31
2ffda308:	6204      	str	r4, [r0, #32]
2ffda30a:	bf42      	ittt	mi
2ffda30c:	6a02      	ldrmi	r2, [r0, #32]
2ffda30e:	3201      	addmi	r2, #1
2ffda310:	6202      	strmi	r2, [r0, #32]
2ffda312:	f8c1 3080 	str.w	r3, [r1, #128]	; 0x80
2ffda316:	bd10      	pop	{r4, pc}
2ffda318:	f043 2301 	orr.w	r3, r3, #16777472	; 0x1000100
2ffda31c:	240d      	movs	r4, #13
2ffda31e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
2ffda322:	e7f0      	b.n	2ffda306 <stm32_fmc2_setup+0x46>
2ffda324:	2ffe8ea4 	.word	0x2ffe8ea4
2ffda328:	2ffda49d 	.word	0x2ffda49d

2ffda32c <stm32_fmc2_exec>:
2ffda32c:	8882      	ldrh	r2, [r0, #4]
2ffda32e:	4603      	mov	r3, r0
2ffda330:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffda334:	f402 40e0 	and.w	r0, r2, #28672	; 0x7000
2ffda338:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
2ffda33c:	d029      	beq.n	2ffda392 <stm32_fmc2_exec+0x66>
2ffda33e:	d807      	bhi.n	2ffda350 <stm32_fmc2_exec+0x24>
2ffda340:	b188      	cbz	r0, 2ffda366 <stm32_fmc2_exec+0x3a>
2ffda342:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
2ffda346:	d018      	beq.n	2ffda37a <stm32_fmc2_exec+0x4e>
2ffda348:	f06f 0015 	mvn.w	r0, #21
2ffda34c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffda350:	f5b0 5f40 	cmp.w	r0, #12288	; 0x3000
2ffda354:	d062      	beq.n	2ffda41c <stm32_fmc2_exec+0xf0>
2ffda356:	f5b0 4f80 	cmp.w	r0, #16384	; 0x4000
2ffda35a:	d1f5      	bne.n	2ffda348 <stm32_fmc2_exec+0x1c>
2ffda35c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffda360:	6918      	ldr	r0, [r3, #16]
2ffda362:	f7ff becf 	b.w	2ffda104 <nand_wait_ready>
2ffda366:	494c      	ldr	r1, [pc, #304]	; (2ffda498 <stm32_fmc2_exec+0x16c>)
2ffda368:	240c      	movs	r4, #12
2ffda36a:	b2d2      	uxtb	r2, r2
2ffda36c:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
2ffda370:	fb04 1303 	mla	r3, r4, r3, r1
2ffda374:	689b      	ldr	r3, [r3, #8]
2ffda376:	701a      	strb	r2, [r3, #0]
2ffda378:	e7e8      	b.n	2ffda34c <stm32_fmc2_exec+0x20>
2ffda37a:	689b      	ldr	r3, [r3, #8]
2ffda37c:	200c      	movs	r0, #12
2ffda37e:	4a46      	ldr	r2, [pc, #280]	; (2ffda498 <stm32_fmc2_exec+0x16c>)
2ffda380:	7819      	ldrb	r1, [r3, #0]
2ffda382:	f892 3024 	ldrb.w	r3, [r2, #36]	; 0x24
2ffda386:	fb00 2303 	mla	r3, r0, r3, r2
2ffda38a:	68db      	ldr	r3, [r3, #12]
2ffda38c:	7019      	strb	r1, [r3, #0]
2ffda38e:	2000      	movs	r0, #0
2ffda390:	e7dc      	b.n	2ffda34c <stm32_fmc2_exec+0x20>
2ffda392:	f8d3 8000 	ldr.w	r8, [r3]
2ffda396:	b215      	sxth	r5, r2
2ffda398:	4a3f      	ldr	r2, [pc, #252]	; (2ffda498 <stm32_fmc2_exec+0x16c>)
2ffda39a:	210c      	movs	r1, #12
2ffda39c:	689c      	ldr	r4, [r3, #8]
2ffda39e:	2d00      	cmp	r5, #0
2ffda3a0:	68de      	ldr	r6, [r3, #12]
2ffda3a2:	f892 3024 	ldrb.w	r3, [r2, #36]	; 0x24
2ffda3a6:	fb01 2303 	mla	r3, r1, r3, r2
2ffda3aa:	685f      	ldr	r7, [r3, #4]
2ffda3ac:	da06      	bge.n	2ffda3bc <stm32_fmc2_exec+0x90>
2ffda3ae:	f8d8 3014 	ldr.w	r3, [r8, #20]
2ffda3b2:	2b01      	cmp	r3, #1
2ffda3b4:	d102      	bne.n	2ffda3bc <stm32_fmc2_exec+0x90>
2ffda3b6:	2000      	movs	r0, #0
2ffda3b8:	f7ff ff62 	bl	2ffda280 <stm32_fmc2_set_buswidth_16>
2ffda3bc:	07e0      	lsls	r0, r4, #31
2ffda3be:	d504      	bpl.n	2ffda3ca <stm32_fmc2_exec+0x9e>
2ffda3c0:	b11e      	cbz	r6, 2ffda3ca <stm32_fmc2_exec+0x9e>
2ffda3c2:	783b      	ldrb	r3, [r7, #0]
2ffda3c4:	3e01      	subs	r6, #1
2ffda3c6:	f804 3b01 	strb.w	r3, [r4], #1
2ffda3ca:	07a1      	lsls	r1, r4, #30
2ffda3cc:	d005      	beq.n	2ffda3da <stm32_fmc2_exec+0xae>
2ffda3ce:	2e01      	cmp	r6, #1
2ffda3d0:	bf82      	ittt	hi
2ffda3d2:	3e02      	subhi	r6, #2
2ffda3d4:	883b      	ldrhhi	r3, [r7, #0]
2ffda3d6:	f824 3b02 	strhhi.w	r3, [r4], #2
2ffda3da:	f026 0203 	bic.w	r2, r6, #3
2ffda3de:	08b3      	lsrs	r3, r6, #2
2ffda3e0:	4422      	add	r2, r4
2ffda3e2:	4294      	cmp	r4, r2
2ffda3e4:	d116      	bne.n	2ffda414 <stm32_fmc2_exec+0xe8>
2ffda3e6:	f06f 0203 	mvn.w	r2, #3
2ffda3ea:	fb02 6603 	mla	r6, r2, r3, r6
2ffda3ee:	2e01      	cmp	r6, #1
2ffda3f0:	bf82      	ittt	hi
2ffda3f2:	3e02      	subhi	r6, #2
2ffda3f4:	883b      	ldrhhi	r3, [r7, #0]
2ffda3f6:	f824 3b02 	strhhi.w	r3, [r4], #2
2ffda3fa:	b10e      	cbz	r6, 2ffda400 <stm32_fmc2_exec+0xd4>
2ffda3fc:	783b      	ldrb	r3, [r7, #0]
2ffda3fe:	7023      	strb	r3, [r4, #0]
2ffda400:	2d00      	cmp	r5, #0
2ffda402:	dac4      	bge.n	2ffda38e <stm32_fmc2_exec+0x62>
2ffda404:	f8d8 3014 	ldr.w	r3, [r8, #20]
2ffda408:	2b01      	cmp	r3, #1
2ffda40a:	d1c0      	bne.n	2ffda38e <stm32_fmc2_exec+0x62>
2ffda40c:	2001      	movs	r0, #1
2ffda40e:	f7ff ff37 	bl	2ffda280 <stm32_fmc2_set_buswidth_16>
2ffda412:	e7bc      	b.n	2ffda38e <stm32_fmc2_exec+0x62>
2ffda414:	6839      	ldr	r1, [r7, #0]
2ffda416:	f844 1b04 	str.w	r1, [r4], #4
2ffda41a:	e7e2      	b.n	2ffda3e2 <stm32_fmc2_exec+0xb6>
2ffda41c:	f8d3 8000 	ldr.w	r8, [r3]
2ffda420:	b215      	sxth	r5, r2
2ffda422:	4a1d      	ldr	r2, [pc, #116]	; (2ffda498 <stm32_fmc2_exec+0x16c>)
2ffda424:	210c      	movs	r1, #12
2ffda426:	689c      	ldr	r4, [r3, #8]
2ffda428:	2d00      	cmp	r5, #0
2ffda42a:	68de      	ldr	r6, [r3, #12]
2ffda42c:	f892 3024 	ldrb.w	r3, [r2, #36]	; 0x24
2ffda430:	fb01 2303 	mla	r3, r1, r3, r2
2ffda434:	685f      	ldr	r7, [r3, #4]
2ffda436:	da06      	bge.n	2ffda446 <stm32_fmc2_exec+0x11a>
2ffda438:	f8d8 3014 	ldr.w	r3, [r8, #20]
2ffda43c:	2b01      	cmp	r3, #1
2ffda43e:	d102      	bne.n	2ffda446 <stm32_fmc2_exec+0x11a>
2ffda440:	2000      	movs	r0, #0
2ffda442:	f7ff ff1d 	bl	2ffda280 <stm32_fmc2_set_buswidth_16>
2ffda446:	07e2      	lsls	r2, r4, #31
2ffda448:	d504      	bpl.n	2ffda454 <stm32_fmc2_exec+0x128>
2ffda44a:	b11e      	cbz	r6, 2ffda454 <stm32_fmc2_exec+0x128>
2ffda44c:	f814 3b01 	ldrb.w	r3, [r4], #1
2ffda450:	3e01      	subs	r6, #1
2ffda452:	703b      	strb	r3, [r7, #0]
2ffda454:	07a3      	lsls	r3, r4, #30
2ffda456:	d005      	beq.n	2ffda464 <stm32_fmc2_exec+0x138>
2ffda458:	2e01      	cmp	r6, #1
2ffda45a:	bf82      	ittt	hi
2ffda45c:	3e02      	subhi	r6, #2
2ffda45e:	f834 3b02 	ldrhhi.w	r3, [r4], #2
2ffda462:	803b      	strhhi	r3, [r7, #0]
2ffda464:	f026 0203 	bic.w	r2, r6, #3
2ffda468:	08b3      	lsrs	r3, r6, #2
2ffda46a:	4422      	add	r2, r4
2ffda46c:	4294      	cmp	r4, r2
2ffda46e:	d10e      	bne.n	2ffda48e <stm32_fmc2_exec+0x162>
2ffda470:	f06f 0203 	mvn.w	r2, #3
2ffda474:	fb02 6603 	mla	r6, r2, r3, r6
2ffda478:	2e01      	cmp	r6, #1
2ffda47a:	bf82      	ittt	hi
2ffda47c:	3e02      	subhi	r6, #2
2ffda47e:	f834 3b02 	ldrhhi.w	r3, [r4], #2
2ffda482:	803b      	strhhi	r3, [r7, #0]
2ffda484:	2e00      	cmp	r6, #0
2ffda486:	d0bb      	beq.n	2ffda400 <stm32_fmc2_exec+0xd4>
2ffda488:	7823      	ldrb	r3, [r4, #0]
2ffda48a:	703b      	strb	r3, [r7, #0]
2ffda48c:	e7b8      	b.n	2ffda400 <stm32_fmc2_exec+0xd4>
2ffda48e:	f854 1b04 	ldr.w	r1, [r4], #4
2ffda492:	6039      	str	r1, [r7, #0]
2ffda494:	e7ea      	b.n	2ffda46c <stm32_fmc2_exec+0x140>
2ffda496:	bf00      	nop
2ffda498:	2ffe8ea4 	.word	0x2ffe8ea4

2ffda49c <stm32_fmc2_read_page>:
2ffda49c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffda4a0:	4605      	mov	r5, r0
2ffda4a2:	b099      	sub	sp, #100	; 0x64
2ffda4a4:	4608      	mov	r0, r1
2ffda4a6:	6a2b      	ldr	r3, [r5, #32]
2ffda4a8:	920a      	str	r2, [sp, #40]	; 0x28
2ffda4aa:	9302      	str	r3, [sp, #8]
2ffda4ac:	2300      	movs	r3, #0
2ffda4ae:	69ef      	ldr	r7, [r5, #28]
2ffda4b0:	461a      	mov	r2, r3
2ffda4b2:	686e      	ldr	r6, [r5, #4]
2ffda4b4:	4619      	mov	r1, r3
2ffda4b6:	f7ff fd9f 	bl	2ffd9ff8 <nand_read_page_cmd>
2ffda4ba:	4604      	mov	r4, r0
2ffda4bc:	2800      	cmp	r0, #0
2ffda4be:	f040 80db 	bne.w	2ffda678 <stm32_fmc2_read_page+0x1dc>
2ffda4c2:	fbb6 f3f7 	udiv	r3, r6, r7
2ffda4c6:	930b      	str	r3, [sp, #44]	; 0x2c
2ffda4c8:	686b      	ldr	r3, [r5, #4]
2ffda4ca:	9e0a      	ldr	r6, [sp, #40]	; 0x28
2ffda4cc:	f8df a2bc 	ldr.w	sl, [pc, #700]	; 2ffda78c <stm32_fmc2_read_page+0x2f0>
2ffda4d0:	3302      	adds	r3, #2
2ffda4d2:	9300      	str	r3, [sp, #0]
2ffda4d4:	00fb      	lsls	r3, r7, #3
2ffda4d6:	930c      	str	r3, [sp, #48]	; 0x30
2ffda4d8:	9008      	str	r0, [sp, #32]
2ffda4da:	9009      	str	r0, [sp, #36]	; 0x24
2ffda4dc:	9003      	str	r0, [sp, #12]
2ffda4de:	9001      	str	r0, [sp, #4]
2ffda4e0:	9b01      	ldr	r3, [sp, #4]
2ffda4e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
2ffda4e4:	4293      	cmp	r3, r2
2ffda4e6:	f000 80c7 	beq.w	2ffda678 <stm32_fmc2_read_page+0x1dc>
2ffda4ea:	2000      	movs	r0, #0
2ffda4ec:	f7ff fed8 	bl	2ffda2a0 <stm32_fmc2_set_ecc>
2ffda4f0:	6a6b      	ldr	r3, [r5, #36]	; 0x24
2ffda4f2:	2001      	movs	r0, #1
2ffda4f4:	2b01      	cmp	r3, #1
2ffda4f6:	bf1f      	itttt	ne
2ffda4f8:	f8da 2000 	ldrne.w	r2, [sl]
2ffda4fc:	f8d2 3080 	ldrne.w	r3, [r2, #128]	; 0x80
2ffda500:	f023 7300 	bicne.w	r3, r3, #33554432	; 0x2000000
2ffda504:	f8c2 3080 	strne.w	r3, [r2, #128]	; 0x80
2ffda508:	f7ff feca 	bl	2ffda2a0 <stm32_fmc2_set_ecc>
2ffda50c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
2ffda50e:	463a      	mov	r2, r7
2ffda510:	4631      	mov	r1, r6
2ffda512:	1af0      	subs	r0, r6, r3
2ffda514:	f7ff fd44 	bl	2ffd9fa0 <nand_change_read_column_cmd>
2ffda518:	2800      	cmp	r0, #0
2ffda51a:	f040 812b 	bne.w	2ffda774 <stm32_fmc2_read_page+0x2d8>
2ffda51e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
2ffda520:	2b01      	cmp	r3, #1
2ffda522:	d126      	bne.n	2ffda572 <stm32_fmc2_read_page+0xd6>
2ffda524:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffda528:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffda52c:	4a93      	ldr	r2, [pc, #588]	; (2ffda77c <stm32_fmc2_read_page+0x2e0>)
2ffda52e:	f242 7110 	movw	r1, #10000	; 0x2710
2ffda532:	2300      	movs	r3, #0
2ffda534:	fba0 0101 	umull	r0, r1, r0, r1
2ffda538:	f008 e892 	blx	2ffe2660 <__aeabi_uldivmod>
2ffda53c:	eb10 0308 	adds.w	r3, r0, r8
2ffda540:	9304      	str	r3, [sp, #16]
2ffda542:	eb41 0309 	adc.w	r3, r1, r9
2ffda546:	9305      	str	r3, [sp, #20]
2ffda548:	f8da 3000 	ldr.w	r3, [sl]
2ffda54c:	f103 0c84 	add.w	ip, r3, #132	; 0x84
2ffda550:	f8dc 2000 	ldr.w	r2, [ip]
2ffda554:	0652      	lsls	r2, r2, #25
2ffda556:	d57d      	bpl.n	2ffda654 <stm32_fmc2_read_page+0x1b8>
2ffda558:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
2ffda55c:	2000      	movs	r0, #0
2ffda55e:	b2da      	uxtb	r2, r3
2ffda560:	9203      	str	r2, [sp, #12]
2ffda562:	f3c3 2207 	ubfx	r2, r3, #8, #8
2ffda566:	f3c3 4307 	ubfx	r3, r3, #16, #8
2ffda56a:	9209      	str	r2, [sp, #36]	; 0x24
2ffda56c:	9308      	str	r3, [sp, #32]
2ffda56e:	f7ff fe97 	bl	2ffda2a0 <stm32_fmc2_set_ecc>
2ffda572:	9a02      	ldr	r2, [sp, #8]
2ffda574:	a910      	add	r1, sp, #64	; 0x40
2ffda576:	9800      	ldr	r0, [sp, #0]
2ffda578:	f7ff fd12 	bl	2ffd9fa0 <nand_change_read_column_cmd>
2ffda57c:	4683      	mov	fp, r0
2ffda57e:	2800      	cmp	r0, #0
2ffda580:	f040 80fa 	bne.w	2ffda778 <stm32_fmc2_read_page+0x2dc>
2ffda584:	6a6a      	ldr	r2, [r5, #36]	; 0x24
2ffda586:	2a01      	cmp	r2, #1
2ffda588:	d17d      	bne.n	2ffda686 <stm32_fmc2_read_page+0x1ea>
2ffda58a:	9b03      	ldr	r3, [sp, #12]
2ffda58c:	f89d 8040 	ldrb.w	r8, [sp, #64]	; 0x40
2ffda590:	920e      	str	r2, [sp, #56]	; 0x38
2ffda592:	ea83 0808 	eor.w	r8, r3, r8
2ffda596:	9a09      	ldr	r2, [sp, #36]	; 0x24
2ffda598:	f89d 3041 	ldrb.w	r3, [sp, #65]	; 0x41
2ffda59c:	f89d 9042 	ldrb.w	r9, [sp, #66]	; 0x42
2ffda5a0:	4053      	eors	r3, r2
2ffda5a2:	9a08      	ldr	r2, [sp, #32]
2ffda5a4:	930d      	str	r3, [sp, #52]	; 0x34
2ffda5a6:	ea82 0909 	eor.w	r9, r2, r9
2ffda5aa:	f369 4017 	bfi	r0, r9, #16, #8
2ffda5ae:	f363 200f 	bfi	r0, r3, #8, #8
2ffda5b2:	f368 0007 	bfi	r0, r8, #0, #8
2ffda5b6:	2800      	cmp	r0, #0
2ffda5b8:	d043      	beq.n	2ffda642 <stm32_fmc2_read_page+0x1a6>
2ffda5ba:	f002 fb6d 	bl	2ffdcc98 <__popcountsi2>
2ffda5be:	2816      	cmp	r0, #22
2ffda5c0:	dc5e      	bgt.n	2ffda680 <stm32_fmc2_read_page+0x1e4>
2ffda5c2:	280c      	cmp	r0, #12
2ffda5c4:	d152      	bne.n	2ffda66c <stm32_fmc2_read_page+0x1d0>
2ffda5c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2ffda5c8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
2ffda5ca:	0858      	lsrs	r0, r3, #1
2ffda5cc:	f003 0102 	and.w	r1, r3, #2
2ffda5d0:	ea41 11d8 	orr.w	r1, r1, r8, lsr #7
2ffda5d4:	f000 0004 	and.w	r0, r0, #4
2ffda5d8:	4301      	orrs	r1, r0
2ffda5da:	0898      	lsrs	r0, r3, #2
2ffda5dc:	08db      	lsrs	r3, r3, #3
2ffda5de:	f000 0008 	and.w	r0, r0, #8
2ffda5e2:	4301      	orrs	r1, r0
2ffda5e4:	f003 0310 	and.w	r3, r3, #16
2ffda5e8:	430b      	orrs	r3, r1
2ffda5ea:	ea4f 1109 	mov.w	r1, r9, lsl #4
2ffda5ee:	f001 0120 	and.w	r1, r1, #32
2ffda5f2:	430b      	orrs	r3, r1
2ffda5f4:	ea4f 01c9 	mov.w	r1, r9, lsl #3
2ffda5f8:	f001 0140 	and.w	r1, r1, #64	; 0x40
2ffda5fc:	430b      	orrs	r3, r1
2ffda5fe:	ea4f 0189 	mov.w	r1, r9, lsl #2
2ffda602:	ea4f 0949 	mov.w	r9, r9, lsl #1
2ffda606:	f001 0180 	and.w	r1, r1, #128	; 0x80
2ffda60a:	430b      	orrs	r3, r1
2ffda60c:	f409 7980 	and.w	r9, r9, #256	; 0x100
2ffda610:	ea4f 0198 	mov.w	r1, r8, lsr #2
2ffda614:	ea43 0909 	orr.w	r9, r3, r9
2ffda618:	f001 0102 	and.w	r1, r1, #2
2ffda61c:	f3c8 0340 	ubfx	r3, r8, #1, #1
2ffda620:	fa1f f989 	uxth.w	r9, r9
2ffda624:	ea4f 08d8 	mov.w	r8, r8, lsr #3
2ffda628:	430b      	orrs	r3, r1
2ffda62a:	f008 0804 	and.w	r8, r8, #4
2ffda62e:	ea43 0808 	orr.w	r8, r3, r8
2ffda632:	fa02 f208 	lsl.w	r2, r2, r8
2ffda636:	f816 8009 	ldrb.w	r8, [r6, r9]
2ffda63a:	ea82 0208 	eor.w	r2, r2, r8
2ffda63e:	f806 2009 	strb.w	r2, [r6, r9]
2ffda642:	9b01      	ldr	r3, [sp, #4]
2ffda644:	9a02      	ldr	r2, [sp, #8]
2ffda646:	443e      	add	r6, r7
2ffda648:	3301      	adds	r3, #1
2ffda64a:	9301      	str	r3, [sp, #4]
2ffda64c:	9b00      	ldr	r3, [sp, #0]
2ffda64e:	4413      	add	r3, r2
2ffda650:	9300      	str	r3, [sp, #0]
2ffda652:	e745      	b.n	2ffda4e0 <stm32_fmc2_read_page+0x44>
2ffda654:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffda658:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
2ffda65c:	4589      	cmp	r9, r1
2ffda65e:	bf08      	it	eq
2ffda660:	4580      	cmpeq	r8, r0
2ffda662:	f4bf af75 	bcs.w	2ffda550 <stm32_fmc2_read_page+0xb4>
2ffda666:	f06f 043b 	mvn.w	r4, #59	; 0x3b
2ffda66a:	e005      	b.n	2ffda678 <stm32_fmc2_read_page+0x1dc>
2ffda66c:	4944      	ldr	r1, [pc, #272]	; (2ffda780 <stm32_fmc2_read_page+0x2e4>)
2ffda66e:	4845      	ldr	r0, [pc, #276]	; (2ffda784 <stm32_fmc2_read_page+0x2e8>)
2ffda670:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffda674:	f002 fa3a 	bl	2ffdcaec <tf_log>
2ffda678:	4620      	mov	r0, r4
2ffda67a:	b019      	add	sp, #100	; 0x64
2ffda67c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffda680:	493f      	ldr	r1, [pc, #252]	; (2ffda780 <stm32_fmc2_read_page+0x2e4>)
2ffda682:	4841      	ldr	r0, [pc, #260]	; (2ffda788 <stm32_fmc2_read_page+0x2ec>)
2ffda684:	e7f4      	b.n	2ffda670 <stm32_fmc2_read_page+0x1d4>
2ffda686:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffda68a:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffda68e:	4a3b      	ldr	r2, [pc, #236]	; (2ffda77c <stm32_fmc2_read_page+0x2e0>)
2ffda690:	f242 7110 	movw	r1, #10000	; 0x2710
2ffda694:	2300      	movs	r3, #0
2ffda696:	fba0 0101 	umull	r0, r1, r0, r1
2ffda69a:	f007 efe2 	blx	2ffe2660 <__aeabi_uldivmod>
2ffda69e:	eb10 0308 	adds.w	r3, r0, r8
2ffda6a2:	f8da 0000 	ldr.w	r0, [sl]
2ffda6a6:	9306      	str	r3, [sp, #24]
2ffda6a8:	eb41 0309 	adc.w	r3, r1, r9
2ffda6ac:	f500 7115 	add.w	r1, r0, #596	; 0x254
2ffda6b0:	9307      	str	r3, [sp, #28]
2ffda6b2:	680b      	ldr	r3, [r1, #0]
2ffda6b4:	079b      	lsls	r3, r3, #30
2ffda6b6:	d51b      	bpl.n	2ffda6f0 <stm32_fmc2_read_page+0x254>
2ffda6b8:	f8d0 827c 	ldr.w	r8, [r0, #636]	; 0x27c
2ffda6bc:	f8d0 1280 	ldr.w	r1, [r0, #640]	; 0x280
2ffda6c0:	f8d0 2284 	ldr.w	r2, [r0, #644]	; 0x284
2ffda6c4:	f8d0 3288 	ldr.w	r3, [r0, #648]	; 0x288
2ffda6c8:	f8d0 928c 	ldr.w	r9, [r0, #652]	; 0x28c
2ffda6cc:	2000      	movs	r0, #0
2ffda6ce:	910f      	str	r1, [sp, #60]	; 0x3c
2ffda6d0:	920e      	str	r2, [sp, #56]	; 0x38
2ffda6d2:	930d      	str	r3, [sp, #52]	; 0x34
2ffda6d4:	f7ff fde4 	bl	2ffda2a0 <stm32_fmc2_set_ecc>
2ffda6d8:	f018 0f02 	tst.w	r8, #2
2ffda6dc:	d0b1      	beq.n	2ffda642 <stm32_fmc2_read_page+0x1a6>
2ffda6de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2ffda6e0:	f018 0f01 	tst.w	r8, #1
2ffda6e4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
2ffda6e6:	990f      	ldr	r1, [sp, #60]	; 0x3c
2ffda6e8:	d00b      	beq.n	2ffda702 <stm32_fmc2_read_page+0x266>
2ffda6ea:	f06f 0458 	mvn.w	r4, #88	; 0x58
2ffda6ee:	e7c3      	b.n	2ffda678 <stm32_fmc2_read_page+0x1dc>
2ffda6f0:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffda6f4:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
2ffda6f8:	4599      	cmp	r9, r3
2ffda6fa:	bf08      	it	eq
2ffda6fc:	4590      	cmpeq	r8, r2
2ffda6fe:	d2d8      	bcs.n	2ffda6b2 <stm32_fmc2_read_page+0x216>
2ffda700:	e7b1      	b.n	2ffda666 <stm32_fmc2_read_page+0x1ca>
2ffda702:	f3c1 000c 	ubfx	r0, r1, #0, #13
2ffda706:	f3c1 410c 	ubfx	r1, r1, #16, #13
2ffda70a:	f8ad 1052 	strh.w	r1, [sp, #82]	; 0x52
2ffda70e:	f3c2 010c 	ubfx	r1, r2, #0, #13
2ffda712:	f3c2 420c 	ubfx	r2, r2, #16, #13
2ffda716:	f8ad 2056 	strh.w	r2, [sp, #86]	; 0x56
2ffda71a:	f3c3 020c 	ubfx	r2, r3, #0, #13
2ffda71e:	f8ad 0050 	strh.w	r0, [sp, #80]	; 0x50
2ffda722:	2001      	movs	r0, #1
2ffda724:	f3c3 430c 	ubfx	r3, r3, #16, #13
2ffda728:	f8ad 2058 	strh.w	r2, [sp, #88]	; 0x58
2ffda72c:	aa14      	add	r2, sp, #80	; 0x50
2ffda72e:	f3c8 1803 	ubfx	r8, r8, #4, #4
2ffda732:	f8ad 305a 	strh.w	r3, [sp, #90]	; 0x5a
2ffda736:	f3c9 030c 	ubfx	r3, r9, #0, #13
2ffda73a:	f3c9 490c 	ubfx	r9, r9, #16, #13
2ffda73e:	f8ad 1054 	strh.w	r1, [sp, #84]	; 0x54
2ffda742:	f8ad 305c 	strh.w	r3, [sp, #92]	; 0x5c
2ffda746:	f8ad 905e 	strh.w	r9, [sp, #94]	; 0x5e
2ffda74a:	45d8      	cmp	r8, fp
2ffda74c:	f43f af79 	beq.w	2ffda642 <stm32_fmc2_read_page+0x1a6>
2ffda750:	f832 3b02 	ldrh.w	r3, [r2], #2
2ffda754:	990c      	ldr	r1, [sp, #48]	; 0x30
2ffda756:	428b      	cmp	r3, r1
2ffda758:	d209      	bcs.n	2ffda76e <stm32_fmc2_read_page+0x2d2>
2ffda75a:	08d9      	lsrs	r1, r3, #3
2ffda75c:	f003 0307 	and.w	r3, r3, #7
2ffda760:	f816 c001 	ldrb.w	ip, [r6, r1]
2ffda764:	fa00 f303 	lsl.w	r3, r0, r3
2ffda768:	ea83 030c 	eor.w	r3, r3, ip
2ffda76c:	5473      	strb	r3, [r6, r1]
2ffda76e:	f10b 0b01 	add.w	fp, fp, #1
2ffda772:	e7ea      	b.n	2ffda74a <stm32_fmc2_read_page+0x2ae>
2ffda774:	4604      	mov	r4, r0
2ffda776:	e77f      	b.n	2ffda678 <stm32_fmc2_read_page+0x1dc>
2ffda778:	4604      	mov	r4, r0
2ffda77a:	e77d      	b.n	2ffda678 <stm32_fmc2_read_page+0x1dc>
2ffda77c:	000f4240 	.word	0x000f4240
2ffda780:	2ffe486b 	.word	0x2ffe486b
2ffda784:	2ffe47c2 	.word	0x2ffe47c2
2ffda788:	2ffe47e1 	.word	0x2ffe47e1
2ffda78c:	2ffe8ea4 	.word	0x2ffe8ea4

2ffda790 <stm32_fmc2_init>:
2ffda790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffda794:	b089      	sub	sp, #36	; 0x24
2ffda796:	2600      	movs	r6, #0
2ffda798:	a803      	add	r0, sp, #12
2ffda79a:	9603      	str	r6, [sp, #12]
2ffda79c:	f007 fb8e 	bl	2ffe1ebc <fdt_get_address>
2ffda7a0:	b928      	cbnz	r0, 2ffda7ae <stm32_fmc2_init+0x1e>
2ffda7a2:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2ffda7a6:	4628      	mov	r0, r5
2ffda7a8:	b009      	add	sp, #36	; 0x24
2ffda7aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffda7ae:	4aba      	ldr	r2, [pc, #744]	; (2ffdaa98 <stm32_fmc2_init+0x308>)
2ffda7b0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffda7b4:	a804      	add	r0, sp, #16
2ffda7b6:	f007 fca7 	bl	2ffe2108 <dt_get_node>
2ffda7ba:	1c43      	adds	r3, r0, #1
2ffda7bc:	4605      	mov	r5, r0
2ffda7be:	d103      	bne.n	2ffda7c8 <stm32_fmc2_init+0x38>
2ffda7c0:	48b6      	ldr	r0, [pc, #728]	; (2ffdaa9c <stm32_fmc2_init+0x30c>)
2ffda7c2:	f002 f993 	bl	2ffdcaec <tf_log>
2ffda7c6:	e7ee      	b.n	2ffda7a6 <stm32_fmc2_init+0x16>
2ffda7c8:	9b07      	ldr	r3, [sp, #28]
2ffda7ca:	2b00      	cmp	r3, #0
2ffda7cc:	d0e9      	beq.n	2ffda7a2 <stm32_fmc2_init+0x12>
2ffda7ce:	9a05      	ldr	r2, [sp, #20]
2ffda7d0:	4cb3      	ldr	r4, [pc, #716]	; (2ffdaaa0 <stm32_fmc2_init+0x310>)
2ffda7d2:	9b04      	ldr	r3, [sp, #16]
2ffda7d4:	2a00      	cmp	r2, #0
2ffda7d6:	6023      	str	r3, [r4, #0]
2ffda7d8:	da02      	bge.n	2ffda7e0 <stm32_fmc2_init+0x50>
2ffda7da:	f06f 050e 	mvn.w	r5, #14
2ffda7de:	e7e2      	b.n	2ffda7a6 <stm32_fmc2_init+0x16>
2ffda7e0:	9b06      	ldr	r3, [sp, #24]
2ffda7e2:	2b00      	cmp	r3, #0
2ffda7e4:	dbf9      	blt.n	2ffda7da <stm32_fmc2_init+0x4a>
2ffda7e6:	61e2      	str	r2, [r4, #28]
2ffda7e8:	4601      	mov	r1, r0
2ffda7ea:	6223      	str	r3, [r4, #32]
2ffda7ec:	4633      	mov	r3, r6
2ffda7ee:	4aad      	ldr	r2, [pc, #692]	; (2ffdaaa4 <stm32_fmc2_init+0x314>)
2ffda7f0:	9803      	ldr	r0, [sp, #12]
2ffda7f2:	f008 f9f2 	bl	2ffe2bda <fdt_getprop>
2ffda7f6:	2800      	cmp	r0, #0
2ffda7f8:	d0ef      	beq.n	2ffda7da <stm32_fmc2_init+0x4a>
2ffda7fa:	f100 0220 	add.w	r2, r0, #32
2ffda7fe:	4621      	mov	r1, r4
2ffda800:	f100 0350 	add.w	r3, r0, #80	; 0x50
2ffda804:	f852 0c18 	ldr.w	r0, [r2, #-24]
2ffda808:	f7ff fd38 	bl	2ffda27c <fdt32_to_cpu>
2ffda80c:	6048      	str	r0, [r1, #4]
2ffda80e:	f852 0c10 	ldr.w	r0, [r2, #-16]
2ffda812:	f7ff fd33 	bl	2ffda27c <fdt32_to_cpu>
2ffda816:	6088      	str	r0, [r1, #8]
2ffda818:	f852 0c08 	ldr.w	r0, [r2, #-8]
2ffda81c:	f7ff fd2e 	bl	2ffda27c <fdt32_to_cpu>
2ffda820:	f841 0f0c 	str.w	r0, [r1, #12]!
2ffda824:	3218      	adds	r2, #24
2ffda826:	4293      	cmp	r3, r2
2ffda828:	d1ec      	bne.n	2ffda804 <stm32_fmc2_init+0x74>
2ffda82a:	4628      	mov	r0, r5
2ffda82c:	f005 fdee 	bl	2ffe040c <dt_set_pinctrl_config>
2ffda830:	4606      	mov	r6, r0
2ffda832:	2800      	cmp	r0, #0
2ffda834:	d1d1      	bne.n	2ffda7da <stm32_fmc2_init+0x4a>
2ffda836:	9803      	ldr	r0, [sp, #12]
2ffda838:	4629      	mov	r1, r5
2ffda83a:	f008 f82e 	bl	2ffe289a <fdt_first_subnode>
2ffda83e:	2800      	cmp	r0, #0
2ffda840:	4601      	mov	r1, r0
2ffda842:	da05      	bge.n	2ffda850 <stm32_fmc2_init+0xc0>
2ffda844:	2e01      	cmp	r6, #1
2ffda846:	d008      	beq.n	2ffda85a <stm32_fmc2_init+0xca>
2ffda848:	4897      	ldr	r0, [pc, #604]	; (2ffdaaa8 <stm32_fmc2_init+0x318>)
2ffda84a:	f002 f94f 	bl	2ffdcaec <tf_log>
2ffda84e:	e7c4      	b.n	2ffda7da <stm32_fmc2_init+0x4a>
2ffda850:	9803      	ldr	r0, [sp, #12]
2ffda852:	3601      	adds	r6, #1
2ffda854:	f008 f834 	bl	2ffe28c0 <fdt_next_subnode>
2ffda858:	e7f1      	b.n	2ffda83e <stm32_fmc2_init+0xae>
2ffda85a:	9803      	ldr	r0, [sp, #12]
2ffda85c:	4629      	mov	r1, r5
2ffda85e:	4e91      	ldr	r6, [pc, #580]	; (2ffdaaa4 <stm32_fmc2_init+0x314>)
2ffda860:	f008 f81b 	bl	2ffe289a <fdt_first_subnode>
2ffda864:	4605      	mov	r5, r0
2ffda866:	2d00      	cmp	r5, #0
2ffda868:	da0c      	bge.n	2ffda884 <stm32_fmc2_init+0xf4>
2ffda86a:	69e0      	ldr	r0, [r4, #28]
2ffda86c:	f004 ff52 	bl	2ffdf714 <stm32mp_clk_enable>
2ffda870:	6a20      	ldr	r0, [r4, #32]
2ffda872:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffda876:	f007 f9e9 	bl	2ffe1c4c <stm32mp_reset_assert_to>
2ffda87a:	b1b8      	cbz	r0, 2ffda8ac <stm32_fmc2_init+0x11c>
2ffda87c:	f002 f9d4 	bl	2ffdcc28 <console_flush>
2ffda880:	f7fb ecee 	blx	2ffd6260 <do_panic>
2ffda884:	9803      	ldr	r0, [sp, #12]
2ffda886:	2300      	movs	r3, #0
2ffda888:	4632      	mov	r2, r6
2ffda88a:	4629      	mov	r1, r5
2ffda88c:	f008 f9a5 	bl	2ffe2bda <fdt_getprop>
2ffda890:	b908      	cbnz	r0, 2ffda896 <stm32_fmc2_init+0x106>
2ffda892:	4886      	ldr	r0, [pc, #536]	; (2ffdaaac <stm32_fmc2_init+0x31c>)
2ffda894:	e7d9      	b.n	2ffda84a <stm32_fmc2_init+0xba>
2ffda896:	6800      	ldr	r0, [r0, #0]
2ffda898:	f7ff fcf0 	bl	2ffda27c <fdt32_to_cpu>
2ffda89c:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
2ffda8a0:	4629      	mov	r1, r5
2ffda8a2:	9803      	ldr	r0, [sp, #12]
2ffda8a4:	f008 f80c 	bl	2ffe28c0 <fdt_next_subnode>
2ffda8a8:	4605      	mov	r5, r0
2ffda8aa:	e7dc      	b.n	2ffda866 <stm32_fmc2_init+0xd6>
2ffda8ac:	6a20      	ldr	r0, [r4, #32]
2ffda8ae:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffda8b2:	f007 fa03 	bl	2ffe1cbc <stm32mp_reset_deassert_to>
2ffda8b6:	4605      	mov	r5, r0
2ffda8b8:	2800      	cmp	r0, #0
2ffda8ba:	d1df      	bne.n	2ffda87c <stm32_fmc2_init+0xec>
2ffda8bc:	6823      	ldr	r3, [r4, #0]
2ffda8be:	f246 1aa8 	movw	sl, #25000	; 0x61a8
2ffda8c2:	487b      	ldr	r0, [pc, #492]	; (2ffdaab0 <stm32_fmc2_init+0x320>)
2ffda8c4:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
2ffda8c8:	6819      	ldr	r1, [r3, #0]
2ffda8ca:	4010      	ands	r0, r2
2ffda8cc:	4a79      	ldr	r2, [pc, #484]	; (2ffdaab4 <stm32_fmc2_init+0x324>)
2ffda8ce:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
2ffda8d2:	6019      	str	r1, [r3, #0]
2ffda8d4:	4302      	orrs	r2, r0
2ffda8d6:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
2ffda8da:	f04f 320a 	mov.w	r2, #168430090	; 0xa0a0a0a
2ffda8de:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
2ffda8e2:	69e0      	ldr	r0, [r4, #28]
2ffda8e4:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
2ffda8e8:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
2ffda8ec:	f004 ff1b 	bl	2ffdf726 <stm32mp_clk_get_rate>
2ffda8f0:	fbb0 f0f4 	udiv	r0, r0, r4
2ffda8f4:	4c70      	ldr	r4, [pc, #448]	; (2ffdaab8 <stm32_fmc2_init+0x328>)
2ffda8f6:	f24c 3150 	movw	r1, #50000	; 0xc350
2ffda8fa:	fbb4 f4f0 	udiv	r4, r4, r0
2ffda8fe:	1e62      	subs	r2, r4, #1
2ffda900:	f644 6020 	movw	r0, #20000	; 0x4e20
2ffda904:	ea4f 0e44 	mov.w	lr, r4, lsl #1
2ffda908:	4554      	cmp	r4, sl
2ffda90a:	bf2c      	ite	cs
2ffda90c:	eb02 0a04 	addcs.w	sl, r2, r4
2ffda910:	4492      	addcc	sl, r2
2ffda912:	fbba faf4 	udiv	sl, sl, r4
2ffda916:	f10a 33ff 	add.w	r3, sl, #4294967295	; 0xffffffff
2ffda91a:	2b0f      	cmp	r3, #15
2ffda91c:	bf28      	it	cs
2ffda91e:	230f      	movcs	r3, #15
2ffda920:	42a0      	cmp	r0, r4
2ffda922:	9301      	str	r3, [sp, #4]
2ffda924:	bf38      	it	cc
2ffda926:	4620      	movcc	r0, r4
2ffda928:	eb02 0a00 	add.w	sl, r2, r0
2ffda92c:	4b63      	ldr	r3, [pc, #396]	; (2ffdaabc <stm32_fmc2_init+0x32c>)
2ffda92e:	fbba faf4 	udiv	sl, sl, r4
2ffda932:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
2ffda936:	f1ba 0f0f 	cmp.w	sl, #15
2ffda93a:	bf28      	it	cs
2ffda93c:	f04f 0a0f 	movcs.w	sl, #15
2ffda940:	42a1      	cmp	r1, r4
2ffda942:	bf38      	it	cc
2ffda944:	4621      	movcc	r1, r4
2ffda946:	eb02 0801 	add.w	r8, r2, r1
2ffda94a:	fbb8 f8f4 	udiv	r8, r8, r4
2ffda94e:	f1b8 0f01 	cmp.w	r8, #1
2ffda952:	bf38      	it	cc
2ffda954:	f04f 0801 	movcc.w	r8, #1
2ffda958:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
2ffda95c:	bf28      	it	cs
2ffda95e:	f04f 08ff 	movcs.w	r8, #255	; 0xff
2ffda962:	429c      	cmp	r4, r3
2ffda964:	f200 8091 	bhi.w	2ffdaa8a <stm32_fmc2_init+0x2fa>
2ffda968:	f5c1 3788 	rsb	r7, r1, #69632	; 0x11000
2ffda96c:	f507 77b8 	add.w	r7, r7, #368	; 0x170
2ffda970:	42a7      	cmp	r7, r4
2ffda972:	bf38      	it	cc
2ffda974:	4627      	movcc	r7, r4
2ffda976:	458e      	cmp	lr, r1
2ffda978:	f080 8089 	bcs.w	2ffdaa8e <stm32_fmc2_init+0x2fe>
2ffda97c:	eba1 060e 	sub.w	r6, r1, lr
2ffda980:	f649 433f 	movw	r3, #39999	; 0x9c3f
2ffda984:	429e      	cmp	r6, r3
2ffda986:	f200 8082 	bhi.w	2ffdaa8e <stm32_fmc2_init+0x2fe>
2ffda98a:	f50e 431c 	add.w	r3, lr, #39936	; 0x9c00
2ffda98e:	3340      	adds	r3, #64	; 0x40
2ffda990:	1a5b      	subs	r3, r3, r1
2ffda992:	42bb      	cmp	r3, r7
2ffda994:	bf38      	it	cc
2ffda996:	463b      	movcc	r3, r7
2ffda998:	eb02 0903 	add.w	r9, r2, r3
2ffda99c:	f247 562f 	movw	r6, #29999	; 0x752f
2ffda9a0:	fbb9 f9f4 	udiv	r9, r9, r4
2ffda9a4:	f1b9 0f01 	cmp.w	r9, #1
2ffda9a8:	bf38      	it	cc
2ffda9aa:	f04f 0901 	movcc.w	r9, #1
2ffda9ae:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
2ffda9b2:	bf28      	it	cs
2ffda9b4:	f04f 09ff 	movcs.w	r9, #255	; 0xff
2ffda9b8:	42b3      	cmp	r3, r6
2ffda9ba:	d86a      	bhi.n	2ffdaa92 <stm32_fmc2_init+0x302>
2ffda9bc:	f5c3 4cea 	rsb	ip, r3, #29952	; 0x7500
2ffda9c0:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
2ffda9c4:	4584      	cmp	ip, r0
2ffda9c6:	bf38      	it	cc
2ffda9c8:	4684      	movcc	ip, r0
2ffda9ca:	f8df b0f4 	ldr.w	fp, [pc, #244]	; 2ffdaac0 <stm32_fmc2_init+0x330>
2ffda9ce:	18ce      	adds	r6, r1, r3
2ffda9d0:	455e      	cmp	r6, fp
2ffda9d2:	d805      	bhi.n	2ffda9e0 <stm32_fmc2_init+0x250>
2ffda9d4:	f5c6 36c3 	rsb	r6, r6, #99840	; 0x18600
2ffda9d8:	36a0      	adds	r6, #160	; 0xa0
2ffda9da:	45b4      	cmp	ip, r6
2ffda9dc:	bf38      	it	cc
2ffda9de:	46b4      	movcc	ip, r6
2ffda9e0:	eb02 060c 	add.w	r6, r2, ip
2ffda9e4:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 2ffdaac4 <stm32_fmc2_init+0x334>
2ffda9e8:	fbb6 f6f4 	udiv	r6, r6, r4
2ffda9ec:	2e01      	cmp	r6, #1
2ffda9ee:	bf38      	it	cc
2ffda9f0:	2601      	movcc	r6, #1
2ffda9f2:	2eff      	cmp	r6, #255	; 0xff
2ffda9f4:	bf28      	it	cs
2ffda9f6:	26ff      	movcs	r6, #255	; 0xff
2ffda9f8:	45dc      	cmp	ip, fp
2ffda9fa:	d806      	bhi.n	2ffdaa0a <stm32_fmc2_init+0x27a>
2ffda9fc:	f5cc 3c43 	rsb	ip, ip, #199680	; 0x30c00
2ffdaa00:	f50c 7ca0 	add.w	ip, ip, #320	; 0x140
2ffdaa04:	4567      	cmp	r7, ip
2ffdaa06:	bf38      	it	cc
2ffdaa08:	4667      	movcc	r7, ip
2ffdaa0a:	458e      	cmp	lr, r1
2ffdaa0c:	d20e      	bcs.n	2ffdaa2c <stm32_fmc2_init+0x29c>
2ffdaa0e:	eba1 0b0e 	sub.w	fp, r1, lr
2ffdaa12:	f649 4c3f 	movw	ip, #39999	; 0x9c3f
2ffdaa16:	45e3      	cmp	fp, ip
2ffdaa18:	d808      	bhi.n	2ffdaa2c <stm32_fmc2_init+0x29c>
2ffdaa1a:	f50e 4e1c 	add.w	lr, lr, #39936	; 0x9c00
2ffdaa1e:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
2ffdaa22:	ebae 0e01 	sub.w	lr, lr, r1
2ffdaa26:	4577      	cmp	r7, lr
2ffdaa28:	bf38      	it	cc
2ffdaa2a:	4677      	movcc	r7, lr
2ffdaa2c:	eb02 0c07 	add.w	ip, r2, r7
2ffdaa30:	f8df e094 	ldr.w	lr, [pc, #148]	; 2ffdaac8 <stm32_fmc2_init+0x338>
2ffdaa34:	fbbc fcf4 	udiv	ip, ip, r4
2ffdaa38:	f1bc 0f01 	cmp.w	ip, #1
2ffdaa3c:	bf38      	it	cc
2ffdaa3e:	f04f 0c01 	movcc.w	ip, #1
2ffdaa42:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
2ffdaa46:	bf28      	it	cs
2ffdaa48:	f04f 0cff 	movcs.w	ip, #255	; 0xff
2ffdaa4c:	4573      	cmp	r3, lr
2ffdaa4e:	d83f      	bhi.n	2ffdaad0 <stm32_fmc2_init+0x340>
2ffdaa50:	f5c3 3e4e 	rsb	lr, r3, #210944	; 0x33800
2ffdaa54:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
2ffdaa58:	4570      	cmp	r0, lr
2ffdaa5a:	bf38      	it	cc
2ffdaa5c:	4670      	movcc	r0, lr
2ffdaa5e:	f5c3 2ec3 	rsb	lr, r3, #399360	; 0x61800
2ffdaa62:	f50e 7e20 	add.w	lr, lr, #640	; 0x280
2ffdaa66:	4570      	cmp	r0, lr
2ffdaa68:	bf38      	it	cc
2ffdaa6a:	4670      	movcc	r0, lr
2ffdaa6c:	f247 5e2f 	movw	lr, #29999	; 0x752f
2ffdaa70:	4573      	cmp	r3, lr
2ffdaa72:	d969      	bls.n	2ffdab48 <stm32_fmc2_init+0x3b8>
2ffdaa74:	f8df e054 	ldr.w	lr, [pc, #84]	; 2ffdaacc <stm32_fmc2_init+0x33c>
2ffdaa78:	4573      	cmp	r3, lr
2ffdaa7a:	d82d      	bhi.n	2ffdaad8 <stm32_fmc2_init+0x348>
2ffdaa7c:	f5c3 33ea 	rsb	r3, r3, #119808	; 0x1d400
2ffdaa80:	33c0      	adds	r3, #192	; 0xc0
2ffdaa82:	4298      	cmp	r0, r3
2ffdaa84:	bf38      	it	cc
2ffdaa86:	4618      	movcc	r0, r3
2ffdaa88:	e026      	b.n	2ffdaad8 <stm32_fmc2_init+0x348>
2ffdaa8a:	4627      	mov	r7, r4
2ffdaa8c:	e773      	b.n	2ffda976 <stm32_fmc2_init+0x1e6>
2ffdaa8e:	463b      	mov	r3, r7
2ffdaa90:	e782      	b.n	2ffda998 <stm32_fmc2_init+0x208>
2ffdaa92:	4684      	mov	ip, r0
2ffdaa94:	e799      	b.n	2ffda9ca <stm32_fmc2_init+0x23a>
2ffdaa96:	bf00      	nop
2ffdaa98:	2ffe4800 	.word	0x2ffe4800
2ffdaa9c:	2ffe4812 	.word	0x2ffe4812
2ffdaaa0:	2ffe8ea4 	.word	0x2ffe8ea4
2ffdaaa4:	2ffe521b 	.word	0x2ffe521b
2ffdaaa8:	2ffe4827 	.word	0x2ffe4827
2ffdaaac:	2ffe484c 	.word	0x2ffe484c
2ffdaab0:	fcf0008f 	.word	0xfcf0008f
2ffdaab4:	0007fe06 	.word	0x0007fe06
2ffdaab8:	3b9aca00 	.word	0x3b9aca00
2ffdaabc:	0001116f 	.word	0x0001116f
2ffdaac0:	0001869f 	.word	0x0001869f
2ffdaac4:	00030d3f 	.word	0x00030d3f
2ffdaac8:	00033837 	.word	0x00033837
2ffdaacc:	0001d4bf 	.word	0x0001d4bf
2ffdaad0:	f8df e090 	ldr.w	lr, [pc, #144]	; 2ffdab64 <stm32_fmc2_init+0x3d4>
2ffdaad4:	4573      	cmp	r3, lr
2ffdaad6:	d9c2      	bls.n	2ffdaa5e <stm32_fmc2_init+0x2ce>
2ffdaad8:	4b1f      	ldr	r3, [pc, #124]	; (2ffdab58 <stm32_fmc2_init+0x3c8>)
2ffdaada:	4439      	add	r1, r7
2ffdaadc:	4299      	cmp	r1, r3
2ffdaade:	d805      	bhi.n	2ffdaaec <stm32_fmc2_init+0x35c>
2ffdaae0:	f5c1 31c3 	rsb	r1, r1, #99840	; 0x18600
2ffdaae4:	31a0      	adds	r1, #160	; 0xa0
2ffdaae6:	4288      	cmp	r0, r1
2ffdaae8:	bf38      	it	cc
2ffdaaea:	4608      	movcc	r0, r1
2ffdaaec:	4402      	add	r2, r0
2ffdaaee:	4b1b      	ldr	r3, [pc, #108]	; (2ffdab5c <stm32_fmc2_init+0x3cc>)
2ffdaaf0:	fbb2 f4f4 	udiv	r4, r2, r4
2ffdaaf4:	681b      	ldr	r3, [r3, #0]
2ffdaaf6:	2c01      	cmp	r4, #1
2ffdaaf8:	9f01      	ldr	r7, [sp, #4]
2ffdaafa:	bf38      	it	cc
2ffdaafc:	2401      	movcc	r4, #1
2ffdaafe:	f8d3 1080 	ldr.w	r1, [r3, #128]	; 0x80
2ffdab02:	2cff      	cmp	r4, #255	; 0xff
2ffdab04:	4816      	ldr	r0, [pc, #88]	; (2ffdab60 <stm32_fmc2_init+0x3d0>)
2ffdab06:	bf28      	it	cs
2ffdab08:	24ff      	movcs	r4, #255	; 0xff
2ffdab0a:	f421 51f0 	bic.w	r1, r1, #7680	; 0x1e00
2ffdab0e:	0436      	lsls	r6, r6, #16
2ffdab10:	0424      	lsls	r4, r4, #16
2ffdab12:	ea46 2608 	orr.w	r6, r6, r8, lsl #8
2ffdab16:	ea41 214a 	orr.w	r1, r1, sl, lsl #9
2ffdab1a:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
2ffdab1e:	ea46 0909 	orr.w	r9, r6, r9
2ffdab22:	ea44 040c 	orr.w	r4, r4, ip
2ffdab26:	f049 7680 	orr.w	r6, r9, #16777216	; 0x1000000
2ffdab2a:	f421 31f0 	bic.w	r1, r1, #122880	; 0x1e000
2ffdab2e:	f044 7480 	orr.w	r4, r4, #16777216	; 0x1000000
2ffdab32:	ea41 3147 	orr.w	r1, r1, r7, lsl #13
2ffdab36:	f8c3 1080 	str.w	r1, [r3, #128]	; 0x80
2ffdab3a:	f8c3 6088 	str.w	r6, [r3, #136]	; 0x88
2ffdab3e:	f8c3 408c 	str.w	r4, [r3, #140]	; 0x8c
2ffdab42:	f7ff fb1d 	bl	2ffda180 <nand_raw_ctrl_init>
2ffdab46:	e62e      	b.n	2ffda7a6 <stm32_fmc2_init+0x16>
2ffdab48:	f5c3 4eea 	rsb	lr, r3, #29952	; 0x7500
2ffdab4c:	f10e 0e30 	add.w	lr, lr, #48	; 0x30
2ffdab50:	4570      	cmp	r0, lr
2ffdab52:	bf38      	it	cc
2ffdab54:	4670      	movcc	r0, lr
2ffdab56:	e791      	b.n	2ffdaa7c <stm32_fmc2_init+0x2ec>
2ffdab58:	0001869f 	.word	0x0001869f
2ffdab5c:	2ffe8ea4 	.word	0x2ffe8ea4
2ffdab60:	2ffe4884 	.word	0x2ffe4884
2ffdab64:	00061a7f 	.word	0x00061a7f

2ffdab68 <spi_nand_reg>:
2ffdab68:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffdab6a:	b08d      	sub	sp, #52	; 0x34
2ffdab6c:	4607      	mov	r7, r0
2ffdab6e:	460c      	mov	r4, r1
2ffdab70:	4668      	mov	r0, sp
2ffdab72:	2130      	movs	r1, #48	; 0x30
2ffdab74:	461e      	mov	r6, r3
2ffdab76:	4615      	mov	r5, r2
2ffdab78:	f7fb ec72 	blx	2ffd6460 <zero_normalmem>
2ffdab7c:	950a      	str	r5, [sp, #40]	; 0x28
2ffdab7e:	2f00      	cmp	r7, #0
2ffdab80:	bf14      	ite	ne
2ffdab82:	230f      	movne	r3, #15
2ffdab84:	231f      	moveq	r3, #31
2ffdab86:	f88d 3001 	strb.w	r3, [sp, #1]
2ffdab8a:	b2e0      	uxtb	r0, r4
2ffdab8c:	2100      	movs	r1, #0
2ffdab8e:	2201      	movs	r2, #1
2ffdab90:	f88d 2000 	strb.w	r2, [sp]
2ffdab94:	f240 1301 	movw	r3, #257	; 0x101
2ffdab98:	e9cd 0104 	strd	r0, r1, [sp, #16]
2ffdab9c:	f8ad 3008 	strh.w	r3, [sp, #8]
2ffdaba0:	4668      	mov	r0, sp
2ffdaba2:	f88d 201c 	strb.w	r2, [sp, #28]
2ffdaba6:	e9cd 6208 	strd	r6, r2, [sp, #32]
2ffdabaa:	f000 fb29 	bl	2ffdb200 <spi_mem_exec_op>
2ffdabae:	b00d      	add	sp, #52	; 0x34
2ffdabb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

2ffdabb4 <spi_nand_load_page>:
2ffdabb4:	4b13      	ldr	r3, [pc, #76]	; (2ffdac04 <spi_nand_load_page+0x50>)
2ffdabb6:	2130      	movs	r1, #48	; 0x30
2ffdabb8:	b570      	push	{r4, r5, r6, lr}
2ffdabba:	b08c      	sub	sp, #48	; 0x30
2ffdabbc:	681a      	ldr	r2, [r3, #0]
2ffdabbe:	6854      	ldr	r4, [r2, #4]
2ffdabc0:	6813      	ldr	r3, [r2, #0]
2ffdabc2:	fbb0 f5f3 	udiv	r5, r0, r3
2ffdabc6:	fbb3 f3f4 	udiv	r3, r3, r4
2ffdabca:	fb05 0614 	mls	r6, r5, r4, r0
2ffdabce:	fa93 f4a3 	rbit	r4, r3
2ffdabd2:	4668      	mov	r0, sp
2ffdabd4:	fab4 f484 	clz	r4, r4
2ffdabd8:	f7fb ec42 	blx	2ffd6460 <zero_normalmem>
2ffdabdc:	3401      	adds	r4, #1
2ffdabde:	f241 3301 	movw	r3, #4865	; 0x1301
2ffdabe2:	f8ad 3000 	strh.w	r3, [sp]
2ffdabe6:	2300      	movs	r3, #0
2ffdabe8:	fa05 f404 	lsl.w	r4, r5, r4
2ffdabec:	4668      	mov	r0, sp
2ffdabee:	9305      	str	r3, [sp, #20]
2ffdabf0:	f240 1303 	movw	r3, #259	; 0x103
2ffdabf4:	4334      	orrs	r4, r6
2ffdabf6:	9404      	str	r4, [sp, #16]
2ffdabf8:	f8ad 3008 	strh.w	r3, [sp, #8]
2ffdabfc:	f000 fb00 	bl	2ffdb200 <spi_mem_exec_op>
2ffdac00:	b00c      	add	sp, #48	; 0x30
2ffdac02:	bd70      	pop	{r4, r5, r6, pc}
2ffdac04:	2ffe8958 	.word	0x2ffe8958

2ffdac08 <spi_nand_read_from_cache>:
2ffdac08:	b4f0      	push	{r4, r5, r6, r7}
2ffdac0a:	f04f 0c00 	mov.w	ip, #0
2ffdac0e:	4c10      	ldr	r4, [pc, #64]	; (2ffdac50 <spi_nand_read_from_cache+0x48>)
2ffdac10:	6827      	ldr	r7, [r4, #0]
2ffdac12:	e9d7 6500 	ldrd	r6, r5, [r7]
2ffdac16:	693f      	ldr	r7, [r7, #16]
2ffdac18:	61a1      	str	r1, [r4, #24]
2ffdac1a:	f8c4 c01c 	str.w	ip, [r4, #28]
2ffdac1e:	2f01      	cmp	r7, #1
2ffdac20:	d90f      	bls.n	2ffdac42 <spi_nand_read_from_cache+0x3a>
2ffdac22:	fbb6 f6f5 	udiv	r6, r6, r5
2ffdac26:	fbb0 f0f6 	udiv	r0, r0, r6
2ffdac2a:	07c0      	lsls	r0, r0, #31
2ffdac2c:	d509      	bpl.n	2ffdac42 <spi_nand_read_from_cache+0x3a>
2ffdac2e:	fa95 f5a5 	rbit	r5, r5
2ffdac32:	2001      	movs	r0, #1
2ffdac34:	fab5 f585 	clz	r5, r5
2ffdac38:	3501      	adds	r5, #1
2ffdac3a:	fa00 f505 	lsl.w	r5, r0, r5
2ffdac3e:	4329      	orrs	r1, r5
2ffdac40:	61a1      	str	r1, [r4, #24]
2ffdac42:	6322      	str	r2, [r4, #48]	; 0x30
2ffdac44:	62e3      	str	r3, [r4, #44]	; 0x2c
2ffdac46:	4803      	ldr	r0, [pc, #12]	; (2ffdac54 <spi_nand_read_from_cache+0x4c>)
2ffdac48:	bcf0      	pop	{r4, r5, r6, r7}
2ffdac4a:	f000 bad9 	b.w	2ffdb200 <spi_mem_exec_op>
2ffdac4e:	bf00      	nop
2ffdac50:	2ffe8958 	.word	0x2ffe8958
2ffdac54:	2ffe8960 	.word	0x2ffe8960

2ffdac58 <spi_nand_update_cfg>:
2ffdac58:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffdac5a:	4d0c      	ldr	r5, [pc, #48]	; (2ffdac8c <spi_nand_update_cfg+0x34>)
2ffdac5c:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
2ffdac60:	ea23 0000 	bic.w	r0, r3, r0
2ffdac64:	ea40 0401 	orr.w	r4, r0, r1
2ffdac68:	42a3      	cmp	r3, r4
2ffdac6a:	d00d      	beq.n	2ffdac88 <spi_nand_update_cfg+0x30>
2ffdac6c:	f88d 4007 	strb.w	r4, [sp, #7]
2ffdac70:	2301      	movs	r3, #1
2ffdac72:	f10d 0207 	add.w	r2, sp, #7
2ffdac76:	21b0      	movs	r1, #176	; 0xb0
2ffdac78:	2000      	movs	r0, #0
2ffdac7a:	f7ff ff75 	bl	2ffdab68 <spi_nand_reg>
2ffdac7e:	b908      	cbnz	r0, 2ffdac84 <spi_nand_update_cfg+0x2c>
2ffdac80:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
2ffdac84:	b003      	add	sp, #12
2ffdac86:	bd30      	pop	{r4, r5, pc}
2ffdac88:	2000      	movs	r0, #0
2ffdac8a:	e7fb      	b.n	2ffdac84 <spi_nand_update_cfg+0x2c>
2ffdac8c:	2ffe8958 	.word	0x2ffe8958

2ffdac90 <spi_nand_wait_ready>:
2ffdac90:	e92d 43d0 	stmdb	sp!, {r4, r6, r7, r8, r9, lr}
2ffdac94:	4604      	mov	r4, r0
2ffdac96:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdac9a:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffdac9e:	4910      	ldr	r1, [pc, #64]	; (2ffdace0 <spi_nand_wait_ready+0x50>)
2ffdaca0:	2300      	movs	r3, #0
2ffdaca2:	4a10      	ldr	r2, [pc, #64]	; (2ffdace4 <spi_nand_wait_ready+0x54>)
2ffdaca4:	fba0 0101 	umull	r0, r1, r0, r1
2ffdaca8:	f007 ecda 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdacac:	eb10 0608 	adds.w	r6, r0, r8
2ffdacb0:	eb41 0709 	adc.w	r7, r1, r9
2ffdacb4:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffdacb8:	429f      	cmp	r7, r3
2ffdacba:	bf08      	it	eq
2ffdacbc:	4296      	cmpeq	r6, r2
2ffdacbe:	d202      	bcs.n	2ffdacc6 <spi_nand_wait_ready+0x36>
2ffdacc0:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2ffdacc4:	e009      	b.n	2ffdacda <spi_nand_wait_ready+0x4a>
2ffdacc6:	2300      	movs	r3, #0
2ffdacc8:	4622      	mov	r2, r4
2ffdacca:	21c0      	movs	r1, #192	; 0xc0
2ffdaccc:	2001      	movs	r0, #1
2ffdacce:	f7ff ff4b 	bl	2ffdab68 <spi_nand_reg>
2ffdacd2:	b910      	cbnz	r0, 2ffdacda <spi_nand_wait_ready+0x4a>
2ffdacd4:	7823      	ldrb	r3, [r4, #0]
2ffdacd6:	07db      	lsls	r3, r3, #31
2ffdacd8:	d4ec      	bmi.n	2ffdacb4 <spi_nand_wait_ready+0x24>
2ffdacda:	e8bd 83d0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, pc}
2ffdacde:	bf00      	nop
2ffdace0:	00061a80 	.word	0x00061a80
2ffdace4:	000f4240 	.word	0x000f4240

2ffdace8 <spi_nand_mtd_read_page>:
2ffdace8:	4b11      	ldr	r3, [pc, #68]	; (2ffdad30 <spi_nand_mtd_read_page+0x48>)
2ffdacea:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffdacec:	460c      	mov	r4, r1
2ffdacee:	681b      	ldr	r3, [r3, #0]
2ffdacf0:	2110      	movs	r1, #16
2ffdacf2:	4608      	mov	r0, r1
2ffdacf4:	4615      	mov	r5, r2
2ffdacf6:	685e      	ldr	r6, [r3, #4]
2ffdacf8:	f7ff ffae 	bl	2ffdac58 <spi_nand_update_cfg>
2ffdacfc:	b9b0      	cbnz	r0, 2ffdad2c <spi_nand_mtd_read_page+0x44>
2ffdacfe:	4620      	mov	r0, r4
2ffdad00:	f7ff ff58 	bl	2ffdabb4 <spi_nand_load_page>
2ffdad04:	b990      	cbnz	r0, 2ffdad2c <spi_nand_mtd_read_page+0x44>
2ffdad06:	f10d 0007 	add.w	r0, sp, #7
2ffdad0a:	f7ff ffc1 	bl	2ffdac90 <spi_nand_wait_ready>
2ffdad0e:	b968      	cbnz	r0, 2ffdad2c <spi_nand_mtd_read_page+0x44>
2ffdad10:	4601      	mov	r1, r0
2ffdad12:	4633      	mov	r3, r6
2ffdad14:	462a      	mov	r2, r5
2ffdad16:	4620      	mov	r0, r4
2ffdad18:	f7ff ff76 	bl	2ffdac08 <spi_nand_read_from_cache>
2ffdad1c:	b930      	cbnz	r0, 2ffdad2c <spi_nand_mtd_read_page+0x44>
2ffdad1e:	f89d 3007 	ldrb.w	r3, [sp, #7]
2ffdad22:	f013 0f20 	tst.w	r3, #32
2ffdad26:	bf18      	it	ne
2ffdad28:	f06f 0058 	mvnne.w	r0, #88	; 0x58
2ffdad2c:	b002      	add	sp, #8
2ffdad2e:	bd70      	pop	{r4, r5, r6, pc}
2ffdad30:	2ffe8958 	.word	0x2ffe8958

2ffdad34 <spi_nand_mtd_block_is_bad>:
2ffdad34:	4b15      	ldr	r3, [pc, #84]	; (2ffdad8c <spi_nand_mtd_block_is_bad+0x58>)
2ffdad36:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffdad38:	4605      	mov	r5, r0
2ffdad3a:	681b      	ldr	r3, [r3, #0]
2ffdad3c:	2100      	movs	r1, #0
2ffdad3e:	2010      	movs	r0, #16
2ffdad40:	e9d3 4600 	ldrd	r4, r6, [r3]
2ffdad44:	f7ff ff88 	bl	2ffdac58 <spi_nand_update_cfg>
2ffdad48:	b9f0      	cbnz	r0, 2ffdad88 <spi_nand_mtd_block_is_bad+0x54>
2ffdad4a:	fbb4 f4f6 	udiv	r4, r4, r6
2ffdad4e:	436c      	muls	r4, r5
2ffdad50:	4620      	mov	r0, r4
2ffdad52:	f7ff ff2f 	bl	2ffdabb4 <spi_nand_load_page>
2ffdad56:	b9b8      	cbnz	r0, 2ffdad88 <spi_nand_mtd_block_is_bad+0x54>
2ffdad58:	f10d 0003 	add.w	r0, sp, #3
2ffdad5c:	f7ff ff98 	bl	2ffdac90 <spi_nand_wait_ready>
2ffdad60:	b990      	cbnz	r0, 2ffdad88 <spi_nand_mtd_block_is_bad+0x54>
2ffdad62:	2302      	movs	r3, #2
2ffdad64:	aa01      	add	r2, sp, #4
2ffdad66:	4631      	mov	r1, r6
2ffdad68:	4620      	mov	r0, r4
2ffdad6a:	f7ff ff4d 	bl	2ffdac08 <spi_nand_read_from_cache>
2ffdad6e:	b958      	cbnz	r0, 2ffdad88 <spi_nand_mtd_block_is_bad+0x54>
2ffdad70:	f89d 3004 	ldrb.w	r3, [sp, #4]
2ffdad74:	f89d 2005 	ldrb.w	r2, [sp, #5]
2ffdad78:	4013      	ands	r3, r2
2ffdad7a:	2bff      	cmp	r3, #255	; 0xff
2ffdad7c:	d004      	beq.n	2ffdad88 <spi_nand_mtd_block_is_bad+0x54>
2ffdad7e:	4804      	ldr	r0, [pc, #16]	; (2ffdad90 <spi_nand_mtd_block_is_bad+0x5c>)
2ffdad80:	4629      	mov	r1, r5
2ffdad82:	f001 feb3 	bl	2ffdcaec <tf_log>
2ffdad86:	2001      	movs	r0, #1
2ffdad88:	b002      	add	sp, #8
2ffdad8a:	bd70      	pop	{r4, r5, r6, pc}
2ffdad8c:	2ffe8958 	.word	0x2ffe8958
2ffdad90:	2ffe488c 	.word	0x2ffe488c

2ffdad94 <spi_nand_init>:
2ffdad94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffdad98:	b08e      	sub	sp, #56	; 0x38
2ffdad9a:	4d39      	ldr	r5, [pc, #228]	; (2ffdae80 <spi_nand_init+0xec>)
2ffdad9c:	4607      	mov	r7, r0
2ffdad9e:	4688      	mov	r8, r1
2ffdada0:	f000 fe12 	bl	2ffdb9c8 <get_nand_device>
2ffdada4:	6028      	str	r0, [r5, #0]
2ffdada6:	46a9      	mov	r9, r5
2ffdada8:	b928      	cbnz	r0, 2ffdadb6 <spi_nand_init+0x22>
2ffdadaa:	f06f 0415 	mvn.w	r4, #21
2ffdadae:	4620      	mov	r0, r4
2ffdadb0:	b00e      	add	sp, #56	; 0x38
2ffdadb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffdadb6:	4b33      	ldr	r3, [pc, #204]	; (2ffdae84 <spi_nand_init+0xf0>)
2ffdadb8:	2601      	movs	r6, #1
2ffdadba:	6106      	str	r6, [r0, #16]
2ffdadbc:	6283      	str	r3, [r0, #40]	; 0x28
2ffdadbe:	4b32      	ldr	r3, [pc, #200]	; (2ffdae88 <spi_nand_init+0xf4>)
2ffdadc0:	f885 6024 	strb.w	r6, [r5, #36]	; 0x24
2ffdadc4:	62c3      	str	r3, [r0, #44]	; 0x2c
2ffdadc6:	f240 3301 	movw	r3, #769	; 0x301
2ffdadca:	812b      	strh	r3, [r5, #8]
2ffdadcc:	f44f 7381 	mov.w	r3, #258	; 0x102
2ffdadd0:	822b      	strh	r3, [r5, #16]
2ffdadd2:	4628      	mov	r0, r5
2ffdadd4:	f240 1301 	movw	r3, #257	; 0x101
2ffdadd8:	842b      	strh	r3, [r5, #32]
2ffdadda:	f000 fe71 	bl	2ffdbac0 <plat_get_spi_nand_data>
2ffdadde:	2800      	cmp	r0, #0
2ffdade0:	d1e3      	bne.n	2ffdadaa <spi_nand_init+0x16>
2ffdade2:	2130      	movs	r1, #48	; 0x30
2ffdade4:	a802      	add	r0, sp, #8
2ffdade6:	f7fb eb3c 	blx	2ffd6460 <zero_normalmem>
2ffdadea:	f64f 7301 	movw	r3, #65281	; 0xff01
2ffdadee:	a802      	add	r0, sp, #8
2ffdadf0:	f8ad 3008 	strh.w	r3, [sp, #8]
2ffdadf4:	f000 fa04 	bl	2ffdb200 <spi_mem_exec_op>
2ffdadf8:	4604      	mov	r4, r0
2ffdadfa:	2800      	cmp	r0, #0
2ffdadfc:	d1d7      	bne.n	2ffdadae <spi_nand_init+0x1a>
2ffdadfe:	f10d 0a04 	add.w	sl, sp, #4
2ffdae02:	4650      	mov	r0, sl
2ffdae04:	f7ff ff44 	bl	2ffdac90 <spi_nand_wait_ready>
2ffdae08:	4604      	mov	r4, r0
2ffdae0a:	2800      	cmp	r0, #0
2ffdae0c:	d1cf      	bne.n	2ffdadae <spi_nand_init+0x1a>
2ffdae0e:	2130      	movs	r1, #48	; 0x30
2ffdae10:	a802      	add	r0, sp, #8
2ffdae12:	f7fb eb26 	blx	2ffd6460 <zero_normalmem>
2ffdae16:	940a      	str	r4, [sp, #40]	; 0x28
2ffdae18:	f649 7301 	movw	r3, #40705	; 0x9f01
2ffdae1c:	f8ad 3008 	strh.w	r3, [sp, #8]
2ffdae20:	a802      	add	r0, sp, #8
2ffdae22:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
2ffdae26:	2304      	movs	r3, #4
2ffdae28:	930b      	str	r3, [sp, #44]	; 0x2c
2ffdae2a:	f88d 6024 	strb.w	r6, [sp, #36]	; 0x24
2ffdae2e:	f000 f9e7 	bl	2ffdb200 <spi_mem_exec_op>
2ffdae32:	4604      	mov	r4, r0
2ffdae34:	2800      	cmp	r0, #0
2ffdae36:	d1ba      	bne.n	2ffdadae <spi_nand_init+0x1a>
2ffdae38:	4603      	mov	r3, r0
2ffdae3a:	f105 0238 	add.w	r2, r5, #56	; 0x38
2ffdae3e:	21b0      	movs	r1, #176	; 0xb0
2ffdae40:	4630      	mov	r0, r6
2ffdae42:	f7ff fe91 	bl	2ffdab68 <spi_nand_reg>
2ffdae46:	4604      	mov	r4, r0
2ffdae48:	2800      	cmp	r0, #0
2ffdae4a:	d1b0      	bne.n	2ffdadae <spi_nand_init+0x1a>
2ffdae4c:	f89d 3004 	ldrb.w	r3, [sp, #4]
2ffdae50:	2bc2      	cmp	r3, #194	; 0xc2
2ffdae52:	d009      	beq.n	2ffdae68 <spi_nand_init+0xd4>
2ffdae54:	f8d9 1000 	ldr.w	r1, [r9]
2ffdae58:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
2ffdae5c:	e9c7 2300 	strd	r2, r3, [r7]
2ffdae60:	680b      	ldr	r3, [r1, #0]
2ffdae62:	f8c8 3000 	str.w	r3, [r8]
2ffdae66:	e7a2      	b.n	2ffdadae <spi_nand_init+0x1a>
2ffdae68:	f895 1024 	ldrb.w	r1, [r5, #36]	; 0x24
2ffdae6c:	4630      	mov	r0, r6
2ffdae6e:	1f0b      	subs	r3, r1, #4
2ffdae70:	4259      	negs	r1, r3
2ffdae72:	4159      	adcs	r1, r3
2ffdae74:	f7ff fef0 	bl	2ffdac58 <spi_nand_update_cfg>
2ffdae78:	2800      	cmp	r0, #0
2ffdae7a:	d0eb      	beq.n	2ffdae54 <spi_nand_init+0xc0>
2ffdae7c:	4604      	mov	r4, r0
2ffdae7e:	e796      	b.n	2ffdadae <spi_nand_init+0x1a>
2ffdae80:	2ffe8958 	.word	0x2ffe8958
2ffdae84:	2ffdad35 	.word	0x2ffdad35
2ffdae88:	2ffdace9 	.word	0x2ffdace9

2ffdae8c <spi_nor_reg>:
2ffdae8c:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffdae8e:	b08d      	sub	sp, #52	; 0x34
2ffdae90:	4607      	mov	r7, r0
2ffdae92:	460c      	mov	r4, r1
2ffdae94:	4668      	mov	r0, sp
2ffdae96:	2130      	movs	r1, #48	; 0x30
2ffdae98:	4615      	mov	r5, r2
2ffdae9a:	461e      	mov	r6, r3
2ffdae9c:	f7fb eae0 	blx	2ffd6460 <zero_normalmem>
2ffdaea0:	f88d 7001 	strb.w	r7, [sp, #1]
2ffdaea4:	2301      	movs	r3, #1
2ffdaea6:	f88d 3000 	strb.w	r3, [sp]
2ffdaeaa:	4668      	mov	r0, sp
2ffdaeac:	f88d 301c 	strb.w	r3, [sp, #28]
2ffdaeb0:	e9cd 6508 	strd	r6, r5, [sp, #32]
2ffdaeb4:	940a      	str	r4, [sp, #40]	; 0x28
2ffdaeb6:	f000 f9a3 	bl	2ffdb200 <spi_mem_exec_op>
2ffdaeba:	b00d      	add	sp, #52	; 0x34
2ffdaebc:	bdf0      	pop	{r4, r5, r6, r7, pc}

2ffdaebe <spi_nor_write_en>:
2ffdaebe:	2200      	movs	r2, #0
2ffdaec0:	2301      	movs	r3, #1
2ffdaec2:	4611      	mov	r1, r2
2ffdaec4:	2006      	movs	r0, #6
2ffdaec6:	f7ff bfe1 	b.w	2ffdae8c <spi_nor_reg>

2ffdaeca <spi_nor_read_sr>:
2ffdaeca:	4601      	mov	r1, r0
2ffdaecc:	2300      	movs	r3, #0
2ffdaece:	2201      	movs	r2, #1
2ffdaed0:	2005      	movs	r0, #5
2ffdaed2:	f7ff bfdb 	b.w	2ffdae8c <spi_nor_reg>
	...

2ffdaed8 <spi_nor_clean_bar>:
2ffdaed8:	b510      	push	{r4, lr}
2ffdaeda:	4c0a      	ldr	r4, [pc, #40]	; (2ffdaf04 <spi_nor_clean_bar+0x2c>)
2ffdaedc:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
2ffdaee0:	b178      	cbz	r0, 2ffdaf02 <spi_nor_clean_bar+0x2a>
2ffdaee2:	2300      	movs	r3, #0
2ffdaee4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
2ffdaee8:	f7ff ffe9 	bl	2ffdaebe <spi_nor_write_en>
2ffdaeec:	b948      	cbnz	r0, 2ffdaf02 <spi_nor_clean_bar+0x2a>
2ffdaeee:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
2ffdaef2:	2301      	movs	r3, #1
2ffdaef4:	f104 0138 	add.w	r1, r4, #56	; 0x38
2ffdaef8:	461a      	mov	r2, r3
2ffdaefa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffdaefe:	f7ff bfc5 	b.w	2ffdae8c <spi_nor_reg>
2ffdaf02:	bd10      	pop	{r4, pc}
2ffdaf04:	2ffe8998 	.word	0x2ffe8998

2ffdaf08 <spi_nor_wait_ready>:
2ffdaf08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffdaf0a:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdaf0e:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffdaf12:	4a18      	ldr	r2, [pc, #96]	; (2ffdaf74 <spi_nor_wait_ready+0x6c>)
2ffdaf14:	f649 4140 	movw	r1, #40000	; 0x9c40
2ffdaf18:	2300      	movs	r3, #0
2ffdaf1a:	fba0 0101 	umull	r0, r1, r0, r1
2ffdaf1e:	f007 eba0 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdaf22:	1984      	adds	r4, r0, r6
2ffdaf24:	eb41 0507 	adc.w	r5, r1, r7
2ffdaf28:	4e13      	ldr	r6, [pc, #76]	; (2ffdaf78 <spi_nor_wait_ready+0x70>)
2ffdaf2a:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffdaf2e:	429d      	cmp	r5, r3
2ffdaf30:	bf08      	it	eq
2ffdaf32:	4294      	cmpeq	r4, r2
2ffdaf34:	d202      	bcs.n	2ffdaf3c <spi_nor_wait_ready+0x34>
2ffdaf36:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2ffdaf3a:	e019      	b.n	2ffdaf70 <spi_nor_wait_ready+0x68>
2ffdaf3c:	f10d 0006 	add.w	r0, sp, #6
2ffdaf40:	f7ff ffc3 	bl	2ffdaeca <spi_nor_read_sr>
2ffdaf44:	b990      	cbnz	r0, 2ffdaf6c <spi_nor_wait_ready+0x64>
2ffdaf46:	6b73      	ldr	r3, [r6, #52]	; 0x34
2ffdaf48:	07db      	lsls	r3, r3, #31
2ffdaf4a:	d50b      	bpl.n	2ffdaf64 <spi_nor_wait_ready+0x5c>
2ffdaf4c:	4603      	mov	r3, r0
2ffdaf4e:	2201      	movs	r2, #1
2ffdaf50:	f10d 0107 	add.w	r1, sp, #7
2ffdaf54:	2070      	movs	r0, #112	; 0x70
2ffdaf56:	f7ff ff99 	bl	2ffdae8c <spi_nor_reg>
2ffdaf5a:	b938      	cbnz	r0, 2ffdaf6c <spi_nor_wait_ready+0x64>
2ffdaf5c:	f99d 3007 	ldrsb.w	r3, [sp, #7]
2ffdaf60:	2b00      	cmp	r3, #0
2ffdaf62:	dae2      	bge.n	2ffdaf2a <spi_nor_wait_ready+0x22>
2ffdaf64:	f89d 0006 	ldrb.w	r0, [sp, #6]
2ffdaf68:	f000 0001 	and.w	r0, r0, #1
2ffdaf6c:	2800      	cmp	r0, #0
2ffdaf6e:	dcdc      	bgt.n	2ffdaf2a <spi_nor_wait_ready+0x22>
2ffdaf70:	b003      	add	sp, #12
2ffdaf72:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffdaf74:	000f4240 	.word	0x000f4240
2ffdaf78:	2ffe8998 	.word	0x2ffe8998

2ffdaf7c <spi_nor_read>:
2ffdaf7c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffdaf80:	461f      	mov	r7, r3
2ffdaf82:	4c2a      	ldr	r4, [pc, #168]	; (2ffdb02c <spi_nor_read+0xb0>)
2ffdaf84:	4616      	mov	r6, r2
2ffdaf86:	2300      	movs	r3, #0
2ffdaf88:	603b      	str	r3, [r7, #0]
2ffdaf8a:	46a0      	mov	r8, r4
2ffdaf8c:	e9c4 0304 	strd	r0, r3, [r4, #16]
2ffdaf90:	62a1      	str	r1, [r4, #40]	; 0x28
2ffdaf92:	6b63      	ldr	r3, [r4, #52]	; 0x34
2ffdaf94:	f003 0302 	and.w	r3, r3, #2
2ffdaf98:	b92e      	cbnz	r6, 2ffdafa6 <spi_nor_read+0x2a>
2ffdaf9a:	2b00      	cmp	r3, #0
2ffdaf9c:	d044      	beq.n	2ffdb028 <spi_nor_read+0xac>
2ffdaf9e:	f7ff ff9b 	bl	2ffdaed8 <spi_nor_clean_bar>
2ffdafa2:	4605      	mov	r5, r0
2ffdafa4:	e02a      	b.n	2ffdaffc <spi_nor_read+0x80>
2ffdafa6:	b36b      	cbz	r3, 2ffdb004 <spi_nor_read+0x88>
2ffdafa8:	7ce3      	ldrb	r3, [r4, #19]
2ffdafaa:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
2ffdafae:	f88d 3007 	strb.w	r3, [sp, #7]
2ffdafb2:	429a      	cmp	r2, r3
2ffdafb4:	d011      	beq.n	2ffdafda <spi_nor_read+0x5e>
2ffdafb6:	f7ff ff82 	bl	2ffdaebe <spi_nor_write_en>
2ffdafba:	4605      	mov	r5, r0
2ffdafbc:	b9f0      	cbnz	r0, 2ffdaffc <spi_nor_read+0x80>
2ffdafbe:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
2ffdafc2:	2301      	movs	r3, #1
2ffdafc4:	461a      	mov	r2, r3
2ffdafc6:	f10d 0107 	add.w	r1, sp, #7
2ffdafca:	f7ff ff5f 	bl	2ffdae8c <spi_nor_reg>
2ffdafce:	4605      	mov	r5, r0
2ffdafd0:	b9a0      	cbnz	r0, 2ffdaffc <spi_nor_read+0x80>
2ffdafd2:	f89d 3007 	ldrb.w	r3, [sp, #7]
2ffdafd6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
2ffdafda:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
2ffdafde:	1c5a      	adds	r2, r3, #1
2ffdafe0:	6923      	ldr	r3, [r4, #16]
2ffdafe2:	ebc3 6302 	rsb	r3, r3, r2, lsl #24
2ffdafe6:	42b3      	cmp	r3, r6
2ffdafe8:	bf94      	ite	ls
2ffdafea:	6263      	strls	r3, [r4, #36]	; 0x24
2ffdafec:	6266      	strhi	r6, [r4, #36]	; 0x24
2ffdafee:	4640      	mov	r0, r8
2ffdaff0:	f000 f906 	bl	2ffdb200 <spi_mem_exec_op>
2ffdaff4:	4605      	mov	r5, r0
2ffdaff6:	b138      	cbz	r0, 2ffdb008 <spi_nor_read+0x8c>
2ffdaff8:	f7ff ff6e 	bl	2ffdaed8 <spi_nor_clean_bar>
2ffdaffc:	4628      	mov	r0, r5
2ffdaffe:	b002      	add	sp, #8
2ffdb000:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffdb004:	6266      	str	r6, [r4, #36]	; 0x24
2ffdb006:	e7f2      	b.n	2ffdafee <spi_nor_read+0x72>
2ffdb008:	6a61      	ldr	r1, [r4, #36]	; 0x24
2ffdb00a:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
2ffdb00e:	1a76      	subs	r6, r6, r1
2ffdb010:	1852      	adds	r2, r2, r1
2ffdb012:	f143 0300 	adc.w	r3, r3, #0
2ffdb016:	e9c4 2304 	strd	r2, r3, [r4, #16]
2ffdb01a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2ffdb01c:	440b      	add	r3, r1
2ffdb01e:	62a3      	str	r3, [r4, #40]	; 0x28
2ffdb020:	683b      	ldr	r3, [r7, #0]
2ffdb022:	4419      	add	r1, r3
2ffdb024:	6039      	str	r1, [r7, #0]
2ffdb026:	e7b4      	b.n	2ffdaf92 <spi_nor_read+0x16>
2ffdb028:	4635      	mov	r5, r6
2ffdb02a:	e7e7      	b.n	2ffdaffc <spi_nor_read+0x80>
2ffdb02c:	2ffe8998 	.word	0x2ffe8998

2ffdb030 <spi_nor_init>:
2ffdb030:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffdb032:	f240 3301 	movw	r3, #769	; 0x301
2ffdb036:	4c5e      	ldr	r4, [pc, #376]	; (2ffdb1b0 <spi_nor_init+0x180>)
2ffdb038:	4606      	mov	r6, r0
2ffdb03a:	8023      	strh	r3, [r4, #0]
2ffdb03c:	f240 1303 	movw	r3, #259	; 0x103
2ffdb040:	8123      	strh	r3, [r4, #8]
2ffdb042:	2301      	movs	r3, #1
2ffdb044:	7723      	strb	r3, [r4, #28]
2ffdb046:	4620      	mov	r0, r4
2ffdb048:	2300      	movs	r3, #0
2ffdb04a:	4625      	mov	r5, r4
2ffdb04c:	6223      	str	r3, [r4, #32]
2ffdb04e:	f000 fd50 	bl	2ffdbaf2 <plat_get_nor_data>
2ffdb052:	2800      	cmp	r0, #0
2ffdb054:	d160      	bne.n	2ffdb118 <spi_nor_init+0xe8>
2ffdb056:	6b22      	ldr	r2, [r4, #48]	; 0x30
2ffdb058:	b922      	cbnz	r2, 2ffdb064 <spi_nor_init+0x34>
2ffdb05a:	4856      	ldr	r0, [pc, #344]	; (2ffdb1b4 <spi_nor_init+0x184>)
2ffdb05c:	f44f 71ab 	mov.w	r1, #342	; 0x156
2ffdb060:	f007 ff58 	bl	2ffe2f14 <__assert>
2ffdb064:	f1b2 7f80 	cmp.w	r2, #16777216	; 0x1000000
2ffdb068:	f10d 0103 	add.w	r1, sp, #3
2ffdb06c:	f04f 009f 	mov.w	r0, #159	; 0x9f
2ffdb070:	bf82      	ittt	hi
2ffdb072:	6b63      	ldrhi	r3, [r4, #52]	; 0x34
2ffdb074:	f043 0302 	orrhi.w	r3, r3, #2
2ffdb078:	6363      	strhi	r3, [r4, #52]	; 0x34
2ffdb07a:	2300      	movs	r3, #0
2ffdb07c:	e9c6 2300 	strd	r2, r3, [r6]
2ffdb080:	2201      	movs	r2, #1
2ffdb082:	f7ff ff03 	bl	2ffdae8c <spi_nor_reg>
2ffdb086:	4604      	mov	r4, r0
2ffdb088:	2800      	cmp	r0, #0
2ffdb08a:	d17a      	bne.n	2ffdb182 <spi_nor_init+0x152>
2ffdb08c:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2ffdb08e:	0798      	lsls	r0, r3, #30
2ffdb090:	d50e      	bpl.n	2ffdb0b0 <spi_nor_init+0x80>
2ffdb092:	f89d 3003 	ldrb.w	r3, [sp, #3]
2ffdb096:	2b01      	cmp	r3, #1
2ffdb098:	bf09      	itett	eq
2ffdb09a:	2316      	moveq	r3, #22
2ffdb09c:	23c8      	movne	r3, #200	; 0xc8
2ffdb09e:	f885 303a 	strbeq.w	r3, [r5, #58]	; 0x3a
2ffdb0a2:	2317      	moveq	r3, #23
2ffdb0a4:	bf1c      	itt	ne
2ffdb0a6:	f885 303a 	strbne.w	r3, [r5, #58]	; 0x3a
2ffdb0aa:	23c5      	movne	r3, #197	; 0xc5
2ffdb0ac:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
2ffdb0b0:	7f2b      	ldrb	r3, [r5, #28]
2ffdb0b2:	2b04      	cmp	r3, #4
2ffdb0b4:	d168      	bne.n	2ffdb188 <spi_nor_init+0x158>
2ffdb0b6:	f89d 3003 	ldrb.w	r3, [sp, #3]
2ffdb0ba:	2b2c      	cmp	r3, #44	; 0x2c
2ffdb0bc:	d064      	beq.n	2ffdb188 <spi_nor_init+0x158>
2ffdb0be:	2bc2      	cmp	r3, #194	; 0xc2
2ffdb0c0:	d12d      	bne.n	2ffdb11e <spi_nor_init+0xee>
2ffdb0c2:	483d      	ldr	r0, [pc, #244]	; (2ffdb1b8 <spi_nor_init+0x188>)
2ffdb0c4:	f001 fd12 	bl	2ffdcaec <tf_log>
2ffdb0c8:	a801      	add	r0, sp, #4
2ffdb0ca:	f7ff fefe 	bl	2ffdaeca <spi_nor_read_sr>
2ffdb0ce:	2800      	cmp	r0, #0
2ffdb0d0:	d156      	bne.n	2ffdb180 <spi_nor_init+0x150>
2ffdb0d2:	f89d 3004 	ldrb.w	r3, [sp, #4]
2ffdb0d6:	0659      	lsls	r1, r3, #25
2ffdb0d8:	d556      	bpl.n	2ffdb188 <spi_nor_init+0x158>
2ffdb0da:	f7ff fef0 	bl	2ffdaebe <spi_nor_write_en>
2ffdb0de:	2800      	cmp	r0, #0
2ffdb0e0:	d14e      	bne.n	2ffdb180 <spi_nor_init+0x150>
2ffdb0e2:	f89d 3004 	ldrb.w	r3, [sp, #4]
2ffdb0e6:	a901      	add	r1, sp, #4
2ffdb0e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
2ffdb0ec:	f88d 3004 	strb.w	r3, [sp, #4]
2ffdb0f0:	2301      	movs	r3, #1
2ffdb0f2:	461a      	mov	r2, r3
2ffdb0f4:	4618      	mov	r0, r3
2ffdb0f6:	f7ff fec9 	bl	2ffdae8c <spi_nor_reg>
2ffdb0fa:	2800      	cmp	r0, #0
2ffdb0fc:	d140      	bne.n	2ffdb180 <spi_nor_init+0x150>
2ffdb0fe:	f7ff ff03 	bl	2ffdaf08 <spi_nor_wait_ready>
2ffdb102:	2800      	cmp	r0, #0
2ffdb104:	d13c      	bne.n	2ffdb180 <spi_nor_init+0x150>
2ffdb106:	a801      	add	r0, sp, #4
2ffdb108:	f7ff fedf 	bl	2ffdaeca <spi_nor_read_sr>
2ffdb10c:	b920      	cbnz	r0, 2ffdb118 <spi_nor_init+0xe8>
2ffdb10e:	f89d 3004 	ldrb.w	r3, [sp, #4]
2ffdb112:	f013 0f40 	tst.w	r3, #64	; 0x40
2ffdb116:	d137      	bne.n	2ffdb188 <spi_nor_init+0x158>
2ffdb118:	f06f 0415 	mvn.w	r4, #21
2ffdb11c:	e031      	b.n	2ffdb182 <spi_nor_init+0x152>
2ffdb11e:	2300      	movs	r3, #0
2ffdb120:	2201      	movs	r2, #1
2ffdb122:	f10d 0105 	add.w	r1, sp, #5
2ffdb126:	2035      	movs	r0, #53	; 0x35
2ffdb128:	f7ff feb0 	bl	2ffdae8c <spi_nor_reg>
2ffdb12c:	bb40      	cbnz	r0, 2ffdb180 <spi_nor_init+0x150>
2ffdb12e:	f89d 3005 	ldrb.w	r3, [sp, #5]
2ffdb132:	079a      	lsls	r2, r3, #30
2ffdb134:	d428      	bmi.n	2ffdb188 <spi_nor_init+0x158>
2ffdb136:	f043 0302 	orr.w	r3, r3, #2
2ffdb13a:	a801      	add	r0, sp, #4
2ffdb13c:	f88d 3005 	strb.w	r3, [sp, #5]
2ffdb140:	f7ff fec3 	bl	2ffdaeca <spi_nor_read_sr>
2ffdb144:	b9e0      	cbnz	r0, 2ffdb180 <spi_nor_init+0x150>
2ffdb146:	f7ff feba 	bl	2ffdaebe <spi_nor_write_en>
2ffdb14a:	b9c8      	cbnz	r0, 2ffdb180 <spi_nor_init+0x150>
2ffdb14c:	2301      	movs	r3, #1
2ffdb14e:	2202      	movs	r2, #2
2ffdb150:	a901      	add	r1, sp, #4
2ffdb152:	4618      	mov	r0, r3
2ffdb154:	f7ff fe9a 	bl	2ffdae8c <spi_nor_reg>
2ffdb158:	b980      	cbnz	r0, 2ffdb17c <spi_nor_init+0x14c>
2ffdb15a:	f7ff fed5 	bl	2ffdaf08 <spi_nor_wait_ready>
2ffdb15e:	b978      	cbnz	r0, 2ffdb180 <spi_nor_init+0x150>
2ffdb160:	4603      	mov	r3, r0
2ffdb162:	2201      	movs	r2, #1
2ffdb164:	f10d 0105 	add.w	r1, sp, #5
2ffdb168:	2035      	movs	r0, #53	; 0x35
2ffdb16a:	f7ff fe8f 	bl	2ffdae8c <spi_nor_reg>
2ffdb16e:	2800      	cmp	r0, #0
2ffdb170:	d1d2      	bne.n	2ffdb118 <spi_nor_init+0xe8>
2ffdb172:	f89d 3005 	ldrb.w	r3, [sp, #5]
2ffdb176:	f013 0f02 	tst.w	r3, #2
2ffdb17a:	e7cc      	b.n	2ffdb116 <spi_nor_init+0xe6>
2ffdb17c:	f06f 0015 	mvn.w	r0, #21
2ffdb180:	4604      	mov	r4, r0
2ffdb182:	4620      	mov	r0, r4
2ffdb184:	b002      	add	sp, #8
2ffdb186:	bd70      	pop	{r4, r5, r6, pc}
2ffdb188:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2ffdb18a:	079b      	lsls	r3, r3, #30
2ffdb18c:	d5f9      	bpl.n	2ffdb182 <spi_nor_init+0x152>
2ffdb18e:	f895 003a 	ldrb.w	r0, [r5, #58]	; 0x3a
2ffdb192:	2300      	movs	r3, #0
2ffdb194:	f88d 3004 	strb.w	r3, [sp, #4]
2ffdb198:	2201      	movs	r2, #1
2ffdb19a:	a901      	add	r1, sp, #4
2ffdb19c:	f7ff fe76 	bl	2ffdae8c <spi_nor_reg>
2ffdb1a0:	4604      	mov	r4, r0
2ffdb1a2:	2800      	cmp	r0, #0
2ffdb1a4:	d1ed      	bne.n	2ffdb182 <spi_nor_init+0x152>
2ffdb1a6:	f89d 3004 	ldrb.w	r3, [sp, #4]
2ffdb1aa:	f885 3038 	strb.w	r3, [r5, #56]	; 0x38
2ffdb1ae:	e7e8      	b.n	2ffdb182 <spi_nor_init+0x152>
2ffdb1b0:	2ffe8998 	.word	0x2ffe8998
2ffdb1b4:	2ffe489e 	.word	0x2ffe489e
2ffdb1b8:	2ffe48b8 	.word	0x2ffe48b8

2ffdb1bc <fdt32_to_cpu>:
2ffdb1bc:	ba00      	rev	r0, r0
2ffdb1be:	4770      	bx	lr

2ffdb1c0 <spi_mem_check_buswidth_req>:
2ffdb1c0:	2802      	cmp	r0, #2
2ffdb1c2:	d005      	beq.n	2ffdb1d0 <spi_mem_check_buswidth_req+0x10>
2ffdb1c4:	2804      	cmp	r0, #4
2ffdb1c6:	d00f      	beq.n	2ffdb1e8 <spi_mem_check_buswidth_req+0x28>
2ffdb1c8:	1e43      	subs	r3, r0, #1
2ffdb1ca:	4258      	negs	r0, r3
2ffdb1cc:	4158      	adcs	r0, r3
2ffdb1ce:	4770      	bx	lr
2ffdb1d0:	4b0a      	ldr	r3, [pc, #40]	; (2ffdb1fc <spi_mem_check_buswidth_req+0x3c>)
2ffdb1d2:	689b      	ldr	r3, [r3, #8]
2ffdb1d4:	b129      	cbz	r1, 2ffdb1e2 <spi_mem_check_buswidth_req+0x22>
2ffdb1d6:	f013 0fc0 	tst.w	r3, #192	; 0xc0
2ffdb1da:	bf14      	ite	ne
2ffdb1dc:	2001      	movne	r0, #1
2ffdb1de:	2000      	moveq	r0, #0
2ffdb1e0:	4770      	bx	lr
2ffdb1e2:	f413 7f40 	tst.w	r3, #768	; 0x300
2ffdb1e6:	e7f8      	b.n	2ffdb1da <spi_mem_check_buswidth_req+0x1a>
2ffdb1e8:	4b04      	ldr	r3, [pc, #16]	; (2ffdb1fc <spi_mem_check_buswidth_req+0x3c>)
2ffdb1ea:	6898      	ldr	r0, [r3, #8]
2ffdb1ec:	b111      	cbz	r1, 2ffdb1f4 <spi_mem_check_buswidth_req+0x34>
2ffdb1ee:	f3c0 10c0 	ubfx	r0, r0, #7, #1
2ffdb1f2:	4770      	bx	lr
2ffdb1f4:	f3c0 2040 	ubfx	r0, r0, #9, #1
2ffdb1f8:	4770      	bx	lr
2ffdb1fa:	bf00      	nop
2ffdb1fc:	2ffe8ecc 	.word	0x2ffe8ecc

2ffdb200 <spi_mem_exec_op>:
2ffdb200:	4a1b      	ldr	r2, [pc, #108]	; (2ffdb270 <spi_mem_exec_op+0x70>)
2ffdb202:	2101      	movs	r1, #1
2ffdb204:	b570      	push	{r4, r5, r6, lr}
2ffdb206:	4604      	mov	r4, r0
2ffdb208:	7800      	ldrb	r0, [r0, #0]
2ffdb20a:	68d6      	ldr	r6, [r2, #12]
2ffdb20c:	f7ff ffd8 	bl	2ffdb1c0 <spi_mem_check_buswidth_req>
2ffdb210:	b1b8      	cbz	r0, 2ffdb242 <spi_mem_exec_op+0x42>
2ffdb212:	7a23      	ldrb	r3, [r4, #8]
2ffdb214:	b123      	cbz	r3, 2ffdb220 <spi_mem_exec_op+0x20>
2ffdb216:	7a60      	ldrb	r0, [r4, #9]
2ffdb218:	2101      	movs	r1, #1
2ffdb21a:	f7ff ffd1 	bl	2ffdb1c0 <spi_mem_check_buswidth_req>
2ffdb21e:	b180      	cbz	r0, 2ffdb242 <spi_mem_exec_op+0x42>
2ffdb220:	7e23      	ldrb	r3, [r4, #24]
2ffdb222:	b123      	cbz	r3, 2ffdb22e <spi_mem_exec_op+0x2e>
2ffdb224:	7e60      	ldrb	r0, [r4, #25]
2ffdb226:	2101      	movs	r1, #1
2ffdb228:	f7ff ffca 	bl	2ffdb1c0 <spi_mem_check_buswidth_req>
2ffdb22c:	b148      	cbz	r0, 2ffdb242 <spi_mem_exec_op+0x42>
2ffdb22e:	6a63      	ldr	r3, [r4, #36]	; 0x24
2ffdb230:	b173      	cbz	r3, 2ffdb250 <spi_mem_exec_op+0x50>
2ffdb232:	6a21      	ldr	r1, [r4, #32]
2ffdb234:	7f20      	ldrb	r0, [r4, #28]
2ffdb236:	1e4b      	subs	r3, r1, #1
2ffdb238:	4259      	negs	r1, r3
2ffdb23a:	4159      	adcs	r1, r3
2ffdb23c:	f7ff ffc0 	bl	2ffdb1c0 <spi_mem_check_buswidth_req>
2ffdb240:	b930      	cbnz	r0, 2ffdb250 <spi_mem_exec_op+0x50>
2ffdb242:	480c      	ldr	r0, [pc, #48]	; (2ffdb274 <spi_mem_exec_op+0x74>)
2ffdb244:	f06f 052c 	mvn.w	r5, #44	; 0x2c
2ffdb248:	f001 fc50 	bl	2ffdcaec <tf_log>
2ffdb24c:	4628      	mov	r0, r5
2ffdb24e:	bd70      	pop	{r4, r5, r6, pc}
2ffdb250:	6833      	ldr	r3, [r6, #0]
2ffdb252:	6850      	ldr	r0, [r2, #4]
2ffdb254:	4798      	blx	r3
2ffdb256:	4605      	mov	r5, r0
2ffdb258:	b118      	cbz	r0, 2ffdb262 <spi_mem_exec_op+0x62>
2ffdb25a:	4807      	ldr	r0, [pc, #28]	; (2ffdb278 <spi_mem_exec_op+0x78>)
2ffdb25c:	f001 fc46 	bl	2ffdcaec <tf_log>
2ffdb260:	e7f4      	b.n	2ffdb24c <spi_mem_exec_op+0x4c>
2ffdb262:	6933      	ldr	r3, [r6, #16]
2ffdb264:	4620      	mov	r0, r4
2ffdb266:	4798      	blx	r3
2ffdb268:	6873      	ldr	r3, [r6, #4]
2ffdb26a:	4605      	mov	r5, r0
2ffdb26c:	4798      	blx	r3
2ffdb26e:	e7ed      	b.n	2ffdb24c <spi_mem_exec_op+0x4c>
2ffdb270:	2ffe8ecc 	.word	0x2ffe8ecc
2ffdb274:	2ffe48d7 	.word	0x2ffe48d7
2ffdb278:	2ffe48f2 	.word	0x2ffe48f2

2ffdb27c <spi_mem_init_slave>:
2ffdb27c:	6853      	ldr	r3, [r2, #4]
2ffdb27e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffdb282:	4606      	mov	r6, r0
2ffdb284:	6814      	ldr	r4, [r2, #0]
2ffdb286:	460d      	mov	r5, r1
2ffdb288:	4617      	mov	r7, r2
2ffdb28a:	b1eb      	cbz	r3, 2ffdb2c8 <spi_mem_init_slave+0x4c>
2ffdb28c:	fab4 f484 	clz	r4, r4
2ffdb290:	0964      	lsrs	r4, r4, #5
2ffdb292:	693b      	ldr	r3, [r7, #16]
2ffdb294:	2b00      	cmp	r3, #0
2ffdb296:	68bb      	ldr	r3, [r7, #8]
2ffdb298:	bf08      	it	eq
2ffdb29a:	2401      	moveq	r4, #1
2ffdb29c:	2b00      	cmp	r3, #0
2ffdb29e:	68fb      	ldr	r3, [r7, #12]
2ffdb2a0:	bf08      	it	eq
2ffdb2a2:	2401      	moveq	r4, #1
2ffdb2a4:	b163      	cbz	r3, 2ffdb2c0 <spi_mem_init_slave+0x44>
2ffdb2a6:	b95c      	cbnz	r4, 2ffdb2c0 <spi_mem_init_slave+0x44>
2ffdb2a8:	4629      	mov	r1, r5
2ffdb2aa:	4630      	mov	r0, r6
2ffdb2ac:	f007 faf5 	bl	2ffe289a <fdt_first_subnode>
2ffdb2b0:	2800      	cmp	r0, #0
2ffdb2b2:	4601      	mov	r1, r0
2ffdb2b4:	da0a      	bge.n	2ffdb2cc <spi_mem_init_slave+0x50>
2ffdb2b6:	2c01      	cmp	r4, #1
2ffdb2b8:	d00d      	beq.n	2ffdb2d6 <spi_mem_init_slave+0x5a>
2ffdb2ba:	4857      	ldr	r0, [pc, #348]	; (2ffdb418 <spi_mem_init_slave+0x19c>)
2ffdb2bc:	f001 fc16 	bl	2ffdcaec <tf_log>
2ffdb2c0:	f06f 0015 	mvn.w	r0, #21
2ffdb2c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffdb2c8:	2401      	movs	r4, #1
2ffdb2ca:	e7e2      	b.n	2ffdb292 <spi_mem_init_slave+0x16>
2ffdb2cc:	4630      	mov	r0, r6
2ffdb2ce:	3401      	adds	r4, #1
2ffdb2d0:	f007 faf6 	bl	2ffe28c0 <fdt_next_subnode>
2ffdb2d4:	e7ec      	b.n	2ffdb2b0 <spi_mem_init_slave+0x34>
2ffdb2d6:	f8df 9178 	ldr.w	r9, [pc, #376]	; 2ffdb450 <spi_mem_init_slave+0x1d4>
2ffdb2da:	4629      	mov	r1, r5
2ffdb2dc:	f8df 813c 	ldr.w	r8, [pc, #316]	; 2ffdb41c <spi_mem_init_slave+0x1a0>
2ffdb2e0:	4630      	mov	r0, r6
2ffdb2e2:	2400      	movs	r4, #0
2ffdb2e4:	f007 fad9 	bl	2ffe289a <fdt_first_subnode>
2ffdb2e8:	4605      	mov	r5, r0
2ffdb2ea:	2d00      	cmp	r5, #0
2ffdb2ec:	da0b      	bge.n	2ffdb306 <spi_mem_init_slave+0x8a>
2ffdb2ee:	4c4b      	ldr	r4, [pc, #300]	; (2ffdb41c <spi_mem_init_slave+0x1a0>)
2ffdb2f0:	68e5      	ldr	r5, [r4, #12]
2ffdb2f2:	6820      	ldr	r0, [r4, #0]
2ffdb2f4:	68ab      	ldr	r3, [r5, #8]
2ffdb2f6:	4798      	blx	r3
2ffdb2f8:	2800      	cmp	r0, #0
2ffdb2fa:	d1e3      	bne.n	2ffdb2c4 <spi_mem_init_slave+0x48>
2ffdb2fc:	68eb      	ldr	r3, [r5, #12]
2ffdb2fe:	68a0      	ldr	r0, [r4, #8]
2ffdb300:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffdb304:	4718      	bx	r3
2ffdb306:	2300      	movs	r3, #0
2ffdb308:	464a      	mov	r2, r9
2ffdb30a:	4629      	mov	r1, r5
2ffdb30c:	4630      	mov	r0, r6
2ffdb30e:	f007 fc64 	bl	2ffe2bda <fdt_getprop>
2ffdb312:	b908      	cbnz	r0, 2ffdb318 <spi_mem_init_slave+0x9c>
2ffdb314:	4842      	ldr	r0, [pc, #264]	; (2ffdb420 <spi_mem_init_slave+0x1a4>)
2ffdb316:	e7d1      	b.n	2ffdb2bc <spi_mem_init_slave+0x40>
2ffdb318:	6800      	ldr	r0, [r0, #0]
2ffdb31a:	f7ff ff4f 	bl	2ffdb1bc <fdt32_to_cpu>
2ffdb31e:	4b41      	ldr	r3, [pc, #260]	; (2ffdb424 <spi_mem_init_slave+0x1a8>)
2ffdb320:	4629      	mov	r1, r5
2ffdb322:	f8c8 0004 	str.w	r0, [r8, #4]
2ffdb326:	4630      	mov	r0, r6
2ffdb328:	f8c8 3000 	str.w	r3, [r8]
2ffdb32c:	2300      	movs	r3, #0
2ffdb32e:	4a3e      	ldr	r2, [pc, #248]	; (2ffdb428 <spi_mem_init_slave+0x1ac>)
2ffdb330:	f007 fc53 	bl	2ffe2bda <fdt_getprop>
2ffdb334:	b120      	cbz	r0, 2ffdb340 <spi_mem_init_slave+0xc4>
2ffdb336:	6800      	ldr	r0, [r0, #0]
2ffdb338:	f7ff ff40 	bl	2ffdb1bc <fdt32_to_cpu>
2ffdb33c:	f8c8 0000 	str.w	r0, [r8]
2ffdb340:	4a3a      	ldr	r2, [pc, #232]	; (2ffdb42c <spi_mem_init_slave+0x1b0>)
2ffdb342:	2300      	movs	r3, #0
2ffdb344:	4629      	mov	r1, r5
2ffdb346:	4630      	mov	r0, r6
2ffdb348:	f007 fc47 	bl	2ffe2bda <fdt_getprop>
2ffdb34c:	b108      	cbz	r0, 2ffdb352 <spi_mem_init_slave+0xd6>
2ffdb34e:	f044 0402 	orr.w	r4, r4, #2
2ffdb352:	4a37      	ldr	r2, [pc, #220]	; (2ffdb430 <spi_mem_init_slave+0x1b4>)
2ffdb354:	2300      	movs	r3, #0
2ffdb356:	4629      	mov	r1, r5
2ffdb358:	4630      	mov	r0, r6
2ffdb35a:	f007 fc3e 	bl	2ffe2bda <fdt_getprop>
2ffdb35e:	b108      	cbz	r0, 2ffdb364 <spi_mem_init_slave+0xe8>
2ffdb360:	f044 0401 	orr.w	r4, r4, #1
2ffdb364:	4a33      	ldr	r2, [pc, #204]	; (2ffdb434 <spi_mem_init_slave+0x1b8>)
2ffdb366:	2300      	movs	r3, #0
2ffdb368:	4629      	mov	r1, r5
2ffdb36a:	4630      	mov	r0, r6
2ffdb36c:	f007 fc35 	bl	2ffe2bda <fdt_getprop>
2ffdb370:	b108      	cbz	r0, 2ffdb376 <spi_mem_init_slave+0xfa>
2ffdb372:	f044 0404 	orr.w	r4, r4, #4
2ffdb376:	4a30      	ldr	r2, [pc, #192]	; (2ffdb438 <spi_mem_init_slave+0x1bc>)
2ffdb378:	2300      	movs	r3, #0
2ffdb37a:	4629      	mov	r1, r5
2ffdb37c:	4630      	mov	r0, r6
2ffdb37e:	f007 fc2c 	bl	2ffe2bda <fdt_getprop>
2ffdb382:	b108      	cbz	r0, 2ffdb388 <spi_mem_init_slave+0x10c>
2ffdb384:	f044 0410 	orr.w	r4, r4, #16
2ffdb388:	4a2c      	ldr	r2, [pc, #176]	; (2ffdb43c <spi_mem_init_slave+0x1c0>)
2ffdb38a:	2300      	movs	r3, #0
2ffdb38c:	4629      	mov	r1, r5
2ffdb38e:	4630      	mov	r0, r6
2ffdb390:	f007 fc23 	bl	2ffe2bda <fdt_getprop>
2ffdb394:	b108      	cbz	r0, 2ffdb39a <spi_mem_init_slave+0x11e>
2ffdb396:	f044 0420 	orr.w	r4, r4, #32
2ffdb39a:	4a29      	ldr	r2, [pc, #164]	; (2ffdb440 <spi_mem_init_slave+0x1c4>)
2ffdb39c:	2300      	movs	r3, #0
2ffdb39e:	4629      	mov	r1, r5
2ffdb3a0:	4630      	mov	r0, r6
2ffdb3a2:	f007 fc1a 	bl	2ffe2bda <fdt_getprop>
2ffdb3a6:	b148      	cbz	r0, 2ffdb3bc <spi_mem_init_slave+0x140>
2ffdb3a8:	6800      	ldr	r0, [r0, #0]
2ffdb3aa:	f7ff ff07 	bl	2ffdb1bc <fdt32_to_cpu>
2ffdb3ae:	2802      	cmp	r0, #2
2ffdb3b0:	4601      	mov	r1, r0
2ffdb3b2:	d01e      	beq.n	2ffdb3f2 <spi_mem_init_slave+0x176>
2ffdb3b4:	2804      	cmp	r0, #4
2ffdb3b6:	d01f      	beq.n	2ffdb3f8 <spi_mem_init_slave+0x17c>
2ffdb3b8:	2801      	cmp	r0, #1
2ffdb3ba:	d120      	bne.n	2ffdb3fe <spi_mem_init_slave+0x182>
2ffdb3bc:	4a21      	ldr	r2, [pc, #132]	; (2ffdb444 <spi_mem_init_slave+0x1c8>)
2ffdb3be:	2300      	movs	r3, #0
2ffdb3c0:	4629      	mov	r1, r5
2ffdb3c2:	4630      	mov	r0, r6
2ffdb3c4:	f007 fc09 	bl	2ffe2bda <fdt_getprop>
2ffdb3c8:	b148      	cbz	r0, 2ffdb3de <spi_mem_init_slave+0x162>
2ffdb3ca:	6800      	ldr	r0, [r0, #0]
2ffdb3cc:	f7ff fef6 	bl	2ffdb1bc <fdt32_to_cpu>
2ffdb3d0:	2802      	cmp	r0, #2
2ffdb3d2:	4601      	mov	r1, r0
2ffdb3d4:	d017      	beq.n	2ffdb406 <spi_mem_init_slave+0x18a>
2ffdb3d6:	2804      	cmp	r0, #4
2ffdb3d8:	d018      	beq.n	2ffdb40c <spi_mem_init_slave+0x190>
2ffdb3da:	2801      	cmp	r0, #1
2ffdb3dc:	d119      	bne.n	2ffdb412 <spi_mem_init_slave+0x196>
2ffdb3de:	f8c8 4008 	str.w	r4, [r8, #8]
2ffdb3e2:	4629      	mov	r1, r5
2ffdb3e4:	f8c8 700c 	str.w	r7, [r8, #12]
2ffdb3e8:	4630      	mov	r0, r6
2ffdb3ea:	f007 fa69 	bl	2ffe28c0 <fdt_next_subnode>
2ffdb3ee:	4605      	mov	r5, r0
2ffdb3f0:	e77b      	b.n	2ffdb2ea <spi_mem_init_slave+0x6e>
2ffdb3f2:	f044 0440 	orr.w	r4, r4, #64	; 0x40
2ffdb3f6:	e7e1      	b.n	2ffdb3bc <spi_mem_init_slave+0x140>
2ffdb3f8:	f044 0480 	orr.w	r4, r4, #128	; 0x80
2ffdb3fc:	e7de      	b.n	2ffdb3bc <spi_mem_init_slave+0x140>
2ffdb3fe:	4812      	ldr	r0, [pc, #72]	; (2ffdb448 <spi_mem_init_slave+0x1cc>)
2ffdb400:	f001 fb74 	bl	2ffdcaec <tf_log>
2ffdb404:	e75c      	b.n	2ffdb2c0 <spi_mem_init_slave+0x44>
2ffdb406:	f444 7480 	orr.w	r4, r4, #256	; 0x100
2ffdb40a:	e7e8      	b.n	2ffdb3de <spi_mem_init_slave+0x162>
2ffdb40c:	f444 7400 	orr.w	r4, r4, #512	; 0x200
2ffdb410:	e7e5      	b.n	2ffdb3de <spi_mem_init_slave+0x162>
2ffdb412:	480e      	ldr	r0, [pc, #56]	; (2ffdb44c <spi_mem_init_slave+0x1d0>)
2ffdb414:	e7f4      	b.n	2ffdb400 <spi_mem_init_slave+0x184>
2ffdb416:	bf00      	nop
2ffdb418:	2ffe4904 	.word	0x2ffe4904
2ffdb41c:	2ffe8ecc 	.word	0x2ffe8ecc
2ffdb420:	2ffe4931 	.word	0x2ffe4931
2ffdb424:	000186a0 	.word	0x000186a0
2ffdb428:	2ffe4950 	.word	0x2ffe4950
2ffdb42c:	2ffe4962 	.word	0x2ffe4962
2ffdb430:	2ffe496b 	.word	0x2ffe496b
2ffdb434:	2ffe4974 	.word	0x2ffe4974
2ffdb438:	2ffe4980 	.word	0x2ffe4980
2ffdb43c:	2ffe498a 	.word	0x2ffe498a
2ffdb440:	2ffe499a 	.word	0x2ffe499a
2ffdb444:	2ffe49cf 	.word	0x2ffe49cf
2ffdb448:	2ffe49ab 	.word	0x2ffe49ab
2ffdb44c:	2ffe49e0 	.word	0x2ffe49e0
2ffdb450:	2ffe521b 	.word	0x2ffe521b

2ffdb454 <stm32_qspi_read_fifo>:
2ffdb454:	780b      	ldrb	r3, [r1, #0]
2ffdb456:	7003      	strb	r3, [r0, #0]
2ffdb458:	4770      	bx	lr

2ffdb45a <stm32_qspi_write_fifo>:
2ffdb45a:	7803      	ldrb	r3, [r0, #0]
2ffdb45c:	700b      	strb	r3, [r1, #0]
2ffdb45e:	4770      	bx	lr

2ffdb460 <stm32_qspi_claim_bus>:
2ffdb460:	2801      	cmp	r0, #1
2ffdb462:	d80b      	bhi.n	2ffdb47c <stm32_qspi_claim_bus+0x1c>
2ffdb464:	4b07      	ldr	r3, [pc, #28]	; (2ffdb484 <stm32_qspi_claim_bus+0x24>)
2ffdb466:	bf0c      	ite	eq
2ffdb468:	2181      	moveq	r1, #129	; 0x81
2ffdb46a:	2101      	movne	r1, #1
2ffdb46c:	2000      	movs	r0, #0
2ffdb46e:	681a      	ldr	r2, [r3, #0]
2ffdb470:	6813      	ldr	r3, [r2, #0]
2ffdb472:	f023 0380 	bic.w	r3, r3, #128	; 0x80
2ffdb476:	430b      	orrs	r3, r1
2ffdb478:	6013      	str	r3, [r2, #0]
2ffdb47a:	4770      	bx	lr
2ffdb47c:	f06f 0012 	mvn.w	r0, #18
2ffdb480:	4770      	bx	lr
2ffdb482:	bf00      	nop
2ffdb484:	2ffe8edc 	.word	0x2ffe8edc

2ffdb488 <stm32_qspi_release_bus>:
2ffdb488:	4b03      	ldr	r3, [pc, #12]	; (2ffdb498 <stm32_qspi_release_bus+0x10>)
2ffdb48a:	681a      	ldr	r2, [r3, #0]
2ffdb48c:	6813      	ldr	r3, [r2, #0]
2ffdb48e:	f023 0301 	bic.w	r3, r3, #1
2ffdb492:	6013      	str	r3, [r2, #0]
2ffdb494:	4770      	bx	lr
2ffdb496:	bf00      	nop
2ffdb498:	2ffe8edc 	.word	0x2ffe8edc

2ffdb49c <stm32_qspi_wait_for_not_busy>:
2ffdb49c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffdb49e:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdb4a2:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffdb4a6:	4a0f      	ldr	r2, [pc, #60]	; (2ffdb4e4 <stm32_qspi_wait_for_not_busy+0x48>)
2ffdb4a8:	2164      	movs	r1, #100	; 0x64
2ffdb4aa:	2300      	movs	r3, #0
2ffdb4ac:	fba0 0101 	umull	r0, r1, r0, r1
2ffdb4b0:	f007 e8d6 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdb4b4:	4b0c      	ldr	r3, [pc, #48]	; (2ffdb4e8 <stm32_qspi_wait_for_not_busy+0x4c>)
2ffdb4b6:	1984      	adds	r4, r0, r6
2ffdb4b8:	681b      	ldr	r3, [r3, #0]
2ffdb4ba:	eb41 0507 	adc.w	r5, r1, r7
2ffdb4be:	3308      	adds	r3, #8
2ffdb4c0:	6818      	ldr	r0, [r3, #0]
2ffdb4c2:	f010 0020 	ands.w	r0, r0, #32
2ffdb4c6:	d00b      	beq.n	2ffdb4e0 <stm32_qspi_wait_for_not_busy+0x44>
2ffdb4c8:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffdb4cc:	428d      	cmp	r5, r1
2ffdb4ce:	bf08      	it	eq
2ffdb4d0:	4284      	cmpeq	r4, r0
2ffdb4d2:	d2f5      	bcs.n	2ffdb4c0 <stm32_qspi_wait_for_not_busy+0x24>
2ffdb4d4:	4805      	ldr	r0, [pc, #20]	; (2ffdb4ec <stm32_qspi_wait_for_not_busy+0x50>)
2ffdb4d6:	4906      	ldr	r1, [pc, #24]	; (2ffdb4f0 <stm32_qspi_wait_for_not_busy+0x54>)
2ffdb4d8:	f001 fb08 	bl	2ffdcaec <tf_log>
2ffdb4dc:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2ffdb4e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffdb4e2:	bf00      	nop
2ffdb4e4:	000f4240 	.word	0x000f4240
2ffdb4e8:	2ffe8edc 	.word	0x2ffe8edc
2ffdb4ec:	2ffe3514 	.word	0x2ffe3514
2ffdb4f0:	2ffe4a81 	.word	0x2ffe4a81

2ffdb4f4 <stm32_qspi_set_mode>:
2ffdb4f4:	b510      	push	{r4, lr}
2ffdb4f6:	4604      	mov	r4, r0
2ffdb4f8:	f7ff ffd0 	bl	2ffdb49c <stm32_qspi_wait_for_not_busy>
2ffdb4fc:	b958      	cbnz	r0, 2ffdb516 <stm32_qspi_set_mode+0x22>
2ffdb4fe:	0763      	lsls	r3, r4, #29
2ffdb500:	d411      	bmi.n	2ffdb526 <stm32_qspi_set_mode+0x32>
2ffdb502:	f004 0403 	and.w	r4, r4, #3
2ffdb506:	2c03      	cmp	r4, #3
2ffdb508:	d106      	bne.n	2ffdb518 <stm32_qspi_set_mode+0x24>
2ffdb50a:	4b08      	ldr	r3, [pc, #32]	; (2ffdb52c <stm32_qspi_set_mode+0x38>)
2ffdb50c:	681a      	ldr	r2, [r3, #0]
2ffdb50e:	6853      	ldr	r3, [r2, #4]
2ffdb510:	f043 0301 	orr.w	r3, r3, #1
2ffdb514:	6053      	str	r3, [r2, #4]
2ffdb516:	bd10      	pop	{r4, pc}
2ffdb518:	b92c      	cbnz	r4, 2ffdb526 <stm32_qspi_set_mode+0x32>
2ffdb51a:	4b04      	ldr	r3, [pc, #16]	; (2ffdb52c <stm32_qspi_set_mode+0x38>)
2ffdb51c:	681a      	ldr	r2, [r3, #0]
2ffdb51e:	6853      	ldr	r3, [r2, #4]
2ffdb520:	f023 0301 	bic.w	r3, r3, #1
2ffdb524:	e7f6      	b.n	2ffdb514 <stm32_qspi_set_mode+0x20>
2ffdb526:	f06f 0012 	mvn.w	r0, #18
2ffdb52a:	e7f4      	b.n	2ffdb516 <stm32_qspi_set_mode+0x22>
2ffdb52c:	2ffe8edc 	.word	0x2ffe8edc

2ffdb530 <stm32_qspi_set_speed>:
2ffdb530:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffdb532:	4606      	mov	r6, r0
2ffdb534:	4f18      	ldr	r7, [pc, #96]	; (2ffdb598 <stm32_qspi_set_speed+0x68>)
2ffdb536:	68f8      	ldr	r0, [r7, #12]
2ffdb538:	f004 f8f5 	bl	2ffdf726 <stm32mp_clk_get_rate>
2ffdb53c:	4605      	mov	r5, r0
2ffdb53e:	b340      	cbz	r0, 2ffdb592 <stm32_qspi_set_speed+0x62>
2ffdb540:	b32e      	cbz	r6, 2ffdb58e <stm32_qspi_set_speed+0x5e>
2ffdb542:	1e74      	subs	r4, r6, #1
2ffdb544:	4404      	add	r4, r0
2ffdb546:	fbb4 f4f6 	udiv	r4, r4, r6
2ffdb54a:	3c01      	subs	r4, #1
2ffdb54c:	2cff      	cmp	r4, #255	; 0xff
2ffdb54e:	bf28      	it	cs
2ffdb550:	24ff      	movcs	r4, #255	; 0xff
2ffdb552:	f7ff ffa3 	bl	2ffdb49c <stm32_qspi_wait_for_not_busy>
2ffdb556:	b9c8      	cbnz	r0, 2ffdb58c <stm32_qspi_set_speed+0x5c>
2ffdb558:	683a      	ldr	r2, [r7, #0]
2ffdb55a:	eb05 0585 	add.w	r5, r5, r5, lsl #2
2ffdb55e:	6813      	ldr	r3, [r2, #0]
2ffdb560:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
2ffdb564:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
2ffdb568:	3401      	adds	r4, #1
2ffdb56a:	6013      	str	r3, [r2, #0]
2ffdb56c:	fbb5 f4f4 	udiv	r4, r5, r4
2ffdb570:	4b0a      	ldr	r3, [pc, #40]	; (2ffdb59c <stm32_qspi_set_speed+0x6c>)
2ffdb572:	6851      	ldr	r1, [r2, #4]
2ffdb574:	4423      	add	r3, r4
2ffdb576:	4c0a      	ldr	r4, [pc, #40]	; (2ffdb5a0 <stm32_qspi_set_speed+0x70>)
2ffdb578:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
2ffdb57c:	fbb3 f3f4 	udiv	r3, r3, r4
2ffdb580:	3b01      	subs	r3, #1
2ffdb582:	021b      	lsls	r3, r3, #8
2ffdb584:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
2ffdb588:	430b      	orrs	r3, r1
2ffdb58a:	6053      	str	r3, [r2, #4]
2ffdb58c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffdb58e:	24ff      	movs	r4, #255	; 0xff
2ffdb590:	e7df      	b.n	2ffdb552 <stm32_qspi_set_speed+0x22>
2ffdb592:	f06f 0015 	mvn.w	r0, #21
2ffdb596:	e7f9      	b.n	2ffdb58c <stm32_qspi_set_speed+0x5c>
2ffdb598:	2ffe8edc 	.word	0x2ffe8edc
2ffdb59c:	05f5e0ff 	.word	0x05f5e0ff
2ffdb5a0:	05f5e100 	.word	0x05f5e100

2ffdb5a4 <stm32_qspi_exec_op>:
2ffdb5a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffdb5a8:	b089      	sub	sp, #36	; 0x24
2ffdb5aa:	4604      	mov	r4, r0
2ffdb5ac:	f7ff ff76 	bl	2ffdb49c <stm32_qspi_wait_for_not_busy>
2ffdb5b0:	4605      	mov	r5, r0
2ffdb5b2:	2800      	cmp	r0, #0
2ffdb5b4:	d152      	bne.n	2ffdb65c <stm32_qspi_exec_op+0xb8>
2ffdb5b6:	e9d4 2308 	ldrd	r2, r3, [r4, #32]
2ffdb5ba:	6921      	ldr	r1, [r4, #16]
2ffdb5bc:	4e7e      	ldr	r6, [pc, #504]	; (2ffdb7b8 <stm32_qspi_exec_op+0x214>)
2ffdb5be:	b98a      	cbnz	r2, 2ffdb5e4 <stm32_qspi_exec_op+0x40>
2ffdb5c0:	2b00      	cmp	r3, #0
2ffdb5c2:	d052      	beq.n	2ffdb66a <stm32_qspi_exec_op+0xc6>
2ffdb5c4:	68b0      	ldr	r0, [r6, #8]
2ffdb5c6:	1c5a      	adds	r2, r3, #1
2ffdb5c8:	440a      	add	r2, r1
2ffdb5ca:	4282      	cmp	r2, r0
2ffdb5cc:	d24a      	bcs.n	2ffdb664 <stm32_qspi_exec_op+0xc0>
2ffdb5ce:	7a62      	ldrb	r2, [r4, #9]
2ffdb5d0:	2a00      	cmp	r2, #0
2ffdb5d2:	bf0c      	ite	eq
2ffdb5d4:	f04f 0c01 	moveq.w	ip, #1
2ffdb5d8:	f04f 0c03 	movne.w	ip, #3
2ffdb5dc:	6832      	ldr	r2, [r6, #0]
2ffdb5de:	3b01      	subs	r3, #1
2ffdb5e0:	6113      	str	r3, [r2, #16]
2ffdb5e2:	e002      	b.n	2ffdb5ea <stm32_qspi_exec_op+0x46>
2ffdb5e4:	4684      	mov	ip, r0
2ffdb5e6:	2b00      	cmp	r3, #0
2ffdb5e8:	d1f8      	bne.n	2ffdb5dc <stm32_qspi_exec_op+0x38>
2ffdb5ea:	7863      	ldrb	r3, [r4, #1]
2ffdb5ec:	ea43 628c 	orr.w	r2, r3, ip, lsl #26
2ffdb5f0:	7823      	ldrb	r3, [r4, #0]
2ffdb5f2:	2b04      	cmp	r3, #4
2ffdb5f4:	bf08      	it	eq
2ffdb5f6:	2303      	moveq	r3, #3
2ffdb5f8:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
2ffdb5fc:	7a22      	ldrb	r2, [r4, #8]
2ffdb5fe:	b142      	cbz	r2, 2ffdb612 <stm32_qspi_exec_op+0x6e>
2ffdb600:	3a01      	subs	r2, #1
2ffdb602:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
2ffdb606:	7a62      	ldrb	r2, [r4, #9]
2ffdb608:	2a04      	cmp	r2, #4
2ffdb60a:	bf08      	it	eq
2ffdb60c:	2203      	moveq	r2, #3
2ffdb60e:	ea43 2382 	orr.w	r3, r3, r2, lsl #10
2ffdb612:	7e60      	ldrb	r0, [r4, #25]
2ffdb614:	b130      	cbz	r0, 2ffdb624 <stm32_qspi_exec_op+0x80>
2ffdb616:	7e22      	ldrb	r2, [r4, #24]
2ffdb618:	b122      	cbz	r2, 2ffdb624 <stm32_qspi_exec_op+0x80>
2ffdb61a:	00d2      	lsls	r2, r2, #3
2ffdb61c:	fbb2 f2f0 	udiv	r2, r2, r0
2ffdb620:	ea43 4382 	orr.w	r3, r3, r2, lsl #18
2ffdb624:	6a62      	ldr	r2, [r4, #36]	; 0x24
2ffdb626:	b12a      	cbz	r2, 2ffdb634 <stm32_qspi_exec_op+0x90>
2ffdb628:	7f22      	ldrb	r2, [r4, #28]
2ffdb62a:	2a04      	cmp	r2, #4
2ffdb62c:	bf08      	it	eq
2ffdb62e:	2203      	moveq	r2, #3
2ffdb630:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffdb634:	6832      	ldr	r2, [r6, #0]
2ffdb636:	6153      	str	r3, [r2, #20]
2ffdb638:	7a23      	ldrb	r3, [r4, #8]
2ffdb63a:	b11b      	cbz	r3, 2ffdb644 <stm32_qspi_exec_op+0xa0>
2ffdb63c:	f1bc 0f03 	cmp.w	ip, #3
2ffdb640:	bf18      	it	ne
2ffdb642:	6191      	strne	r1, [r2, #24]
2ffdb644:	6a62      	ldr	r2, [r4, #36]	; 0x24
2ffdb646:	b992      	cbnz	r2, 2ffdb66e <stm32_qspi_exec_op+0xca>
2ffdb648:	f1bc 0f03 	cmp.w	ip, #3
2ffdb64c:	d017      	beq.n	2ffdb67e <stm32_qspi_exec_op+0xda>
2ffdb64e:	6a63      	ldr	r3, [r4, #36]	; 0x24
2ffdb650:	2b00      	cmp	r3, #0
2ffdb652:	d170      	bne.n	2ffdb736 <stm32_qspi_exec_op+0x192>
2ffdb654:	f7ff ff22 	bl	2ffdb49c <stm32_qspi_wait_for_not_busy>
2ffdb658:	4605      	mov	r5, r0
2ffdb65a:	b985      	cbnz	r5, 2ffdb67e <stm32_qspi_exec_op+0xda>
2ffdb65c:	4628      	mov	r0, r5
2ffdb65e:	b009      	add	sp, #36	; 0x24
2ffdb660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffdb664:	f04f 0c01 	mov.w	ip, #1
2ffdb668:	e7b8      	b.n	2ffdb5dc <stm32_qspi_exec_op+0x38>
2ffdb66a:	4684      	mov	ip, r0
2ffdb66c:	e7bd      	b.n	2ffdb5ea <stm32_qspi_exec_op+0x46>
2ffdb66e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
2ffdb670:	f1bc 0f03 	cmp.w	ip, #3
2ffdb674:	d124      	bne.n	2ffdb6c0 <stm32_qspi_exec_op+0x11c>
2ffdb676:	6873      	ldr	r3, [r6, #4]
2ffdb678:	4419      	add	r1, r3
2ffdb67a:	f007 fc73 	bl	2ffe2f64 <memcpy>
2ffdb67e:	6834      	ldr	r4, [r6, #0]
2ffdb680:	6823      	ldr	r3, [r4, #0]
2ffdb682:	f043 0302 	orr.w	r3, r3, #2
2ffdb686:	6023      	str	r3, [r4, #0]
2ffdb688:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdb68c:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffdb690:	4a4a      	ldr	r2, [pc, #296]	; (2ffdb7bc <stm32_qspi_exec_op+0x218>)
2ffdb692:	2164      	movs	r1, #100	; 0x64
2ffdb694:	2300      	movs	r3, #0
2ffdb696:	fba0 0101 	umull	r0, r1, r0, r1
2ffdb69a:	f006 efe2 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdb69e:	1983      	adds	r3, r0, r6
2ffdb6a0:	9304      	str	r3, [sp, #16]
2ffdb6a2:	eb41 0307 	adc.w	r3, r1, r7
2ffdb6a6:	9305      	str	r3, [sp, #20]
2ffdb6a8:	6823      	ldr	r3, [r4, #0]
2ffdb6aa:	079a      	lsls	r2, r3, #30
2ffdb6ac:	d477      	bmi.n	2ffdb79e <stm32_qspi_exec_op+0x1fa>
2ffdb6ae:	2302      	movs	r3, #2
2ffdb6b0:	60e3      	str	r3, [r4, #12]
2ffdb6b2:	2d00      	cmp	r5, #0
2ffdb6b4:	d0d2      	beq.n	2ffdb65c <stm32_qspi_exec_op+0xb8>
2ffdb6b6:	4942      	ldr	r1, [pc, #264]	; (2ffdb7c0 <stm32_qspi_exec_op+0x21c>)
2ffdb6b8:	4842      	ldr	r0, [pc, #264]	; (2ffdb7c4 <stm32_qspi_exec_op+0x220>)
2ffdb6ba:	f001 fa17 	bl	2ffdcaec <tf_log>
2ffdb6be:	e7cd      	b.n	2ffdb65c <stm32_qspi_exec_op+0xb8>
2ffdb6c0:	6a21      	ldr	r1, [r4, #32]
2ffdb6c2:	f04f 0b1e 	mov.w	fp, #30
2ffdb6c6:	4f40      	ldr	r7, [pc, #256]	; (2ffdb7c8 <stm32_qspi_exec_op+0x224>)
2ffdb6c8:	4b40      	ldr	r3, [pc, #256]	; (2ffdb7cc <stm32_qspi_exec_op+0x228>)
2ffdb6ca:	eb00 0a02 	add.w	sl, r0, r2
2ffdb6ce:	2900      	cmp	r1, #0
2ffdb6d0:	bf18      	it	ne
2ffdb6d2:	461f      	movne	r7, r3
2ffdb6d4:	9707      	str	r7, [sp, #28]
2ffdb6d6:	4607      	mov	r7, r0
2ffdb6d8:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdb6dc:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffdb6e0:	4a36      	ldr	r2, [pc, #216]	; (2ffdb7bc <stm32_qspi_exec_op+0x218>)
2ffdb6e2:	2300      	movs	r3, #0
2ffdb6e4:	fba0 010b 	umull	r0, r1, r0, fp
2ffdb6e8:	f006 efba 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdb6ec:	eb10 0308 	adds.w	r3, r0, r8
2ffdb6f0:	9300      	str	r3, [sp, #0]
2ffdb6f2:	eb41 0309 	adc.w	r3, r1, r9
2ffdb6f6:	6831      	ldr	r1, [r6, #0]
2ffdb6f8:	9301      	str	r3, [sp, #4]
2ffdb6fa:	f101 0008 	add.w	r0, r1, #8
2ffdb6fe:	6803      	ldr	r3, [r0, #0]
2ffdb700:	075b      	lsls	r3, r3, #29
2ffdb702:	d509      	bpl.n	2ffdb718 <stm32_qspi_exec_op+0x174>
2ffdb704:	9b07      	ldr	r3, [sp, #28]
2ffdb706:	f107 0801 	add.w	r8, r7, #1
2ffdb70a:	3120      	adds	r1, #32
2ffdb70c:	4638      	mov	r0, r7
2ffdb70e:	4798      	blx	r3
2ffdb710:	45d0      	cmp	r8, sl
2ffdb712:	d09c      	beq.n	2ffdb64e <stm32_qspi_exec_op+0xaa>
2ffdb714:	4647      	mov	r7, r8
2ffdb716:	e7df      	b.n	2ffdb6d8 <stm32_qspi_exec_op+0x134>
2ffdb718:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffdb71c:	e9dd 8900 	ldrd	r8, r9, [sp]
2ffdb720:	4599      	cmp	r9, r3
2ffdb722:	bf08      	it	eq
2ffdb724:	4590      	cmpeq	r8, r2
2ffdb726:	d2ea      	bcs.n	2ffdb6fe <stm32_qspi_exec_op+0x15a>
2ffdb728:	4929      	ldr	r1, [pc, #164]	; (2ffdb7d0 <stm32_qspi_exec_op+0x22c>)
2ffdb72a:	f06f 053b 	mvn.w	r5, #59	; 0x3b
2ffdb72e:	4829      	ldr	r0, [pc, #164]	; (2ffdb7d4 <stm32_qspi_exec_op+0x230>)
2ffdb730:	f001 f9dc 	bl	2ffdcaec <tf_log>
2ffdb734:	e7a3      	b.n	2ffdb67e <stm32_qspi_exec_op+0xda>
2ffdb736:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdb73a:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffdb73e:	4a1f      	ldr	r2, [pc, #124]	; (2ffdb7bc <stm32_qspi_exec_op+0x218>)
2ffdb740:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffdb744:	2300      	movs	r3, #0
2ffdb746:	fba0 0101 	umull	r0, r1, r0, r1
2ffdb74a:	f006 ef8a 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdb74e:	eb10 0308 	adds.w	r3, r0, r8
2ffdb752:	9302      	str	r3, [sp, #8]
2ffdb754:	eb41 0309 	adc.w	r3, r1, r9
2ffdb758:	9303      	str	r3, [sp, #12]
2ffdb75a:	6833      	ldr	r3, [r6, #0]
2ffdb75c:	f103 0408 	add.w	r4, r3, #8
2ffdb760:	6822      	ldr	r2, [r4, #0]
2ffdb762:	0791      	lsls	r1, r2, #30
2ffdb764:	d50c      	bpl.n	2ffdb780 <stm32_qspi_exec_op+0x1dc>
2ffdb766:	689b      	ldr	r3, [r3, #8]
2ffdb768:	07db      	lsls	r3, r3, #31
2ffdb76a:	d505      	bpl.n	2ffdb778 <stm32_qspi_exec_op+0x1d4>
2ffdb76c:	491a      	ldr	r1, [pc, #104]	; (2ffdb7d8 <stm32_qspi_exec_op+0x234>)
2ffdb76e:	f06f 0504 	mvn.w	r5, #4
2ffdb772:	481a      	ldr	r0, [pc, #104]	; (2ffdb7dc <stm32_qspi_exec_op+0x238>)
2ffdb774:	f001 f9ba 	bl	2ffdcaec <tf_log>
2ffdb778:	6833      	ldr	r3, [r6, #0]
2ffdb77a:	2203      	movs	r2, #3
2ffdb77c:	60da      	str	r2, [r3, #12]
2ffdb77e:	e76c      	b.n	2ffdb65a <stm32_qspi_exec_op+0xb6>
2ffdb780:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffdb784:	e9dd 7802 	ldrd	r7, r8, [sp, #8]
2ffdb788:	4588      	cmp	r8, r1
2ffdb78a:	bf08      	it	eq
2ffdb78c:	4287      	cmpeq	r7, r0
2ffdb78e:	d2e7      	bcs.n	2ffdb760 <stm32_qspi_exec_op+0x1bc>
2ffdb790:	4911      	ldr	r1, [pc, #68]	; (2ffdb7d8 <stm32_qspi_exec_op+0x234>)
2ffdb792:	f06f 053b 	mvn.w	r5, #59	; 0x3b
2ffdb796:	4812      	ldr	r0, [pc, #72]	; (2ffdb7e0 <stm32_qspi_exec_op+0x23c>)
2ffdb798:	f001 f9a8 	bl	2ffdcaec <tf_log>
2ffdb79c:	e7ec      	b.n	2ffdb778 <stm32_qspi_exec_op+0x1d4>
2ffdb79e:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffdb7a2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
2ffdb7a6:	4299      	cmp	r1, r3
2ffdb7a8:	bf08      	it	eq
2ffdb7aa:	4290      	cmpeq	r0, r2
2ffdb7ac:	f4bf af7c 	bcs.w	2ffdb6a8 <stm32_qspi_exec_op+0x104>
2ffdb7b0:	f06f 053b 	mvn.w	r5, #59	; 0x3b
2ffdb7b4:	e77b      	b.n	2ffdb6ae <stm32_qspi_exec_op+0x10a>
2ffdb7b6:	bf00      	nop
2ffdb7b8:	2ffe8edc 	.word	0x2ffe8edc
2ffdb7bc:	000f4240 	.word	0x000f4240
2ffdb7c0:	2ffe4ac2 	.word	0x2ffe4ac2
2ffdb7c4:	2ffe4a2c 	.word	0x2ffe4a2c
2ffdb7c8:	2ffdb455 	.word	0x2ffdb455
2ffdb7cc:	2ffdb45b 	.word	0x2ffdb45b
2ffdb7d0:	2ffe4ab2 	.word	0x2ffe4ab2
2ffdb7d4:	2ffe4a04 	.word	0x2ffe4a04
2ffdb7d8:	2ffe4a9e 	.word	0x2ffe4a9e
2ffdb7dc:	2ffe4a17 	.word	0x2ffe4a17
2ffdb7e0:	2ffe4a40 	.word	0x2ffe4a40

2ffdb7e4 <stm32_qspi_init>:
2ffdb7e4:	b530      	push	{r4, r5, lr}
2ffdb7e6:	b087      	sub	sp, #28
2ffdb7e8:	2300      	movs	r3, #0
2ffdb7ea:	a801      	add	r0, sp, #4
2ffdb7ec:	9301      	str	r3, [sp, #4]
2ffdb7ee:	f006 fb65 	bl	2ffe1ebc <fdt_get_address>
2ffdb7f2:	b918      	cbnz	r0, 2ffdb7fc <stm32_qspi_init+0x18>
2ffdb7f4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffdb7f8:	b007      	add	sp, #28
2ffdb7fa:	bd30      	pop	{r4, r5, pc}
2ffdb7fc:	4a26      	ldr	r2, [pc, #152]	; (2ffdb898 <stm32_qspi_init+0xb4>)
2ffdb7fe:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffdb802:	a802      	add	r0, sp, #8
2ffdb804:	f006 fc80 	bl	2ffe2108 <dt_get_node>
2ffdb808:	1e05      	subs	r5, r0, #0
2ffdb80a:	da03      	bge.n	2ffdb814 <stm32_qspi_init+0x30>
2ffdb80c:	4823      	ldr	r0, [pc, #140]	; (2ffdb89c <stm32_qspi_init+0xb8>)
2ffdb80e:	f001 f96d 	bl	2ffdcaec <tf_log>
2ffdb812:	e7ef      	b.n	2ffdb7f4 <stm32_qspi_init+0x10>
2ffdb814:	9b05      	ldr	r3, [sp, #20]
2ffdb816:	2b00      	cmp	r3, #0
2ffdb818:	d0ec      	beq.n	2ffdb7f4 <stm32_qspi_init+0x10>
2ffdb81a:	4c21      	ldr	r4, [pc, #132]	; (2ffdb8a0 <stm32_qspi_init+0xbc>)
2ffdb81c:	466b      	mov	r3, sp
2ffdb81e:	4921      	ldr	r1, [pc, #132]	; (2ffdb8a4 <stm32_qspi_init+0xc0>)
2ffdb820:	4622      	mov	r2, r4
2ffdb822:	f006 fbd5 	bl	2ffe1fd0 <fdt_get_reg_props_by_name>
2ffdb826:	2800      	cmp	r0, #0
2ffdb828:	d1e6      	bne.n	2ffdb7f8 <stm32_qspi_init+0x14>
2ffdb82a:	491f      	ldr	r1, [pc, #124]	; (2ffdb8a8 <stm32_qspi_init+0xc4>)
2ffdb82c:	f104 0308 	add.w	r3, r4, #8
2ffdb830:	1d22      	adds	r2, r4, #4
2ffdb832:	4628      	mov	r0, r5
2ffdb834:	f006 fbcc 	bl	2ffe1fd0 <fdt_get_reg_props_by_name>
2ffdb838:	2800      	cmp	r0, #0
2ffdb83a:	d1dd      	bne.n	2ffdb7f8 <stm32_qspi_init+0x14>
2ffdb83c:	4628      	mov	r0, r5
2ffdb83e:	f004 fde5 	bl	2ffe040c <dt_set_pinctrl_config>
2ffdb842:	bb30      	cbnz	r0, 2ffdb892 <stm32_qspi_init+0xae>
2ffdb844:	9803      	ldr	r0, [sp, #12]
2ffdb846:	2800      	cmp	r0, #0
2ffdb848:	db23      	blt.n	2ffdb892 <stm32_qspi_init+0xae>
2ffdb84a:	9b04      	ldr	r3, [sp, #16]
2ffdb84c:	2b00      	cmp	r3, #0
2ffdb84e:	db20      	blt.n	2ffdb892 <stm32_qspi_init+0xae>
2ffdb850:	60e0      	str	r0, [r4, #12]
2ffdb852:	6123      	str	r3, [r4, #16]
2ffdb854:	f003 ff5e 	bl	2ffdf714 <stm32mp_clk_enable>
2ffdb858:	6920      	ldr	r0, [r4, #16]
2ffdb85a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffdb85e:	f006 f9f5 	bl	2ffe1c4c <stm32mp_reset_assert_to>
2ffdb862:	b118      	cbz	r0, 2ffdb86c <stm32_qspi_init+0x88>
2ffdb864:	f001 f9e0 	bl	2ffdcc28 <console_flush>
2ffdb868:	f7fa ecfa 	blx	2ffd6260 <do_panic>
2ffdb86c:	6920      	ldr	r0, [r4, #16]
2ffdb86e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffdb872:	f006 fa23 	bl	2ffe1cbc <stm32mp_reset_deassert_to>
2ffdb876:	2800      	cmp	r0, #0
2ffdb878:	d1f4      	bne.n	2ffdb864 <stm32_qspi_init+0x80>
2ffdb87a:	6823      	ldr	r3, [r4, #0]
2ffdb87c:	2210      	movs	r2, #16
2ffdb87e:	9801      	ldr	r0, [sp, #4]
2ffdb880:	4629      	mov	r1, r5
2ffdb882:	601a      	str	r2, [r3, #0]
2ffdb884:	f44f 12f8 	mov.w	r2, #2031616	; 0x1f0000
2ffdb888:	605a      	str	r2, [r3, #4]
2ffdb88a:	4a08      	ldr	r2, [pc, #32]	; (2ffdb8ac <stm32_qspi_init+0xc8>)
2ffdb88c:	f7ff fcf6 	bl	2ffdb27c <spi_mem_init_slave>
2ffdb890:	e7b2      	b.n	2ffdb7f8 <stm32_qspi_init+0x14>
2ffdb892:	f06f 000e 	mvn.w	r0, #14
2ffdb896:	e7af      	b.n	2ffdb7f8 <stm32_qspi_init+0x14>
2ffdb898:	2ffe4a52 	.word	0x2ffe4a52
2ffdb89c:	2ffe4a64 	.word	0x2ffe4a64
2ffdb8a0:	2ffe8edc 	.word	0x2ffe8edc
2ffdb8a4:	2ffe4a5f 	.word	0x2ffe4a5f
2ffdb8a8:	2ffe4a79 	.word	0x2ffe4a79
2ffdb8ac:	2ffe4ad8 	.word	0x2ffe4ad8

2ffdb8b0 <nand_read>:
2ffdb8b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffdb8b4:	469b      	mov	fp, r3
2ffdb8b6:	4c42      	ldr	r4, [pc, #264]	; (2ffdb9c0 <nand_read+0x110>)
2ffdb8b8:	1e57      	subs	r7, r2, #1
2ffdb8ba:	4407      	add	r7, r0
2ffdb8bc:	4615      	mov	r5, r2
2ffdb8be:	6823      	ldr	r3, [r4, #0]
2ffdb8c0:	b085      	sub	sp, #20
2ffdb8c2:	6862      	ldr	r2, [r4, #4]
2ffdb8c4:	468a      	mov	sl, r1
2ffdb8c6:	fbb0 f8f3 	udiv	r8, r0, r3
2ffdb8ca:	fbb7 f7f3 	udiv	r7, r7, r3
2ffdb8ce:	fb03 0918 	mls	r9, r3, r8, r0
2ffdb8d2:	fbb3 f3f2 	udiv	r3, r3, r2
2ffdb8d6:	9301      	str	r3, [sp, #4]
2ffdb8d8:	fbb0 f3f2 	udiv	r3, r0, r2
2ffdb8dc:	fb02 0013 	mls	r0, r2, r3, r0
2ffdb8e0:	2300      	movs	r3, #0
2ffdb8e2:	fbb9 f9f2 	udiv	r9, r9, r2
2ffdb8e6:	f8cb 3000 	str.w	r3, [fp]
2ffdb8ea:	b978      	cbnz	r0, 2ffdb90c <nand_read+0x5c>
2ffdb8ec:	6863      	ldr	r3, [r4, #4]
2ffdb8ee:	fbb5 f6f3 	udiv	r6, r5, r3
2ffdb8f2:	fb03 5616 	mls	r6, r3, r6, r5
2ffdb8f6:	b94e      	cbnz	r6, 2ffdb90c <nand_read+0x5c>
2ffdb8f8:	9b01      	ldr	r3, [sp, #4]
2ffdb8fa:	fb03 f308 	mul.w	r3, r3, r8
2ffdb8fe:	45b8      	cmp	r8, r7
2ffdb900:	9302      	str	r3, [sp, #8]
2ffdb902:	d909      	bls.n	2ffdb918 <nand_read+0x68>
2ffdb904:	2000      	movs	r0, #0
2ffdb906:	b005      	add	sp, #20
2ffdb908:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffdb90c:	6863      	ldr	r3, [r4, #4]
2ffdb90e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
2ffdb912:	d852      	bhi.n	2ffdb9ba <nand_read+0x10a>
2ffdb914:	4606      	mov	r6, r0
2ffdb916:	e7ef      	b.n	2ffdb8f8 <nand_read+0x48>
2ffdb918:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2ffdb91a:	4640      	mov	r0, r8
2ffdb91c:	4798      	blx	r3
2ffdb91e:	2800      	cmp	r0, #0
2ffdb920:	dbf1      	blt.n	2ffdb906 <nand_read+0x56>
2ffdb922:	2801      	cmp	r0, #1
2ffdb924:	d135      	bne.n	2ffdb992 <nand_read+0xe2>
2ffdb926:	6822      	ldr	r2, [r4, #0]
2ffdb928:	2300      	movs	r3, #0
2ffdb92a:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
2ffdb92e:	3701      	adds	r7, #1
2ffdb930:	f006 ee96 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdb934:	f108 0301 	add.w	r3, r8, #1
2ffdb938:	4298      	cmp	r0, r3
2ffdb93a:	d901      	bls.n	2ffdb940 <nand_read+0x90>
2ffdb93c:	42b8      	cmp	r0, r7
2ffdb93e:	d82d      	bhi.n	2ffdb99c <nand_read+0xec>
2ffdb940:	f06f 0004 	mvn.w	r0, #4
2ffdb944:	e7df      	b.n	2ffdb906 <nand_read+0x56>
2ffdb946:	9a02      	ldr	r2, [sp, #8]
2ffdb948:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2ffdb94a:	eb09 0102 	add.w	r1, r9, r2
2ffdb94e:	b916      	cbnz	r6, 2ffdb956 <nand_read+0xa6>
2ffdb950:	6862      	ldr	r2, [r4, #4]
2ffdb952:	42aa      	cmp	r2, r5
2ffdb954:	d928      	bls.n	2ffdb9a8 <nand_read+0xf8>
2ffdb956:	4a1b      	ldr	r2, [pc, #108]	; (2ffdb9c4 <nand_read+0x114>)
2ffdb958:	4819      	ldr	r0, [pc, #100]	; (2ffdb9c0 <nand_read+0x110>)
2ffdb95a:	4798      	blx	r3
2ffdb95c:	2800      	cmp	r0, #0
2ffdb95e:	d1d2      	bne.n	2ffdb906 <nand_read+0x56>
2ffdb960:	4b17      	ldr	r3, [pc, #92]	; (2ffdb9c0 <nand_read+0x110>)
2ffdb962:	4650      	mov	r0, sl
2ffdb964:	685a      	ldr	r2, [r3, #4]
2ffdb966:	4b17      	ldr	r3, [pc, #92]	; (2ffdb9c4 <nand_read+0x114>)
2ffdb968:	1b92      	subs	r2, r2, r6
2ffdb96a:	42aa      	cmp	r2, r5
2ffdb96c:	eb03 0106 	add.w	r1, r3, r6
2ffdb970:	bf28      	it	cs
2ffdb972:	462a      	movcs	r2, r5
2ffdb974:	9203      	str	r2, [sp, #12]
2ffdb976:	f007 faf5 	bl	2ffe2f64 <memcpy>
2ffdb97a:	9a03      	ldr	r2, [sp, #12]
2ffdb97c:	f8db 3000 	ldr.w	r3, [fp]
2ffdb980:	1aad      	subs	r5, r5, r2
2ffdb982:	4413      	add	r3, r2
2ffdb984:	4492      	add	sl, r2
2ffdb986:	f8cb 3000 	str.w	r3, [fp]
2ffdb98a:	d014      	beq.n	2ffdb9b6 <nand_read+0x106>
2ffdb98c:	f109 0901 	add.w	r9, r9, #1
2ffdb990:	2600      	movs	r6, #0
2ffdb992:	9b01      	ldr	r3, [sp, #4]
2ffdb994:	4599      	cmp	r9, r3
2ffdb996:	d3d6      	bcc.n	2ffdb946 <nand_read+0x96>
2ffdb998:	f04f 0900 	mov.w	r9, #0
2ffdb99c:	9b02      	ldr	r3, [sp, #8]
2ffdb99e:	f108 0801 	add.w	r8, r8, #1
2ffdb9a2:	9a01      	ldr	r2, [sp, #4]
2ffdb9a4:	4413      	add	r3, r2
2ffdb9a6:	e7aa      	b.n	2ffdb8fe <nand_read+0x4e>
2ffdb9a8:	4805      	ldr	r0, [pc, #20]	; (2ffdb9c0 <nand_read+0x110>)
2ffdb9aa:	4652      	mov	r2, sl
2ffdb9ac:	4798      	blx	r3
2ffdb9ae:	2800      	cmp	r0, #0
2ffdb9b0:	d1a9      	bne.n	2ffdb906 <nand_read+0x56>
2ffdb9b2:	6862      	ldr	r2, [r4, #4]
2ffdb9b4:	e7e2      	b.n	2ffdb97c <nand_read+0xcc>
2ffdb9b6:	462e      	mov	r6, r5
2ffdb9b8:	e7ee      	b.n	2ffdb998 <nand_read+0xe8>
2ffdb9ba:	f06f 0015 	mvn.w	r0, #21
2ffdb9be:	e7a2      	b.n	2ffdb906 <nand_read+0x56>
2ffdb9c0:	2ffe89d8 	.word	0x2ffe89d8
2ffdb9c4:	2ffe9328 	.word	0x2ffe9328

2ffdb9c8 <get_nand_device>:
2ffdb9c8:	4800      	ldr	r0, [pc, #0]	; (2ffdb9cc <get_nand_device+0x4>)
2ffdb9ca:	4770      	bx	lr
2ffdb9cc:	2ffe89d8 	.word	0x2ffe89d8

2ffdb9d0 <get_data_from_otp>:
2ffdb9d0:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffdb9d2:	4604      	mov	r4, r0
2ffdb9d4:	4831      	ldr	r0, [pc, #196]	; (2ffdba9c <get_data_from_otp+0xcc>)
2ffdb9d6:	460d      	mov	r5, r1
2ffdb9d8:	a901      	add	r1, sp, #4
2ffdb9da:	f001 fb89 	bl	2ffdd0f0 <stm32_get_otp_value>
2ffdb9de:	b130      	cbz	r0, 2ffdb9ee <get_data_from_otp+0x1e>
2ffdb9e0:	482f      	ldr	r0, [pc, #188]	; (2ffdbaa0 <get_data_from_otp+0xd0>)
2ffdb9e2:	f001 f883 	bl	2ffdcaec <tf_log>
2ffdb9e6:	f06f 000c 	mvn.w	r0, #12
2ffdb9ea:	b003      	add	sp, #12
2ffdb9ec:	bd30      	pop	{r4, r5, pc}
2ffdb9ee:	9b01      	ldr	r3, [sp, #4]
2ffdb9f0:	2b00      	cmp	r3, #0
2ffdb9f2:	d0fa      	beq.n	2ffdb9ea <get_data_from_otp+0x1a>
2ffdb9f4:	da1e      	bge.n	2ffdba34 <get_data_from_otp+0x64>
2ffdb9f6:	f3c3 4280 	ubfx	r2, r3, #18, #1
2ffdb9fa:	6162      	str	r2, [r4, #20]
2ffdb9fc:	f3c3 7241 	ubfx	r2, r3, #29, #2
2ffdba00:	2a01      	cmp	r2, #1
2ffdba02:	d021      	beq.n	2ffdba48 <get_data_from_otp+0x78>
2ffdba04:	2a02      	cmp	r2, #2
2ffdba06:	d022      	beq.n	2ffdba4e <get_data_from_otp+0x7e>
2ffdba08:	bb22      	cbnz	r2, 2ffdba54 <get_data_from_otp+0x84>
2ffdba0a:	f44f 6200 	mov.w	r2, #2048	; 0x800
2ffdba0e:	6062      	str	r2, [r4, #4]
2ffdba10:	f3c3 62c1 	ubfx	r2, r3, #27, #2
2ffdba14:	2a01      	cmp	r2, #1
2ffdba16:	d023      	beq.n	2ffdba60 <get_data_from_otp+0x90>
2ffdba18:	2a02      	cmp	r2, #2
2ffdba1a:	d024      	beq.n	2ffdba66 <get_data_from_otp+0x96>
2ffdba1c:	bb32      	cbnz	r2, 2ffdba6c <get_data_from_otp+0x9c>
2ffdba1e:	6862      	ldr	r2, [r4, #4]
2ffdba20:	0192      	lsls	r2, r2, #6
2ffdba22:	6022      	str	r2, [r4, #0]
2ffdba24:	6822      	ldr	r2, [r4, #0]
2ffdba26:	f3c3 41c7 	ubfx	r1, r3, #19, #8
2ffdba2a:	434a      	muls	r2, r1
2ffdba2c:	0212      	lsls	r2, r2, #8
2ffdba2e:	60a2      	str	r2, [r4, #8]
2ffdba30:	2200      	movs	r2, #0
2ffdba32:	60e2      	str	r2, [r4, #12]
2ffdba34:	b35d      	cbz	r5, 2ffdba8e <get_data_from_otp+0xbe>
2ffdba36:	f3c3 33c2 	ubfx	r3, r3, #15, #3
2ffdba3a:	3b01      	subs	r3, #1
2ffdba3c:	2b03      	cmp	r3, #3
2ffdba3e:	d821      	bhi.n	2ffdba84 <get_data_from_otp+0xb4>
2ffdba40:	e8df f003 	tbb	[pc, r3]
2ffdba44:	1d1b1916 	.word	0x1d1b1916
2ffdba48:	f44f 5280 	mov.w	r2, #4096	; 0x1000
2ffdba4c:	e7df      	b.n	2ffdba0e <get_data_from_otp+0x3e>
2ffdba4e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
2ffdba52:	e7dc      	b.n	2ffdba0e <get_data_from_otp+0x3e>
2ffdba54:	4813      	ldr	r0, [pc, #76]	; (2ffdbaa4 <get_data_from_otp+0xd4>)
2ffdba56:	f001 f849 	bl	2ffdcaec <tf_log>
2ffdba5a:	f06f 0015 	mvn.w	r0, #21
2ffdba5e:	e7c4      	b.n	2ffdb9ea <get_data_from_otp+0x1a>
2ffdba60:	6862      	ldr	r2, [r4, #4]
2ffdba62:	01d2      	lsls	r2, r2, #7
2ffdba64:	e7dd      	b.n	2ffdba22 <get_data_from_otp+0x52>
2ffdba66:	6862      	ldr	r2, [r4, #4]
2ffdba68:	0212      	lsls	r2, r2, #8
2ffdba6a:	e7da      	b.n	2ffdba22 <get_data_from_otp+0x52>
2ffdba6c:	480e      	ldr	r0, [pc, #56]	; (2ffdbaa8 <get_data_from_otp+0xd8>)
2ffdba6e:	e7f2      	b.n	2ffdba56 <get_data_from_otp+0x86>
2ffdba70:	2301      	movs	r3, #1
2ffdba72:	6263      	str	r3, [r4, #36]	; 0x24
2ffdba74:	e7b9      	b.n	2ffdb9ea <get_data_from_otp+0x1a>
2ffdba76:	2304      	movs	r3, #4
2ffdba78:	e7fb      	b.n	2ffdba72 <get_data_from_otp+0xa2>
2ffdba7a:	2308      	movs	r3, #8
2ffdba7c:	e7f9      	b.n	2ffdba72 <get_data_from_otp+0xa2>
2ffdba7e:	2302      	movs	r3, #2
2ffdba80:	61a3      	str	r3, [r4, #24]
2ffdba82:	e7b2      	b.n	2ffdb9ea <get_data_from_otp+0x1a>
2ffdba84:	6a63      	ldr	r3, [r4, #36]	; 0x24
2ffdba86:	2b00      	cmp	r3, #0
2ffdba88:	d1af      	bne.n	2ffdb9ea <get_data_from_otp+0x1a>
2ffdba8a:	4808      	ldr	r0, [pc, #32]	; (2ffdbaac <get_data_from_otp+0xdc>)
2ffdba8c:	e7e3      	b.n	2ffdba56 <get_data_from_otp+0x86>
2ffdba8e:	045b      	lsls	r3, r3, #17
2ffdba90:	bf4c      	ite	mi
2ffdba92:	2302      	movmi	r3, #2
2ffdba94:	2301      	movpl	r3, #1
2ffdba96:	6123      	str	r3, [r4, #16]
2ffdba98:	e7a7      	b.n	2ffdb9ea <get_data_from_otp+0x1a>
2ffdba9a:	bf00      	nop
2ffdba9c:	2ffe4aec 	.word	0x2ffe4aec
2ffdbaa0:	2ffe4af5 	.word	0x2ffe4af5
2ffdbaa4:	2ffe4b0c 	.word	0x2ffe4b0c
2ffdbaa8:	2ffe4b29 	.word	0x2ffe4b29
2ffdbaac:	2ffe4b47 	.word	0x2ffe4b47

2ffdbab0 <plat_get_raw_nand_data>:
2ffdbab0:	6800      	ldr	r0, [r0, #0]
2ffdbab2:	2101      	movs	r1, #1
2ffdbab4:	f44f 7300 	mov.w	r3, #512	; 0x200
2ffdbab8:	e9c0 1306 	strd	r1, r3, [r0, #24]
2ffdbabc:	f7ff bf88 	b.w	2ffdb9d0 <get_data_from_otp>

2ffdbac0 <plat_get_spi_nand_data>:
2ffdbac0:	b510      	push	{r4, lr}
2ffdbac2:	2130      	movs	r1, #48	; 0x30
2ffdbac4:	4604      	mov	r4, r0
2ffdbac6:	3008      	adds	r0, #8
2ffdbac8:	f7fa ecca 	blx	2ffd6460 <zero_normalmem>
2ffdbacc:	6820      	ldr	r0, [r4, #0]
2ffdbace:	f646 3301 	movw	r3, #27393	; 0x6b01
2ffdbad2:	8123      	strh	r3, [r4, #8]
2ffdbad4:	f44f 7381 	mov.w	r3, #258	; 0x102
2ffdbad8:	8223      	strh	r3, [r4, #16]
2ffdbada:	f240 1301 	movw	r3, #257	; 0x101
2ffdbade:	8423      	strh	r3, [r4, #32]
2ffdbae0:	2100      	movs	r1, #0
2ffdbae2:	62a1      	str	r1, [r4, #40]	; 0x28
2ffdbae4:	2304      	movs	r3, #4
2ffdbae6:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
2ffdbaea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffdbaee:	f7ff bf6f 	b.w	2ffdb9d0 <get_data_from_otp>

2ffdbaf2 <plat_get_nor_data>:
2ffdbaf2:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
2ffdbaf6:	2130      	movs	r1, #48	; 0x30
2ffdbaf8:	b510      	push	{r4, lr}
2ffdbafa:	4604      	mov	r4, r0
2ffdbafc:	6303      	str	r3, [r0, #48]	; 0x30
2ffdbafe:	f7fa ecb0 	blx	2ffd6460 <zero_normalmem>
2ffdbb02:	f646 3301 	movw	r3, #27393	; 0x6b01
2ffdbb06:	2000      	movs	r0, #0
2ffdbb08:	8023      	strh	r3, [r4, #0]
2ffdbb0a:	f240 1303 	movw	r3, #259	; 0x103
2ffdbb0e:	8123      	strh	r3, [r4, #8]
2ffdbb10:	f240 1301 	movw	r3, #257	; 0x101
2ffdbb14:	8323      	strh	r3, [r4, #24]
2ffdbb16:	2304      	movs	r3, #4
2ffdbb18:	7723      	strb	r3, [r4, #28]
2ffdbb1a:	6220      	str	r0, [r4, #32]
2ffdbb1c:	bd10      	pop	{r4, pc}
	...

2ffdbb20 <set_reg>:
2ffdbb20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffdbb22:	4b12      	ldr	r3, [pc, #72]	; (2ffdbb6c <set_reg+0x4c>)
2ffdbb24:	010c      	lsls	r4, r1, #4
2ffdbb26:	eb03 1101 	add.w	r1, r3, r1, lsl #4
2ffdbb2a:	4423      	add	r3, r4
2ffdbb2c:	68c9      	ldr	r1, [r1, #12]
2ffdbb2e:	7a1d      	ldrb	r5, [r3, #8]
2ffdbb30:	685b      	ldr	r3, [r3, #4]
2ffdbb32:	2901      	cmp	r1, #1
2ffdbb34:	f04f 0100 	mov.w	r1, #0
2ffdbb38:	bf0c      	ite	eq
2ffdbb3a:	6940      	ldreq	r0, [r0, #20]
2ffdbb3c:	6900      	ldrne	r0, [r0, #16]
2ffdbb3e:	42a9      	cmp	r1, r5
2ffdbb40:	d300      	bcc.n	2ffdbb44 <set_reg+0x24>
2ffdbb42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffdbb44:	889e      	ldrh	r6, [r3, #4]
2ffdbb46:	461f      	mov	r7, r3
2ffdbb48:	3308      	adds	r3, #8
2ffdbb4a:	f813 4c02 	ldrb.w	r4, [r3, #-2]
2ffdbb4e:	2cff      	cmp	r4, #255	; 0xff
2ffdbb50:	d107      	bne.n	2ffdbb62 <set_reg+0x42>
2ffdbb52:	6839      	ldr	r1, [r7, #0]
2ffdbb54:	4806      	ldr	r0, [pc, #24]	; (2ffdbb70 <set_reg+0x50>)
2ffdbb56:	f000 ffc9 	bl	2ffdcaec <tf_log>
2ffdbb5a:	f001 f865 	bl	2ffdcc28 <console_flush>
2ffdbb5e:	f7fa eb80 	blx	2ffd6260 <do_panic>
2ffdbb62:	5914      	ldr	r4, [r2, r4]
2ffdbb64:	3101      	adds	r1, #1
2ffdbb66:	5034      	str	r4, [r6, r0]
2ffdbb68:	e7e9      	b.n	2ffdbb3e <set_reg+0x1e>
2ffdbb6a:	bf00      	nop
2ffdbb6c:	2ffe503c 	.word	0x2ffe503c
2ffdbb70:	2ffe4b60 	.word	0x2ffe4b60

2ffdbb74 <board_ddr_power_init>:
2ffdbb74:	b510      	push	{r4, lr}
2ffdbb76:	4604      	mov	r4, r0
2ffdbb78:	f005 fd0a 	bl	2ffe1590 <dt_pmic_status>
2ffdbb7c:	2800      	cmp	r0, #0
2ffdbb7e:	dd04      	ble.n	2ffdbb8a <board_ddr_power_init+0x16>
2ffdbb80:	4620      	mov	r0, r4
2ffdbb82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffdbb86:	f005 be37 	b.w	2ffe17f8 <pmic_ddr_power_init>
2ffdbb8a:	2000      	movs	r0, #0
2ffdbb8c:	bd10      	pop	{r4, pc}

2ffdbb8e <stm32mp1_mode_register_write.isra.0>:
2ffdbb8e:	6983      	ldr	r3, [r0, #24]
2ffdbb90:	07db      	lsls	r3, r3, #31
2ffdbb92:	d4fc      	bmi.n	2ffdbb8e <stm32mp1_mode_register_write.isra.0>
2ffdbb94:	0309      	lsls	r1, r1, #12
2ffdbb96:	f041 0310 	orr.w	r3, r1, #16
2ffdbb9a:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
2ffdbb9e:	6103      	str	r3, [r0, #16]
2ffdbba0:	f041 0110 	orr.w	r1, r1, #16
2ffdbba4:	6142      	str	r2, [r0, #20]
2ffdbba6:	6101      	str	r1, [r0, #16]
2ffdbba8:	6983      	ldr	r3, [r0, #24]
2ffdbbaa:	07db      	lsls	r3, r3, #31
2ffdbbac:	d4fc      	bmi.n	2ffdbba8 <stm32mp1_mode_register_write.isra.0+0x1a>
2ffdbbae:	4770      	bx	lr

2ffdbbb0 <stm32mp1_wait_sw_done_ack>:
2ffdbbb0:	f8d0 3320 	ldr.w	r3, [r0, #800]	; 0x320
2ffdbbb4:	e92d 43d0 	stmdb	sp!, {r4, r6, r7, r8, r9, lr}
2ffdbbb8:	f043 0301 	orr.w	r3, r3, #1
2ffdbbbc:	f8c0 3320 	str.w	r3, [r0, #800]	; 0x320
2ffdbbc0:	4604      	mov	r4, r0
2ffdbbc2:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdbbc6:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffdbbca:	490d      	ldr	r1, [pc, #52]	; (2ffdbc00 <stm32mp1_wait_sw_done_ack+0x50>)
2ffdbbcc:	2300      	movs	r3, #0
2ffdbbce:	4a0c      	ldr	r2, [pc, #48]	; (2ffdbc00 <stm32mp1_wait_sw_done_ack+0x50>)
2ffdbbd0:	fba0 0101 	umull	r0, r1, r0, r1
2ffdbbd4:	f006 ed44 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdbbd8:	eb10 0806 	adds.w	r8, r0, r6
2ffdbbdc:	eb41 0907 	adc.w	r9, r1, r7
2ffdbbe0:	f8d4 3324 	ldr.w	r3, [r4, #804]	; 0x324
2ffdbbe4:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffdbbe8:	4589      	cmp	r9, r1
2ffdbbea:	bf08      	it	eq
2ffdbbec:	4580      	cmpeq	r8, r0
2ffdbbee:	d203      	bcs.n	2ffdbbf8 <stm32mp1_wait_sw_done_ack+0x48>
2ffdbbf0:	f001 f81a 	bl	2ffdcc28 <console_flush>
2ffdbbf4:	f7fa eb34 	blx	2ffd6260 <do_panic>
2ffdbbf8:	07db      	lsls	r3, r3, #31
2ffdbbfa:	d5f1      	bpl.n	2ffdbbe0 <stm32mp1_wait_sw_done_ack+0x30>
2ffdbbfc:	e8bd 83d0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, pc}
2ffdbc00:	000f4240 	.word	0x000f4240

2ffdbc04 <stm32mp1_wait_operating_mode.isra.0>:
2ffdbc04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffdbc08:	4605      	mov	r5, r0
2ffdbc0a:	460c      	mov	r4, r1
2ffdbc0c:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdbc10:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffdbc14:	4915      	ldr	r1, [pc, #84]	; (2ffdbc6c <stm32mp1_wait_operating_mode.isra.0+0x68>)
2ffdbc16:	2300      	movs	r3, #0
2ffdbc18:	4a14      	ldr	r2, [pc, #80]	; (2ffdbc6c <stm32mp1_wait_operating_mode.isra.0+0x68>)
2ffdbc1a:	fba0 0101 	umull	r0, r1, r0, r1
2ffdbc1e:	f006 ed20 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdbc22:	eb10 0608 	adds.w	r6, r0, r8
2ffdbc26:	eb41 0709 	adc.w	r7, r1, r9
2ffdbc2a:	6829      	ldr	r1, [r5, #0]
2ffdbc2c:	684b      	ldr	r3, [r1, #4]
2ffdbc2e:	f003 0207 	and.w	r2, r3, #7
2ffdbc32:	f003 0330 	and.w	r3, r3, #48	; 0x30
2ffdbc36:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffdbc3a:	454f      	cmp	r7, r9
2ffdbc3c:	bf08      	it	eq
2ffdbc3e:	4546      	cmpeq	r6, r8
2ffdbc40:	d203      	bcs.n	2ffdbc4a <stm32mp1_wait_operating_mode.isra.0+0x46>
2ffdbc42:	f000 fff1 	bl	2ffdcc28 <console_flush>
2ffdbc46:	f7fa eb0c 	blx	2ffd6260 <do_panic>
2ffdbc4a:	2c03      	cmp	r4, #3
2ffdbc4c:	d105      	bne.n	2ffdbc5a <stm32mp1_wait_operating_mode.isra.0+0x56>
2ffdbc4e:	2a03      	cmp	r2, #3
2ffdbc50:	d1ec      	bne.n	2ffdbc2c <stm32mp1_wait_operating_mode.isra.0+0x28>
2ffdbc52:	2b20      	cmp	r3, #32
2ffdbc54:	d1ea      	bne.n	2ffdbc2c <stm32mp1_wait_operating_mode.isra.0+0x28>
2ffdbc56:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffdbc5a:	42a2      	cmp	r2, r4
2ffdbc5c:	d0fb      	beq.n	2ffdbc56 <stm32mp1_wait_operating_mode.isra.0+0x52>
2ffdbc5e:	2c01      	cmp	r4, #1
2ffdbc60:	d1e4      	bne.n	2ffdbc2c <stm32mp1_wait_operating_mode.isra.0+0x28>
2ffdbc62:	2a03      	cmp	r2, #3
2ffdbc64:	d1e2      	bne.n	2ffdbc2c <stm32mp1_wait_operating_mode.isra.0+0x28>
2ffdbc66:	2b30      	cmp	r3, #48	; 0x30
2ffdbc68:	e7f4      	b.n	2ffdbc54 <stm32mp1_wait_operating_mode.isra.0+0x50>
2ffdbc6a:	bf00      	nop
2ffdbc6c:	000f4240 	.word	0x000f4240

2ffdbc70 <stm32mp1_ddrphy_idone_wait>:
2ffdbc70:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
2ffdbc74:	4606      	mov	r6, r0
2ffdbc76:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdbc7a:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffdbc7e:	4914      	ldr	r1, [pc, #80]	; (2ffdbcd0 <stm32mp1_ddrphy_idone_wait+0x60>)
2ffdbc80:	2300      	movs	r3, #0
2ffdbc82:	4a13      	ldr	r2, [pc, #76]	; (2ffdbcd0 <stm32mp1_ddrphy_idone_wait+0x60>)
2ffdbc84:	fba0 0101 	umull	r0, r1, r0, r1
2ffdbc88:	f006 ecea 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdbc8c:	eb10 0408 	adds.w	r4, r0, r8
2ffdbc90:	eb41 0509 	adc.w	r5, r1, r9
2ffdbc94:	68f3      	ldr	r3, [r6, #12]
2ffdbc96:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffdbc9a:	428d      	cmp	r5, r1
2ffdbc9c:	bf08      	it	eq
2ffdbc9e:	4284      	cmpeq	r4, r0
2ffdbca0:	d203      	bcs.n	2ffdbcaa <stm32mp1_ddrphy_idone_wait+0x3a>
2ffdbca2:	f000 ffc1 	bl	2ffdcc28 <console_flush>
2ffdbca6:	f7fa eadc 	blx	2ffd6260 <do_panic>
2ffdbcaa:	f3c3 1240 	ubfx	r2, r3, #5, #1
2ffdbcae:	0658      	lsls	r0, r3, #25
2ffdbcb0:	bf48      	it	mi
2ffdbcb2:	3201      	addmi	r2, #1
2ffdbcb4:	0619      	lsls	r1, r3, #24
2ffdbcb6:	bf48      	it	mi
2ffdbcb8:	3201      	addmi	r2, #1
2ffdbcba:	05d8      	lsls	r0, r3, #23
2ffdbcbc:	bf48      	it	mi
2ffdbcbe:	3201      	addmi	r2, #1
2ffdbcc0:	0599      	lsls	r1, r3, #22
2ffdbcc2:	d403      	bmi.n	2ffdbccc <stm32mp1_ddrphy_idone_wait+0x5c>
2ffdbcc4:	f003 0301 	and.w	r3, r3, #1
2ffdbcc8:	4313      	orrs	r3, r2
2ffdbcca:	d0e3      	beq.n	2ffdbc94 <stm32mp1_ddrphy_idone_wait+0x24>
2ffdbccc:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
2ffdbcd0:	000f4240 	.word	0x000f4240

2ffdbcd4 <stm32mp1_ddr_init>:
2ffdbcd4:	68cb      	ldr	r3, [r1, #12]
2ffdbcd6:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffdbcda:	460d      	mov	r5, r1
2ffdbcdc:	07d9      	lsls	r1, r3, #31
2ffdbcde:	4604      	mov	r4, r0
2ffdbce0:	d507      	bpl.n	2ffdbcf2 <stm32mp1_ddr_init+0x1e>
2ffdbce2:	2000      	movs	r0, #0
2ffdbce4:	f7ff ff46 	bl	2ffdbb74 <board_ddr_power_init>
2ffdbce8:	b190      	cbz	r0, 2ffdbd10 <stm32mp1_ddr_init+0x3c>
2ffdbcea:	f000 ff9d 	bl	2ffdcc28 <console_flush>
2ffdbcee:	f7fa eab8 	blx	2ffd6260 <do_panic>
2ffdbcf2:	075a      	lsls	r2, r3, #29
2ffdbcf4:	d501      	bpl.n	2ffdbcfa <stm32mp1_ddr_init+0x26>
2ffdbcf6:	2001      	movs	r0, #1
2ffdbcf8:	e7f4      	b.n	2ffdbce4 <stm32mp1_ddr_init+0x10>
2ffdbcfa:	071f      	lsls	r7, r3, #28
2ffdbcfc:	d501      	bpl.n	2ffdbd02 <stm32mp1_ddr_init+0x2e>
2ffdbcfe:	2002      	movs	r0, #2
2ffdbd00:	e7f0      	b.n	2ffdbce4 <stm32mp1_ddr_init+0x10>
2ffdbd02:	4802      	ldr	r0, [pc, #8]	; (2ffdbd0c <stm32mp1_ddr_init+0x38>)
2ffdbd04:	f000 fef2 	bl	2ffdcaec <tf_log>
2ffdbd08:	e7ef      	b.n	2ffdbcea <stm32mp1_ddr_init+0x16>
2ffdbd0a:	bf00      	nop
2ffdbd0c:	2ffe4b81 	.word	0x2ffe4b81
2ffdbd10:	69a3      	ldr	r3, [r4, #24]
2ffdbd12:	f895 118d 	ldrb.w	r1, [r5, #397]	; 0x18d
2ffdbd16:	68da      	ldr	r2, [r3, #12]
2ffdbd18:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
2ffdbd1c:	2900      	cmp	r1, #0
2ffdbd1e:	f000 81e5 	beq.w	2ffdc0ec <stm32mp1_ddr_init+0x418>
2ffdbd22:	b90a      	cbnz	r2, 2ffdbd28 <stm32mp1_ddr_init+0x54>
2ffdbd24:	f885 018d 	strb.w	r0, [r5, #397]	; 0x18d
2ffdbd28:	69e3      	ldr	r3, [r4, #28]
2ffdbd2a:	4620      	mov	r0, r4
2ffdbd2c:	f8d3 20d8 	ldr.w	r2, [r3, #216]	; 0xd8
2ffdbd30:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
2ffdbd34:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
2ffdbd38:	f8d3 20d8 	ldr.w	r2, [r3, #216]	; 0xd8
2ffdbd3c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
2ffdbd40:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
2ffdbd44:	f8d3 20d8 	ldr.w	r2, [r3, #216]	; 0xd8
2ffdbd48:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
2ffdbd4c:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
2ffdbd50:	f8d3 20d8 	ldr.w	r2, [r3, #216]	; 0xd8
2ffdbd54:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
2ffdbd58:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
2ffdbd5c:	f8d3 20d8 	ldr.w	r2, [r3, #216]	; 0xd8
2ffdbd60:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
2ffdbd64:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
2ffdbd68:	f8d3 20d8 	ldr.w	r2, [r3, #216]	; 0xd8
2ffdbd6c:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
2ffdbd70:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
2ffdbd74:	6869      	ldr	r1, [r5, #4]
2ffdbd76:	f000 fbd3 	bl	2ffdc520 <stm32mp1_ddr_clk_enable>
2ffdbd7a:	4606      	mov	r6, r0
2ffdbd7c:	2800      	cmp	r0, #0
2ffdbd7e:	d1b4      	bne.n	2ffdbcea <stm32mp1_ddr_init+0x16>
2ffdbd80:	69e3      	ldr	r3, [r4, #28]
2ffdbd82:	2002      	movs	r0, #2
2ffdbd84:	f8d3 20d8 	ldr.w	r2, [r3, #216]	; 0xd8
2ffdbd88:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
2ffdbd8c:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
2ffdbd90:	f8d3 20d8 	ldr.w	r2, [r3, #216]	; 0xd8
2ffdbd94:	f422 2200 	bic.w	r2, r2, #524288	; 0x80000
2ffdbd98:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
2ffdbd9c:	f8d3 20d8 	ldr.w	r2, [r3, #216]	; 0xd8
2ffdbda0:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
2ffdbda4:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
2ffdbda8:	f002 fb0c 	bl	2ffde3c4 <udelay>
2ffdbdac:	6922      	ldr	r2, [r4, #16]
2ffdbdae:	4631      	mov	r1, r6
2ffdbdb0:	4620      	mov	r0, r4
2ffdbdb2:	f8d2 31b0 	ldr.w	r3, [r2, #432]	; 0x1b0
2ffdbdb6:	f023 0301 	bic.w	r3, r3, #1
2ffdbdba:	f8c2 31b0 	str.w	r3, [r2, #432]	; 0x1b0
2ffdbdbe:	f105 020c 	add.w	r2, r5, #12
2ffdbdc2:	f7ff fead 	bl	2ffdbb20 <set_reg>
2ffdbdc6:	68ea      	ldr	r2, [r5, #12]
2ffdbdc8:	f248 0301 	movw	r3, #32769	; 0x8001
2ffdbdcc:	2101      	movs	r1, #1
2ffdbdce:	4620      	mov	r0, r4
2ffdbdd0:	4393      	bics	r3, r2
2ffdbdd2:	bf01      	itttt	eq
2ffdbdd4:	6922      	ldreq	r2, [r4, #16]
2ffdbdd6:	6813      	ldreq	r3, [r2, #0]
2ffdbdd8:	f423 4300 	biceq.w	r3, r3, #32768	; 0x8000
2ffdbddc:	6013      	streq	r3, [r2, #0]
2ffdbdde:	f105 0270 	add.w	r2, r5, #112	; 0x70
2ffdbde2:	f7ff fe9d 	bl	2ffdbb20 <set_reg>
2ffdbde6:	f105 02a0 	add.w	r2, r5, #160	; 0xa0
2ffdbdea:	2103      	movs	r1, #3
2ffdbdec:	4620      	mov	r0, r4
2ffdbdee:	f7ff fe97 	bl	2ffdbb20 <set_reg>
2ffdbdf2:	f895 318d 	ldrb.w	r3, [r5, #397]	; 0x18d
2ffdbdf6:	6922      	ldr	r2, [r4, #16]
2ffdbdf8:	b11b      	cbz	r3, 2ffdbe02 <stm32mp1_ddr_init+0x12e>
2ffdbdfa:	6b13      	ldr	r3, [r2, #48]	; 0x30
2ffdbdfc:	f043 0320 	orr.w	r3, r3, #32
2ffdbe00:	6313      	str	r3, [r2, #48]	; 0x30
2ffdbe02:	f8d2 30d0 	ldr.w	r3, [r2, #208]	; 0xd0
2ffdbe06:	2102      	movs	r1, #2
2ffdbe08:	4620      	mov	r0, r4
2ffdbe0a:	f023 4340 	bic.w	r3, r3, #3221225472	; 0xc0000000
2ffdbe0e:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
2ffdbe12:	f8c2 30d0 	str.w	r3, [r2, #208]	; 0xd0
2ffdbe16:	f105 02c4 	add.w	r2, r5, #196	; 0xc4
2ffdbe1a:	f7ff fe81 	bl	2ffdbb20 <set_reg>
2ffdbe1e:	69e3      	ldr	r3, [r4, #28]
2ffdbe20:	2104      	movs	r1, #4
2ffdbe22:	4620      	mov	r0, r4
2ffdbe24:	f8d3 20d8 	ldr.w	r2, [r3, #216]	; 0xd8
2ffdbe28:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
2ffdbe2c:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
2ffdbe30:	f8d3 20d8 	ldr.w	r2, [r3, #216]	; 0xd8
2ffdbe34:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
2ffdbe38:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
2ffdbe3c:	f8d3 20d8 	ldr.w	r2, [r3, #216]	; 0xd8
2ffdbe40:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
2ffdbe44:	f8c3 20d8 	str.w	r2, [r3, #216]	; 0xd8
2ffdbe48:	f505 7284 	add.w	r2, r5, #264	; 0x108
2ffdbe4c:	f7ff fe68 	bl	2ffdbb20 <set_reg>
2ffdbe50:	f505 729a 	add.w	r2, r5, #308	; 0x134
2ffdbe54:	2105      	movs	r1, #5
2ffdbe56:	4620      	mov	r0, r4
2ffdbe58:	f7ff fe62 	bl	2ffdbb20 <set_reg>
2ffdbe5c:	f895 318c 	ldrb.w	r3, [r5, #396]	; 0x18c
2ffdbe60:	b12b      	cbz	r3, 2ffdbe6e <stm32mp1_ddr_init+0x19a>
2ffdbe62:	f505 72ae 	add.w	r2, r5, #348	; 0x15c
2ffdbe66:	2106      	movs	r1, #6
2ffdbe68:	4620      	mov	r0, r4
2ffdbe6a:	f7ff fe59 	bl	2ffdbb20 <set_reg>
2ffdbe6e:	68ea      	ldr	r2, [r5, #12]
2ffdbe70:	f248 0301 	movw	r3, #32769	; 0x8001
2ffdbe74:	6960      	ldr	r0, [r4, #20]
2ffdbe76:	4393      	bics	r3, r2
2ffdbe78:	bf02      	ittt	eq
2ffdbe7a:	6c43      	ldreq	r3, [r0, #68]	; 0x44
2ffdbe7c:	f023 0301 	biceq.w	r3, r3, #1
2ffdbe80:	6443      	streq	r3, [r0, #68]	; 0x44
2ffdbe82:	f7ff fef5 	bl	2ffdbc70 <stm32mp1_ddrphy_idone_wait>
2ffdbe86:	68eb      	ldr	r3, [r5, #12]
2ffdbe88:	4ac4      	ldr	r2, [pc, #784]	; (2ffdc19c <stm32mp1_ddr_init+0x4c8>)
2ffdbe8a:	f013 0f01 	tst.w	r3, #1
2ffdbe8e:	4bc4      	ldr	r3, [pc, #784]	; (2ffdc1a0 <stm32mp1_ddr_init+0x4cc>)
2ffdbe90:	bf18      	it	ne
2ffdbe92:	4613      	movne	r3, r2
2ffdbe94:	f895 218d 	ldrb.w	r2, [r5, #397]	; 0x18d
2ffdbe98:	b10a      	cbz	r2, 2ffdbe9e <stm32mp1_ddr_init+0x1ca>
2ffdbe9a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
2ffdbe9e:	6966      	ldr	r6, [r4, #20]
2ffdbea0:	f043 0301 	orr.w	r3, r3, #1
2ffdbea4:	200a      	movs	r0, #10
2ffdbea6:	6073      	str	r3, [r6, #4]
2ffdbea8:	f002 fa8c 	bl	2ffde3c4 <udelay>
2ffdbeac:	4630      	mov	r0, r6
2ffdbeae:	f7ff fedf 	bl	2ffdbc70 <stm32mp1_ddrphy_idone_wait>
2ffdbeb2:	f895 318d 	ldrb.w	r3, [r5, #397]	; 0x18d
2ffdbeb6:	b333      	cbz	r3, 2ffdbf06 <stm32mp1_ddr_init+0x232>
2ffdbeb8:	6966      	ldr	r6, [r4, #20]
2ffdbeba:	200a      	movs	r0, #10
2ffdbebc:	f8d5 1190 	ldr.w	r1, [r5, #400]	; 0x190
2ffdbec0:	f8d6 2180 	ldr.w	r2, [r6, #384]	; 0x180
2ffdbec4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
2ffdbec8:	f8c6 2180 	str.w	r2, [r6, #384]	; 0x180
2ffdbecc:	f8d6 3180 	ldr.w	r3, [r6, #384]	; 0x180
2ffdbed0:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
2ffdbed4:	430b      	orrs	r3, r1
2ffdbed6:	f8c6 3180 	str.w	r3, [r6, #384]	; 0x180
2ffdbeda:	69a3      	ldr	r3, [r4, #24]
2ffdbedc:	68da      	ldr	r2, [r3, #12]
2ffdbede:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
2ffdbee2:	60da      	str	r2, [r3, #12]
2ffdbee4:	68da      	ldr	r2, [r3, #12]
2ffdbee6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
2ffdbeea:	60da      	str	r2, [r3, #12]
2ffdbeec:	f8d6 3180 	ldr.w	r3, [r6, #384]	; 0x180
2ffdbef0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
2ffdbef4:	f8c6 3180 	str.w	r3, [r6, #384]	; 0x180
2ffdbef8:	2309      	movs	r3, #9
2ffdbefa:	6073      	str	r3, [r6, #4]
2ffdbefc:	f002 fa62 	bl	2ffde3c4 <udelay>
2ffdbf00:	4630      	mov	r0, r6
2ffdbf02:	f7ff feb5 	bl	2ffdbc70 <stm32mp1_ddrphy_idone_wait>
2ffdbf06:	6920      	ldr	r0, [r4, #16]
2ffdbf08:	f8d0 3320 	ldr.w	r3, [r0, #800]	; 0x320
2ffdbf0c:	f023 0301 	bic.w	r3, r3, #1
2ffdbf10:	f8c0 3320 	str.w	r3, [r0, #800]	; 0x320
2ffdbf14:	f8d0 31b0 	ldr.w	r3, [r0, #432]	; 0x1b0
2ffdbf18:	f043 0301 	orr.w	r3, r3, #1
2ffdbf1c:	f8c0 31b0 	str.w	r3, [r0, #432]	; 0x1b0
2ffdbf20:	f7ff fe46 	bl	2ffdbbb0 <stm32mp1_wait_sw_done_ack>
2ffdbf24:	f895 318d 	ldrb.w	r3, [r5, #397]	; 0x18d
2ffdbf28:	b123      	cbz	r3, 2ffdbf34 <stm32mp1_ddr_init+0x260>
2ffdbf2a:	6922      	ldr	r2, [r4, #16]
2ffdbf2c:	6b13      	ldr	r3, [r2, #48]	; 0x30
2ffdbf2e:	f023 0320 	bic.w	r3, r3, #32
2ffdbf32:	6313      	str	r3, [r2, #48]	; 0x30
2ffdbf34:	f104 0710 	add.w	r7, r4, #16
2ffdbf38:	2101      	movs	r1, #1
2ffdbf3a:	4638      	mov	r0, r7
2ffdbf3c:	f7ff fe62 	bl	2ffdbc04 <stm32mp1_wait_operating_mode.isra.0>
2ffdbf40:	68eb      	ldr	r3, [r5, #12]
2ffdbf42:	041e      	lsls	r6, r3, #16
2ffdbf44:	d572      	bpl.n	2ffdc02c <stm32mp1_ddr_init+0x358>
2ffdbf46:	6963      	ldr	r3, [r4, #20]
2ffdbf48:	6920      	ldr	r0, [r4, #16]
2ffdbf4a:	6c5e      	ldr	r6, [r3, #68]	; 0x44
2ffdbf4c:	f8d3 8048 	ldr.w	r8, [r3, #72]	; 0x48
2ffdbf50:	f8d0 3304 	ldr.w	r3, [r0, #772]	; 0x304
2ffdbf54:	4a93      	ldr	r2, [pc, #588]	; (2ffdc1a4 <stm32mp1_ddr_init+0x4d0>)
2ffdbf56:	f043 0302 	orr.w	r3, r3, #2
2ffdbf5a:	f8c0 3304 	str.w	r3, [r0, #772]	; 0x304
2ffdbf5e:	f8d0 3308 	ldr.w	r3, [r0, #776]	; 0x308
2ffdbf62:	4013      	ands	r3, r2
2ffdbf64:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
2ffdbf68:	d0f9      	beq.n	2ffdbf5e <stm32mp1_ddr_init+0x28a>
2ffdbf6a:	f426 7611 	bic.w	r6, r6, #580	; 0x244
2ffdbf6e:	2101      	movs	r1, #1
2ffdbf70:	4632      	mov	r2, r6
2ffdbf72:	f7ff fe0c 	bl	2ffdbb8e <stm32mp1_mode_register_write.isra.0>
2ffdbf76:	f428 62c0 	bic.w	r2, r8, #1536	; 0x600
2ffdbf7a:	2102      	movs	r1, #2
2ffdbf7c:	6920      	ldr	r0, [r4, #16]
2ffdbf7e:	f7ff fe06 	bl	2ffdbb8e <stm32mp1_mode_register_write.isra.0>
2ffdbf82:	6920      	ldr	r0, [r4, #16]
2ffdbf84:	f046 0201 	orr.w	r2, r6, #1
2ffdbf88:	2101      	movs	r1, #1
2ffdbf8a:	f7ff fe00 	bl	2ffdbb8e <stm32mp1_mode_register_write.isra.0>
2ffdbf8e:	6922      	ldr	r2, [r4, #16]
2ffdbf90:	2103      	movs	r1, #3
2ffdbf92:	4638      	mov	r0, r7
2ffdbf94:	6b13      	ldr	r3, [r2, #48]	; 0x30
2ffdbf96:	f043 0320 	orr.w	r3, r3, #32
2ffdbf9a:	6313      	str	r3, [r2, #48]	; 0x30
2ffdbf9c:	f7ff fe32 	bl	2ffdbc04 <stm32mp1_wait_operating_mode.isra.0>
2ffdbfa0:	6920      	ldr	r0, [r4, #16]
2ffdbfa2:	f8d0 3320 	ldr.w	r3, [r0, #800]	; 0x320
2ffdbfa6:	f023 0301 	bic.w	r3, r3, #1
2ffdbfaa:	f8c0 3320 	str.w	r3, [r0, #800]	; 0x320
2ffdbfae:	6803      	ldr	r3, [r0, #0]
2ffdbfb0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
2ffdbfb4:	6003      	str	r3, [r0, #0]
2ffdbfb6:	f7ff fdfb 	bl	2ffdbbb0 <stm32mp1_wait_sw_done_ack>
2ffdbfba:	20e0      	movs	r0, #224	; 0xe0
2ffdbfbc:	f003 fbb3 	bl	2ffdf726 <stm32mp_clk_get_rate>
2ffdbfc0:	4b79      	ldr	r3, [pc, #484]	; (2ffdc1a8 <stm32mp1_ddr_init+0x4d4>)
2ffdbfc2:	2101      	movs	r1, #1
2ffdbfc4:	4298      	cmp	r0, r3
2ffdbfc6:	4638      	mov	r0, r7
2ffdbfc8:	6963      	ldr	r3, [r4, #20]
2ffdbfca:	691a      	ldr	r2, [r3, #16]
2ffdbfcc:	bf94      	ite	ls
2ffdbfce:	f422 0200 	bicls.w	r2, r2, #8388608	; 0x800000
2ffdbfd2:	f442 0200 	orrhi.w	r2, r2, #8388608	; 0x800000
2ffdbfd6:	611a      	str	r2, [r3, #16]
2ffdbfd8:	695a      	ldr	r2, [r3, #20]
2ffdbfda:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
2ffdbfde:	615a      	str	r2, [r3, #20]
2ffdbfe0:	f8d3 21cc 	ldr.w	r2, [r3, #460]	; 0x1cc
2ffdbfe4:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
2ffdbfe8:	f8c3 21cc 	str.w	r2, [r3, #460]	; 0x1cc
2ffdbfec:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
2ffdbff0:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
2ffdbff4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
2ffdbff8:	f8d3 224c 	ldr.w	r2, [r3, #588]	; 0x24c
2ffdbffc:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
2ffdc000:	f8c3 224c 	str.w	r2, [r3, #588]	; 0x24c
2ffdc004:	f8d3 228c 	ldr.w	r2, [r3, #652]	; 0x28c
2ffdc008:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
2ffdc00c:	f8c3 228c 	str.w	r2, [r3, #652]	; 0x28c
2ffdc010:	6922      	ldr	r2, [r4, #16]
2ffdc012:	6b13      	ldr	r3, [r2, #48]	; 0x30
2ffdc014:	f023 0320 	bic.w	r3, r3, #32
2ffdc018:	6313      	str	r3, [r2, #48]	; 0x30
2ffdc01a:	f7ff fdf3 	bl	2ffdbc04 <stm32mp1_wait_operating_mode.isra.0>
2ffdc01e:	6922      	ldr	r2, [r4, #16]
2ffdc020:	f8d2 3304 	ldr.w	r3, [r2, #772]	; 0x304
2ffdc024:	f023 0302 	bic.w	r3, r3, #2
2ffdc028:	f8c2 3304 	str.w	r3, [r2, #772]	; 0x304
2ffdc02c:	f895 b18c 	ldrb.w	fp, [r5, #396]	; 0x18c
2ffdc030:	f1bb 0f00 	cmp.w	fp, #0
2ffdc034:	d14a      	bne.n	2ffdc0cc <stm32mp1_ddr_init+0x3f8>
2ffdc036:	6920      	ldr	r0, [r4, #16]
2ffdc038:	ee1e 3f10 	mrc	15, 0, r3, cr14, cr0, {0}
2ffdc03c:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffdc040:	f8d0 3320 	ldr.w	r3, [r0, #800]	; 0x320
2ffdc044:	f023 0301 	bic.w	r3, r3, #1
2ffdc048:	f8c0 3320 	str.w	r3, [r0, #800]	; 0x320
2ffdc04c:	6e03      	ldr	r3, [r0, #96]	; 0x60
2ffdc04e:	f043 0301 	orr.w	r3, r3, #1
2ffdc052:	6603      	str	r3, [r0, #96]	; 0x60
2ffdc054:	6b03      	ldr	r3, [r0, #48]	; 0x30
2ffdc056:	f023 0303 	bic.w	r3, r3, #3
2ffdc05a:	6303      	str	r3, [r0, #48]	; 0x30
2ffdc05c:	f8d0 31b0 	ldr.w	r3, [r0, #432]	; 0x1b0
2ffdc060:	f023 0301 	bic.w	r3, r3, #1
2ffdc064:	f8c0 31b0 	str.w	r3, [r0, #432]	; 0x1b0
2ffdc068:	f7ff fda2 	bl	2ffdbbb0 <stm32mp1_wait_sw_done_ack>
2ffdc06c:	6966      	ldr	r6, [r4, #20]
2ffdc06e:	2381      	movs	r3, #129	; 0x81
2ffdc070:	200a      	movs	r0, #10
2ffdc072:	6073      	str	r3, [r6, #4]
2ffdc074:	f002 f9a6 	bl	2ffde3c4 <udelay>
2ffdc078:	4630      	mov	r0, r6
2ffdc07a:	f7ff fdf9 	bl	2ffdbc70 <stm32mp1_ddrphy_idone_wait>
2ffdc07e:	6960      	ldr	r0, [r4, #20]
2ffdc080:	f7ff fdf6 	bl	2ffdbc70 <stm32mp1_ddrphy_idone_wait>
2ffdc084:	f895 318d 	ldrb.w	r3, [r5, #397]	; 0x18d
2ffdc088:	6926      	ldr	r6, [r4, #16]
2ffdc08a:	2b00      	cmp	r3, #0
2ffdc08c:	d13a      	bne.n	2ffdc104 <stm32mp1_ddr_init+0x430>
2ffdc08e:	6b29      	ldr	r1, [r5, #48]	; 0x30
2ffdc090:	f8d6 3320 	ldr.w	r3, [r6, #800]	; 0x320
2ffdc094:	6a2a      	ldr	r2, [r5, #32]
2ffdc096:	07cd      	lsls	r5, r1, #31
2ffdc098:	f023 0301 	bic.w	r3, r3, #1
2ffdc09c:	f8c6 3320 	str.w	r3, [r6, #800]	; 0x320
2ffdc0a0:	d577      	bpl.n	2ffdc192 <stm32mp1_ddr_init+0x4be>
2ffdc0a2:	0791      	lsls	r1, r2, #30
2ffdc0a4:	4630      	mov	r0, r6
2ffdc0a6:	bf42      	ittt	mi
2ffdc0a8:	6b33      	ldrmi	r3, [r6, #48]	; 0x30
2ffdc0aa:	f043 0302 	orrmi.w	r3, r3, #2
2ffdc0ae:	6333      	strmi	r3, [r6, #48]	; 0x30
2ffdc0b0:	07d3      	lsls	r3, r2, #31
2ffdc0b2:	bf42      	ittt	mi
2ffdc0b4:	6b33      	ldrmi	r3, [r6, #48]	; 0x30
2ffdc0b6:	f043 0301 	orrmi.w	r3, r3, #1
2ffdc0ba:	6333      	strmi	r3, [r6, #48]	; 0x30
2ffdc0bc:	f8d6 31b0 	ldr.w	r3, [r6, #432]	; 0x1b0
2ffdc0c0:	f043 0301 	orr.w	r3, r3, #1
2ffdc0c4:	f8c6 31b0 	str.w	r3, [r6, #432]	; 0x1b0
2ffdc0c8:	f7ff fd72 	bl	2ffdbbb0 <stm32mp1_wait_sw_done_ack>
2ffdc0cc:	6923      	ldr	r3, [r4, #16]
2ffdc0ce:	f8d3 2490 	ldr.w	r2, [r3, #1168]	; 0x490
2ffdc0d2:	f042 0201 	orr.w	r2, r2, #1
2ffdc0d6:	f8c3 2490 	str.w	r2, [r3, #1168]	; 0x490
2ffdc0da:	f8d3 2540 	ldr.w	r2, [r3, #1344]	; 0x540
2ffdc0de:	f042 0201 	orr.w	r2, r2, #1
2ffdc0e2:	f8c3 2540 	str.w	r2, [r3, #1344]	; 0x540
2ffdc0e6:	b003      	add	sp, #12
2ffdc0e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffdc0ec:	2a00      	cmp	r2, #0
2ffdc0ee:	f43f ae1b 	beq.w	2ffdbd28 <stm32mp1_ddr_init+0x54>
2ffdc0f2:	68da      	ldr	r2, [r3, #12]
2ffdc0f4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
2ffdc0f8:	60da      	str	r2, [r3, #12]
2ffdc0fa:	68da      	ldr	r2, [r3, #12]
2ffdc0fc:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
2ffdc100:	60da      	str	r2, [r3, #12]
2ffdc102:	e611      	b.n	2ffdbd28 <stm32mp1_ddr_init+0x54>
2ffdc104:	ee1e 3f10 	mrc	15, 0, r3, cr14, cr0, {0}
2ffdc108:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffdc10c:	e9cd 2300 	strd	r2, r3, [sp]
2ffdc110:	686b      	ldr	r3, [r5, #4]
2ffdc112:	4a26      	ldr	r2, [pc, #152]	; (2ffdc1ac <stm32mp1_ddr_init+0x4d8>)
2ffdc114:	4293      	cmp	r3, r2
2ffdc116:	d8ba      	bhi.n	2ffdc08e <stm32mp1_ddr_init+0x3ba>
2ffdc118:	6e77      	ldr	r7, [r6, #100]	; 0x64
2ffdc11a:	f3c7 470b 	ubfx	r7, r7, #16, #12
2ffdc11e:	ea4f 1c47 	mov.w	ip, r7, lsl #5
2ffdc122:	2f00      	cmp	r7, #0
2ffdc124:	d0b3      	beq.n	2ffdc08e <stm32mp1_ddr_init+0x3ba>
2ffdc126:	9900      	ldr	r1, [sp, #0]
2ffdc128:	4667      	mov	r7, ip
2ffdc12a:	f8df c084 	ldr.w	ip, [pc, #132]	; 2ffdc1b0 <stm32mp1_ddr_init+0x4dc>
2ffdc12e:	f04f 0a00 	mov.w	sl, #0
2ffdc132:	ebb1 0008 	subs.w	r0, r1, r8
2ffdc136:	9901      	ldr	r1, [sp, #4]
2ffdc138:	fbb2 f2f3 	udiv	r2, r2, r3
2ffdc13c:	eb61 0e09 	sbc.w	lr, r1, r9
2ffdc140:	465b      	mov	r3, fp
2ffdc142:	fba0 010c 	umull	r0, r1, r0, ip
2ffdc146:	fb0c 110e 	mla	r1, ip, lr, r1
2ffdc14a:	f006 ea8a 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdc14e:	f117 3cff 	adds.w	ip, r7, #4294967295	; 0xffffffff
2ffdc152:	463a      	mov	r2, r7
2ffdc154:	f14a 3eff 	adc.w	lr, sl, #4294967295	; 0xffffffff
2ffdc158:	4653      	mov	r3, sl
2ffdc15a:	eb10 000c 	adds.w	r0, r0, ip
2ffdc15e:	eb41 010e 	adc.w	r1, r1, lr
2ffdc162:	f006 ea7e 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdc166:	4680      	mov	r8, r0
2ffdc168:	4689      	mov	r9, r1
2ffdc16a:	2200      	movs	r2, #0
2ffdc16c:	2300      	movs	r3, #0
2ffdc16e:	4599      	cmp	r9, r3
2ffdc170:	bf08      	it	eq
2ffdc172:	4590      	cmpeq	r8, r2
2ffdc174:	d08b      	beq.n	2ffdc08e <stm32mp1_ddr_init+0x3ba>
2ffdc176:	f8d6 1310 	ldr.w	r1, [r6, #784]	; 0x310
2ffdc17a:	07c8      	lsls	r0, r1, #31
2ffdc17c:	d4fb      	bmi.n	2ffdc176 <stm32mp1_ddr_init+0x4a2>
2ffdc17e:	f8d6 130c 	ldr.w	r1, [r6, #780]	; 0x30c
2ffdc182:	3201      	adds	r2, #1
2ffdc184:	f143 0300 	adc.w	r3, r3, #0
2ffdc188:	f041 0101 	orr.w	r1, r1, #1
2ffdc18c:	f8c6 130c 	str.w	r1, [r6, #780]	; 0x30c
2ffdc190:	e7ed      	b.n	2ffdc16e <stm32mp1_ddr_init+0x49a>
2ffdc192:	6e33      	ldr	r3, [r6, #96]	; 0x60
2ffdc194:	f023 0301 	bic.w	r3, r3, #1
2ffdc198:	6633      	str	r3, [r6, #96]	; 0x60
2ffdc19a:	e782      	b.n	2ffdc0a2 <stm32mp1_ddr_init+0x3ce>
2ffdc19c:	0001007e 	.word	0x0001007e
2ffdc1a0:	0001005e 	.word	0x0001005e
2ffdc1a4:	34001f1f 	.word	0x34001f1f
2ffdc1a8:	05f5e0ff 	.word	0x05f5e0ff
2ffdc1ac:	3b9aca00 	.word	0x3b9aca00
2ffdc1b0:	000f4240 	.word	0x000f4240

2ffdc1b4 <stm32mp1_ddr_setup>:
2ffdc1b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffdc1b8:	f5ad 7d0d 	sub.w	sp, sp, #564	; 0x234
2ffdc1bc:	4ba5      	ldr	r3, [pc, #660]	; (2ffdc454 <stm32mp1_ddr_setup+0x2a0>)
2ffdc1be:	2219      	movs	r2, #25
2ffdc1c0:	920d      	str	r2, [sp, #52]	; 0x34
2ffdc1c2:	2500      	movs	r5, #0
2ffdc1c4:	4aa4      	ldr	r2, [pc, #656]	; (2ffdc458 <stm32mp1_ddr_setup+0x2a4>)
2ffdc1c6:	a80a      	add	r0, sp, #40	; 0x28
2ffdc1c8:	930b      	str	r3, [sp, #44]	; 0x2c
2ffdc1ca:	230c      	movs	r3, #12
2ffdc1cc:	920f      	str	r2, [sp, #60]	; 0x3c
2ffdc1ce:	2270      	movs	r2, #112	; 0x70
2ffdc1d0:	9210      	str	r2, [sp, #64]	; 0x40
2ffdc1d2:	4aa2      	ldr	r2, [pc, #648]	; (2ffdc45c <stm32mp1_ddr_setup+0x2a8>)
2ffdc1d4:	930c      	str	r3, [sp, #48]	; 0x30
2ffdc1d6:	9213      	str	r2, [sp, #76]	; 0x4c
2ffdc1d8:	22a0      	movs	r2, #160	; 0xa0
2ffdc1da:	9214      	str	r2, [sp, #80]	; 0x50
2ffdc1dc:	2209      	movs	r2, #9
2ffdc1de:	9215      	str	r2, [sp, #84]	; 0x54
2ffdc1e0:	4a9f      	ldr	r2, [pc, #636]	; (2ffdc460 <stm32mp1_ddr_setup+0x2ac>)
2ffdc1e2:	9311      	str	r3, [sp, #68]	; 0x44
2ffdc1e4:	9217      	str	r2, [sp, #92]	; 0x5c
2ffdc1e6:	22c4      	movs	r2, #196	; 0xc4
2ffdc1e8:	9218      	str	r2, [sp, #96]	; 0x60
2ffdc1ea:	2211      	movs	r2, #17
2ffdc1ec:	9219      	str	r2, [sp, #100]	; 0x64
2ffdc1ee:	4a9d      	ldr	r2, [pc, #628]	; (2ffdc464 <stm32mp1_ddr_setup+0x2b0>)
2ffdc1f0:	9325      	str	r3, [sp, #148]	; 0x94
2ffdc1f2:	ab8a      	add	r3, sp, #552	; 0x228
2ffdc1f4:	921b      	str	r2, [sp, #108]	; 0x6c
2ffdc1f6:	f44f 7284 	mov.w	r2, #264	; 0x108
2ffdc1fa:	921c      	str	r2, [sp, #112]	; 0x70
2ffdc1fc:	220b      	movs	r2, #11
2ffdc1fe:	921d      	str	r2, [sp, #116]	; 0x74
2ffdc200:	4a99      	ldr	r2, [pc, #612]	; (2ffdc468 <stm32mp1_ddr_setup+0x2b4>)
2ffdc202:	950e      	str	r5, [sp, #56]	; 0x38
2ffdc204:	921f      	str	r2, [sp, #124]	; 0x7c
2ffdc206:	f44f 729a 	mov.w	r2, #308	; 0x134
2ffdc20a:	9220      	str	r2, [sp, #128]	; 0x80
2ffdc20c:	220a      	movs	r2, #10
2ffdc20e:	9221      	str	r2, [sp, #132]	; 0x84
2ffdc210:	4a96      	ldr	r2, [pc, #600]	; (2ffdc46c <stm32mp1_ddr_setup+0x2b8>)
2ffdc212:	9512      	str	r5, [sp, #72]	; 0x48
2ffdc214:	9223      	str	r2, [sp, #140]	; 0x8c
2ffdc216:	f44f 72ae 	mov.w	r2, #348	; 0x15c
2ffdc21a:	9516      	str	r5, [sp, #88]	; 0x58
2ffdc21c:	951a      	str	r5, [sp, #104]	; 0x68
2ffdc21e:	951e      	str	r5, [sp, #120]	; 0x78
2ffdc220:	9522      	str	r5, [sp, #136]	; 0x88
2ffdc222:	9224      	str	r2, [sp, #144]	; 0x90
2ffdc224:	9326      	str	r3, [sp, #152]	; 0x98
2ffdc226:	f005 fe49 	bl	2ffe1ebc <fdt_get_address>
2ffdc22a:	2800      	cmp	r0, #0
2ffdc22c:	f000 816d 	beq.w	2ffdc50a <stm32mp1_ddr_setup+0x356>
2ffdc230:	488f      	ldr	r0, [pc, #572]	; (2ffdc470 <stm32mp1_ddr_setup+0x2bc>)
2ffdc232:	f005 ff8b 	bl	2ffe214c <dt_get_node_by_compatible>
2ffdc236:	1e06      	subs	r6, r0, #0
2ffdc238:	da05      	bge.n	2ffdc246 <stm32mp1_ddr_setup+0x92>
2ffdc23a:	f06f 0015 	mvn.w	r0, #21
2ffdc23e:	f50d 7d0d 	add.w	sp, sp, #564	; 0x234
2ffdc242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffdc246:	498b      	ldr	r1, [pc, #556]	; (2ffdc474 <stm32mp1_ddr_setup+0x2c0>)
2ffdc248:	462a      	mov	r2, r5
2ffdc24a:	f005 fe85 	bl	2ffe1f58 <fdt_read_uint32_default>
2ffdc24e:	9028      	str	r0, [sp, #160]	; 0xa0
2ffdc250:	2800      	cmp	r0, #0
2ffdc252:	d0f2      	beq.n	2ffdc23a <stm32mp1_ddr_setup+0x86>
2ffdc254:	4988      	ldr	r1, [pc, #544]	; (2ffdc478 <stm32mp1_ddr_setup+0x2c4>)
2ffdc256:	462a      	mov	r2, r5
2ffdc258:	4630      	mov	r0, r6
2ffdc25a:	f005 fe7d 	bl	2ffe1f58 <fdt_read_uint32_default>
2ffdc25e:	9029      	str	r0, [sp, #164]	; 0xa4
2ffdc260:	2800      	cmp	r0, #0
2ffdc262:	d0ea      	beq.n	2ffdc23a <stm32mp1_ddr_setup+0x86>
2ffdc264:	4a85      	ldr	r2, [pc, #532]	; (2ffdc47c <stm32mp1_ddr_setup+0x2c8>)
2ffdc266:	4631      	mov	r1, r6
2ffdc268:	980a      	ldr	r0, [sp, #40]	; 0x28
2ffdc26a:	ab09      	add	r3, sp, #36	; 0x24
2ffdc26c:	f006 fcb5 	bl	2ffe2bda <fdt_getprop>
2ffdc270:	9027      	str	r0, [sp, #156]	; 0x9c
2ffdc272:	4601      	mov	r1, r0
2ffdc274:	2800      	cmp	r0, #0
2ffdc276:	d0e0      	beq.n	2ffdc23a <stm32mp1_ddr_setup+0x86>
2ffdc278:	4881      	ldr	r0, [pc, #516]	; (2ffdc480 <stm32mp1_ddr_setup+0x2cc>)
2ffdc27a:	ac0b      	add	r4, sp, #44	; 0x2c
2ffdc27c:	462f      	mov	r7, r5
2ffdc27e:	f04f 0a01 	mov.w	sl, #1
2ffdc282:	f000 fc33 	bl	2ffdcaec <tf_log>
2ffdc286:	f8d4 b000 	ldr.w	fp, [r4]
2ffdc28a:	a927      	add	r1, sp, #156	; 0x9c
2ffdc28c:	6862      	ldr	r2, [r4, #4]
2ffdc28e:	4630      	mov	r0, r6
2ffdc290:	68a3      	ldr	r3, [r4, #8]
2ffdc292:	440a      	add	r2, r1
2ffdc294:	4659      	mov	r1, fp
2ffdc296:	f005 fe73 	bl	2ffe1f80 <fdt_read_uint32_array>
2ffdc29a:	4603      	mov	r3, r0
2ffdc29c:	b148      	cbz	r0, 2ffdc2b2 <stm32mp1_ddr_setup+0xfe>
2ffdc29e:	1c58      	adds	r0, r3, #1
2ffdc2a0:	d101      	bne.n	2ffdc2a6 <stm32mp1_ddr_setup+0xf2>
2ffdc2a2:	68e2      	ldr	r2, [r4, #12]
2ffdc2a4:	b92a      	cbnz	r2, 2ffdc2b2 <stm32mp1_ddr_setup+0xfe>
2ffdc2a6:	4977      	ldr	r1, [pc, #476]	; (2ffdc484 <stm32mp1_ddr_setup+0x2d0>)
2ffdc2a8:	465a      	mov	r2, fp
2ffdc2aa:	4877      	ldr	r0, [pc, #476]	; (2ffdc488 <stm32mp1_ddr_setup+0x2d4>)
2ffdc2ac:	f000 fc1e 	bl	2ffdcaec <tf_log>
2ffdc2b0:	e7c3      	b.n	2ffdc23a <stm32mp1_ddr_setup+0x86>
2ffdc2b2:	68e2      	ldr	r2, [r4, #12]
2ffdc2b4:	b122      	cbz	r2, 2ffdc2c0 <stm32mp1_ddr_setup+0x10c>
2ffdc2b6:	1c59      	adds	r1, r3, #1
2ffdc2b8:	bf0c      	ite	eq
2ffdc2ba:	463b      	moveq	r3, r7
2ffdc2bc:	4653      	movne	r3, sl
2ffdc2be:	7013      	strb	r3, [r2, #0]
2ffdc2c0:	3501      	adds	r5, #1
2ffdc2c2:	3410      	adds	r4, #16
2ffdc2c4:	2d07      	cmp	r5, #7
2ffdc2c6:	d1de      	bne.n	2ffdc286 <stm32mp1_ddr_setup+0xd2>
2ffdc2c8:	4c70      	ldr	r4, [pc, #448]	; (2ffdc48c <stm32mp1_ddr_setup+0x2d8>)
2ffdc2ca:	2300      	movs	r3, #0
2ffdc2cc:	4d70      	ldr	r5, [pc, #448]	; (2ffdc490 <stm32mp1_ddr_setup+0x2dc>)
2ffdc2ce:	2041      	movs	r0, #65	; 0x41
2ffdc2d0:	f88d 3229 	strb.w	r3, [sp, #553]	; 0x229
2ffdc2d4:	f003 fa1e 	bl	2ffdf714 <stm32mp_clk_enable>
2ffdc2d8:	6826      	ldr	r6, [r4, #0]
2ffdc2da:	42ae      	cmp	r6, r5
2ffdc2dc:	d105      	bne.n	2ffdc2ea <stm32mp1_ddr_setup+0x136>
2ffdc2de:	2301      	movs	r3, #1
2ffdc2e0:	f88d 3229 	strb.w	r3, [sp, #553]	; 0x229
2ffdc2e4:	f006 f86b 	bl	2ffe23be <stm32_get_zdata_from_context>
2ffdc2e8:	908b      	str	r0, [sp, #556]	; 0x22c
2ffdc2ea:	4f6a      	ldr	r7, [pc, #424]	; (2ffdc494 <stm32mp1_ddr_setup+0x2e0>)
2ffdc2ec:	2041      	movs	r0, #65	; 0x41
2ffdc2ee:	f003 fa14 	bl	2ffdf71a <stm32mp_clk_disable>
2ffdc2f2:	69fa      	ldr	r2, [r7, #28]
2ffdc2f4:	a927      	add	r1, sp, #156	; 0x9c
2ffdc2f6:	4638      	mov	r0, r7
2ffdc2f8:	f8d2 30d8 	ldr.w	r3, [r2, #216]	; 0xd8
2ffdc2fc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
2ffdc300:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
2ffdc304:	f7ff fce6 	bl	2ffdbcd4 <stm32mp1_ddr_init>
2ffdc308:	69fa      	ldr	r2, [r7, #28]
2ffdc30a:	42ae      	cmp	r6, r5
2ffdc30c:	f8d2 30d8 	ldr.w	r3, [r2, #216]	; 0xd8
2ffdc310:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2ffdc314:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
2ffdc318:	d105      	bne.n	2ffdc326 <stm32mp1_ddr_setup+0x172>
2ffdc31a:	f89d 3229 	ldrb.w	r3, [sp, #553]	; 0x229
2ffdc31e:	b913      	cbnz	r3, 2ffdc326 <stm32mp1_ddr_setup+0x172>
2ffdc320:	4a5d      	ldr	r2, [pc, #372]	; (2ffdc498 <stm32mp1_ddr_setup+0x2e4>)
2ffdc322:	6013      	str	r3, [r2, #0]
2ffdc324:	6023      	str	r3, [r4, #0]
2ffdc326:	9b29      	ldr	r3, [sp, #164]	; 0xa4
2ffdc328:	2500      	movs	r5, #0
2ffdc32a:	9307      	str	r3, [sp, #28]
2ffdc32c:	461c      	mov	r4, r3
2ffdc32e:	e9c7 3502 	strd	r3, r5, [r7, #8]
2ffdc332:	f89d 3229 	ldrb.w	r3, [sp, #553]	; 0x229
2ffdc336:	b1cb      	cbz	r3, 2ffdc36c <stm32mp1_ddr_setup+0x1b8>
2ffdc338:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
2ffdc33c:	f04f 32aa 	mov.w	r2, #2863311530	; 0xaaaaaaaa
2ffdc340:	680b      	ldr	r3, [r1, #0]
2ffdc342:	600a      	str	r2, [r1, #0]
2ffdc344:	680a      	ldr	r2, [r1, #0]
2ffdc346:	f1b2 3faa 	cmp.w	r2, #2863311530	; 0xaaaaaaaa
2ffdc34a:	d006      	beq.n	2ffdc35a <stm32mp1_ddr_setup+0x1a6>
2ffdc34c:	4853      	ldr	r0, [pc, #332]	; (2ffdc49c <stm32mp1_ddr_setup+0x2e8>)
2ffdc34e:	f000 fbcd 	bl	2ffdcaec <tf_log>
2ffdc352:	f000 fc69 	bl	2ffdcc28 <console_flush>
2ffdc356:	f7f9 ef84 	blx	2ffd6260 <do_panic>
2ffdc35a:	600b      	str	r3, [r1, #0]
2ffdc35c:	f006 f866 	bl	2ffe242c <stm32_restore_ddr_training_area>
2ffdc360:	f003 fef2 	bl	2ffe0148 <ddr_read_sr_mode>
2ffdc364:	f003 fefc 	bl	2ffe0160 <ddr_set_sr_mode>
2ffdc368:	2000      	movs	r0, #0
2ffdc36a:	e768      	b.n	2ffdc23e <stm32mp1_ddr_setup+0x8a>
2ffdc36c:	2220      	movs	r2, #32
2ffdc36e:	2301      	movs	r3, #1
2ffdc370:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
2ffdc374:	600b      	str	r3, [r1, #0]
2ffdc376:	6808      	ldr	r0, [r1, #0]
2ffdc378:	4298      	cmp	r0, r3
2ffdc37a:	f040 80c9 	bne.w	2ffdc510 <stm32mp1_ddr_setup+0x35c>
2ffdc37e:	005b      	lsls	r3, r3, #1
2ffdc380:	3a01      	subs	r2, #1
2ffdc382:	d1f7      	bne.n	2ffdc374 <stm32mp1_ddr_setup+0x1c0>
2ffdc384:	f114 34ff 	adds.w	r4, r4, #4294967295	; 0xffffffff
2ffdc388:	f04f 0304 	mov.w	r3, #4
2ffdc38c:	f145 35ff 	adc.w	r5, r5, #4294967295	; 0xffffffff
2ffdc390:	2200      	movs	r2, #0
2ffdc392:	f04f 31aa 	mov.w	r1, #2863311530	; 0xaaaaaaaa
2ffdc396:	e004      	b.n	2ffdc3a2 <stm32mp1_ddr_setup+0x1ee>
2ffdc398:	f103 4040 	add.w	r0, r3, #3221225472	; 0xc0000000
2ffdc39c:	18db      	adds	r3, r3, r3
2ffdc39e:	4152      	adcs	r2, r2
2ffdc3a0:	6001      	str	r1, [r0, #0]
2ffdc3a2:	ea04 0003 	and.w	r0, r4, r3
2ffdc3a6:	9000      	str	r0, [sp, #0]
2ffdc3a8:	ea05 0002 	and.w	r0, r5, r2
2ffdc3ac:	9001      	str	r0, [sp, #4]
2ffdc3ae:	e9dd 6700 	ldrd	r6, r7, [sp]
2ffdc3b2:	ea56 0007 	orrs.w	r0, r6, r7
2ffdc3b6:	d1ef      	bne.n	2ffdc398 <stm32mp1_ddr_setup+0x1e4>
2ffdc3b8:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
2ffdc3bc:	f04f 3255 	mov.w	r2, #1431655765	; 0x55555555
2ffdc3c0:	601a      	str	r2, [r3, #0]
2ffdc3c2:	2304      	movs	r3, #4
2ffdc3c4:	2200      	movs	r2, #0
2ffdc3c6:	ea04 0803 	and.w	r8, r4, r3
2ffdc3ca:	ea05 0902 	and.w	r9, r5, r2
2ffdc3ce:	ea58 0109 	orrs.w	r1, r8, r9
2ffdc3d2:	d135      	bne.n	2ffdc440 <stm32mp1_ddr_setup+0x28c>
2ffdc3d4:	f04f 31aa 	mov.w	r1, #2863311530	; 0xaaaaaaaa
2ffdc3d8:	f04f 4740 	mov.w	r7, #3221225472	; 0xc0000000
2ffdc3dc:	2204      	movs	r2, #4
2ffdc3de:	2300      	movs	r3, #0
2ffdc3e0:	6039      	str	r1, [r7, #0]
2ffdc3e2:	f04f 3855 	mov.w	r8, #1431655765	; 0x55555555
2ffdc3e6:	468c      	mov	ip, r1
2ffdc3e8:	ea04 0102 	and.w	r1, r4, r2
2ffdc3ec:	9104      	str	r1, [sp, #16]
2ffdc3ee:	ea05 0103 	and.w	r1, r5, r3
2ffdc3f2:	9105      	str	r1, [sp, #20]
2ffdc3f4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
2ffdc3f8:	4301      	orrs	r1, r0
2ffdc3fa:	d155      	bne.n	2ffdc4a8 <stm32mp1_ddr_setup+0x2f4>
2ffdc3fc:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
2ffdc400:	f04f 32aa 	mov.w	r2, #2863311530	; 0xaaaaaaaa
2ffdc404:	2404      	movs	r4, #4
2ffdc406:	f04f 3155 	mov.w	r1, #1431655765	; 0x55555555
2ffdc40a:	601a      	str	r2, [r3, #0]
2ffdc40c:	221c      	movs	r2, #28
2ffdc40e:	f104 4040 	add.w	r0, r4, #3221225472	; 0xc0000000
2ffdc412:	6001      	str	r1, [r0, #0]
2ffdc414:	f3bf 8f4f 	dsb	sy
2ffdc418:	6818      	ldr	r0, [r3, #0]
2ffdc41a:	f1b0 3faa 	cmp.w	r0, #2863311530	; 0xaaaaaaaa
2ffdc41e:	d102      	bne.n	2ffdc426 <stm32mp1_ddr_setup+0x272>
2ffdc420:	0064      	lsls	r4, r4, #1
2ffdc422:	3a01      	subs	r2, #1
2ffdc424:	d1f3      	bne.n	2ffdc40e <stm32mp1_ddr_setup+0x25a>
2ffdc426:	0d22      	lsrs	r2, r4, #20
2ffdc428:	4621      	mov	r1, r4
2ffdc42a:	481d      	ldr	r0, [pc, #116]	; (2ffdc4a0 <stm32mp1_ddr_setup+0x2ec>)
2ffdc42c:	f000 fb5e 	bl	2ffdcaec <tf_log>
2ffdc430:	9a29      	ldr	r2, [sp, #164]	; 0xa4
2ffdc432:	42a2      	cmp	r2, r4
2ffdc434:	d994      	bls.n	2ffdc360 <stm32mp1_ddr_setup+0x1ac>
2ffdc436:	481b      	ldr	r0, [pc, #108]	; (2ffdc4a4 <stm32mp1_ddr_setup+0x2f0>)
2ffdc438:	4621      	mov	r1, r4
2ffdc43a:	f000 fb57 	bl	2ffdcaec <tf_log>
2ffdc43e:	e788      	b.n	2ffdc352 <stm32mp1_ddr_setup+0x19e>
2ffdc440:	f103 4640 	add.w	r6, r3, #3221225472	; 0xc0000000
2ffdc444:	6831      	ldr	r1, [r6, #0]
2ffdc446:	f1b1 3faa 	cmp.w	r1, #2863311530	; 0xaaaaaaaa
2ffdc44a:	d155      	bne.n	2ffdc4f8 <stm32mp1_ddr_setup+0x344>
2ffdc44c:	18db      	adds	r3, r3, r3
2ffdc44e:	4152      	adcs	r2, r2
2ffdc450:	e7b9      	b.n	2ffdc3c6 <stm32mp1_ddr_setup+0x212>
2ffdc452:	bf00      	nop
2ffdc454:	2ffe5214 	.word	0x2ffe5214
2ffdc458:	2ffe521f 	.word	0x2ffe521f
2ffdc45c:	2ffe522d 	.word	0x2ffe522d
2ffdc460:	2ffe5238 	.word	0x2ffe5238
2ffdc464:	2ffe5244 	.word	0x2ffe5244
2ffdc468:	2ffe524f 	.word	0x2ffe524f
2ffdc46c:	2ffe525d 	.word	0x2ffe525d
2ffdc470:	2ffe5268 	.word	0x2ffe5268
2ffdc474:	2ffe5278 	.word	0x2ffe5278
2ffdc478:	2ffe5285 	.word	0x2ffe5285
2ffdc47c:	2ffe5291 	.word	0x2ffe5291
2ffdc480:	2ffe529d 	.word	0x2ffe529d
2ffdc484:	2ffe53cc 	.word	0x2ffe53cc
2ffdc488:	2ffe52a7 	.word	0x2ffe52a7
2ffdc48c:	5c00a110 	.word	0x5c00a110
2ffdc490:	ca7face0 	.word	0xca7face0
2ffdc494:	2ffe8a08 	.word	0x2ffe8a08
2ffdc498:	5c00a114 	.word	0x5c00a114
2ffdc49c:	2ffe52c6 	.word	0x2ffe52c6
2ffdc4a0:	2ffe5320 	.word	0x2ffe5320
2ffdc4a4:	2ffe533d 	.word	0x2ffe533d
2ffdc4a8:	f102 4e40 	add.w	lr, r2, #3221225472	; 0xc0000000
2ffdc4ac:	f8ce 8000 	str.w	r8, [lr]
2ffdc4b0:	6839      	ldr	r1, [r7, #0]
2ffdc4b2:	f1b1 3faa 	cmp.w	r1, #2863311530	; 0xaaaaaaaa
2ffdc4b6:	d125      	bne.n	2ffdc504 <stm32mp1_ddr_setup+0x350>
2ffdc4b8:	2004      	movs	r0, #4
2ffdc4ba:	2100      	movs	r1, #0
2ffdc4bc:	ea04 0600 	and.w	r6, r4, r0
2ffdc4c0:	9602      	str	r6, [sp, #8]
2ffdc4c2:	ea05 0601 	and.w	r6, r5, r1
2ffdc4c6:	9603      	str	r6, [sp, #12]
2ffdc4c8:	e9dd 9a02 	ldrd	r9, sl, [sp, #8]
2ffdc4cc:	ea59 060a 	orrs.w	r6, r9, sl
2ffdc4d0:	d104      	bne.n	2ffdc4dc <stm32mp1_ddr_setup+0x328>
2ffdc4d2:	1892      	adds	r2, r2, r2
2ffdc4d4:	415b      	adcs	r3, r3
2ffdc4d6:	f8ce c000 	str.w	ip, [lr]
2ffdc4da:	e785      	b.n	2ffdc3e8 <stm32mp1_ddr_setup+0x234>
2ffdc4dc:	f100 4640 	add.w	r6, r0, #3221225472	; 0xc0000000
2ffdc4e0:	f8d6 9000 	ldr.w	r9, [r6]
2ffdc4e4:	f1b9 3faa 	cmp.w	r9, #2863311530	; 0xaaaaaaaa
2ffdc4e8:	d003      	beq.n	2ffdc4f2 <stm32mp1_ddr_setup+0x33e>
2ffdc4ea:	428b      	cmp	r3, r1
2ffdc4ec:	bf08      	it	eq
2ffdc4ee:	4282      	cmpeq	r2, r0
2ffdc4f0:	d102      	bne.n	2ffdc4f8 <stm32mp1_ddr_setup+0x344>
2ffdc4f2:	1800      	adds	r0, r0, r0
2ffdc4f4:	4149      	adcs	r1, r1
2ffdc4f6:	e7e1      	b.n	2ffdc4bc <stm32mp1_ddr_setup+0x308>
2ffdc4f8:	2e00      	cmp	r6, #0
2ffdc4fa:	f43f af7f 	beq.w	2ffdc3fc <stm32mp1_ddr_setup+0x248>
2ffdc4fe:	4806      	ldr	r0, [pc, #24]	; (2ffdc518 <stm32mp1_ddr_setup+0x364>)
2ffdc500:	4631      	mov	r1, r6
2ffdc502:	e724      	b.n	2ffdc34e <stm32mp1_ddr_setup+0x19a>
2ffdc504:	f04f 4640 	mov.w	r6, #3221225472	; 0xc0000000
2ffdc508:	e7f9      	b.n	2ffdc4fe <stm32mp1_ddr_setup+0x34a>
2ffdc50a:	f06f 0001 	mvn.w	r0, #1
2ffdc50e:	e696      	b.n	2ffdc23e <stm32mp1_ddr_setup+0x8a>
2ffdc510:	4802      	ldr	r0, [pc, #8]	; (2ffdc51c <stm32mp1_ddr_setup+0x368>)
2ffdc512:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
2ffdc516:	e71a      	b.n	2ffdc34e <stm32mp1_ddr_setup+0x19a>
2ffdc518:	2ffe52f0 	.word	0x2ffe52f0
2ffdc51c:	2ffe536d 	.word	0x2ffe536d

2ffdc520 <stm32mp1_ddr_clk_enable>:
2ffdc520:	b510      	push	{r4, lr}
2ffdc522:	460c      	mov	r4, r1
2ffdc524:	f003 fdfe 	bl	2ffe0124 <ddr_enable_clock>
2ffdc528:	20e0      	movs	r0, #224	; 0xe0
2ffdc52a:	f003 f8fc 	bl	2ffdf726 <stm32mp_clk_get_rate>
2ffdc52e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2ffdc532:	210a      	movs	r1, #10
2ffdc534:	4363      	muls	r3, r4
2ffdc536:	4298      	cmp	r0, r3
2ffdc538:	bf8c      	ite	hi
2ffdc53a:	1ac2      	subhi	r2, r0, r3
2ffdc53c:	1a1a      	subls	r2, r3, r0
2ffdc53e:	fbb3 f3f1 	udiv	r3, r3, r1
2ffdc542:	429a      	cmp	r2, r3
2ffdc544:	d90a      	bls.n	2ffdc55c <stm32mp1_ddr_clk_enable+0x3c>
2ffdc546:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2ffdc54a:	4621      	mov	r1, r4
2ffdc54c:	fbb0 f2f2 	udiv	r2, r0, r2
2ffdc550:	4803      	ldr	r0, [pc, #12]	; (2ffdc560 <stm32mp1_ddr_clk_enable+0x40>)
2ffdc552:	f000 facb 	bl	2ffdcaec <tf_log>
2ffdc556:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffdc55a:	bd10      	pop	{r4, pc}
2ffdc55c:	2000      	movs	r0, #0
2ffdc55e:	e7fc      	b.n	2ffdc55a <stm32mp1_ddr_clk_enable+0x3a>
2ffdc560:	2ffe539d 	.word	0x2ffe539d

2ffdc564 <stm32mp1_ddr_probe>:
2ffdc564:	b510      	push	{r4, lr}
2ffdc566:	f000 fc9b 	bl	2ffdcea0 <stm32mp_ddrctrl_base>
2ffdc56a:	4c0c      	ldr	r4, [pc, #48]	; (2ffdc59c <stm32mp1_ddr_probe+0x38>)
2ffdc56c:	6120      	str	r0, [r4, #16]
2ffdc56e:	f000 fc9b 	bl	2ffdcea8 <stm32mp_ddrphyc_base>
2ffdc572:	6160      	str	r0, [r4, #20]
2ffdc574:	f000 fc9c 	bl	2ffdceb0 <stm32mp_pwr_base>
2ffdc578:	61a0      	str	r0, [r4, #24]
2ffdc57a:	f000 fc9d 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdc57e:	61e0      	str	r0, [r4, #28]
2ffdc580:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
2ffdc584:	2300      	movs	r3, #0
2ffdc586:	e9c4 2300 	strd	r2, r3, [r4]
2ffdc58a:	2200      	movs	r2, #0
2ffdc58c:	2300      	movs	r3, #0
2ffdc58e:	e9c4 2302 	strd	r2, r3, [r4, #8]
2ffdc592:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffdc596:	f7ff be0d 	b.w	2ffdc1b4 <stm32mp1_ddr_setup>
2ffdc59a:	bf00      	nop
2ffdc59c:	2ffe8a08 	.word	0x2ffe8a08

2ffdc5a0 <flush_bl_params_desc_args>:
2ffdc5a0:	b510      	push	{r4, lr}
2ffdc5a2:	4614      	mov	r4, r2
2ffdc5a4:	b918      	cbnz	r0, 2ffdc5ae <flush_bl_params_desc_args+0xe>
2ffdc5a6:	2125      	movs	r1, #37	; 0x25
2ffdc5a8:	4809      	ldr	r0, [pc, #36]	; (2ffdc5d0 <flush_bl_params_desc_args+0x30>)
2ffdc5aa:	f006 fcb3 	bl	2ffe2f14 <__assert>
2ffdc5ae:	b909      	cbnz	r1, 2ffdc5b4 <flush_bl_params_desc_args+0x14>
2ffdc5b0:	2126      	movs	r1, #38	; 0x26
2ffdc5b2:	e7f9      	b.n	2ffdc5a8 <flush_bl_params_desc_args+0x8>
2ffdc5b4:	b90a      	cbnz	r2, 2ffdc5ba <flush_bl_params_desc_args+0x1a>
2ffdc5b6:	2127      	movs	r1, #39	; 0x27
2ffdc5b8:	e7f6      	b.n	2ffdc5a8 <flush_bl_params_desc_args+0x8>
2ffdc5ba:	235c      	movs	r3, #92	; 0x5c
2ffdc5bc:	4359      	muls	r1, r3
2ffdc5be:	f7f9 eef6 	blx	2ffd63ac <flush_dcache_range>
2ffdc5c2:	4620      	mov	r0, r4
2ffdc5c4:	210c      	movs	r1, #12
2ffdc5c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffdc5ca:	f00a bce9 	b.w	2ffe6fa0 <__flush_dcache_range_from_thumb>
2ffdc5ce:	bf00      	nop
2ffdc5d0:	2ffe53df 	.word	0x2ffe53df

2ffdc5d4 <flush_bl_params_desc>:
2ffdc5d4:	4b03      	ldr	r3, [pc, #12]	; (2ffdc5e4 <flush_bl_params_desc+0x10>)
2ffdc5d6:	4a04      	ldr	r2, [pc, #16]	; (2ffdc5e8 <flush_bl_params_desc+0x14>)
2ffdc5d8:	6819      	ldr	r1, [r3, #0]
2ffdc5da:	4b04      	ldr	r3, [pc, #16]	; (2ffdc5ec <flush_bl_params_desc+0x18>)
2ffdc5dc:	6818      	ldr	r0, [r3, #0]
2ffdc5de:	f7ff bfdf 	b.w	2ffdc5a0 <flush_bl_params_desc_args>
2ffdc5e2:	bf00      	nop
2ffdc5e4:	2ffe7180 	.word	0x2ffe7180
2ffdc5e8:	2ffe8efc 	.word	0x2ffe8efc
2ffdc5ec:	2ffe7184 	.word	0x2ffe7184

2ffdc5f0 <get_bl_params_node_index>:
2ffdc5f0:	1c42      	adds	r2, r0, #1
2ffdc5f2:	b538      	push	{r3, r4, r5, lr}
2ffdc5f4:	4603      	mov	r3, r0
2ffdc5f6:	d00a      	beq.n	2ffdc60e <get_bl_params_node_index+0x1e>
2ffdc5f8:	4a0a      	ldr	r2, [pc, #40]	; (2ffdc624 <get_bl_params_node_index+0x34>)
2ffdc5fa:	2000      	movs	r0, #0
2ffdc5fc:	490a      	ldr	r1, [pc, #40]	; (2ffdc628 <get_bl_params_node_index+0x38>)
2ffdc5fe:	245c      	movs	r4, #92	; 0x5c
2ffdc600:	6812      	ldr	r2, [r2, #0]
2ffdc602:	6809      	ldr	r1, [r1, #0]
2ffdc604:	4282      	cmp	r2, r0
2ffdc606:	d106      	bne.n	2ffdc616 <get_bl_params_node_index+0x26>
2ffdc608:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffdc60c:	bd38      	pop	{r3, r4, r5, pc}
2ffdc60e:	4807      	ldr	r0, [pc, #28]	; (2ffdc62c <get_bl_params_node_index+0x3c>)
2ffdc610:	2138      	movs	r1, #56	; 0x38
2ffdc612:	f006 fc7f 	bl	2ffe2f14 <__assert>
2ffdc616:	fb04 f500 	mul.w	r5, r4, r0
2ffdc61a:	594d      	ldr	r5, [r1, r5]
2ffdc61c:	429d      	cmp	r5, r3
2ffdc61e:	d0f5      	beq.n	2ffdc60c <get_bl_params_node_index+0x1c>
2ffdc620:	3001      	adds	r0, #1
2ffdc622:	e7ef      	b.n	2ffdc604 <get_bl_params_node_index+0x14>
2ffdc624:	2ffe7180 	.word	0x2ffe7180
2ffdc628:	2ffe7184 	.word	0x2ffe7184
2ffdc62c:	2ffe53df 	.word	0x2ffe53df

2ffdc630 <get_bl_mem_params_node>:
2ffdc630:	b508      	push	{r3, lr}
2ffdc632:	1c43      	adds	r3, r0, #1
2ffdc634:	d103      	bne.n	2ffdc63e <get_bl_mem_params_node+0xe>
2ffdc636:	4808      	ldr	r0, [pc, #32]	; (2ffdc658 <get_bl_mem_params_node+0x28>)
2ffdc638:	214a      	movs	r1, #74	; 0x4a
2ffdc63a:	f006 fc6b 	bl	2ffe2f14 <__assert>
2ffdc63e:	f7ff ffd7 	bl	2ffdc5f0 <get_bl_params_node_index>
2ffdc642:	2800      	cmp	r0, #0
2ffdc644:	bfa9      	itett	ge
2ffdc646:	225c      	movge	r2, #92	; 0x5c
2ffdc648:	2000      	movlt	r0, #0
2ffdc64a:	4b04      	ldrge	r3, [pc, #16]	; (2ffdc65c <get_bl_mem_params_node+0x2c>)
2ffdc64c:	681b      	ldrge	r3, [r3, #0]
2ffdc64e:	bfa8      	it	ge
2ffdc650:	fb02 3000 	mlage	r0, r2, r0, r3
2ffdc654:	bd08      	pop	{r3, pc}
2ffdc656:	bf00      	nop
2ffdc658:	2ffe53df 	.word	0x2ffe53df
2ffdc65c:	2ffe7184 	.word	0x2ffe7184

2ffdc660 <get_bl_load_info_from_mem_params_desc>:
2ffdc660:	4b10      	ldr	r3, [pc, #64]	; (2ffdc6a4 <get_bl_load_info_from_mem_params_desc+0x44>)
2ffdc662:	b510      	push	{r4, lr}
2ffdc664:	6818      	ldr	r0, [r3, #0]
2ffdc666:	b1d8      	cbz	r0, 2ffdc6a0 <get_bl_load_info_from_mem_params_desc+0x40>
2ffdc668:	4b0f      	ldr	r3, [pc, #60]	; (2ffdc6a8 <get_bl_load_info_from_mem_params_desc+0x48>)
2ffdc66a:	4c10      	ldr	r4, [pc, #64]	; (2ffdc6ac <get_bl_load_info_from_mem_params_desc+0x4c>)
2ffdc66c:	681b      	ldr	r3, [r3, #0]
2ffdc66e:	4a10      	ldr	r2, [pc, #64]	; (2ffdc6b0 <get_bl_load_info_from_mem_params_desc+0x50>)
2ffdc670:	f103 0140 	add.w	r1, r3, #64	; 0x40
2ffdc674:	3304      	adds	r3, #4
2ffdc676:	6022      	str	r2, [r4, #0]
2ffdc678:	2200      	movs	r2, #0
2ffdc67a:	60a1      	str	r1, [r4, #8]
2ffdc67c:	6062      	str	r2, [r4, #4]
2ffdc67e:	f853 4c04 	ldr.w	r4, [r3, #-4]
2ffdc682:	3201      	adds	r2, #1
2ffdc684:	4290      	cmp	r0, r2
2ffdc686:	600c      	str	r4, [r1, #0]
2ffdc688:	bf88      	it	hi
2ffdc68a:	f103 0498 	addhi.w	r4, r3, #152	; 0x98
2ffdc68e:	604b      	str	r3, [r1, #4]
2ffdc690:	f103 035c 	add.w	r3, r3, #92	; 0x5c
2ffdc694:	bf84      	itt	hi
2ffdc696:	608c      	strhi	r4, [r1, #8]
2ffdc698:	4621      	movhi	r1, r4
2ffdc69a:	4290      	cmp	r0, r2
2ffdc69c:	d1ef      	bne.n	2ffdc67e <get_bl_load_info_from_mem_params_desc+0x1e>
2ffdc69e:	4803      	ldr	r0, [pc, #12]	; (2ffdc6ac <get_bl_load_info_from_mem_params_desc+0x4c>)
2ffdc6a0:	bd10      	pop	{r4, pc}
2ffdc6a2:	bf00      	nop
2ffdc6a4:	2ffe7180 	.word	0x2ffe7180
2ffdc6a8:	2ffe7184 	.word	0x2ffe7184
2ffdc6ac:	2ffe8ef0 	.word	0x2ffe8ef0
2ffdc6b0:	000c0204 	.word	0x000c0204

2ffdc6b4 <get_next_bl_params_from_mem_params_desc>:
2ffdc6b4:	4b2a      	ldr	r3, [pc, #168]	; (2ffdc760 <get_next_bl_params_from_mem_params_desc+0xac>)
2ffdc6b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffdc6ba:	681c      	ldr	r4, [r3, #0]
2ffdc6bc:	2c00      	cmp	r4, #0
2ffdc6be:	d049      	beq.n	2ffdc754 <get_next_bl_params_from_mem_params_desc+0xa0>
2ffdc6c0:	4b28      	ldr	r3, [pc, #160]	; (2ffdc764 <get_next_bl_params_from_mem_params_desc+0xb0>)
2ffdc6c2:	2000      	movs	r0, #0
2ffdc6c4:	215c      	movs	r1, #92	; 0x5c
2ffdc6c6:	681d      	ldr	r5, [r3, #0]
2ffdc6c8:	fb01 5300 	mla	r3, r1, r0, r5
2ffdc6cc:	69da      	ldr	r2, [r3, #28]
2ffdc6ce:	f002 0218 	and.w	r2, r2, #24
2ffdc6d2:	2a18      	cmp	r2, #24
2ffdc6d4:	d112      	bne.n	2ffdc6fc <get_next_bl_params_from_mem_params_desc+0x48>
2ffdc6d6:	4a24      	ldr	r2, [pc, #144]	; (2ffdc768 <get_next_bl_params_from_mem_params_desc+0xb4>)
2ffdc6d8:	334c      	adds	r3, #76	; 0x4c
2ffdc6da:	6093      	str	r3, [r2, #8]
2ffdc6dc:	4b22      	ldr	r3, [pc, #136]	; (2ffdc768 <get_next_bl_params_from_mem_params_desc+0xb4>)
2ffdc6de:	f04f 085c 	mov.w	r8, #92	; 0x5c
2ffdc6e2:	4a22      	ldr	r2, [pc, #136]	; (2ffdc76c <get_next_bl_params_from_mem_params_desc+0xb8>)
2ffdc6e4:	601a      	str	r2, [r3, #0]
2ffdc6e6:	2200      	movs	r2, #0
2ffdc6e8:	605a      	str	r2, [r3, #4]
2ffdc6ea:	4616      	mov	r6, r2
2ffdc6ec:	fb08 f000 	mul.w	r0, r8, r0
2ffdc6f0:	182b      	adds	r3, r5, r0
2ffdc6f2:	69d9      	ldr	r1, [r3, #28]
2ffdc6f4:	0709      	lsls	r1, r1, #28
2ffdc6f6:	d40f      	bmi.n	2ffdc718 <get_next_bl_params_from_mem_params_desc+0x64>
2ffdc6f8:	21ab      	movs	r1, #171	; 0xab
2ffdc6fa:	e006      	b.n	2ffdc70a <get_next_bl_params_from_mem_params_desc+0x56>
2ffdc6fc:	3001      	adds	r0, #1
2ffdc6fe:	4284      	cmp	r4, r0
2ffdc700:	d1e2      	bne.n	2ffdc6c8 <get_next_bl_params_from_mem_params_desc+0x14>
2ffdc702:	4b19      	ldr	r3, [pc, #100]	; (2ffdc768 <get_next_bl_params_from_mem_params_desc+0xb4>)
2ffdc704:	689b      	ldr	r3, [r3, #8]
2ffdc706:	b91b      	cbnz	r3, 2ffdc710 <get_next_bl_params_from_mem_params_desc+0x5c>
2ffdc708:	219d      	movs	r1, #157	; 0x9d
2ffdc70a:	4819      	ldr	r0, [pc, #100]	; (2ffdc770 <get_next_bl_params_from_mem_params_desc+0xbc>)
2ffdc70c:	f006 fc02 	bl	2ffe2f14 <__assert>
2ffdc710:	2000      	movs	r0, #0
2ffdc712:	e7e3      	b.n	2ffdc6dc <get_next_bl_params_from_mem_params_desc+0x28>
2ffdc714:	463a      	mov	r2, r7
2ffdc716:	e7e9      	b.n	2ffdc6ec <get_next_bl_params_from_mem_params_desc+0x38>
2ffdc718:	5829      	ldr	r1, [r5, r0]
2ffdc71a:	f103 074c 	add.w	r7, r3, #76	; 0x4c
2ffdc71e:	64d9      	str	r1, [r3, #76]	; 0x4c
2ffdc720:	1d19      	adds	r1, r3, #4
2ffdc722:	6519      	str	r1, [r3, #80]	; 0x50
2ffdc724:	f103 0118 	add.w	r1, r3, #24
2ffdc728:	6559      	str	r1, [r3, #84]	; 0x54
2ffdc72a:	b122      	cbz	r2, 2ffdc736 <get_next_bl_params_from_mem_params_desc+0x82>
2ffdc72c:	68d1      	ldr	r1, [r2, #12]
2ffdc72e:	b109      	cbz	r1, 2ffdc734 <get_next_bl_params_from_mem_params_desc+0x80>
2ffdc730:	21b7      	movs	r1, #183	; 0xb7
2ffdc732:	e7ea      	b.n	2ffdc70a <get_next_bl_params_from_mem_params_desc+0x56>
2ffdc734:	60d7      	str	r7, [r2, #12]
2ffdc736:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
2ffdc738:	1c43      	adds	r3, r0, #1
2ffdc73a:	d00e      	beq.n	2ffdc75a <get_next_bl_params_from_mem_params_desc+0xa6>
2ffdc73c:	f7ff ff58 	bl	2ffdc5f0 <get_bl_params_node_index>
2ffdc740:	b108      	cbz	r0, 2ffdc746 <get_next_bl_params_from_mem_params_desc+0x92>
2ffdc742:	4284      	cmp	r4, r0
2ffdc744:	d801      	bhi.n	2ffdc74a <get_next_bl_params_from_mem_params_desc+0x96>
2ffdc746:	21c7      	movs	r1, #199	; 0xc7
2ffdc748:	e7df      	b.n	2ffdc70a <get_next_bl_params_from_mem_params_desc+0x56>
2ffdc74a:	3601      	adds	r6, #1
2ffdc74c:	42b4      	cmp	r4, r6
2ffdc74e:	d1e1      	bne.n	2ffdc714 <get_next_bl_params_from_mem_params_desc+0x60>
2ffdc750:	21cc      	movs	r1, #204	; 0xcc
2ffdc752:	e7da      	b.n	2ffdc70a <get_next_bl_params_from_mem_params_desc+0x56>
2ffdc754:	4620      	mov	r0, r4
2ffdc756:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffdc75a:	4803      	ldr	r0, [pc, #12]	; (2ffdc768 <get_next_bl_params_from_mem_params_desc+0xb4>)
2ffdc75c:	e7fb      	b.n	2ffdc756 <get_next_bl_params_from_mem_params_desc+0xa2>
2ffdc75e:	bf00      	nop
2ffdc760:	2ffe7180 	.word	0x2ffe7180
2ffdc764:	2ffe7184 	.word	0x2ffe7184
2ffdc768:	2ffe8efc 	.word	0x2ffe8efc
2ffdc76c:	000c0205 	.word	0x000c0205
2ffdc770:	2ffe53df 	.word	0x2ffe53df

2ffdc774 <plat_flush_next_bl_params>:
2ffdc774:	f7ff bf2e 	b.w	2ffdc5d4 <flush_bl_params_desc>

2ffdc778 <plat_get_bl_image_load_info>:
2ffdc778:	b570      	push	{r4, r5, r6, lr}
2ffdc77a:	f000 fb8b 	bl	2ffdce94 <stm32mp_get_boot_ctx_address>
2ffdc77e:	4605      	mov	r5, r0
2ffdc780:	2005      	movs	r0, #5
2ffdc782:	f7ff ff55 	bl	2ffdc630 <get_bl_mem_params_node>
2ffdc786:	4604      	mov	r4, r0
2ffdc788:	f000 fb96 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdc78c:	f8d0 6408 	ldr.w	r6, [r0, #1032]	; 0x408
2ffdc790:	f000 fb8e 	bl	2ffdceb0 <stm32mp_pwr_base>
2ffdc794:	f895 204d 	ldrb.w	r2, [r5, #77]	; 0x4d
2ffdc798:	f895 304c 	ldrb.w	r3, [r5, #76]	; 0x4c
2ffdc79c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffdc7a0:	f895 204e 	ldrb.w	r2, [r5, #78]	; 0x4e
2ffdc7a4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
2ffdc7a8:	f895 204f 	ldrb.w	r2, [r5, #79]	; 0x4f
2ffdc7ac:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffdc7b0:	3b0a      	subs	r3, #10
2ffdc7b2:	2b01      	cmp	r3, #1
2ffdc7b4:	d813      	bhi.n	2ffdc7de <plat_get_bl_image_load_info+0x66>
2ffdc7b6:	68c3      	ldr	r3, [r0, #12]
2ffdc7b8:	055b      	lsls	r3, r3, #21
2ffdc7ba:	d510      	bpl.n	2ffdc7de <plat_get_bl_image_load_info+0x66>
2ffdc7bc:	f016 0604 	ands.w	r6, r6, #4
2ffdc7c0:	d10d      	bne.n	2ffdc7de <plat_get_bl_image_load_info+0x66>
2ffdc7c2:	2041      	movs	r0, #65	; 0x41
2ffdc7c4:	f002 ffa6 	bl	2ffdf714 <stm32mp_clk_enable>
2ffdc7c8:	4b0a      	ldr	r3, [pc, #40]	; (2ffdc7f4 <plat_get_bl_image_load_info+0x7c>)
2ffdc7ca:	681b      	ldr	r3, [r3, #0]
2ffdc7cc:	b123      	cbz	r3, 2ffdc7d8 <plat_get_bl_image_load_info+0x60>
2ffdc7ce:	68a3      	ldr	r3, [r4, #8]
2ffdc7d0:	6226      	str	r6, [r4, #32]
2ffdc7d2:	f043 0302 	orr.w	r3, r3, #2
2ffdc7d6:	60a3      	str	r3, [r4, #8]
2ffdc7d8:	2041      	movs	r0, #65	; 0x41
2ffdc7da:	f002 ff9e 	bl	2ffdf71a <stm32mp_clk_disable>
2ffdc7de:	f005 fcff 	bl	2ffe21e0 <dt_get_ddr_size>
2ffdc7e2:	68e3      	ldr	r3, [r4, #12]
2ffdc7e4:	f1c3 4340 	rsb	r3, r3, #3221225472	; 0xc0000000
2ffdc7e8:	4403      	add	r3, r0
2ffdc7ea:	6163      	str	r3, [r4, #20]
2ffdc7ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffdc7f0:	f7ff bf36 	b.w	2ffdc660 <get_bl_load_info_from_mem_params_desc>
2ffdc7f4:	5c00a114 	.word	0x5c00a114

2ffdc7f8 <plat_get_next_bl_params>:
2ffdc7f8:	f7ff bf5c 	b.w	2ffdc6b4 <get_next_bl_params_from_mem_params_desc>

2ffdc7fc <bl2_load_images>:
2ffdc7fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffdc800:	f7ff ffba 	bl	2ffdc778 <plat_get_bl_image_load_info>
2ffdc804:	b918      	cbnz	r0, 2ffdc80e <bl2_load_images+0x12>
2ffdc806:	2126      	movs	r1, #38	; 0x26
2ffdc808:	4838      	ldr	r0, [pc, #224]	; (2ffdc8ec <bl2_load_images+0xf0>)
2ffdc80a:	f006 fb83 	bl	2ffe2f14 <__assert>
2ffdc80e:	6884      	ldr	r4, [r0, #8]
2ffdc810:	b90c      	cbnz	r4, 2ffdc816 <bl2_load_images+0x1a>
2ffdc812:	2127      	movs	r1, #39	; 0x27
2ffdc814:	e7f8      	b.n	2ffdc808 <bl2_load_images+0xc>
2ffdc816:	7803      	ldrb	r3, [r0, #0]
2ffdc818:	2b04      	cmp	r3, #4
2ffdc81a:	d001      	beq.n	2ffdc820 <bl2_load_images+0x24>
2ffdc81c:	2128      	movs	r1, #40	; 0x28
2ffdc81e:	e7f3      	b.n	2ffdc808 <bl2_load_images+0xc>
2ffdc820:	7843      	ldrb	r3, [r0, #1]
2ffdc822:	2b01      	cmp	r3, #1
2ffdc824:	d801      	bhi.n	2ffdc82a <bl2_load_images+0x2e>
2ffdc826:	2129      	movs	r1, #41	; 0x29
2ffdc828:	e7ee      	b.n	2ffdc808 <bl2_load_images+0xc>
2ffdc82a:	4f31      	ldr	r7, [pc, #196]	; (2ffdc8f0 <bl2_load_images+0xf4>)
2ffdc82c:	2600      	movs	r6, #0
2ffdc82e:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 2ffdc904 <bl2_load_images+0x108>
2ffdc832:	f8df 90d4 	ldr.w	r9, [pc, #212]	; 2ffdc908 <bl2_load_images+0x10c>
2ffdc836:	6863      	ldr	r3, [r4, #4]
2ffdc838:	685b      	ldr	r3, [r3, #4]
2ffdc83a:	075a      	lsls	r2, r3, #29
2ffdc83c:	d503      	bpl.n	2ffdc846 <bl2_load_images+0x4a>
2ffdc83e:	b176      	cbz	r6, 2ffdc85e <bl2_load_images+0x62>
2ffdc840:	4640      	mov	r0, r8
2ffdc842:	f000 f953 	bl	2ffdcaec <tf_log>
2ffdc846:	6820      	ldr	r0, [r4, #0]
2ffdc848:	f000 fa12 	bl	2ffdcc70 <bl2_plat_handle_pre_image_load>
2ffdc84c:	4605      	mov	r5, r0
2ffdc84e:	b168      	cbz	r0, 2ffdc86c <bl2_load_images+0x70>
2ffdc850:	4601      	mov	r1, r0
2ffdc852:	4828      	ldr	r0, [pc, #160]	; (2ffdc8f4 <bl2_load_images+0xf8>)
2ffdc854:	f000 f94a 	bl	2ffdcaec <tf_log>
2ffdc858:	4628      	mov	r0, r5
2ffdc85a:	f000 fa06 	bl	2ffdcc6a <plat_error_handler>
2ffdc85e:	4638      	mov	r0, r7
2ffdc860:	2601      	movs	r6, #1
2ffdc862:	f000 f943 	bl	2ffdcaec <tf_log>
2ffdc866:	f7fb fa87 	bl	2ffd7d78 <bl2_platform_setup>
2ffdc86a:	e7ec      	b.n	2ffdc846 <bl2_load_images+0x4a>
2ffdc86c:	e9d4 1300 	ldrd	r1, r3, [r4]
2ffdc870:	685b      	ldr	r3, [r3, #4]
2ffdc872:	079b      	lsls	r3, r3, #30
2ffdc874:	d413      	bmi.n	2ffdc89e <bl2_load_images+0xa2>
2ffdc876:	4820      	ldr	r0, [pc, #128]	; (2ffdc8f8 <bl2_load_images+0xfc>)
2ffdc878:	f000 f938 	bl	2ffdcaec <tf_log>
2ffdc87c:	e9d4 0100 	ldrd	r0, r1, [r4]
2ffdc880:	f000 f912 	bl	2ffdcaa8 <load_auth_image>
2ffdc884:	4605      	mov	r5, r0
2ffdc886:	b110      	cbz	r0, 2ffdc88e <bl2_load_images+0x92>
2ffdc888:	4601      	mov	r1, r0
2ffdc88a:	481c      	ldr	r0, [pc, #112]	; (2ffdc8fc <bl2_load_images+0x100>)
2ffdc88c:	e7e2      	b.n	2ffdc854 <bl2_load_images+0x58>
2ffdc88e:	6820      	ldr	r0, [r4, #0]
2ffdc890:	f7fb fcda 	bl	2ffd8248 <bl2_plat_handle_post_image_load>
2ffdc894:	4605      	mov	r5, r0
2ffdc896:	b128      	cbz	r0, 2ffdc8a4 <bl2_load_images+0xa8>
2ffdc898:	4601      	mov	r1, r0
2ffdc89a:	4819      	ldr	r0, [pc, #100]	; (2ffdc900 <bl2_load_images+0x104>)
2ffdc89c:	e7da      	b.n	2ffdc854 <bl2_load_images+0x58>
2ffdc89e:	4648      	mov	r0, r9
2ffdc8a0:	f000 f924 	bl	2ffdcaec <tf_log>
2ffdc8a4:	68a4      	ldr	r4, [r4, #8]
2ffdc8a6:	2c00      	cmp	r4, #0
2ffdc8a8:	d1c5      	bne.n	2ffdc836 <bl2_load_images+0x3a>
2ffdc8aa:	f7ff ffa5 	bl	2ffdc7f8 <plat_get_next_bl_params>
2ffdc8ae:	4604      	mov	r4, r0
2ffdc8b0:	b908      	cbnz	r0, 2ffdc8b6 <bl2_load_images+0xba>
2ffdc8b2:	215d      	movs	r1, #93	; 0x5d
2ffdc8b4:	e7a8      	b.n	2ffdc808 <bl2_load_images+0xc>
2ffdc8b6:	6883      	ldr	r3, [r0, #8]
2ffdc8b8:	b90b      	cbnz	r3, 2ffdc8be <bl2_load_images+0xc2>
2ffdc8ba:	215e      	movs	r1, #94	; 0x5e
2ffdc8bc:	e7a4      	b.n	2ffdc808 <bl2_load_images+0xc>
2ffdc8be:	7802      	ldrb	r2, [r0, #0]
2ffdc8c0:	2a05      	cmp	r2, #5
2ffdc8c2:	d001      	beq.n	2ffdc8c8 <bl2_load_images+0xcc>
2ffdc8c4:	215f      	movs	r1, #95	; 0x5f
2ffdc8c6:	e79f      	b.n	2ffdc808 <bl2_load_images+0xc>
2ffdc8c8:	7842      	ldrb	r2, [r0, #1]
2ffdc8ca:	2a01      	cmp	r2, #1
2ffdc8cc:	d801      	bhi.n	2ffdc8d2 <bl2_load_images+0xd6>
2ffdc8ce:	2160      	movs	r1, #96	; 0x60
2ffdc8d0:	e79a      	b.n	2ffdc808 <bl2_load_images+0xc>
2ffdc8d2:	689b      	ldr	r3, [r3, #8]
2ffdc8d4:	b90b      	cbnz	r3, 2ffdc8da <bl2_load_images+0xde>
2ffdc8d6:	2161      	movs	r1, #97	; 0x61
2ffdc8d8:	e796      	b.n	2ffdc808 <bl2_load_images+0xc>
2ffdc8da:	695a      	ldr	r2, [r3, #20]
2ffdc8dc:	b902      	cbnz	r2, 2ffdc8e0 <bl2_load_images+0xe4>
2ffdc8de:	6158      	str	r0, [r3, #20]
2ffdc8e0:	f7ff ff48 	bl	2ffdc774 <plat_flush_next_bl_params>
2ffdc8e4:	68a3      	ldr	r3, [r4, #8]
2ffdc8e6:	6898      	ldr	r0, [r3, #8]
2ffdc8e8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffdc8ec:	2ffe53f8 	.word	0x2ffe53f8
2ffdc8f0:	2ffe5435 	.word	0x2ffe5435
2ffdc8f4:	2ffe5451 	.word	0x2ffe5451
2ffdc8f8:	2ffe5480 	.word	0x2ffe5480
2ffdc8fc:	2ffe549b 	.word	0x2ffe549b
2ffdc900:	2ffe54bc 	.word	0x2ffe54bc
2ffdc904:	2ffe5410 	.word	0x2ffe5410
2ffdc908:	2ffe54ec 	.word	0x2ffe54ec

2ffdc90c <bl2_el3_setup>:
2ffdc90c:	b508      	push	{r3, lr}
2ffdc90e:	f7fb fa31 	bl	2ffd7d74 <bl2_el3_early_platform_setup>
2ffdc912:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffdc916:	f7fb ba7d 	b.w	2ffd7e14 <bl2_el3_plat_arch_setup>
	...

2ffdc91c <bl2_main>:
2ffdc91c:	b510      	push	{r4, lr}
2ffdc91e:	4c0f      	ldr	r4, [pc, #60]	; (2ffdc95c <bl2_main+0x40>)
2ffdc920:	490f      	ldr	r1, [pc, #60]	; (2ffdc960 <bl2_main+0x44>)
2ffdc922:	4620      	mov	r0, r4
2ffdc924:	f000 f8e2 	bl	2ffdcaec <tf_log>
2ffdc928:	490e      	ldr	r1, [pc, #56]	; (2ffdc964 <bl2_main+0x48>)
2ffdc92a:	4620      	mov	r0, r4
2ffdc92c:	f000 f8de 	bl	2ffdcaec <tf_log>
2ffdc930:	f000 f81c 	bl	2ffdc96c <bl2_arch_setup>
2ffdc934:	f7fb fce2 	bl	2ffd82fc <auth_mod_init>
2ffdc938:	f000 f999 	bl	2ffdcc6e <bl2_plat_preload_setup>
2ffdc93c:	f7ff ff5e 	bl	2ffdc7fc <bl2_load_images>
2ffdc940:	4604      	mov	r4, r0
2ffdc942:	4809      	ldr	r0, [pc, #36]	; (2ffdc968 <bl2_main+0x4c>)
2ffdc944:	f000 f8d2 	bl	2ffdcaec <tf_log>
2ffdc948:	4620      	mov	r0, r4
2ffdc94a:	f000 f8bf 	bl	2ffdcacc <print_entry_point_info>
2ffdc94e:	f000 f96b 	bl	2ffdcc28 <console_flush>
2ffdc952:	4620      	mov	r0, r4
2ffdc954:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffdc958:	f00a bb2a 	b.w	2ffe6fb0 <__bl2_run_next_image_from_thumb>
2ffdc95c:	2ffe550c 	.word	0x2ffe550c
2ffdc960:	2ffe33e6 	.word	0x2ffe33e6
2ffdc964:	2ffe33c8 	.word	0x2ffe33c8
2ffdc968:	2ffe5516 	.word	0x2ffe5516

2ffdc96c <bl2_arch_setup>:
2ffdc96c:	4770      	bx	lr
	...

2ffdc970 <load_auth_image_internal>:
2ffdc970:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffdc974:	b086      	sub	sp, #24
2ffdc976:	460d      	mov	r5, r1
2ffdc978:	a905      	add	r1, sp, #20
2ffdc97a:	4606      	mov	r6, r0
2ffdc97c:	4617      	mov	r7, r2
2ffdc97e:	f7fb fc9d 	bl	2ffd82bc <auth_mod_get_parent_id>
2ffdc982:	b930      	cbnz	r0, 2ffdc992 <load_auth_image_internal+0x22>
2ffdc984:	9805      	ldr	r0, [sp, #20]
2ffdc986:	2201      	movs	r2, #1
2ffdc988:	4629      	mov	r1, r5
2ffdc98a:	f7ff fff1 	bl	2ffdc970 <load_auth_image_internal>
2ffdc98e:	4604      	mov	r4, r0
2ffdc990:	b9b8      	cbnz	r0, 2ffdc9c2 <load_auth_image_internal+0x52>
2ffdc992:	b91d      	cbnz	r5, 2ffdc99c <load_auth_image_internal+0x2c>
2ffdc994:	2150      	movs	r1, #80	; 0x50
2ffdc996:	483c      	ldr	r0, [pc, #240]	; (2ffdca88 <load_auth_image_internal+0x118>)
2ffdc998:	f006 fabc 	bl	2ffe2f14 <__assert>
2ffdc99c:	786b      	ldrb	r3, [r5, #1]
2ffdc99e:	2b01      	cmp	r3, #1
2ffdc9a0:	d801      	bhi.n	2ffdc9a6 <load_auth_image_internal+0x36>
2ffdc9a2:	2151      	movs	r1, #81	; 0x51
2ffdc9a4:	e7f7      	b.n	2ffdc996 <load_auth_image_internal+0x26>
2ffdc9a6:	f8d5 8008 	ldr.w	r8, [r5, #8]
2ffdc9aa:	aa03      	add	r2, sp, #12
2ffdc9ac:	a901      	add	r1, sp, #4
2ffdc9ae:	4630      	mov	r0, r6
2ffdc9b0:	f7fb f97c 	bl	2ffd7cac <plat_get_image_source>
2ffdc9b4:	4604      	mov	r4, r0
2ffdc9b6:	b140      	cbz	r0, 2ffdc9ca <load_auth_image_internal+0x5a>
2ffdc9b8:	4602      	mov	r2, r0
2ffdc9ba:	4631      	mov	r1, r6
2ffdc9bc:	4833      	ldr	r0, [pc, #204]	; (2ffdca8c <load_auth_image_internal+0x11c>)
2ffdc9be:	f000 f895 	bl	2ffdcaec <tf_log>
2ffdc9c2:	4620      	mov	r0, r4
2ffdc9c4:	b006      	add	sp, #24
2ffdc9c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffdc9ca:	9903      	ldr	r1, [sp, #12]
2ffdc9cc:	aa02      	add	r2, sp, #8
2ffdc9ce:	9801      	ldr	r0, [sp, #4]
2ffdc9d0:	f7fa fb8c 	bl	2ffd70ec <io_open>
2ffdc9d4:	4604      	mov	r4, r0
2ffdc9d6:	b118      	cbz	r0, 2ffdc9e0 <load_auth_image_internal+0x70>
2ffdc9d8:	4602      	mov	r2, r0
2ffdc9da:	4631      	mov	r1, r6
2ffdc9dc:	482c      	ldr	r0, [pc, #176]	; (2ffdca90 <load_auth_image_internal+0x120>)
2ffdc9de:	e7ee      	b.n	2ffdc9be <load_auth_image_internal+0x4e>
2ffdc9e0:	482c      	ldr	r0, [pc, #176]	; (2ffdca94 <load_auth_image_internal+0x124>)
2ffdc9e2:	4642      	mov	r2, r8
2ffdc9e4:	4631      	mov	r1, r6
2ffdc9e6:	f000 f881 	bl	2ffdcaec <tf_log>
2ffdc9ea:	9802      	ldr	r0, [sp, #8]
2ffdc9ec:	a904      	add	r1, sp, #16
2ffdc9ee:	f7fa fbef 	bl	2ffd71d0 <io_size>
2ffdc9f2:	4604      	mov	r4, r0
2ffdc9f4:	b908      	cbnz	r0, 2ffdc9fa <load_auth_image_internal+0x8a>
2ffdc9f6:	9a04      	ldr	r2, [sp, #16]
2ffdc9f8:	b92a      	cbnz	r2, 2ffdca06 <load_auth_image_internal+0x96>
2ffdc9fa:	4827      	ldr	r0, [pc, #156]	; (2ffdca98 <load_auth_image_internal+0x128>)
2ffdc9fc:	4622      	mov	r2, r4
2ffdc9fe:	4631      	mov	r1, r6
2ffdca00:	f000 f874 	bl	2ffdcaec <tf_log>
2ffdca04:	e008      	b.n	2ffdca18 <load_auth_image_internal+0xa8>
2ffdca06:	692b      	ldr	r3, [r5, #16]
2ffdca08:	429a      	cmp	r2, r3
2ffdca0a:	d91f      	bls.n	2ffdca4c <load_auth_image_internal+0xdc>
2ffdca0c:	4823      	ldr	r0, [pc, #140]	; (2ffdca9c <load_auth_image_internal+0x12c>)
2ffdca0e:	4631      	mov	r1, r6
2ffdca10:	f06f 041a 	mvn.w	r4, #26
2ffdca14:	f000 f86a 	bl	2ffdcaec <tf_log>
2ffdca18:	9802      	ldr	r0, [sp, #8]
2ffdca1a:	f7fa fc17 	bl	2ffd724c <io_close>
2ffdca1e:	9801      	ldr	r0, [sp, #4]
2ffdca20:	f7fa fb4c 	bl	2ffd70bc <io_dev_close>
2ffdca24:	2c00      	cmp	r4, #0
2ffdca26:	d1cc      	bne.n	2ffdc9c2 <load_auth_image_internal+0x52>
2ffdca28:	68ea      	ldr	r2, [r5, #12]
2ffdca2a:	4630      	mov	r0, r6
2ffdca2c:	68a9      	ldr	r1, [r5, #8]
2ffdca2e:	f7fb fc79 	bl	2ffd8324 <auth_mod_verify_img>
2ffdca32:	4604      	mov	r4, r0
2ffdca34:	b308      	cbz	r0, 2ffdca7a <load_auth_image_internal+0x10a>
2ffdca36:	68e9      	ldr	r1, [r5, #12]
2ffdca38:	f06f 044f 	mvn.w	r4, #79	; 0x4f
2ffdca3c:	68a8      	ldr	r0, [r5, #8]
2ffdca3e:	f7f9 ed10 	blx	2ffd6460 <zero_normalmem>
2ffdca42:	68e9      	ldr	r1, [r5, #12]
2ffdca44:	68a8      	ldr	r0, [r5, #8]
2ffdca46:	f7f9 ecb2 	blx	2ffd63ac <flush_dcache_range>
2ffdca4a:	e7ba      	b.n	2ffdc9c2 <load_auth_image_internal+0x52>
2ffdca4c:	9802      	ldr	r0, [sp, #8]
2ffdca4e:	ab05      	add	r3, sp, #20
2ffdca50:	60ea      	str	r2, [r5, #12]
2ffdca52:	4641      	mov	r1, r8
2ffdca54:	f7fa fbd6 	bl	2ffd7204 <io_read>
2ffdca58:	4604      	mov	r4, r0
2ffdca5a:	b918      	cbnz	r0, 2ffdca64 <load_auth_image_internal+0xf4>
2ffdca5c:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
2ffdca60:	429a      	cmp	r2, r3
2ffdca62:	d203      	bcs.n	2ffdca6c <load_auth_image_internal+0xfc>
2ffdca64:	480e      	ldr	r0, [pc, #56]	; (2ffdcaa0 <load_auth_image_internal+0x130>)
2ffdca66:	4622      	mov	r2, r4
2ffdca68:	4631      	mov	r1, r6
2ffdca6a:	e7c9      	b.n	2ffdca00 <load_auth_image_internal+0x90>
2ffdca6c:	4443      	add	r3, r8
2ffdca6e:	4642      	mov	r2, r8
2ffdca70:	480c      	ldr	r0, [pc, #48]	; (2ffdcaa4 <load_auth_image_internal+0x134>)
2ffdca72:	4631      	mov	r1, r6
2ffdca74:	f000 f83a 	bl	2ffdcaec <tf_log>
2ffdca78:	e7ce      	b.n	2ffdca18 <load_auth_image_internal+0xa8>
2ffdca7a:	2f00      	cmp	r7, #0
2ffdca7c:	d1a1      	bne.n	2ffdc9c2 <load_auth_image_internal+0x52>
2ffdca7e:	68e9      	ldr	r1, [r5, #12]
2ffdca80:	68a8      	ldr	r0, [r5, #8]
2ffdca82:	f7f9 ec94 	blx	2ffd63ac <flush_dcache_range>
2ffdca86:	e79c      	b.n	2ffdc9c2 <load_auth_image_internal+0x52>
2ffdca88:	2ffe552a 	.word	0x2ffe552a
2ffdca8c:	2ffe42ec 	.word	0x2ffe42ec
2ffdca90:	2ffe431d 	.word	0x2ffe431d
2ffdca94:	2ffe553d 	.word	0x2ffe553d
2ffdca98:	2ffe5564 	.word	0x2ffe5564
2ffdca9c:	2ffe559b 	.word	0x2ffe559b
2ffdcaa0:	2ffe55bc 	.word	0x2ffe55bc
2ffdcaa4:	2ffe55de 	.word	0x2ffe55de

2ffdcaa8 <load_auth_image>:
2ffdcaa8:	b570      	push	{r4, r5, r6, lr}
2ffdcaaa:	4605      	mov	r5, r0
2ffdcaac:	460e      	mov	r6, r1
2ffdcaae:	2200      	movs	r2, #0
2ffdcab0:	4631      	mov	r1, r6
2ffdcab2:	4628      	mov	r0, r5
2ffdcab4:	f7ff ff5c 	bl	2ffdc970 <load_auth_image_internal>
2ffdcab8:	4604      	mov	r4, r0
2ffdcaba:	b120      	cbz	r0, 2ffdcac6 <load_auth_image+0x1e>
2ffdcabc:	4628      	mov	r0, r5
2ffdcabe:	f7fb f915 	bl	2ffd7cec <plat_try_next_boot_source>
2ffdcac2:	2800      	cmp	r0, #0
2ffdcac4:	d1f3      	bne.n	2ffdcaae <load_auth_image+0x6>
2ffdcac6:	4620      	mov	r0, r4
2ffdcac8:	bd70      	pop	{r4, r5, r6, pc}
	...

2ffdcacc <print_entry_point_info>:
2ffdcacc:	b510      	push	{r4, lr}
2ffdcace:	4604      	mov	r4, r0
2ffdcad0:	6881      	ldr	r1, [r0, #8]
2ffdcad2:	4804      	ldr	r0, [pc, #16]	; (2ffdcae4 <print_entry_point_info+0x18>)
2ffdcad4:	f000 f80a 	bl	2ffdcaec <tf_log>
2ffdcad8:	68e1      	ldr	r1, [r4, #12]
2ffdcada:	4803      	ldr	r0, [pc, #12]	; (2ffdcae8 <print_entry_point_info+0x1c>)
2ffdcadc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffdcae0:	f000 b804 	b.w	2ffdcaec <tf_log>
2ffdcae4:	2ffe5602 	.word	0x2ffe5602
2ffdcae8:	2ffe5620 	.word	0x2ffe5620

2ffdcaec <tf_log>:
2ffdcaec:	b40f      	push	{r0, r1, r2, r3}
2ffdcaee:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffdcaf0:	9d06      	ldr	r5, [sp, #24]
2ffdcaf2:	7828      	ldrb	r0, [r5, #0]
2ffdcaf4:	1e43      	subs	r3, r0, #1
2ffdcaf6:	2b31      	cmp	r3, #49	; 0x31
2ffdcaf8:	d903      	bls.n	2ffdcb02 <tf_log+0x16>
2ffdcafa:	2122      	movs	r1, #34	; 0x22
2ffdcafc:	4810      	ldr	r0, [pc, #64]	; (2ffdcb40 <tf_log+0x54>)
2ffdcafe:	f006 fa09 	bl	2ffe2f14 <__assert>
2ffdcb02:	220a      	movs	r2, #10
2ffdcb04:	fbb0 f3f2 	udiv	r3, r0, r2
2ffdcb08:	fb02 0313 	mls	r3, r2, r3, r0
2ffdcb0c:	b10b      	cbz	r3, 2ffdcb12 <tf_log+0x26>
2ffdcb0e:	2123      	movs	r1, #35	; 0x23
2ffdcb10:	e7f4      	b.n	2ffdcafc <tf_log+0x10>
2ffdcb12:	4b0c      	ldr	r3, [pc, #48]	; (2ffdcb44 <tf_log+0x58>)
2ffdcb14:	681b      	ldr	r3, [r3, #0]
2ffdcb16:	4283      	cmp	r3, r0
2ffdcb18:	d30a      	bcc.n	2ffdcb30 <tf_log+0x44>
2ffdcb1a:	f000 f8ab 	bl	2ffdcc74 <plat_log_get_prefix>
2ffdcb1e:	1e44      	subs	r4, r0, #1
2ffdcb20:	f814 0f01 	ldrb.w	r0, [r4, #1]!
2ffdcb24:	b948      	cbnz	r0, 2ffdcb3a <tf_log+0x4e>
2ffdcb26:	a907      	add	r1, sp, #28
2ffdcb28:	1c68      	adds	r0, r5, #1
2ffdcb2a:	9101      	str	r1, [sp, #4]
2ffdcb2c:	f006 fa84 	bl	2ffe3038 <vprintf>
2ffdcb30:	b003      	add	sp, #12
2ffdcb32:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2ffdcb36:	b004      	add	sp, #16
2ffdcb38:	4770      	bx	lr
2ffdcb3a:	f006 fb5a 	bl	2ffe31f2 <putchar>
2ffdcb3e:	e7ef      	b.n	2ffdcb20 <tf_log+0x34>
2ffdcb40:	2ffe562e 	.word	0x2ffe562e
2ffdcb44:	2ffe7188 	.word	0x2ffe7188

2ffdcb48 <console_is_registered>:
2ffdcb48:	b508      	push	{r3, lr}
2ffdcb4a:	4603      	mov	r3, r0
2ffdcb4c:	b918      	cbnz	r0, 2ffdcb56 <console_is_registered+0xe>
2ffdcb4e:	4807      	ldr	r0, [pc, #28]	; (2ffdcb6c <console_is_registered+0x24>)
2ffdcb50:	2134      	movs	r1, #52	; 0x34
2ffdcb52:	f006 f9df 	bl	2ffe2f14 <__assert>
2ffdcb56:	4a06      	ldr	r2, [pc, #24]	; (2ffdcb70 <console_is_registered+0x28>)
2ffdcb58:	6810      	ldr	r0, [r2, #0]
2ffdcb5a:	b900      	cbnz	r0, 2ffdcb5e <console_is_registered+0x16>
2ffdcb5c:	bd08      	pop	{r3, pc}
2ffdcb5e:	4298      	cmp	r0, r3
2ffdcb60:	d001      	beq.n	2ffdcb66 <console_is_registered+0x1e>
2ffdcb62:	6800      	ldr	r0, [r0, #0]
2ffdcb64:	e7f9      	b.n	2ffdcb5a <console_is_registered+0x12>
2ffdcb66:	2001      	movs	r0, #1
2ffdcb68:	e7f8      	b.n	2ffdcb5c <console_is_registered+0x14>
2ffdcb6a:	bf00      	nop
2ffdcb6c:	2ffe563e 	.word	0x2ffe563e
2ffdcb70:	2ffea3a0 	.word	0x2ffea3a0

2ffdcb74 <console_register>:
2ffdcb74:	4b0b      	ldr	r3, [pc, #44]	; (2ffdcba4 <console_register+0x30>)
2ffdcb76:	b510      	push	{r4, lr}
2ffdcb78:	4604      	mov	r4, r0
2ffdcb7a:	4298      	cmp	r0, r3
2ffdcb7c:	d306      	bcc.n	2ffdcb8c <console_register+0x18>
2ffdcb7e:	4b0a      	ldr	r3, [pc, #40]	; (2ffdcba8 <console_register+0x34>)
2ffdcb80:	4298      	cmp	r0, r3
2ffdcb82:	d203      	bcs.n	2ffdcb8c <console_register+0x18>
2ffdcb84:	4809      	ldr	r0, [pc, #36]	; (2ffdcbac <console_register+0x38>)
2ffdcb86:	2114      	movs	r1, #20
2ffdcb88:	f006 f9c4 	bl	2ffe2f14 <__assert>
2ffdcb8c:	4620      	mov	r0, r4
2ffdcb8e:	f7ff ffdb 	bl	2ffdcb48 <console_is_registered>
2ffdcb92:	2801      	cmp	r0, #1
2ffdcb94:	f04f 0001 	mov.w	r0, #1
2ffdcb98:	bf1f      	itttt	ne
2ffdcb9a:	4b05      	ldrne	r3, [pc, #20]	; (2ffdcbb0 <console_register+0x3c>)
2ffdcb9c:	681a      	ldrne	r2, [r3, #0]
2ffdcb9e:	6022      	strne	r2, [r4, #0]
2ffdcba0:	601c      	strne	r4, [r3, #0]
2ffdcba2:	bd10      	pop	{r4, pc}
2ffdcba4:	2ffe7200 	.word	0x2ffe7200
2ffdcba8:	2ffe7e00 	.word	0x2ffe7e00
2ffdcbac:	2ffe563e 	.word	0x2ffe563e
2ffdcbb0:	2ffea3a0 	.word	0x2ffea3a0

2ffdcbb4 <console_set_scope>:
2ffdcbb4:	b508      	push	{r3, lr}
2ffdcbb6:	b918      	cbnz	r0, 2ffdcbc0 <console_set_scope+0xc>
2ffdcbb8:	4804      	ldr	r0, [pc, #16]	; (2ffdcbcc <console_set_scope+0x18>)
2ffdcbba:	2144      	movs	r1, #68	; 0x44
2ffdcbbc:	f006 f9aa 	bl	2ffe2f14 <__assert>
2ffdcbc0:	6843      	ldr	r3, [r0, #4]
2ffdcbc2:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
2ffdcbc6:	4319      	orrs	r1, r3
2ffdcbc8:	6041      	str	r1, [r0, #4]
2ffdcbca:	bd08      	pop	{r3, pc}
2ffdcbcc:	2ffe563e 	.word	0x2ffe563e

2ffdcbd0 <console_putc>:
2ffdcbd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffdcbd2:	4606      	mov	r6, r0
2ffdcbd4:	4b12      	ldr	r3, [pc, #72]	; (2ffdcc20 <console_putc+0x50>)
2ffdcbd6:	f06f 057f 	mvn.w	r5, #127	; 0x7f
2ffdcbda:	4f12      	ldr	r7, [pc, #72]	; (2ffdcc24 <console_putc+0x54>)
2ffdcbdc:	681c      	ldr	r4, [r3, #0]
2ffdcbde:	b90c      	cbnz	r4, 2ffdcbe4 <console_putc+0x14>
2ffdcbe0:	4628      	mov	r0, r5
2ffdcbe2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffdcbe4:	6862      	ldr	r2, [r4, #4]
2ffdcbe6:	783b      	ldrb	r3, [r7, #0]
2ffdcbe8:	4213      	tst	r3, r2
2ffdcbea:	d00d      	beq.n	2ffdcc08 <console_putc+0x38>
2ffdcbec:	68a3      	ldr	r3, [r4, #8]
2ffdcbee:	b15b      	cbz	r3, 2ffdcc08 <console_putc+0x38>
2ffdcbf0:	2e0a      	cmp	r6, #10
2ffdcbf2:	d00b      	beq.n	2ffdcc0c <console_putc+0x3c>
2ffdcbf4:	68a3      	ldr	r3, [r4, #8]
2ffdcbf6:	4621      	mov	r1, r4
2ffdcbf8:	4630      	mov	r0, r6
2ffdcbfa:	4798      	blx	r3
2ffdcbfc:	f115 0f80 	cmn.w	r5, #128	; 0x80
2ffdcc00:	d00c      	beq.n	2ffdcc1c <console_putc+0x4c>
2ffdcc02:	4285      	cmp	r5, r0
2ffdcc04:	bfa8      	it	ge
2ffdcc06:	4605      	movge	r5, r0
2ffdcc08:	6824      	ldr	r4, [r4, #0]
2ffdcc0a:	e7e8      	b.n	2ffdcbde <console_putc+0xe>
2ffdcc0c:	05d2      	lsls	r2, r2, #23
2ffdcc0e:	d5f1      	bpl.n	2ffdcbf4 <console_putc+0x24>
2ffdcc10:	4621      	mov	r1, r4
2ffdcc12:	200d      	movs	r0, #13
2ffdcc14:	4798      	blx	r3
2ffdcc16:	2800      	cmp	r0, #0
2ffdcc18:	daec      	bge.n	2ffdcbf4 <console_putc+0x24>
2ffdcc1a:	e7ef      	b.n	2ffdcbfc <console_putc+0x2c>
2ffdcc1c:	4605      	mov	r5, r0
2ffdcc1e:	e7f3      	b.n	2ffdcc08 <console_putc+0x38>
2ffdcc20:	2ffea3a0 	.word	0x2ffea3a0
2ffdcc24:	2ffe718c 	.word	0x2ffe718c

2ffdcc28 <console_flush>:
2ffdcc28:	4b0d      	ldr	r3, [pc, #52]	; (2ffdcc60 <console_flush+0x38>)
2ffdcc2a:	b570      	push	{r4, r5, r6, lr}
2ffdcc2c:	f06f 057f 	mvn.w	r5, #127	; 0x7f
2ffdcc30:	681c      	ldr	r4, [r3, #0]
2ffdcc32:	4e0c      	ldr	r6, [pc, #48]	; (2ffdcc64 <console_flush+0x3c>)
2ffdcc34:	b90c      	cbnz	r4, 2ffdcc3a <console_flush+0x12>
2ffdcc36:	4628      	mov	r0, r5
2ffdcc38:	bd70      	pop	{r4, r5, r6, pc}
2ffdcc3a:	7832      	ldrb	r2, [r6, #0]
2ffdcc3c:	6863      	ldr	r3, [r4, #4]
2ffdcc3e:	421a      	tst	r2, r3
2ffdcc40:	d009      	beq.n	2ffdcc56 <console_flush+0x2e>
2ffdcc42:	6923      	ldr	r3, [r4, #16]
2ffdcc44:	b13b      	cbz	r3, 2ffdcc56 <console_flush+0x2e>
2ffdcc46:	4620      	mov	r0, r4
2ffdcc48:	4798      	blx	r3
2ffdcc4a:	f115 0f80 	cmn.w	r5, #128	; 0x80
2ffdcc4e:	d004      	beq.n	2ffdcc5a <console_flush+0x32>
2ffdcc50:	4285      	cmp	r5, r0
2ffdcc52:	bfa8      	it	ge
2ffdcc54:	4605      	movge	r5, r0
2ffdcc56:	6824      	ldr	r4, [r4, #0]
2ffdcc58:	e7ec      	b.n	2ffdcc34 <console_flush+0xc>
2ffdcc5a:	4605      	mov	r5, r0
2ffdcc5c:	e7fb      	b.n	2ffdcc56 <console_flush+0x2e>
2ffdcc5e:	bf00      	nop
2ffdcc60:	2ffea3a0 	.word	0x2ffea3a0
2ffdcc64:	2ffe718c 	.word	0x2ffe718c

2ffdcc68 <bl2_el3_plat_prepare_exit>:
2ffdcc68:	4770      	bx	lr

2ffdcc6a <plat_error_handler>:
2ffdcc6a:	bf30      	wfi
2ffdcc6c:	e7fd      	b.n	2ffdcc6a <plat_error_handler>

2ffdcc6e <bl2_plat_preload_setup>:
2ffdcc6e:	4770      	bx	lr

2ffdcc70 <bl2_plat_handle_pre_image_load>:
2ffdcc70:	2000      	movs	r0, #0
2ffdcc72:	4770      	bx	lr

2ffdcc74 <plat_log_get_prefix>:
2ffdcc74:	2832      	cmp	r0, #50	; 0x32
2ffdcc76:	f04f 030a 	mov.w	r3, #10
2ffdcc7a:	bf28      	it	cs
2ffdcc7c:	2032      	movcs	r0, #50	; 0x32
2ffdcc7e:	280a      	cmp	r0, #10
2ffdcc80:	bf38      	it	cc
2ffdcc82:	200a      	movcc	r0, #10
2ffdcc84:	fbb0 f0f3 	udiv	r0, r0, r3
2ffdcc88:	4b02      	ldr	r3, [pc, #8]	; (2ffdcc94 <plat_log_get_prefix+0x20>)
2ffdcc8a:	3801      	subs	r0, #1
2ffdcc8c:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2ffdcc90:	4770      	bx	lr
2ffdcc92:	bf00      	nop
2ffdcc94:	2ffe5690 	.word	0x2ffe5690

2ffdcc98 <__popcountsi2>:
2ffdcc98:	0843      	lsrs	r3, r0, #1
2ffdcc9a:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
2ffdcc9e:	1ac3      	subs	r3, r0, r3
2ffdcca0:	0898      	lsrs	r0, r3, #2
2ffdcca2:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
2ffdcca6:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
2ffdccaa:	4418      	add	r0, r3
2ffdccac:	eb00 1010 	add.w	r0, r0, r0, lsr #4
2ffdccb0:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
2ffdccb4:	eb00 4010 	add.w	r0, r0, r0, lsr #16
2ffdccb8:	eb00 2010 	add.w	r0, r0, r0, lsr #8
2ffdccbc:	f000 003f 	and.w	r0, r0, #63	; 0x3f
2ffdccc0:	4770      	bx	lr

2ffdccc2 <__ctzdi2>:
2ffdccc2:	fab0 f380 	clz	r3, r0
2ffdccc6:	095b      	lsrs	r3, r3, #5
2ffdccc8:	425a      	negs	r2, r3
2ffdccca:	3b01      	subs	r3, #1
2ffdcccc:	4003      	ands	r3, r0
2ffdccce:	4011      	ands	r1, r2
2ffdccd0:	430b      	orrs	r3, r1
2ffdccd2:	f002 0020 	and.w	r0, r2, #32
2ffdccd6:	fa93 f3a3 	rbit	r3, r3
2ffdccda:	fab3 f383 	clz	r3, r3
2ffdccde:	4418      	add	r0, r3
2ffdcce0:	4770      	bx	lr

2ffdcce2 <__udivmoddi4>:
2ffdcce2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffdcce6:	9e08      	ldr	r6, [sp, #32]
2ffdcce8:	b981      	cbnz	r1, 2ffdcd0c <__udivmoddi4+0x2a>
2ffdccea:	b953      	cbnz	r3, 2ffdcd02 <__udivmoddi4+0x20>
2ffdccec:	fbb0 f1f2 	udiv	r1, r0, r2
2ffdccf0:	b11e      	cbz	r6, 2ffdccfa <__udivmoddi4+0x18>
2ffdccf2:	fb01 0012 	mls	r0, r1, r2, r0
2ffdccf6:	e9c6 0300 	strd	r0, r3, [r6]
2ffdccfa:	4608      	mov	r0, r1
2ffdccfc:	2100      	movs	r1, #0
2ffdccfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffdcd02:	b10e      	cbz	r6, 2ffdcd08 <__udivmoddi4+0x26>
2ffdcd04:	e9c6 0100 	strd	r0, r1, [r6]
2ffdcd08:	4608      	mov	r0, r1
2ffdcd0a:	e7f8      	b.n	2ffdccfe <__udivmoddi4+0x1c>
2ffdcd0c:	2a00      	cmp	r2, #0
2ffdcd0e:	d164      	bne.n	2ffdcdda <__udivmoddi4+0xf8>
2ffdcd10:	b903      	cbnz	r3, 2ffdcd14 <__udivmoddi4+0x32>
2ffdcd12:	deff      	udf	#255	; 0xff
2ffdcd14:	b940      	cbnz	r0, 2ffdcd28 <__udivmoddi4+0x46>
2ffdcd16:	fbb1 f2f3 	udiv	r2, r1, r3
2ffdcd1a:	b11e      	cbz	r6, 2ffdcd24 <__udivmoddi4+0x42>
2ffdcd1c:	fb02 1113 	mls	r1, r2, r3, r1
2ffdcd20:	e9c6 0100 	strd	r0, r1, [r6]
2ffdcd24:	4610      	mov	r0, r2
2ffdcd26:	e7e9      	b.n	2ffdccfc <__udivmoddi4+0x1a>
2ffdcd28:	1e5c      	subs	r4, r3, #1
2ffdcd2a:	421c      	tst	r4, r3
2ffdcd2c:	d10a      	bne.n	2ffdcd44 <__udivmoddi4+0x62>
2ffdcd2e:	b116      	cbz	r6, 2ffdcd36 <__udivmoddi4+0x54>
2ffdcd30:	400c      	ands	r4, r1
2ffdcd32:	e9c6 0400 	strd	r0, r4, [r6]
2ffdcd36:	fa93 f0a3 	rbit	r0, r3
2ffdcd3a:	fab0 f080 	clz	r0, r0
2ffdcd3e:	fa21 f000 	lsr.w	r0, r1, r0
2ffdcd42:	e7db      	b.n	2ffdccfc <__udivmoddi4+0x1a>
2ffdcd44:	fab3 f483 	clz	r4, r3
2ffdcd48:	fab1 f581 	clz	r5, r1
2ffdcd4c:	1b64      	subs	r4, r4, r5
2ffdcd4e:	2c1e      	cmp	r4, #30
2ffdcd50:	d907      	bls.n	2ffdcd62 <__udivmoddi4+0x80>
2ffdcd52:	2e00      	cmp	r6, #0
2ffdcd54:	f000 8092 	beq.w	2ffdce7c <__udivmoddi4+0x19a>
2ffdcd58:	e9c6 0100 	strd	r0, r1, [r6]
2ffdcd5c:	2000      	movs	r0, #0
2ffdcd5e:	4601      	mov	r1, r0
2ffdcd60:	e7cd      	b.n	2ffdccfe <__udivmoddi4+0x1c>
2ffdcd62:	f104 0e01 	add.w	lr, r4, #1
2ffdcd66:	f1c4 041f 	rsb	r4, r4, #31
2ffdcd6a:	4694      	mov	ip, r2
2ffdcd6c:	fa00 f704 	lsl.w	r7, r0, r4
2ffdcd70:	fa01 f404 	lsl.w	r4, r1, r4
2ffdcd74:	fa20 f00e 	lsr.w	r0, r0, lr
2ffdcd78:	fa21 f80e 	lsr.w	r8, r1, lr
2ffdcd7c:	ea44 0100 	orr.w	r1, r4, r0
2ffdcd80:	f04f 0900 	mov.w	r9, #0
2ffdcd84:	ea4f 7ad7 	mov.w	sl, r7, lsr #31
2ffdcd88:	0fcd      	lsrs	r5, r1, #31
2ffdcd8a:	ea4f 70dc 	mov.w	r0, ip, lsr #31
2ffdcd8e:	ea4a 0441 	orr.w	r4, sl, r1, lsl #1
2ffdcd92:	ea40 0747 	orr.w	r7, r0, r7, lsl #1
2ffdcd96:	ea45 0048 	orr.w	r0, r5, r8, lsl #1
2ffdcd9a:	43e5      	mvns	r5, r4
2ffdcd9c:	43c1      	mvns	r1, r0
2ffdcd9e:	18ad      	adds	r5, r5, r2
2ffdcda0:	eb41 0503 	adc.w	r5, r1, r3
2ffdcda4:	ea49 0c4c 	orr.w	ip, r9, ip, lsl #1
2ffdcda8:	ea02 71e5 	and.w	r1, r2, r5, asr #31
2ffdcdac:	1a64      	subs	r4, r4, r1
2ffdcdae:	ea4f 79d5 	mov.w	r9, r5, lsr #31
2ffdcdb2:	4621      	mov	r1, r4
2ffdcdb4:	ea03 75e5 	and.w	r5, r3, r5, asr #31
2ffdcdb8:	eb60 0505 	sbc.w	r5, r0, r5
2ffdcdbc:	f1be 0e01 	subs.w	lr, lr, #1
2ffdcdc0:	46a8      	mov	r8, r5
2ffdcdc2:	d1df      	bne.n	2ffdcd84 <__udivmoddi4+0xa2>
2ffdcdc4:	eb1c 030c 	adds.w	r3, ip, ip
2ffdcdc8:	eb47 0107 	adc.w	r1, r7, r7
2ffdcdcc:	ea49 004c 	orr.w	r0, r9, ip, lsl #1
2ffdcdd0:	2e00      	cmp	r6, #0
2ffdcdd2:	d094      	beq.n	2ffdccfe <__udivmoddi4+0x1c>
2ffdcdd4:	e9c6 4500 	strd	r4, r5, [r6]
2ffdcdd8:	e791      	b.n	2ffdccfe <__udivmoddi4+0x1c>
2ffdcdda:	2b00      	cmp	r3, #0
2ffdcddc:	d13e      	bne.n	2ffdce5c <__udivmoddi4+0x17a>
2ffdcdde:	1e54      	subs	r4, r2, #1
2ffdcde0:	ea14 0502 	ands.w	r5, r4, r2
2ffdcde4:	d112      	bne.n	2ffdce0c <__udivmoddi4+0x12a>
2ffdcde6:	b116      	cbz	r6, 2ffdcdee <__udivmoddi4+0x10c>
2ffdcde8:	4004      	ands	r4, r0
2ffdcdea:	e9c6 4500 	strd	r4, r5, [r6]
2ffdcdee:	2a01      	cmp	r2, #1
2ffdcdf0:	d085      	beq.n	2ffdccfe <__udivmoddi4+0x1c>
2ffdcdf2:	fa92 f2a2 	rbit	r2, r2
2ffdcdf6:	fab2 f282 	clz	r2, r2
2ffdcdfa:	f1c2 0420 	rsb	r4, r2, #32
2ffdcdfe:	fa21 f702 	lsr.w	r7, r1, r2
2ffdce02:	40d0      	lsrs	r0, r2
2ffdce04:	40a1      	lsls	r1, r4
2ffdce06:	4308      	orrs	r0, r1
2ffdce08:	4639      	mov	r1, r7
2ffdce0a:	e778      	b.n	2ffdccfe <__udivmoddi4+0x1c>
2ffdce0c:	fab1 f481 	clz	r4, r1
2ffdce10:	fab2 f582 	clz	r5, r2
2ffdce14:	1b2d      	subs	r5, r5, r4
2ffdce16:	1c6c      	adds	r4, r5, #1
2ffdce18:	f105 0e21 	add.w	lr, r5, #33	; 0x21
2ffdce1c:	d103      	bne.n	2ffdce26 <__udivmoddi4+0x144>
2ffdce1e:	469c      	mov	ip, r3
2ffdce20:	4607      	mov	r7, r0
2ffdce22:	4698      	mov	r8, r3
2ffdce24:	e7ac      	b.n	2ffdcd80 <__udivmoddi4+0x9e>
2ffdce26:	f1be 0f1f 	cmp.w	lr, #31
2ffdce2a:	d80b      	bhi.n	2ffdce44 <__udivmoddi4+0x162>
2ffdce2c:	469c      	mov	ip, r3
2ffdce2e:	fa21 f80e 	lsr.w	r8, r1, lr
2ffdce32:	f1ce 0420 	rsb	r4, lr, #32
2ffdce36:	fa00 f704 	lsl.w	r7, r0, r4
2ffdce3a:	40a1      	lsls	r1, r4
2ffdce3c:	fa20 f00e 	lsr.w	r0, r0, lr
2ffdce40:	4301      	orrs	r1, r0
2ffdce42:	e79d      	b.n	2ffdcd80 <__udivmoddi4+0x9e>
2ffdce44:	f1ce 0440 	rsb	r4, lr, #64	; 0x40
2ffdce48:	3501      	adds	r5, #1
2ffdce4a:	4698      	mov	r8, r3
2ffdce4c:	fa01 f704 	lsl.w	r7, r1, r4
2ffdce50:	fa00 fc04 	lsl.w	ip, r0, r4
2ffdce54:	40e8      	lsrs	r0, r5
2ffdce56:	4307      	orrs	r7, r0
2ffdce58:	40e9      	lsrs	r1, r5
2ffdce5a:	e791      	b.n	2ffdcd80 <__udivmoddi4+0x9e>
2ffdce5c:	fab3 f483 	clz	r4, r3
2ffdce60:	fab1 f581 	clz	r5, r1
2ffdce64:	1b64      	subs	r4, r4, r5
2ffdce66:	2c1f      	cmp	r4, #31
2ffdce68:	f63f af73 	bhi.w	2ffdcd52 <__udivmoddi4+0x70>
2ffdce6c:	f104 0e01 	add.w	lr, r4, #1
2ffdce70:	f04f 0c00 	mov.w	ip, #0
2ffdce74:	d1db      	bne.n	2ffdce2e <__udivmoddi4+0x14c>
2ffdce76:	4607      	mov	r7, r0
2ffdce78:	46e0      	mov	r8, ip
2ffdce7a:	e781      	b.n	2ffdcd80 <__udivmoddi4+0x9e>
2ffdce7c:	4630      	mov	r0, r6
2ffdce7e:	e76e      	b.n	2ffdcd5e <__udivmoddi4+0x7c>

2ffdce80 <plat_get_syscnt_freq2>:
2ffdce80:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdce84:	4770      	bx	lr
	...

2ffdce88 <stm32mp_save_boot_ctx_address>:
2ffdce88:	4b01      	ldr	r3, [pc, #4]	; (2ffdce90 <stm32mp_save_boot_ctx_address+0x8>)
2ffdce8a:	6018      	str	r0, [r3, #0]
2ffdce8c:	4770      	bx	lr
2ffdce8e:	bf00      	nop
2ffdce90:	2ffe8f08 	.word	0x2ffe8f08

2ffdce94 <stm32mp_get_boot_ctx_address>:
2ffdce94:	4b01      	ldr	r3, [pc, #4]	; (2ffdce9c <stm32mp_get_boot_ctx_address+0x8>)
2ffdce96:	6818      	ldr	r0, [r3, #0]
2ffdce98:	4770      	bx	lr
2ffdce9a:	bf00      	nop
2ffdce9c:	2ffe8f08 	.word	0x2ffe8f08

2ffdcea0 <stm32mp_ddrctrl_base>:
2ffdcea0:	4800      	ldr	r0, [pc, #0]	; (2ffdcea4 <stm32mp_ddrctrl_base+0x4>)
2ffdcea2:	4770      	bx	lr
2ffdcea4:	5a003000 	.word	0x5a003000

2ffdcea8 <stm32mp_ddrphyc_base>:
2ffdcea8:	4800      	ldr	r0, [pc, #0]	; (2ffdceac <stm32mp_ddrphyc_base+0x4>)
2ffdceaa:	4770      	bx	lr
2ffdceac:	5a004000 	.word	0x5a004000

2ffdceb0 <stm32mp_pwr_base>:
2ffdceb0:	4800      	ldr	r0, [pc, #0]	; (2ffdceb4 <stm32mp_pwr_base+0x4>)
2ffdceb2:	4770      	bx	lr
2ffdceb4:	50001000 	.word	0x50001000

2ffdceb8 <stm32mp_rcc_base>:
2ffdceb8:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
2ffdcebc:	4770      	bx	lr

2ffdcebe <stm32mp_lock_available>:
2ffdcebe:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffdcec2:	f000 0005 	and.w	r0, r0, #5
2ffdcec6:	1f43      	subs	r3, r0, #5
2ffdcec8:	4258      	negs	r0, r3
2ffdceca:	4158      	adcs	r0, r3
2ffdcecc:	4770      	bx	lr
	...

2ffdced0 <stm32_get_gpio_bank_base>:
2ffdced0:	2819      	cmp	r0, #25
2ffdced2:	b508      	push	{r3, lr}
2ffdced4:	d00a      	beq.n	2ffdceec <stm32_get_gpio_bank_base+0x1c>
2ffdced6:	280a      	cmp	r0, #10
2ffdced8:	d903      	bls.n	2ffdcee2 <stm32_get_gpio_bank_base+0x12>
2ffdceda:	4805      	ldr	r0, [pc, #20]	; (2ffdcef0 <stm32_get_gpio_bank_base+0x20>)
2ffdcedc:	2164      	movs	r1, #100	; 0x64
2ffdcede:	f006 f819 	bl	2ffe2f14 <__assert>
2ffdcee2:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
2ffdcee6:	3002      	adds	r0, #2
2ffdcee8:	0300      	lsls	r0, r0, #12
2ffdceea:	bd08      	pop	{r3, pc}
2ffdceec:	4801      	ldr	r0, [pc, #4]	; (2ffdcef4 <stm32_get_gpio_bank_base+0x24>)
2ffdceee:	e7fc      	b.n	2ffdceea <stm32_get_gpio_bank_base+0x1a>
2ffdcef0:	2ffe56a4 	.word	0x2ffe56a4
2ffdcef4:	54004000 	.word	0x54004000

2ffdcef8 <stm32_get_gpio_bank_offset>:
2ffdcef8:	2819      	cmp	r0, #25
2ffdcefa:	b508      	push	{r3, lr}
2ffdcefc:	d007      	beq.n	2ffdcf0e <stm32_get_gpio_bank_offset+0x16>
2ffdcefe:	280a      	cmp	r0, #10
2ffdcf00:	d903      	bls.n	2ffdcf0a <stm32_get_gpio_bank_offset+0x12>
2ffdcf02:	4804      	ldr	r0, [pc, #16]	; (2ffdcf14 <stm32_get_gpio_bank_offset+0x1c>)
2ffdcf04:	216f      	movs	r1, #111	; 0x6f
2ffdcf06:	f006 f805 	bl	2ffe2f14 <__assert>
2ffdcf0a:	0300      	lsls	r0, r0, #12
2ffdcf0c:	bd08      	pop	{r3, pc}
2ffdcf0e:	2000      	movs	r0, #0
2ffdcf10:	e7fc      	b.n	2ffdcf0c <stm32_get_gpio_bank_offset+0x14>
2ffdcf12:	bf00      	nop
2ffdcf14:	2ffe56a4 	.word	0x2ffe56a4

2ffdcf18 <stm32mp_check_header>:
2ffdcf18:	460a      	mov	r2, r1
2ffdcf1a:	b538      	push	{r3, r4, r5, lr}
2ffdcf1c:	7841      	ldrb	r1, [r0, #1]
2ffdcf1e:	7803      	ldrb	r3, [r0, #0]
2ffdcf20:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
2ffdcf24:	7881      	ldrb	r1, [r0, #2]
2ffdcf26:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffdcf2a:	78c1      	ldrb	r1, [r0, #3]
2ffdcf2c:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
2ffdcf30:	4925      	ldr	r1, [pc, #148]	; (2ffdcfc8 <stm32mp_check_header+0xb0>)
2ffdcf32:	428b      	cmp	r3, r1
2ffdcf34:	d005      	beq.n	2ffdcf42 <stm32mp_check_header+0x2a>
2ffdcf36:	4825      	ldr	r0, [pc, #148]	; (2ffdcfcc <stm32mp_check_header+0xb4>)
2ffdcf38:	f7ff fdd8 	bl	2ffdcaec <tf_log>
2ffdcf3c:	f06f 0015 	mvn.w	r0, #21
2ffdcf40:	bd38      	pop	{r3, r4, r5, pc}
2ffdcf42:	f890 304a 	ldrb.w	r3, [r0, #74]	; 0x4a
2ffdcf46:	2b01      	cmp	r3, #1
2ffdcf48:	d001      	beq.n	2ffdcf4e <stm32mp_check_header+0x36>
2ffdcf4a:	4821      	ldr	r0, [pc, #132]	; (2ffdcfd0 <stm32mp_check_header+0xb8>)
2ffdcf4c:	e7f4      	b.n	2ffdcf38 <stm32mp_check_header+0x20>
2ffdcf4e:	f890 1065 	ldrb.w	r1, [r0, #101]	; 0x65
2ffdcf52:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
2ffdcf56:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
2ffdcf5a:	f890 1066 	ldrb.w	r1, [r0, #102]	; 0x66
2ffdcf5e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffdcf62:	f890 1067 	ldrb.w	r1, [r0, #103]	; 0x67
2ffdcf66:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
2ffdcf6a:	2b01      	cmp	r3, #1
2ffdcf6c:	d129      	bne.n	2ffdcfc2 <stm32mp_check_header+0xaa>
2ffdcf6e:	f890 104d 	ldrb.w	r1, [r0, #77]	; 0x4d
2ffdcf72:	f890 304c 	ldrb.w	r3, [r0, #76]	; 0x4c
2ffdcf76:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
2ffdcf7a:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
2ffdcf7e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffdcf82:	f890 104f 	ldrb.w	r1, [r0, #79]	; 0x4f
2ffdcf86:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
2ffdcf8a:	2100      	movs	r1, #0
2ffdcf8c:	460c      	mov	r4, r1
2ffdcf8e:	42a3      	cmp	r3, r4
2ffdcf90:	d113      	bne.n	2ffdcfba <stm32mp_check_header+0xa2>
2ffdcf92:	f890 3045 	ldrb.w	r3, [r0, #69]	; 0x45
2ffdcf96:	f890 2044 	ldrb.w	r2, [r0, #68]	; 0x44
2ffdcf9a:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
2ffdcf9e:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
2ffdcfa2:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
2ffdcfa6:	f890 3047 	ldrb.w	r3, [r0, #71]	; 0x47
2ffdcfaa:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
2ffdcfae:	428a      	cmp	r2, r1
2ffdcfb0:	d007      	beq.n	2ffdcfc2 <stm32mp_check_header+0xaa>
2ffdcfb2:	4808      	ldr	r0, [pc, #32]	; (2ffdcfd4 <stm32mp_check_header+0xbc>)
2ffdcfb4:	f7ff fd9a 	bl	2ffdcaec <tf_log>
2ffdcfb8:	e7c0      	b.n	2ffdcf3c <stm32mp_check_header+0x24>
2ffdcfba:	5ca5      	ldrb	r5, [r4, r2]
2ffdcfbc:	3401      	adds	r4, #1
2ffdcfbe:	4429      	add	r1, r5
2ffdcfc0:	e7e5      	b.n	2ffdcf8e <stm32mp_check_header+0x76>
2ffdcfc2:	2000      	movs	r0, #0
2ffdcfc4:	e7bc      	b.n	2ffdcf40 <stm32mp_check_header+0x28>
2ffdcfc6:	bf00      	nop
2ffdcfc8:	324d5453 	.word	0x324d5453
2ffdcfcc:	2ffe56c4 	.word	0x2ffe56c4
2ffdcfd0:	2ffe56d3 	.word	0x2ffe56d3
2ffdcfd4:	2ffe56e4 	.word	0x2ffe56e4

2ffdcfd8 <stm32mp_get_cpu_supply_name>:
2ffdcfd8:	b513      	push	{r0, r1, r4, lr}
2ffdcfda:	2300      	movs	r3, #0
2ffdcfdc:	9301      	str	r3, [sp, #4]
2ffdcfde:	f005 f97f 	bl	2ffe22e0 <dt_get_cpu_regulator_name>
2ffdcfe2:	4604      	mov	r4, r0
2ffdcfe4:	b910      	cbnz	r0, 2ffdcfec <stm32mp_get_cpu_supply_name+0x14>
2ffdcfe6:	2000      	movs	r0, #0
2ffdcfe8:	b002      	add	sp, #8
2ffdcfea:	bd10      	pop	{r4, pc}
2ffdcfec:	f004 fad0 	bl	2ffe1590 <dt_pmic_status>
2ffdcff0:	2800      	cmp	r0, #0
2ffdcff2:	dc01      	bgt.n	2ffdcff8 <stm32mp_get_cpu_supply_name+0x20>
2ffdcff4:	9801      	ldr	r0, [sp, #4]
2ffdcff6:	e7f7      	b.n	2ffdcfe8 <stm32mp_get_cpu_supply_name+0x10>
2ffdcff8:	4621      	mov	r1, r4
2ffdcffa:	a801      	add	r0, sp, #4
2ffdcffc:	f004 fae2 	bl	2ffe15c4 <dt_pmic_find_supply>
2ffdd000:	2800      	cmp	r0, #0
2ffdd002:	d0f7      	beq.n	2ffdcff4 <stm32mp_get_cpu_supply_name+0x1c>
2ffdd004:	e7ef      	b.n	2ffdcfe6 <stm32mp_get_cpu_supply_name+0xe>
	...

2ffdd008 <stm32mp_save_loaded_header>:
2ffdd008:	b508      	push	{r3, lr}
2ffdd00a:	4b04      	ldr	r3, [pc, #16]	; (2ffdd01c <stm32mp_save_loaded_header+0x14>)
2ffdd00c:	681a      	ldr	r2, [r3, #0]
2ffdd00e:	b11a      	cbz	r2, 2ffdd018 <stm32mp_save_loaded_header+0x10>
2ffdd010:	4803      	ldr	r0, [pc, #12]	; (2ffdd020 <stm32mp_save_loaded_header+0x18>)
2ffdd012:	21b4      	movs	r1, #180	; 0xb4
2ffdd014:	f005 ff7e 	bl	2ffe2f14 <__assert>
2ffdd018:	6018      	str	r0, [r3, #0]
2ffdd01a:	bd08      	pop	{r3, pc}
2ffdd01c:	2ffe8f0c 	.word	0x2ffe8f0c
2ffdd020:	2ffe56a4 	.word	0x2ffe56a4

2ffdd024 <stm32mp_delete_loaded_header>:
2ffdd024:	b510      	push	{r4, lr}
2ffdd026:	4c05      	ldr	r4, [pc, #20]	; (2ffdd03c <stm32mp_delete_loaded_header+0x18>)
2ffdd028:	6820      	ldr	r0, [r4, #0]
2ffdd02a:	b128      	cbz	r0, 2ffdd038 <stm32mp_delete_loaded_header+0x14>
2ffdd02c:	f44f 7180 	mov.w	r1, #256	; 0x100
2ffdd030:	f7f9 ea16 	blx	2ffd6460 <zero_normalmem>
2ffdd034:	2300      	movs	r3, #0
2ffdd036:	6023      	str	r3, [r4, #0]
2ffdd038:	bd10      	pop	{r4, pc}
2ffdd03a:	bf00      	nop
2ffdd03c:	2ffe8f0c 	.word	0x2ffe8f0c

2ffdd040 <stm32mp_get_loaded_header>:
2ffdd040:	b508      	push	{r3, lr}
2ffdd042:	4b04      	ldr	r3, [pc, #16]	; (2ffdd054 <stm32mp_get_loaded_header+0x14>)
2ffdd044:	6818      	ldr	r0, [r3, #0]
2ffdd046:	b918      	cbnz	r0, 2ffdd050 <stm32mp_get_loaded_header+0x10>
2ffdd048:	4803      	ldr	r0, [pc, #12]	; (2ffdd058 <stm32mp_get_loaded_header+0x18>)
2ffdd04a:	21c7      	movs	r1, #199	; 0xc7
2ffdd04c:	f005 ff62 	bl	2ffe2f14 <__assert>
2ffdd050:	bd08      	pop	{r3, pc}
2ffdd052:	bf00      	nop
2ffdd054:	2ffe8f0c 	.word	0x2ffe8f0c
2ffdd058:	2ffe56a4 	.word	0x2ffe56a4

2ffdd05c <configure_mmu>:
2ffdd05c:	4805      	ldr	r0, [pc, #20]	; (2ffdd074 <configure_mmu+0x18>)
2ffdd05e:	b508      	push	{r3, lr}
2ffdd060:	f000 fb46 	bl	2ffdd6f0 <mmap_add>
2ffdd064:	f000 fb66 	bl	2ffdd734 <init_xlat_tables>
2ffdd068:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffdd06c:	2000      	movs	r0, #0
2ffdd06e:	f000 bb7f 	b.w	2ffdd770 <enable_mmu_svc_mon>
2ffdd072:	bf00      	nop
2ffdd074:	2ffe5890 	.word	0x2ffe5890

2ffdd078 <stm32_get_gpio_bank_clock>:
2ffdd078:	2819      	cmp	r0, #25
2ffdd07a:	b508      	push	{r3, lr}
2ffdd07c:	d008      	beq.n	2ffdd090 <stm32_get_gpio_bank_clock+0x18>
2ffdd07e:	280a      	cmp	r0, #10
2ffdd080:	d904      	bls.n	2ffdd08c <stm32_get_gpio_bank_clock+0x14>
2ffdd082:	4804      	ldr	r0, [pc, #16]	; (2ffdd094 <stm32_get_gpio_bank_clock+0x1c>)
2ffdd084:	f240 112b 	movw	r1, #299	; 0x12b
2ffdd088:	f005 ff44 	bl	2ffe2f14 <__assert>
2ffdd08c:	3054      	adds	r0, #84	; 0x54
2ffdd08e:	bd08      	pop	{r3, pc}
2ffdd090:	205f      	movs	r0, #95	; 0x5f
2ffdd092:	e7fc      	b.n	2ffdd08e <stm32_get_gpio_bank_clock+0x16>
2ffdd094:	2ffe5705 	.word	0x2ffe5705

2ffdd098 <stm32_get_otp_index>:
2ffdd098:	b508      	push	{r3, lr}
2ffdd09a:	b920      	cbnz	r0, 2ffdd0a6 <stm32_get_otp_index+0xe>
2ffdd09c:	f240 1133 	movw	r1, #307	; 0x133
2ffdd0a0:	4806      	ldr	r0, [pc, #24]	; (2ffdd0bc <stm32_get_otp_index+0x24>)
2ffdd0a2:	f005 ff37 	bl	2ffe2f14 <__assert>
2ffdd0a6:	b911      	cbnz	r1, 2ffdd0ae <stm32_get_otp_index+0x16>
2ffdd0a8:	f44f 719a 	mov.w	r1, #308	; 0x134
2ffdd0ac:	e7f8      	b.n	2ffdd0a0 <stm32_get_otp_index+0x8>
2ffdd0ae:	f001 fa41 	bl	2ffde534 <bsec_find_otp_name_in_dt>
2ffdd0b2:	3800      	subs	r0, #0
2ffdd0b4:	bf18      	it	ne
2ffdd0b6:	2001      	movne	r0, #1
2ffdd0b8:	4240      	negs	r0, r0
2ffdd0ba:	bd08      	pop	{r3, pc}
2ffdd0bc:	2ffe5705 	.word	0x2ffe5705

2ffdd0c0 <stm32_get_otp_value_from_idx>:
2ffdd0c0:	b510      	push	{r4, lr}
2ffdd0c2:	4604      	mov	r4, r0
2ffdd0c4:	4608      	mov	r0, r1
2ffdd0c6:	b921      	cbnz	r1, 2ffdd0d2 <stm32_get_otp_value_from_idx+0x12>
2ffdd0c8:	4807      	ldr	r0, [pc, #28]	; (2ffdd0e8 <stm32_get_otp_value_from_idx+0x28>)
2ffdd0ca:	f44f 71aa 	mov.w	r1, #340	; 0x154
2ffdd0ce:	f005 ff21 	bl	2ffe2f14 <__assert>
2ffdd0d2:	4621      	mov	r1, r4
2ffdd0d4:	f001 fcae 	bl	2ffdea34 <bsec_shadow_read_otp>
2ffdd0d8:	b128      	cbz	r0, 2ffdd0e6 <stm32_get_otp_value_from_idx+0x26>
2ffdd0da:	4804      	ldr	r0, [pc, #16]	; (2ffdd0ec <stm32_get_otp_value_from_idx+0x2c>)
2ffdd0dc:	4621      	mov	r1, r4
2ffdd0de:	f7ff fd05 	bl	2ffdcaec <tf_log>
2ffdd0e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffdd0e6:	bd10      	pop	{r4, pc}
2ffdd0e8:	2ffe5705 	.word	0x2ffe5705
2ffdd0ec:	2ffe5729 	.word	0x2ffe5729

2ffdd0f0 <stm32_get_otp_value>:
2ffdd0f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffdd0f2:	460d      	mov	r5, r1
2ffdd0f4:	4604      	mov	r4, r0
2ffdd0f6:	b920      	cbnz	r0, 2ffdd102 <stm32_get_otp_value+0x12>
2ffdd0f8:	f240 1141 	movw	r1, #321	; 0x141
2ffdd0fc:	480c      	ldr	r0, [pc, #48]	; (2ffdd130 <stm32_get_otp_value+0x40>)
2ffdd0fe:	f005 ff09 	bl	2ffe2f14 <__assert>
2ffdd102:	b911      	cbnz	r1, 2ffdd10a <stm32_get_otp_value+0x1a>
2ffdd104:	f44f 71a1 	mov.w	r1, #322	; 0x142
2ffdd108:	e7f8      	b.n	2ffdd0fc <stm32_get_otp_value+0xc>
2ffdd10a:	2200      	movs	r2, #0
2ffdd10c:	a901      	add	r1, sp, #4
2ffdd10e:	f7ff ffc3 	bl	2ffdd098 <stm32_get_otp_index>
2ffdd112:	b940      	cbnz	r0, 2ffdd126 <stm32_get_otp_value+0x36>
2ffdd114:	9801      	ldr	r0, [sp, #4]
2ffdd116:	4629      	mov	r1, r5
2ffdd118:	f7ff ffd2 	bl	2ffdd0c0 <stm32_get_otp_value_from_idx>
2ffdd11c:	b128      	cbz	r0, 2ffdd12a <stm32_get_otp_value+0x3a>
2ffdd11e:	4805      	ldr	r0, [pc, #20]	; (2ffdd134 <stm32_get_otp_value+0x44>)
2ffdd120:	4621      	mov	r1, r4
2ffdd122:	f7ff fce3 	bl	2ffdcaec <tf_log>
2ffdd126:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffdd12a:	b003      	add	sp, #12
2ffdd12c:	bd30      	pop	{r4, r5, pc}
2ffdd12e:	bf00      	nop
2ffdd130:	2ffe5705 	.word	0x2ffe5705
2ffdd134:	2ffe5743 	.word	0x2ffe5743

2ffdd138 <get_part_number>:
2ffdd138:	b513      	push	{r0, r1, r4, lr}
2ffdd13a:	4c0f      	ldr	r4, [pc, #60]	; (2ffdd178 <get_part_number+0x40>)
2ffdd13c:	6820      	ldr	r0, [r4, #0]
2ffdd13e:	b9c0      	cbnz	r0, 2ffdd172 <get_part_number+0x3a>
2ffdd140:	a801      	add	r0, sp, #4
2ffdd142:	f005 f9b3 	bl	2ffe24ac <stm32mp1_dbgmcu_get_chip_dev_id>
2ffdd146:	2800      	cmp	r0, #0
2ffdd148:	da05      	bge.n	2ffdd156 <get_part_number+0x1e>
2ffdd14a:	480c      	ldr	r0, [pc, #48]	; (2ffdd17c <get_part_number+0x44>)
2ffdd14c:	f7ff fcce 	bl	2ffdcaec <tf_log>
2ffdd150:	f44f 63a0 	mov.w	r3, #1280	; 0x500
2ffdd154:	9301      	str	r3, [sp, #4]
2ffdd156:	4908      	ldr	r1, [pc, #32]	; (2ffdd178 <get_part_number+0x40>)
2ffdd158:	4809      	ldr	r0, [pc, #36]	; (2ffdd180 <get_part_number+0x48>)
2ffdd15a:	f7ff ffc9 	bl	2ffdd0f0 <stm32_get_otp_value>
2ffdd15e:	b118      	cbz	r0, 2ffdd168 <get_part_number+0x30>
2ffdd160:	f7ff fd62 	bl	2ffdcc28 <console_flush>
2ffdd164:	f7f9 e87c 	blx	2ffd6260 <do_panic>
2ffdd168:	7820      	ldrb	r0, [r4, #0]
2ffdd16a:	9b01      	ldr	r3, [sp, #4]
2ffdd16c:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
2ffdd170:	6020      	str	r0, [r4, #0]
2ffdd172:	b002      	add	sp, #8
2ffdd174:	bd10      	pop	{r4, pc}
2ffdd176:	bf00      	nop
2ffdd178:	2ffe8f10 	.word	0x2ffe8f10
2ffdd17c:	2ffe5759 	.word	0x2ffe5759
2ffdd180:	2ffe577f 	.word	0x2ffe577f

2ffdd184 <stm32mp_supports_cpu_opp>:
2ffdd184:	1e43      	subs	r3, r0, #1
2ffdd186:	2b01      	cmp	r3, #1
2ffdd188:	b510      	push	{r4, lr}
2ffdd18a:	4604      	mov	r4, r0
2ffdd18c:	d814      	bhi.n	2ffdd1b8 <stm32mp_supports_cpu_opp+0x34>
2ffdd18e:	f7ff ffd3 	bl	2ffdd138 <get_part_number>
2ffdd192:	4b0b      	ldr	r3, [pc, #44]	; (2ffdd1c0 <stm32mp_supports_cpu_opp+0x3c>)
2ffdd194:	4298      	cmp	r0, r3
2ffdd196:	d80b      	bhi.n	2ffdd1b0 <stm32mp_supports_cpu_opp+0x2c>
2ffdd198:	3b02      	subs	r3, #2
2ffdd19a:	4298      	cmp	r0, r3
2ffdd19c:	d80e      	bhi.n	2ffdd1bc <stm32mp_supports_cpu_opp+0x38>
2ffdd19e:	f100 437b 	add.w	r3, r0, #4211081216	; 0xfb000000
2ffdd1a2:	3b80      	subs	r3, #128	; 0x80
2ffdd1a4:	2b01      	cmp	r3, #1
2ffdd1a6:	d909      	bls.n	2ffdd1bc <stm32mp_supports_cpu_opp+0x38>
2ffdd1a8:	1e63      	subs	r3, r4, #1
2ffdd1aa:	4258      	negs	r0, r3
2ffdd1ac:	4158      	adcs	r0, r3
2ffdd1ae:	bd10      	pop	{r4, pc}
2ffdd1b0:	f100 437b 	add.w	r3, r0, #4211081216	; 0xfb000000
2ffdd1b4:	3bae      	subs	r3, #174	; 0xae
2ffdd1b6:	e7f5      	b.n	2ffdd1a4 <stm32mp_supports_cpu_opp+0x20>
2ffdd1b8:	2000      	movs	r0, #0
2ffdd1ba:	e7f8      	b.n	2ffdd1ae <stm32mp_supports_cpu_opp+0x2a>
2ffdd1bc:	2001      	movs	r0, #1
2ffdd1be:	e7f6      	b.n	2ffdd1ae <stm32mp_supports_cpu_opp+0x2a>
2ffdd1c0:	050000a5 	.word	0x050000a5

2ffdd1c4 <stm32mp_print_cpuinfo>:
2ffdd1c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffdd1c6:	f7ff ffb7 	bl	2ffdd138 <get_part_number>
2ffdd1ca:	4b3d      	ldr	r3, [pc, #244]	; (2ffdd2c0 <stm32mp_print_cpuinfo+0xfc>)
2ffdd1cc:	4298      	cmp	r0, r3
2ffdd1ce:	d046      	beq.n	2ffdd25e <stm32mp_print_cpuinfo+0x9a>
2ffdd1d0:	d833      	bhi.n	2ffdd23a <stm32mp_print_cpuinfo+0x76>
2ffdd1d2:	3b51      	subs	r3, #81	; 0x51
2ffdd1d4:	4298      	cmp	r0, r3
2ffdd1d6:	d838      	bhi.n	2ffdd24a <stm32mp_print_cpuinfo+0x86>
2ffdd1d8:	3b0c      	subs	r3, #12
2ffdd1da:	4298      	cmp	r0, r3
2ffdd1dc:	d81e      	bhi.n	2ffdd21c <stm32mp_print_cpuinfo+0x58>
2ffdd1de:	f1b0 6fa0 	cmp.w	r0, #83886080	; 0x5000000
2ffdd1e2:	d03e      	beq.n	2ffdd262 <stm32mp_print_cpuinfo+0x9e>
2ffdd1e4:	4a37      	ldr	r2, [pc, #220]	; (2ffdd2c4 <stm32mp_print_cpuinfo+0x100>)
2ffdd1e6:	4c38      	ldr	r4, [pc, #224]	; (2ffdd2c8 <stm32mp_print_cpuinfo+0x104>)
2ffdd1e8:	4b38      	ldr	r3, [pc, #224]	; (2ffdd2cc <stm32mp_print_cpuinfo+0x108>)
2ffdd1ea:	4290      	cmp	r0, r2
2ffdd1ec:	bf08      	it	eq
2ffdd1ee:	461c      	moveq	r4, r3
2ffdd1f0:	4837      	ldr	r0, [pc, #220]	; (2ffdd2d0 <stm32mp_print_cpuinfo+0x10c>)
2ffdd1f2:	a901      	add	r1, sp, #4
2ffdd1f4:	f7ff ff7c 	bl	2ffdd0f0 <stm32_get_otp_value>
2ffdd1f8:	2800      	cmp	r0, #0
2ffdd1fa:	d03a      	beq.n	2ffdd272 <stm32mp_print_cpuinfo+0xae>
2ffdd1fc:	f7ff fd14 	bl	2ffdcc28 <console_flush>
2ffdd200:	f7f9 e82e 	blx	2ffd6260 <do_panic>
2ffdd204:	280b      	cmp	r0, #11
2ffdd206:	d820      	bhi.n	2ffdd24a <stm32mp_print_cpuinfo+0x86>
2ffdd208:	e8df f000 	tbb	[pc, r0]
2ffdd20c:	1f1f2d06 	.word	0x1f1f2d06
2ffdd210:	1f1f1f1f 	.word	0x1f1f1f1f
2ffdd214:	27251f1f 	.word	0x27251f1f
2ffdd218:	4c2e      	ldr	r4, [pc, #184]	; (2ffdd2d4 <stm32mp_print_cpuinfo+0x110>)
2ffdd21a:	e7e9      	b.n	2ffdd1f0 <stm32mp_print_cpuinfo+0x2c>
2ffdd21c:	f100 407b 	add.w	r0, r0, #4211081216	; 0xfb000000
2ffdd220:	3824      	subs	r0, #36	; 0x24
2ffdd222:	280b      	cmp	r0, #11
2ffdd224:	d811      	bhi.n	2ffdd24a <stm32mp_print_cpuinfo+0x86>
2ffdd226:	e8df f000 	tbb	[pc, r0]
2ffdd22a:	2006      	.short	0x2006
2ffdd22c:	10101010 	.word	0x10101010
2ffdd230:	10101010 	.word	0x10101010
2ffdd234:	1412      	.short	0x1412
2ffdd236:	4c28      	ldr	r4, [pc, #160]	; (2ffdd2d8 <stm32mp_print_cpuinfo+0x114>)
2ffdd238:	e7da      	b.n	2ffdd1f0 <stm32mp_print_cpuinfo+0x2c>
2ffdd23a:	4b28      	ldr	r3, [pc, #160]	; (2ffdd2dc <stm32mp_print_cpuinfo+0x118>)
2ffdd23c:	4298      	cmp	r0, r3
2ffdd23e:	d016      	beq.n	2ffdd26e <stm32mp_print_cpuinfo+0xaa>
2ffdd240:	f100 407b 	add.w	r0, r0, #4211081216	; 0xfb000000
2ffdd244:	38a4      	subs	r0, #164	; 0xa4
2ffdd246:	280b      	cmp	r0, #11
2ffdd248:	d9dc      	bls.n	2ffdd204 <stm32mp_print_cpuinfo+0x40>
2ffdd24a:	4c1f      	ldr	r4, [pc, #124]	; (2ffdd2c8 <stm32mp_print_cpuinfo+0x104>)
2ffdd24c:	e7d0      	b.n	2ffdd1f0 <stm32mp_print_cpuinfo+0x2c>
2ffdd24e:	4c24      	ldr	r4, [pc, #144]	; (2ffdd2e0 <stm32mp_print_cpuinfo+0x11c>)
2ffdd250:	e7ce      	b.n	2ffdd1f0 <stm32mp_print_cpuinfo+0x2c>
2ffdd252:	4c24      	ldr	r4, [pc, #144]	; (2ffdd2e4 <stm32mp_print_cpuinfo+0x120>)
2ffdd254:	e7cc      	b.n	2ffdd1f0 <stm32mp_print_cpuinfo+0x2c>
2ffdd256:	4c24      	ldr	r4, [pc, #144]	; (2ffdd2e8 <stm32mp_print_cpuinfo+0x124>)
2ffdd258:	e7ca      	b.n	2ffdd1f0 <stm32mp_print_cpuinfo+0x2c>
2ffdd25a:	4c24      	ldr	r4, [pc, #144]	; (2ffdd2ec <stm32mp_print_cpuinfo+0x128>)
2ffdd25c:	e7c8      	b.n	2ffdd1f0 <stm32mp_print_cpuinfo+0x2c>
2ffdd25e:	4c24      	ldr	r4, [pc, #144]	; (2ffdd2f0 <stm32mp_print_cpuinfo+0x12c>)
2ffdd260:	e7c6      	b.n	2ffdd1f0 <stm32mp_print_cpuinfo+0x2c>
2ffdd262:	4c24      	ldr	r4, [pc, #144]	; (2ffdd2f4 <stm32mp_print_cpuinfo+0x130>)
2ffdd264:	e7c4      	b.n	2ffdd1f0 <stm32mp_print_cpuinfo+0x2c>
2ffdd266:	4c24      	ldr	r4, [pc, #144]	; (2ffdd2f8 <stm32mp_print_cpuinfo+0x134>)
2ffdd268:	e7c2      	b.n	2ffdd1f0 <stm32mp_print_cpuinfo+0x2c>
2ffdd26a:	4c24      	ldr	r4, [pc, #144]	; (2ffdd2fc <stm32mp_print_cpuinfo+0x138>)
2ffdd26c:	e7c0      	b.n	2ffdd1f0 <stm32mp_print_cpuinfo+0x2c>
2ffdd26e:	4c24      	ldr	r4, [pc, #144]	; (2ffdd300 <stm32mp_print_cpuinfo+0x13c>)
2ffdd270:	e7be      	b.n	2ffdd1f0 <stm32mp_print_cpuinfo+0x2c>
2ffdd272:	9b01      	ldr	r3, [sp, #4]
2ffdd274:	a801      	add	r0, sp, #4
2ffdd276:	f3c3 63c2 	ubfx	r3, r3, #27, #3
2ffdd27a:	3b01      	subs	r3, #1
2ffdd27c:	2b03      	cmp	r3, #3
2ffdd27e:	bf96      	itet	ls
2ffdd280:	4a20      	ldrls	r2, [pc, #128]	; (2ffdd304 <stm32mp_print_cpuinfo+0x140>)
2ffdd282:	4d21      	ldrhi	r5, [pc, #132]	; (2ffdd308 <stm32mp_print_cpuinfo+0x144>)
2ffdd284:	f852 5023 	ldrls.w	r5, [r2, r3, lsl #2]
2ffdd288:	f005 f8fa 	bl	2ffe2480 <stm32mp1_dbgmcu_get_chip_version>
2ffdd28c:	2800      	cmp	r0, #0
2ffdd28e:	da02      	bge.n	2ffdd296 <stm32mp_print_cpuinfo+0xd2>
2ffdd290:	481e      	ldr	r0, [pc, #120]	; (2ffdd30c <stm32mp_print_cpuinfo+0x148>)
2ffdd292:	f7ff fc2b 	bl	2ffdcaec <tf_log>
2ffdd296:	9a01      	ldr	r2, [sp, #4]
2ffdd298:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
2ffdd29c:	d00d      	beq.n	2ffdd2ba <stm32mp_print_cpuinfo+0xf6>
2ffdd29e:	4b1c      	ldr	r3, [pc, #112]	; (2ffdd310 <stm32mp_print_cpuinfo+0x14c>)
2ffdd2a0:	f242 0001 	movw	r0, #8193	; 0x2001
2ffdd2a4:	491b      	ldr	r1, [pc, #108]	; (2ffdd314 <stm32mp_print_cpuinfo+0x150>)
2ffdd2a6:	4282      	cmp	r2, r0
2ffdd2a8:	bf08      	it	eq
2ffdd2aa:	460b      	moveq	r3, r1
2ffdd2ac:	481a      	ldr	r0, [pc, #104]	; (2ffdd318 <stm32mp_print_cpuinfo+0x154>)
2ffdd2ae:	462a      	mov	r2, r5
2ffdd2b0:	4621      	mov	r1, r4
2ffdd2b2:	f7ff fc1b 	bl	2ffdcaec <tf_log>
2ffdd2b6:	b003      	add	sp, #12
2ffdd2b8:	bd30      	pop	{r4, r5, pc}
2ffdd2ba:	4b18      	ldr	r3, [pc, #96]	; (2ffdd31c <stm32mp_print_cpuinfo+0x158>)
2ffdd2bc:	e7f6      	b.n	2ffdd2ac <stm32mp_print_cpuinfo+0xe8>
2ffdd2be:	bf00      	nop
2ffdd2c0:	05000080 	.word	0x05000080
2ffdd2c4:	05000001 	.word	0x05000001
2ffdd2c8:	2ffe578f 	.word	0x2ffe578f
2ffdd2cc:	2ffe57b7 	.word	0x2ffe57b7
2ffdd2d0:	2ffe57d2 	.word	0x2ffe57d2
2ffdd2d4:	2ffe5799 	.word	0x2ffe5799
2ffdd2d8:	2ffe57b2 	.word	0x2ffe57b2
2ffdd2dc:	05000081 	.word	0x05000081
2ffdd2e0:	2ffe57a3 	.word	0x2ffe57a3
2ffdd2e4:	2ffe57a8 	.word	0x2ffe57a8
2ffdd2e8:	2ffe57c1 	.word	0x2ffe57c1
2ffdd2ec:	2ffe57c6 	.word	0x2ffe57c6
2ffdd2f0:	2ffe57ad 	.word	0x2ffe57ad
2ffdd2f4:	2ffe5794 	.word	0x2ffe5794
2ffdd2f8:	2ffe57bc 	.word	0x2ffe57bc
2ffdd2fc:	2ffe579e 	.word	0x2ffe579e
2ffdd300:	2ffe57cb 	.word	0x2ffe57cb
2ffdd304:	2ffe5880 	.word	0x2ffe5880
2ffdd308:	2ffe5791 	.word	0x2ffe5791
2ffdd30c:	2ffe57de 	.word	0x2ffe57de
2ffdd310:	2ffe5792 	.word	0x2ffe5792
2ffdd314:	2ffe57d0 	.word	0x2ffe57d0
2ffdd318:	2ffe5807 	.word	0x2ffe5807
2ffdd31c:	2ffe587b 	.word	0x2ffe587b

2ffdd320 <stm32mp_print_boardinfo>:
2ffdd320:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2ffdd322:	2300      	movs	r3, #0
2ffdd324:	480f      	ldr	r0, [pc, #60]	; (2ffdd364 <stm32mp_print_boardinfo+0x44>)
2ffdd326:	a903      	add	r1, sp, #12
2ffdd328:	9303      	str	r3, [sp, #12]
2ffdd32a:	f7ff fee1 	bl	2ffdd0f0 <stm32_get_otp_value>
2ffdd32e:	b9a8      	cbnz	r0, 2ffdd35c <stm32mp_print_boardinfo+0x3c>
2ffdd330:	9903      	ldr	r1, [sp, #12]
2ffdd332:	b199      	cbz	r1, 2ffdd35c <stm32mp_print_boardinfo+0x3c>
2ffdd334:	f3c1 2303 	ubfx	r3, r1, #8, #4
2ffdd338:	f3c1 3203 	ubfx	r2, r1, #12, #4
2ffdd33c:	3340      	adds	r3, #64	; 0x40
2ffdd33e:	f88d 3008 	strb.w	r3, [sp, #8]
2ffdd342:	f001 030f 	and.w	r3, r1, #15
2ffdd346:	9301      	str	r3, [sp, #4]
2ffdd348:	ab02      	add	r3, sp, #8
2ffdd34a:	f88d 0009 	strb.w	r0, [sp, #9]
2ffdd34e:	9300      	str	r3, [sp, #0]
2ffdd350:	4805      	ldr	r0, [pc, #20]	; (2ffdd368 <stm32mp_print_boardinfo+0x48>)
2ffdd352:	f3c1 1303 	ubfx	r3, r1, #4, #4
2ffdd356:	0c09      	lsrs	r1, r1, #16
2ffdd358:	f7ff fbc8 	bl	2ffdcaec <tf_log>
2ffdd35c:	b005      	add	sp, #20
2ffdd35e:	f85d fb04 	ldr.w	pc, [sp], #4
2ffdd362:	bf00      	nop
2ffdd364:	2ffe5821 	.word	0x2ffe5821
2ffdd368:	2ffe582a 	.word	0x2ffe582a

2ffdd36c <stm32mp_is_closed_device>:
2ffdd36c:	b507      	push	{r0, r1, r2, lr}
2ffdd36e:	a901      	add	r1, sp, #4
2ffdd370:	4806      	ldr	r0, [pc, #24]	; (2ffdd38c <stm32mp_is_closed_device+0x20>)
2ffdd372:	f7ff febd 	bl	2ffdd0f0 <stm32_get_otp_value>
2ffdd376:	9b01      	ldr	r3, [sp, #4]
2ffdd378:	f003 0340 	and.w	r3, r3, #64	; 0x40
2ffdd37c:	4303      	orrs	r3, r0
2ffdd37e:	bf14      	ite	ne
2ffdd380:	2001      	movne	r0, #1
2ffdd382:	2000      	moveq	r0, #0
2ffdd384:	b003      	add	sp, #12
2ffdd386:	f85d fb04 	ldr.w	pc, [sp], #4
2ffdd38a:	bf00      	nop
2ffdd38c:	2ffe584f 	.word	0x2ffe584f

2ffdd390 <stm32mp_is_auth_supported>:
2ffdd390:	b508      	push	{r3, lr}
2ffdd392:	f7ff fed1 	bl	2ffdd138 <get_part_number>
2ffdd396:	4b0c      	ldr	r3, [pc, #48]	; (2ffdd3c8 <stm32mp_is_auth_supported+0x38>)
2ffdd398:	4298      	cmp	r0, r3
2ffdd39a:	d012      	beq.n	2ffdd3c2 <stm32mp_is_auth_supported+0x32>
2ffdd39c:	d80b      	bhi.n	2ffdd3b6 <stm32mp_is_auth_supported+0x26>
2ffdd39e:	3b5c      	subs	r3, #92	; 0x5c
2ffdd3a0:	4298      	cmp	r0, r3
2ffdd3a2:	d00e      	beq.n	2ffdd3c2 <stm32mp_is_auth_supported+0x32>
2ffdd3a4:	330a      	adds	r3, #10
2ffdd3a6:	4298      	cmp	r0, r3
2ffdd3a8:	d00b      	beq.n	2ffdd3c2 <stm32mp_is_auth_supported+0x32>
2ffdd3aa:	f1b0 6fa0 	cmp.w	r0, #83886080	; 0x5000000
2ffdd3ae:	bf14      	ite	ne
2ffdd3b0:	2000      	movne	r0, #0
2ffdd3b2:	2001      	moveq	r0, #1
2ffdd3b4:	bd08      	pop	{r3, pc}
2ffdd3b6:	4b05      	ldr	r3, [pc, #20]	; (2ffdd3cc <stm32mp_is_auth_supported+0x3c>)
2ffdd3b8:	4298      	cmp	r0, r3
2ffdd3ba:	d002      	beq.n	2ffdd3c2 <stm32mp_is_auth_supported+0x32>
2ffdd3bc:	330a      	adds	r3, #10
2ffdd3be:	4298      	cmp	r0, r3
2ffdd3c0:	e7f5      	b.n	2ffdd3ae <stm32mp_is_auth_supported+0x1e>
2ffdd3c2:	2001      	movs	r0, #1
2ffdd3c4:	e7f6      	b.n	2ffdd3b4 <stm32mp_is_auth_supported+0x24>
2ffdd3c6:	bf00      	nop
2ffdd3c8:	05000080 	.word	0x05000080
2ffdd3cc:	050000a4 	.word	0x050000a4

2ffdd3d0 <stm32_iwdg_get_instance>:
2ffdd3d0:	b508      	push	{r3, lr}
2ffdd3d2:	4b07      	ldr	r3, [pc, #28]	; (2ffdd3f0 <stm32_iwdg_get_instance+0x20>)
2ffdd3d4:	4298      	cmp	r0, r3
2ffdd3d6:	d006      	beq.n	2ffdd3e6 <stm32_iwdg_get_instance+0x16>
2ffdd3d8:	4b06      	ldr	r3, [pc, #24]	; (2ffdd3f4 <stm32_iwdg_get_instance+0x24>)
2ffdd3da:	4298      	cmp	r0, r3
2ffdd3dc:	d005      	beq.n	2ffdd3ea <stm32_iwdg_get_instance+0x1a>
2ffdd3de:	f7ff fc23 	bl	2ffdcc28 <console_flush>
2ffdd3e2:	f7f8 ef3e 	blx	2ffd6260 <do_panic>
2ffdd3e6:	2001      	movs	r0, #1
2ffdd3e8:	bd08      	pop	{r3, pc}
2ffdd3ea:	2000      	movs	r0, #0
2ffdd3ec:	e7fc      	b.n	2ffdd3e8 <stm32_iwdg_get_instance+0x18>
2ffdd3ee:	bf00      	nop
2ffdd3f0:	5a002000 	.word	0x5a002000
2ffdd3f4:	5c003000 	.word	0x5c003000

2ffdd3f8 <stm32_iwdg_get_otp_config>:
2ffdd3f8:	b513      	push	{r0, r1, r4, lr}
2ffdd3fa:	4604      	mov	r4, r0
2ffdd3fc:	4811      	ldr	r0, [pc, #68]	; (2ffdd444 <stm32_iwdg_get_otp_config+0x4c>)
2ffdd3fe:	a901      	add	r1, sp, #4
2ffdd400:	f7ff fe76 	bl	2ffdd0f0 <stm32_get_otp_value>
2ffdd404:	b118      	cbz	r0, 2ffdd40e <stm32_iwdg_get_otp_config+0x16>
2ffdd406:	f7ff fc0f 	bl	2ffdcc28 <console_flush>
2ffdd40a:	f7f8 ef2a 	blx	2ffd6260 <do_panic>
2ffdd40e:	9a01      	ldr	r2, [sp, #4]
2ffdd410:	2301      	movs	r3, #1
2ffdd412:	1ce1      	adds	r1, r4, #3
2ffdd414:	fa03 f101 	lsl.w	r1, r3, r1
2ffdd418:	4211      	tst	r1, r2
2ffdd41a:	f104 0105 	add.w	r1, r4, #5
2ffdd41e:	f104 0407 	add.w	r4, r4, #7
2ffdd422:	bf18      	it	ne
2ffdd424:	4618      	movne	r0, r3
2ffdd426:	fa03 f101 	lsl.w	r1, r3, r1
2ffdd42a:	bf08      	it	eq
2ffdd42c:	2000      	moveq	r0, #0
2ffdd42e:	40a3      	lsls	r3, r4
2ffdd430:	4211      	tst	r1, r2
2ffdd432:	bf18      	it	ne
2ffdd434:	f040 0002 	orrne.w	r0, r0, #2
2ffdd438:	4213      	tst	r3, r2
2ffdd43a:	bf18      	it	ne
2ffdd43c:	f040 0004 	orrne.w	r0, r0, #4
2ffdd440:	b002      	add	sp, #8
2ffdd442:	bd10      	pop	{r4, pc}
2ffdd444:	2ffe5858 	.word	0x2ffe5858

2ffdd448 <stm32_iwdg_shadow_update>:
2ffdd448:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffdd44a:	4604      	mov	r4, r0
2ffdd44c:	481a      	ldr	r0, [pc, #104]	; (2ffdd4b8 <stm32_iwdg_shadow_update+0x70>)
2ffdd44e:	460d      	mov	r5, r1
2ffdd450:	2200      	movs	r2, #0
2ffdd452:	a901      	add	r1, sp, #4
2ffdd454:	f7ff fe20 	bl	2ffdd098 <stm32_get_otp_index>
2ffdd458:	b118      	cbz	r0, 2ffdd462 <stm32_iwdg_shadow_update+0x1a>
2ffdd45a:	f7ff fbe5 	bl	2ffdcc28 <console_flush>
2ffdd45e:	f7f8 ef00 	blx	2ffd6260 <do_panic>
2ffdd462:	4815      	ldr	r0, [pc, #84]	; (2ffdd4b8 <stm32_iwdg_shadow_update+0x70>)
2ffdd464:	4669      	mov	r1, sp
2ffdd466:	f7ff fe43 	bl	2ffdd0f0 <stm32_get_otp_value>
2ffdd46a:	2800      	cmp	r0, #0
2ffdd46c:	d1f5      	bne.n	2ffdd45a <stm32_iwdg_shadow_update+0x12>
2ffdd46e:	07aa      	lsls	r2, r5, #30
2ffdd470:	d506      	bpl.n	2ffdd480 <stm32_iwdg_shadow_update+0x38>
2ffdd472:	2301      	movs	r3, #1
2ffdd474:	1d62      	adds	r2, r4, #5
2ffdd476:	fa03 f202 	lsl.w	r2, r3, r2
2ffdd47a:	9b00      	ldr	r3, [sp, #0]
2ffdd47c:	4313      	orrs	r3, r2
2ffdd47e:	9300      	str	r3, [sp, #0]
2ffdd480:	076b      	lsls	r3, r5, #29
2ffdd482:	d506      	bpl.n	2ffdd492 <stm32_iwdg_shadow_update+0x4a>
2ffdd484:	2301      	movs	r3, #1
2ffdd486:	3407      	adds	r4, #7
2ffdd488:	fa03 f404 	lsl.w	r4, r3, r4
2ffdd48c:	9b00      	ldr	r3, [sp, #0]
2ffdd48e:	4323      	orrs	r3, r4
2ffdd490:	9300      	str	r3, [sp, #0]
2ffdd492:	e9dd 0100 	ldrd	r0, r1, [sp]
2ffdd496:	f001 fa03 	bl	2ffde8a0 <bsec_write_otp>
2ffdd49a:	b928      	cbnz	r0, 2ffdd4a8 <stm32_iwdg_shadow_update+0x60>
2ffdd49c:	9801      	ldr	r0, [sp, #4]
2ffdd49e:	f001 f951 	bl	2ffde744 <bsec_set_sr_lock>
2ffdd4a2:	b118      	cbz	r0, 2ffdd4ac <stm32_iwdg_shadow_update+0x64>
2ffdd4a4:	f06f 0005 	mvn.w	r0, #5
2ffdd4a8:	b003      	add	sp, #12
2ffdd4aa:	bd30      	pop	{r4, r5, pc}
2ffdd4ac:	9801      	ldr	r0, [sp, #4]
2ffdd4ae:	f001 f9bf 	bl	2ffde830 <bsec_set_sw_lock>
2ffdd4b2:	2800      	cmp	r0, #0
2ffdd4b4:	d0f8      	beq.n	2ffdd4a8 <stm32_iwdg_shadow_update+0x60>
2ffdd4b6:	e7f5      	b.n	2ffdd4a4 <stm32_iwdg_shadow_update+0x5c>
2ffdd4b8:	2ffe5858 	.word	0x2ffe5858

2ffdd4bc <plat_bind_regulator>:
2ffdd4bc:	b513      	push	{r0, r1, r4, lr}
2ffdd4be:	4604      	mov	r4, r0
2ffdd4c0:	a801      	add	r0, sp, #4
2ffdd4c2:	f004 fcfb 	bl	2ffe1ebc <fdt_get_address>
2ffdd4c6:	b1b8      	cbz	r0, 2ffdd4f8 <plat_bind_regulator+0x3c>
2ffdd4c8:	f004 f862 	bl	2ffe1590 <dt_pmic_status>
2ffdd4cc:	2800      	cmp	r0, #0
2ffdd4ce:	dd16      	ble.n	2ffdd4fe <plat_bind_regulator+0x42>
2ffdd4d0:	4620      	mov	r0, r4
2ffdd4d2:	f004 f941 	bl	2ffe1758 <is_pmic_regulator>
2ffdd4d6:	b190      	cbz	r0, 2ffdd4fe <plat_bind_regulator+0x42>
2ffdd4d8:	4620      	mov	r0, r4
2ffdd4da:	f004 f959 	bl	2ffe1790 <bind_pmic_regulator>
2ffdd4de:	6861      	ldr	r1, [r4, #4]
2ffdd4e0:	9801      	ldr	r0, [sp, #4]
2ffdd4e2:	f005 fc6c 	bl	2ffe2dbe <fdt_node_offset_by_phandle>
2ffdd4e6:	4a08      	ldr	r2, [pc, #32]	; (2ffdd508 <plat_bind_regulator+0x4c>)
2ffdd4e8:	4601      	mov	r1, r0
2ffdd4ea:	9801      	ldr	r0, [sp, #4]
2ffdd4ec:	2300      	movs	r3, #0
2ffdd4ee:	f005 fb74 	bl	2ffe2bda <fdt_getprop>
2ffdd4f2:	b108      	cbz	r0, 2ffdd4f8 <plat_bind_regulator+0x3c>
2ffdd4f4:	2301      	movs	r3, #1
2ffdd4f6:	7223      	strb	r3, [r4, #8]
2ffdd4f8:	2000      	movs	r0, #0
2ffdd4fa:	b002      	add	sp, #8
2ffdd4fc:	bd10      	pop	{r4, pc}
2ffdd4fe:	4620      	mov	r0, r4
2ffdd500:	f004 fb7c 	bl	2ffe1bfc <bind_dummy_regulator>
2ffdd504:	e7eb      	b.n	2ffdd4de <plat_bind_regulator+0x22>
2ffdd506:	bf00      	nop
2ffdd508:	2ffe5860 	.word	0x2ffe5860

2ffdd50c <xlat_arch_get_max_supported_pa>:
2ffdd50c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffdd510:	21ff      	movs	r1, #255	; 0xff
2ffdd512:	4770      	bx	lr

2ffdd514 <xlat_get_min_virt_addr_space_size>:
2ffdd514:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
2ffdd518:	4770      	bx	lr

2ffdd51a <is_dcache_enabled>:
2ffdd51a:	f3ef 8300 	mrs	r3, CPSR
2ffdd51e:	f003 031f 	and.w	r3, r3, #31
2ffdd522:	2b1a      	cmp	r3, #26
2ffdd524:	d104      	bne.n	2ffdd530 <is_dcache_enabled+0x16>
2ffdd526:	ee91 0f10 	mrc	15, 4, r0, cr1, cr0, {0}
2ffdd52a:	f3c0 0080 	ubfx	r0, r0, #2, #1
2ffdd52e:	4770      	bx	lr
2ffdd530:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffdd534:	e7f9      	b.n	2ffdd52a <is_dcache_enabled+0x10>
	...

2ffdd538 <xlat_arch_regime_get_xn_desc>:
2ffdd538:	2801      	cmp	r0, #1
2ffdd53a:	b508      	push	{r3, lr}
2ffdd53c:	d005      	beq.n	2ffdd54a <xlat_arch_regime_get_xn_desc+0x12>
2ffdd53e:	2802      	cmp	r0, #2
2ffdd540:	d007      	beq.n	2ffdd552 <xlat_arch_regime_get_xn_desc+0x1a>
2ffdd542:	4806      	ldr	r0, [pc, #24]	; (2ffdd55c <xlat_arch_regime_get_xn_desc+0x24>)
2ffdd544:	2154      	movs	r1, #84	; 0x54
2ffdd546:	f005 fce5 	bl	2ffe2f14 <__assert>
2ffdd54a:	2000      	movs	r0, #0
2ffdd54c:	f44f 01c0 	mov.w	r1, #6291456	; 0x600000
2ffdd550:	bd08      	pop	{r3, pc}
2ffdd552:	2000      	movs	r0, #0
2ffdd554:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
2ffdd558:	e7fa      	b.n	2ffdd550 <xlat_arch_regime_get_xn_desc+0x18>
2ffdd55a:	bf00      	nop
2ffdd55c:	2ffe58f0 	.word	0x2ffe58f0

2ffdd560 <xlat_arch_tlbi_va>:
2ffdd560:	b508      	push	{r3, lr}
2ffdd562:	f3bf 8f4a 	dsb	ishst
2ffdd566:	f420 607f 	bic.w	r0, r0, #4080	; 0xff0
2ffdd56a:	2901      	cmp	r1, #1
2ffdd56c:	f020 000f 	bic.w	r0, r0, #15
2ffdd570:	d102      	bne.n	2ffdd578 <xlat_arch_tlbi_va+0x18>
2ffdd572:	ee08 0f73 	mcr	15, 0, r0, cr8, cr3, {3}
2ffdd576:	bd08      	pop	{r3, pc}
2ffdd578:	2902      	cmp	r1, #2
2ffdd57a:	d003      	beq.n	2ffdd584 <xlat_arch_tlbi_va+0x24>
2ffdd57c:	4803      	ldr	r0, [pc, #12]	; (2ffdd58c <xlat_arch_tlbi_va+0x2c>)
2ffdd57e:	2164      	movs	r1, #100	; 0x64
2ffdd580:	f005 fcc8 	bl	2ffe2f14 <__assert>
2ffdd584:	ee88 0f33 	mcr	15, 4, r0, cr8, cr3, {1}
2ffdd588:	e7f5      	b.n	2ffdd576 <xlat_arch_tlbi_va+0x16>
2ffdd58a:	bf00      	nop
2ffdd58c:	2ffe58f0 	.word	0x2ffe58f0

2ffdd590 <xlat_arch_tlbi_va_sync>:
2ffdd590:	2300      	movs	r3, #0
2ffdd592:	ee07 3fd1 	mcr	15, 0, r3, cr7, cr1, {6}
2ffdd596:	f3bf 8f4b 	dsb	ish
2ffdd59a:	f3bf 8f6f 	isb	sy
2ffdd59e:	4770      	bx	lr

2ffdd5a0 <xlat_arch_current_el>:
2ffdd5a0:	b508      	push	{r3, lr}
2ffdd5a2:	f3ef 8300 	mrs	r3, CPSR
2ffdd5a6:	f003 031f 	and.w	r3, r3, #31
2ffdd5aa:	2b1a      	cmp	r3, #26
2ffdd5ac:	d00f      	beq.n	2ffdd5ce <xlat_arch_current_el+0x2e>
2ffdd5ae:	f3ef 8300 	mrs	r3, CPSR
2ffdd5b2:	f003 031f 	and.w	r3, r3, #31
2ffdd5b6:	2b13      	cmp	r3, #19
2ffdd5b8:	d00b      	beq.n	2ffdd5d2 <xlat_arch_current_el+0x32>
2ffdd5ba:	f3ef 8300 	mrs	r3, CPSR
2ffdd5be:	f003 031f 	and.w	r3, r3, #31
2ffdd5c2:	2b16      	cmp	r3, #22
2ffdd5c4:	d005      	beq.n	2ffdd5d2 <xlat_arch_current_el+0x32>
2ffdd5c6:	4804      	ldr	r0, [pc, #16]	; (2ffdd5d8 <xlat_arch_current_el+0x38>)
2ffdd5c8:	2188      	movs	r1, #136	; 0x88
2ffdd5ca:	f005 fca3 	bl	2ffe2f14 <__assert>
2ffdd5ce:	2002      	movs	r0, #2
2ffdd5d0:	bd08      	pop	{r3, pc}
2ffdd5d2:	2001      	movs	r0, #1
2ffdd5d4:	e7fc      	b.n	2ffdd5d0 <xlat_arch_current_el+0x30>
2ffdd5d6:	bf00      	nop
2ffdd5d8:	2ffe58f0 	.word	0x2ffe58f0

2ffdd5dc <is_mmu_enabled_ctx>:
2ffdd5dc:	b508      	push	{r3, lr}
2ffdd5de:	6c43      	ldr	r3, [r0, #68]	; 0x44
2ffdd5e0:	2b01      	cmp	r3, #1
2ffdd5e2:	d10c      	bne.n	2ffdd5fe <is_mmu_enabled_ctx+0x22>
2ffdd5e4:	f7ff ffdc 	bl	2ffdd5a0 <xlat_arch_current_el>
2ffdd5e8:	2801      	cmp	r0, #1
2ffdd5ea:	d003      	beq.n	2ffdd5f4 <is_mmu_enabled_ctx+0x18>
2ffdd5ec:	213d      	movs	r1, #61	; 0x3d
2ffdd5ee:	480a      	ldr	r0, [pc, #40]	; (2ffdd618 <is_mmu_enabled_ctx+0x3c>)
2ffdd5f0:	f005 fc90 	bl	2ffe2f14 <__assert>
2ffdd5f4:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffdd5f8:	f000 0001 	and.w	r0, r0, #1
2ffdd5fc:	bd08      	pop	{r3, pc}
2ffdd5fe:	2b02      	cmp	r3, #2
2ffdd600:	d001      	beq.n	2ffdd606 <is_mmu_enabled_ctx+0x2a>
2ffdd602:	2140      	movs	r1, #64	; 0x40
2ffdd604:	e7f3      	b.n	2ffdd5ee <is_mmu_enabled_ctx+0x12>
2ffdd606:	f7ff ffcb 	bl	2ffdd5a0 <xlat_arch_current_el>
2ffdd60a:	2802      	cmp	r0, #2
2ffdd60c:	d001      	beq.n	2ffdd612 <is_mmu_enabled_ctx+0x36>
2ffdd60e:	2141      	movs	r1, #65	; 0x41
2ffdd610:	e7ed      	b.n	2ffdd5ee <is_mmu_enabled_ctx+0x12>
2ffdd612:	ee91 0f10 	mrc	15, 4, r0, cr1, cr0, {0}
2ffdd616:	e7ef      	b.n	2ffdd5f8 <is_mmu_enabled_ctx+0x1c>
2ffdd618:	2ffe58f0 	.word	0x2ffe58f0

2ffdd61c <setup_mmu_cfg>:
2ffdd61c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffdd61e:	4616      	mov	r6, r2
2ffdd620:	9a09      	ldr	r2, [sp, #36]	; 0x24
2ffdd622:	460f      	mov	r7, r1
2ffdd624:	9908      	ldr	r1, [sp, #32]
2ffdd626:	4604      	mov	r4, r0
2ffdd628:	2a01      	cmp	r2, #1
2ffdd62a:	d10f      	bne.n	2ffdd64c <setup_mmu_cfg+0x30>
2ffdd62c:	f3ef 8200 	mrs	r2, CPSR
2ffdd630:	f002 021f 	and.w	r2, r2, #31
2ffdd634:	2a13      	cmp	r2, #19
2ffdd636:	d015      	beq.n	2ffdd664 <setup_mmu_cfg+0x48>
2ffdd638:	f3ef 8200 	mrs	r2, CPSR
2ffdd63c:	f002 021f 	and.w	r2, r2, #31
2ffdd640:	2a16      	cmp	r2, #22
2ffdd642:	d00f      	beq.n	2ffdd664 <setup_mmu_cfg+0x48>
2ffdd644:	21b1      	movs	r1, #177	; 0xb1
2ffdd646:	481c      	ldr	r0, [pc, #112]	; (2ffdd6b8 <setup_mmu_cfg+0x9c>)
2ffdd648:	f005 fc64 	bl	2ffe2f14 <__assert>
2ffdd64c:	2a02      	cmp	r2, #2
2ffdd64e:	d001      	beq.n	2ffdd654 <setup_mmu_cfg+0x38>
2ffdd650:	21b8      	movs	r1, #184	; 0xb8
2ffdd652:	e7f8      	b.n	2ffdd646 <setup_mmu_cfg+0x2a>
2ffdd654:	f3ef 8200 	mrs	r2, CPSR
2ffdd658:	f002 021f 	and.w	r2, r2, #31
2ffdd65c:	2a1a      	cmp	r2, #26
2ffdd65e:	d00a      	beq.n	2ffdd676 <setup_mmu_cfg+0x5a>
2ffdd660:	21b9      	movs	r1, #185	; 0xb9
2ffdd662:	e7f0      	b.n	2ffdd646 <setup_mmu_cfg+0x2a>
2ffdd664:	4d15      	ldr	r5, [pc, #84]	; (2ffdd6bc <setup_mmu_cfg+0xa0>)
2ffdd666:	1c4a      	adds	r2, r1, #1
2ffdd668:	d010      	beq.n	2ffdd68c <setup_mmu_cfg+0x70>
2ffdd66a:	1c48      	adds	r0, r1, #1
2ffdd66c:	f1b0 7f00 	cmp.w	r0, #33554432	; 0x2000000
2ffdd670:	d203      	bcs.n	2ffdd67a <setup_mmu_cfg+0x5e>
2ffdd672:	21cc      	movs	r1, #204	; 0xcc
2ffdd674:	e7e7      	b.n	2ffdd646 <setup_mmu_cfg+0x2a>
2ffdd676:	4d12      	ldr	r5, [pc, #72]	; (2ffdd6c0 <setup_mmu_cfg+0xa4>)
2ffdd678:	e7f5      	b.n	2ffdd666 <setup_mmu_cfg+0x4a>
2ffdd67a:	4001      	ands	r1, r0
2ffdd67c:	d001      	beq.n	2ffdd682 <setup_mmu_cfg+0x66>
2ffdd67e:	21d0      	movs	r1, #208	; 0xd0
2ffdd680:	e7e1      	b.n	2ffdd646 <setup_mmu_cfg+0x2a>
2ffdd682:	f7ff fb1e 	bl	2ffdccc2 <__ctzdi2>
2ffdd686:	f1c0 0020 	rsb	r0, r0, #32
2ffdd68a:	4305      	orrs	r5, r0
2ffdd68c:	07bb      	lsls	r3, r7, #30
2ffdd68e:	bf58      	it	pl
2ffdd690:	f445 5554 	orrpl.w	r5, r5, #13568	; 0x3500
2ffdd694:	ee10 3fd2 	mrc	15, 0, r3, cr0, cr2, {6}
2ffdd698:	480a      	ldr	r0, [pc, #40]	; (2ffdd6c4 <setup_mmu_cfg+0xa8>)
2ffdd69a:	f413 4f70 	tst.w	r3, #61440	; 0xf000
2ffdd69e:	bf18      	it	ne
2ffdd6a0:	f046 0601 	orrne.w	r6, r6, #1
2ffdd6a4:	2300      	movs	r3, #0
2ffdd6a6:	2100      	movs	r1, #0
2ffdd6a8:	e9c4 0100 	strd	r0, r1, [r4]
2ffdd6ac:	e9c4 5302 	strd	r5, r3, [r4, #8]
2ffdd6b0:	e9c4 6304 	strd	r6, r3, [r4, #16]
2ffdd6b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffdd6b6:	bf00      	nop
2ffdd6b8:	2ffe58f0 	.word	0x2ffe58f0
2ffdd6bc:	80800000 	.word	0x80800000
2ffdd6c0:	80803500 	.word	0x80803500
2ffdd6c4:	004404ff 	.word	0x004404ff

2ffdd6c8 <mmap_add_region>:
2ffdd6c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffdd6ca:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffdd6ce:	9b08      	ldr	r3, [sp, #32]
2ffdd6d0:	e9cd 0100 	strd	r0, r1, [sp]
2ffdd6d4:	9304      	str	r3, [sp, #16]
2ffdd6d6:	4669      	mov	r1, sp
2ffdd6d8:	4804      	ldr	r0, [pc, #16]	; (2ffdd6ec <mmap_add_region+0x24>)
2ffdd6da:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
2ffdd6de:	9305      	str	r3, [sp, #20]
2ffdd6e0:	f000 fb0e 	bl	2ffddd00 <mmap_add_region_ctx>
2ffdd6e4:	b007      	add	sp, #28
2ffdd6e6:	f85d fb04 	ldr.w	pc, [sp], #4
2ffdd6ea:	bf00      	nop
2ffdd6ec:	2ffe7190 	.word	0x2ffe7190

2ffdd6f0 <mmap_add>:
2ffdd6f0:	4601      	mov	r1, r0
2ffdd6f2:	4801      	ldr	r0, [pc, #4]	; (2ffdd6f8 <mmap_add+0x8>)
2ffdd6f4:	f000 bb7c 	b.w	2ffdddf0 <mmap_add_ctx>
2ffdd6f8:	2ffe7190 	.word	0x2ffe7190

2ffdd6fc <mmap_add_dynamic_region>:
2ffdd6fc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffdd6fe:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffdd702:	9b08      	ldr	r3, [sp, #32]
2ffdd704:	e9cd 0100 	strd	r0, r1, [sp]
2ffdd708:	9304      	str	r3, [sp, #16]
2ffdd70a:	4669      	mov	r1, sp
2ffdd70c:	4804      	ldr	r0, [pc, #16]	; (2ffdd720 <mmap_add_dynamic_region+0x24>)
2ffdd70e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
2ffdd712:	9305      	str	r3, [sp, #20]
2ffdd714:	f000 fb78 	bl	2ffdde08 <mmap_add_dynamic_region_ctx>
2ffdd718:	b007      	add	sp, #28
2ffdd71a:	f85d fb04 	ldr.w	pc, [sp], #4
2ffdd71e:	bf00      	nop
2ffdd720:	2ffe7190 	.word	0x2ffe7190

2ffdd724 <mmap_remove_dynamic_region>:
2ffdd724:	460a      	mov	r2, r1
2ffdd726:	4601      	mov	r1, r0
2ffdd728:	4801      	ldr	r0, [pc, #4]	; (2ffdd730 <mmap_remove_dynamic_region+0xc>)
2ffdd72a:	f000 bc21 	b.w	2ffddf70 <mmap_remove_dynamic_region_ctx>
2ffdd72e:	bf00      	nop
2ffdd730:	2ffe7190 	.word	0x2ffe7190

2ffdd734 <init_xlat_tables>:
2ffdd734:	b510      	push	{r4, lr}
2ffdd736:	4c0c      	ldr	r4, [pc, #48]	; (2ffdd768 <init_xlat_tables+0x34>)
2ffdd738:	6c63      	ldr	r3, [r4, #68]	; 0x44
2ffdd73a:	3301      	adds	r3, #1
2ffdd73c:	d003      	beq.n	2ffdd746 <init_xlat_tables+0x12>
2ffdd73e:	2160      	movs	r1, #96	; 0x60
2ffdd740:	480a      	ldr	r0, [pc, #40]	; (2ffdd76c <init_xlat_tables+0x38>)
2ffdd742:	f005 fbe7 	bl	2ffe2f14 <__assert>
2ffdd746:	f7ff ff2b 	bl	2ffdd5a0 <xlat_arch_current_el>
2ffdd74a:	2801      	cmp	r0, #1
2ffdd74c:	d105      	bne.n	2ffdd75a <init_xlat_tables+0x26>
2ffdd74e:	6460      	str	r0, [r4, #68]	; 0x44
2ffdd750:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffdd754:	4804      	ldr	r0, [pc, #16]	; (2ffdd768 <init_xlat_tables+0x34>)
2ffdd756:	f000 bc91 	b.w	2ffde07c <init_xlat_tables_ctx>
2ffdd75a:	2802      	cmp	r0, #2
2ffdd75c:	d0f7      	beq.n	2ffdd74e <init_xlat_tables+0x1a>
2ffdd75e:	2803      	cmp	r0, #3
2ffdd760:	d0f5      	beq.n	2ffdd74e <init_xlat_tables+0x1a>
2ffdd762:	2169      	movs	r1, #105	; 0x69
2ffdd764:	e7ec      	b.n	2ffdd740 <init_xlat_tables+0xc>
2ffdd766:	bf00      	nop
2ffdd768:	2ffe7190 	.word	0x2ffe7190
2ffdd76c:	2ffe591e 	.word	0x2ffe591e

2ffdd770 <enable_mmu_svc_mon>:
2ffdd770:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2ffdd772:	2201      	movs	r2, #1
2ffdd774:	4b09      	ldr	r3, [pc, #36]	; (2ffdd79c <enable_mmu_svc_mon+0x2c>)
2ffdd776:	4604      	mov	r4, r0
2ffdd778:	9203      	str	r2, [sp, #12]
2ffdd77a:	689a      	ldr	r2, [r3, #8]
2ffdd77c:	9202      	str	r2, [sp, #8]
2ffdd77e:	e9d3 0100 	ldrd	r0, r1, [r3]
2ffdd782:	e9cd 0100 	strd	r0, r1, [sp]
2ffdd786:	4806      	ldr	r0, [pc, #24]	; (2ffdd7a0 <enable_mmu_svc_mon+0x30>)
2ffdd788:	4621      	mov	r1, r4
2ffdd78a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
2ffdd78c:	f7ff ff46 	bl	2ffdd61c <setup_mmu_cfg>
2ffdd790:	4620      	mov	r0, r4
2ffdd792:	b004      	add	sp, #16
2ffdd794:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffdd798:	f009 bbfa 	b.w	2ffe6f90 <__enable_mmu_direct_svc_mon_from_thumb>
2ffdd79c:	2ffe7190 	.word	0x2ffe7190
2ffdd7a0:	2ffea3a8 	.word	0x2ffea3a8

2ffdd7a4 <mmap_add_region_check>:
2ffdd7a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffdd7a8:	2700      	movs	r7, #0
2ffdd7aa:	e9d1 8900 	ldrd	r8, r9, [r1]
2ffdd7ae:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
2ffdd7b2:	f3c8 060b 	ubfx	r6, r8, #0, #12
2ffdd7b6:	f118 3aff 	adds.w	sl, r8, #4294967295	; 0xffffffff
2ffdd7ba:	f149 3bff 	adc.w	fp, r9, #4294967295	; 0xffffffff
2ffdd7be:	b089      	sub	sp, #36	; 0x24
2ffdd7c0:	eb1a 0a05 	adds.w	sl, sl, r5
2ffdd7c4:	f14b 0b00 	adc.w	fp, fp, #0
2ffdd7c8:	433e      	orrs	r6, r7
2ffdd7ca:	eb02 0405 	add.w	r4, r2, r5
2ffdd7ce:	694b      	ldr	r3, [r1, #20]
2ffdd7d0:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
2ffdd7d4:	e9cd ab00 	strd	sl, fp, [sp]
2ffdd7d8:	f040 8082 	bne.w	2ffdd8e0 <mmap_add_region_check+0x13c>
2ffdd7dc:	ea42 0605 	orr.w	r6, r2, r5
2ffdd7e0:	f3c6 060b 	ubfx	r6, r6, #0, #12
2ffdd7e4:	2e00      	cmp	r6, #0
2ffdd7e6:	d17b      	bne.n	2ffdd8e0 <mmap_add_region_check+0x13c>
2ffdd7e8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
2ffdd7ec:	d005      	beq.n	2ffdd7fa <mmap_add_region_check+0x56>
2ffdd7ee:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
2ffdd7f2:	d002      	beq.n	2ffdd7fa <mmap_add_region_check+0x56>
2ffdd7f4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
2ffdd7f8:	d172      	bne.n	2ffdd8e0 <mmap_add_region_check+0x13c>
2ffdd7fa:	e9dd 6700 	ldrd	r6, r7, [sp]
2ffdd7fe:	454f      	cmp	r7, r9
2ffdd800:	bf08      	it	eq
2ffdd802:	4546      	cmpeq	r6, r8
2ffdd804:	d36f      	bcc.n	2ffdd8e6 <mmap_add_region_check+0x142>
2ffdd806:	42a2      	cmp	r2, r4
2ffdd808:	d86d      	bhi.n	2ffdd8e6 <mmap_add_region_check+0x142>
2ffdd80a:	6883      	ldr	r3, [r0, #8]
2ffdd80c:	42a3      	cmp	r3, r4
2ffdd80e:	d36a      	bcc.n	2ffdd8e6 <mmap_add_region_check+0x142>
2ffdd810:	e9d0 6700 	ldrd	r6, r7, [r0]
2ffdd814:	e9dd ab00 	ldrd	sl, fp, [sp]
2ffdd818:	455f      	cmp	r7, fp
2ffdd81a:	bf08      	it	eq
2ffdd81c:	4556      	cmpeq	r6, sl
2ffdd81e:	d362      	bcc.n	2ffdd8e6 <mmap_add_region_check+0x142>
2ffdd820:	68c3      	ldr	r3, [r0, #12]
2ffdd822:	2618      	movs	r6, #24
2ffdd824:	6900      	ldr	r0, [r0, #16]
2ffdd826:	fb06 3000 	mla	r0, r6, r0, r3
2ffdd82a:	f850 0c0c 	ldr.w	r0, [r0, #-12]
2ffdd82e:	2800      	cmp	r0, #0
2ffdd830:	d15c      	bne.n	2ffdd8ec <mmap_add_region_check+0x148>
2ffdd832:	ebb2 0008 	subs.w	r0, r2, r8
2ffdd836:	4433      	add	r3, r6
2ffdd838:	9006      	str	r0, [sp, #24]
2ffdd83a:	eb69 0049 	sbc.w	r0, r9, r9, lsl #1
2ffdd83e:	9007      	str	r0, [sp, #28]
2ffdd840:	f853 0c0c 	ldr.w	r0, [r3, #-12]
2ffdd844:	b910      	cbnz	r0, 2ffdd84c <mmap_add_region_check+0xa8>
2ffdd846:	b009      	add	sp, #36	; 0x24
2ffdd848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffdd84c:	f853 cc10 	ldr.w	ip, [r3, #-16]
2ffdd850:	4594      	cmp	ip, r2
2ffdd852:	eb0c 0e00 	add.w	lr, ip, r0
2ffdd856:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
2ffdd85a:	d820      	bhi.n	2ffdd89e <mmap_add_region_check+0xfa>
2ffdd85c:	4574      	cmp	r4, lr
2ffdd85e:	d920      	bls.n	2ffdd8a2 <mmap_add_region_check+0xfe>
2ffdd860:	4594      	cmp	ip, r2
2ffdd862:	d01e      	beq.n	2ffdd8a2 <mmap_add_region_check+0xfe>
2ffdd864:	e953 ab06 	ldrd	sl, fp, [r3, #-24]
2ffdd868:	e9dd 6700 	ldrd	r6, r7, [sp]
2ffdd86c:	455f      	cmp	r7, fp
2ffdd86e:	bf08      	it	eq
2ffdd870:	4556      	cmpeq	r6, sl
2ffdd872:	d33e      	bcc.n	2ffdd8f2 <mmap_add_region_check+0x14e>
2ffdd874:	f11a 36ff 	adds.w	r6, sl, #4294967295	; 0xffffffff
2ffdd878:	9604      	str	r6, [sp, #16]
2ffdd87a:	f14b 36ff 	adc.w	r6, fp, #4294967295	; 0xffffffff
2ffdd87e:	9605      	str	r6, [sp, #20]
2ffdd880:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
2ffdd884:	1836      	adds	r6, r6, r0
2ffdd886:	f147 0700 	adc.w	r7, r7, #0
2ffdd88a:	45a4      	cmp	ip, r4
2ffdd88c:	d801      	bhi.n	2ffdd892 <mmap_add_region_check+0xee>
2ffdd88e:	4572      	cmp	r2, lr
2ffdd890:	d923      	bls.n	2ffdd8da <mmap_add_region_check+0x136>
2ffdd892:	454f      	cmp	r7, r9
2ffdd894:	bf08      	it	eq
2ffdd896:	4546      	cmpeq	r6, r8
2ffdd898:	d21f      	bcs.n	2ffdd8da <mmap_add_region_check+0x136>
2ffdd89a:	3318      	adds	r3, #24
2ffdd89c:	e7d0      	b.n	2ffdd840 <mmap_add_region_check+0x9c>
2ffdd89e:	4574      	cmp	r4, lr
2ffdd8a0:	d3e0      	bcc.n	2ffdd864 <mmap_add_region_check+0xc0>
2ffdd8a2:	690e      	ldr	r6, [r1, #16]
2ffdd8a4:	2e00      	cmp	r6, #0
2ffdd8a6:	db18      	blt.n	2ffdd8da <mmap_add_region_check+0x136>
2ffdd8a8:	f853 6c08 	ldr.w	r6, [r3, #-8]
2ffdd8ac:	2e00      	cmp	r6, #0
2ffdd8ae:	db14      	blt.n	2ffdd8da <mmap_add_region_check+0x136>
2ffdd8b0:	e953 6706 	ldrd	r6, r7, [r3, #-24]
2ffdd8b4:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
2ffdd8b8:	ebbc 0606 	subs.w	r6, ip, r6
2ffdd8bc:	46e6      	mov	lr, ip
2ffdd8be:	9602      	str	r6, [sp, #8]
2ffdd8c0:	eb67 0647 	sbc.w	r6, r7, r7, lsl #1
2ffdd8c4:	9603      	str	r6, [sp, #12]
2ffdd8c6:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
2ffdd8ca:	455f      	cmp	r7, fp
2ffdd8cc:	bf08      	it	eq
2ffdd8ce:	4556      	cmpeq	r6, sl
2ffdd8d0:	d103      	bne.n	2ffdd8da <mmap_add_region_check+0x136>
2ffdd8d2:	4594      	cmp	ip, r2
2ffdd8d4:	d1e1      	bne.n	2ffdd89a <mmap_add_region_check+0xf6>
2ffdd8d6:	42a8      	cmp	r0, r5
2ffdd8d8:	d1df      	bne.n	2ffdd89a <mmap_add_region_check+0xf6>
2ffdd8da:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffdd8de:	e7b2      	b.n	2ffdd846 <mmap_add_region_check+0xa2>
2ffdd8e0:	f06f 0015 	mvn.w	r0, #21
2ffdd8e4:	e7af      	b.n	2ffdd846 <mmap_add_region_check+0xa2>
2ffdd8e6:	f06f 0021 	mvn.w	r0, #33	; 0x21
2ffdd8ea:	e7ac      	b.n	2ffdd846 <mmap_add_region_check+0xa2>
2ffdd8ec:	f06f 000b 	mvn.w	r0, #11
2ffdd8f0:	e7a9      	b.n	2ffdd846 <mmap_add_region_check+0xa2>
2ffdd8f2:	45a4      	cmp	ip, r4
2ffdd8f4:	d8d1      	bhi.n	2ffdd89a <mmap_add_region_check+0xf6>
2ffdd8f6:	4572      	cmp	r2, lr
2ffdd8f8:	d8cf      	bhi.n	2ffdd89a <mmap_add_region_check+0xf6>
2ffdd8fa:	e7ee      	b.n	2ffdd8da <mmap_add_region_check+0x136>

2ffdd8fc <xlat_clean_dcache_range>:
2ffdd8fc:	b538      	push	{r3, r4, r5, lr}
2ffdd8fe:	4604      	mov	r4, r0
2ffdd900:	460d      	mov	r5, r1
2ffdd902:	f7ff fe0a 	bl	2ffdd51a <is_dcache_enabled>
2ffdd906:	b128      	cbz	r0, 2ffdd914 <xlat_clean_dcache_range+0x18>
2ffdd908:	4629      	mov	r1, r5
2ffdd90a:	4620      	mov	r0, r4
2ffdd90c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffdd910:	f009 bb3a 	b.w	2ffe6f88 <__clean_dcache_range_from_thumb>
2ffdd914:	bd38      	pop	{r3, r4, r5, pc}
	...

2ffdd918 <xlat_table_get_index>:
2ffdd918:	4603      	mov	r3, r0
2ffdd91a:	b510      	push	{r4, lr}
2ffdd91c:	6984      	ldr	r4, [r0, #24]
2ffdd91e:	2000      	movs	r0, #0
2ffdd920:	4284      	cmp	r4, r0
2ffdd922:	dc03      	bgt.n	2ffdd92c <xlat_table_get_index+0x14>
2ffdd924:	4805      	ldr	r0, [pc, #20]	; (2ffdd93c <xlat_table_get_index+0x24>)
2ffdd926:	2135      	movs	r1, #53	; 0x35
2ffdd928:	f005 faf4 	bl	2ffe2f14 <__assert>
2ffdd92c:	695a      	ldr	r2, [r3, #20]
2ffdd92e:	eb02 3200 	add.w	r2, r2, r0, lsl #12
2ffdd932:	4291      	cmp	r1, r2
2ffdd934:	d001      	beq.n	2ffdd93a <xlat_table_get_index+0x22>
2ffdd936:	3001      	adds	r0, #1
2ffdd938:	e7f2      	b.n	2ffdd920 <xlat_table_get_index+0x8>
2ffdd93a:	bd10      	pop	{r4, pc}
2ffdd93c:	2ffe5947 	.word	0x2ffe5947

2ffdd940 <xlat_tables_unmap_region>:
2ffdd940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffdd944:	b089      	sub	sp, #36	; 0x24
2ffdd946:	469a      	mov	sl, r3
2ffdd948:	460e      	mov	r6, r1
2ffdd94a:	9f13      	ldr	r7, [sp, #76]	; 0x4c
2ffdd94c:	4605      	mov	r5, r0
2ffdd94e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
2ffdd950:	4611      	mov	r1, r2
2ffdd952:	42bb      	cmp	r3, r7
2ffdd954:	d801      	bhi.n	2ffdd95a <xlat_tables_unmap_region+0x1a>
2ffdd956:	2f03      	cmp	r7, #3
2ffdd958:	d904      	bls.n	2ffdd964 <xlat_tables_unmap_region+0x24>
2ffdd95a:	f240 115f 	movw	r1, #351	; 0x15f
2ffdd95e:	484d      	ldr	r0, [pc, #308]	; (2ffdda94 <xlat_tables_unmap_region+0x154>)
2ffdd960:	f005 fad8 	bl	2ffe2f14 <__assert>
2ffdd964:	e9d6 2302 	ldrd	r2, r3, [r6, #8]
2ffdd968:	f06f 0408 	mvn.w	r4, #8
2ffdd96c:	f04f 0901 	mov.w	r9, #1
2ffdd970:	4413      	add	r3, r2
2ffdd972:	437c      	muls	r4, r7
2ffdd974:	428a      	cmp	r2, r1
2ffdd976:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
2ffdd97a:	9306      	str	r3, [sp, #24]
2ffdd97c:	f104 0327 	add.w	r3, r4, #39	; 0x27
2ffdd980:	bf98      	it	ls
2ffdd982:	460a      	movls	r2, r1
2ffdd984:	fa09 f003 	lsl.w	r0, r9, r3
2ffdd988:	9005      	str	r0, [sp, #20]
2ffdd98a:	bf84      	itt	hi
2ffdd98c:	4240      	neghi	r0, r0
2ffdd98e:	4002      	andhi	r2, r0
2ffdd990:	1a54      	subs	r4, r2, r1
2ffdd992:	40dc      	lsrs	r4, r3
2ffdd994:	eb0a 08c4 	add.w	r8, sl, r4, lsl #3
2ffdd998:	9b12      	ldr	r3, [sp, #72]	; 0x48
2ffdd99a:	429c      	cmp	r4, r3
2ffdd99c:	d26a      	bcs.n	2ffdda74 <xlat_tables_unmap_region+0x134>
2ffdd99e:	9b05      	ldr	r3, [sp, #20]
2ffdd9a0:	eb02 0b03 	add.w	fp, r2, r3
2ffdd9a4:	f8d8 3000 	ldr.w	r3, [r8]
2ffdd9a8:	f003 0103 	and.w	r1, r3, #3
2ffdd9ac:	9102      	str	r1, [sp, #8]
2ffdd9ae:	2100      	movs	r1, #0
2ffdd9b0:	9103      	str	r1, [sp, #12]
2ffdd9b2:	e9d6 1002 	ldrd	r1, r0, [r6, #8]
2ffdd9b6:	428a      	cmp	r2, r1
2ffdd9b8:	eb01 0c00 	add.w	ip, r1, r0
2ffdd9bc:	f10b 30ff 	add.w	r0, fp, #4294967295	; 0xffffffff
2ffdd9c0:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
2ffdd9c4:	d317      	bcc.n	2ffdd9f6 <xlat_tables_unmap_region+0xb6>
2ffdd9c6:	4584      	cmp	ip, r0
2ffdd9c8:	d315      	bcc.n	2ffdd9f6 <xlat_tables_unmap_region+0xb6>
2ffdd9ca:	2f03      	cmp	r7, #3
2ffdd9cc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
2ffdd9d0:	d106      	bne.n	2ffdd9e0 <xlat_tables_unmap_region+0xa0>
2ffdd9d2:	2900      	cmp	r1, #0
2ffdd9d4:	bf08      	it	eq
2ffdd9d6:	2803      	cmpeq	r0, #3
2ffdd9d8:	d03e      	beq.n	2ffdda58 <xlat_tables_unmap_region+0x118>
2ffdd9da:	f44f 7196 	mov.w	r1, #300	; 0x12c
2ffdd9de:	e7be      	b.n	2ffdd95e <xlat_tables_unmap_region+0x1e>
2ffdd9e0:	2900      	cmp	r1, #0
2ffdd9e2:	bf08      	it	eq
2ffdd9e4:	2803      	cmpeq	r0, #3
2ffdd9e6:	d01a      	beq.n	2ffdda1e <xlat_tables_unmap_region+0xde>
2ffdd9e8:	2900      	cmp	r1, #0
2ffdd9ea:	bf08      	it	eq
2ffdd9ec:	2801      	cmpeq	r0, #1
2ffdd9ee:	d033      	beq.n	2ffdda58 <xlat_tables_unmap_region+0x118>
2ffdd9f0:	f240 113b 	movw	r1, #315	; 0x13b
2ffdd9f4:	e7b3      	b.n	2ffdd95e <xlat_tables_unmap_region+0x1e>
2ffdd9f6:	4281      	cmp	r1, r0
2ffdd9f8:	d901      	bls.n	2ffdd9fe <xlat_tables_unmap_region+0xbe>
2ffdd9fa:	4562      	cmp	r2, ip
2ffdd9fc:	d834      	bhi.n	2ffdda68 <xlat_tables_unmap_region+0x128>
2ffdd9fe:	2f03      	cmp	r7, #3
2ffdda00:	d102      	bne.n	2ffdda08 <xlat_tables_unmap_region+0xc8>
2ffdda02:	f44f 71a5 	mov.w	r1, #330	; 0x14a
2ffdda06:	e7aa      	b.n	2ffdd95e <xlat_tables_unmap_region+0x1e>
2ffdda08:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
2ffdda0c:	2900      	cmp	r1, #0
2ffdda0e:	bf08      	it	eq
2ffdda10:	2803      	cmpeq	r0, #3
2ffdda12:	d004      	beq.n	2ffdda1e <xlat_tables_unmap_region+0xde>
2ffdda14:	f240 114b 	movw	r1, #331	; 0x14b
2ffdda18:	e7a1      	b.n	2ffdd95e <xlat_tables_unmap_region+0x1e>
2ffdda1a:	465a      	mov	r2, fp
2ffdda1c:	e7bc      	b.n	2ffdd998 <xlat_tables_unmap_region+0x58>
2ffdda1e:	f423 697f 	bic.w	r9, r3, #4080	; 0xff0
2ffdda22:	1c79      	adds	r1, r7, #1
2ffdda24:	f029 090f 	bic.w	r9, r9, #15
2ffdda28:	4628      	mov	r0, r5
2ffdda2a:	9101      	str	r1, [sp, #4]
2ffdda2c:	f44f 7100 	mov.w	r1, #512	; 0x200
2ffdda30:	9100      	str	r1, [sp, #0]
2ffdda32:	464b      	mov	r3, r9
2ffdda34:	9207      	str	r2, [sp, #28]
2ffdda36:	4631      	mov	r1, r6
2ffdda38:	f7ff ff82 	bl	2ffdd940 <xlat_tables_unmap_region>
2ffdda3c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
2ffdda40:	4648      	mov	r0, r9
2ffdda42:	f7ff ff5b 	bl	2ffdd8fc <xlat_clean_dcache_range>
2ffdda46:	4649      	mov	r1, r9
2ffdda48:	4628      	mov	r0, r5
2ffdda4a:	f7ff ff65 	bl	2ffdd918 <xlat_table_get_index>
2ffdda4e:	69eb      	ldr	r3, [r5, #28]
2ffdda50:	9a07      	ldr	r2, [sp, #28]
2ffdda52:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
2ffdda56:	b93b      	cbnz	r3, 2ffdda68 <xlat_tables_unmap_region+0x128>
2ffdda58:	2000      	movs	r0, #0
2ffdda5a:	2100      	movs	r1, #0
2ffdda5c:	e9c8 0100 	strd	r0, r1, [r8]
2ffdda60:	6c69      	ldr	r1, [r5, #68]	; 0x44
2ffdda62:	4610      	mov	r0, r2
2ffdda64:	f7ff fd7c 	bl	2ffdd560 <xlat_arch_tlbi_va>
2ffdda68:	9b06      	ldr	r3, [sp, #24]
2ffdda6a:	3401      	adds	r4, #1
2ffdda6c:	f108 0808 	add.w	r8, r8, #8
2ffdda70:	459b      	cmp	fp, r3
2ffdda72:	d3d2      	bcc.n	2ffdda1a <xlat_tables_unmap_region+0xda>
2ffdda74:	6beb      	ldr	r3, [r5, #60]	; 0x3c
2ffdda76:	42bb      	cmp	r3, r7
2ffdda78:	d209      	bcs.n	2ffdda8e <xlat_tables_unmap_region+0x14e>
2ffdda7a:	4651      	mov	r1, sl
2ffdda7c:	4628      	mov	r0, r5
2ffdda7e:	f7ff ff4b 	bl	2ffdd918 <xlat_table_get_index>
2ffdda82:	69ea      	ldr	r2, [r5, #28]
2ffdda84:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
2ffdda88:	3b01      	subs	r3, #1
2ffdda8a:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
2ffdda8e:	b009      	add	sp, #36	; 0x24
2ffdda90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffdda94:	2ffe5947 	.word	0x2ffe5947

2ffdda98 <xlat_desc>:
2ffdda98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffdda9a:	468c      	mov	ip, r1
2ffdda9c:	9c06      	ldr	r4, [sp, #24]
2ffdda9e:	f06f 0108 	mvn.w	r1, #8
2ffddaa2:	2700      	movs	r7, #0
2ffddaa4:	4361      	muls	r1, r4
2ffddaa6:	f101 0527 	add.w	r5, r1, #39	; 0x27
2ffddaaa:	2101      	movs	r1, #1
2ffddaac:	40a9      	lsls	r1, r5
2ffddaae:	3901      	subs	r1, #1
2ffddab0:	ea01 0602 	and.w	r6, r1, r2
2ffddab4:	ea56 0107 	orrs.w	r1, r6, r7
2ffddab8:	d003      	beq.n	2ffddac2 <xlat_desc+0x2a>
2ffddaba:	2172      	movs	r1, #114	; 0x72
2ffddabc:	4822      	ldr	r0, [pc, #136]	; (2ffddb48 <xlat_desc+0xb0>)
2ffddabe:	f005 fa29 	bl	2ffe2f14 <__assert>
2ffddac2:	6c40      	ldr	r0, [r0, #68]	; 0x44
2ffddac4:	2c03      	cmp	r4, #3
2ffddac6:	ea4f 044c 	mov.w	r4, ip, lsl #1
2ffddaca:	bf0c      	ite	eq
2ffddacc:	2103      	moveq	r1, #3
2ffddace:	2101      	movne	r1, #1
2ffddad0:	f004 0420 	and.w	r4, r4, #32
2ffddad4:	4314      	orrs	r4, r2
2ffddad6:	f01c 0f08 	tst.w	ip, #8
2ffddada:	ea44 0401 	orr.w	r4, r4, r1
2ffddade:	bf08      	it	eq
2ffddae0:	2680      	moveq	r6, #128	; 0x80
2ffddae2:	ea44 0406 	orr.w	r4, r4, r6
2ffddae6:	bf08      	it	eq
2ffddae8:	2700      	moveq	r7, #0
2ffddaea:	ea43 0507 	orr.w	r5, r3, r7
2ffddaee:	2801      	cmp	r0, #1
2ffddaf0:	d10f      	bne.n	2ffddb12 <xlat_desc+0x7a>
2ffddaf2:	f01c 0f40 	tst.w	ip, #64	; 0x40
2ffddaf6:	d111      	bne.n	2ffddb1c <xlat_desc+0x84>
2ffddaf8:	f444 6480 	orr.w	r4, r4, #1024	; 0x400
2ffddafc:	f01c 0607 	ands.w	r6, ip, #7
2ffddb00:	4629      	mov	r1, r5
2ffddb02:	d10e      	bne.n	2ffddb22 <xlat_desc+0x8a>
2ffddb04:	f7ff fd18 	bl	2ffdd538 <xlat_arch_regime_get_xn_desc>
2ffddb08:	4304      	orrs	r4, r0
2ffddb0a:	4329      	orrs	r1, r5
2ffddb0c:	f444 7001 	orr.w	r0, r4, #516	; 0x204
2ffddb10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffddb12:	1e83      	subs	r3, r0, #2
2ffddb14:	2b01      	cmp	r3, #1
2ffddb16:	d901      	bls.n	2ffddb1c <xlat_desc+0x84>
2ffddb18:	2194      	movs	r1, #148	; 0x94
2ffddb1a:	e7cf      	b.n	2ffddabc <xlat_desc+0x24>
2ffddb1c:	f444 6488 	orr.w	r4, r4, #1088	; 0x440
2ffddb20:	e7ec      	b.n	2ffddafc <xlat_desc+0x64>
2ffddb22:	f01c 0f28 	tst.w	ip, #40	; 0x28
2ffddb26:	d003      	beq.n	2ffddb30 <xlat_desc+0x98>
2ffddb28:	f7ff fd06 	bl	2ffdd538 <xlat_arch_regime_get_xn_desc>
2ffddb2c:	4304      	orrs	r4, r0
2ffddb2e:	4329      	orrs	r1, r5
2ffddb30:	2e02      	cmp	r6, #2
2ffddb32:	d102      	bne.n	2ffddb3a <xlat_desc+0xa2>
2ffddb34:	f444 7040 	orr.w	r0, r4, #768	; 0x300
2ffddb38:	e7ea      	b.n	2ffddb10 <xlat_desc+0x78>
2ffddb3a:	2e01      	cmp	r6, #1
2ffddb3c:	d001      	beq.n	2ffddb42 <xlat_desc+0xaa>
2ffddb3e:	21d4      	movs	r1, #212	; 0xd4
2ffddb40:	e7bc      	b.n	2ffddabc <xlat_desc+0x24>
2ffddb42:	f444 7002 	orr.w	r0, r4, #520	; 0x208
2ffddb46:	e7e3      	b.n	2ffddb10 <xlat_desc+0x78>
2ffddb48:	2ffe5947 	.word	0x2ffe5947

2ffddb4c <xlat_tables_map_region>:
2ffddb4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffddb50:	b08b      	sub	sp, #44	; 0x2c
2ffddb52:	460f      	mov	r7, r1
2ffddb54:	4606      	mov	r6, r0
2ffddb56:	f8dd 8054 	ldr.w	r8, [sp, #84]	; 0x54
2ffddb5a:	461d      	mov	r5, r3
2ffddb5c:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
2ffddb5e:	4541      	cmp	r1, r8
2ffddb60:	d802      	bhi.n	2ffddb68 <xlat_tables_map_region+0x1c>
2ffddb62:	f1b8 0f03 	cmp.w	r8, #3
2ffddb66:	d904      	bls.n	2ffddb72 <xlat_tables_map_region+0x26>
2ffddb68:	f44f 710d 	mov.w	r1, #564	; 0x234
2ffddb6c:	4863      	ldr	r0, [pc, #396]	; (2ffddcfc <xlat_tables_map_region+0x1b0>)
2ffddb6e:	f005 f9d1 	bl	2ffe2f14 <__assert>
2ffddb72:	e9d7 0302 	ldrd	r0, r3, [r7, #8]
2ffddb76:	f04f 0b01 	mov.w	fp, #1
2ffddb7a:	4403      	add	r3, r0
2ffddb7c:	4290      	cmp	r0, r2
2ffddb7e:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
2ffddb82:	9307      	str	r3, [sp, #28]
2ffddb84:	f06f 0308 	mvn.w	r3, #8
2ffddb88:	fb03 f308 	mul.w	r3, r3, r8
2ffddb8c:	bf98      	it	ls
2ffddb8e:	4614      	movls	r4, r2
2ffddb90:	f103 0327 	add.w	r3, r3, #39	; 0x27
2ffddb94:	9303      	str	r3, [sp, #12]
2ffddb96:	fa0b fb03 	lsl.w	fp, fp, r3
2ffddb9a:	bf88      	it	hi
2ffddb9c:	f1cb 0400 	rsbhi	r4, fp, #0
2ffddba0:	9b03      	ldr	r3, [sp, #12]
2ffddba2:	bf88      	it	hi
2ffddba4:	4004      	andhi	r4, r0
2ffddba6:	1aa2      	subs	r2, r4, r2
2ffddba8:	4541      	cmp	r1, r8
2ffddbaa:	fa22 fa03 	lsr.w	sl, r2, r3
2ffddbae:	d209      	bcs.n	2ffddbc4 <xlat_tables_map_region+0x78>
2ffddbb0:	4629      	mov	r1, r5
2ffddbb2:	4630      	mov	r0, r6
2ffddbb4:	f7ff feb0 	bl	2ffdd918 <xlat_table_get_index>
2ffddbb8:	69f2      	ldr	r2, [r6, #28]
2ffddbba:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
2ffddbbe:	3301      	adds	r3, #1
2ffddbc0:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
2ffddbc4:	eb05 05ca 	add.w	r5, r5, sl, lsl #3
2ffddbc8:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
2ffddbcc:	9308      	str	r3, [sp, #32]
2ffddbce:	f108 0301 	add.w	r3, r8, #1
2ffddbd2:	9306      	str	r3, [sp, #24]
2ffddbd4:	e055      	b.n	2ffddc82 <xlat_tables_map_region+0x136>
2ffddbd6:	f8d7 c008 	ldr.w	ip, [r7, #8]
2ffddbda:	68fb      	ldr	r3, [r7, #12]
2ffddbdc:	6828      	ldr	r0, [r5, #0]
2ffddbde:	45a4      	cmp	ip, r4
2ffddbe0:	4463      	add	r3, ip
2ffddbe2:	f000 0103 	and.w	r1, r0, #3
2ffddbe6:	eb04 090b 	add.w	r9, r4, fp
2ffddbea:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
2ffddbee:	f109 32ff 	add.w	r2, r9, #4294967295	; 0xffffffff
2ffddbf2:	d850      	bhi.n	2ffddc96 <xlat_tables_map_region+0x14a>
2ffddbf4:	4293      	cmp	r3, r2
2ffddbf6:	d34e      	bcc.n	2ffddc96 <xlat_tables_map_region+0x14a>
2ffddbf8:	e9d7 2300 	ldrd	r2, r3, [r7]
2ffddbfc:	ebb2 020c 	subs.w	r2, r2, ip
2ffddc00:	f163 0300 	sbc.w	r3, r3, #0
2ffddc04:	1912      	adds	r2, r2, r4
2ffddc06:	f143 0300 	adc.w	r3, r3, #0
2ffddc0a:	f1b8 0f03 	cmp.w	r8, #3
2ffddc0e:	d105      	bne.n	2ffddc1c <xlat_tables_map_region+0xd0>
2ffddc10:	2903      	cmp	r1, #3
2ffddc12:	d02f      	beq.n	2ffddc74 <xlat_tables_map_region+0x128>
2ffddc14:	b331      	cbz	r1, 2ffddc64 <xlat_tables_map_region+0x118>
2ffddc16:	f240 11cb 	movw	r1, #459	; 0x1cb
2ffddc1a:	e7a7      	b.n	2ffddb6c <xlat_tables_map_region+0x20>
2ffddc1c:	2903      	cmp	r1, #3
2ffddc1e:	d068      	beq.n	2ffddcf2 <xlat_tables_map_region+0x1a6>
2ffddc20:	2900      	cmp	r1, #0
2ffddc22:	d133      	bne.n	2ffddc8c <xlat_tables_map_region+0x140>
2ffddc24:	9808      	ldr	r0, [sp, #32]
2ffddc26:	4010      	ands	r0, r2
2ffddc28:	e9cd 0104 	strd	r0, r1, [sp, #16]
2ffddc2c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
2ffddc30:	4301      	orrs	r1, r0
2ffddc32:	d010      	beq.n	2ffddc56 <xlat_tables_map_region+0x10a>
2ffddc34:	69b1      	ldr	r1, [r6, #24]
2ffddc36:	2300      	movs	r3, #0
2ffddc38:	428b      	cmp	r3, r1
2ffddc3a:	da08      	bge.n	2ffddc4e <xlat_tables_map_region+0x102>
2ffddc3c:	69f2      	ldr	r2, [r6, #28]
2ffddc3e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
2ffddc42:	2a00      	cmp	r2, #0
2ffddc44:	d138      	bne.n	2ffddcb8 <xlat_tables_map_region+0x16c>
2ffddc46:	6971      	ldr	r1, [r6, #20]
2ffddc48:	eb11 3303 	adds.w	r3, r1, r3, lsl #12
2ffddc4c:	d136      	bne.n	2ffddcbc <xlat_tables_map_region+0x170>
2ffddc4e:	4620      	mov	r0, r4
2ffddc50:	b00b      	add	sp, #44	; 0x2c
2ffddc52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffddc56:	f1b8 0f00 	cmp.w	r8, #0
2ffddc5a:	d0eb      	beq.n	2ffddc34 <xlat_tables_map_region+0xe8>
2ffddc5c:	6979      	ldr	r1, [r7, #20]
2ffddc5e:	9803      	ldr	r0, [sp, #12]
2ffddc60:	40c1      	lsrs	r1, r0
2ffddc62:	d0e7      	beq.n	2ffddc34 <xlat_tables_map_region+0xe8>
2ffddc64:	6939      	ldr	r1, [r7, #16]
2ffddc66:	4630      	mov	r0, r6
2ffddc68:	f8cd 8000 	str.w	r8, [sp]
2ffddc6c:	f7ff ff14 	bl	2ffdda98 <xlat_desc>
2ffddc70:	e9c5 0100 	strd	r0, r1, [r5]
2ffddc74:	9b07      	ldr	r3, [sp, #28]
2ffddc76:	f10a 0a01 	add.w	sl, sl, #1
2ffddc7a:	3508      	adds	r5, #8
2ffddc7c:	464c      	mov	r4, r9
2ffddc7e:	454b      	cmp	r3, r9
2ffddc80:	d902      	bls.n	2ffddc88 <xlat_tables_map_region+0x13c>
2ffddc82:	9b14      	ldr	r3, [sp, #80]	; 0x50
2ffddc84:	459a      	cmp	sl, r3
2ffddc86:	d3a6      	bcc.n	2ffddbd6 <xlat_tables_map_region+0x8a>
2ffddc88:	3c01      	subs	r4, #1
2ffddc8a:	e7e0      	b.n	2ffddc4e <xlat_tables_map_region+0x102>
2ffddc8c:	2901      	cmp	r1, #1
2ffddc8e:	d0f1      	beq.n	2ffddc74 <xlat_tables_map_region+0x128>
2ffddc90:	f44f 71f9 	mov.w	r1, #498	; 0x1f2
2ffddc94:	e76a      	b.n	2ffddb6c <xlat_tables_map_region+0x20>
2ffddc96:	4594      	cmp	ip, r2
2ffddc98:	d901      	bls.n	2ffddc9e <xlat_tables_map_region+0x152>
2ffddc9a:	429c      	cmp	r4, r3
2ffddc9c:	d8ea      	bhi.n	2ffddc74 <xlat_tables_map_region+0x128>
2ffddc9e:	f1b8 0f03 	cmp.w	r8, #3
2ffddca2:	d102      	bne.n	2ffddcaa <xlat_tables_map_region+0x15e>
2ffddca4:	f240 2107 	movw	r1, #519	; 0x207
2ffddca8:	e760      	b.n	2ffddb6c <xlat_tables_map_region+0x20>
2ffddcaa:	2900      	cmp	r1, #0
2ffddcac:	d0c2      	beq.n	2ffddc34 <xlat_tables_map_region+0xe8>
2ffddcae:	2903      	cmp	r1, #3
2ffddcb0:	d01f      	beq.n	2ffddcf2 <xlat_tables_map_region+0x1a6>
2ffddcb2:	f240 2112 	movw	r1, #530	; 0x212
2ffddcb6:	e759      	b.n	2ffddb6c <xlat_tables_map_region+0x20>
2ffddcb8:	3301      	adds	r3, #1
2ffddcba:	e7bd      	b.n	2ffddc38 <xlat_tables_map_region+0xec>
2ffddcbc:	f043 0103 	orr.w	r1, r3, #3
2ffddcc0:	e9c5 1200 	strd	r1, r2, [r5]
2ffddcc4:	9a06      	ldr	r2, [sp, #24]
2ffddcc6:	4639      	mov	r1, r7
2ffddcc8:	9309      	str	r3, [sp, #36]	; 0x24
2ffddcca:	4630      	mov	r0, r6
2ffddccc:	9201      	str	r2, [sp, #4]
2ffddcce:	f44f 7200 	mov.w	r2, #512	; 0x200
2ffddcd2:	9200      	str	r2, [sp, #0]
2ffddcd4:	4622      	mov	r2, r4
2ffddcd6:	f7ff ff39 	bl	2ffddb4c <xlat_tables_map_region>
2ffddcda:	9b09      	ldr	r3, [sp, #36]	; 0x24
2ffddcdc:	4604      	mov	r4, r0
2ffddcde:	f44f 5180 	mov.w	r1, #4096	; 0x1000
2ffddce2:	4618      	mov	r0, r3
2ffddce4:	f7ff fe0a 	bl	2ffdd8fc <xlat_clean_dcache_range>
2ffddce8:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
2ffddcec:	429c      	cmp	r4, r3
2ffddcee:	d0c1      	beq.n	2ffddc74 <xlat_tables_map_region+0x128>
2ffddcf0:	e7ad      	b.n	2ffddc4e <xlat_tables_map_region+0x102>
2ffddcf2:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
2ffddcf6:	f023 030f 	bic.w	r3, r3, #15
2ffddcfa:	e7e3      	b.n	2ffddcc4 <xlat_tables_map_region+0x178>
2ffddcfc:	2ffe5947 	.word	0x2ffe5947

2ffddd00 <mmap_add_region_ctx>:
2ffddd00:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffddd04:	4606      	mov	r6, r0
2ffddd06:	f8d1 a00c 	ldr.w	sl, [r1, #12]
2ffddd0a:	460d      	mov	r5, r1
2ffddd0c:	f1ba 0f00 	cmp.w	sl, #0
2ffddd10:	d057      	beq.n	2ffdddc2 <mmap_add_region_ctx+0xc2>
2ffddd12:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
2ffddd16:	b123      	cbz	r3, 2ffddd22 <mmap_add_region_ctx+0x22>
2ffddd18:	f240 3107 	movw	r1, #775	; 0x307
2ffddd1c:	4832      	ldr	r0, [pc, #200]	; (2ffddde8 <mmap_add_region_ctx+0xe8>)
2ffddd1e:	f005 f8f9 	bl	2ffe2f14 <__assert>
2ffddd22:	f7ff fd3f 	bl	2ffdd7a4 <mmap_add_region_check>
2ffddd26:	4601      	mov	r1, r0
2ffddd28:	b9e8      	cbnz	r0, 2ffddd66 <mmap_add_region_ctx+0x66>
2ffddd2a:	68a9      	ldr	r1, [r5, #8]
2ffddd2c:	68f2      	ldr	r2, [r6, #12]
2ffddd2e:	4451      	add	r1, sl
2ffddd30:	1e4f      	subs	r7, r1, #1
2ffddd32:	4614      	mov	r4, r2
2ffddd34:	e9d4 3002 	ldrd	r3, r0, [r4, #8]
2ffddd38:	4403      	add	r3, r0
2ffddd3a:	3b01      	subs	r3, #1
2ffddd3c:	42bb      	cmp	r3, r7
2ffddd3e:	d200      	bcs.n	2ffddd42 <mmap_add_region_ctx+0x42>
2ffddd40:	b9b8      	cbnz	r0, 2ffddd72 <mmap_add_region_ctx+0x72>
2ffddd42:	e9d4 3002 	ldrd	r3, r0, [r4, #8]
2ffddd46:	4403      	add	r3, r0
2ffddd48:	4299      	cmp	r1, r3
2ffddd4a:	d014      	beq.n	2ffddd76 <mmap_add_region_ctx+0x76>
2ffddd4c:	6933      	ldr	r3, [r6, #16]
2ffddd4e:	f04f 0818 	mov.w	r8, #24
2ffddd52:	fb08 2803 	mla	r8, r8, r3, r2
2ffddd56:	68d3      	ldr	r3, [r2, #12]
2ffddd58:	2b00      	cmp	r3, #0
2ffddd5a:	d035      	beq.n	2ffdddc8 <mmap_add_region_ctx+0xc8>
2ffddd5c:	4542      	cmp	r2, r8
2ffddd5e:	d310      	bcc.n	2ffddd82 <mmap_add_region_ctx+0x82>
2ffddd60:	f240 313f 	movw	r1, #831	; 0x33f
2ffddd64:	e7da      	b.n	2ffddd1c <mmap_add_region_ctx+0x1c>
2ffddd66:	4821      	ldr	r0, [pc, #132]	; (2ffdddec <mmap_add_region_ctx+0xec>)
2ffddd68:	f7fe fec0 	bl	2ffdcaec <tf_log>
2ffddd6c:	f44f 7143 	mov.w	r1, #780	; 0x30c
2ffddd70:	e7d4      	b.n	2ffddd1c <mmap_add_region_ctx+0x1c>
2ffddd72:	3418      	adds	r4, #24
2ffddd74:	e7de      	b.n	2ffddd34 <mmap_add_region_ctx+0x34>
2ffddd76:	2800      	cmp	r0, #0
2ffddd78:	d0e8      	beq.n	2ffddd4c <mmap_add_region_ctx+0x4c>
2ffddd7a:	4582      	cmp	sl, r0
2ffddd7c:	d9e6      	bls.n	2ffddd4c <mmap_add_region_ctx+0x4c>
2ffddd7e:	3418      	adds	r4, #24
2ffddd80:	e7df      	b.n	2ffddd42 <mmap_add_region_ctx+0x42>
2ffddd82:	3218      	adds	r2, #24
2ffddd84:	e7e7      	b.n	2ffddd56 <mmap_add_region_ctx+0x56>
2ffddd86:	f119 33ff 	adds.w	r3, r9, #4294967295	; 0xffffffff
2ffddd8a:	9300      	str	r3, [sp, #0]
2ffddd8c:	f14b 33ff 	adc.w	r3, fp, #4294967295	; 0xffffffff
2ffddd90:	9301      	str	r3, [sp, #4]
2ffddd92:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2ffddd94:	e9dd 8900 	ldrd	r8, r9, [sp]
2ffddd98:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2ffddd9a:	eb18 080a 	adds.w	r8, r8, sl
2ffddd9e:	e9d6 230c 	ldrd	r2, r3, [r6, #48]	; 0x30
2ffddda2:	f149 0900 	adc.w	r9, r9, #0
2ffddda6:	454b      	cmp	r3, r9
2ffddda8:	e895 0003 	ldmia.w	r5, {r0, r1}
2ffdddac:	bf08      	it	eq
2ffdddae:	4542      	cmpeq	r2, r8
2ffdddb0:	e884 0003 	stmia.w	r4, {r0, r1}
2ffdddb4:	d201      	bcs.n	2ffdddba <mmap_add_region_ctx+0xba>
2ffdddb6:	e9c6 890c 	strd	r8, r9, [r6, #48]	; 0x30
2ffdddba:	6bb3      	ldr	r3, [r6, #56]	; 0x38
2ffdddbc:	42bb      	cmp	r3, r7
2ffdddbe:	d200      	bcs.n	2ffdddc2 <mmap_add_region_ctx+0xc2>
2ffdddc0:	63b7      	str	r7, [r6, #56]	; 0x38
2ffdddc2:	b003      	add	sp, #12
2ffdddc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffdddc8:	1b12      	subs	r2, r2, r4
2ffdddca:	4621      	mov	r1, r4
2ffdddcc:	f104 0018 	add.w	r0, r4, #24
2ffdddd0:	e9d5 9b00 	ldrd	r9, fp, [r5]
2ffdddd4:	f005 f8d1 	bl	2ffe2f7a <memmove>
2ffdddd8:	f8d8 300c 	ldr.w	r3, [r8, #12]
2ffddddc:	2b00      	cmp	r3, #0
2ffdddde:	d0d2      	beq.n	2ffddd86 <mmap_add_region_ctx+0x86>
2ffddde0:	f240 314b 	movw	r1, #843	; 0x34b
2ffddde4:	e79a      	b.n	2ffddd1c <mmap_add_region_ctx+0x1c>
2ffddde6:	bf00      	nop
2ffddde8:	2ffe5947 	.word	0x2ffe5947
2ffdddec:	2ffe596d 	.word	0x2ffe596d

2ffdddf0 <mmap_add_ctx>:
2ffdddf0:	b538      	push	{r3, r4, r5, lr}
2ffdddf2:	4605      	mov	r5, r0
2ffdddf4:	460c      	mov	r4, r1
2ffdddf6:	6963      	ldr	r3, [r4, #20]
2ffdddf8:	b903      	cbnz	r3, 2ffdddfc <mmap_add_ctx+0xc>
2ffdddfa:	bd38      	pop	{r3, r4, r5, pc}
2ffdddfc:	4621      	mov	r1, r4
2ffdddfe:	4628      	mov	r0, r5
2ffdde00:	3418      	adds	r4, #24
2ffdde02:	f7ff ff7d 	bl	2ffddd00 <mmap_add_region_ctx>
2ffdde06:	e7f6      	b.n	2ffdddf6 <mmap_add_ctx+0x6>

2ffdde08 <mmap_add_dynamic_region_ctx>:
2ffdde08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffdde0c:	b08f      	sub	sp, #60	; 0x3c
2ffdde0e:	68cb      	ldr	r3, [r1, #12]
2ffdde10:	4604      	mov	r4, r0
2ffdde12:	460d      	mov	r5, r1
2ffdde14:	9303      	str	r3, [sp, #12]
2ffdde16:	b92b      	cbnz	r3, 2ffdde24 <mmap_add_dynamic_region_ctx+0x1c>
2ffdde18:	f04f 0a00 	mov.w	sl, #0
2ffdde1c:	4650      	mov	r0, sl
2ffdde1e:	b00f      	add	sp, #60	; 0x3c
2ffdde20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffdde24:	680b      	ldr	r3, [r1, #0]
2ffdde26:	f8d0 b00c 	ldr.w	fp, [r0, #12]
2ffdde2a:	9306      	str	r3, [sp, #24]
2ffdde2c:	684b      	ldr	r3, [r1, #4]
2ffdde2e:	f8d0 9010 	ldr.w	r9, [r0, #16]
2ffdde32:	9307      	str	r3, [sp, #28]
2ffdde34:	690b      	ldr	r3, [r1, #16]
2ffdde36:	688e      	ldr	r6, [r1, #8]
2ffdde38:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2ffdde3c:	610b      	str	r3, [r1, #16]
2ffdde3e:	f7ff fcb1 	bl	2ffdd7a4 <mmap_add_region_check>
2ffdde42:	4682      	mov	sl, r0
2ffdde44:	2800      	cmp	r0, #0
2ffdde46:	d1e9      	bne.n	2ffdde1c <mmap_add_dynamic_region_ctx+0x14>
2ffdde48:	9b03      	ldr	r3, [sp, #12]
2ffdde4a:	1999      	adds	r1, r3, r6
2ffdde4c:	465b      	mov	r3, fp
2ffdde4e:	1e4e      	subs	r6, r1, #1
2ffdde50:	e9d3 2002 	ldrd	r2, r0, [r3, #8]
2ffdde54:	4698      	mov	r8, r3
2ffdde56:	3318      	adds	r3, #24
2ffdde58:	4402      	add	r2, r0
2ffdde5a:	3a01      	subs	r2, #1
2ffdde5c:	42b2      	cmp	r2, r6
2ffdde5e:	d201      	bcs.n	2ffdde64 <mmap_add_dynamic_region_ctx+0x5c>
2ffdde60:	2800      	cmp	r0, #0
2ffdde62:	d1f5      	bne.n	2ffdde50 <mmap_add_dynamic_region_ctx+0x48>
2ffdde64:	e9d8 3202 	ldrd	r3, r2, [r8, #8]
2ffdde68:	4647      	mov	r7, r8
2ffdde6a:	f108 0818 	add.w	r8, r8, #24
2ffdde6e:	4413      	add	r3, r2
2ffdde70:	4299      	cmp	r1, r3
2ffdde72:	d103      	bne.n	2ffdde7c <mmap_add_dynamic_region_ctx+0x74>
2ffdde74:	b112      	cbz	r2, 2ffdde7c <mmap_add_dynamic_region_ctx+0x74>
2ffdde76:	9b03      	ldr	r3, [sp, #12]
2ffdde78:	4293      	cmp	r3, r2
2ffdde7a:	d8f3      	bhi.n	2ffdde64 <mmap_add_dynamic_region_ctx+0x5c>
2ffdde7c:	2318      	movs	r3, #24
2ffdde7e:	4639      	mov	r1, r7
2ffdde80:	fb03 b909 	mla	r9, r3, r9, fp
2ffdde84:	4640      	mov	r0, r8
2ffdde86:	eba9 0b07 	sub.w	fp, r9, r7
2ffdde8a:	465a      	mov	r2, fp
2ffdde8c:	f005 f875 	bl	2ffe2f7a <memmove>
2ffdde90:	f8d9 900c 	ldr.w	r9, [r9, #12]
2ffdde94:	f1b9 0f00 	cmp.w	r9, #0
2ffdde98:	d004      	beq.n	2ffddea4 <mmap_add_dynamic_region_ctx+0x9c>
2ffdde9a:	4834      	ldr	r0, [pc, #208]	; (2ffddf6c <mmap_add_dynamic_region_ctx+0x164>)
2ffdde9c:	f240 31d6 	movw	r1, #982	; 0x3d6
2ffddea0:	f005 f838 	bl	2ffe2f14 <__assert>
2ffddea4:	46ae      	mov	lr, r5
2ffddea6:	46bc      	mov	ip, r7
2ffddea8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
2ffddeac:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
2ffddeb0:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
2ffddeb4:	e89e 0003 	ldmia.w	lr, {r0, r1}
2ffddeb8:	e88c 0003 	stmia.w	ip, {r0, r1}
2ffddebc:	2b00      	cmp	r3, #0
2ffddebe:	d039      	beq.n	2ffddf34 <mmap_add_dynamic_region_ctx+0x12c>
2ffddec0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2ffddec2:	464a      	mov	r2, r9
2ffddec4:	4639      	mov	r1, r7
2ffddec6:	4620      	mov	r0, r4
2ffddec8:	9301      	str	r3, [sp, #4]
2ffddeca:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2ffddecc:	9300      	str	r3, [sp, #0]
2ffddece:	6a63      	ldr	r3, [r4, #36]	; 0x24
2ffdded0:	f7ff fe3c 	bl	2ffddb4c <xlat_tables_map_region>
2ffdded4:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2ffdded6:	4606      	mov	r6, r0
2ffdded8:	6a60      	ldr	r0, [r4, #36]	; 0x24
2ffddeda:	00c9      	lsls	r1, r1, #3
2ffddedc:	f7ff fd0e 	bl	2ffdd8fc <xlat_clean_dcache_range>
2ffddee0:	e9d7 3202 	ldrd	r3, r2, [r7, #8]
2ffddee4:	4413      	add	r3, r2
2ffddee6:	3b01      	subs	r3, #1
2ffddee8:	42b3      	cmp	r3, r6
2ffddeea:	d021      	beq.n	2ffddf30 <mmap_add_dynamic_region_ctx+0x128>
2ffddeec:	465a      	mov	r2, fp
2ffddeee:	4641      	mov	r1, r8
2ffddef0:	4638      	mov	r0, r7
2ffddef2:	f005 f842 	bl	2ffe2f7a <memmove>
2ffddef6:	68ad      	ldr	r5, [r5, #8]
2ffddef8:	42b5      	cmp	r5, r6
2ffddefa:	d216      	bcs.n	2ffddf2a <mmap_add_dynamic_region_ctx+0x122>
2ffddefc:	1b76      	subs	r6, r6, r5
2ffddefe:	2218      	movs	r2, #24
2ffddf00:	4649      	mov	r1, r9
2ffddf02:	a808      	add	r0, sp, #32
2ffddf04:	f005 f84f 	bl	2ffe2fa6 <memset>
2ffddf08:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2ffddf0a:	a908      	add	r1, sp, #32
2ffddf0c:	950a      	str	r5, [sp, #40]	; 0x28
2ffddf0e:	4620      	mov	r0, r4
2ffddf10:	9301      	str	r3, [sp, #4]
2ffddf12:	464a      	mov	r2, r9
2ffddf14:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2ffddf16:	960b      	str	r6, [sp, #44]	; 0x2c
2ffddf18:	9300      	str	r3, [sp, #0]
2ffddf1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
2ffddf1c:	f7ff fd10 	bl	2ffdd940 <xlat_tables_unmap_region>
2ffddf20:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2ffddf22:	6a60      	ldr	r0, [r4, #36]	; 0x24
2ffddf24:	00c9      	lsls	r1, r1, #3
2ffddf26:	f7ff fce9 	bl	2ffdd8fc <xlat_clean_dcache_range>
2ffddf2a:	f06f 0a0b 	mvn.w	sl, #11
2ffddf2e:	e775      	b.n	2ffdde1c <mmap_add_dynamic_region_ctx+0x14>
2ffddf30:	f3bf 8f4a 	dsb	ishst
2ffddf34:	9b06      	ldr	r3, [sp, #24]
2ffddf36:	f113 33ff 	adds.w	r3, r3, #4294967295	; 0xffffffff
2ffddf3a:	9304      	str	r3, [sp, #16]
2ffddf3c:	9b07      	ldr	r3, [sp, #28]
2ffddf3e:	f143 33ff 	adc.w	r3, r3, #4294967295	; 0xffffffff
2ffddf42:	9305      	str	r3, [sp, #20]
2ffddf44:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
2ffddf48:	9b03      	ldr	r3, [sp, #12]
2ffddf4a:	18c0      	adds	r0, r0, r3
2ffddf4c:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2ffddf50:	f141 0100 	adc.w	r1, r1, #0
2ffddf54:	428b      	cmp	r3, r1
2ffddf56:	bf08      	it	eq
2ffddf58:	4282      	cmpeq	r2, r0
2ffddf5a:	d201      	bcs.n	2ffddf60 <mmap_add_dynamic_region_ctx+0x158>
2ffddf5c:	e9c4 010c 	strd	r0, r1, [r4, #48]	; 0x30
2ffddf60:	6ba3      	ldr	r3, [r4, #56]	; 0x38
2ffddf62:	42b3      	cmp	r3, r6
2ffddf64:	f4bf af58 	bcs.w	2ffdde18 <mmap_add_dynamic_region_ctx+0x10>
2ffddf68:	63a6      	str	r6, [r4, #56]	; 0x38
2ffddf6a:	e757      	b.n	2ffdde1c <mmap_add_dynamic_region_ctx+0x14>
2ffddf6c:	2ffe5947 	.word	0x2ffe5947

2ffddf70 <mmap_remove_dynamic_region_ctx>:
2ffddf70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffddf74:	2318      	movs	r3, #24
2ffddf76:	68c5      	ldr	r5, [r0, #12]
2ffddf78:	b087      	sub	sp, #28
2ffddf7a:	6907      	ldr	r7, [r0, #16]
2ffddf7c:	4604      	mov	r4, r0
2ffddf7e:	fb03 5707 	mla	r7, r3, r7, r5
2ffddf82:	68fb      	ldr	r3, [r7, #12]
2ffddf84:	b153      	cbz	r3, 2ffddf9c <mmap_remove_dynamic_region_ctx+0x2c>
2ffddf86:	483c      	ldr	r0, [pc, #240]	; (2ffde078 <mmap_remove_dynamic_region_ctx+0x108>)
2ffddf88:	f240 413a 	movw	r1, #1082	; 0x43a
2ffddf8c:	f004 ffc2 	bl	2ffe2f14 <__assert>
2ffddf90:	68a8      	ldr	r0, [r5, #8]
2ffddf92:	4288      	cmp	r0, r1
2ffddf94:	d101      	bne.n	2ffddf9a <mmap_remove_dynamic_region_ctx+0x2a>
2ffddf96:	4293      	cmp	r3, r2
2ffddf98:	d068      	beq.n	2ffde06c <mmap_remove_dynamic_region_ctx+0xfc>
2ffddf9a:	3518      	adds	r5, #24
2ffddf9c:	68eb      	ldr	r3, [r5, #12]
2ffddf9e:	2b00      	cmp	r3, #0
2ffddfa0:	d1f6      	bne.n	2ffddf90 <mmap_remove_dynamic_region_ctx+0x20>
2ffddfa2:	f06f 0015 	mvn.w	r0, #21
2ffddfa6:	b007      	add	sp, #28
2ffddfa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffddfac:	6ba3      	ldr	r3, [r4, #56]	; 0x38
2ffddfae:	3901      	subs	r1, #1
2ffddfb0:	188e      	adds	r6, r1, r2
2ffddfb2:	e9d5 0100 	ldrd	r0, r1, [r5]
2ffddfb6:	9303      	str	r3, [sp, #12]
2ffddfb8:	1880      	adds	r0, r0, r2
2ffddfba:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2ffddfbe:	f141 0100 	adc.w	r1, r1, #0
2ffddfc2:	f110 3aff 	adds.w	sl, r0, #4294967295	; 0xffffffff
2ffddfc6:	e9cd 2304 	strd	r2, r3, [sp, #16]
2ffddfca:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
2ffddfce:	f141 3bff 	adc.w	fp, r1, #4294967295	; 0xffffffff
2ffddfd2:	b183      	cbz	r3, 2ffddff6 <mmap_remove_dynamic_region_ctx+0x86>
2ffddfd4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2ffddfd6:	2200      	movs	r2, #0
2ffddfd8:	4629      	mov	r1, r5
2ffddfda:	4620      	mov	r0, r4
2ffddfdc:	9301      	str	r3, [sp, #4]
2ffddfde:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2ffddfe0:	9300      	str	r3, [sp, #0]
2ffddfe2:	6a63      	ldr	r3, [r4, #36]	; 0x24
2ffddfe4:	f7ff fcac 	bl	2ffdd940 <xlat_tables_unmap_region>
2ffddfe8:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2ffddfea:	6a60      	ldr	r0, [r4, #36]	; 0x24
2ffddfec:	00c9      	lsls	r1, r1, #3
2ffddfee:	f7ff fc85 	bl	2ffdd8fc <xlat_clean_dcache_range>
2ffddff2:	f7ff facd 	bl	2ffdd590 <xlat_arch_tlbi_va_sync>
2ffddff6:	1b7a      	subs	r2, r7, r5
2ffddff8:	f105 0118 	add.w	r1, r5, #24
2ffddffc:	4628      	mov	r0, r5
2ffddffe:	f004 ffbc 	bl	2ffe2f7a <memmove>
2ffde002:	9b03      	ldr	r3, [sp, #12]
2ffde004:	429e      	cmp	r6, r3
2ffde006:	d00f      	beq.n	2ffde028 <mmap_remove_dynamic_region_ctx+0xb8>
2ffde008:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
2ffde00c:	459b      	cmp	fp, r3
2ffde00e:	bf08      	it	eq
2ffde010:	4592      	cmpeq	sl, r2
2ffde012:	d107      	bne.n	2ffde024 <mmap_remove_dynamic_region_ctx+0xb4>
2ffde014:	68e1      	ldr	r1, [r4, #12]
2ffde016:	2200      	movs	r2, #0
2ffde018:	2300      	movs	r3, #0
2ffde01a:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
2ffde01e:	68ca      	ldr	r2, [r1, #12]
2ffde020:	3118      	adds	r1, #24
2ffde022:	b982      	cbnz	r2, 2ffde046 <mmap_remove_dynamic_region_ctx+0xd6>
2ffde024:	2000      	movs	r0, #0
2ffde026:	e7be      	b.n	2ffddfa6 <mmap_remove_dynamic_region_ctx+0x36>
2ffde028:	68e2      	ldr	r2, [r4, #12]
2ffde02a:	2300      	movs	r3, #0
2ffde02c:	63a3      	str	r3, [r4, #56]	; 0x38
2ffde02e:	68d3      	ldr	r3, [r2, #12]
2ffde030:	2b00      	cmp	r3, #0
2ffde032:	d0e9      	beq.n	2ffde008 <mmap_remove_dynamic_region_ctx+0x98>
2ffde034:	6891      	ldr	r1, [r2, #8]
2ffde036:	3218      	adds	r2, #24
2ffde038:	440b      	add	r3, r1
2ffde03a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
2ffde03c:	3b01      	subs	r3, #1
2ffde03e:	428b      	cmp	r3, r1
2ffde040:	bf88      	it	hi
2ffde042:	63a3      	strhi	r3, [r4, #56]	; 0x38
2ffde044:	e7f3      	b.n	2ffde02e <mmap_remove_dynamic_region_ctx+0xbe>
2ffde046:	e951 3006 	ldrd	r3, r0, [r1, #-24]
2ffde04a:	f113 38ff 	adds.w	r8, r3, #4294967295	; 0xffffffff
2ffde04e:	f140 39ff 	adc.w	r9, r0, #4294967295	; 0xffffffff
2ffde052:	eb18 0602 	adds.w	r6, r8, r2
2ffde056:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2ffde05a:	f149 0700 	adc.w	r7, r9, #0
2ffde05e:	42bb      	cmp	r3, r7
2ffde060:	bf08      	it	eq
2ffde062:	42b2      	cmpeq	r2, r6
2ffde064:	d2db      	bcs.n	2ffde01e <mmap_remove_dynamic_region_ctx+0xae>
2ffde066:	e9c4 670c 	strd	r6, r7, [r4, #48]	; 0x30
2ffde06a:	e7d8      	b.n	2ffde01e <mmap_remove_dynamic_region_ctx+0xae>
2ffde06c:	692b      	ldr	r3, [r5, #16]
2ffde06e:	2b00      	cmp	r3, #0
2ffde070:	db9c      	blt.n	2ffddfac <mmap_remove_dynamic_region_ctx+0x3c>
2ffde072:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffde076:	e796      	b.n	2ffddfa6 <mmap_remove_dynamic_region_ctx+0x36>
2ffde078:	2ffe5947 	.word	0x2ffe5947

2ffde07c <init_xlat_tables_ctx>:
2ffde07c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffde07e:	4604      	mov	r4, r0
2ffde080:	b920      	cbnz	r0, 2ffde08c <init_xlat_tables_ctx+0x10>
2ffde082:	f240 4199 	movw	r1, #1177	; 0x499
2ffde086:	484f      	ldr	r0, [pc, #316]	; (2ffde1c4 <init_xlat_tables_ctx+0x148>)
2ffde088:	f004 ff44 	bl	2ffe2f14 <__assert>
2ffde08c:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
2ffde090:	b113      	cbz	r3, 2ffde098 <init_xlat_tables_ctx+0x1c>
2ffde092:	f240 419a 	movw	r1, #1178	; 0x49a
2ffde096:	e7f6      	b.n	2ffde086 <init_xlat_tables_ctx+0xa>
2ffde098:	6c43      	ldr	r3, [r0, #68]	; 0x44
2ffde09a:	3b01      	subs	r3, #1
2ffde09c:	2b02      	cmp	r3, #2
2ffde09e:	d902      	bls.n	2ffde0a6 <init_xlat_tables_ctx+0x2a>
2ffde0a0:	f240 419b 	movw	r1, #1179	; 0x49b
2ffde0a4:	e7ef      	b.n	2ffde086 <init_xlat_tables_ctx+0xa>
2ffde0a6:	f7ff fa99 	bl	2ffdd5dc <is_mmu_enabled_ctx>
2ffde0aa:	b110      	cbz	r0, 2ffde0b2 <init_xlat_tables_ctx+0x36>
2ffde0ac:	f240 419e 	movw	r1, #1182	; 0x49e
2ffde0b0:	e7e9      	b.n	2ffde086 <init_xlat_tables_ctx+0xa>
2ffde0b2:	e9d4 6502 	ldrd	r6, r5, [r4, #8]
2ffde0b6:	f7ff fa2d 	bl	2ffdd514 <xlat_get_min_virt_addr_space_size>
2ffde0ba:	3801      	subs	r0, #1
2ffde0bc:	4286      	cmp	r6, r0
2ffde0be:	d202      	bcs.n	2ffde0c6 <init_xlat_tables_ctx+0x4a>
2ffde0c0:	f240 41a2 	movw	r1, #1186	; 0x4a2
2ffde0c4:	e7df      	b.n	2ffde086 <init_xlat_tables_ctx+0xa>
2ffde0c6:	68a3      	ldr	r3, [r4, #8]
2ffde0c8:	1c5e      	adds	r6, r3, #1
2ffde0ca:	401e      	ands	r6, r3
2ffde0cc:	d002      	beq.n	2ffde0d4 <init_xlat_tables_ctx+0x58>
2ffde0ce:	f240 41a5 	movw	r1, #1189	; 0x4a5
2ffde0d2:	e7d8      	b.n	2ffde086 <init_xlat_tables_ctx+0xa>
2ffde0d4:	4628      	mov	r0, r5
2ffde0d6:	f000 f87b 	bl	2ffde1d0 <xlat_mmap_print>
2ffde0da:	483b      	ldr	r0, [pc, #236]	; (2ffde1c8 <init_xlat_tables_ctx+0x14c>)
2ffde0dc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
2ffde0e0:	f7f8 e9a0 	blx	2ffd6424 <inv_dcache_range>
2ffde0e4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
2ffde0e6:	2000      	movs	r0, #0
2ffde0e8:	2100      	movs	r1, #0
2ffde0ea:	42b2      	cmp	r2, r6
2ffde0ec:	d113      	bne.n	2ffde116 <init_xlat_tables_ctx+0x9a>
2ffde0ee:	2300      	movs	r3, #0
2ffde0f0:	2000      	movs	r0, #0
2ffde0f2:	461f      	mov	r7, r3
2ffde0f4:	2100      	movs	r1, #0
2ffde0f6:	69a2      	ldr	r2, [r4, #24]
2ffde0f8:	429a      	cmp	r2, r3
2ffde0fa:	dc13      	bgt.n	2ffde124 <init_xlat_tables_ctx+0xa8>
2ffde0fc:	68eb      	ldr	r3, [r5, #12]
2ffde0fe:	bb0b      	cbnz	r3, 2ffde144 <init_xlat_tables_ctx+0xc8>
2ffde100:	e9d4 6700 	ldrd	r6, r7, [r4]
2ffde104:	f7ff fa02 	bl	2ffdd50c <xlat_arch_get_max_supported_pa>
2ffde108:	42b9      	cmp	r1, r7
2ffde10a:	bf08      	it	eq
2ffde10c:	42b0      	cmpeq	r0, r6
2ffde10e:	d23d      	bcs.n	2ffde18c <init_xlat_tables_ctx+0x110>
2ffde110:	f240 41cd 	movw	r1, #1229	; 0x4cd
2ffde114:	e7b7      	b.n	2ffde086 <init_xlat_tables_ctx+0xa>
2ffde116:	6a63      	ldr	r3, [r4, #36]	; 0x24
2ffde118:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
2ffde11c:	3601      	adds	r6, #1
2ffde11e:	e9c3 0100 	strd	r0, r1, [r3]
2ffde122:	e7e2      	b.n	2ffde0ea <init_xlat_tables_ctx+0x6e>
2ffde124:	69e2      	ldr	r2, [r4, #28]
2ffde126:	f842 7023 	str.w	r7, [r2, r3, lsl #2]
2ffde12a:	6962      	ldr	r2, [r4, #20]
2ffde12c:	eb02 3203 	add.w	r2, r2, r3, lsl #12
2ffde130:	f1a2 0608 	sub.w	r6, r2, #8
2ffde134:	f602 72f8 	addw	r2, r2, #4088	; 0xff8
2ffde138:	e9e6 0102 	strd	r0, r1, [r6, #8]!
2ffde13c:	42b2      	cmp	r2, r6
2ffde13e:	d1fb      	bne.n	2ffde138 <init_xlat_tables_ctx+0xbc>
2ffde140:	3301      	adds	r3, #1
2ffde142:	e7d8      	b.n	2ffde0f6 <init_xlat_tables_ctx+0x7a>
2ffde144:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2ffde146:	2200      	movs	r2, #0
2ffde148:	4629      	mov	r1, r5
2ffde14a:	4620      	mov	r0, r4
2ffde14c:	9301      	str	r3, [sp, #4]
2ffde14e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2ffde150:	9300      	str	r3, [sp, #0]
2ffde152:	6a63      	ldr	r3, [r4, #36]	; 0x24
2ffde154:	f7ff fcfa 	bl	2ffddb4c <xlat_tables_map_region>
2ffde158:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2ffde15a:	4606      	mov	r6, r0
2ffde15c:	6a60      	ldr	r0, [r4, #36]	; 0x24
2ffde15e:	00c9      	lsls	r1, r1, #3
2ffde160:	f7ff fbcc 	bl	2ffdd8fc <xlat_clean_dcache_range>
2ffde164:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
2ffde168:	188b      	adds	r3, r1, r2
2ffde16a:	3b01      	subs	r3, #1
2ffde16c:	42b3      	cmp	r3, r6
2ffde16e:	d00b      	beq.n	2ffde188 <init_xlat_tables_ctx+0x10c>
2ffde170:	692b      	ldr	r3, [r5, #16]
2ffde172:	4816      	ldr	r0, [pc, #88]	; (2ffde1cc <init_xlat_tables_ctx+0x150>)
2ffde174:	e9cd 2300 	strd	r2, r3, [sp]
2ffde178:	e9d5 2300 	ldrd	r2, r3, [r5]
2ffde17c:	f7fe fcb6 	bl	2ffdcaec <tf_log>
2ffde180:	f7fe fd52 	bl	2ffdcc28 <console_flush>
2ffde184:	f7f8 e86c 	blx	2ffd6260 <do_panic>
2ffde188:	3518      	adds	r5, #24
2ffde18a:	e7b7      	b.n	2ffde0fc <init_xlat_tables_ctx+0x80>
2ffde18c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
2ffde18e:	68a3      	ldr	r3, [r4, #8]
2ffde190:	429a      	cmp	r2, r3
2ffde192:	d902      	bls.n	2ffde19a <init_xlat_tables_ctx+0x11e>
2ffde194:	f240 41ce 	movw	r1, #1230	; 0x4ce
2ffde198:	e775      	b.n	2ffde086 <init_xlat_tables_ctx+0xa>
2ffde19a:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2ffde19e:	e9d4 0100 	ldrd	r0, r1, [r4]
2ffde1a2:	4299      	cmp	r1, r3
2ffde1a4:	bf08      	it	eq
2ffde1a6:	4290      	cmpeq	r0, r2
2ffde1a8:	d202      	bcs.n	2ffde1b0 <init_xlat_tables_ctx+0x134>
2ffde1aa:	f240 41cf 	movw	r1, #1231	; 0x4cf
2ffde1ae:	e76a      	b.n	2ffde086 <init_xlat_tables_ctx+0xa>
2ffde1b0:	2301      	movs	r3, #1
2ffde1b2:	4620      	mov	r0, r4
2ffde1b4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
2ffde1b8:	b003      	add	sp, #12
2ffde1ba:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
2ffde1be:	f000 b808 	b.w	2ffde1d2 <xlat_tables_print>
2ffde1c2:	bf00      	nop
2ffde1c4:	2ffe5947 	.word	0x2ffe5947
2ffde1c8:	2ffd2000 	.word	0x2ffd2000
2ffde1cc:	2ffe5998 	.word	0x2ffe5998

2ffde1d0 <xlat_mmap_print>:
2ffde1d0:	4770      	bx	lr

2ffde1d2 <xlat_tables_print>:
2ffde1d2:	4770      	bx	lr

2ffde1d4 <tzc400_set_action>:
2ffde1d4:	b508      	push	{r3, lr}
2ffde1d6:	4b06      	ldr	r3, [pc, #24]	; (2ffde1f0 <tzc400_set_action+0x1c>)
2ffde1d8:	681b      	ldr	r3, [r3, #0]
2ffde1da:	b91b      	cbnz	r3, 2ffde1e4 <tzc400_set_action+0x10>
2ffde1dc:	2194      	movs	r1, #148	; 0x94
2ffde1de:	4805      	ldr	r0, [pc, #20]	; (2ffde1f4 <tzc400_set_action+0x20>)
2ffde1e0:	f004 fe98 	bl	2ffe2f14 <__assert>
2ffde1e4:	2803      	cmp	r0, #3
2ffde1e6:	d901      	bls.n	2ffde1ec <tzc400_set_action+0x18>
2ffde1e8:	2195      	movs	r1, #149	; 0x95
2ffde1ea:	e7f8      	b.n	2ffde1de <tzc400_set_action+0xa>
2ffde1ec:	6058      	str	r0, [r3, #4]
2ffde1ee:	bd08      	pop	{r3, pc}
2ffde1f0:	2ffe8f24 	.word	0x2ffe8f24
2ffde1f4:	2ffe59e7 	.word	0x2ffe59e7

2ffde1f8 <tzc400_init>:
2ffde1f8:	b508      	push	{r3, lr}
2ffde1fa:	b918      	cbnz	r0, 2ffde204 <tzc400_init+0xc>
2ffde1fc:	4812      	ldr	r0, [pc, #72]	; (2ffde248 <tzc400_init+0x50>)
2ffde1fe:	21a6      	movs	r1, #166	; 0xa6
2ffde200:	f004 fe88 	bl	2ffe2f14 <__assert>
2ffde204:	f8d0 3fe0 	ldr.w	r3, [r0, #4064]	; 0xfe0
2ffde208:	f8d0 1fe4 	ldr.w	r1, [r0, #4068]	; 0xfe4
2ffde20c:	4a0f      	ldr	r2, [pc, #60]	; (2ffde24c <tzc400_init+0x54>)
2ffde20e:	0209      	lsls	r1, r1, #8
2ffde210:	6010      	str	r0, [r2, #0]
2ffde212:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
2ffde216:	4319      	orrs	r1, r3
2ffde218:	f5b1 6f8c 	cmp.w	r1, #1120	; 0x460
2ffde21c:	d006      	beq.n	2ffde22c <tzc400_init+0x34>
2ffde21e:	480c      	ldr	r0, [pc, #48]	; (2ffde250 <tzc400_init+0x58>)
2ffde220:	f7fe fc64 	bl	2ffdcaec <tf_log>
2ffde224:	f7fe fd00 	bl	2ffdcc28 <console_flush>
2ffde228:	f7f8 e81a 	blx	2ffd6260 <do_panic>
2ffde22c:	6803      	ldr	r3, [r0, #0]
2ffde22e:	f3c3 6101 	ubfx	r1, r3, #24, #2
2ffde232:	3101      	adds	r1, #1
2ffde234:	7151      	strb	r1, [r2, #5]
2ffde236:	f3c3 2105 	ubfx	r1, r3, #8, #6
2ffde23a:	f003 031f 	and.w	r3, r3, #31
2ffde23e:	3101      	adds	r1, #1
2ffde240:	3301      	adds	r3, #1
2ffde242:	7111      	strb	r1, [r2, #4]
2ffde244:	7193      	strb	r3, [r2, #6]
2ffde246:	bd08      	pop	{r3, pc}
2ffde248:	2ffe59e7 	.word	0x2ffe59e7
2ffde24c:	2ffe8f24 	.word	0x2ffe8f24
2ffde250:	2ffe5a00 	.word	0x2ffe5a00

2ffde254 <tzc400_configure_region>:
2ffde254:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffde258:	4690      	mov	r8, r2
2ffde25a:	4a2b      	ldr	r2, [pc, #172]	; (2ffde308 <tzc400_configure_region+0xb4>)
2ffde25c:	4699      	mov	r9, r3
2ffde25e:	e9dd 450a 	ldrd	r4, r5, [sp, #40]	; 0x28
2ffde262:	6813      	ldr	r3, [r2, #0]
2ffde264:	b91b      	cbnz	r3, 2ffde26e <tzc400_configure_region+0x1a>
2ffde266:	21d9      	movs	r1, #217	; 0xd9
2ffde268:	4828      	ldr	r0, [pc, #160]	; (2ffde30c <tzc400_configure_region+0xb8>)
2ffde26a:	f004 fe53 	bl	2ffe2f14 <__assert>
2ffde26e:	f892 c005 	ldrb.w	ip, [r2, #5]
2ffde272:	fa30 fc0c 	lsrs.w	ip, r0, ip
2ffde276:	d102      	bne.n	2ffde27e <tzc400_configure_region+0x2a>
2ffde278:	7996      	ldrb	r6, [r2, #6]
2ffde27a:	428e      	cmp	r6, r1
2ffde27c:	d801      	bhi.n	2ffde282 <tzc400_configure_region+0x2e>
2ffde27e:	21dc      	movs	r1, #220	; 0xdc
2ffde280:	e7f2      	b.n	2ffde268 <tzc400_configure_region+0x14>
2ffde282:	7912      	ldrb	r2, [r2, #4]
2ffde284:	f04f 3eff 	mov.w	lr, #4294967295	; 0xffffffff
2ffde288:	f1c2 0b40 	rsb	fp, r2, #64	; 0x40
2ffde28c:	f1a2 0a20 	sub.w	sl, r2, #32
2ffde290:	f1c2 0220 	rsb	r2, r2, #32
2ffde294:	fa2e f60b 	lsr.w	r6, lr, fp
2ffde298:	fa0e fa0a 	lsl.w	sl, lr, sl
2ffde29c:	ea46 060a 	orr.w	r6, r6, sl
2ffde2a0:	fa2e f202 	lsr.w	r2, lr, r2
2ffde2a4:	fa2e f70b 	lsr.w	r7, lr, fp
2ffde2a8:	4316      	orrs	r6, r2
2ffde2aa:	42af      	cmp	r7, r5
2ffde2ac:	bf08      	it	eq
2ffde2ae:	42a6      	cmpeq	r6, r4
2ffde2b0:	d303      	bcc.n	2ffde2ba <tzc400_configure_region+0x66>
2ffde2b2:	45a9      	cmp	r9, r5
2ffde2b4:	bf08      	it	eq
2ffde2b6:	45a0      	cmpeq	r8, r4
2ffde2b8:	d301      	bcc.n	2ffde2be <tzc400_configure_region+0x6a>
2ffde2ba:	21e3      	movs	r1, #227	; 0xe3
2ffde2bc:	e7d4      	b.n	2ffde268 <tzc400_configure_region+0x14>
2ffde2be:	1c62      	adds	r2, r4, #1
2ffde2c0:	4667      	mov	r7, ip
2ffde2c2:	ea42 0208 	orr.w	r2, r2, r8
2ffde2c6:	f3c2 060b 	ubfx	r6, r2, #0, #12
2ffde2ca:	ea56 0207 	orrs.w	r2, r6, r7
2ffde2ce:	d001      	beq.n	2ffde2d4 <tzc400_configure_region+0x80>
2ffde2d0:	21e7      	movs	r1, #231	; 0xe7
2ffde2d2:	e7c9      	b.n	2ffde268 <tzc400_configure_region+0x14>
2ffde2d4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
2ffde2d6:	2a03      	cmp	r2, #3
2ffde2d8:	d901      	bls.n	2ffde2de <tzc400_configure_region+0x8a>
2ffde2da:	21e9      	movs	r1, #233	; 0xe9
2ffde2dc:	e7c4      	b.n	2ffde268 <tzc400_configure_region+0x14>
2ffde2de:	eb03 1141 	add.w	r1, r3, r1, lsl #5
2ffde2e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
2ffde2e4:	f8c1 8100 	str.w	r8, [r1, #256]	; 0x100
2ffde2e8:	ea40 7083 	orr.w	r0, r0, r3, lsl #30
2ffde2ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2ffde2ee:	f8c1 9104 	str.w	r9, [r1, #260]	; 0x104
2ffde2f2:	f8c1 4108 	str.w	r4, [r1, #264]	; 0x108
2ffde2f6:	f8c1 510c 	str.w	r5, [r1, #268]	; 0x10c
2ffde2fa:	f8c1 0110 	str.w	r0, [r1, #272]	; 0x110
2ffde2fe:	f8c1 3114 	str.w	r3, [r1, #276]	; 0x114
2ffde302:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffde306:	bf00      	nop
2ffde308:	2ffe8f24 	.word	0x2ffe8f24
2ffde30c:	2ffe59e7 	.word	0x2ffe59e7

2ffde310 <tzc400_enable_filters>:
2ffde310:	4a16      	ldr	r2, [pc, #88]	; (2ffde36c <tzc400_enable_filters+0x5c>)
2ffde312:	b570      	push	{r4, r5, r6, lr}
2ffde314:	6813      	ldr	r3, [r2, #0]
2ffde316:	b12b      	cbz	r3, 2ffde324 <tzc400_enable_filters+0x14>
2ffde318:	7954      	ldrb	r4, [r2, #5]
2ffde31a:	2100      	movs	r1, #0
2ffde31c:	2501      	movs	r5, #1
2ffde31e:	428c      	cmp	r4, r1
2ffde320:	d804      	bhi.n	2ffde32c <tzc400_enable_filters+0x1c>
2ffde322:	bd70      	pop	{r4, r5, r6, pc}
2ffde324:	4812      	ldr	r0, [pc, #72]	; (2ffde370 <tzc400_enable_filters+0x60>)
2ffde326:	21f4      	movs	r1, #244	; 0xf4
2ffde328:	f004 fdf4 	bl	2ffe2f14 <__assert>
2ffde32c:	689a      	ldr	r2, [r3, #8]
2ffde32e:	f103 0608 	add.w	r6, r3, #8
2ffde332:	f3c2 4203 	ubfx	r2, r2, #16, #4
2ffde336:	40ca      	lsrs	r2, r1
2ffde338:	07d2      	lsls	r2, r2, #31
2ffde33a:	d506      	bpl.n	2ffde34a <tzc400_enable_filters+0x3a>
2ffde33c:	480d      	ldr	r0, [pc, #52]	; (2ffde374 <tzc400_enable_filters+0x64>)
2ffde33e:	f7fe fbd5 	bl	2ffdcaec <tf_log>
2ffde342:	f7fe fc71 	bl	2ffdcc28 <console_flush>
2ffde346:	f7f7 ef8c 	blx	2ffd6260 <do_panic>
2ffde34a:	6898      	ldr	r0, [r3, #8]
2ffde34c:	fa05 f201 	lsl.w	r2, r5, r1
2ffde350:	f3c0 4003 	ubfx	r0, r0, #16, #4
2ffde354:	4302      	orrs	r2, r0
2ffde356:	f002 000f 	and.w	r0, r2, #15
2ffde35a:	6098      	str	r0, [r3, #8]
2ffde35c:	6830      	ldr	r0, [r6, #0]
2ffde35e:	f3c0 4003 	ubfx	r0, r0, #16, #4
2ffde362:	4282      	cmp	r2, r0
2ffde364:	d1fa      	bne.n	2ffde35c <tzc400_enable_filters+0x4c>
2ffde366:	3101      	adds	r1, #1
2ffde368:	e7d9      	b.n	2ffde31e <tzc400_enable_filters+0xe>
2ffde36a:	bf00      	nop
2ffde36c:	2ffe8f24 	.word	0x2ffe8f24
2ffde370:	2ffe59e7 	.word	0x2ffe59e7
2ffde374:	2ffe5a24 	.word	0x2ffe5a24

2ffde378 <tzc400_disable_filters>:
2ffde378:	4b10      	ldr	r3, [pc, #64]	; (2ffde3bc <tzc400_disable_filters+0x44>)
2ffde37a:	b570      	push	{r4, r5, r6, lr}
2ffde37c:	6818      	ldr	r0, [r3, #0]
2ffde37e:	b128      	cbz	r0, 2ffde38c <tzc400_disable_filters+0x14>
2ffde380:	795c      	ldrb	r4, [r3, #5]
2ffde382:	2100      	movs	r1, #0
2ffde384:	2501      	movs	r5, #1
2ffde386:	428c      	cmp	r4, r1
2ffde388:	d805      	bhi.n	2ffde396 <tzc400_disable_filters+0x1e>
2ffde38a:	bd70      	pop	{r4, r5, r6, pc}
2ffde38c:	480c      	ldr	r0, [pc, #48]	; (2ffde3c0 <tzc400_disable_filters+0x48>)
2ffde38e:	f240 110f 	movw	r1, #271	; 0x10f
2ffde392:	f004 fdbf 	bl	2ffe2f14 <__assert>
2ffde396:	6882      	ldr	r2, [r0, #8]
2ffde398:	f100 0608 	add.w	r6, r0, #8
2ffde39c:	fa05 f301 	lsl.w	r3, r5, r1
2ffde3a0:	0c12      	lsrs	r2, r2, #16
2ffde3a2:	ea22 0303 	bic.w	r3, r2, r3
2ffde3a6:	f003 030f 	and.w	r3, r3, #15
2ffde3aa:	6083      	str	r3, [r0, #8]
2ffde3ac:	6832      	ldr	r2, [r6, #0]
2ffde3ae:	f3c2 4203 	ubfx	r2, r2, #16, #4
2ffde3b2:	4293      	cmp	r3, r2
2ffde3b4:	d1fa      	bne.n	2ffde3ac <tzc400_disable_filters+0x34>
2ffde3b6:	3101      	adds	r1, #1
2ffde3b8:	e7e5      	b.n	2ffde386 <tzc400_disable_filters+0xe>
2ffde3ba:	bf00      	nop
2ffde3bc:	2ffe8f24 	.word	0x2ffe8f24
2ffde3c0:	2ffe59e7 	.word	0x2ffe59e7

2ffde3c4 <udelay>:
2ffde3c4:	b570      	push	{r4, r5, r6, lr}
2ffde3c6:	4604      	mov	r4, r0
2ffde3c8:	4d13      	ldr	r5, [pc, #76]	; (2ffde418 <udelay+0x54>)
2ffde3ca:	682b      	ldr	r3, [r5, #0]
2ffde3cc:	b12b      	cbz	r3, 2ffde3da <udelay+0x16>
2ffde3ce:	685a      	ldr	r2, [r3, #4]
2ffde3d0:	b11a      	cbz	r2, 2ffde3da <udelay+0x16>
2ffde3d2:	6899      	ldr	r1, [r3, #8]
2ffde3d4:	b109      	cbz	r1, 2ffde3da <udelay+0x16>
2ffde3d6:	681a      	ldr	r2, [r3, #0]
2ffde3d8:	b91a      	cbnz	r2, 2ffde3e2 <udelay+0x1e>
2ffde3da:	2119      	movs	r1, #25
2ffde3dc:	480f      	ldr	r0, [pc, #60]	; (2ffde41c <udelay+0x58>)
2ffde3de:	f004 fd99 	bl	2ffe2f14 <__assert>
2ffde3e2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2ffde3e6:	fbb3 f3f1 	udiv	r3, r3, r1
2ffde3ea:	4283      	cmp	r3, r0
2ffde3ec:	d801      	bhi.n	2ffde3f2 <udelay+0x2e>
2ffde3ee:	2120      	movs	r1, #32
2ffde3f0:	e7f4      	b.n	2ffde3dc <udelay+0x18>
2ffde3f2:	4790      	blx	r2
2ffde3f4:	682a      	ldr	r2, [r5, #0]
2ffde3f6:	4606      	mov	r6, r0
2ffde3f8:	6853      	ldr	r3, [r2, #4]
2ffde3fa:	6892      	ldr	r2, [r2, #8]
2ffde3fc:	1e58      	subs	r0, r3, #1
2ffde3fe:	fb02 0404 	mla	r4, r2, r4, r0
2ffde402:	fbb4 f4f3 	udiv	r4, r4, r3
2ffde406:	3401      	adds	r4, #1
2ffde408:	682b      	ldr	r3, [r5, #0]
2ffde40a:	681b      	ldr	r3, [r3, #0]
2ffde40c:	4798      	blx	r3
2ffde40e:	1a33      	subs	r3, r6, r0
2ffde410:	429c      	cmp	r4, r3
2ffde412:	d8f9      	bhi.n	2ffde408 <udelay+0x44>
2ffde414:	bd70      	pop	{r4, r5, r6, pc}
2ffde416:	bf00      	nop
2ffde418:	2ffe8f2c 	.word	0x2ffe8f2c
2ffde41c:	2ffe5a54 	.word	0x2ffe5a54

2ffde420 <mdelay>:
2ffde420:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2ffde424:	4358      	muls	r0, r3
2ffde426:	f7ff bfcd 	b.w	2ffde3c4 <udelay>
	...

2ffde42c <timer_init>:
2ffde42c:	b508      	push	{r3, lr}
2ffde42e:	b128      	cbz	r0, 2ffde43c <timer_init+0x10>
2ffde430:	6843      	ldr	r3, [r0, #4]
2ffde432:	b11b      	cbz	r3, 2ffde43c <timer_init+0x10>
2ffde434:	6883      	ldr	r3, [r0, #8]
2ffde436:	b10b      	cbz	r3, 2ffde43c <timer_init+0x10>
2ffde438:	6803      	ldr	r3, [r0, #0]
2ffde43a:	b91b      	cbnz	r3, 2ffde444 <timer_init+0x18>
2ffde43c:	4803      	ldr	r0, [pc, #12]	; (2ffde44c <timer_init+0x20>)
2ffde43e:	2142      	movs	r1, #66	; 0x42
2ffde440:	f004 fd68 	bl	2ffe2f14 <__assert>
2ffde444:	4b02      	ldr	r3, [pc, #8]	; (2ffde450 <timer_init+0x24>)
2ffde446:	6018      	str	r0, [r3, #0]
2ffde448:	bd08      	pop	{r3, pc}
2ffde44a:	bf00      	nop
2ffde44c:	2ffe5a54 	.word	0x2ffe5a54
2ffde450:	2ffe8f2c 	.word	0x2ffe8f2c

2ffde454 <get_timer_value>:
2ffde454:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffde458:	43c0      	mvns	r0, r0
2ffde45a:	4770      	bx	lr

2ffde45c <generic_delay_timer_init_args>:
2ffde45c:	4b03      	ldr	r3, [pc, #12]	; (2ffde46c <generic_delay_timer_init_args+0x10>)
2ffde45e:	4a04      	ldr	r2, [pc, #16]	; (2ffde470 <generic_delay_timer_init_args+0x14>)
2ffde460:	6058      	str	r0, [r3, #4]
2ffde462:	4618      	mov	r0, r3
2ffde464:	601a      	str	r2, [r3, #0]
2ffde466:	6099      	str	r1, [r3, #8]
2ffde468:	f7ff bfe0 	b.w	2ffde42c <timer_init>
2ffde46c:	2ffe8f30 	.word	0x2ffe8f30
2ffde470:	2ffde455 	.word	0x2ffde455

2ffde474 <generic_delay_timer_init>:
2ffde474:	b538      	push	{r3, r4, r5, lr}
2ffde476:	ee10 3f31 	mrc	15, 0, r3, cr0, cr1, {1}
2ffde47a:	f413 2f70 	tst.w	r3, #983040	; 0xf0000
2ffde47e:	d103      	bne.n	2ffde488 <generic_delay_timer_init+0x14>
2ffde480:	480b      	ldr	r0, [pc, #44]	; (2ffde4b0 <generic_delay_timer_init+0x3c>)
2ffde482:	212f      	movs	r1, #47	; 0x2f
2ffde484:	f004 fd46 	bl	2ffe2f14 <__assert>
2ffde488:	f7fe fcfa 	bl	2ffdce80 <plat_get_syscnt_freq2>
2ffde48c:	4601      	mov	r1, r0
2ffde48e:	2206      	movs	r2, #6
2ffde490:	4808      	ldr	r0, [pc, #32]	; (2ffde4b4 <generic_delay_timer_init+0x40>)
2ffde492:	230a      	movs	r3, #10
2ffde494:	fbb1 f4f3 	udiv	r4, r1, r3
2ffde498:	fb03 1514 	mls	r5, r3, r4, r1
2ffde49c:	b925      	cbnz	r5, 2ffde4a8 <generic_delay_timer_init+0x34>
2ffde49e:	3a01      	subs	r2, #1
2ffde4a0:	4621      	mov	r1, r4
2ffde4a2:	fbb0 f0f3 	udiv	r0, r0, r3
2ffde4a6:	d1f5      	bne.n	2ffde494 <generic_delay_timer_init+0x20>
2ffde4a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffde4ac:	f7ff bfd6 	b.w	2ffde45c <generic_delay_timer_init_args>
2ffde4b0:	2ffe5a76 	.word	0x2ffe5a76
2ffde4b4:	000f4240 	.word	0x000f4240

2ffde4b8 <bsec_lock>:
2ffde4b8:	b508      	push	{r3, lr}
2ffde4ba:	f7fe fd00 	bl	2ffdcebe <stm32mp_lock_available>
2ffde4be:	b120      	cbz	r0, 2ffde4ca <bsec_lock+0x12>
2ffde4c0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffde4c4:	4801      	ldr	r0, [pc, #4]	; (2ffde4cc <bsec_lock+0x14>)
2ffde4c6:	f008 bd6f 	b.w	2ffe6fa8 <__spin_lock_from_thumb>
2ffde4ca:	bd08      	pop	{r3, pc}
2ffde4cc:	2ffe8f40 	.word	0x2ffe8f40

2ffde4d0 <bsec_unlock>:
2ffde4d0:	b508      	push	{r3, lr}
2ffde4d2:	f7fe fcf4 	bl	2ffdcebe <stm32mp_lock_available>
2ffde4d6:	b120      	cbz	r0, 2ffde4e2 <bsec_unlock+0x12>
2ffde4d8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffde4dc:	4801      	ldr	r0, [pc, #4]	; (2ffde4e4 <bsec_unlock+0x14>)
2ffde4de:	f008 bd6b 	b.w	2ffe6fb8 <__spin_unlock_from_thumb>
2ffde4e2:	bd08      	pop	{r3, pc}
2ffde4e4:	2ffe8f40 	.word	0x2ffe8f40

2ffde4e8 <otp_bank_offset>:
2ffde4e8:	285f      	cmp	r0, #95	; 0x5f
2ffde4ea:	b508      	push	{r3, lr}
2ffde4ec:	d903      	bls.n	2ffde4f6 <otp_bank_offset+0xe>
2ffde4ee:	4803      	ldr	r0, [pc, #12]	; (2ffde4fc <otp_bank_offset+0x14>)
2ffde4f0:	2191      	movs	r1, #145	; 0x91
2ffde4f2:	f004 fd0f 	bl	2ffe2f14 <__assert>
2ffde4f6:	0940      	lsrs	r0, r0, #5
2ffde4f8:	0080      	lsls	r0, r0, #2
2ffde4fa:	bd08      	pop	{r3, pc}
2ffde4fc:	2ffe5aa0 	.word	0x2ffe5aa0

2ffde500 <bsec_check_error>:
2ffde500:	b538      	push	{r3, r4, r5, lr}
2ffde502:	f000 031f 	and.w	r3, r0, #31
2ffde506:	2401      	movs	r4, #1
2ffde508:	460d      	mov	r5, r1
2ffde50a:	409c      	lsls	r4, r3
2ffde50c:	f7ff ffec 	bl	2ffde4e8 <otp_bank_offset>
2ffde510:	4b07      	ldr	r3, [pc, #28]	; (2ffde530 <bsec_check_error+0x30>)
2ffde512:	681b      	ldr	r3, [r3, #0]
2ffde514:	4403      	add	r3, r0
2ffde516:	6b58      	ldr	r0, [r3, #52]	; 0x34
2ffde518:	4020      	ands	r0, r4
2ffde51a:	d106      	bne.n	2ffde52a <bsec_check_error+0x2a>
2ffde51c:	b125      	cbz	r5, 2ffde528 <bsec_check_error+0x28>
2ffde51e:	69d8      	ldr	r0, [r3, #28]
2ffde520:	4020      	ands	r0, r4
2ffde522:	bf18      	it	ne
2ffde524:	f06f 0001 	mvnne.w	r0, #1
2ffde528:	bd38      	pop	{r3, r4, r5, pc}
2ffde52a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffde52e:	e7fb      	b.n	2ffde528 <bsec_check_error+0x28>
2ffde530:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde534 <bsec_find_otp_name_in_dt>:
2ffde534:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffde536:	460e      	mov	r6, r1
2ffde538:	4615      	mov	r5, r2
2ffde53a:	4604      	mov	r4, r0
2ffde53c:	2800      	cmp	r0, #0
2ffde53e:	d06b      	beq.n	2ffde618 <bsec_find_otp_name_in_dt+0xe4>
2ffde540:	2900      	cmp	r1, #0
2ffde542:	d069      	beq.n	2ffde618 <bsec_find_otp_name_in_dt+0xe4>
2ffde544:	4668      	mov	r0, sp
2ffde546:	f003 fcb9 	bl	2ffe1ebc <fdt_get_address>
2ffde54a:	b918      	cbnz	r0, 2ffde554 <bsec_find_otp_name_in_dt+0x20>
2ffde54c:	f7fe fb6c 	bl	2ffdcc28 <console_flush>
2ffde550:	f7f7 ee86 	blx	2ffd6260 <do_panic>
2ffde554:	4832      	ldr	r0, [pc, #200]	; (2ffde620 <bsec_find_otp_name_in_dt+0xec>)
2ffde556:	f003 fdf9 	bl	2ffe214c <dt_get_node_by_compatible>
2ffde55a:	1e07      	subs	r7, r0, #0
2ffde55c:	da03      	bge.n	2ffde566 <bsec_find_otp_name_in_dt+0x32>
2ffde55e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffde562:	b003      	add	sp, #12
2ffde564:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffde566:	4a2f      	ldr	r2, [pc, #188]	; (2ffde624 <bsec_find_otp_name_in_dt+0xf0>)
2ffde568:	4623      	mov	r3, r4
2ffde56a:	9800      	ldr	r0, [sp, #0]
2ffde56c:	4639      	mov	r1, r7
2ffde56e:	f004 fc6a 	bl	2ffe2e46 <fdt_stringlist_search>
2ffde572:	1e04      	subs	r4, r0, #0
2ffde574:	dbf3      	blt.n	2ffde55e <bsec_find_otp_name_in_dt+0x2a>
2ffde576:	4a2c      	ldr	r2, [pc, #176]	; (2ffde628 <bsec_find_otp_name_in_dt+0xf4>)
2ffde578:	ab01      	add	r3, sp, #4
2ffde57a:	9800      	ldr	r0, [sp, #0]
2ffde57c:	4639      	mov	r1, r7
2ffde57e:	f004 fb2c 	bl	2ffe2bda <fdt_getprop>
2ffde582:	2800      	cmp	r0, #0
2ffde584:	d0eb      	beq.n	2ffde55e <bsec_find_otp_name_in_dt+0x2a>
2ffde586:	9b01      	ldr	r3, [sp, #4]
2ffde588:	ebb3 0f84 	cmp.w	r3, r4, lsl #2
2ffde58c:	dbe7      	blt.n	2ffde55e <bsec_find_otp_name_in_dt+0x2a>
2ffde58e:	f850 3024 	ldr.w	r3, [r0, r4, lsl #2]
2ffde592:	9800      	ldr	r0, [sp, #0]
2ffde594:	f3c3 2207 	ubfx	r2, r3, #8, #8
2ffde598:	0e19      	lsrs	r1, r3, #24
2ffde59a:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
2ffde59e:	f3c3 4307 	ubfx	r3, r3, #16, #8
2ffde5a2:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
2ffde5a6:	ea41 2103 	orr.w	r1, r1, r3, lsl #8
2ffde5aa:	f004 fc08 	bl	2ffe2dbe <fdt_node_offset_by_phandle>
2ffde5ae:	1e01      	subs	r1, r0, #0
2ffde5b0:	da03      	bge.n	2ffde5ba <bsec_find_otp_name_in_dt+0x86>
2ffde5b2:	481e      	ldr	r0, [pc, #120]	; (2ffde62c <bsec_find_otp_name_in_dt+0xf8>)
2ffde5b4:	f7fe fa9a 	bl	2ffdcaec <tf_log>
2ffde5b8:	e7d1      	b.n	2ffde55e <bsec_find_otp_name_in_dt+0x2a>
2ffde5ba:	4a1d      	ldr	r2, [pc, #116]	; (2ffde630 <bsec_find_otp_name_in_dt+0xfc>)
2ffde5bc:	ab01      	add	r3, sp, #4
2ffde5be:	9800      	ldr	r0, [sp, #0]
2ffde5c0:	f004 fb0b 	bl	2ffe2bda <fdt_getprop>
2ffde5c4:	4602      	mov	r2, r0
2ffde5c6:	2800      	cmp	r0, #0
2ffde5c8:	d0f3      	beq.n	2ffde5b2 <bsec_find_otp_name_in_dt+0x7e>
2ffde5ca:	9b01      	ldr	r3, [sp, #4]
2ffde5cc:	2b08      	cmp	r3, #8
2ffde5ce:	d1f0      	bne.n	2ffde5b2 <bsec_find_otp_name_in_dt+0x7e>
2ffde5d0:	6804      	ldr	r4, [r0, #0]
2ffde5d2:	f3c4 2007 	ubfx	r0, r4, #8, #8
2ffde5d6:	0e23      	lsrs	r3, r4, #24
2ffde5d8:	ea43 6304 	orr.w	r3, r3, r4, lsl #24
2ffde5dc:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
2ffde5e0:	f3c4 4407 	ubfx	r4, r4, #16, #8
2ffde5e4:	f013 0003 	ands.w	r0, r3, #3
2ffde5e8:	ea43 2404 	orr.w	r4, r3, r4, lsl #8
2ffde5ec:	d001      	beq.n	2ffde5f2 <bsec_find_otp_name_in_dt+0xbe>
2ffde5ee:	4811      	ldr	r0, [pc, #68]	; (2ffde634 <bsec_find_otp_name_in_dt+0x100>)
2ffde5f0:	e7e0      	b.n	2ffde5b4 <bsec_find_otp_name_in_dt+0x80>
2ffde5f2:	08a4      	lsrs	r4, r4, #2
2ffde5f4:	6034      	str	r4, [r6, #0]
2ffde5f6:	2d00      	cmp	r5, #0
2ffde5f8:	d0b3      	beq.n	2ffde562 <bsec_find_otp_name_in_dt+0x2e>
2ffde5fa:	6852      	ldr	r2, [r2, #4]
2ffde5fc:	0e13      	lsrs	r3, r2, #24
2ffde5fe:	f3c2 2107 	ubfx	r1, r2, #8, #8
2ffde602:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffde606:	f3c2 4207 	ubfx	r2, r2, #16, #8
2ffde60a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffde60e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffde612:	00db      	lsls	r3, r3, #3
2ffde614:	602b      	str	r3, [r5, #0]
2ffde616:	e7a4      	b.n	2ffde562 <bsec_find_otp_name_in_dt+0x2e>
2ffde618:	f06f 0003 	mvn.w	r0, #3
2ffde61c:	e7a1      	b.n	2ffde562 <bsec_find_otp_name_in_dt+0x2e>
2ffde61e:	bf00      	nop
2ffde620:	2ffe5ab8 	.word	0x2ffe5ab8
2ffde624:	2ffe5ace 	.word	0x2ffe5ace
2ffde628:	2ffe5adf 	.word	0x2ffe5adf
2ffde62c:	2ffe5aeb 	.word	0x2ffe5aeb
2ffde630:	2ffe521b 	.word	0x2ffe521b
2ffde634:	2ffe5b12 	.word	0x2ffe5b12

2ffde638 <bsec_read_otp>:
2ffde638:	295f      	cmp	r1, #95	; 0x5f
2ffde63a:	bf9f      	itttt	ls
2ffde63c:	4b05      	ldrls	r3, [pc, #20]	; (2ffde654 <bsec_read_otp+0x1c>)
2ffde63e:	681b      	ldrls	r3, [r3, #0]
2ffde640:	f503 7300 	addls.w	r3, r3, #512	; 0x200
2ffde644:	f853 3021 	ldrls.w	r3, [r3, r1, lsl #2]
2ffde648:	bf9a      	itte	ls
2ffde64a:	6003      	strls	r3, [r0, #0]
2ffde64c:	2000      	movls	r0, #0
2ffde64e:	f06f 0003 	mvnhi.w	r0, #3
2ffde652:	4770      	bx	lr
2ffde654:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde658 <bsec_read_debug_conf>:
2ffde658:	4b01      	ldr	r3, [pc, #4]	; (2ffde660 <bsec_read_debug_conf+0x8>)
2ffde65a:	681b      	ldr	r3, [r3, #0]
2ffde65c:	6958      	ldr	r0, [r3, #20]
2ffde65e:	4770      	bx	lr
2ffde660:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde664 <bsec_get_status>:
2ffde664:	4b01      	ldr	r3, [pc, #4]	; (2ffde66c <bsec_get_status+0x8>)
2ffde666:	681b      	ldr	r3, [r3, #0]
2ffde668:	68d8      	ldr	r0, [r3, #12]
2ffde66a:	4770      	bx	lr
2ffde66c:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde670 <bsec_power_safmem>:
2ffde670:	b510      	push	{r4, lr}
2ffde672:	4604      	mov	r4, r0
2ffde674:	f7ff ff20 	bl	2ffde4b8 <bsec_lock>
2ffde678:	4b15      	ldr	r3, [pc, #84]	; (2ffde6d0 <bsec_power_safmem+0x60>)
2ffde67a:	681a      	ldr	r2, [r3, #0]
2ffde67c:	6813      	ldr	r3, [r2, #0]
2ffde67e:	b164      	cbz	r4, 2ffde69a <bsec_power_safmem+0x2a>
2ffde680:	f043 0301 	orr.w	r3, r3, #1
2ffde684:	6013      	str	r3, [r2, #0]
2ffde686:	b9bc      	cbnz	r4, 2ffde6b8 <bsec_power_safmem+0x48>
2ffde688:	f64f 74ff 	movw	r4, #65535	; 0xffff
2ffde68c:	f7ff ffea 	bl	2ffde664 <bsec_get_status>
2ffde690:	0683      	lsls	r3, r0, #26
2ffde692:	d514      	bpl.n	2ffde6be <bsec_power_safmem+0x4e>
2ffde694:	b15c      	cbz	r4, 2ffde6ae <bsec_power_safmem+0x3e>
2ffde696:	3c01      	subs	r4, #1
2ffde698:	e7f8      	b.n	2ffde68c <bsec_power_safmem+0x1c>
2ffde69a:	f023 0301 	bic.w	r3, r3, #1
2ffde69e:	e7f1      	b.n	2ffde684 <bsec_power_safmem+0x14>
2ffde6a0:	3c01      	subs	r4, #1
2ffde6a2:	f7ff ffdf 	bl	2ffde664 <bsec_get_status>
2ffde6a6:	0682      	lsls	r2, r0, #26
2ffde6a8:	d409      	bmi.n	2ffde6be <bsec_power_safmem+0x4e>
2ffde6aa:	2c00      	cmp	r4, #0
2ffde6ac:	d1f8      	bne.n	2ffde6a0 <bsec_power_safmem+0x30>
2ffde6ae:	f7ff ff0f 	bl	2ffde4d0 <bsec_unlock>
2ffde6b2:	f06f 0006 	mvn.w	r0, #6
2ffde6b6:	bd10      	pop	{r4, pc}
2ffde6b8:	f64f 74ff 	movw	r4, #65535	; 0xffff
2ffde6bc:	e7f1      	b.n	2ffde6a2 <bsec_power_safmem+0x32>
2ffde6be:	f7ff ff07 	bl	2ffde4d0 <bsec_unlock>
2ffde6c2:	2c00      	cmp	r4, #0
2ffde6c4:	bf14      	ite	ne
2ffde6c6:	2000      	movne	r0, #0
2ffde6c8:	f06f 0006 	mvneq.w	r0, #6
2ffde6cc:	e7f3      	b.n	2ffde6b6 <bsec_power_safmem+0x46>
2ffde6ce:	bf00      	nop
2ffde6d0:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde6d4 <bsec_get_version>:
2ffde6d4:	4b02      	ldr	r3, [pc, #8]	; (2ffde6e0 <bsec_get_version+0xc>)
2ffde6d6:	681b      	ldr	r3, [r3, #0]
2ffde6d8:	f8d3 0ff4 	ldr.w	r0, [r3, #4084]	; 0xff4
2ffde6dc:	4770      	bx	lr
2ffde6de:	bf00      	nop
2ffde6e0:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde6e4 <bsec_get_id>:
2ffde6e4:	4b02      	ldr	r3, [pc, #8]	; (2ffde6f0 <bsec_get_id+0xc>)
2ffde6e6:	681b      	ldr	r3, [r3, #0]
2ffde6e8:	f8d3 0ff8 	ldr.w	r0, [r3, #4088]	; 0xff8
2ffde6ec:	4770      	bx	lr
2ffde6ee:	bf00      	nop
2ffde6f0:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde6f4 <bsec_probe>:
2ffde6f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffde6f6:	a801      	add	r0, sp, #4
2ffde6f8:	f003 fbe0 	bl	2ffe1ebc <fdt_get_address>
2ffde6fc:	b918      	cbnz	r0, 2ffde706 <bsec_probe+0x12>
2ffde6fe:	f7fe fa93 	bl	2ffdcc28 <console_flush>
2ffde702:	f7f7 edae 	blx	2ffd6260 <do_panic>
2ffde706:	4a0c      	ldr	r2, [pc, #48]	; (2ffde738 <bsec_probe+0x44>)
2ffde708:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffde70c:	a802      	add	r0, sp, #8
2ffde70e:	f003 fcfb 	bl	2ffe2108 <dt_get_node>
2ffde712:	2800      	cmp	r0, #0
2ffde714:	dbf3      	blt.n	2ffde6fe <bsec_probe+0xa>
2ffde716:	4b09      	ldr	r3, [pc, #36]	; (2ffde73c <bsec_probe+0x48>)
2ffde718:	9a02      	ldr	r2, [sp, #8]
2ffde71a:	601a      	str	r2, [r3, #0]
2ffde71c:	f7ff ffda 	bl	2ffde6d4 <bsec_get_version>
2ffde720:	b2c0      	uxtb	r0, r0
2ffde722:	2811      	cmp	r0, #17
2ffde724:	d1eb      	bne.n	2ffde6fe <bsec_probe+0xa>
2ffde726:	f7ff ffdd 	bl	2ffde6e4 <bsec_get_id>
2ffde72a:	4b05      	ldr	r3, [pc, #20]	; (2ffde740 <bsec_probe+0x4c>)
2ffde72c:	4298      	cmp	r0, r3
2ffde72e:	d1e6      	bne.n	2ffde6fe <bsec_probe+0xa>
2ffde730:	2000      	movs	r0, #0
2ffde732:	b007      	add	sp, #28
2ffde734:	f85d fb04 	ldr.w	pc, [sp], #4
2ffde738:	2ffe5b3d 	.word	0x2ffe5b3d
2ffde73c:	2ffe8f3c 	.word	0x2ffe8f3c
2ffde740:	00100032 	.word	0x00100032

2ffde744 <bsec_set_sr_lock>:
2ffde744:	b538      	push	{r3, r4, r5, lr}
2ffde746:	4604      	mov	r4, r0
2ffde748:	f7ff fece 	bl	2ffde4e8 <otp_bank_offset>
2ffde74c:	2c5f      	cmp	r4, #95	; 0x5f
2ffde74e:	4605      	mov	r5, r0
2ffde750:	d80e      	bhi.n	2ffde770 <bsec_set_sr_lock+0x2c>
2ffde752:	f004 041f 	and.w	r4, r4, #31
2ffde756:	f7ff feaf 	bl	2ffde4b8 <bsec_lock>
2ffde75a:	4b07      	ldr	r3, [pc, #28]	; (2ffde778 <bsec_set_sr_lock+0x34>)
2ffde75c:	2001      	movs	r0, #1
2ffde75e:	681b      	ldr	r3, [r3, #0]
2ffde760:	fa00 f404 	lsl.w	r4, r0, r4
2ffde764:	3394      	adds	r3, #148	; 0x94
2ffde766:	515c      	str	r4, [r3, r5]
2ffde768:	f7ff feb2 	bl	2ffde4d0 <bsec_unlock>
2ffde76c:	2000      	movs	r0, #0
2ffde76e:	bd38      	pop	{r3, r4, r5, pc}
2ffde770:	f06f 0003 	mvn.w	r0, #3
2ffde774:	e7fb      	b.n	2ffde76e <bsec_set_sr_lock+0x2a>
2ffde776:	bf00      	nop
2ffde778:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde77c <bsec_read_sr_lock>:
2ffde77c:	b538      	push	{r3, r4, r5, lr}
2ffde77e:	4604      	mov	r4, r0
2ffde780:	460d      	mov	r5, r1
2ffde782:	f7ff feb1 	bl	2ffde4e8 <otp_bank_offset>
2ffde786:	f004 021f 	and.w	r2, r4, #31
2ffde78a:	2301      	movs	r3, #1
2ffde78c:	2c5f      	cmp	r4, #95	; 0x5f
2ffde78e:	fa03 f302 	lsl.w	r3, r3, r2
2ffde792:	d80a      	bhi.n	2ffde7aa <bsec_read_sr_lock+0x2e>
2ffde794:	4a06      	ldr	r2, [pc, #24]	; (2ffde7b0 <bsec_read_sr_lock+0x34>)
2ffde796:	6812      	ldr	r2, [r2, #0]
2ffde798:	3294      	adds	r2, #148	; 0x94
2ffde79a:	5812      	ldr	r2, [r2, r0]
2ffde79c:	2000      	movs	r0, #0
2ffde79e:	4213      	tst	r3, r2
2ffde7a0:	bf14      	ite	ne
2ffde7a2:	2301      	movne	r3, #1
2ffde7a4:	2300      	moveq	r3, #0
2ffde7a6:	702b      	strb	r3, [r5, #0]
2ffde7a8:	bd38      	pop	{r3, r4, r5, pc}
2ffde7aa:	f06f 0003 	mvn.w	r0, #3
2ffde7ae:	e7fb      	b.n	2ffde7a8 <bsec_read_sr_lock+0x2c>
2ffde7b0:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde7b4 <bsec_shadow_register>:
2ffde7b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffde7b6:	f10d 0107 	add.w	r1, sp, #7
2ffde7ba:	4605      	mov	r5, r0
2ffde7bc:	f7ff ffde 	bl	2ffde77c <bsec_read_sr_lock>
2ffde7c0:	4604      	mov	r4, r0
2ffde7c2:	b138      	cbz	r0, 2ffde7d4 <bsec_shadow_register+0x20>
2ffde7c4:	4602      	mov	r2, r0
2ffde7c6:	4629      	mov	r1, r5
2ffde7c8:	4817      	ldr	r0, [pc, #92]	; (2ffde828 <bsec_shadow_register+0x74>)
2ffde7ca:	f7fe f98f 	bl	2ffdcaec <tf_log>
2ffde7ce:	4620      	mov	r0, r4
2ffde7d0:	b003      	add	sp, #12
2ffde7d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffde7d4:	f7ff ff46 	bl	2ffde664 <bsec_get_status>
2ffde7d8:	0683      	lsls	r3, r0, #26
2ffde7da:	d422      	bmi.n	2ffde822 <bsec_shadow_register+0x6e>
2ffde7dc:	2001      	movs	r0, #1
2ffde7de:	f7ff ff47 	bl	2ffde670 <bsec_power_safmem>
2ffde7e2:	4604      	mov	r4, r0
2ffde7e4:	2800      	cmp	r0, #0
2ffde7e6:	d1f2      	bne.n	2ffde7ce <bsec_shadow_register+0x1a>
2ffde7e8:	2701      	movs	r7, #1
2ffde7ea:	f7ff fe65 	bl	2ffde4b8 <bsec_lock>
2ffde7ee:	4b0f      	ldr	r3, [pc, #60]	; (2ffde82c <bsec_shadow_register+0x78>)
2ffde7f0:	681b      	ldr	r3, [r3, #0]
2ffde7f2:	605d      	str	r5, [r3, #4]
2ffde7f4:	f7ff ff36 	bl	2ffde664 <bsec_get_status>
2ffde7f8:	f010 0608 	ands.w	r6, r0, #8
2ffde7fc:	d1fa      	bne.n	2ffde7f4 <bsec_shadow_register+0x40>
2ffde7fe:	2101      	movs	r1, #1
2ffde800:	4628      	mov	r0, r5
2ffde802:	f7ff fe7d 	bl	2ffde500 <bsec_check_error>
2ffde806:	4604      	mov	r4, r0
2ffde808:	f7ff fe62 	bl	2ffde4d0 <bsec_unlock>
2ffde80c:	2f00      	cmp	r7, #0
2ffde80e:	d0de      	beq.n	2ffde7ce <bsec_shadow_register+0x1a>
2ffde810:	4630      	mov	r0, r6
2ffde812:	f7ff ff2d 	bl	2ffde670 <bsec_power_safmem>
2ffde816:	2800      	cmp	r0, #0
2ffde818:	d0d9      	beq.n	2ffde7ce <bsec_shadow_register+0x1a>
2ffde81a:	f7fe fa05 	bl	2ffdcc28 <console_flush>
2ffde81e:	f7f7 ed20 	blx	2ffd6260 <do_panic>
2ffde822:	4627      	mov	r7, r4
2ffde824:	e7e1      	b.n	2ffde7ea <bsec_shadow_register+0x36>
2ffde826:	bf00      	nop
2ffde828:	2ffe5b4f 	.word	0x2ffe5b4f
2ffde82c:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde830 <bsec_set_sw_lock>:
2ffde830:	b538      	push	{r3, r4, r5, lr}
2ffde832:	4604      	mov	r4, r0
2ffde834:	f7ff fe58 	bl	2ffde4e8 <otp_bank_offset>
2ffde838:	2c5f      	cmp	r4, #95	; 0x5f
2ffde83a:	4605      	mov	r5, r0
2ffde83c:	d80e      	bhi.n	2ffde85c <bsec_set_sw_lock+0x2c>
2ffde83e:	f004 041f 	and.w	r4, r4, #31
2ffde842:	f7ff fe39 	bl	2ffde4b8 <bsec_lock>
2ffde846:	4b07      	ldr	r3, [pc, #28]	; (2ffde864 <bsec_set_sw_lock+0x34>)
2ffde848:	2001      	movs	r0, #1
2ffde84a:	681b      	ldr	r3, [r3, #0]
2ffde84c:	fa00 f404 	lsl.w	r4, r0, r4
2ffde850:	337c      	adds	r3, #124	; 0x7c
2ffde852:	515c      	str	r4, [r3, r5]
2ffde854:	f7ff fe3c 	bl	2ffde4d0 <bsec_unlock>
2ffde858:	2000      	movs	r0, #0
2ffde85a:	bd38      	pop	{r3, r4, r5, pc}
2ffde85c:	f06f 0003 	mvn.w	r0, #3
2ffde860:	e7fb      	b.n	2ffde85a <bsec_set_sw_lock+0x2a>
2ffde862:	bf00      	nop
2ffde864:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde868 <bsec_read_sw_lock>:
2ffde868:	b538      	push	{r3, r4, r5, lr}
2ffde86a:	4604      	mov	r4, r0
2ffde86c:	460d      	mov	r5, r1
2ffde86e:	f7ff fe3b 	bl	2ffde4e8 <otp_bank_offset>
2ffde872:	f004 021f 	and.w	r2, r4, #31
2ffde876:	2301      	movs	r3, #1
2ffde878:	2c5f      	cmp	r4, #95	; 0x5f
2ffde87a:	fa03 f302 	lsl.w	r3, r3, r2
2ffde87e:	d80a      	bhi.n	2ffde896 <bsec_read_sw_lock+0x2e>
2ffde880:	4a06      	ldr	r2, [pc, #24]	; (2ffde89c <bsec_read_sw_lock+0x34>)
2ffde882:	6812      	ldr	r2, [r2, #0]
2ffde884:	327c      	adds	r2, #124	; 0x7c
2ffde886:	5812      	ldr	r2, [r2, r0]
2ffde888:	2000      	movs	r0, #0
2ffde88a:	4213      	tst	r3, r2
2ffde88c:	bf14      	ite	ne
2ffde88e:	2301      	movne	r3, #1
2ffde890:	2300      	moveq	r3, #0
2ffde892:	702b      	strb	r3, [r5, #0]
2ffde894:	bd38      	pop	{r3, r4, r5, pc}
2ffde896:	f06f 0003 	mvn.w	r0, #3
2ffde89a:	e7fb      	b.n	2ffde894 <bsec_read_sw_lock+0x2c>
2ffde89c:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde8a0 <bsec_write_otp>:
2ffde8a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffde8a2:	460d      	mov	r5, r1
2ffde8a4:	4606      	mov	r6, r0
2ffde8a6:	f10d 0107 	add.w	r1, sp, #7
2ffde8aa:	4628      	mov	r0, r5
2ffde8ac:	f7ff ffdc 	bl	2ffde868 <bsec_read_sw_lock>
2ffde8b0:	4604      	mov	r4, r0
2ffde8b2:	b138      	cbz	r0, 2ffde8c4 <bsec_write_otp+0x24>
2ffde8b4:	4602      	mov	r2, r0
2ffde8b6:	4629      	mov	r1, r5
2ffde8b8:	4808      	ldr	r0, [pc, #32]	; (2ffde8dc <bsec_write_otp+0x3c>)
2ffde8ba:	f7fe f917 	bl	2ffdcaec <tf_log>
2ffde8be:	4620      	mov	r0, r4
2ffde8c0:	b002      	add	sp, #8
2ffde8c2:	bd70      	pop	{r4, r5, r6, pc}
2ffde8c4:	f7ff fdf8 	bl	2ffde4b8 <bsec_lock>
2ffde8c8:	4b05      	ldr	r3, [pc, #20]	; (2ffde8e0 <bsec_write_otp+0x40>)
2ffde8ca:	681b      	ldr	r3, [r3, #0]
2ffde8cc:	f503 7300 	add.w	r3, r3, #512	; 0x200
2ffde8d0:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
2ffde8d4:	f7ff fdfc 	bl	2ffde4d0 <bsec_unlock>
2ffde8d8:	e7f1      	b.n	2ffde8be <bsec_write_otp+0x1e>
2ffde8da:	bf00      	nop
2ffde8dc:	2ffe5b78 	.word	0x2ffe5b78
2ffde8e0:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde8e4 <bsec_read_sp_lock>:
2ffde8e4:	b538      	push	{r3, r4, r5, lr}
2ffde8e6:	4604      	mov	r4, r0
2ffde8e8:	460d      	mov	r5, r1
2ffde8ea:	f7ff fdfd 	bl	2ffde4e8 <otp_bank_offset>
2ffde8ee:	f004 021f 	and.w	r2, r4, #31
2ffde8f2:	2301      	movs	r3, #1
2ffde8f4:	2c5f      	cmp	r4, #95	; 0x5f
2ffde8f6:	fa03 f302 	lsl.w	r3, r3, r2
2ffde8fa:	d80a      	bhi.n	2ffde912 <bsec_read_sp_lock+0x2e>
2ffde8fc:	4a06      	ldr	r2, [pc, #24]	; (2ffde918 <bsec_read_sp_lock+0x34>)
2ffde8fe:	6812      	ldr	r2, [r2, #0]
2ffde900:	3264      	adds	r2, #100	; 0x64
2ffde902:	5812      	ldr	r2, [r2, r0]
2ffde904:	2000      	movs	r0, #0
2ffde906:	4213      	tst	r3, r2
2ffde908:	bf14      	ite	ne
2ffde90a:	2301      	movne	r3, #1
2ffde90c:	2300      	moveq	r3, #0
2ffde90e:	702b      	strb	r3, [r5, #0]
2ffde910:	bd38      	pop	{r3, r4, r5, pc}
2ffde912:	f06f 0003 	mvn.w	r0, #3
2ffde916:	e7fb      	b.n	2ffde910 <bsec_read_sp_lock+0x2c>
2ffde918:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde91c <bsec_read_permanent_lock>:
2ffde91c:	b538      	push	{r3, r4, r5, lr}
2ffde91e:	4604      	mov	r4, r0
2ffde920:	460d      	mov	r5, r1
2ffde922:	f7ff fde1 	bl	2ffde4e8 <otp_bank_offset>
2ffde926:	f004 021f 	and.w	r2, r4, #31
2ffde92a:	2301      	movs	r3, #1
2ffde92c:	2c5f      	cmp	r4, #95	; 0x5f
2ffde92e:	fa03 f302 	lsl.w	r3, r3, r2
2ffde932:	d80a      	bhi.n	2ffde94a <bsec_read_permanent_lock+0x2e>
2ffde934:	4a06      	ldr	r2, [pc, #24]	; (2ffde950 <bsec_read_permanent_lock+0x34>)
2ffde936:	6812      	ldr	r2, [r2, #0]
2ffde938:	324c      	adds	r2, #76	; 0x4c
2ffde93a:	5812      	ldr	r2, [r2, r0]
2ffde93c:	2000      	movs	r0, #0
2ffde93e:	4213      	tst	r3, r2
2ffde940:	bf14      	ite	ne
2ffde942:	2301      	movne	r3, #1
2ffde944:	2300      	moveq	r3, #0
2ffde946:	702b      	strb	r3, [r5, #0]
2ffde948:	bd38      	pop	{r3, r4, r5, pc}
2ffde94a:	f06f 0003 	mvn.w	r0, #3
2ffde94e:	e7fb      	b.n	2ffde948 <bsec_read_permanent_lock+0x2c>
2ffde950:	2ffe8f3c 	.word	0x2ffe8f3c

2ffde954 <bsec_program_otp>:
2ffde954:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffde958:	460d      	mov	r5, r1
2ffde95a:	4607      	mov	r7, r0
2ffde95c:	f10d 0106 	add.w	r1, sp, #6
2ffde960:	4628      	mov	r0, r5
2ffde962:	f7ff ffbf 	bl	2ffde8e4 <bsec_read_sp_lock>
2ffde966:	4604      	mov	r4, r0
2ffde968:	b140      	cbz	r0, 2ffde97c <bsec_program_otp+0x28>
2ffde96a:	4602      	mov	r2, r0
2ffde96c:	4629      	mov	r1, r5
2ffde96e:	482c      	ldr	r0, [pc, #176]	; (2ffdea20 <bsec_program_otp+0xcc>)
2ffde970:	f7fe f8bc 	bl	2ffdcaec <tf_log>
2ffde974:	4620      	mov	r0, r4
2ffde976:	b002      	add	sp, #8
2ffde978:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffde97c:	f10d 0107 	add.w	r1, sp, #7
2ffde980:	4628      	mov	r0, r5
2ffde982:	f7ff ffcb 	bl	2ffde91c <bsec_read_permanent_lock>
2ffde986:	4604      	mov	r4, r0
2ffde988:	b118      	cbz	r0, 2ffde992 <bsec_program_otp+0x3e>
2ffde98a:	4602      	mov	r2, r0
2ffde98c:	4629      	mov	r1, r5
2ffde98e:	4825      	ldr	r0, [pc, #148]	; (2ffdea24 <bsec_program_otp+0xd0>)
2ffde990:	e7ee      	b.n	2ffde970 <bsec_program_otp+0x1c>
2ffde992:	f89d 3006 	ldrb.w	r3, [sp, #6]
2ffde996:	b923      	cbnz	r3, 2ffde9a2 <bsec_program_otp+0x4e>
2ffde998:	f89d 8007 	ldrb.w	r8, [sp, #7]
2ffde99c:	f1b8 0f00 	cmp.w	r8, #0
2ffde9a0:	d005      	beq.n	2ffde9ae <bsec_program_otp+0x5a>
2ffde9a2:	4821      	ldr	r0, [pc, #132]	; (2ffdea28 <bsec_program_otp+0xd4>)
2ffde9a4:	f06f 0404 	mvn.w	r4, #4
2ffde9a8:	f7fe f8a0 	bl	2ffdcaec <tf_log>
2ffde9ac:	e7e2      	b.n	2ffde974 <bsec_program_otp+0x20>
2ffde9ae:	4e1f      	ldr	r6, [pc, #124]	; (2ffdea2c <bsec_program_otp+0xd8>)
2ffde9b0:	6832      	ldr	r2, [r6, #0]
2ffde9b2:	6912      	ldr	r2, [r2, #16]
2ffde9b4:	0710      	lsls	r0, r2, #28
2ffde9b6:	d502      	bpl.n	2ffde9be <bsec_program_otp+0x6a>
2ffde9b8:	481d      	ldr	r0, [pc, #116]	; (2ffdea30 <bsec_program_otp+0xdc>)
2ffde9ba:	f7fe f897 	bl	2ffdcaec <tf_log>
2ffde9be:	f7ff fe51 	bl	2ffde664 <bsec_get_status>
2ffde9c2:	0681      	lsls	r1, r0, #26
2ffde9c4:	d407      	bmi.n	2ffde9d6 <bsec_program_otp+0x82>
2ffde9c6:	2001      	movs	r0, #1
2ffde9c8:	f7ff fe52 	bl	2ffde670 <bsec_power_safmem>
2ffde9cc:	4604      	mov	r4, r0
2ffde9ce:	2800      	cmp	r0, #0
2ffde9d0:	d1d0      	bne.n	2ffde974 <bsec_program_otp+0x20>
2ffde9d2:	f04f 0801 	mov.w	r8, #1
2ffde9d6:	f7ff fd6f 	bl	2ffde4b8 <bsec_lock>
2ffde9da:	6833      	ldr	r3, [r6, #0]
2ffde9dc:	f445 7280 	orr.w	r2, r5, #256	; 0x100
2ffde9e0:	609f      	str	r7, [r3, #8]
2ffde9e2:	605a      	str	r2, [r3, #4]
2ffde9e4:	f7ff fe3e 	bl	2ffde664 <bsec_get_status>
2ffde9e8:	0702      	lsls	r2, r0, #28
2ffde9ea:	d4fb      	bmi.n	2ffde9e4 <bsec_program_otp+0x90>
2ffde9ec:	f7ff fe3a 	bl	2ffde664 <bsec_get_status>
2ffde9f0:	06c3      	lsls	r3, r0, #27
2ffde9f2:	d412      	bmi.n	2ffdea1a <bsec_program_otp+0xc6>
2ffde9f4:	2101      	movs	r1, #1
2ffde9f6:	4628      	mov	r0, r5
2ffde9f8:	f7ff fd82 	bl	2ffde500 <bsec_check_error>
2ffde9fc:	4604      	mov	r4, r0
2ffde9fe:	f7ff fd67 	bl	2ffde4d0 <bsec_unlock>
2ffdea02:	f1b8 0f00 	cmp.w	r8, #0
2ffdea06:	d0b5      	beq.n	2ffde974 <bsec_program_otp+0x20>
2ffdea08:	2000      	movs	r0, #0
2ffdea0a:	f7ff fe31 	bl	2ffde670 <bsec_power_safmem>
2ffdea0e:	2800      	cmp	r0, #0
2ffdea10:	d0b0      	beq.n	2ffde974 <bsec_program_otp+0x20>
2ffdea12:	f7fe f909 	bl	2ffdcc28 <console_flush>
2ffdea16:	f7f7 ec24 	blx	2ffd6260 <do_panic>
2ffdea1a:	f06f 0404 	mvn.w	r4, #4
2ffdea1e:	e7ee      	b.n	2ffde9fe <bsec_program_otp+0xaa>
2ffdea20:	2ffe5ba2 	.word	0x2ffe5ba2
2ffdea24:	2ffe5bcb 	.word	0x2ffe5bcb
2ffdea28:	2ffe5bf2 	.word	0x2ffe5bf2
2ffdea2c:	2ffe8f3c 	.word	0x2ffe8f3c
2ffdea30:	2ffe5c1b 	.word	0x2ffe5c1b

2ffdea34 <bsec_shadow_read_otp>:
2ffdea34:	b570      	push	{r4, r5, r6, lr}
2ffdea36:	4606      	mov	r6, r0
2ffdea38:	4608      	mov	r0, r1
2ffdea3a:	460d      	mov	r5, r1
2ffdea3c:	f7ff feba 	bl	2ffde7b4 <bsec_shadow_register>
2ffdea40:	4604      	mov	r4, r0
2ffdea42:	b130      	cbz	r0, 2ffdea52 <bsec_shadow_read_otp+0x1e>
2ffdea44:	4602      	mov	r2, r0
2ffdea46:	4629      	mov	r1, r5
2ffdea48:	4807      	ldr	r0, [pc, #28]	; (2ffdea68 <bsec_shadow_read_otp+0x34>)
2ffdea4a:	f7fe f84f 	bl	2ffdcaec <tf_log>
2ffdea4e:	4620      	mov	r0, r4
2ffdea50:	bd70      	pop	{r4, r5, r6, pc}
2ffdea52:	4629      	mov	r1, r5
2ffdea54:	4630      	mov	r0, r6
2ffdea56:	f7ff fdef 	bl	2ffde638 <bsec_read_otp>
2ffdea5a:	4604      	mov	r4, r0
2ffdea5c:	2800      	cmp	r0, #0
2ffdea5e:	d0f6      	beq.n	2ffdea4e <bsec_shadow_read_otp+0x1a>
2ffdea60:	4602      	mov	r2, r0
2ffdea62:	4802      	ldr	r0, [pc, #8]	; (2ffdea6c <bsec_shadow_read_otp+0x38>)
2ffdea64:	e7f1      	b.n	2ffdea4a <bsec_shadow_read_otp+0x16>
2ffdea66:	bf00      	nop
2ffdea68:	2ffe5c4a 	.word	0x2ffe5c4a
2ffdea6c:	2ffe5c68 	.word	0x2ffe5c68

2ffdea70 <fdt_osc_read_freq>:
2ffdea70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffdea72:	4607      	mov	r7, r0
2ffdea74:	4668      	mov	r0, sp
2ffdea76:	460e      	mov	r6, r1
2ffdea78:	f003 fa20 	bl	2ffe1ebc <fdt_get_address>
2ffdea7c:	2800      	cmp	r0, #0
2ffdea7e:	d03d      	beq.n	2ffdeafc <fdt_osc_read_freq+0x8c>
2ffdea80:	4921      	ldr	r1, [pc, #132]	; (2ffdeb08 <fdt_osc_read_freq+0x98>)
2ffdea82:	9800      	ldr	r0, [sp, #0]
2ffdea84:	f004 f93b 	bl	2ffe2cfe <fdt_path_offset>
2ffdea88:	1e01      	subs	r1, r0, #0
2ffdea8a:	db3a      	blt.n	2ffdeb02 <fdt_osc_read_freq+0x92>
2ffdea8c:	9800      	ldr	r0, [sp, #0]
2ffdea8e:	f003 ff04 	bl	2ffe289a <fdt_first_subnode>
2ffdea92:	2800      	cmp	r0, #0
2ffdea94:	4605      	mov	r5, r0
2ffdea96:	da02      	bge.n	2ffdea9e <fdt_osc_read_freq+0x2e>
2ffdea98:	2400      	movs	r4, #0
2ffdea9a:	6034      	str	r4, [r6, #0]
2ffdea9c:	e006      	b.n	2ffdeaac <fdt_osc_read_freq+0x3c>
2ffdea9e:	9800      	ldr	r0, [sp, #0]
2ffdeaa0:	aa01      	add	r2, sp, #4
2ffdeaa2:	4629      	mov	r1, r5
2ffdeaa4:	f003 ffa8 	bl	2ffe29f8 <fdt_get_name>
2ffdeaa8:	b918      	cbnz	r0, 2ffdeab2 <fdt_osc_read_freq+0x42>
2ffdeaaa:	9c01      	ldr	r4, [sp, #4]
2ffdeaac:	4620      	mov	r0, r4
2ffdeaae:	b003      	add	sp, #12
2ffdeab0:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffdeab2:	9a01      	ldr	r2, [sp, #4]
2ffdeab4:	4639      	mov	r1, r7
2ffdeab6:	f004 fc5c 	bl	2ffe3372 <strncmp>
2ffdeaba:	4604      	mov	r4, r0
2ffdeabc:	b9c8      	cbnz	r0, 2ffdeaf2 <fdt_osc_read_freq+0x82>
2ffdeabe:	4628      	mov	r0, r5
2ffdeac0:	f003 fa18 	bl	2ffe1ef4 <fdt_get_status>
2ffdeac4:	b1a8      	cbz	r0, 2ffdeaf2 <fdt_osc_read_freq+0x82>
2ffdeac6:	4a11      	ldr	r2, [pc, #68]	; (2ffdeb0c <fdt_osc_read_freq+0x9c>)
2ffdeac8:	ab01      	add	r3, sp, #4
2ffdeaca:	9800      	ldr	r0, [sp, #0]
2ffdeacc:	4629      	mov	r1, r5
2ffdeace:	f004 f884 	bl	2ffe2bda <fdt_getprop>
2ffdead2:	2800      	cmp	r0, #0
2ffdead4:	d0e9      	beq.n	2ffdeaaa <fdt_osc_read_freq+0x3a>
2ffdead6:	6802      	ldr	r2, [r0, #0]
2ffdead8:	0e13      	lsrs	r3, r2, #24
2ffdeada:	f3c2 2107 	ubfx	r1, r2, #8, #8
2ffdeade:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffdeae2:	f3c2 4207 	ubfx	r2, r2, #16, #8
2ffdeae6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffdeaea:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffdeaee:	6033      	str	r3, [r6, #0]
2ffdeaf0:	e7dc      	b.n	2ffdeaac <fdt_osc_read_freq+0x3c>
2ffdeaf2:	9800      	ldr	r0, [sp, #0]
2ffdeaf4:	4629      	mov	r1, r5
2ffdeaf6:	f003 fee3 	bl	2ffe28c0 <fdt_next_subnode>
2ffdeafa:	e7ca      	b.n	2ffdea92 <fdt_osc_read_freq+0x22>
2ffdeafc:	f06f 0401 	mvn.w	r4, #1
2ffdeb00:	e7d4      	b.n	2ffdeaac <fdt_osc_read_freq+0x3c>
2ffdeb02:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffdeb06:	e7d1      	b.n	2ffdeaac <fdt_osc_read_freq+0x3c>
2ffdeb08:	2ffe5c81 	.word	0x2ffe5c81
2ffdeb0c:	2ffe5c89 	.word	0x2ffe5c89

2ffdeb10 <fdt_osc_read_bool>:
2ffdeb10:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffdeb12:	4605      	mov	r5, r0
2ffdeb14:	4668      	mov	r0, sp
2ffdeb16:	460e      	mov	r6, r1
2ffdeb18:	f003 f9d0 	bl	2ffe1ebc <fdt_get_address>
2ffdeb1c:	b910      	cbnz	r0, 2ffdeb24 <fdt_osc_read_bool+0x14>
2ffdeb1e:	2000      	movs	r0, #0
2ffdeb20:	b003      	add	sp, #12
2ffdeb22:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffdeb24:	2d05      	cmp	r5, #5
2ffdeb26:	d8fa      	bhi.n	2ffdeb1e <fdt_osc_read_bool+0xe>
2ffdeb28:	4914      	ldr	r1, [pc, #80]	; (2ffdeb7c <fdt_osc_read_bool+0x6c>)
2ffdeb2a:	9800      	ldr	r0, [sp, #0]
2ffdeb2c:	f004 f8e7 	bl	2ffe2cfe <fdt_path_offset>
2ffdeb30:	1e01      	subs	r1, r0, #0
2ffdeb32:	dbf4      	blt.n	2ffdeb1e <fdt_osc_read_bool+0xe>
2ffdeb34:	9800      	ldr	r0, [sp, #0]
2ffdeb36:	4f12      	ldr	r7, [pc, #72]	; (2ffdeb80 <fdt_osc_read_bool+0x70>)
2ffdeb38:	f003 feaf 	bl	2ffe289a <fdt_first_subnode>
2ffdeb3c:	4604      	mov	r4, r0
2ffdeb3e:	2c00      	cmp	r4, #0
2ffdeb40:	dbed      	blt.n	2ffdeb1e <fdt_osc_read_bool+0xe>
2ffdeb42:	9800      	ldr	r0, [sp, #0]
2ffdeb44:	aa01      	add	r2, sp, #4
2ffdeb46:	4621      	mov	r1, r4
2ffdeb48:	f003 ff56 	bl	2ffe29f8 <fdt_get_name>
2ffdeb4c:	2800      	cmp	r0, #0
2ffdeb4e:	d0e6      	beq.n	2ffdeb1e <fdt_osc_read_bool+0xe>
2ffdeb50:	9a01      	ldr	r2, [sp, #4]
2ffdeb52:	f857 1025 	ldr.w	r1, [r7, r5, lsl #2]
2ffdeb56:	f004 fc0c 	bl	2ffe3372 <strncmp>
2ffdeb5a:	4603      	mov	r3, r0
2ffdeb5c:	b128      	cbz	r0, 2ffdeb6a <fdt_osc_read_bool+0x5a>
2ffdeb5e:	9800      	ldr	r0, [sp, #0]
2ffdeb60:	4621      	mov	r1, r4
2ffdeb62:	f003 fead 	bl	2ffe28c0 <fdt_next_subnode>
2ffdeb66:	4604      	mov	r4, r0
2ffdeb68:	e7e9      	b.n	2ffdeb3e <fdt_osc_read_bool+0x2e>
2ffdeb6a:	9800      	ldr	r0, [sp, #0]
2ffdeb6c:	4632      	mov	r2, r6
2ffdeb6e:	4621      	mov	r1, r4
2ffdeb70:	f004 f833 	bl	2ffe2bda <fdt_getprop>
2ffdeb74:	2800      	cmp	r0, #0
2ffdeb76:	d0f2      	beq.n	2ffdeb5e <fdt_osc_read_bool+0x4e>
2ffdeb78:	2001      	movs	r0, #1
2ffdeb7a:	e7d1      	b.n	2ffdeb20 <fdt_osc_read_bool+0x10>
2ffdeb7c:	2ffe5c81 	.word	0x2ffe5c81
2ffdeb80:	2ffe71d8 	.word	0x2ffe71d8

2ffdeb84 <fdt_osc_read_uint32_default>:
2ffdeb84:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffdeb88:	4606      	mov	r6, r0
2ffdeb8a:	4668      	mov	r0, sp
2ffdeb8c:	460f      	mov	r7, r1
2ffdeb8e:	4615      	mov	r5, r2
2ffdeb90:	f003 f994 	bl	2ffe1ebc <fdt_get_address>
2ffdeb94:	b338      	cbz	r0, 2ffdebe6 <fdt_osc_read_uint32_default+0x62>
2ffdeb96:	2e05      	cmp	r6, #5
2ffdeb98:	d825      	bhi.n	2ffdebe6 <fdt_osc_read_uint32_default+0x62>
2ffdeb9a:	4915      	ldr	r1, [pc, #84]	; (2ffdebf0 <fdt_osc_read_uint32_default+0x6c>)
2ffdeb9c:	9800      	ldr	r0, [sp, #0]
2ffdeb9e:	f004 f8ae 	bl	2ffe2cfe <fdt_path_offset>
2ffdeba2:	1e01      	subs	r1, r0, #0
2ffdeba4:	db1f      	blt.n	2ffdebe6 <fdt_osc_read_uint32_default+0x62>
2ffdeba6:	9800      	ldr	r0, [sp, #0]
2ffdeba8:	f8df 8048 	ldr.w	r8, [pc, #72]	; 2ffdebf4 <fdt_osc_read_uint32_default+0x70>
2ffdebac:	f003 fe75 	bl	2ffe289a <fdt_first_subnode>
2ffdebb0:	4604      	mov	r4, r0
2ffdebb2:	2c00      	cmp	r4, #0
2ffdebb4:	db17      	blt.n	2ffdebe6 <fdt_osc_read_uint32_default+0x62>
2ffdebb6:	9800      	ldr	r0, [sp, #0]
2ffdebb8:	aa01      	add	r2, sp, #4
2ffdebba:	4621      	mov	r1, r4
2ffdebbc:	f003 ff1c 	bl	2ffe29f8 <fdt_get_name>
2ffdebc0:	b188      	cbz	r0, 2ffdebe6 <fdt_osc_read_uint32_default+0x62>
2ffdebc2:	9a01      	ldr	r2, [sp, #4]
2ffdebc4:	f858 1026 	ldr.w	r1, [r8, r6, lsl #2]
2ffdebc8:	f004 fbd3 	bl	2ffe3372 <strncmp>
2ffdebcc:	b128      	cbz	r0, 2ffdebda <fdt_osc_read_uint32_default+0x56>
2ffdebce:	9800      	ldr	r0, [sp, #0]
2ffdebd0:	4621      	mov	r1, r4
2ffdebd2:	f003 fe75 	bl	2ffe28c0 <fdt_next_subnode>
2ffdebd6:	4604      	mov	r4, r0
2ffdebd8:	e7eb      	b.n	2ffdebb2 <fdt_osc_read_uint32_default+0x2e>
2ffdebda:	462a      	mov	r2, r5
2ffdebdc:	4639      	mov	r1, r7
2ffdebde:	4620      	mov	r0, r4
2ffdebe0:	f003 f9ba 	bl	2ffe1f58 <fdt_read_uint32_default>
2ffdebe4:	4605      	mov	r5, r0
2ffdebe6:	4628      	mov	r0, r5
2ffdebe8:	b002      	add	sp, #8
2ffdebea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffdebee:	bf00      	nop
2ffdebf0:	2ffe5c81 	.word	0x2ffe5c81
2ffdebf4:	2ffe71d8 	.word	0x2ffe71d8

2ffdebf8 <fdt_get_rcc_node>:
2ffdebf8:	4801      	ldr	r0, [pc, #4]	; (2ffdec00 <fdt_get_rcc_node+0x8>)
2ffdebfa:	f003 baa7 	b.w	2ffe214c <dt_get_node_by_compatible>
2ffdebfe:	bf00      	nop
2ffdec00:	2ffe5c99 	.word	0x2ffe5c99

2ffdec04 <fdt_rcc_read_uint32_array>:
2ffdec04:	b570      	push	{r4, r5, r6, lr}
2ffdec06:	4604      	mov	r4, r0
2ffdec08:	460d      	mov	r5, r1
2ffdec0a:	4616      	mov	r6, r2
2ffdec0c:	f7ff fff4 	bl	2ffdebf8 <fdt_get_rcc_node>
2ffdec10:	2800      	cmp	r0, #0
2ffdec12:	db06      	blt.n	2ffdec22 <fdt_rcc_read_uint32_array+0x1e>
2ffdec14:	4633      	mov	r3, r6
2ffdec16:	462a      	mov	r2, r5
2ffdec18:	4621      	mov	r1, r4
2ffdec1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffdec1e:	f003 b9af 	b.w	2ffe1f80 <fdt_read_uint32_array>
2ffdec22:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffdec26:	bd70      	pop	{r4, r5, r6, pc}

2ffdec28 <fdt_rcc_subnode_offset>:
2ffdec28:	b513      	push	{r0, r1, r4, lr}
2ffdec2a:	4604      	mov	r4, r0
2ffdec2c:	a801      	add	r0, sp, #4
2ffdec2e:	f003 f945 	bl	2ffe1ebc <fdt_get_address>
2ffdec32:	b170      	cbz	r0, 2ffdec52 <fdt_rcc_subnode_offset+0x2a>
2ffdec34:	f7ff ffe0 	bl	2ffdebf8 <fdt_get_rcc_node>
2ffdec38:	1e01      	subs	r1, r0, #0
2ffdec3a:	da03      	bge.n	2ffdec44 <fdt_rcc_subnode_offset+0x1c>
2ffdec3c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffdec40:	b002      	add	sp, #8
2ffdec42:	bd10      	pop	{r4, pc}
2ffdec44:	9801      	ldr	r0, [sp, #4]
2ffdec46:	4622      	mov	r2, r4
2ffdec48:	f003 ff45 	bl	2ffe2ad6 <fdt_subnode_offset>
2ffdec4c:	2800      	cmp	r0, #0
2ffdec4e:	dcf7      	bgt.n	2ffdec40 <fdt_rcc_subnode_offset+0x18>
2ffdec50:	e7f4      	b.n	2ffdec3c <fdt_rcc_subnode_offset+0x14>
2ffdec52:	f06f 0001 	mvn.w	r0, #1
2ffdec56:	e7f3      	b.n	2ffdec40 <fdt_rcc_subnode_offset+0x18>

2ffdec58 <fdt_rcc_read_prop>:
2ffdec58:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffdec5a:	4605      	mov	r5, r0
2ffdec5c:	a801      	add	r0, sp, #4
2ffdec5e:	460c      	mov	r4, r1
2ffdec60:	f003 f92c 	bl	2ffe1ebc <fdt_get_address>
2ffdec64:	b910      	cbnz	r0, 2ffdec6c <fdt_rcc_read_prop+0x14>
2ffdec66:	2000      	movs	r0, #0
2ffdec68:	b003      	add	sp, #12
2ffdec6a:	bd30      	pop	{r4, r5, pc}
2ffdec6c:	f7ff ffc4 	bl	2ffdebf8 <fdt_get_rcc_node>
2ffdec70:	1e01      	subs	r1, r0, #0
2ffdec72:	dbf8      	blt.n	2ffdec66 <fdt_rcc_read_prop+0xe>
2ffdec74:	9801      	ldr	r0, [sp, #4]
2ffdec76:	466b      	mov	r3, sp
2ffdec78:	462a      	mov	r2, r5
2ffdec7a:	f003 ffae 	bl	2ffe2bda <fdt_getprop>
2ffdec7e:	2800      	cmp	r0, #0
2ffdec80:	d0f2      	beq.n	2ffdec68 <fdt_rcc_read_prop+0x10>
2ffdec82:	9b00      	ldr	r3, [sp, #0]
2ffdec84:	6023      	str	r3, [r4, #0]
2ffdec86:	e7ef      	b.n	2ffdec68 <fdt_rcc_read_prop+0x10>

2ffdec88 <fdt_get_rcc_secure_status>:
2ffdec88:	b508      	push	{r3, lr}
2ffdec8a:	f7ff ffb5 	bl	2ffdebf8 <fdt_get_rcc_node>
2ffdec8e:	2800      	cmp	r0, #0
2ffdec90:	db04      	blt.n	2ffdec9c <fdt_get_rcc_secure_status+0x14>
2ffdec92:	f003 f92f 	bl	2ffe1ef4 <fdt_get_status>
2ffdec96:	f3c0 0040 	ubfx	r0, r0, #1, #1
2ffdec9a:	bd08      	pop	{r3, pc}
2ffdec9c:	2000      	movs	r0, #0
2ffdec9e:	e7fc      	b.n	2ffdec9a <fdt_get_rcc_secure_status+0x12>

2ffdeca0 <fdt_get_clock_id>:
2ffdeca0:	b513      	push	{r0, r1, r4, lr}
2ffdeca2:	4604      	mov	r4, r0
2ffdeca4:	a801      	add	r0, sp, #4
2ffdeca6:	f003 f909 	bl	2ffe1ebc <fdt_get_address>
2ffdecaa:	b1a0      	cbz	r0, 2ffdecd6 <fdt_get_clock_id+0x36>
2ffdecac:	4a0d      	ldr	r2, [pc, #52]	; (2ffdece4 <fdt_get_clock_id+0x44>)
2ffdecae:	2300      	movs	r3, #0
2ffdecb0:	9801      	ldr	r0, [sp, #4]
2ffdecb2:	4621      	mov	r1, r4
2ffdecb4:	f003 ff91 	bl	2ffe2bda <fdt_getprop>
2ffdecb8:	b180      	cbz	r0, 2ffdecdc <fdt_get_clock_id+0x3c>
2ffdecba:	6843      	ldr	r3, [r0, #4]
2ffdecbc:	0e18      	lsrs	r0, r3, #24
2ffdecbe:	f3c3 2207 	ubfx	r2, r3, #8, #8
2ffdecc2:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
2ffdecc6:	f3c3 4307 	ubfx	r3, r3, #16, #8
2ffdecca:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
2ffdecce:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
2ffdecd2:	b002      	add	sp, #8
2ffdecd4:	bd10      	pop	{r4, pc}
2ffdecd6:	f06f 0001 	mvn.w	r0, #1
2ffdecda:	e7fa      	b.n	2ffdecd2 <fdt_get_clock_id+0x32>
2ffdecdc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffdece0:	e7f7      	b.n	2ffdecd2 <fdt_get_clock_id+0x32>
2ffdece2:	bf00      	nop
2ffdece4:	2ffe5c82 	.word	0x2ffe5c82

2ffdece8 <fdt_is_pll1_predefined>:
2ffdece8:	b508      	push	{r3, lr}
2ffdecea:	4803      	ldr	r0, [pc, #12]	; (2ffdecf8 <fdt_is_pll1_predefined+0x10>)
2ffdecec:	f7ff ff9c 	bl	2ffdec28 <fdt_rcc_subnode_offset>
2ffdecf0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffdecf4:	f003 b8ee 	b.w	2ffe1ed4 <fdt_check_node>
2ffdecf8:	2ffe5ca9 	.word	0x2ffe5ca9

2ffdecfc <stm32mp_stgen_get_counter>:
2ffdecfc:	4b02      	ldr	r3, [pc, #8]	; (2ffded08 <stm32mp_stgen_get_counter+0xc>)
2ffdecfe:	6819      	ldr	r1, [r3, #0]
2ffded00:	f853 0c04 	ldr.w	r0, [r3, #-4]
2ffded04:	4770      	bx	lr
2ffded06:	bf00      	nop
2ffded08:	5c00800c 	.word	0x5c00800c

2ffded0c <stm32mp_stgen_config>:
2ffded0c:	b570      	push	{r4, r5, r6, lr}
2ffded0e:	4604      	mov	r4, r0
2ffded10:	4e10      	ldr	r6, [pc, #64]	; (2ffded54 <stm32mp_stgen_config+0x48>)
2ffded12:	6832      	ldr	r2, [r6, #0]
2ffded14:	4290      	cmp	r0, r2
2ffded16:	d01c      	beq.n	2ffded52 <stm32mp_stgen_config+0x46>
2ffded18:	4d0f      	ldr	r5, [pc, #60]	; (2ffded58 <stm32mp_stgen_config+0x4c>)
2ffded1a:	682b      	ldr	r3, [r5, #0]
2ffded1c:	f023 0301 	bic.w	r3, r3, #1
2ffded20:	602b      	str	r3, [r5, #0]
2ffded22:	f7ff ffeb 	bl	2ffdecfc <stm32mp_stgen_get_counter>
2ffded26:	460b      	mov	r3, r1
2ffded28:	fba4 0100 	umull	r0, r1, r4, r0
2ffded2c:	fb04 1103 	mla	r1, r4, r3, r1
2ffded30:	2300      	movs	r3, #0
2ffded32:	f003 ec96 	blx	2ffe2660 <__aeabi_uldivmod>
2ffded36:	4b09      	ldr	r3, [pc, #36]	; (2ffded5c <stm32mp_stgen_config+0x50>)
2ffded38:	6018      	str	r0, [r3, #0]
2ffded3a:	6059      	str	r1, [r3, #4]
2ffded3c:	6034      	str	r4, [r6, #0]
2ffded3e:	682b      	ldr	r3, [r5, #0]
2ffded40:	f043 0301 	orr.w	r3, r3, #1
2ffded44:	602b      	str	r3, [r5, #0]
2ffded46:	ee0e 4f10 	mcr	15, 0, r4, cr14, cr0, {0}
2ffded4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffded4e:	f7ff bb91 	b.w	2ffde474 <generic_delay_timer_init>
2ffded52:	bd70      	pop	{r4, r5, r6, pc}
2ffded54:	5c008020 	.word	0x5c008020
2ffded58:	5c008000 	.word	0x5c008000
2ffded5c:	5c008008 	.word	0x5c008008

2ffded60 <clock_is_always_on>:
2ffded60:	2805      	cmp	r0, #5
2ffded62:	d909      	bls.n	2ffded78 <clock_is_always_on+0x18>
2ffded64:	f1a0 03b4 	sub.w	r3, r0, #180	; 0xb4
2ffded68:	2b08      	cmp	r3, #8
2ffded6a:	d905      	bls.n	2ffded78 <clock_is_always_on+0x18>
2ffded6c:	38c2      	subs	r0, #194	; 0xc2
2ffded6e:	2802      	cmp	r0, #2
2ffded70:	bf8c      	ite	hi
2ffded72:	2000      	movhi	r0, #0
2ffded74:	2001      	movls	r0, #1
2ffded76:	4770      	bx	lr
2ffded78:	2001      	movs	r0, #1
2ffded7a:	4770      	bx	lr

2ffded7c <stm32mp1_read_pll_freq>:
2ffded7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffded80:	4606      	mov	r6, r0
2ffded82:	f8df 90ac 	ldr.w	r9, [pc, #172]	; 2ffdee30 <stm32mp1_read_pll_freq+0xb4>
2ffded86:	460c      	mov	r4, r1
2ffded88:	f7fe f896 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffded8c:	eb09 1746 	add.w	r7, r9, r6, lsl #5
2ffded90:	893b      	ldrh	r3, [r7, #8]
2ffded92:	581d      	ldr	r5, [r3, r0]
2ffded94:	4b24      	ldr	r3, [pc, #144]	; (2ffdee28 <stm32mp1_read_pll_freq+0xac>)
2ffded96:	5d18      	ldrb	r0, [r3, r4]
2ffded98:	40c5      	lsrs	r5, r0
2ffded9a:	f7fe f88d 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffded9e:	88fb      	ldrh	r3, [r7, #6]
2ffdeda0:	f005 057f 	and.w	r5, r5, #127	; 0x7f
2ffdeda4:	581c      	ldr	r4, [r3, r0]
2ffdeda6:	897b      	ldrh	r3, [r7, #10]
2ffdeda8:	f853 8000 	ldr.w	r8, [r3, r0]
2ffdedac:	f7fe f884 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdedb0:	88bb      	ldrh	r3, [r7, #4]
2ffdedb2:	581b      	ldr	r3, [r3, r0]
2ffdedb4:	f003 0303 	and.w	r3, r3, #3
2ffdedb8:	eb03 00c6 	add.w	r0, r3, r6, lsl #3
2ffdedbc:	3004      	adds	r0, #4
2ffdedbe:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
2ffdedc2:	f3c4 0008 	ubfx	r0, r4, #0, #9
2ffdedc6:	2b05      	cmp	r3, #5
2ffdedc8:	bf8e      	itee	hi
2ffdedca:	2300      	movhi	r3, #0
2ffdedcc:	4a17      	ldrls	r2, [pc, #92]	; (2ffdee2c <stm32mp1_read_pll_freq+0xb0>)
2ffdedce:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
2ffdedd2:	f418 3f80 	tst.w	r8, #65536	; 0x10000
2ffdedd6:	f3c4 4205 	ubfx	r2, r4, #16, #6
2ffdedda:	d01e      	beq.n	2ffdee1a <stm32mp1_read_pll_freq+0x9e>
2ffdeddc:	f3c8 08cc 	ubfx	r8, r8, #3, #13
2ffdede0:	3001      	adds	r0, #1
2ffdede2:	bf2c      	ite	cs
2ffdede4:	2101      	movcs	r1, #1
2ffdede6:	2100      	movcc	r1, #0
2ffdede8:	0346      	lsls	r6, r0, #13
2ffdedea:	034f      	lsls	r7, r1, #13
2ffdedec:	eb16 0608 	adds.w	r6, r6, r8
2ffdedf0:	ea47 47d0 	orr.w	r7, r7, r0, lsr #19
2ffdedf4:	f147 0700 	adc.w	r7, r7, #0
2ffdedf8:	3201      	adds	r2, #1
2ffdedfa:	fba3 0106 	umull	r0, r1, r3, r6
2ffdedfe:	fb03 1107 	mla	r1, r3, r7, r1
2ffdee02:	bf2c      	ite	cs
2ffdee04:	2301      	movcs	r3, #1
2ffdee06:	2300      	movcc	r3, #0
2ffdee08:	0352      	lsls	r2, r2, #13
2ffdee0a:	035b      	lsls	r3, r3, #13
2ffdee0c:	f003 ec28 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdee10:	3501      	adds	r5, #1
2ffdee12:	fbb0 f0f5 	udiv	r0, r0, r5
2ffdee16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffdee1a:	fb00 3303 	mla	r3, r0, r3, r3
2ffdee1e:	1c50      	adds	r0, r2, #1
2ffdee20:	fbb3 f0f0 	udiv	r0, r3, r0
2ffdee24:	e7f4      	b.n	2ffdee10 <stm32mp1_read_pll_freq+0x94>
2ffdee26:	bf00      	nop
2ffdee28:	2ffe5efd 	.word	0x2ffe5efd
2ffdee2c:	2ffe9078 	.word	0x2ffe9078
2ffdee30:	2ffe60dc 	.word	0x2ffe60dc

2ffdee34 <get_clock_rate>:
2ffdee34:	b538      	push	{r3, r4, r5, lr}
2ffdee36:	4605      	mov	r5, r0
2ffdee38:	f7fe f83e 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdee3c:	4604      	mov	r4, r0
2ffdee3e:	2d21      	cmp	r5, #33	; 0x21
2ffdee40:	f200 8091 	bhi.w	2ffdef66 <get_clock_rate+0x132>
2ffdee44:	e8df f005 	tbb	[pc, r5]
2ffdee48:	98911f1c 	.word	0x98911f1c
2ffdee4c:	1f1c8f9b 	.word	0x1f1c8f9b
2ffdee50:	9e229194 	.word	0x9e229194
2ffdee54:	a8a5a2a0 	.word	0xa8a5a2a0
2ffdee58:	b1afadaa 	.word	0xb1afadaa
2ffdee5c:	5633b6b4 	.word	0x5633b6b4
2ffdee60:	33335656 	.word	0x33335656
2ffdee64:	13853333 	.word	0x13853333
2ffdee68:	1156      	.short	0x1156
2ffdee6a:	4853      	ldr	r0, [pc, #332]	; (2ffdefb8 <get_clock_rate+0x184>)
2ffdee6c:	bd38      	pop	{r3, r4, r5, pc}
2ffdee6e:	6a03      	ldr	r3, [r0, #32]
2ffdee70:	f003 0307 	and.w	r3, r3, #7
2ffdee74:	2b03      	cmp	r3, #3
2ffdee76:	d876      	bhi.n	2ffdef66 <get_clock_rate+0x132>
2ffdee78:	e8df f003 	tbb	[pc, r3]
2ffdee7c:	0e080502 	.word	0x0e080502
2ffdee80:	4b4e      	ldr	r3, [pc, #312]	; (2ffdefbc <get_clock_rate+0x188>)
2ffdee82:	6818      	ldr	r0, [r3, #0]
2ffdee84:	e7f2      	b.n	2ffdee6c <get_clock_rate+0x38>
2ffdee86:	4b4d      	ldr	r3, [pc, #308]	; (2ffdefbc <get_clock_rate+0x188>)
2ffdee88:	6858      	ldr	r0, [r3, #4]
2ffdee8a:	e7ef      	b.n	2ffdee6c <get_clock_rate+0x38>
2ffdee8c:	2100      	movs	r1, #0
2ffdee8e:	2000      	movs	r0, #0
2ffdee90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffdee94:	f7ff bf72 	b.w	2ffded7c <stm32mp1_read_pll_freq>
2ffdee98:	2100      	movs	r1, #0
2ffdee9a:	4608      	mov	r0, r1
2ffdee9c:	f7ff ff6e 	bl	2ffded7c <stm32mp1_read_pll_freq>
2ffdeea0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2ffdeea2:	4a47      	ldr	r2, [pc, #284]	; (2ffdefc0 <get_clock_rate+0x18c>)
2ffdeea4:	f003 0307 	and.w	r3, r3, #7
2ffdeea8:	5cd3      	ldrb	r3, [r2, r3]
2ffdeeaa:	40d8      	lsrs	r0, r3
2ffdeeac:	e7de      	b.n	2ffdee6c <get_clock_rate+0x38>
2ffdeeae:	6a43      	ldr	r3, [r0, #36]	; 0x24
2ffdeeb0:	f003 0307 	and.w	r3, r3, #7
2ffdeeb4:	2b01      	cmp	r3, #1
2ffdeeb6:	d011      	beq.n	2ffdeedc <get_clock_rate+0xa8>
2ffdeeb8:	2b02      	cmp	r3, #2
2ffdeeba:	d012      	beq.n	2ffdeee2 <get_clock_rate+0xae>
2ffdeebc:	b9b3      	cbnz	r3, 2ffdeeec <get_clock_rate+0xb8>
2ffdeebe:	4b3f      	ldr	r3, [pc, #252]	; (2ffdefbc <get_clock_rate+0x188>)
2ffdeec0:	6818      	ldr	r0, [r3, #0]
2ffdeec2:	6b23      	ldr	r3, [r4, #48]	; 0x30
2ffdeec4:	2d1a      	cmp	r5, #26
2ffdeec6:	4a3f      	ldr	r2, [pc, #252]	; (2ffdefc4 <get_clock_rate+0x190>)
2ffdeec8:	f003 0307 	and.w	r3, r3, #7
2ffdeecc:	5cd3      	ldrb	r3, [r2, r3]
2ffdeece:	fbb0 f0f3 	udiv	r0, r0, r3
2ffdeed2:	d00d      	beq.n	2ffdeef0 <get_clock_rate+0xbc>
2ffdeed4:	2d1b      	cmp	r5, #27
2ffdeed6:	d1c9      	bne.n	2ffdee6c <get_clock_rate+0x38>
2ffdeed8:	6c23      	ldr	r3, [r4, #64]	; 0x40
2ffdeeda:	e7e2      	b.n	2ffdeea2 <get_clock_rate+0x6e>
2ffdeedc:	4b37      	ldr	r3, [pc, #220]	; (2ffdefbc <get_clock_rate+0x188>)
2ffdeede:	6858      	ldr	r0, [r3, #4]
2ffdeee0:	e7ef      	b.n	2ffdeec2 <get_clock_rate+0x8e>
2ffdeee2:	2100      	movs	r1, #0
2ffdeee4:	2001      	movs	r0, #1
2ffdeee6:	f7ff ff49 	bl	2ffded7c <stm32mp1_read_pll_freq>
2ffdeeea:	e7ea      	b.n	2ffdeec2 <get_clock_rate+0x8e>
2ffdeeec:	2000      	movs	r0, #0
2ffdeeee:	e7e8      	b.n	2ffdeec2 <get_clock_rate+0x8e>
2ffdeef0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2ffdeef2:	e7d6      	b.n	2ffdeea2 <get_clock_rate+0x6e>
2ffdeef4:	6c83      	ldr	r3, [r0, #72]	; 0x48
2ffdeef6:	f003 0307 	and.w	r3, r3, #7
2ffdeefa:	2b03      	cmp	r3, #3
2ffdeefc:	d821      	bhi.n	2ffdef42 <get_clock_rate+0x10e>
2ffdeefe:	e8df f003 	tbb	[pc, r3]
2ffdef02:	1502      	.short	0x1502
2ffdef04:	1b18      	.short	0x1b18
2ffdef06:	4b2d      	ldr	r3, [pc, #180]	; (2ffdefbc <get_clock_rate+0x188>)
2ffdef08:	6818      	ldr	r0, [r3, #0]
2ffdef0a:	f8d4 3830 	ldr.w	r3, [r4, #2096]	; 0x830
2ffdef0e:	2d18      	cmp	r5, #24
2ffdef10:	4a2d      	ldr	r2, [pc, #180]	; (2ffdefc8 <get_clock_rate+0x194>)
2ffdef12:	f003 030f 	and.w	r3, r3, #15
2ffdef16:	5cd3      	ldrb	r3, [r2, r3]
2ffdef18:	fa20 f003 	lsr.w	r0, r0, r3
2ffdef1c:	d013      	beq.n	2ffdef46 <get_clock_rate+0x112>
2ffdef1e:	2d19      	cmp	r5, #25
2ffdef20:	d014      	beq.n	2ffdef4c <get_clock_rate+0x118>
2ffdef22:	2d17      	cmp	r5, #23
2ffdef24:	d1a2      	bne.n	2ffdee6c <get_clock_rate+0x38>
2ffdef26:	f8d4 3834 	ldr.w	r3, [r4, #2100]	; 0x834
2ffdef2a:	e7ba      	b.n	2ffdeea2 <get_clock_rate+0x6e>
2ffdef2c:	4b23      	ldr	r3, [pc, #140]	; (2ffdefbc <get_clock_rate+0x188>)
2ffdef2e:	6858      	ldr	r0, [r3, #4]
2ffdef30:	e7eb      	b.n	2ffdef0a <get_clock_rate+0xd6>
2ffdef32:	4b22      	ldr	r3, [pc, #136]	; (2ffdefbc <get_clock_rate+0x188>)
2ffdef34:	6898      	ldr	r0, [r3, #8]
2ffdef36:	e7e8      	b.n	2ffdef0a <get_clock_rate+0xd6>
2ffdef38:	2100      	movs	r1, #0
2ffdef3a:	2002      	movs	r0, #2
2ffdef3c:	f7ff ff1e 	bl	2ffded7c <stm32mp1_read_pll_freq>
2ffdef40:	e7e3      	b.n	2ffdef0a <get_clock_rate+0xd6>
2ffdef42:	2000      	movs	r0, #0
2ffdef44:	e7e1      	b.n	2ffdef0a <get_clock_rate+0xd6>
2ffdef46:	f8d4 3838 	ldr.w	r3, [r4, #2104]	; 0x838
2ffdef4a:	e7aa      	b.n	2ffdeea2 <get_clock_rate+0x6e>
2ffdef4c:	f8d4 383c 	ldr.w	r3, [r4, #2108]	; 0x83c
2ffdef50:	e7a7      	b.n	2ffdeea2 <get_clock_rate+0x6e>
2ffdef52:	f8d0 30d0 	ldr.w	r3, [r0, #208]	; 0xd0
2ffdef56:	f003 0307 	and.w	r3, r3, #7
2ffdef5a:	2b01      	cmp	r3, #1
2ffdef5c:	d005      	beq.n	2ffdef6a <get_clock_rate+0x136>
2ffdef5e:	2b02      	cmp	r3, #2
2ffdef60:	d091      	beq.n	2ffdee86 <get_clock_rate+0x52>
2ffdef62:	2b00      	cmp	r3, #0
2ffdef64:	d08c      	beq.n	2ffdee80 <get_clock_rate+0x4c>
2ffdef66:	2000      	movs	r0, #0
2ffdef68:	e780      	b.n	2ffdee6c <get_clock_rate+0x38>
2ffdef6a:	4b14      	ldr	r3, [pc, #80]	; (2ffdefbc <get_clock_rate+0x188>)
2ffdef6c:	6898      	ldr	r0, [r3, #8]
2ffdef6e:	e77d      	b.n	2ffdee6c <get_clock_rate+0x38>
2ffdef70:	4b12      	ldr	r3, [pc, #72]	; (2ffdefbc <get_clock_rate+0x188>)
2ffdef72:	6858      	ldr	r0, [r3, #4]
2ffdef74:	0840      	lsrs	r0, r0, #1
2ffdef76:	e779      	b.n	2ffdee6c <get_clock_rate+0x38>
2ffdef78:	4b10      	ldr	r3, [pc, #64]	; (2ffdefbc <get_clock_rate+0x188>)
2ffdef7a:	68d8      	ldr	r0, [r3, #12]
2ffdef7c:	e776      	b.n	2ffdee6c <get_clock_rate+0x38>
2ffdef7e:	4b0f      	ldr	r3, [pc, #60]	; (2ffdefbc <get_clock_rate+0x188>)
2ffdef80:	6918      	ldr	r0, [r3, #16]
2ffdef82:	e773      	b.n	2ffdee6c <get_clock_rate+0x38>
2ffdef84:	2101      	movs	r1, #1
2ffdef86:	e782      	b.n	2ffdee8e <get_clock_rate+0x5a>
2ffdef88:	2102      	movs	r1, #2
2ffdef8a:	e780      	b.n	2ffdee8e <get_clock_rate+0x5a>
2ffdef8c:	2100      	movs	r1, #0
2ffdef8e:	2001      	movs	r0, #1
2ffdef90:	e77e      	b.n	2ffdee90 <get_clock_rate+0x5c>
2ffdef92:	2101      	movs	r1, #1
2ffdef94:	4608      	mov	r0, r1
2ffdef96:	e77b      	b.n	2ffdee90 <get_clock_rate+0x5c>
2ffdef98:	2102      	movs	r1, #2
2ffdef9a:	e7f8      	b.n	2ffdef8e <get_clock_rate+0x15a>
2ffdef9c:	2100      	movs	r1, #0
2ffdef9e:	2002      	movs	r0, #2
2ffdefa0:	e776      	b.n	2ffdee90 <get_clock_rate+0x5c>
2ffdefa2:	2101      	movs	r1, #1
2ffdefa4:	e7fb      	b.n	2ffdef9e <get_clock_rate+0x16a>
2ffdefa6:	2102      	movs	r1, #2
2ffdefa8:	e7f4      	b.n	2ffdef94 <get_clock_rate+0x160>
2ffdefaa:	2100      	movs	r1, #0
2ffdefac:	2003      	movs	r0, #3
2ffdefae:	e76f      	b.n	2ffdee90 <get_clock_rate+0x5c>
2ffdefb0:	2101      	movs	r1, #1
2ffdefb2:	e7fb      	b.n	2ffdefac <get_clock_rate+0x178>
2ffdefb4:	2102      	movs	r1, #2
2ffdefb6:	e7f9      	b.n	2ffdefac <get_clock_rate+0x178>
2ffdefb8:	02dc6c00 	.word	0x02dc6c00
2ffdefbc:	2ffe9078 	.word	0x2ffe9078
2ffdefc0:	2ffe6274 	.word	0x2ffe6274
2ffdefc4:	2ffe5f1c 	.word	0x2ffe5f1c
2ffdefc8:	2ffe6264 	.word	0x2ffe6264

2ffdefcc <stm32mp1_pll_compute_pllxcfgr1>:
2ffdefcc:	b570      	push	{r4, r5, r6, lr}
2ffdefce:	4605      	mov	r5, r0
2ffdefd0:	460c      	mov	r4, r1
2ffdefd2:	4616      	mov	r6, r2
2ffdefd4:	f7fd ff70 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdefd8:	88ab      	ldrh	r3, [r5, #4]
2ffdefda:	6829      	ldr	r1, [r5, #0]
2ffdefdc:	581b      	ldr	r3, [r3, r0]
2ffdefde:	481a      	ldr	r0, [pc, #104]	; (2ffdf048 <stm32mp1_pll_compute_pllxcfgr1+0x7c>)
2ffdefe0:	f003 0303 	and.w	r3, r3, #3
2ffdefe4:	3304      	adds	r3, #4
2ffdefe6:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
2ffdefea:	2b05      	cmp	r3, #5
2ffdefec:	bf8e      	itee	hi
2ffdefee:	2300      	movhi	r3, #0
2ffdeff0:	4a16      	ldrls	r2, [pc, #88]	; (2ffdf04c <stm32mp1_pll_compute_pllxcfgr1+0x80>)
2ffdeff2:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
2ffdeff6:	6822      	ldr	r2, [r4, #0]
2ffdeff8:	3201      	adds	r2, #1
2ffdeffa:	fbb3 f3f2 	udiv	r3, r3, r2
2ffdeffe:	eb01 0241 	add.w	r2, r1, r1, lsl #1
2ffdf002:	1885      	adds	r5, r0, r2
2ffdf004:	5c80      	ldrb	r0, [r0, r2]
2ffdf006:	4a12      	ldr	r2, [pc, #72]	; (2ffdf050 <stm32mp1_pll_compute_pllxcfgr1+0x84>)
2ffdf008:	4350      	muls	r0, r2
2ffdf00a:	4298      	cmp	r0, r3
2ffdf00c:	d819      	bhi.n	2ffdf042 <stm32mp1_pll_compute_pllxcfgr1+0x76>
2ffdf00e:	7868      	ldrb	r0, [r5, #1]
2ffdf010:	4342      	muls	r2, r0
2ffdf012:	429a      	cmp	r2, r3
2ffdf014:	d315      	bcc.n	2ffdf042 <stm32mp1_pll_compute_pllxcfgr1+0x76>
2ffdf016:	b991      	cbnz	r1, 2ffdf03e <stm32mp1_pll_compute_pllxcfgr1+0x72>
2ffdf018:	480e      	ldr	r0, [pc, #56]	; (2ffdf054 <stm32mp1_pll_compute_pllxcfgr1+0x88>)
2ffdf01a:	4283      	cmp	r3, r0
2ffdf01c:	bf34      	ite	cc
2ffdf01e:	2000      	movcc	r0, #0
2ffdf020:	2001      	movcs	r0, #1
2ffdf022:	6863      	ldr	r3, [r4, #4]
2ffdf024:	f3c3 0208 	ubfx	r2, r3, #0, #9
2ffdf028:	6032      	str	r2, [r6, #0]
2ffdf02a:	6823      	ldr	r3, [r4, #0]
2ffdf02c:	041b      	lsls	r3, r3, #16
2ffdf02e:	f403 137c 	and.w	r3, r3, #4128768	; 0x3f0000
2ffdf032:	4313      	orrs	r3, r2
2ffdf034:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
2ffdf038:	2000      	movs	r0, #0
2ffdf03a:	6033      	str	r3, [r6, #0]
2ffdf03c:	bd70      	pop	{r4, r5, r6, pc}
2ffdf03e:	2000      	movs	r0, #0
2ffdf040:	e7ef      	b.n	2ffdf022 <stm32mp1_pll_compute_pllxcfgr1+0x56>
2ffdf042:	f06f 0015 	mvn.w	r0, #21
2ffdf046:	e7f9      	b.n	2ffdf03c <stm32mp1_pll_compute_pllxcfgr1+0x70>
2ffdf048:	2ffe627c 	.word	0x2ffe627c
2ffdf04c:	2ffe9078 	.word	0x2ffe9078
2ffdf050:	000f4240 	.word	0x000f4240
2ffdf054:	007a1200 	.word	0x007a1200

2ffdf058 <stm32mp1_pll_start>:
2ffdf058:	b510      	push	{r4, lr}
2ffdf05a:	4604      	mov	r4, r0
2ffdf05c:	f7fd ff2c 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdf060:	4b05      	ldr	r3, [pc, #20]	; (2ffdf078 <stm32mp1_pll_start+0x20>)
2ffdf062:	eb03 1344 	add.w	r3, r3, r4, lsl #5
2ffdf066:	899a      	ldrh	r2, [r3, #12]
2ffdf068:	5813      	ldr	r3, [r2, r0]
2ffdf06a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
2ffdf06e:	f043 0301 	orr.w	r3, r3, #1
2ffdf072:	5013      	str	r3, [r2, r0]
2ffdf074:	bd10      	pop	{r4, pc}
2ffdf076:	bf00      	nop
2ffdf078:	2ffe60dc 	.word	0x2ffe60dc

2ffdf07c <stm32mp1_mco_csg>:
2ffdf07c:	b538      	push	{r3, r4, r5, lr}
2ffdf07e:	4604      	mov	r4, r0
2ffdf080:	460d      	mov	r5, r1
2ffdf082:	f7fd ff19 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdf086:	0923      	lsrs	r3, r4, #4
2ffdf088:	0721      	lsls	r1, r4, #28
2ffdf08a:	581a      	ldr	r2, [r3, r0]
2ffdf08c:	d503      	bpl.n	2ffdf096 <stm32mp1_mco_csg+0x1a>
2ffdf08e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
2ffdf092:	501a      	str	r2, [r3, r0]
2ffdf094:	bd38      	pop	{r3, r4, r5, pc}
2ffdf096:	f022 0207 	bic.w	r2, r2, #7
2ffdf09a:	f004 0407 	and.w	r4, r4, #7
2ffdf09e:	4314      	orrs	r4, r2
2ffdf0a0:	501c      	str	r4, [r3, r0]
2ffdf0a2:	581a      	ldr	r2, [r3, r0]
2ffdf0a4:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
2ffdf0a8:	ea42 1205 	orr.w	r2, r2, r5, lsl #4
2ffdf0ac:	501a      	str	r2, [r3, r0]
2ffdf0ae:	581a      	ldr	r2, [r3, r0]
2ffdf0b0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
2ffdf0b4:	e7ed      	b.n	2ffdf092 <stm32mp1_mco_csg+0x16>

2ffdf0b6 <stm32mp1_clk_lock>:
2ffdf0b6:	b510      	push	{r4, lr}
2ffdf0b8:	4604      	mov	r4, r0
2ffdf0ba:	f7fd ff00 	bl	2ffdcebe <stm32mp_lock_available>
2ffdf0be:	b120      	cbz	r0, 2ffdf0ca <stm32mp1_clk_lock+0x14>
2ffdf0c0:	4620      	mov	r0, r4
2ffdf0c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffdf0c6:	f007 bf6f 	b.w	2ffe6fa8 <__spin_lock_from_thumb>
2ffdf0ca:	bd10      	pop	{r4, pc}

2ffdf0cc <stm32mp1_clk_unlock>:
2ffdf0cc:	b510      	push	{r4, lr}
2ffdf0ce:	4604      	mov	r4, r0
2ffdf0d0:	f7fd fef5 	bl	2ffdcebe <stm32mp_lock_available>
2ffdf0d4:	b120      	cbz	r0, 2ffdf0e0 <stm32mp1_clk_unlock+0x14>
2ffdf0d6:	4620      	mov	r0, r4
2ffdf0d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffdf0dc:	f007 bf6c 	b.w	2ffe6fb8 <__spin_unlock_from_thumb>
2ffdf0e0:	bd10      	pop	{r4, pc}
	...

2ffdf0e4 <stm32mp1_pll_stop>:
2ffdf0e4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffdf0e8:	4682      	mov	sl, r0
2ffdf0ea:	f7fd fee5 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdf0ee:	4b19      	ldr	r3, [pc, #100]	; (2ffdf154 <stm32mp1_pll_stop+0x70>)
2ffdf0f0:	4604      	mov	r4, r0
2ffdf0f2:	eb03 134a 	add.w	r3, r3, sl, lsl #5
2ffdf0f6:	899d      	ldrh	r5, [r3, #12]
2ffdf0f8:	582b      	ldr	r3, [r5, r0]
2ffdf0fa:	eb05 0b00 	add.w	fp, r5, r0
2ffdf0fe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
2ffdf102:	502b      	str	r3, [r5, r0]
2ffdf104:	582b      	ldr	r3, [r5, r0]
2ffdf106:	f023 0301 	bic.w	r3, r3, #1
2ffdf10a:	502b      	str	r3, [r5, r0]
2ffdf10c:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdf110:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffdf114:	4910      	ldr	r1, [pc, #64]	; (2ffdf158 <stm32mp1_pll_stop+0x74>)
2ffdf116:	2300      	movs	r3, #0
2ffdf118:	4a10      	ldr	r2, [pc, #64]	; (2ffdf15c <stm32mp1_pll_stop+0x78>)
2ffdf11a:	fba0 0101 	umull	r0, r1, r0, r1
2ffdf11e:	f003 eaa0 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdf122:	eb10 0806 	adds.w	r8, r0, r6
2ffdf126:	eb41 0907 	adc.w	r9, r1, r7
2ffdf12a:	f8db 0000 	ldr.w	r0, [fp]
2ffdf12e:	f010 0002 	ands.w	r0, r0, #2
2ffdf132:	d00d      	beq.n	2ffdf150 <stm32mp1_pll_stop+0x6c>
2ffdf134:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffdf138:	4599      	cmp	r9, r3
2ffdf13a:	bf08      	it	eq
2ffdf13c:	4590      	cmpeq	r8, r2
2ffdf13e:	d2f4      	bcs.n	2ffdf12a <stm32mp1_pll_stop+0x46>
2ffdf140:	4807      	ldr	r0, [pc, #28]	; (2ffdf160 <stm32mp1_pll_stop+0x7c>)
2ffdf142:	465a      	mov	r2, fp
2ffdf144:	592b      	ldr	r3, [r5, r4]
2ffdf146:	4651      	mov	r1, sl
2ffdf148:	f7fd fcd0 	bl	2ffdcaec <tf_log>
2ffdf14c:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2ffdf150:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffdf154:	2ffe60dc 	.word	0x2ffe60dc
2ffdf158:	00030d40 	.word	0x00030d40
2ffdf15c:	000f4240 	.word	0x000f4240
2ffdf160:	2ffe5cb2 	.word	0x2ffe5cb2

2ffdf164 <__clk_enable>:
2ffdf164:	b538      	push	{r3, r4, r5, lr}
2ffdf166:	4604      	mov	r4, r0
2ffdf168:	f7fd fea6 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdf16c:	78a2      	ldrb	r2, [r4, #2]
2ffdf16e:	2101      	movs	r1, #1
2ffdf170:	7925      	ldrb	r5, [r4, #4]
2ffdf172:	8823      	ldrh	r3, [r4, #0]
2ffdf174:	4091      	lsls	r1, r2
2ffdf176:	b10d      	cbz	r5, 2ffdf17c <__clk_enable+0x18>
2ffdf178:	5019      	str	r1, [r3, r0]
2ffdf17a:	bd38      	pop	{r3, r4, r5, pc}
2ffdf17c:	4418      	add	r0, r3
2ffdf17e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffdf182:	f003 b910 	b.w	2ffe23a6 <stm32mp_mmio_setbits_32_shregs>

2ffdf186 <__clk_disable>:
2ffdf186:	b538      	push	{r3, r4, r5, lr}
2ffdf188:	4604      	mov	r4, r0
2ffdf18a:	f7fd fe95 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdf18e:	78a2      	ldrb	r2, [r4, #2]
2ffdf190:	2101      	movs	r1, #1
2ffdf192:	7925      	ldrb	r5, [r4, #4]
2ffdf194:	8823      	ldrh	r3, [r4, #0]
2ffdf196:	4091      	lsls	r1, r2
2ffdf198:	b115      	cbz	r5, 2ffdf1a0 <__clk_disable+0x1a>
2ffdf19a:	3304      	adds	r3, #4
2ffdf19c:	5019      	str	r1, [r3, r0]
2ffdf19e:	bd38      	pop	{r3, r4, r5, pc}
2ffdf1a0:	4418      	add	r0, r3
2ffdf1a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffdf1a6:	f003 b8f1 	b.w	2ffe238c <stm32mp_mmio_clrbits_32_shregs>
	...

2ffdf1ac <stm32mp1_check_pll_conf>:
2ffdf1ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffdf1b0:	4680      	mov	r8, r0
2ffdf1b2:	4c3d      	ldr	r4, [pc, #244]	; (2ffdf2a8 <stm32mp1_check_pll_conf+0xfc>)
2ffdf1b4:	4615      	mov	r5, r2
2ffdf1b6:	461f      	mov	r7, r3
2ffdf1b8:	4689      	mov	r9, r1
2ffdf1ba:	f7fd fe7d 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdf1be:	ea4f 1248 	mov.w	r2, r8, lsl #5
2ffdf1c2:	4606      	mov	r6, r0
2ffdf1c4:	eb04 1048 	add.w	r0, r4, r8, lsl #5
2ffdf1c8:	8983      	ldrh	r3, [r0, #12]
2ffdf1ca:	599b      	ldr	r3, [r3, r6]
2ffdf1cc:	2b01      	cmp	r3, #1
2ffdf1ce:	d002      	beq.n	2ffdf1d6 <stm32mp1_check_pll_conf+0x2a>
2ffdf1d0:	2000      	movs	r0, #0
2ffdf1d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffdf1d6:	ea4f 1319 	mov.w	r3, r9, lsr #4
2ffdf1da:	f009 0107 	and.w	r1, r9, #7
2ffdf1de:	599b      	ldr	r3, [r3, r6]
2ffdf1e0:	f003 0307 	and.w	r3, r3, #7
2ffdf1e4:	4299      	cmp	r1, r3
2ffdf1e6:	d1f3      	bne.n	2ffdf1d0 <stm32mp1_check_pll_conf+0x24>
2ffdf1e8:	8883      	ldrh	r3, [r0, #4]
2ffdf1ea:	f854 c002 	ldr.w	ip, [r4, r2]
2ffdf1ee:	599b      	ldr	r3, [r3, r6]
2ffdf1f0:	f8df e0c8 	ldr.w	lr, [pc, #200]	; 2ffdf2bc <stm32mp1_check_pll_conf+0x110>
2ffdf1f4:	f003 0303 	and.w	r3, r3, #3
2ffdf1f8:	eb03 00c8 	add.w	r0, r3, r8, lsl #3
2ffdf1fc:	3004      	adds	r0, #4
2ffdf1fe:	f854 3020 	ldr.w	r3, [r4, r0, lsl #2]
2ffdf202:	2b05      	cmp	r3, #5
2ffdf204:	bf8e      	itee	hi
2ffdf206:	2300      	movhi	r3, #0
2ffdf208:	4928      	ldrls	r1, [pc, #160]	; (2ffdf2ac <stm32mp1_check_pll_conf+0x100>)
2ffdf20a:	f851 3023 	ldrls.w	r3, [r1, r3, lsl #2]
2ffdf20e:	6829      	ldr	r1, [r5, #0]
2ffdf210:	1c48      	adds	r0, r1, #1
2ffdf212:	fbb3 f3f0 	udiv	r3, r3, r0
2ffdf216:	eb0c 004c 	add.w	r0, ip, ip, lsl #1
2ffdf21a:	eb0e 0800 	add.w	r8, lr, r0
2ffdf21e:	f81e e000 	ldrb.w	lr, [lr, r0]
2ffdf222:	4823      	ldr	r0, [pc, #140]	; (2ffdf2b0 <stm32mp1_check_pll_conf+0x104>)
2ffdf224:	fb00 fe0e 	mul.w	lr, r0, lr
2ffdf228:	459e      	cmp	lr, r3
2ffdf22a:	d8d1      	bhi.n	2ffdf1d0 <stm32mp1_check_pll_conf+0x24>
2ffdf22c:	f898 e001 	ldrb.w	lr, [r8, #1]
2ffdf230:	fb00 f00e 	mul.w	r0, r0, lr
2ffdf234:	4298      	cmp	r0, r3
2ffdf236:	d3cb      	bcc.n	2ffdf1d0 <stm32mp1_check_pll_conf+0x24>
2ffdf238:	f1bc 0f00 	cmp.w	ip, #0
2ffdf23c:	d131      	bne.n	2ffdf2a2 <stm32mp1_check_pll_conf+0xf6>
2ffdf23e:	481d      	ldr	r0, [pc, #116]	; (2ffdf2b4 <stm32mp1_check_pll_conf+0x108>)
2ffdf240:	4283      	cmp	r3, r0
2ffdf242:	bf34      	ite	cc
2ffdf244:	2300      	movcc	r3, #0
2ffdf246:	2301      	movcs	r3, #1
2ffdf248:	4414      	add	r4, r2
2ffdf24a:	6868      	ldr	r0, [r5, #4]
2ffdf24c:	0409      	lsls	r1, r1, #16
2ffdf24e:	88e2      	ldrh	r2, [r4, #6]
2ffdf250:	f401 117c 	and.w	r1, r1, #4128768	; 0x3f0000
2ffdf254:	f3c0 0008 	ubfx	r0, r0, #0, #9
2ffdf258:	4301      	orrs	r1, r0
2ffdf25a:	5992      	ldr	r2, [r2, r6]
2ffdf25c:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
2ffdf260:	4291      	cmp	r1, r2
2ffdf262:	d1b5      	bne.n	2ffdf1d0 <stm32mp1_check_pll_conf+0x24>
2ffdf264:	4914      	ldr	r1, [pc, #80]	; (2ffdf2b8 <stm32mp1_check_pll_conf+0x10c>)
2ffdf266:	2200      	movs	r2, #0
2ffdf268:	4638      	mov	r0, r7
2ffdf26a:	f002 fe75 	bl	2ffe1f58 <fdt_read_uint32_default>
2ffdf26e:	8963      	ldrh	r3, [r4, #10]
2ffdf270:	00c0      	lsls	r0, r0, #3
2ffdf272:	599b      	ldr	r3, [r3, r6]
2ffdf274:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
2ffdf278:	4298      	cmp	r0, r3
2ffdf27a:	d1a9      	bne.n	2ffdf1d0 <stm32mp1_check_pll_conf+0x24>
2ffdf27c:	8923      	ldrh	r3, [r4, #8]
2ffdf27e:	68a8      	ldr	r0, [r5, #8]
2ffdf280:	5999      	ldr	r1, [r3, r6]
2ffdf282:	68eb      	ldr	r3, [r5, #12]
2ffdf284:	f000 027f 	and.w	r2, r0, #127	; 0x7f
2ffdf288:	0218      	lsls	r0, r3, #8
2ffdf28a:	692b      	ldr	r3, [r5, #16]
2ffdf28c:	f400 40fe 	and.w	r0, r0, #32512	; 0x7f00
2ffdf290:	041b      	lsls	r3, r3, #16
2ffdf292:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
2ffdf296:	4318      	orrs	r0, r3
2ffdf298:	4310      	orrs	r0, r2
2ffdf29a:	1a43      	subs	r3, r0, r1
2ffdf29c:	4258      	negs	r0, r3
2ffdf29e:	4158      	adcs	r0, r3
2ffdf2a0:	e797      	b.n	2ffdf1d2 <stm32mp1_check_pll_conf+0x26>
2ffdf2a2:	2300      	movs	r3, #0
2ffdf2a4:	e7d0      	b.n	2ffdf248 <stm32mp1_check_pll_conf+0x9c>
2ffdf2a6:	bf00      	nop
2ffdf2a8:	2ffe60dc 	.word	0x2ffe60dc
2ffdf2ac:	2ffe9078 	.word	0x2ffe9078
2ffdf2b0:	000f4240 	.word	0x000f4240
2ffdf2b4:	007a1200 	.word	0x007a1200
2ffdf2b8:	2ffe5cd4 	.word	0x2ffe5cd4
2ffdf2bc:	2ffe627c 	.word	0x2ffe627c

2ffdf2c0 <stm32mp1_clk_get_gated_id>:
2ffdf2c0:	4602      	mov	r2, r0
2ffdf2c2:	2000      	movs	r0, #0
2ffdf2c4:	b508      	push	{r3, lr}
2ffdf2c6:	4b08      	ldr	r3, [pc, #32]	; (2ffdf2e8 <stm32mp1_clk_get_gated_id+0x28>)
2ffdf2c8:	eb03 01c0 	add.w	r1, r3, r0, lsl #3
2ffdf2cc:	78c9      	ldrb	r1, [r1, #3]
2ffdf2ce:	4291      	cmp	r1, r2
2ffdf2d0:	d008      	beq.n	2ffdf2e4 <stm32mp1_clk_get_gated_id+0x24>
2ffdf2d2:	3001      	adds	r0, #1
2ffdf2d4:	2837      	cmp	r0, #55	; 0x37
2ffdf2d6:	d1f7      	bne.n	2ffdf2c8 <stm32mp1_clk_get_gated_id+0x8>
2ffdf2d8:	4804      	ldr	r0, [pc, #16]	; (2ffdf2ec <stm32mp1_clk_get_gated_id+0x2c>)
2ffdf2da:	4905      	ldr	r1, [pc, #20]	; (2ffdf2f0 <stm32mp1_clk_get_gated_id+0x30>)
2ffdf2dc:	f7fd fc06 	bl	2ffdcaec <tf_log>
2ffdf2e0:	f06f 0015 	mvn.w	r0, #21
2ffdf2e4:	bd08      	pop	{r3, pc}
2ffdf2e6:	bf00      	nop
2ffdf2e8:	2ffe5f24 	.word	0x2ffe5f24
2ffdf2ec:	2ffe5cd9 	.word	0x2ffe5cd9
2ffdf2f0:	2ffe5ea3 	.word	0x2ffe5ea3

2ffdf2f4 <stm32mp1_clk_get_parent>:
2ffdf2f4:	b538      	push	{r3, r4, r5, lr}
2ffdf2f6:	4604      	mov	r4, r0
2ffdf2f8:	f7fd fdde 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdf2fc:	4b18      	ldr	r3, [pc, #96]	; (2ffdf360 <stm32mp1_clk_get_parent+0x6c>)
2ffdf2fe:	4605      	mov	r5, r0
2ffdf300:	2000      	movs	r0, #0
2ffdf302:	f813 2b01 	ldrb.w	r2, [r3], #1
2ffdf306:	4294      	cmp	r4, r2
2ffdf308:	d026      	beq.n	2ffdf358 <stm32mp1_clk_get_parent+0x64>
2ffdf30a:	3001      	adds	r0, #1
2ffdf30c:	2822      	cmp	r0, #34	; 0x22
2ffdf30e:	d1f8      	bne.n	2ffdf302 <stm32mp1_clk_get_parent+0xe>
2ffdf310:	4620      	mov	r0, r4
2ffdf312:	f7ff ffd5 	bl	2ffdf2c0 <stm32mp1_clk_get_gated_id>
2ffdf316:	1e03      	subs	r3, r0, #0
2ffdf318:	da03      	bge.n	2ffdf322 <stm32mp1_clk_get_parent+0x2e>
2ffdf31a:	f7fd fc85 	bl	2ffdcc28 <console_flush>
2ffdf31e:	f7f6 efa0 	blx	2ffd6260 <do_panic>
2ffdf322:	4a10      	ldr	r2, [pc, #64]	; (2ffdf364 <stm32mp1_clk_get_parent+0x70>)
2ffdf324:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
2ffdf328:	79d8      	ldrb	r0, [r3, #7]
2ffdf32a:	2821      	cmp	r0, #33	; 0x21
2ffdf32c:	d914      	bls.n	2ffdf358 <stm32mp1_clk_get_parent+0x64>
2ffdf32e:	799a      	ldrb	r2, [r3, #6]
2ffdf330:	2aff      	cmp	r2, #255	; 0xff
2ffdf332:	d012      	beq.n	2ffdf35a <stm32mp1_clk_get_parent+0x66>
2ffdf334:	2a15      	cmp	r2, #21
2ffdf336:	d8f0      	bhi.n	2ffdf31a <stm32mp1_clk_get_parent+0x26>
2ffdf338:	490b      	ldr	r1, [pc, #44]	; (2ffdf368 <stm32mp1_clk_get_parent+0x74>)
2ffdf33a:	230c      	movs	r3, #12
2ffdf33c:	4353      	muls	r3, r2
2ffdf33e:	18ca      	adds	r2, r1, r3
2ffdf340:	5acb      	ldrh	r3, [r1, r3]
2ffdf342:	7891      	ldrb	r1, [r2, #2]
2ffdf344:	5958      	ldr	r0, [r3, r5]
2ffdf346:	78d3      	ldrb	r3, [r2, #3]
2ffdf348:	408b      	lsls	r3, r1
2ffdf34a:	4003      	ands	r3, r0
2ffdf34c:	40cb      	lsrs	r3, r1
2ffdf34e:	7911      	ldrb	r1, [r2, #4]
2ffdf350:	4299      	cmp	r1, r3
2ffdf352:	d902      	bls.n	2ffdf35a <stm32mp1_clk_get_parent+0x66>
2ffdf354:	6892      	ldr	r2, [r2, #8]
2ffdf356:	5cd0      	ldrb	r0, [r2, r3]
2ffdf358:	bd38      	pop	{r3, r4, r5, pc}
2ffdf35a:	f06f 0015 	mvn.w	r0, #21
2ffdf35e:	e7fb      	b.n	2ffdf358 <stm32mp1_clk_get_parent+0x64>
2ffdf360:	2ffe5ed8 	.word	0x2ffe5ed8
2ffdf364:	2ffe5f24 	.word	0x2ffe5f24
2ffdf368:	2ffe615c 	.word	0x2ffe615c

2ffdf36c <__stm32mp1_clk_enable>:
2ffdf36c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffdf36e:	4605      	mov	r5, r0
2ffdf370:	460f      	mov	r7, r1
2ffdf372:	f7ff fcf5 	bl	2ffded60 <clock_is_always_on>
2ffdf376:	bb58      	cbnz	r0, 2ffdf3d0 <__stm32mp1_clk_enable+0x64>
2ffdf378:	4628      	mov	r0, r5
2ffdf37a:	f7ff ffa1 	bl	2ffdf2c0 <stm32mp1_clk_get_gated_id>
2ffdf37e:	1e04      	subs	r4, r0, #0
2ffdf380:	da07      	bge.n	2ffdf392 <__stm32mp1_clk_enable+0x26>
2ffdf382:	4814      	ldr	r0, [pc, #80]	; (2ffdf3d4 <__stm32mp1_clk_enable+0x68>)
2ffdf384:	4629      	mov	r1, r5
2ffdf386:	f7fd fbb1 	bl	2ffdcaec <tf_log>
2ffdf38a:	f7fd fc4d 	bl	2ffdcc28 <console_flush>
2ffdf38e:	f7f6 ef68 	blx	2ffd6260 <do_panic>
2ffdf392:	4e11      	ldr	r6, [pc, #68]	; (2ffdf3d8 <__stm32mp1_clk_enable+0x6c>)
2ffdf394:	eb06 06c4 	add.w	r6, r6, r4, lsl #3
2ffdf398:	b927      	cbnz	r7, 2ffdf3a4 <__stm32mp1_clk_enable+0x38>
2ffdf39a:	4630      	mov	r0, r6
2ffdf39c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2ffdf3a0:	f7ff bee0 	b.w	2ffdf164 <__clk_enable>
2ffdf3a4:	4d0d      	ldr	r5, [pc, #52]	; (2ffdf3dc <__stm32mp1_clk_enable+0x70>)
2ffdf3a6:	480e      	ldr	r0, [pc, #56]	; (2ffdf3e0 <__stm32mp1_clk_enable+0x74>)
2ffdf3a8:	f7ff fe85 	bl	2ffdf0b6 <stm32mp1_clk_lock>
2ffdf3ac:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
2ffdf3b0:	b913      	cbnz	r3, 2ffdf3b8 <__stm32mp1_clk_enable+0x4c>
2ffdf3b2:	4630      	mov	r0, r6
2ffdf3b4:	f7ff fed6 	bl	2ffdf164 <__clk_enable>
2ffdf3b8:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
2ffdf3bc:	3301      	adds	r3, #1
2ffdf3be:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
2ffdf3c2:	3301      	adds	r3, #1
2ffdf3c4:	d0e1      	beq.n	2ffdf38a <__stm32mp1_clk_enable+0x1e>
2ffdf3c6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2ffdf3ca:	4805      	ldr	r0, [pc, #20]	; (2ffdf3e0 <__stm32mp1_clk_enable+0x74>)
2ffdf3cc:	f7ff be7e 	b.w	2ffdf0cc <stm32mp1_clk_unlock>
2ffdf3d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffdf3d2:	bf00      	nop
2ffdf3d4:	2ffe5cf3 	.word	0x2ffe5cf3
2ffdf3d8:	2ffe5f24 	.word	0x2ffe5f24
2ffdf3dc:	2ffe8f48 	.word	0x2ffe8f48
2ffdf3e0:	2ffe9070 	.word	0x2ffe9070

2ffdf3e4 <__stm32mp1_clk_disable>:
2ffdf3e4:	b570      	push	{r4, r5, r6, lr}
2ffdf3e6:	4605      	mov	r5, r0
2ffdf3e8:	460e      	mov	r6, r1
2ffdf3ea:	f7ff fcb9 	bl	2ffded60 <clock_is_always_on>
2ffdf3ee:	bb48      	cbnz	r0, 2ffdf444 <__stm32mp1_clk_disable+0x60>
2ffdf3f0:	4628      	mov	r0, r5
2ffdf3f2:	f7ff ff65 	bl	2ffdf2c0 <stm32mp1_clk_get_gated_id>
2ffdf3f6:	1e04      	subs	r4, r0, #0
2ffdf3f8:	da07      	bge.n	2ffdf40a <__stm32mp1_clk_disable+0x26>
2ffdf3fa:	4813      	ldr	r0, [pc, #76]	; (2ffdf448 <__stm32mp1_clk_disable+0x64>)
2ffdf3fc:	4629      	mov	r1, r5
2ffdf3fe:	f7fd fb75 	bl	2ffdcaec <tf_log>
2ffdf402:	f7fd fc11 	bl	2ffdcc28 <console_flush>
2ffdf406:	f7f6 ef2c 	blx	2ffd6260 <do_panic>
2ffdf40a:	4d10      	ldr	r5, [pc, #64]	; (2ffdf44c <__stm32mp1_clk_disable+0x68>)
2ffdf40c:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
2ffdf410:	b926      	cbnz	r6, 2ffdf41c <__stm32mp1_clk_disable+0x38>
2ffdf412:	4628      	mov	r0, r5
2ffdf414:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffdf418:	f7ff beb5 	b.w	2ffdf186 <__clk_disable>
2ffdf41c:	480c      	ldr	r0, [pc, #48]	; (2ffdf450 <__stm32mp1_clk_disable+0x6c>)
2ffdf41e:	f7ff fe4a 	bl	2ffdf0b6 <stm32mp1_clk_lock>
2ffdf422:	4a0c      	ldr	r2, [pc, #48]	; (2ffdf454 <__stm32mp1_clk_disable+0x70>)
2ffdf424:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
2ffdf428:	2b00      	cmp	r3, #0
2ffdf42a:	d0ea      	beq.n	2ffdf402 <__stm32mp1_clk_disable+0x1e>
2ffdf42c:	3b01      	subs	r3, #1
2ffdf42e:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
2ffdf432:	b913      	cbnz	r3, 2ffdf43a <__stm32mp1_clk_disable+0x56>
2ffdf434:	4628      	mov	r0, r5
2ffdf436:	f7ff fea6 	bl	2ffdf186 <__clk_disable>
2ffdf43a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffdf43e:	4804      	ldr	r0, [pc, #16]	; (2ffdf450 <__stm32mp1_clk_disable+0x6c>)
2ffdf440:	f7ff be44 	b.w	2ffdf0cc <stm32mp1_clk_unlock>
2ffdf444:	bd70      	pop	{r4, r5, r6, pc}
2ffdf446:	bf00      	nop
2ffdf448:	2ffe5d0f 	.word	0x2ffe5d0f
2ffdf44c:	2ffe5f24 	.word	0x2ffe5f24
2ffdf450:	2ffe9070 	.word	0x2ffe9070
2ffdf454:	2ffe8f48 	.word	0x2ffe8f48

2ffdf458 <stm32mp1_pkcs_config>:
2ffdf458:	b510      	push	{r4, lr}
2ffdf45a:	4604      	mov	r4, r0
2ffdf45c:	f7fd fd2c 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdf460:	f3c4 110b 	ubfx	r1, r4, #4, #12
2ffdf464:	f004 020f 	and.w	r2, r4, #15
2ffdf468:	2c00      	cmp	r4, #0
2ffdf46a:	580b      	ldr	r3, [r1, r0]
2ffdf46c:	bfba      	itte	lt
2ffdf46e:	24f0      	movlt	r4, #240	; 0xf0
2ffdf470:	0112      	lsllt	r2, r2, #4
2ffdf472:	240f      	movge	r4, #15
2ffdf474:	ea23 0304 	bic.w	r3, r3, r4
2ffdf478:	4313      	orrs	r3, r2
2ffdf47a:	500b      	str	r3, [r1, r0]
2ffdf47c:	bd10      	pop	{r4, pc}
	...

2ffdf480 <stm32mp1_set_clkdiv>:
2ffdf480:	680a      	ldr	r2, [r1, #0]
2ffdf482:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffdf486:	f000 033f 	and.w	r3, r0, #63	; 0x3f
2ffdf48a:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
2ffdf48e:	4605      	mov	r5, r0
2ffdf490:	4313      	orrs	r3, r2
2ffdf492:	460c      	mov	r4, r1
2ffdf494:	600b      	str	r3, [r1, #0]
2ffdf496:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdf49a:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffdf49e:	4910      	ldr	r1, [pc, #64]	; (2ffdf4e0 <stm32mp1_set_clkdiv+0x60>)
2ffdf4a0:	2300      	movs	r3, #0
2ffdf4a2:	4a10      	ldr	r2, [pc, #64]	; (2ffdf4e4 <stm32mp1_set_clkdiv+0x64>)
2ffdf4a4:	fba0 0101 	umull	r0, r1, r0, r1
2ffdf4a8:	f003 e8da 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdf4ac:	eb10 0806 	adds.w	r8, r0, r6
2ffdf4b0:	eb41 0907 	adc.w	r9, r1, r7
2ffdf4b4:	6823      	ldr	r3, [r4, #0]
2ffdf4b6:	2b00      	cmp	r3, #0
2ffdf4b8:	da01      	bge.n	2ffdf4be <stm32mp1_set_clkdiv+0x3e>
2ffdf4ba:	2000      	movs	r0, #0
2ffdf4bc:	e00d      	b.n	2ffdf4da <stm32mp1_set_clkdiv+0x5a>
2ffdf4be:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffdf4c2:	4599      	cmp	r9, r3
2ffdf4c4:	bf08      	it	eq
2ffdf4c6:	4590      	cmpeq	r8, r2
2ffdf4c8:	d2f4      	bcs.n	2ffdf4b4 <stm32mp1_set_clkdiv+0x34>
2ffdf4ca:	4807      	ldr	r0, [pc, #28]	; (2ffdf4e8 <stm32mp1_set_clkdiv+0x68>)
2ffdf4cc:	4622      	mov	r2, r4
2ffdf4ce:	6823      	ldr	r3, [r4, #0]
2ffdf4d0:	4629      	mov	r1, r5
2ffdf4d2:	f7fd fb0b 	bl	2ffdcaec <tf_log>
2ffdf4d6:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2ffdf4da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffdf4de:	bf00      	nop
2ffdf4e0:	00030d40 	.word	0x00030d40
2ffdf4e4:	000f4240 	.word	0x000f4240
2ffdf4e8:	2ffe5d2c 	.word	0x2ffe5d2c

2ffdf4ec <stm32mp1_osc_wait>:
2ffdf4ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffdf4f0:	4606      	mov	r6, r0
2ffdf4f2:	b085      	sub	sp, #20
2ffdf4f4:	460f      	mov	r7, r1
2ffdf4f6:	4614      	mov	r4, r2
2ffdf4f8:	f7fd fcde 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdf4fc:	eb00 0a07 	add.w	sl, r0, r7
2ffdf500:	2e00      	cmp	r6, #0
2ffdf502:	4605      	mov	r5, r0
2ffdf504:	bf14      	ite	ne
2ffdf506:	46a3      	movne	fp, r4
2ffdf508:	f04f 0b00 	moveq.w	fp, #0
2ffdf50c:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdf510:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffdf514:	4914      	ldr	r1, [pc, #80]	; (2ffdf568 <stm32mp1_osc_wait+0x7c>)
2ffdf516:	2300      	movs	r3, #0
2ffdf518:	4a13      	ldr	r2, [pc, #76]	; (2ffdf568 <stm32mp1_osc_wait+0x7c>)
2ffdf51a:	fba0 0101 	umull	r0, r1, r0, r1
2ffdf51e:	f003 e8a0 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdf522:	eb10 0308 	adds.w	r3, r0, r8
2ffdf526:	9302      	str	r3, [sp, #8]
2ffdf528:	eb41 0309 	adc.w	r3, r1, r9
2ffdf52c:	9303      	str	r3, [sp, #12]
2ffdf52e:	f8da 3000 	ldr.w	r3, [sl]
2ffdf532:	4023      	ands	r3, r4
2ffdf534:	455b      	cmp	r3, fp
2ffdf536:	d101      	bne.n	2ffdf53c <stm32mp1_osc_wait+0x50>
2ffdf538:	2000      	movs	r0, #0
2ffdf53a:	e011      	b.n	2ffdf560 <stm32mp1_osc_wait+0x74>
2ffdf53c:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffdf540:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
2ffdf544:	4299      	cmp	r1, r3
2ffdf546:	bf08      	it	eq
2ffdf548:	4290      	cmpeq	r0, r2
2ffdf54a:	d2f0      	bcs.n	2ffdf52e <stm32mp1_osc_wait+0x42>
2ffdf54c:	59eb      	ldr	r3, [r5, r7]
2ffdf54e:	4652      	mov	r2, sl
2ffdf550:	4806      	ldr	r0, [pc, #24]	; (2ffdf56c <stm32mp1_osc_wait+0x80>)
2ffdf552:	4621      	mov	r1, r4
2ffdf554:	9300      	str	r3, [sp, #0]
2ffdf556:	4633      	mov	r3, r6
2ffdf558:	f7fd fac8 	bl	2ffdcaec <tf_log>
2ffdf55c:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2ffdf560:	b005      	add	sp, #20
2ffdf562:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffdf566:	bf00      	nop
2ffdf568:	000f4240 	.word	0x000f4240
2ffdf56c:	2ffe5d53 	.word	0x2ffe5d53

2ffdf570 <stm32mp1_set_clksrc>:
2ffdf570:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffdf574:	4605      	mov	r5, r0
2ffdf576:	f7fd fc9f 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdf57a:	ea4f 1a15 	mov.w	sl, r5, lsr #4
2ffdf57e:	f005 0307 	and.w	r3, r5, #7
2ffdf582:	eb00 1b15 	add.w	fp, r0, r5, lsr #4
2ffdf586:	4604      	mov	r4, r0
2ffdf588:	f85a 2000 	ldr.w	r2, [sl, r0]
2ffdf58c:	f022 0207 	bic.w	r2, r2, #7
2ffdf590:	4313      	orrs	r3, r2
2ffdf592:	f84a 3000 	str.w	r3, [sl, r0]
2ffdf596:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdf59a:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffdf59e:	4911      	ldr	r1, [pc, #68]	; (2ffdf5e4 <stm32mp1_set_clksrc+0x74>)
2ffdf5a0:	2300      	movs	r3, #0
2ffdf5a2:	4a11      	ldr	r2, [pc, #68]	; (2ffdf5e8 <stm32mp1_set_clksrc+0x78>)
2ffdf5a4:	fba0 0101 	umull	r0, r1, r0, r1
2ffdf5a8:	f003 e85a 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdf5ac:	eb10 0806 	adds.w	r8, r0, r6
2ffdf5b0:	eb41 0907 	adc.w	r9, r1, r7
2ffdf5b4:	f8db 3000 	ldr.w	r3, [fp]
2ffdf5b8:	2b00      	cmp	r3, #0
2ffdf5ba:	da01      	bge.n	2ffdf5c0 <stm32mp1_set_clksrc+0x50>
2ffdf5bc:	2000      	movs	r0, #0
2ffdf5be:	e00e      	b.n	2ffdf5de <stm32mp1_set_clksrc+0x6e>
2ffdf5c0:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffdf5c4:	4599      	cmp	r9, r3
2ffdf5c6:	bf08      	it	eq
2ffdf5c8:	4590      	cmpeq	r8, r2
2ffdf5ca:	d2f3      	bcs.n	2ffdf5b4 <stm32mp1_set_clksrc+0x44>
2ffdf5cc:	4807      	ldr	r0, [pc, #28]	; (2ffdf5ec <stm32mp1_set_clksrc+0x7c>)
2ffdf5ce:	465a      	mov	r2, fp
2ffdf5d0:	f85a 3004 	ldr.w	r3, [sl, r4]
2ffdf5d4:	4629      	mov	r1, r5
2ffdf5d6:	f7fd fa89 	bl	2ffdcaec <tf_log>
2ffdf5da:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2ffdf5de:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffdf5e2:	bf00      	nop
2ffdf5e4:	00030d40 	.word	0x00030d40
2ffdf5e8:	000f4240 	.word	0x000f4240
2ffdf5ec:	2ffe5d7f 	.word	0x2ffe5d7f

2ffdf5f0 <stm32mp1_pll_output>:
2ffdf5f0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2ffdf5f4:	4606      	mov	r6, r0
2ffdf5f6:	460f      	mov	r7, r1
2ffdf5f8:	f7fd fc5e 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdf5fc:	4b1a      	ldr	r3, [pc, #104]	; (2ffdf668 <stm32mp1_pll_output+0x78>)
2ffdf5fe:	4604      	mov	r4, r0
2ffdf600:	eb03 1346 	add.w	r3, r3, r6, lsl #5
2ffdf604:	899d      	ldrh	r5, [r3, #12]
2ffdf606:	eb05 0a00 	add.w	sl, r5, r0
2ffdf60a:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdf60e:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffdf612:	4916      	ldr	r1, [pc, #88]	; (2ffdf66c <stm32mp1_pll_output+0x7c>)
2ffdf614:	2300      	movs	r3, #0
2ffdf616:	4a16      	ldr	r2, [pc, #88]	; (2ffdf670 <stm32mp1_pll_output+0x80>)
2ffdf618:	fba0 0101 	umull	r0, r1, r0, r1
2ffdf61c:	f003 e820 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdf620:	eb10 0308 	adds.w	r3, r0, r8
2ffdf624:	9300      	str	r3, [sp, #0]
2ffdf626:	eb41 0309 	adc.w	r3, r1, r9
2ffdf62a:	9301      	str	r3, [sp, #4]
2ffdf62c:	f8da 3000 	ldr.w	r3, [sl]
2ffdf630:	079b      	lsls	r3, r3, #30
2ffdf632:	d505      	bpl.n	2ffdf640 <stm32mp1_pll_output+0x50>
2ffdf634:	5929      	ldr	r1, [r5, r4]
2ffdf636:	2000      	movs	r0, #0
2ffdf638:	ea41 1707 	orr.w	r7, r1, r7, lsl #4
2ffdf63c:	512f      	str	r7, [r5, r4]
2ffdf63e:	e00f      	b.n	2ffdf660 <stm32mp1_pll_output+0x70>
2ffdf640:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffdf644:	e9dd 0100 	ldrd	r0, r1, [sp]
2ffdf648:	4299      	cmp	r1, r3
2ffdf64a:	bf08      	it	eq
2ffdf64c:	4290      	cmpeq	r0, r2
2ffdf64e:	d2ed      	bcs.n	2ffdf62c <stm32mp1_pll_output+0x3c>
2ffdf650:	4808      	ldr	r0, [pc, #32]	; (2ffdf674 <stm32mp1_pll_output+0x84>)
2ffdf652:	4652      	mov	r2, sl
2ffdf654:	592b      	ldr	r3, [r5, r4]
2ffdf656:	4631      	mov	r1, r6
2ffdf658:	f7fd fa48 	bl	2ffdcaec <tf_log>
2ffdf65c:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2ffdf660:	b002      	add	sp, #8
2ffdf662:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffdf666:	bf00      	nop
2ffdf668:	2ffe60dc 	.word	0x2ffe60dc
2ffdf66c:	00030d40 	.word	0x00030d40
2ffdf670:	000f4240 	.word	0x000f4240
2ffdf674:	2ffe5da6 	.word	0x2ffe5da6

2ffdf678 <stm32mp1_pll_config_output>:
2ffdf678:	b538      	push	{r3, r4, r5, lr}
2ffdf67a:	460c      	mov	r4, r1
2ffdf67c:	4605      	mov	r5, r0
2ffdf67e:	f7fd fc1b 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdf682:	68a3      	ldr	r3, [r4, #8]
2ffdf684:	6922      	ldr	r2, [r4, #16]
2ffdf686:	f003 017f 	and.w	r1, r3, #127	; 0x7f
2ffdf68a:	68e3      	ldr	r3, [r4, #12]
2ffdf68c:	0412      	lsls	r2, r2, #16
2ffdf68e:	021b      	lsls	r3, r3, #8
2ffdf690:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
2ffdf694:	f403 43fe 	and.w	r3, r3, #32512	; 0x7f00
2ffdf698:	4313      	orrs	r3, r2
2ffdf69a:	4a03      	ldr	r2, [pc, #12]	; (2ffdf6a8 <stm32mp1_pll_config_output+0x30>)
2ffdf69c:	430b      	orrs	r3, r1
2ffdf69e:	eb02 1545 	add.w	r5, r2, r5, lsl #5
2ffdf6a2:	892a      	ldrh	r2, [r5, #8]
2ffdf6a4:	5013      	str	r3, [r2, r0]
2ffdf6a6:	bd38      	pop	{r3, r4, r5, pc}
2ffdf6a8:	2ffe60dc 	.word	0x2ffe60dc

2ffdf6ac <stm32mp1_pll_config>:
2ffdf6ac:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2ffdf6b0:	4680      	mov	r8, r0
2ffdf6b2:	4d11      	ldr	r5, [pc, #68]	; (2ffdf6f8 <stm32mp1_pll_config+0x4c>)
2ffdf6b4:	4689      	mov	r9, r1
2ffdf6b6:	4616      	mov	r6, r2
2ffdf6b8:	f7fd fbfe 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdf6bc:	eb05 1548 	add.w	r5, r5, r8, lsl #5
2ffdf6c0:	4604      	mov	r4, r0
2ffdf6c2:	aa01      	add	r2, sp, #4
2ffdf6c4:	4649      	mov	r1, r9
2ffdf6c6:	4628      	mov	r0, r5
2ffdf6c8:	f7ff fc80 	bl	2ffdefcc <stm32mp1_pll_compute_pllxcfgr1>
2ffdf6cc:	4607      	mov	r7, r0
2ffdf6ce:	b978      	cbnz	r0, 2ffdf6f0 <stm32mp1_pll_config+0x44>
2ffdf6d0:	9a01      	ldr	r2, [sp, #4]
2ffdf6d2:	4649      	mov	r1, r9
2ffdf6d4:	88eb      	ldrh	r3, [r5, #6]
2ffdf6d6:	00f6      	lsls	r6, r6, #3
2ffdf6d8:	511a      	str	r2, [r3, r4]
2ffdf6da:	896b      	ldrh	r3, [r5, #10]
2ffdf6dc:	5118      	str	r0, [r3, r4]
2ffdf6de:	4640      	mov	r0, r8
2ffdf6e0:	9601      	str	r6, [sp, #4]
2ffdf6e2:	511e      	str	r6, [r3, r4]
2ffdf6e4:	591a      	ldr	r2, [r3, r4]
2ffdf6e6:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
2ffdf6ea:	511a      	str	r2, [r3, r4]
2ffdf6ec:	f7ff ffc4 	bl	2ffdf678 <stm32mp1_pll_config_output>
2ffdf6f0:	4638      	mov	r0, r7
2ffdf6f2:	b003      	add	sp, #12
2ffdf6f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffdf6f8:	2ffe60dc 	.word	0x2ffe60dc

2ffdf6fc <stm32mp1_clk_rcc_regs_lock>:
2ffdf6fc:	4801      	ldr	r0, [pc, #4]	; (2ffdf704 <stm32mp1_clk_rcc_regs_lock+0x8>)
2ffdf6fe:	f7ff bcda 	b.w	2ffdf0b6 <stm32mp1_clk_lock>
2ffdf702:	bf00      	nop
2ffdf704:	2ffe9074 	.word	0x2ffe9074

2ffdf708 <stm32mp1_clk_rcc_regs_unlock>:
2ffdf708:	4801      	ldr	r0, [pc, #4]	; (2ffdf710 <stm32mp1_clk_rcc_regs_unlock+0x8>)
2ffdf70a:	f7ff bcdf 	b.w	2ffdf0cc <stm32mp1_clk_unlock>
2ffdf70e:	bf00      	nop
2ffdf710:	2ffe9074 	.word	0x2ffe9074

2ffdf714 <stm32mp_clk_enable>:
2ffdf714:	2101      	movs	r1, #1
2ffdf716:	f7ff be29 	b.w	2ffdf36c <__stm32mp1_clk_enable>

2ffdf71a <stm32mp_clk_disable>:
2ffdf71a:	2101      	movs	r1, #1
2ffdf71c:	f7ff be62 	b.w	2ffdf3e4 <__stm32mp1_clk_disable>

2ffdf720 <stm32mp1_clk_force_enable>:
2ffdf720:	2100      	movs	r1, #0
2ffdf722:	f7ff be23 	b.w	2ffdf36c <__stm32mp1_clk_enable>

2ffdf726 <stm32mp_clk_get_rate>:
2ffdf726:	b508      	push	{r3, lr}
2ffdf728:	f7ff fde4 	bl	2ffdf2f4 <stm32mp1_clk_get_parent>
2ffdf72c:	2800      	cmp	r0, #0
2ffdf72e:	db03      	blt.n	2ffdf738 <stm32mp_clk_get_rate+0x12>
2ffdf730:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffdf734:	f7ff bb7e 	b.w	2ffdee34 <get_clock_rate>
2ffdf738:	2000      	movs	r0, #0
2ffdf73a:	bd08      	pop	{r3, pc}
2ffdf73c:	0000      	movs	r0, r0
	...

2ffdf740 <clk_get_pll1_settings.part.0>:
2ffdf740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffdf744:	4615      	mov	r5, r2
2ffdf746:	4a82      	ldr	r2, [pc, #520]	; (2ffdf950 <clk_get_pll1_settings.part.0+0x210>)
2ffdf748:	b093      	sub	sp, #76	; 0x4c
2ffdf74a:	460f      	mov	r7, r1
2ffdf74c:	930c      	str	r3, [sp, #48]	; 0x30
2ffdf74e:	4616      	mov	r6, r2
2ffdf750:	6853      	ldr	r3, [r2, #4]
2ffdf752:	4299      	cmp	r1, r3
2ffdf754:	f000 80df 	beq.w	2ffdf916 <clk_get_pll1_settings.part.0+0x1d6>
2ffdf758:	6893      	ldr	r3, [r2, #8]
2ffdf75a:	4299      	cmp	r1, r3
2ffdf75c:	f000 80f1 	beq.w	2ffdf942 <clk_get_pll1_settings.part.0+0x202>
2ffdf760:	6813      	ldr	r3, [r2, #0]
2ffdf762:	2b00      	cmp	r3, #0
2ffdf764:	f040 80d4 	bne.w	2ffdf910 <clk_get_pll1_settings.part.0+0x1d0>
2ffdf768:	f5b0 7f20 	cmp.w	r0, #640	; 0x280
2ffdf76c:	d008      	beq.n	2ffdf780 <clk_get_pll1_settings.part.0+0x40>
2ffdf76e:	f240 2381 	movw	r3, #641	; 0x281
2ffdf772:	4298      	cmp	r0, r3
2ffdf774:	f000 8097 	beq.w	2ffdf8a6 <clk_get_pll1_settings.part.0+0x166>
2ffdf778:	f7fd fa56 	bl	2ffdcc28 <console_flush>
2ffdf77c:	f7f6 ed70 	blx	2ffd6260 <do_panic>
2ffdf780:	2004      	movs	r0, #4
2ffdf782:	f7ff ffd0 	bl	2ffdf726 <stm32mp_clk_get_rate>
2ffdf786:	9004      	str	r0, [sp, #16]
2ffdf788:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffdf78c:	fb01 f307 	mul.w	r3, r1, r7
2ffdf790:	2200      	movs	r2, #0
2ffdf792:	9302      	str	r3, [sp, #8]
2ffdf794:	4619      	mov	r1, r3
2ffdf796:	2300      	movs	r3, #0
2ffdf798:	60eb      	str	r3, [r5, #12]
2ffdf79a:	612b      	str	r3, [r5, #16]
2ffdf79c:	9b02      	ldr	r3, [sp, #8]
2ffdf79e:	e9cd 1208 	strd	r1, r2, [sp, #32]
2ffdf7a2:	ea4f 6a93 	mov.w	sl, r3, lsr #26
2ffdf7a6:	2201      	movs	r2, #1
2ffdf7a8:	019b      	lsls	r3, r3, #6
2ffdf7aa:	9307      	str	r3, [sp, #28]
2ffdf7ac:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2ffdf7b0:	9305      	str	r3, [sp, #20]
2ffdf7b2:	233f      	movs	r3, #63	; 0x3f
2ffdf7b4:	616a      	str	r2, [r5, #20]
2ffdf7b6:	9303      	str	r3, [sp, #12]
2ffdf7b8:	9b03      	ldr	r3, [sp, #12]
2ffdf7ba:	4a66      	ldr	r2, [pc, #408]	; (2ffdf954 <clk_get_pll1_settings.part.0+0x214>)
2ffdf7bc:	f103 0901 	add.w	r9, r3, #1
2ffdf7c0:	9b04      	ldr	r3, [sp, #16]
2ffdf7c2:	fbb3 f9f9 	udiv	r9, r3, r9
2ffdf7c6:	f5a9 03f4 	sub.w	r3, r9, #7995392	; 0x7a0000
2ffdf7ca:	f5a3 5390 	sub.w	r3, r3, #4608	; 0x1200
2ffdf7ce:	4293      	cmp	r3, r2
2ffdf7d0:	f200 8089 	bhi.w	2ffdf8e6 <clk_get_pll1_settings.part.0+0x1a6>
2ffdf7d4:	f8dd 801c 	ldr.w	r8, [sp, #28]
2ffdf7d8:	2301      	movs	r3, #1
2ffdf7da:	f8cd a018 	str.w	sl, [sp, #24]
2ffdf7de:	2400      	movs	r4, #0
2ffdf7e0:	e9cd 3400 	strd	r3, r4, [sp]
2ffdf7e4:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
2ffdf7e8:	9a04      	ldr	r2, [sp, #16]
2ffdf7ea:	2300      	movs	r3, #0
2ffdf7ec:	9906      	ldr	r1, [sp, #24]
2ffdf7ee:	4640      	mov	r0, r8
2ffdf7f0:	f002 ef36 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdf7f4:	f1a0 0319 	sub.w	r3, r0, #25
2ffdf7f8:	4607      	mov	r7, r0
2ffdf7fa:	2b4b      	cmp	r3, #75	; 0x4b
2ffdf7fc:	d85f      	bhi.n	2ffdf8be <clk_get_pll1_settings.part.0+0x17e>
2ffdf7fe:	9a04      	ldr	r2, [sp, #16]
2ffdf800:	1e43      	subs	r3, r0, #1
2ffdf802:	930d      	str	r3, [sp, #52]	; 0x34
2ffdf804:	9b06      	ldr	r3, [sp, #24]
2ffdf806:	ea4f 3048 	mov.w	r0, r8, lsl #13
2ffdf80a:	0359      	lsls	r1, r3, #13
2ffdf80c:	2300      	movs	r3, #0
2ffdf80e:	ea41 41d8 	orr.w	r1, r1, r8, lsr #19
2ffdf812:	f002 ef26 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdf816:	eba0 3447 	sub.w	r4, r0, r7, lsl #13
2ffdf81a:	fb09 f707 	mul.w	r7, r9, r7
2ffdf81e:	17e3      	asrs	r3, r4, #31
2ffdf820:	9710      	str	r7, [sp, #64]	; 0x40
2ffdf822:	fba4 6709 	umull	r6, r7, r4, r9
2ffdf826:	fb09 7703 	mla	r7, r9, r3, r7
2ffdf82a:	1ca3      	adds	r3, r4, #2
2ffdf82c:	930e      	str	r3, [sp, #56]	; 0x38
2ffdf82e:	9b00      	ldr	r3, [sp, #0]
2ffdf830:	3b01      	subs	r3, #1
2ffdf832:	930f      	str	r3, [sp, #60]	; 0x3c
2ffdf834:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
2ffdf838:	dc41      	bgt.n	2ffdf8be <clk_get_pll1_settings.part.0+0x17e>
2ffdf83a:	9b10      	ldr	r3, [sp, #64]	; 0x40
2ffdf83c:	0b70      	lsrs	r0, r6, #13
2ffdf83e:	ea40 40c7 	orr.w	r0, r0, r7, lsl #19
2ffdf842:	18c0      	adds	r0, r0, r3
2ffdf844:	4b44      	ldr	r3, [pc, #272]	; (2ffdf958 <clk_get_pll1_settings.part.0+0x218>)
2ffdf846:	ea4f 3157 	mov.w	r1, r7, lsr #13
2ffdf84a:	f141 0100 	adc.w	r1, r1, #0
2ffdf84e:	18c3      	adds	r3, r0, r3
2ffdf850:	930a      	str	r3, [sp, #40]	; 0x28
2ffdf852:	f141 33ff 	adc.w	r3, r1, #4294967295	; 0xffffffff
2ffdf856:	930b      	str	r3, [sp, #44]	; 0x2c
2ffdf858:	e9dd bc0a 	ldrd	fp, ip, [sp, #40]	; 0x28
2ffdf85c:	a33a      	add	r3, pc, #232	; (adr r3, 2ffdf948 <clk_get_pll1_settings.part.0+0x208>)
2ffdf85e:	e9d3 2300 	ldrd	r2, r3, [r3]
2ffdf862:	4563      	cmp	r3, ip
2ffdf864:	bf08      	it	eq
2ffdf866:	455a      	cmpeq	r2, fp
2ffdf868:	d321      	bcc.n	2ffdf8ae <clk_get_pll1_settings.part.0+0x16e>
2ffdf86a:	e9dd 2300 	ldrd	r2, r3, [sp]
2ffdf86e:	f002 eef8 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdf872:	4602      	mov	r2, r0
2ffdf874:	460b      	mov	r3, r1
2ffdf876:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
2ffdf87a:	4299      	cmp	r1, r3
2ffdf87c:	9902      	ldr	r1, [sp, #8]
2ffdf87e:	bf08      	it	eq
2ffdf880:	4290      	cmpeq	r0, r2
2ffdf882:	9b05      	ldr	r3, [sp, #20]
2ffdf884:	bf34      	ite	cc
2ffdf886:	1a50      	subcc	r0, r2, r1
2ffdf888:	1a88      	subcs	r0, r1, r2
2ffdf88a:	4298      	cmp	r0, r3
2ffdf88c:	d20d      	bcs.n	2ffdf8aa <clk_get_pll1_settings.part.0+0x16a>
2ffdf88e:	9b03      	ldr	r3, [sp, #12]
2ffdf890:	602b      	str	r3, [r5, #0]
2ffdf892:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2ffdf894:	606b      	str	r3, [r5, #4]
2ffdf896:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
2ffdf898:	60ab      	str	r3, [r5, #8]
2ffdf89a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
2ffdf89c:	601c      	str	r4, [r3, #0]
2ffdf89e:	b928      	cbnz	r0, 2ffdf8ac <clk_get_pll1_settings.part.0+0x16c>
2ffdf8a0:	b013      	add	sp, #76	; 0x4c
2ffdf8a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffdf8a6:	2000      	movs	r0, #0
2ffdf8a8:	e76b      	b.n	2ffdf782 <clk_get_pll1_settings.part.0+0x42>
2ffdf8aa:	9805      	ldr	r0, [sp, #20]
2ffdf8ac:	9005      	str	r0, [sp, #20]
2ffdf8ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
2ffdf8b0:	3401      	adds	r4, #1
2ffdf8b2:	18f6      	adds	r6, r6, r3
2ffdf8b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2ffdf8b6:	f147 0700 	adc.w	r7, r7, #0
2ffdf8ba:	42a3      	cmp	r3, r4
2ffdf8bc:	d1ba      	bne.n	2ffdf834 <clk_get_pll1_settings.part.0+0xf4>
2ffdf8be:	9b07      	ldr	r3, [sp, #28]
2ffdf8c0:	eb18 0803 	adds.w	r8, r8, r3
2ffdf8c4:	9b06      	ldr	r3, [sp, #24]
2ffdf8c6:	eb43 030a 	adc.w	r3, r3, sl
2ffdf8ca:	9306      	str	r3, [sp, #24]
2ffdf8cc:	9b00      	ldr	r3, [sp, #0]
2ffdf8ce:	3301      	adds	r3, #1
2ffdf8d0:	9300      	str	r3, [sp, #0]
2ffdf8d2:	9b01      	ldr	r3, [sp, #4]
2ffdf8d4:	f143 0300 	adc.w	r3, r3, #0
2ffdf8d8:	9301      	str	r3, [sp, #4]
2ffdf8da:	e9dd 3400 	ldrd	r3, r4, [sp]
2ffdf8de:	2c00      	cmp	r4, #0
2ffdf8e0:	bf08      	it	eq
2ffdf8e2:	2b81      	cmpeq	r3, #129	; 0x81
2ffdf8e4:	d180      	bne.n	2ffdf7e8 <clk_get_pll1_settings.part.0+0xa8>
2ffdf8e6:	9b03      	ldr	r3, [sp, #12]
2ffdf8e8:	9a07      	ldr	r2, [sp, #28]
2ffdf8ea:	3b01      	subs	r3, #1
2ffdf8ec:	9303      	str	r3, [sp, #12]
2ffdf8ee:	9b08      	ldr	r3, [sp, #32]
2ffdf8f0:	1ad3      	subs	r3, r2, r3
2ffdf8f2:	9307      	str	r3, [sp, #28]
2ffdf8f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
2ffdf8f6:	eb6a 0a03 	sbc.w	sl, sl, r3
2ffdf8fa:	9b03      	ldr	r3, [sp, #12]
2ffdf8fc:	3301      	adds	r3, #1
2ffdf8fe:	f47f af5b 	bne.w	2ffdf7b8 <clk_get_pll1_settings.part.0+0x78>
2ffdf902:	9b05      	ldr	r3, [sp, #20]
2ffdf904:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffdf908:	3301      	adds	r3, #1
2ffdf90a:	bf18      	it	ne
2ffdf90c:	2000      	movne	r0, #0
2ffdf90e:	e7c7      	b.n	2ffdf8a0 <clk_get_pll1_settings.part.0+0x160>
2ffdf910:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffdf914:	e7c4      	b.n	2ffdf8a0 <clk_get_pll1_settings.part.0+0x160>
2ffdf916:	2400      	movs	r4, #0
2ffdf918:	2218      	movs	r2, #24
2ffdf91a:	fb02 f104 	mul.w	r1, r2, r4
2ffdf91e:	1873      	adds	r3, r6, r1
2ffdf920:	6a9b      	ldr	r3, [r3, #40]	; 0x28
2ffdf922:	2b00      	cmp	r3, #0
2ffdf924:	f43f af20 	beq.w	2ffdf768 <clk_get_pll1_settings.part.0+0x28>
2ffdf928:	3410      	adds	r4, #16
2ffdf92a:	3114      	adds	r1, #20
2ffdf92c:	4431      	add	r1, r6
2ffdf92e:	4628      	mov	r0, r5
2ffdf930:	eb06 0684 	add.w	r6, r6, r4, lsl #2
2ffdf934:	f003 fb16 	bl	2ffe2f64 <memcpy>
2ffdf938:	9a0c      	ldr	r2, [sp, #48]	; 0x30
2ffdf93a:	2000      	movs	r0, #0
2ffdf93c:	6873      	ldr	r3, [r6, #4]
2ffdf93e:	6013      	str	r3, [r2, #0]
2ffdf940:	e7ae      	b.n	2ffdf8a0 <clk_get_pll1_settings.part.0+0x160>
2ffdf942:	2401      	movs	r4, #1
2ffdf944:	e7e8      	b.n	2ffdf918 <clk_get_pll1_settings.part.0+0x1d8>
2ffdf946:	bf00      	nop
2ffdf948:	17d78400 	.word	0x17d78400
2ffdf94c:	00000000 	.word	0x00000000
2ffdf950:	2ffe9024 	.word	0x2ffe9024
2ffdf954:	007a1200 	.word	0x007a1200
2ffdf958:	e8287c00 	.word	0xe8287c00

2ffdf95c <stm32mp1_clk_get_maxfreq_opp>:
2ffdf95c:	b538      	push	{r3, r4, r5, lr}
2ffdf95e:	b920      	cbnz	r0, 2ffdf96a <stm32mp1_clk_get_maxfreq_opp+0xe>
2ffdf960:	f640 1117 	movw	r1, #2327	; 0x917
2ffdf964:	480f      	ldr	r0, [pc, #60]	; (2ffdf9a4 <stm32mp1_clk_get_maxfreq_opp+0x48>)
2ffdf966:	f003 fad5 	bl	2ffe2f14 <__assert>
2ffdf96a:	b911      	cbnz	r1, 2ffdf972 <stm32mp1_clk_get_maxfreq_opp+0x16>
2ffdf96c:	f640 1118 	movw	r1, #2328	; 0x918
2ffdf970:	e7f8      	b.n	2ffdf964 <stm32mp1_clk_get_maxfreq_opp+0x8>
2ffdf972:	4b0d      	ldr	r3, [pc, #52]	; (2ffdf9a8 <stm32mp1_clk_get_maxfreq_opp+0x4c>)
2ffdf974:	4a0d      	ldr	r2, [pc, #52]	; (2ffdf9ac <stm32mp1_clk_get_maxfreq_opp+0x50>)
2ffdf976:	681c      	ldr	r4, [r3, #0]
2ffdf978:	4294      	cmp	r4, r2
2ffdf97a:	d10f      	bne.n	2ffdf99c <stm32mp1_clk_get_maxfreq_opp+0x40>
2ffdf97c:	685a      	ldr	r2, [r3, #4]
2ffdf97e:	b15a      	cbz	r2, 2ffdf998 <stm32mp1_clk_get_maxfreq_opp+0x3c>
2ffdf980:	68dc      	ldr	r4, [r3, #12]
2ffdf982:	689d      	ldr	r5, [r3, #8]
2ffdf984:	42aa      	cmp	r2, r5
2ffdf986:	bf3c      	itt	cc
2ffdf988:	462a      	movcc	r2, r5
2ffdf98a:	691c      	ldrcc	r4, [r3, #16]
2ffdf98c:	b132      	cbz	r2, 2ffdf99c <stm32mp1_clk_get_maxfreq_opp+0x40>
2ffdf98e:	b12c      	cbz	r4, 2ffdf99c <stm32mp1_clk_get_maxfreq_opp+0x40>
2ffdf990:	6002      	str	r2, [r0, #0]
2ffdf992:	2000      	movs	r0, #0
2ffdf994:	600c      	str	r4, [r1, #0]
2ffdf996:	bd38      	pop	{r3, r4, r5, pc}
2ffdf998:	4614      	mov	r4, r2
2ffdf99a:	e7f2      	b.n	2ffdf982 <stm32mp1_clk_get_maxfreq_opp+0x26>
2ffdf99c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffdf9a0:	e7f9      	b.n	2ffdf996 <stm32mp1_clk_get_maxfreq_opp+0x3a>
2ffdf9a2:	bf00      	nop
2ffdf9a4:	2ffe5dc9 	.word	0x2ffe5dc9
2ffdf9a8:	2ffe9024 	.word	0x2ffe9024
2ffdf9ac:	504c4c31 	.word	0x504c4c31

2ffdf9b0 <stm32mp1_clk_lp_load_opp_pll1_settings>:
2ffdf9b0:	294c      	cmp	r1, #76	; 0x4c
2ffdf9b2:	460a      	mov	r2, r1
2ffdf9b4:	b508      	push	{r3, lr}
2ffdf9b6:	d003      	beq.n	2ffdf9c0 <stm32mp1_clk_lp_load_opp_pll1_settings+0x10>
2ffdf9b8:	f7fd f936 	bl	2ffdcc28 <console_flush>
2ffdf9bc:	f7f6 ec50 	blx	2ffd6260 <do_panic>
2ffdf9c0:	4601      	mov	r1, r0
2ffdf9c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffdf9c6:	4801      	ldr	r0, [pc, #4]	; (2ffdf9cc <stm32mp1_clk_lp_load_opp_pll1_settings+0x1c>)
2ffdf9c8:	f003 bacc 	b.w	2ffe2f64 <memcpy>
2ffdf9cc:	2ffe9024 	.word	0x2ffe9024

2ffdf9d0 <stm32mp1_clk_init>:
2ffdf9d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffdf9d4:	b0cd      	sub	sp, #308	; 0x134
2ffdf9d6:	4607      	mov	r7, r0
2ffdf9d8:	f7fd fa6e 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdf9dc:	4605      	mov	r5, r0
2ffdf9de:	2080      	movs	r0, #128	; 0x80
2ffdf9e0:	f7ff fc88 	bl	2ffdf2f4 <stm32mp1_clk_get_parent>
2ffdf9e4:	9004      	str	r0, [sp, #16]
2ffdf9e6:	207f      	movs	r0, #127	; 0x7f
2ffdf9e8:	f7ff fc84 	bl	2ffdf2f4 <stm32mp1_clk_get_parent>
2ffdf9ec:	9005      	str	r0, [sp, #20]
2ffdf9ee:	f7ff f94b 	bl	2ffdec88 <fdt_get_rcc_secure_status>
2ffdf9f2:	b900      	cbnz	r0, 2ffdf9f6 <stm32mp1_clk_init+0x26>
2ffdf9f4:	6028      	str	r0, [r5, #0]
2ffdf9f6:	48c0      	ldr	r0, [pc, #768]	; (2ffdfcf8 <stm32mp1_clk_init+0x328>)
2ffdf9f8:	2209      	movs	r2, #9
2ffdf9fa:	a914      	add	r1, sp, #80	; 0x50
2ffdf9fc:	f7ff f902 	bl	2ffdec04 <fdt_rcc_read_uint32_array>
2ffdfa00:	2800      	cmp	r0, #0
2ffdfa02:	da02      	bge.n	2ffdfa0a <stm32mp1_clk_init+0x3a>
2ffdfa04:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffdfa08:	e15f      	b.n	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfa0a:	48bc      	ldr	r0, [pc, #752]	; (2ffdfcfc <stm32mp1_clk_init+0x32c>)
2ffdfa0c:	220b      	movs	r2, #11
2ffdfa0e:	a91d      	add	r1, sp, #116	; 0x74
2ffdfa10:	f7ff f8f8 	bl	2ffdec04 <fdt_rcc_read_uint32_array>
2ffdfa14:	2800      	cmp	r0, #0
2ffdfa16:	dbf5      	blt.n	2ffdfa04 <stm32mp1_clk_init+0x34>
2ffdfa18:	f8df b310 	ldr.w	fp, [pc, #784]	; 2ffdfd2c <stm32mp1_clk_init+0x35c>
2ffdfa1c:	ab08      	add	r3, sp, #32
2ffdfa1e:	9300      	str	r3, [sp, #0]
2ffdfa20:	f10d 0840 	add.w	r8, sp, #64	; 0x40
2ffdfa24:	4699      	mov	r9, r3
2ffdfa26:	2600      	movs	r6, #0
2ffdfa28:	4ab5      	ldr	r2, [pc, #724]	; (2ffdfd00 <stm32mp1_clk_init+0x330>)
2ffdfa2a:	4633      	mov	r3, r6
2ffdfa2c:	210c      	movs	r1, #12
2ffdfa2e:	a809      	add	r0, sp, #36	; 0x24
2ffdfa30:	f003 fc10 	bl	2ffe3254 <snprintf>
2ffdfa34:	a809      	add	r0, sp, #36	; 0x24
2ffdfa36:	f7ff f8f7 	bl	2ffdec28 <fdt_rcc_subnode_offset>
2ffdfa3a:	f848 0b04 	str.w	r0, [r8], #4
2ffdfa3e:	4604      	mov	r4, r0
2ffdfa40:	f002 fa48 	bl	2ffe1ed4 <fdt_check_node>
2ffdfa44:	f809 0b01 	strb.w	r0, [r9], #1
2ffdfa48:	2800      	cmp	r0, #0
2ffdfa4a:	d06d      	beq.n	2ffdfb28 <stm32mp1_clk_init+0x158>
2ffdfa4c:	ab28      	add	r3, sp, #160	; 0xa0
2ffdfa4e:	a934      	add	r1, sp, #208	; 0xd0
2ffdfa50:	f04f 0a0c 	mov.w	sl, #12
2ffdfa54:	2218      	movs	r2, #24
2ffdfa56:	fb02 1206 	mla	r2, r2, r6, r1
2ffdfa5a:	fb0a 3a06 	mla	sl, sl, r6, r3
2ffdfa5e:	49a9      	ldr	r1, [pc, #676]	; (2ffdfd04 <stm32mp1_clk_init+0x334>)
2ffdfa60:	2306      	movs	r3, #6
2ffdfa62:	4620      	mov	r0, r4
2ffdfa64:	f002 fa8c 	bl	2ffe1f80 <fdt_read_uint32_array>
2ffdfa68:	2800      	cmp	r0, #0
2ffdfa6a:	dbcb      	blt.n	2ffdfa04 <stm32mp1_clk_init+0x34>
2ffdfa6c:	2200      	movs	r2, #0
2ffdfa6e:	4659      	mov	r1, fp
2ffdfa70:	4620      	mov	r0, r4
2ffdfa72:	f002 fa71 	bl	2ffe1f58 <fdt_read_uint32_default>
2ffdfa76:	49a4      	ldr	r1, [pc, #656]	; (2ffdfd08 <stm32mp1_clk_init+0x338>)
2ffdfa78:	ab0c      	add	r3, sp, #48	; 0x30
2ffdfa7a:	4652      	mov	r2, sl
2ffdfa7c:	f843 0026 	str.w	r0, [r3, r6, lsl #2]
2ffdfa80:	2303      	movs	r3, #3
2ffdfa82:	4620      	mov	r0, r4
2ffdfa84:	f002 fa7c 	bl	2ffe1f80 <fdt_read_uint32_array>
2ffdfa88:	4604      	mov	r4, r0
2ffdfa8a:	ab07      	add	r3, sp, #28
2ffdfa8c:	fab0 f080 	clz	r0, r0
2ffdfa90:	0940      	lsrs	r0, r0, #5
2ffdfa92:	54f0      	strb	r0, [r6, r3]
2ffdfa94:	1c63      	adds	r3, r4, #1
2ffdfa96:	2b01      	cmp	r3, #1
2ffdfa98:	f200 8117 	bhi.w	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfa9c:	3601      	adds	r6, #1
2ffdfa9e:	2e04      	cmp	r6, #4
2ffdfaa0:	d1c2      	bne.n	2ffdfa28 <stm32mp1_clk_init+0x58>
2ffdfaa2:	9926      	ldr	r1, [sp, #152]	; 0x98
2ffdfaa4:	981b      	ldr	r0, [sp, #108]	; 0x6c
2ffdfaa6:	f7ff fae9 	bl	2ffdf07c <stm32mp1_mco_csg>
2ffdfaaa:	9927      	ldr	r1, [sp, #156]	; 0x9c
2ffdfaac:	981c      	ldr	r0, [sp, #112]	; 0x70
2ffdfaae:	f7ff fae5 	bl	2ffdf07c <stm32mp1_mco_csg>
2ffdfab2:	4b96      	ldr	r3, [pc, #600]	; (2ffdfd0c <stm32mp1_clk_init+0x33c>)
2ffdfab4:	68da      	ldr	r2, [r3, #12]
2ffdfab6:	4698      	mov	r8, r3
2ffdfab8:	b16a      	cbz	r2, 2ffdfad6 <stm32mp1_clk_init+0x106>
2ffdfaba:	f7fd f9fd 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdfabe:	f8d0 3144 	ldr.w	r3, [r0, #324]	; 0x144
2ffdfac2:	2202      	movs	r2, #2
2ffdfac4:	f44f 71a2 	mov.w	r1, #324	; 0x144
2ffdfac8:	f043 0301 	orr.w	r3, r3, #1
2ffdfacc:	f8c0 3144 	str.w	r3, [r0, #324]	; 0x144
2ffdfad0:	2001      	movs	r0, #1
2ffdfad2:	f7ff fd0b 	bl	2ffdf4ec <stm32mp1_osc_wait>
2ffdfad6:	f8d8 0010 	ldr.w	r0, [r8, #16]
2ffdfada:	2800      	cmp	r0, #0
2ffdfadc:	d072      	beq.n	2ffdfbc4 <stm32mp1_clk_init+0x1f4>
2ffdfade:	498c      	ldr	r1, [pc, #560]	; (2ffdfd10 <stm32mp1_clk_init+0x340>)
2ffdfae0:	2004      	movs	r0, #4
2ffdfae2:	f7ff f815 	bl	2ffdeb10 <fdt_osc_read_bool>
2ffdfae6:	498b      	ldr	r1, [pc, #556]	; (2ffdfd14 <stm32mp1_clk_init+0x344>)
2ffdfae8:	4604      	mov	r4, r0
2ffdfaea:	2004      	movs	r0, #4
2ffdfaec:	f7ff f810 	bl	2ffdeb10 <fdt_osc_read_bool>
2ffdfaf0:	4989      	ldr	r1, [pc, #548]	; (2ffdfd18 <stm32mp1_clk_init+0x348>)
2ffdfaf2:	4606      	mov	r6, r0
2ffdfaf4:	2004      	movs	r0, #4
2ffdfaf6:	f7ff f80b 	bl	2ffdeb10 <fdt_osc_read_bool>
2ffdfafa:	9001      	str	r0, [sp, #4]
2ffdfafc:	2202      	movs	r2, #2
2ffdfafe:	4987      	ldr	r1, [pc, #540]	; (2ffdfd1c <stm32mp1_clk_init+0x34c>)
2ffdfb00:	2004      	movs	r0, #4
2ffdfb02:	f7ff f83f 	bl	2ffdeb84 <fdt_osc_read_uint32_default>
2ffdfb06:	4607      	mov	r7, r0
2ffdfb08:	f7fd f9d6 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdfb0c:	b1f6      	cbz	r6, 2ffdfb4c <stm32mp1_clk_init+0x17c>
2ffdfb0e:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
2ffdfb12:	f043 0308 	orr.w	r3, r3, #8
2ffdfb16:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
2ffdfb1a:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
2ffdfb1e:	f043 0302 	orr.w	r3, r3, #2
2ffdfb22:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
2ffdfb26:	e013      	b.n	2ffdfb50 <stm32mp1_clk_init+0x180>
2ffdfb28:	2e00      	cmp	r6, #0
2ffdfb2a:	d1b7      	bne.n	2ffdfa9c <stm32mp1_clk_init+0xcc>
2ffdfb2c:	2f00      	cmp	r7, #0
2ffdfb2e:	d0b5      	beq.n	2ffdfa9c <stm32mp1_clk_init+0xcc>
2ffdfb30:	9817      	ldr	r0, [sp, #92]	; 0x5c
2ffdfb32:	ab0c      	add	r3, sp, #48	; 0x30
2ffdfb34:	aa34      	add	r2, sp, #208	; 0xd0
2ffdfb36:	4639      	mov	r1, r7
2ffdfb38:	f7ff fe02 	bl	2ffdf740 <clk_get_pll1_settings.part.0>
2ffdfb3c:	4604      	mov	r4, r0
2ffdfb3e:	2800      	cmp	r0, #0
2ffdfb40:	f040 80c3 	bne.w	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfb44:	2301      	movs	r3, #1
2ffdfb46:	f88d 3020 	strb.w	r3, [sp, #32]
2ffdfb4a:	e7a7      	b.n	2ffdfa9c <stm32mp1_clk_init+0xcc>
2ffdfb4c:	2c00      	cmp	r4, #0
2ffdfb4e:	d1e4      	bne.n	2ffdfb1a <stm32mp1_clk_init+0x14a>
2ffdfb50:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
2ffdfb54:	f500 71a0 	add.w	r1, r0, #320	; 0x140
2ffdfb58:	f3c3 1301 	ubfx	r3, r3, #4, #2
2ffdfb5c:	429f      	cmp	r7, r3
2ffdfb5e:	d126      	bne.n	2ffdfbae <stm32mp1_clk_init+0x1de>
2ffdfb60:	f7fd f9aa 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdfb64:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
2ffdfb68:	f043 0301 	orr.w	r3, r3, #1
2ffdfb6c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
2ffdfb70:	f8d8 3004 	ldr.w	r3, [r8, #4]
2ffdfb74:	2b00      	cmp	r3, #0
2ffdfb76:	d037      	beq.n	2ffdfbe8 <stm32mp1_clk_init+0x218>
2ffdfb78:	4965      	ldr	r1, [pc, #404]	; (2ffdfd10 <stm32mp1_clk_init+0x340>)
2ffdfb7a:	2001      	movs	r0, #1
2ffdfb7c:	f7fe ffc8 	bl	2ffdeb10 <fdt_osc_read_bool>
2ffdfb80:	4964      	ldr	r1, [pc, #400]	; (2ffdfd14 <stm32mp1_clk_init+0x344>)
2ffdfb82:	4607      	mov	r7, r0
2ffdfb84:	2001      	movs	r0, #1
2ffdfb86:	f7fe ffc3 	bl	2ffdeb10 <fdt_osc_read_bool>
2ffdfb8a:	4963      	ldr	r1, [pc, #396]	; (2ffdfd18 <stm32mp1_clk_init+0x348>)
2ffdfb8c:	4681      	mov	r9, r0
2ffdfb8e:	2001      	movs	r0, #1
2ffdfb90:	f7fe ffbe 	bl	2ffdeb10 <fdt_osc_read_bool>
2ffdfb94:	4606      	mov	r6, r0
2ffdfb96:	f7fd f98f 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdfb9a:	4604      	mov	r4, r0
2ffdfb9c:	f1b9 0f00 	cmp.w	r9, #0
2ffdfba0:	d012      	beq.n	2ffdfbc8 <stm32mp1_clk_init+0x1f8>
2ffdfba2:	2380      	movs	r3, #128	; 0x80
2ffdfba4:	60c3      	str	r3, [r0, #12]
2ffdfba6:	f44f 6380 	mov.w	r3, #1024	; 0x400
2ffdfbaa:	60e3      	str	r3, [r4, #12]
2ffdfbac:	e00e      	b.n	2ffdfbcc <stm32mp1_clk_init+0x1fc>
2ffdfbae:	680a      	ldr	r2, [r1, #0]
2ffdfbb0:	bf34      	ite	cc
2ffdfbb2:	f103 33ff 	addcc.w	r3, r3, #4294967295	; 0xffffffff
2ffdfbb6:	3301      	addcs	r3, #1
2ffdfbb8:	f022 0230 	bic.w	r2, r2, #48	; 0x30
2ffdfbbc:	ea42 1203 	orr.w	r2, r2, r3, lsl #4
2ffdfbc0:	600a      	str	r2, [r1, #0]
2ffdfbc2:	e7cb      	b.n	2ffdfb5c <stm32mp1_clk_init+0x18c>
2ffdfbc4:	9001      	str	r0, [sp, #4]
2ffdfbc6:	e7d3      	b.n	2ffdfb70 <stm32mp1_clk_init+0x1a0>
2ffdfbc8:	2f00      	cmp	r7, #0
2ffdfbca:	d1ec      	bne.n	2ffdfba6 <stm32mp1_clk_init+0x1d6>
2ffdfbcc:	f7fd f974 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdfbd0:	f44f 7280 	mov.w	r2, #256	; 0x100
2ffdfbd4:	f640 0108 	movw	r1, #2056	; 0x808
2ffdfbd8:	60c2      	str	r2, [r0, #12]
2ffdfbda:	2001      	movs	r0, #1
2ffdfbdc:	f7ff fc86 	bl	2ffdf4ec <stm32mp1_osc_wait>
2ffdfbe0:	b116      	cbz	r6, 2ffdfbe8 <stm32mp1_clk_init+0x218>
2ffdfbe2:	f44f 6300 	mov.w	r3, #2048	; 0x800
2ffdfbe6:	60e3      	str	r3, [r4, #12]
2ffdfbe8:	f7fd f966 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdfbec:	2210      	movs	r2, #16
2ffdfbee:	f640 0108 	movw	r1, #2056	; 0x808
2ffdfbf2:	60c2      	str	r2, [r0, #12]
2ffdfbf4:	2001      	movs	r0, #1
2ffdfbf6:	f7ff fc79 	bl	2ffdf4ec <stm32mp1_osc_wait>
2ffdfbfa:	f44f 7000 	mov.w	r0, #512	; 0x200
2ffdfbfe:	f7ff fcb7 	bl	2ffdf570 <stm32mp1_set_clksrc>
2ffdfc02:	4604      	mov	r4, r0
2ffdfc04:	2800      	cmp	r0, #0
2ffdfc06:	d160      	bne.n	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfc08:	f44f 7010 	mov.w	r0, #576	; 0x240
2ffdfc0c:	f7ff fcb0 	bl	2ffdf570 <stm32mp1_set_clksrc>
2ffdfc10:	4604      	mov	r4, r0
2ffdfc12:	2800      	cmp	r0, #0
2ffdfc14:	d159      	bne.n	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfc16:	f44f 6090 	mov.w	r0, #1152	; 0x480
2ffdfc1a:	f7ff fca9 	bl	2ffdf570 <stm32mp1_set_clksrc>
2ffdfc1e:	4604      	mov	r4, r0
2ffdfc20:	2800      	cmp	r0, #0
2ffdfc22:	d152      	bne.n	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfc24:	f8d5 6408 	ldr.w	r6, [r5, #1032]	; 0x408
2ffdfc28:	f416 5600 	ands.w	r6, r6, #8192	; 0x2000
2ffdfc2c:	d03b      	beq.n	2ffdfca6 <stm32mp1_clk_init+0x2d6>
2ffdfc2e:	9b12      	ldr	r3, [sp, #72]	; 0x48
2ffdfc30:	aa40      	add	r2, sp, #256	; 0x100
2ffdfc32:	9918      	ldr	r1, [sp, #96]	; 0x60
2ffdfc34:	2002      	movs	r0, #2
2ffdfc36:	f7ff fab9 	bl	2ffdf1ac <stm32mp1_check_pll_conf>
2ffdfc3a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
2ffdfc3c:	4681      	mov	r9, r0
2ffdfc3e:	9919      	ldr	r1, [sp, #100]	; 0x64
2ffdfc40:	aa46      	add	r2, sp, #280	; 0x118
2ffdfc42:	2003      	movs	r0, #3
2ffdfc44:	f7ff fab2 	bl	2ffdf1ac <stm32mp1_check_pll_conf>
2ffdfc48:	4606      	mov	r6, r0
2ffdfc4a:	f7f8 f891 	bl	2ffd7d70 <get_boot_device>
2ffdfc4e:	4607      	mov	r7, r0
2ffdfc50:	bb58      	cbnz	r0, 2ffdfcaa <stm32mp1_clk_init+0x2da>
2ffdfc52:	9b04      	ldr	r3, [sp, #16]
2ffdfc54:	2b15      	cmp	r3, #21
2ffdfc56:	d02a      	beq.n	2ffdfcae <stm32mp1_clk_init+0x2de>
2ffdfc58:	9b05      	ldr	r3, [sp, #20]
2ffdfc5a:	2b15      	cmp	r3, #21
2ffdfc5c:	d027      	beq.n	2ffdfcae <stm32mp1_clk_init+0x2de>
2ffdfc5e:	f04f 0a00 	mov.w	sl, #0
2ffdfc62:	f1ba 0f02 	cmp.w	sl, #2
2ffdfc66:	d125      	bne.n	2ffdfcb4 <stm32mp1_clk_init+0x2e4>
2ffdfc68:	f1b9 0f00 	cmp.w	r9, #0
2ffdfc6c:	d027      	beq.n	2ffdfcbe <stm32mp1_clk_init+0x2ee>
2ffdfc6e:	f10a 0a01 	add.w	sl, sl, #1
2ffdfc72:	f1ba 0f04 	cmp.w	sl, #4
2ffdfc76:	d1f4      	bne.n	2ffdfc62 <stm32mp1_clk_init+0x292>
2ffdfc78:	f8d8 2000 	ldr.w	r2, [r8]
2ffdfc7c:	2a00      	cmp	r2, #0
2ffdfc7e:	f000 8113 	beq.w	2ffdfea8 <stm32mp1_clk_init+0x4d8>
2ffdfc82:	4b27      	ldr	r3, [pc, #156]	; (2ffdfd20 <stm32mp1_clk_init+0x350>)
2ffdfc84:	f04f 0a00 	mov.w	sl, #0
2ffdfc88:	429a      	cmp	r2, r3
2ffdfc8a:	fa5f f18a 	uxtb.w	r1, sl
2ffdfc8e:	f000 80e4 	beq.w	2ffdfe5a <stm32mp1_clk_init+0x48a>
2ffdfc92:	085b      	lsrs	r3, r3, #1
2ffdfc94:	f10a 0a01 	add.w	sl, sl, #1
2ffdfc98:	f1ba 0f04 	cmp.w	sl, #4
2ffdfc9c:	d1f4      	bne.n	2ffdfc88 <stm32mp1_clk_init+0x2b8>
2ffdfc9e:	4821      	ldr	r0, [pc, #132]	; (2ffdfd24 <stm32mp1_clk_init+0x354>)
2ffdfca0:	f7fc ff24 	bl	2ffdcaec <tf_log>
2ffdfca4:	e6ae      	b.n	2ffdfa04 <stm32mp1_clk_init+0x34>
2ffdfca6:	46b1      	mov	r9, r6
2ffdfca8:	e7cf      	b.n	2ffdfc4a <stm32mp1_clk_init+0x27a>
2ffdfcaa:	2700      	movs	r7, #0
2ffdfcac:	e7d7      	b.n	2ffdfc5e <stm32mp1_clk_init+0x28e>
2ffdfcae:	2601      	movs	r6, #1
2ffdfcb0:	4637      	mov	r7, r6
2ffdfcb2:	e7d4      	b.n	2ffdfc5e <stm32mp1_clk_init+0x28e>
2ffdfcb4:	f1ba 0f03 	cmp.w	sl, #3
2ffdfcb8:	d101      	bne.n	2ffdfcbe <stm32mp1_clk_init+0x2ee>
2ffdfcba:	2e00      	cmp	r6, #0
2ffdfcbc:	d1d7      	bne.n	2ffdfc6e <stm32mp1_clk_init+0x29e>
2ffdfcbe:	4650      	mov	r0, sl
2ffdfcc0:	f7ff fa10 	bl	2ffdf0e4 <stm32mp1_pll_stop>
2ffdfcc4:	4604      	mov	r4, r0
2ffdfcc6:	2800      	cmp	r0, #0
2ffdfcc8:	d0d1      	beq.n	2ffdfc6e <stm32mp1_clk_init+0x29e>
2ffdfcca:	4620      	mov	r0, r4
2ffdfccc:	b04d      	add	sp, #308	; 0x134
2ffdfcce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffdfcd2:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffdfcd6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
2ffdfcda:	4299      	cmp	r1, r3
2ffdfcdc:	bf08      	it	eq
2ffdfcde:	4290      	cmpeq	r0, r2
2ffdfce0:	f080 80d8 	bcs.w	2ffdfe94 <stm32mp1_clk_init+0x4c4>
2ffdfce4:	f8d4 2808 	ldr.w	r2, [r4, #2056]	; 0x808
2ffdfce8:	4641      	mov	r1, r8
2ffdfcea:	480f      	ldr	r0, [pc, #60]	; (2ffdfd28 <stm32mp1_clk_init+0x358>)
2ffdfcec:	f06f 043b 	mvn.w	r4, #59	; 0x3b
2ffdfcf0:	f7fc fefc 	bl	2ffdcaec <tf_log>
2ffdfcf4:	e7e9      	b.n	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfcf6:	bf00      	nop
2ffdfcf8:	2ffe5de7 	.word	0x2ffe5de7
2ffdfcfc:	2ffe5df1 	.word	0x2ffe5df1
2ffdfd00:	2ffe5dfb 	.word	0x2ffe5dfb
2ffdfd04:	2ffe4e9d 	.word	0x2ffe4e9d
2ffdfd08:	2ffe5e05 	.word	0x2ffe5e05
2ffdfd0c:	2ffe9078 	.word	0x2ffe9078
2ffdfd10:	2ffe5e09 	.word	0x2ffe5e09
2ffdfd14:	2ffe5e13 	.word	0x2ffe5e13
2ffdfd18:	2ffe5e20 	.word	0x2ffe5e20
2ffdfd1c:	2ffe5e27 	.word	0x2ffe5e27
2ffdfd20:	03d09000 	.word	0x03d09000
2ffdfd24:	2ffe5e56 	.word	0x2ffe5e56
2ffdfd28:	2ffe5e30 	.word	0x2ffe5e30
2ffdfd2c:	2ffe5cd4 	.word	0x2ffe5cd4
2ffdfd30:	9818      	ldr	r0, [sp, #96]	; 0x60
2ffdfd32:	f7ff fc1d 	bl	2ffdf570 <stm32mp1_set_clksrc>
2ffdfd36:	4604      	mov	r4, r0
2ffdfd38:	2800      	cmp	r0, #0
2ffdfd3a:	f000 8107 	beq.w	2ffdff4c <stm32mp1_clk_init+0x57c>
2ffdfd3e:	e7c4      	b.n	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfd40:	f1b8 0f03 	cmp.w	r8, #3
2ffdfd44:	d103      	bne.n	2ffdfd4e <stm32mp1_clk_init+0x37e>
2ffdfd46:	b116      	cbz	r6, 2ffdfd4e <stm32mp1_clk_init+0x37e>
2ffdfd48:	2f00      	cmp	r7, #0
2ffdfd4a:	f000 8115 	beq.w	2ffdff78 <stm32mp1_clk_init+0x5a8>
2ffdfd4e:	ab08      	add	r3, sp, #32
2ffdfd50:	f813 2008 	ldrb.w	r2, [r3, r8]
2ffdfd54:	2a00      	cmp	r2, #0
2ffdfd56:	f000 810f 	beq.w	2ffdff78 <stm32mp1_clk_init+0x5a8>
2ffdfd5a:	f1b8 0f03 	cmp.w	r8, #3
2ffdfd5e:	d105      	bne.n	2ffdfd6c <stm32mp1_clk_init+0x39c>
2ffdfd60:	b127      	cbz	r7, 2ffdfd6c <stm32mp1_clk_init+0x39c>
2ffdfd62:	a946      	add	r1, sp, #280	; 0x118
2ffdfd64:	4640      	mov	r0, r8
2ffdfd66:	f7ff fc87 	bl	2ffdf678 <stm32mp1_pll_config_output>
2ffdfd6a:	e105      	b.n	2ffdff78 <stm32mp1_clk_init+0x5a8>
2ffdfd6c:	ab0c      	add	r3, sp, #48	; 0x30
2ffdfd6e:	2118      	movs	r1, #24
2ffdfd70:	4640      	mov	r0, r8
2ffdfd72:	f853 2028 	ldr.w	r2, [r3, r8, lsl #2]
2ffdfd76:	ab34      	add	r3, sp, #208	; 0xd0
2ffdfd78:	fb01 3108 	mla	r1, r1, r8, r3
2ffdfd7c:	f7ff fc96 	bl	2ffdf6ac <stm32mp1_pll_config>
2ffdfd80:	4604      	mov	r4, r0
2ffdfd82:	2800      	cmp	r0, #0
2ffdfd84:	d1a1      	bne.n	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfd86:	aa07      	add	r2, sp, #28
2ffdfd88:	f818 2002 	ldrb.w	r2, [r8, r2]
2ffdfd8c:	b1da      	cbz	r2, 2ffdfdc6 <stm32mp1_clk_init+0x3f6>
2ffdfd8e:	f8db 4008 	ldr.w	r4, [fp, #8]
2ffdfd92:	4bb5      	ldr	r3, [pc, #724]	; (2ffe0068 <stm32mp1_clk_init+0x698>)
2ffdfd94:	f8db 2004 	ldr.w	r2, [fp, #4]
2ffdfd98:	03e4      	lsls	r4, r4, #15
2ffdfd9a:	ea03 4202 	and.w	r2, r3, r2, lsl #16
2ffdfd9e:	b2a4      	uxth	r4, r4
2ffdfda0:	4314      	orrs	r4, r2
2ffdfda2:	f8db 2000 	ldr.w	r2, [fp]
2ffdfda6:	f3c2 020c 	ubfx	r2, r2, #0, #13
2ffdfdaa:	4314      	orrs	r4, r2
2ffdfdac:	f7fd f884 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdfdb0:	f8ba 200e 	ldrh.w	r2, [sl, #14]
2ffdfdb4:	5014      	str	r4, [r2, r0]
2ffdfdb6:	f7fd f87f 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdfdba:	f8ba 100c 	ldrh.w	r1, [sl, #12]
2ffdfdbe:	580a      	ldr	r2, [r1, r0]
2ffdfdc0:	f042 0204 	orr.w	r2, r2, #4
2ffdfdc4:	500a      	str	r2, [r1, r0]
2ffdfdc6:	4640      	mov	r0, r8
2ffdfdc8:	f7ff f946 	bl	2ffdf058 <stm32mp1_pll_start>
2ffdfdcc:	e0d4      	b.n	2ffdff78 <stm32mp1_clk_init+0x5a8>
2ffdfdce:	6971      	ldr	r1, [r6, #20]
2ffdfdd0:	4640      	mov	r0, r8
2ffdfdd2:	f7ff fc0d 	bl	2ffdf5f0 <stm32mp1_pll_output>
2ffdfdd6:	4604      	mov	r4, r0
2ffdfdd8:	2800      	cmp	r0, #0
2ffdfdda:	f000 80e0 	beq.w	2ffdff9e <stm32mp1_clk_init+0x5ce>
2ffdfdde:	e774      	b.n	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfde0:	b307      	cbz	r7, 2ffdfe24 <stm32mp1_clk_init+0x454>
2ffdfde2:	f8d5 991c 	ldr.w	r9, [r5, #2332]	; 0x91c
2ffdfde6:	f04f 0800 	mov.w	r8, #0
2ffdfdea:	f640 5203 	movw	r2, #3331	; 0xd03
2ffdfdee:	46c3      	mov	fp, r8
2ffdfdf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
2ffdfdf2:	ebb8 0f93 	cmp.w	r8, r3, lsr #2
2ffdfdf6:	d317      	bcc.n	2ffdfe28 <stm32mp1_clk_init+0x458>
2ffdfdf8:	f1bb 0f00 	cmp.w	fp, #0
2ffdfdfc:	d003      	beq.n	2ffdfe06 <stm32mp1_clk_init+0x436>
2ffdfdfe:	f640 5003 	movw	r0, #3331	; 0xd03
2ffdfe02:	f7ff fb29 	bl	2ffdf458 <stm32mp1_pkcs_config>
2ffdfe06:	2f00      	cmp	r7, #0
2ffdfe08:	f000 8116 	beq.w	2ffe0038 <stm32mp1_clk_init+0x668>
2ffdfe0c:	f8d5 391c 	ldr.w	r3, [r5, #2332]	; 0x91c
2ffdfe10:	f009 0913 	and.w	r9, r9, #19
2ffdfe14:	f003 0313 	and.w	r3, r3, #19
2ffdfe18:	454b      	cmp	r3, r9
2ffdfe1a:	f000 810d 	beq.w	2ffe0038 <stm32mp1_clk_init+0x668>
2ffdfe1e:	f06f 040e 	mvn.w	r4, #14
2ffdfe22:	e752      	b.n	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfe24:	46b9      	mov	r9, r7
2ffdfe26:	e7de      	b.n	2ffdfde6 <stm32mp1_clk_init+0x416>
2ffdfe28:	f85a 1028 	ldr.w	r1, [sl, r8, lsl #2]
2ffdfe2c:	0e08      	lsrs	r0, r1, #24
2ffdfe2e:	f3c1 2307 	ubfx	r3, r1, #8, #8
2ffdfe32:	ea40 6001 	orr.w	r0, r0, r1, lsl #24
2ffdfe36:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
2ffdfe3a:	f3c1 4007 	ubfx	r0, r1, #16, #8
2ffdfe3e:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
2ffdfe42:	4290      	cmp	r0, r2
2ffdfe44:	d006      	beq.n	2ffdfe54 <stm32mp1_clk_init+0x484>
2ffdfe46:	f7ff fb07 	bl	2ffdf458 <stm32mp1_pkcs_config>
2ffdfe4a:	f640 5203 	movw	r2, #3331	; 0xd03
2ffdfe4e:	f108 0801 	add.w	r8, r8, #1
2ffdfe52:	e7cd      	b.n	2ffdfdf0 <stm32mp1_clk_init+0x420>
2ffdfe54:	f04f 0b01 	mov.w	fp, #1
2ffdfe58:	e7f9      	b.n	2ffdfe4e <stm32mp1_clk_init+0x47e>
2ffdfe5a:	b301      	cbz	r1, 2ffdfe9e <stm32mp1_clk_init+0x4ce>
2ffdfe5c:	f7fd f82c 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdfe60:	6983      	ldr	r3, [r0, #24]
2ffdfe62:	4604      	mov	r4, r0
2ffdfe64:	f600 0808 	addw	r8, r0, #2056	; 0x808
2ffdfe68:	f023 0303 	bic.w	r3, r3, #3
2ffdfe6c:	ea43 030a 	orr.w	r3, r3, sl
2ffdfe70:	6183      	str	r3, [r0, #24]
2ffdfe72:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffdfe76:	ec5b af0e 	mrrc	15, 0, sl, fp, cr14
2ffdfe7a:	497c      	ldr	r1, [pc, #496]	; (2ffe006c <stm32mp1_clk_init+0x69c>)
2ffdfe7c:	2300      	movs	r3, #0
2ffdfe7e:	4a7c      	ldr	r2, [pc, #496]	; (2ffe0070 <stm32mp1_clk_init+0x6a0>)
2ffdfe80:	fba0 0101 	umull	r0, r1, r0, r1
2ffdfe84:	f002 ebec 	blx	2ffe2660 <__aeabi_uldivmod>
2ffdfe88:	eb10 030a 	adds.w	r3, r0, sl
2ffdfe8c:	9302      	str	r3, [sp, #8]
2ffdfe8e:	eb41 030b 	adc.w	r3, r1, fp
2ffdfe92:	9303      	str	r3, [sp, #12]
2ffdfe94:	f8d8 3000 	ldr.w	r3, [r8]
2ffdfe98:	075a      	lsls	r2, r3, #29
2ffdfe9a:	f57f af1a 	bpl.w	2ffdfcd2 <stm32mp1_clk_init+0x302>
2ffdfe9e:	2080      	movs	r0, #128	; 0x80
2ffdfea0:	f7ff fc41 	bl	2ffdf726 <stm32mp_clk_get_rate>
2ffdfea4:	f7fe ff32 	bl	2ffded0c <stm32mp_stgen_config>
2ffdfea8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
2ffdfeaa:	f105 0130 	add.w	r1, r5, #48	; 0x30
2ffdfeae:	f003 033f 	and.w	r3, r3, #63	; 0x3f
2ffdfeb2:	62eb      	str	r3, [r5, #44]	; 0x2c
2ffdfeb4:	981e      	ldr	r0, [sp, #120]	; 0x78
2ffdfeb6:	f7ff fae3 	bl	2ffdf480 <stm32mp1_set_clkdiv>
2ffdfeba:	4604      	mov	r4, r0
2ffdfebc:	2800      	cmp	r0, #0
2ffdfebe:	f47f af04 	bne.w	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfec2:	9823      	ldr	r0, [sp, #140]	; 0x8c
2ffdfec4:	f105 013c 	add.w	r1, r5, #60	; 0x3c
2ffdfec8:	f7ff fada 	bl	2ffdf480 <stm32mp1_set_clkdiv>
2ffdfecc:	4604      	mov	r4, r0
2ffdfece:	2800      	cmp	r0, #0
2ffdfed0:	f47f aefb 	bne.w	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfed4:	9824      	ldr	r0, [sp, #144]	; 0x90
2ffdfed6:	f105 0140 	add.w	r1, r5, #64	; 0x40
2ffdfeda:	f7ff fad1 	bl	2ffdf480 <stm32mp1_set_clkdiv>
2ffdfede:	4604      	mov	r4, r0
2ffdfee0:	2800      	cmp	r0, #0
2ffdfee2:	f47f aef2 	bne.w	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfee6:	981f      	ldr	r0, [sp, #124]	; 0x7c
2ffdfee8:	f505 6103 	add.w	r1, r5, #2096	; 0x830
2ffdfeec:	f7ff fac8 	bl	2ffdf480 <stm32mp1_set_clkdiv>
2ffdfef0:	4604      	mov	r4, r0
2ffdfef2:	2800      	cmp	r0, #0
2ffdfef4:	f47f aee9 	bne.w	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdfef8:	9820      	ldr	r0, [sp, #128]	; 0x80
2ffdfefa:	f605 0134 	addw	r1, r5, #2100	; 0x834
2ffdfefe:	f7ff fabf 	bl	2ffdf480 <stm32mp1_set_clkdiv>
2ffdff02:	4604      	mov	r4, r0
2ffdff04:	2800      	cmp	r0, #0
2ffdff06:	f47f aee0 	bne.w	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdff0a:	9821      	ldr	r0, [sp, #132]	; 0x84
2ffdff0c:	f605 0138 	addw	r1, r5, #2104	; 0x838
2ffdff10:	f7ff fab6 	bl	2ffdf480 <stm32mp1_set_clkdiv>
2ffdff14:	4604      	mov	r4, r0
2ffdff16:	2800      	cmp	r0, #0
2ffdff18:	f47f aed7 	bne.w	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdff1c:	9822      	ldr	r0, [sp, #136]	; 0x88
2ffdff1e:	f605 013c 	addw	r1, r5, #2108	; 0x83c
2ffdff22:	f7ff faad 	bl	2ffdf480 <stm32mp1_set_clkdiv>
2ffdff26:	4604      	mov	r4, r0
2ffdff28:	2800      	cmp	r0, #0
2ffdff2a:	f47f aece 	bne.w	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdff2e:	9b25      	ldr	r3, [sp, #148]	; 0x94
2ffdff30:	f003 033f 	and.w	r3, r3, #63	; 0x3f
2ffdff34:	646b      	str	r3, [r5, #68]	; 0x44
2ffdff36:	9817      	ldr	r0, [sp, #92]	; 0x5c
2ffdff38:	f7ff fb1a 	bl	2ffdf570 <stm32mp1_set_clksrc>
2ffdff3c:	4604      	mov	r4, r0
2ffdff3e:	2800      	cmp	r0, #0
2ffdff40:	f47f aec3 	bne.w	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdff44:	f1b9 0f00 	cmp.w	r9, #0
2ffdff48:	f43f aef2 	beq.w	2ffdfd30 <stm32mp1_clk_init+0x360>
2ffdff4c:	b936      	cbnz	r6, 2ffdff5c <stm32mp1_clk_init+0x58c>
2ffdff4e:	9819      	ldr	r0, [sp, #100]	; 0x64
2ffdff50:	f7ff fb0e 	bl	2ffdf570 <stm32mp1_set_clksrc>
2ffdff54:	4604      	mov	r4, r0
2ffdff56:	2800      	cmp	r0, #0
2ffdff58:	f47f aeb7 	bne.w	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdff5c:	f8df a11c 	ldr.w	sl, [pc, #284]	; 2ffe007c <stm32mp1_clk_init+0x6ac>
2ffdff60:	f10d 0ba0 	add.w	fp, sp, #160	; 0xa0
2ffdff64:	f04f 0800 	mov.w	r8, #0
2ffdff68:	f1b8 0f02 	cmp.w	r8, #2
2ffdff6c:	f47f aee8 	bne.w	2ffdfd40 <stm32mp1_clk_init+0x370>
2ffdff70:	f1b9 0f00 	cmp.w	r9, #0
2ffdff74:	f43f aeeb 	beq.w	2ffdfd4e <stm32mp1_clk_init+0x37e>
2ffdff78:	f108 0801 	add.w	r8, r8, #1
2ffdff7c:	f10b 0b0c 	add.w	fp, fp, #12
2ffdff80:	f1b8 0f04 	cmp.w	r8, #4
2ffdff84:	f10a 0a20 	add.w	sl, sl, #32
2ffdff88:	d1ee      	bne.n	2ffdff68 <stm32mp1_clk_init+0x598>
2ffdff8a:	ae34      	add	r6, sp, #208	; 0xd0
2ffdff8c:	f04f 0800 	mov.w	r8, #0
2ffdff90:	9a00      	ldr	r2, [sp, #0]
2ffdff92:	f812 3b01 	ldrb.w	r3, [r2], #1
2ffdff96:	9200      	str	r2, [sp, #0]
2ffdff98:	2b00      	cmp	r3, #0
2ffdff9a:	f47f af18 	bne.w	2ffdfdce <stm32mp1_clk_init+0x3fe>
2ffdff9e:	f108 0801 	add.w	r8, r8, #1
2ffdffa2:	3618      	adds	r6, #24
2ffdffa4:	f1b8 0f04 	cmp.w	r8, #4
2ffdffa8:	d1f2      	bne.n	2ffdff90 <stm32mp1_clk_init+0x5c0>
2ffdffaa:	4e32      	ldr	r6, [pc, #200]	; (2ffe0074 <stm32mp1_clk_init+0x6a4>)
2ffdffac:	6933      	ldr	r3, [r6, #16]
2ffdffae:	b12b      	cbz	r3, 2ffdffbc <stm32mp1_clk_init+0x5ec>
2ffdffb0:	4642      	mov	r2, r8
2ffdffb2:	f44f 71a0 	mov.w	r1, #320	; 0x140
2ffdffb6:	2001      	movs	r0, #1
2ffdffb8:	f7ff fa98 	bl	2ffdf4ec <stm32mp1_osc_wait>
2ffdffbc:	9814      	ldr	r0, [sp, #80]	; 0x50
2ffdffbe:	f7ff fad7 	bl	2ffdf570 <stm32mp1_set_clksrc>
2ffdffc2:	4604      	mov	r4, r0
2ffdffc4:	2800      	cmp	r0, #0
2ffdffc6:	f47f ae80 	bne.w	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdffca:	9815      	ldr	r0, [sp, #84]	; 0x54
2ffdffcc:	f7ff fad0 	bl	2ffdf570 <stm32mp1_set_clksrc>
2ffdffd0:	4604      	mov	r4, r0
2ffdffd2:	2800      	cmp	r0, #0
2ffdffd4:	f47f ae79 	bne.w	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdffd8:	9816      	ldr	r0, [sp, #88]	; 0x58
2ffdffda:	f7ff fac9 	bl	2ffdf570 <stm32mp1_set_clksrc>
2ffdffde:	4604      	mov	r4, r0
2ffdffe0:	2800      	cmp	r0, #0
2ffdffe2:	f47f ae72 	bne.w	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffdffe6:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
2ffdffea:	f7fc ff65 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffdffee:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
2ffdfff2:	02db      	lsls	r3, r3, #11
2ffdfff4:	d502      	bpl.n	2ffdfffc <stm32mp1_clk_init+0x62c>
2ffdfff6:	f5b8 5fa0 	cmp.w	r8, #5120	; 0x1400
2ffdfffa:	d00d      	beq.n	2ffe0018 <stm32mp1_clk_init+0x648>
2ffdfffc:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
2ffe0000:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
2ffe0004:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
2ffe0008:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
2ffe000c:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
2ffe0010:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2ffe0014:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
2ffe0018:	9b01      	ldr	r3, [sp, #4]
2ffe001a:	b12b      	cbz	r3, 2ffe0028 <stm32mp1_clk_init+0x658>
2ffe001c:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
2ffe0020:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2ffe0024:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
2ffe0028:	4813      	ldr	r0, [pc, #76]	; (2ffe0078 <stm32mp1_clk_init+0x6a8>)
2ffe002a:	a909      	add	r1, sp, #36	; 0x24
2ffe002c:	f7fe fe14 	bl	2ffdec58 <fdt_rcc_read_prop>
2ffe0030:	4682      	mov	sl, r0
2ffe0032:	2800      	cmp	r0, #0
2ffe0034:	f47f aed4 	bne.w	2ffdfde0 <stm32mp1_clk_init+0x410>
2ffe0038:	6836      	ldr	r6, [r6, #0]
2ffe003a:	b946      	cbnz	r6, 2ffe004e <stm32mp1_clk_init+0x67e>
2ffe003c:	f7fc ff3c 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffe0040:	2201      	movs	r2, #1
2ffe0042:	f640 0108 	movw	r1, #2056	; 0x808
2ffe0046:	6102      	str	r2, [r0, #16]
2ffe0048:	4630      	mov	r0, r6
2ffe004a:	f7ff fa4f 	bl	2ffdf4ec <stm32mp1_osc_wait>
2ffe004e:	2080      	movs	r0, #128	; 0x80
2ffe0050:	f7ff fb69 	bl	2ffdf726 <stm32mp_clk_get_rate>
2ffe0054:	f7fe fe5a 	bl	2ffded0c <stm32mp_stgen_config>
2ffe0058:	f8d5 30d8 	ldr.w	r3, [r5, #216]	; 0xd8
2ffe005c:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2ffe0060:	f8c5 30d8 	str.w	r3, [r5, #216]	; 0xd8
2ffe0064:	e631      	b.n	2ffdfcca <stm32mp1_clk_init+0x2fa>
2ffe0066:	bf00      	nop
2ffe0068:	7fff0000 	.word	0x7fff0000
2ffe006c:	00030d40 	.word	0x00030d40
2ffe0070:	000f4240 	.word	0x000f4240
2ffe0074:	2ffe9078 	.word	0x2ffe9078
2ffe0078:	2ffe5e4e 	.word	0x2ffe5e4e
2ffe007c:	2ffe60dc 	.word	0x2ffe60dc

2ffe0080 <stm32mp1_clk_probe>:
2ffe0080:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffe0082:	2400      	movs	r4, #0
2ffe0084:	4d24      	ldr	r5, [pc, #144]	; (2ffe0118 <stm32mp1_clk_probe+0x98>)
2ffe0086:	4e25      	ldr	r6, [pc, #148]	; (2ffe011c <stm32mp1_clk_probe+0x9c>)
2ffe0088:	f855 0b04 	ldr.w	r0, [r5], #4
2ffe008c:	a901      	add	r1, sp, #4
2ffe008e:	f7fe fcef 	bl	2ffdea70 <fdt_osc_read_freq>
2ffe0092:	b910      	cbnz	r0, 2ffe009a <stm32mp1_clk_probe+0x1a>
2ffe0094:	9b01      	ldr	r3, [sp, #4]
2ffe0096:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
2ffe009a:	3401      	adds	r4, #1
2ffe009c:	2c06      	cmp	r4, #6
2ffe009e:	d1f3      	bne.n	2ffe0088 <stm32mp1_clk_probe+0x8>
2ffe00a0:	20e4      	movs	r0, #228	; 0xe4
2ffe00a2:	f7ff fb37 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00a6:	20dc      	movs	r0, #220	; 0xdc
2ffe00a8:	f7ff fb34 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00ac:	20dd      	movs	r0, #221	; 0xdd
2ffe00ae:	f7ff fb31 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00b2:	20de      	movs	r0, #222	; 0xde
2ffe00b4:	f7ff fb2e 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00b8:	20df      	movs	r0, #223	; 0xdf
2ffe00ba:	f7ff fb2b 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00be:	20e2      	movs	r0, #226	; 0xe2
2ffe00c0:	f7ff fb28 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00c4:	20e0      	movs	r0, #224	; 0xe0
2ffe00c6:	f7ff fb25 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00ca:	20e1      	movs	r0, #225	; 0xe1
2ffe00cc:	f7ff fb22 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00d0:	20e5      	movs	r0, #229	; 0xe5
2ffe00d2:	f7ff fb1f 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00d6:	20e6      	movs	r0, #230	; 0xe6
2ffe00d8:	f7ff fb1c 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00dc:	2043      	movs	r0, #67	; 0x43
2ffe00de:	f7ff fb19 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00e2:	2042      	movs	r0, #66	; 0x42
2ffe00e4:	f7ff fb16 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00e8:	2071      	movs	r0, #113	; 0x71
2ffe00ea:	f7ff fb13 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00ee:	2080      	movs	r0, #128	; 0x80
2ffe00f0:	f7ff fb10 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00f4:	2041      	movs	r0, #65	; 0x41
2ffe00f6:	f7ff fb0d 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe00fa:	20c2      	movs	r0, #194	; 0xc2
2ffe00fc:	f7ff fb13 	bl	2ffdf726 <stm32mp_clk_get_rate>
2ffe0100:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
2ffe0104:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2ffe0108:	fbb0 f0f3 	udiv	r0, r0, r3
2ffe010c:	4b04      	ldr	r3, [pc, #16]	; (2ffe0120 <stm32mp1_clk_probe+0xa0>)
2ffe010e:	6018      	str	r0, [r3, #0]
2ffe0110:	2000      	movs	r0, #0
2ffe0112:	b002      	add	sp, #8
2ffe0114:	bd70      	pop	{r4, r5, r6, pc}
2ffe0116:	bf00      	nop
2ffe0118:	2ffe71d8 	.word	0x2ffe71d8
2ffe011c:	2ffe9078 	.word	0x2ffe9078
2ffe0120:	2ffe8f44 	.word	0x2ffe8f44

2ffe0124 <ddr_enable_clock>:
2ffe0124:	b508      	push	{r3, lr}
2ffe0126:	f7ff fae9 	bl	2ffdf6fc <stm32mp1_clk_rcc_regs_lock>
2ffe012a:	f7fc fec5 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffe012e:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
2ffe0132:	f443 7315 	orr.w	r3, r3, #596	; 0x254
2ffe0136:	f043 0301 	orr.w	r3, r3, #1
2ffe013a:	f8c0 30d8 	str.w	r3, [r0, #216]	; 0xd8
2ffe013e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe0142:	f7ff bae1 	b.w	2ffdf708 <stm32mp1_clk_rcc_regs_unlock>
	...

2ffe0148 <ddr_read_sr_mode>:
2ffe0148:	b508      	push	{r3, lr}
2ffe014a:	f7fc fea9 	bl	2ffdcea0 <stm32mp_ddrctrl_base>
2ffe014e:	6b03      	ldr	r3, [r0, #48]	; 0x30
2ffe0150:	4a02      	ldr	r2, [pc, #8]	; (2ffe015c <ddr_read_sr_mode+0x14>)
2ffe0152:	f003 0309 	and.w	r3, r3, #9
2ffe0156:	5cd0      	ldrb	r0, [r2, r3]
2ffe0158:	bd08      	pop	{r3, pc}
2ffe015a:	bf00      	nop
2ffe015c:	2ffe62b3 	.word	0x2ffe62b3

2ffe0160 <ddr_set_sr_mode>:
2ffe0160:	2802      	cmp	r0, #2
2ffe0162:	b538      	push	{r3, r4, r5, lr}
2ffe0164:	d064      	beq.n	2ffe0230 <ddr_set_sr_mode+0xd0>
2ffe0166:	2803      	cmp	r0, #3
2ffe0168:	f000 809a 	beq.w	2ffe02a0 <ddr_set_sr_mode+0x140>
2ffe016c:	2801      	cmp	r0, #1
2ffe016e:	f040 80d3 	bne.w	2ffe0318 <ddr_set_sr_mode+0x1b8>
2ffe0172:	f7fc fea1 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffe0176:	4604      	mov	r4, r0
2ffe0178:	f7fc fe92 	bl	2ffdcea0 <stm32mp_ddrctrl_base>
2ffe017c:	4605      	mov	r5, r0
2ffe017e:	f7ff fabd 	bl	2ffdf6fc <stm32mp1_clk_rcc_regs_lock>
2ffe0182:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe0186:	f043 0302 	orr.w	r3, r3, #2
2ffe018a:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe018e:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe0192:	f043 0308 	orr.w	r3, r3, #8
2ffe0196:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe019a:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe019e:	f043 0301 	orr.w	r3, r3, #1
2ffe01a2:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe01a6:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe01aa:	f043 0304 	orr.w	r3, r3, #4
2ffe01ae:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe01b2:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe01b6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
2ffe01ba:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe01be:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe01c2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
2ffe01c6:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe01ca:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe01ce:	f043 0340 	orr.w	r3, r3, #64	; 0x40
2ffe01d2:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe01d6:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe01da:	f443 7300 	orr.w	r3, r3, #512	; 0x200
2ffe01de:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe01e2:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe01e6:	f043 0310 	orr.w	r3, r3, #16
2ffe01ea:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe01ee:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe01f2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
2ffe01f6:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe01fa:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe01fe:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2ffe0202:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe0206:	f7ff fa7f 	bl	2ffdf708 <stm32mp1_clk_rcc_regs_unlock>
2ffe020a:	6bab      	ldr	r3, [r5, #56]	; 0x38
2ffe020c:	f023 0301 	bic.w	r3, r3, #1
2ffe0210:	63ab      	str	r3, [r5, #56]	; 0x38
2ffe0212:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2ffe0214:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2ffe0218:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2ffe021c:	636b      	str	r3, [r5, #52]	; 0x34
2ffe021e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2ffe0220:	f023 0308 	bic.w	r3, r3, #8
2ffe0224:	632b      	str	r3, [r5, #48]	; 0x30
2ffe0226:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2ffe0228:	f023 0301 	bic.w	r3, r3, #1
2ffe022c:	632b      	str	r3, [r5, #48]	; 0x30
2ffe022e:	bd38      	pop	{r3, r4, r5, pc}
2ffe0230:	f7fc fe42 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffe0234:	4604      	mov	r4, r0
2ffe0236:	f7fc fe33 	bl	2ffdcea0 <stm32mp_ddrctrl_base>
2ffe023a:	4605      	mov	r5, r0
2ffe023c:	f7ff fa5e 	bl	2ffdf6fc <stm32mp1_clk_rcc_regs_lock>
2ffe0240:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe0244:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2ffe0248:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe024c:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe0250:	f023 0302 	bic.w	r3, r3, #2
2ffe0254:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe0258:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe025c:	f023 0308 	bic.w	r3, r3, #8
2ffe0260:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe0264:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe0268:	f043 0320 	orr.w	r3, r3, #32
2ffe026c:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe0270:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe0274:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2ffe0278:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
2ffe027c:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe0280:	f7ff fa42 	bl	2ffdf708 <stm32mp1_clk_rcc_regs_unlock>
2ffe0284:	6bab      	ldr	r3, [r5, #56]	; 0x38
2ffe0286:	f043 0301 	orr.w	r3, r3, #1
2ffe028a:	63ab      	str	r3, [r5, #56]	; 0x38
2ffe028c:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2ffe028e:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2ffe0292:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2ffe0296:	636b      	str	r3, [r5, #52]	; 0x34
2ffe0298:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2ffe029a:	f043 0308 	orr.w	r3, r3, #8
2ffe029e:	e7c5      	b.n	2ffe022c <ddr_set_sr_mode+0xcc>
2ffe02a0:	f7fc fe0a 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffe02a4:	4604      	mov	r4, r0
2ffe02a6:	f7fc fdfb 	bl	2ffdcea0 <stm32mp_ddrctrl_base>
2ffe02aa:	4605      	mov	r5, r0
2ffe02ac:	f7ff fa26 	bl	2ffdf6fc <stm32mp1_clk_rcc_regs_lock>
2ffe02b0:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe02b4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2ffe02b8:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe02bc:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe02c0:	f043 0302 	orr.w	r3, r3, #2
2ffe02c4:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe02c8:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe02cc:	f043 0308 	orr.w	r3, r3, #8
2ffe02d0:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe02d4:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe02d8:	f043 0320 	orr.w	r3, r3, #32
2ffe02dc:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe02e0:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2ffe02e4:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2ffe02e8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2ffe02ec:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2ffe02f0:	f7ff fa0a 	bl	2ffdf708 <stm32mp1_clk_rcc_regs_unlock>
2ffe02f4:	6bab      	ldr	r3, [r5, #56]	; 0x38
2ffe02f6:	f043 0301 	orr.w	r3, r3, #1
2ffe02fa:	63ab      	str	r3, [r5, #56]	; 0x38
2ffe02fc:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2ffe02fe:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2ffe0302:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2ffe0306:	636b      	str	r3, [r5, #52]	; 0x34
2ffe0308:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2ffe030a:	f043 0308 	orr.w	r3, r3, #8
2ffe030e:	632b      	str	r3, [r5, #48]	; 0x30
2ffe0310:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2ffe0312:	f043 0301 	orr.w	r3, r3, #1
2ffe0316:	e789      	b.n	2ffe022c <ddr_set_sr_mode+0xcc>
2ffe0318:	4803      	ldr	r0, [pc, #12]	; (2ffe0328 <ddr_set_sr_mode+0x1c8>)
2ffe031a:	f7fc fbe7 	bl	2ffdcaec <tf_log>
2ffe031e:	f7fc fc83 	bl	2ffdcc28 <console_flush>
2ffe0322:	f7f5 ef9e 	blx	2ffd6260 <do_panic>
2ffe0326:	bf00      	nop
2ffe0328:	2ffe6297 	.word	0x2ffe6297

2ffe032c <fdt32_to_cpu>:
2ffe032c:	ba00      	rev	r0, r0
2ffe032e:	4770      	bx	lr

2ffe0330 <set_gpio>:
2ffe0330:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffe0334:	4680      	mov	r8, r0
2ffe0336:	f8dd 9020 	ldr.w	r9, [sp, #32]
2ffe033a:	460d      	mov	r5, r1
2ffe033c:	9f09      	ldr	r7, [sp, #36]	; 0x24
2ffe033e:	4692      	mov	sl, r2
2ffe0340:	461e      	mov	r6, r3
2ffe0342:	f7fc fdc5 	bl	2ffdced0 <stm32_get_gpio_bank_base>
2ffe0346:	4604      	mov	r4, r0
2ffe0348:	4640      	mov	r0, r8
2ffe034a:	f7fc fe95 	bl	2ffdd078 <stm32_get_gpio_bank_clock>
2ffe034e:	2d0f      	cmp	r5, #15
2ffe0350:	4680      	mov	r8, r0
2ffe0352:	d903      	bls.n	2ffe035c <set_gpio+0x2c>
2ffe0354:	482c      	ldr	r0, [pc, #176]	; (2ffe0408 <set_gpio+0xd8>)
2ffe0356:	21d0      	movs	r1, #208	; 0xd0
2ffe0358:	f002 fddc 	bl	2ffe2f14 <__assert>
2ffe035c:	f7ff f9da 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe0360:	006b      	lsls	r3, r5, #1
2ffe0362:	2103      	movs	r1, #3
2ffe0364:	6820      	ldr	r0, [r4, #0]
2ffe0366:	f01a 0f10 	tst.w	sl, #16
2ffe036a:	fa01 f103 	lsl.w	r1, r1, r3
2ffe036e:	ea6f 0201 	mvn.w	r2, r1
2ffe0372:	ea20 0101 	bic.w	r1, r0, r1
2ffe0376:	6021      	str	r1, [r4, #0]
2ffe0378:	f02a 0110 	bic.w	r1, sl, #16
2ffe037c:	6820      	ldr	r0, [r4, #0]
2ffe037e:	fa01 f103 	lsl.w	r1, r1, r3
2ffe0382:	ea41 0100 	orr.w	r1, r1, r0
2ffe0386:	6021      	str	r1, [r4, #0]
2ffe0388:	f04f 0101 	mov.w	r1, #1
2ffe038c:	6860      	ldr	r0, [r4, #4]
2ffe038e:	fa01 f105 	lsl.w	r1, r1, r5
2ffe0392:	bf14      	ite	ne
2ffe0394:	4301      	orrne	r1, r0
2ffe0396:	ea20 0101 	biceq.w	r1, r0, r1
2ffe039a:	2d07      	cmp	r5, #7
2ffe039c:	6061      	str	r1, [r4, #4]
2ffe039e:	68a1      	ldr	r1, [r4, #8]
2ffe03a0:	fa06 f603 	lsl.w	r6, r6, r3
2ffe03a4:	fa09 f303 	lsl.w	r3, r9, r3
2ffe03a8:	ea01 0102 	and.w	r1, r1, r2
2ffe03ac:	60a1      	str	r1, [r4, #8]
2ffe03ae:	68a1      	ldr	r1, [r4, #8]
2ffe03b0:	ea46 0601 	orr.w	r6, r6, r1
2ffe03b4:	60a6      	str	r6, [r4, #8]
2ffe03b6:	68e1      	ldr	r1, [r4, #12]
2ffe03b8:	ea02 0201 	and.w	r2, r2, r1
2ffe03bc:	60e2      	str	r2, [r4, #12]
2ffe03be:	68e2      	ldr	r2, [r4, #12]
2ffe03c0:	ea43 0302 	orr.w	r3, r3, r2
2ffe03c4:	60e3      	str	r3, [r4, #12]
2ffe03c6:	f04f 030f 	mov.w	r3, #15
2ffe03ca:	d80f      	bhi.n	2ffe03ec <set_gpio+0xbc>
2ffe03cc:	00ad      	lsls	r5, r5, #2
2ffe03ce:	6a22      	ldr	r2, [r4, #32]
2ffe03d0:	40ab      	lsls	r3, r5
2ffe03d2:	ea22 0303 	bic.w	r3, r2, r3
2ffe03d6:	6223      	str	r3, [r4, #32]
2ffe03d8:	6a23      	ldr	r3, [r4, #32]
2ffe03da:	fa07 f505 	lsl.w	r5, r7, r5
2ffe03de:	431d      	orrs	r5, r3
2ffe03e0:	6225      	str	r5, [r4, #32]
2ffe03e2:	4640      	mov	r0, r8
2ffe03e4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffe03e8:	f7ff b997 	b.w	2ffdf71a <stm32mp_clk_disable>
2ffe03ec:	6a62      	ldr	r2, [r4, #36]	; 0x24
2ffe03ee:	3d08      	subs	r5, #8
2ffe03f0:	00ad      	lsls	r5, r5, #2
2ffe03f2:	40ab      	lsls	r3, r5
2ffe03f4:	ea22 0303 	bic.w	r3, r2, r3
2ffe03f8:	6263      	str	r3, [r4, #36]	; 0x24
2ffe03fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
2ffe03fc:	fa07 f505 	lsl.w	r5, r7, r5
2ffe0400:	431d      	orrs	r5, r3
2ffe0402:	6265      	str	r5, [r4, #36]	; 0x24
2ffe0404:	e7ed      	b.n	2ffe03e2 <set_gpio+0xb2>
2ffe0406:	bf00      	nop
2ffe0408:	2ffe62bd 	.word	0x2ffe62bd

2ffe040c <dt_set_pinctrl_config>:
2ffe040c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe0410:	b091      	sub	sp, #68	; 0x44
2ffe0412:	2700      	movs	r7, #0
2ffe0414:	4604      	mov	r4, r0
2ffe0416:	970d      	str	r7, [sp, #52]	; 0x34
2ffe0418:	f001 fd6c 	bl	2ffe1ef4 <fdt_get_status>
2ffe041c:	9004      	str	r0, [sp, #16]
2ffe041e:	a80e      	add	r0, sp, #56	; 0x38
2ffe0420:	f001 fd4c 	bl	2ffe1ebc <fdt_get_address>
2ffe0424:	b920      	cbnz	r0, 2ffe0430 <dt_set_pinctrl_config+0x24>
2ffe0426:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe042a:	b011      	add	sp, #68	; 0x44
2ffe042c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe0430:	9b04      	ldr	r3, [sp, #16]
2ffe0432:	2b00      	cmp	r3, #0
2ffe0434:	d0f7      	beq.n	2ffe0426 <dt_set_pinctrl_config+0x1a>
2ffe0436:	4a6c      	ldr	r2, [pc, #432]	; (2ffe05e8 <dt_set_pinctrl_config+0x1dc>)
2ffe0438:	ab0d      	add	r3, sp, #52	; 0x34
2ffe043a:	980e      	ldr	r0, [sp, #56]	; 0x38
2ffe043c:	4621      	mov	r1, r4
2ffe043e:	f002 fbcc 	bl	2ffe2bda <fdt_getprop>
2ffe0442:	9005      	str	r0, [sp, #20]
2ffe0444:	2800      	cmp	r0, #0
2ffe0446:	d0ee      	beq.n	2ffe0426 <dt_set_pinctrl_config+0x1a>
2ffe0448:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2ffe044a:	ebb7 0f93 	cmp.w	r7, r3, lsr #2
2ffe044e:	d301      	bcc.n	2ffe0454 <dt_set_pinctrl_config+0x48>
2ffe0450:	2000      	movs	r0, #0
2ffe0452:	e7ea      	b.n	2ffe042a <dt_set_pinctrl_config+0x1e>
2ffe0454:	9b05      	ldr	r3, [sp, #20]
2ffe0456:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
2ffe045a:	f7ff ff67 	bl	2ffe032c <fdt32_to_cpu>
2ffe045e:	4601      	mov	r1, r0
2ffe0460:	980e      	ldr	r0, [sp, #56]	; 0x38
2ffe0462:	f002 fcac 	bl	2ffe2dbe <fdt_node_offset_by_phandle>
2ffe0466:	1e01      	subs	r1, r0, #0
2ffe0468:	dbdd      	blt.n	2ffe0426 <dt_set_pinctrl_config+0x1a>
2ffe046a:	980e      	ldr	r0, [sp, #56]	; 0x38
2ffe046c:	f002 fa15 	bl	2ffe289a <fdt_first_subnode>
2ffe0470:	4605      	mov	r5, r0
2ffe0472:	2d00      	cmp	r5, #0
2ffe0474:	da01      	bge.n	2ffe047a <dt_set_pinctrl_config+0x6e>
2ffe0476:	3701      	adds	r7, #1
2ffe0478:	e7e6      	b.n	2ffe0448 <dt_set_pinctrl_config+0x3c>
2ffe047a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
2ffe047c:	ab0f      	add	r3, sp, #60	; 0x3c
2ffe047e:	4a5b      	ldr	r2, [pc, #364]	; (2ffe05ec <dt_set_pinctrl_config+0x1e0>)
2ffe0480:	4629      	mov	r1, r5
2ffe0482:	4630      	mov	r0, r6
2ffe0484:	f002 fba9 	bl	2ffe2bda <fdt_getprop>
2ffe0488:	9006      	str	r0, [sp, #24]
2ffe048a:	2800      	cmp	r0, #0
2ffe048c:	d0cb      	beq.n	2ffe0426 <dt_set_pinctrl_config+0x1a>
2ffe048e:	4629      	mov	r1, r5
2ffe0490:	4630      	mov	r0, r6
2ffe0492:	f002 fc84 	bl	2ffe2d9e <fdt_parent_offset>
2ffe0496:	4601      	mov	r1, r0
2ffe0498:	4630      	mov	r0, r6
2ffe049a:	f002 fc80 	bl	2ffe2d9e <fdt_parent_offset>
2ffe049e:	1e03      	subs	r3, r0, #0
2ffe04a0:	9309      	str	r3, [sp, #36]	; 0x24
2ffe04a2:	dbc0      	blt.n	2ffe0426 <dt_set_pinctrl_config+0x1a>
2ffe04a4:	4a52      	ldr	r2, [pc, #328]	; (2ffe05f0 <dt_set_pinctrl_config+0x1e4>)
2ffe04a6:	2300      	movs	r3, #0
2ffe04a8:	4629      	mov	r1, r5
2ffe04aa:	4630      	mov	r0, r6
2ffe04ac:	f002 fb95 	bl	2ffe2bda <fdt_getprop>
2ffe04b0:	b110      	cbz	r0, 2ffe04b8 <dt_set_pinctrl_config+0xac>
2ffe04b2:	6800      	ldr	r0, [r0, #0]
2ffe04b4:	f7ff ff3a 	bl	2ffe032c <fdt32_to_cpu>
2ffe04b8:	9007      	str	r0, [sp, #28]
2ffe04ba:	2300      	movs	r3, #0
2ffe04bc:	4a4d      	ldr	r2, [pc, #308]	; (2ffe05f4 <dt_set_pinctrl_config+0x1e8>)
2ffe04be:	4629      	mov	r1, r5
2ffe04c0:	4630      	mov	r0, r6
2ffe04c2:	f002 fb8a 	bl	2ffe2bda <fdt_getprop>
2ffe04c6:	4603      	mov	r3, r0
2ffe04c8:	b9a0      	cbnz	r0, 2ffe04f4 <dt_set_pinctrl_config+0xe8>
2ffe04ca:	4a4b      	ldr	r2, [pc, #300]	; (2ffe05f8 <dt_set_pinctrl_config+0x1ec>)
2ffe04cc:	4629      	mov	r1, r5
2ffe04ce:	4630      	mov	r0, r6
2ffe04d0:	f002 fb83 	bl	2ffe2bda <fdt_getprop>
2ffe04d4:	2800      	cmp	r0, #0
2ffe04d6:	bf0c      	ite	eq
2ffe04d8:	2300      	moveq	r3, #0
2ffe04da:	2302      	movne	r3, #2
2ffe04dc:	9308      	str	r3, [sp, #32]
2ffe04de:	f04f 0800 	mov.w	r8, #0
2ffe04e2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
2ffe04e4:	ebb8 0f93 	cmp.w	r8, r3, lsr #2
2ffe04e8:	d306      	bcc.n	2ffe04f8 <dt_set_pinctrl_config+0xec>
2ffe04ea:	980e      	ldr	r0, [sp, #56]	; 0x38
2ffe04ec:	4629      	mov	r1, r5
2ffe04ee:	f002 f9e7 	bl	2ffe28c0 <fdt_next_subnode>
2ffe04f2:	e7bd      	b.n	2ffe0470 <dt_set_pinctrl_config+0x64>
2ffe04f4:	2301      	movs	r3, #1
2ffe04f6:	e7f1      	b.n	2ffe04dc <dt_set_pinctrl_config+0xd0>
2ffe04f8:	9b06      	ldr	r3, [sp, #24]
2ffe04fa:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
2ffe04fe:	f7ff ff15 	bl	2ffe032c <fdt32_to_cpu>
2ffe0502:	f3c0 2303 	ubfx	r3, r0, #8, #4
2ffe0506:	b2c4      	uxtb	r4, r0
2ffe0508:	f3c0 3a04 	ubfx	sl, r0, #12, #5
2ffe050c:	2c10      	cmp	r4, #16
2ffe050e:	930a      	str	r3, [sp, #40]	; 0x28
2ffe0510:	d81c      	bhi.n	2ffe054c <dt_set_pinctrl_config+0x140>
2ffe0512:	bb0c      	cbnz	r4, 2ffe0558 <dt_set_pinctrl_config+0x14c>
2ffe0514:	46a1      	mov	r9, r4
2ffe0516:	4a39      	ldr	r2, [pc, #228]	; (2ffe05fc <dt_set_pinctrl_config+0x1f0>)
2ffe0518:	2300      	movs	r3, #0
2ffe051a:	4629      	mov	r1, r5
2ffe051c:	4630      	mov	r0, r6
2ffe051e:	f002 fb5c 	bl	2ffe2bda <fdt_getprop>
2ffe0522:	b108      	cbz	r0, 2ffe0528 <dt_set_pinctrl_config+0x11c>
2ffe0524:	f044 0410 	orr.w	r4, r4, #16
2ffe0528:	4650      	mov	r0, sl
2ffe052a:	f7fc fce5 	bl	2ffdcef8 <stm32_get_gpio_bank_offset>
2ffe052e:	900b      	str	r0, [sp, #44]	; 0x2c
2ffe0530:	4630      	mov	r0, r6
2ffe0532:	9909      	ldr	r1, [sp, #36]	; 0x24
2ffe0534:	f002 f9b1 	bl	2ffe289a <fdt_first_subnode>
2ffe0538:	2800      	cmp	r0, #0
2ffe053a:	4683      	mov	fp, r0
2ffe053c:	da12      	bge.n	2ffe0564 <dt_set_pinctrl_config+0x158>
2ffe053e:	4830      	ldr	r0, [pc, #192]	; (2ffe0600 <dt_set_pinctrl_config+0x1f4>)
2ffe0540:	f7fc fad4 	bl	2ffdcaec <tf_log>
2ffe0544:	f7fc fb70 	bl	2ffdcc28 <console_flush>
2ffe0548:	f7f5 ee8a 	blx	2ffd6260 <do_panic>
2ffe054c:	2c11      	cmp	r4, #17
2ffe054e:	f04f 0900 	mov.w	r9, #0
2ffe0552:	d105      	bne.n	2ffe0560 <dt_set_pinctrl_config+0x154>
2ffe0554:	2403      	movs	r4, #3
2ffe0556:	e7de      	b.n	2ffe0516 <dt_set_pinctrl_config+0x10a>
2ffe0558:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
2ffe055c:	2402      	movs	r4, #2
2ffe055e:	e7da      	b.n	2ffe0516 <dt_set_pinctrl_config+0x10a>
2ffe0560:	2401      	movs	r4, #1
2ffe0562:	e7d8      	b.n	2ffe0516 <dt_set_pinctrl_config+0x10a>
2ffe0564:	4a27      	ldr	r2, [pc, #156]	; (2ffe0604 <dt_set_pinctrl_config+0x1f8>)
2ffe0566:	2300      	movs	r3, #0
2ffe0568:	4659      	mov	r1, fp
2ffe056a:	4630      	mov	r0, r6
2ffe056c:	f002 fb35 	bl	2ffe2bda <fdt_getprop>
2ffe0570:	b920      	cbnz	r0, 2ffe057c <dt_set_pinctrl_config+0x170>
2ffe0572:	4659      	mov	r1, fp
2ffe0574:	4630      	mov	r0, r6
2ffe0576:	f002 f9a3 	bl	2ffe28c0 <fdt_next_subnode>
2ffe057a:	e7dd      	b.n	2ffe0538 <dt_set_pinctrl_config+0x12c>
2ffe057c:	4a22      	ldr	r2, [pc, #136]	; (2ffe0608 <dt_set_pinctrl_config+0x1fc>)
2ffe057e:	2300      	movs	r3, #0
2ffe0580:	4659      	mov	r1, fp
2ffe0582:	4630      	mov	r0, r6
2ffe0584:	f002 fb29 	bl	2ffe2bda <fdt_getprop>
2ffe0588:	2800      	cmp	r0, #0
2ffe058a:	d0f2      	beq.n	2ffe0572 <dt_set_pinctrl_config+0x166>
2ffe058c:	6800      	ldr	r0, [r0, #0]
2ffe058e:	f7ff fecd 	bl	2ffe032c <fdt32_to_cpu>
2ffe0592:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
2ffe0594:	4283      	cmp	r3, r0
2ffe0596:	d1ec      	bne.n	2ffe0572 <dt_set_pinctrl_config+0x166>
2ffe0598:	4658      	mov	r0, fp
2ffe059a:	f001 fcab 	bl	2ffe1ef4 <fdt_get_status>
2ffe059e:	2800      	cmp	r0, #0
2ffe05a0:	d0e7      	beq.n	2ffe0572 <dt_set_pinctrl_config+0x166>
2ffe05a2:	f1bb 0f00 	cmp.w	fp, #0
2ffe05a6:	d0ca      	beq.n	2ffe053e <dt_set_pinctrl_config+0x132>
2ffe05a8:	4658      	mov	r0, fp
2ffe05aa:	f7fe fb79 	bl	2ffdeca0 <fdt_get_clock_id>
2ffe05ae:	f1b0 0b00 	subs.w	fp, r0, #0
2ffe05b2:	f6ff af38 	blt.w	2ffe0426 <dt_set_pinctrl_config+0x1a>
2ffe05b6:	4650      	mov	r0, sl
2ffe05b8:	f7fc fd5e 	bl	2ffdd078 <stm32_get_gpio_bank_clock>
2ffe05bc:	4558      	cmp	r0, fp
2ffe05be:	d003      	beq.n	2ffe05c8 <dt_set_pinctrl_config+0x1bc>
2ffe05c0:	4812      	ldr	r0, [pc, #72]	; (2ffe060c <dt_set_pinctrl_config+0x200>)
2ffe05c2:	2192      	movs	r1, #146	; 0x92
2ffe05c4:	f002 fca6 	bl	2ffe2f14 <__assert>
2ffe05c8:	9b04      	ldr	r3, [sp, #16]
2ffe05ca:	4622      	mov	r2, r4
2ffe05cc:	990a      	ldr	r1, [sp, #40]	; 0x28
2ffe05ce:	4650      	mov	r0, sl
2ffe05d0:	9302      	str	r3, [sp, #8]
2ffe05d2:	f108 0801 	add.w	r8, r8, #1
2ffe05d6:	9b08      	ldr	r3, [sp, #32]
2ffe05d8:	f8cd 9004 	str.w	r9, [sp, #4]
2ffe05dc:	9300      	str	r3, [sp, #0]
2ffe05de:	9b07      	ldr	r3, [sp, #28]
2ffe05e0:	f7ff fea6 	bl	2ffe0330 <set_gpio>
2ffe05e4:	e77d      	b.n	2ffe04e2 <dt_set_pinctrl_config+0xd6>
2ffe05e6:	bf00      	nop
2ffe05e8:	2ffe62da 	.word	0x2ffe62da
2ffe05ec:	2ffe62e4 	.word	0x2ffe62e4
2ffe05f0:	2ffe62eb 	.word	0x2ffe62eb
2ffe05f4:	2ffe62f5 	.word	0x2ffe62f5
2ffe05f8:	2ffe6302 	.word	0x2ffe6302
2ffe05fc:	2ffe6311 	.word	0x2ffe6311
2ffe0600:	2ffe6332 	.word	0x2ffe6332
2ffe0604:	2ffe6322 	.word	0x2ffe6322
2ffe0608:	2ffe521b 	.word	0x2ffe521b
2ffe060c:	2ffe62bd 	.word	0x2ffe62bd

2ffe0610 <i2c_transfer_config.isra.0>:
2ffe0610:	b530      	push	{r4, r5, lr}
2ffe0612:	9d03      	ldr	r5, [sp, #12]
2ffe0614:	f3c1 0109 	ubfx	r1, r1, #0, #10
2ffe0618:	432b      	orrs	r3, r5
2ffe061a:	0412      	lsls	r2, r2, #16
2ffe061c:	430b      	orrs	r3, r1
2ffe061e:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
2ffe0622:	4313      	orrs	r3, r2
2ffe0624:	4a04      	ldr	r2, [pc, #16]	; (2ffe0638 <i2c_transfer_config.isra.0+0x28>)
2ffe0626:	6844      	ldr	r4, [r0, #4]
2ffe0628:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
2ffe062c:	ea24 0402 	bic.w	r4, r4, r2
2ffe0630:	4323      	orrs	r3, r4
2ffe0632:	6043      	str	r3, [r0, #4]
2ffe0634:	bd30      	pop	{r4, r5, pc}
2ffe0636:	bf00      	nop
2ffe0638:	03ff63ff 	.word	0x03ff63ff

2ffe063c <i2c_wait_flag>:
2ffe063c:	6803      	ldr	r3, [r0, #0]
2ffe063e:	f002 0201 	and.w	r2, r2, #1
2ffe0642:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffe0644:	3318      	adds	r3, #24
2ffe0646:	e9dd 4505 	ldrd	r4, r5, [sp, #20]
2ffe064a:	681e      	ldr	r6, [r3, #0]
2ffe064c:	4231      	tst	r1, r6
2ffe064e:	bf14      	ite	ne
2ffe0650:	2601      	movne	r6, #1
2ffe0652:	2600      	moveq	r6, #0
2ffe0654:	4296      	cmp	r6, r2
2ffe0656:	d111      	bne.n	2ffe067c <i2c_wait_flag+0x40>
2ffe0658:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffe065c:	42bd      	cmp	r5, r7
2ffe065e:	bf08      	it	eq
2ffe0660:	42b4      	cmpeq	r4, r6
2ffe0662:	d2f2      	bcs.n	2ffe064a <i2c_wait_flag+0xe>
2ffe0664:	6983      	ldr	r3, [r0, #24]
2ffe0666:	2220      	movs	r2, #32
2ffe0668:	6102      	str	r2, [r0, #16]
2ffe066a:	f043 0320 	orr.w	r3, r3, #32
2ffe066e:	6183      	str	r3, [r0, #24]
2ffe0670:	2300      	movs	r3, #0
2ffe0672:	6143      	str	r3, [r0, #20]
2ffe0674:	7303      	strb	r3, [r0, #12]
2ffe0676:	f06f 0004 	mvn.w	r0, #4
2ffe067a:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffe067c:	2000      	movs	r0, #0
2ffe067e:	e7fc      	b.n	2ffe067a <i2c_wait_flag+0x3e>

2ffe0680 <i2c_ack_failed>:
2ffe0680:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffe0682:	4614      	mov	r4, r2
2ffe0684:	6802      	ldr	r2, [r0, #0]
2ffe0686:	461d      	mov	r5, r3
2ffe0688:	6993      	ldr	r3, [r2, #24]
2ffe068a:	f102 0118 	add.w	r1, r2, #24
2ffe068e:	f013 0310 	ands.w	r3, r3, #16
2ffe0692:	d112      	bne.n	2ffe06ba <i2c_ack_failed+0x3a>
2ffe0694:	4618      	mov	r0, r3
2ffe0696:	e00f      	b.n	2ffe06b8 <i2c_ack_failed+0x38>
2ffe0698:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffe069c:	42bd      	cmp	r5, r7
2ffe069e:	bf08      	it	eq
2ffe06a0:	42b4      	cmpeq	r4, r6
2ffe06a2:	d20a      	bcs.n	2ffe06ba <i2c_ack_failed+0x3a>
2ffe06a4:	6982      	ldr	r2, [r0, #24]
2ffe06a6:	6143      	str	r3, [r0, #20]
2ffe06a8:	f042 0220 	orr.w	r2, r2, #32
2ffe06ac:	6182      	str	r2, [r0, #24]
2ffe06ae:	2220      	movs	r2, #32
2ffe06b0:	6102      	str	r2, [r0, #16]
2ffe06b2:	7303      	strb	r3, [r0, #12]
2ffe06b4:	f06f 0004 	mvn.w	r0, #4
2ffe06b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffe06ba:	680b      	ldr	r3, [r1, #0]
2ffe06bc:	f013 0320 	ands.w	r3, r3, #32
2ffe06c0:	d0ea      	beq.n	2ffe0698 <i2c_ack_failed+0x18>
2ffe06c2:	2310      	movs	r3, #16
2ffe06c4:	61d3      	str	r3, [r2, #28]
2ffe06c6:	2220      	movs	r2, #32
2ffe06c8:	6803      	ldr	r3, [r0, #0]
2ffe06ca:	61da      	str	r2, [r3, #28]
2ffe06cc:	6803      	ldr	r3, [r0, #0]
2ffe06ce:	699a      	ldr	r2, [r3, #24]
2ffe06d0:	0794      	lsls	r4, r2, #30
2ffe06d2:	bf44      	itt	mi
2ffe06d4:	2200      	movmi	r2, #0
2ffe06d6:	629a      	strmi	r2, [r3, #40]	; 0x28
2ffe06d8:	6803      	ldr	r3, [r0, #0]
2ffe06da:	699a      	ldr	r2, [r3, #24]
2ffe06dc:	07d1      	lsls	r1, r2, #31
2ffe06de:	bf5e      	ittt	pl
2ffe06e0:	699a      	ldrpl	r2, [r3, #24]
2ffe06e2:	f042 0201 	orrpl.w	r2, r2, #1
2ffe06e6:	619a      	strpl	r2, [r3, #24]
2ffe06e8:	6802      	ldr	r2, [r0, #0]
2ffe06ea:	6853      	ldr	r3, [r2, #4]
2ffe06ec:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2ffe06f0:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2ffe06f4:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2ffe06f8:	f023 0301 	bic.w	r3, r3, #1
2ffe06fc:	6053      	str	r3, [r2, #4]
2ffe06fe:	6983      	ldr	r3, [r0, #24]
2ffe0700:	f043 0304 	orr.w	r3, r3, #4
2ffe0704:	6183      	str	r3, [r0, #24]
2ffe0706:	2320      	movs	r3, #32
2ffe0708:	6103      	str	r3, [r0, #16]
2ffe070a:	2300      	movs	r3, #0
2ffe070c:	6143      	str	r3, [r0, #20]
2ffe070e:	e7d0      	b.n	2ffe06b2 <i2c_ack_failed+0x32>

2ffe0710 <i2c_wait_txis>:
2ffe0710:	b5d0      	push	{r4, r6, r7, lr}
2ffe0712:	4604      	mov	r4, r0
2ffe0714:	4616      	mov	r6, r2
2ffe0716:	461f      	mov	r7, r3
2ffe0718:	6823      	ldr	r3, [r4, #0]
2ffe071a:	699b      	ldr	r3, [r3, #24]
2ffe071c:	079b      	lsls	r3, r3, #30
2ffe071e:	d501      	bpl.n	2ffe0724 <i2c_wait_txis+0x14>
2ffe0720:	2000      	movs	r0, #0
2ffe0722:	bdd0      	pop	{r4, r6, r7, pc}
2ffe0724:	4632      	mov	r2, r6
2ffe0726:	463b      	mov	r3, r7
2ffe0728:	4620      	mov	r0, r4
2ffe072a:	f7ff ffa9 	bl	2ffe0680 <i2c_ack_failed>
2ffe072e:	b968      	cbnz	r0, 2ffe074c <i2c_wait_txis+0x3c>
2ffe0730:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffe0734:	429f      	cmp	r7, r3
2ffe0736:	bf08      	it	eq
2ffe0738:	4296      	cmpeq	r6, r2
2ffe073a:	d2ed      	bcs.n	2ffe0718 <i2c_wait_txis+0x8>
2ffe073c:	69a3      	ldr	r3, [r4, #24]
2ffe073e:	6160      	str	r0, [r4, #20]
2ffe0740:	7320      	strb	r0, [r4, #12]
2ffe0742:	f043 0320 	orr.w	r3, r3, #32
2ffe0746:	61a3      	str	r3, [r4, #24]
2ffe0748:	2320      	movs	r3, #32
2ffe074a:	6123      	str	r3, [r4, #16]
2ffe074c:	f06f 0004 	mvn.w	r0, #4
2ffe0750:	e7e7      	b.n	2ffe0722 <i2c_wait_txis+0x12>

2ffe0752 <i2c_wait_stop>:
2ffe0752:	b5d0      	push	{r4, r6, r7, lr}
2ffe0754:	4604      	mov	r4, r0
2ffe0756:	4616      	mov	r6, r2
2ffe0758:	461f      	mov	r7, r3
2ffe075a:	6823      	ldr	r3, [r4, #0]
2ffe075c:	699b      	ldr	r3, [r3, #24]
2ffe075e:	069b      	lsls	r3, r3, #26
2ffe0760:	d501      	bpl.n	2ffe0766 <i2c_wait_stop+0x14>
2ffe0762:	2000      	movs	r0, #0
2ffe0764:	bdd0      	pop	{r4, r6, r7, pc}
2ffe0766:	4632      	mov	r2, r6
2ffe0768:	463b      	mov	r3, r7
2ffe076a:	4620      	mov	r0, r4
2ffe076c:	f7ff ff88 	bl	2ffe0680 <i2c_ack_failed>
2ffe0770:	b968      	cbnz	r0, 2ffe078e <i2c_wait_stop+0x3c>
2ffe0772:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffe0776:	429f      	cmp	r7, r3
2ffe0778:	bf08      	it	eq
2ffe077a:	4296      	cmpeq	r6, r2
2ffe077c:	d2ed      	bcs.n	2ffe075a <i2c_wait_stop+0x8>
2ffe077e:	69a3      	ldr	r3, [r4, #24]
2ffe0780:	6160      	str	r0, [r4, #20]
2ffe0782:	7320      	strb	r0, [r4, #12]
2ffe0784:	f043 0320 	orr.w	r3, r3, #32
2ffe0788:	61a3      	str	r3, [r4, #24]
2ffe078a:	2320      	movs	r3, #32
2ffe078c:	6123      	str	r3, [r4, #16]
2ffe078e:	f06f 0004 	mvn.w	r0, #4
2ffe0792:	e7e7      	b.n	2ffe0764 <i2c_wait_stop+0x12>

2ffe0794 <i2c_write>:
2ffe0794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe0798:	b085      	sub	sp, #20
2ffe079a:	469b      	mov	fp, r3
2ffe079c:	4604      	mov	r4, r0
2ffe079e:	9b11      	ldr	r3, [sp, #68]	; 0x44
2ffe07a0:	4688      	mov	r8, r1
2ffe07a2:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
2ffe07a6:	4691      	mov	r9, r2
2ffe07a8:	2b10      	cmp	r3, #16
2ffe07aa:	d002      	beq.n	2ffe07b2 <i2c_write+0x1e>
2ffe07ac:	2b40      	cmp	r3, #64	; 0x40
2ffe07ae:	f040 80d6 	bne.w	2ffe095e <i2c_write+0x1ca>
2ffe07b2:	6923      	ldr	r3, [r4, #16]
2ffe07b4:	2b20      	cmp	r3, #32
2ffe07b6:	f040 80d5 	bne.w	2ffe0964 <i2c_write+0x1d0>
2ffe07ba:	7b23      	ldrb	r3, [r4, #12]
2ffe07bc:	2b00      	cmp	r3, #0
2ffe07be:	f040 80d1 	bne.w	2ffe0964 <i2c_write+0x1d0>
2ffe07c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2ffe07c4:	2b00      	cmp	r3, #0
2ffe07c6:	f000 80d0 	beq.w	2ffe096a <i2c_write+0x1d6>
2ffe07ca:	2d00      	cmp	r5, #0
2ffe07cc:	f000 80cd 	beq.w	2ffe096a <i2c_write+0x1d6>
2ffe07d0:	68a0      	ldr	r0, [r4, #8]
2ffe07d2:	2601      	movs	r6, #1
2ffe07d4:	f7fe ff9e 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe07d8:	7326      	strb	r6, [r4, #12]
2ffe07da:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffe07de:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffe07e2:	f246 11a8 	movw	r1, #25000	; 0x61a8
2ffe07e6:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffe07ea:	fba0 0101 	umull	r0, r1, r0, r1
2ffe07ee:	4a6d      	ldr	r2, [pc, #436]	; (2ffe09a4 <i2c_write+0x210>)
2ffe07f0:	2300      	movs	r3, #0
2ffe07f2:	f001 ef36 	blx	2ffe2660 <__aeabi_uldivmod>
2ffe07f6:	9b02      	ldr	r3, [sp, #8]
2ffe07f8:	4632      	mov	r2, r6
2ffe07fa:	18c0      	adds	r0, r0, r3
2ffe07fc:	9b03      	ldr	r3, [sp, #12]
2ffe07fe:	eb43 0101 	adc.w	r1, r3, r1
2ffe0802:	e9cd 0100 	strd	r0, r1, [sp]
2ffe0806:	f44f 4100 	mov.w	r1, #32768	; 0x8000
2ffe080a:	4620      	mov	r0, r4
2ffe080c:	f7ff ff16 	bl	2ffe063c <i2c_wait_flag>
2ffe0810:	b150      	cbz	r0, 2ffe0828 <i2c_write+0x94>
2ffe0812:	f06f 0504 	mvn.w	r5, #4
2ffe0816:	68a0      	ldr	r0, [r4, #8]
2ffe0818:	2300      	movs	r3, #0
2ffe081a:	7323      	strb	r3, [r4, #12]
2ffe081c:	f7fe ff7d 	bl	2ffdf71a <stm32mp_clk_disable>
2ffe0820:	4628      	mov	r0, r5
2ffe0822:	b005      	add	sp, #20
2ffe0824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe0828:	61a0      	str	r0, [r4, #24]
2ffe082a:	2321      	movs	r3, #33	; 0x21
2ffe082c:	6123      	str	r3, [r4, #16]
2ffe082e:	462f      	mov	r7, r5
2ffe0830:	9b11      	ldr	r3, [sp, #68]	; 0x44
2ffe0832:	6163      	str	r3, [r4, #20]
2ffe0834:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffe0838:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffe083c:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffe0840:	9b10      	ldr	r3, [sp, #64]	; 0x40
2ffe0842:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffe0846:	4a57      	ldr	r2, [pc, #348]	; (2ffe09a4 <i2c_write+0x210>)
2ffe0848:	4359      	muls	r1, r3
2ffe084a:	2300      	movs	r3, #0
2ffe084c:	fba1 0100 	umull	r0, r1, r1, r0
2ffe0850:	f001 ef06 	blx	2ffe2660 <__aeabi_uldivmod>
2ffe0854:	9b02      	ldr	r3, [sp, #8]
2ffe0856:	18c6      	adds	r6, r0, r3
2ffe0858:	9b03      	ldr	r3, [sp, #12]
2ffe085a:	6820      	ldr	r0, [r4, #0]
2ffe085c:	eb41 0a03 	adc.w	sl, r1, r3
2ffe0860:	9b11      	ldr	r3, [sp, #68]	; 0x44
2ffe0862:	2b40      	cmp	r3, #64	; 0x40
2ffe0864:	4b50      	ldr	r3, [pc, #320]	; (2ffe09a8 <i2c_write+0x214>)
2ffe0866:	9300      	str	r3, [sp, #0]
2ffe0868:	d168      	bne.n	2ffe093c <i2c_write+0x1a8>
2ffe086a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2ffe086e:	465a      	mov	r2, fp
2ffe0870:	4641      	mov	r1, r8
2ffe0872:	f7ff fecd 	bl	2ffe0610 <i2c_transfer_config.isra.0>
2ffe0876:	4632      	mov	r2, r6
2ffe0878:	4653      	mov	r3, sl
2ffe087a:	4620      	mov	r0, r4
2ffe087c:	f7ff ff48 	bl	2ffe0710 <i2c_wait_txis>
2ffe0880:	2800      	cmp	r0, #0
2ffe0882:	d1c6      	bne.n	2ffe0812 <i2c_write+0x7e>
2ffe0884:	6823      	ldr	r3, [r4, #0]
2ffe0886:	f1bb 0f01 	cmp.w	fp, #1
2ffe088a:	d119      	bne.n	2ffe08c0 <i2c_write+0x12c>
2ffe088c:	fa5f f989 	uxtb.w	r9, r9
2ffe0890:	f883 9028 	strb.w	r9, [r3, #40]	; 0x28
2ffe0894:	2200      	movs	r2, #0
2ffe0896:	2180      	movs	r1, #128	; 0x80
2ffe0898:	4620      	mov	r0, r4
2ffe089a:	e9cd 6a00 	strd	r6, sl, [sp]
2ffe089e:	f7ff fecd 	bl	2ffe063c <i2c_wait_flag>
2ffe08a2:	4603      	mov	r3, r0
2ffe08a4:	2800      	cmp	r0, #0
2ffe08a6:	d1b4      	bne.n	2ffe0812 <i2c_write+0x7e>
2ffe08a8:	6820      	ldr	r0, [r4, #0]
2ffe08aa:	2dff      	cmp	r5, #255	; 0xff
2ffe08ac:	9300      	str	r3, [sp, #0]
2ffe08ae:	d916      	bls.n	2ffe08de <i2c_write+0x14a>
2ffe08b0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2ffe08b4:	22ff      	movs	r2, #255	; 0xff
2ffe08b6:	4641      	mov	r1, r8
2ffe08b8:	25ff      	movs	r5, #255	; 0xff
2ffe08ba:	f7ff fea9 	bl	2ffe0610 <i2c_transfer_config.isra.0>
2ffe08be:	e014      	b.n	2ffe08ea <i2c_write+0x156>
2ffe08c0:	ea4f 2219 	mov.w	r2, r9, lsr #8
2ffe08c4:	4620      	mov	r0, r4
2ffe08c6:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2ffe08ca:	4632      	mov	r2, r6
2ffe08cc:	4653      	mov	r3, sl
2ffe08ce:	f7ff ff1f 	bl	2ffe0710 <i2c_wait_txis>
2ffe08d2:	2800      	cmp	r0, #0
2ffe08d4:	d19d      	bne.n	2ffe0812 <i2c_write+0x7e>
2ffe08d6:	6823      	ldr	r3, [r4, #0]
2ffe08d8:	fa5f f989 	uxtb.w	r9, r9
2ffe08dc:	e7d8      	b.n	2ffe0890 <i2c_write+0xfc>
2ffe08de:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2ffe08e2:	462a      	mov	r2, r5
2ffe08e4:	4641      	mov	r1, r8
2ffe08e6:	f7ff fe93 	bl	2ffe0610 <i2c_transfer_config.isra.0>
2ffe08ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2ffe08ec:	f103 39ff 	add.w	r9, r3, #4294967295	; 0xffffffff
2ffe08f0:	4632      	mov	r2, r6
2ffe08f2:	4653      	mov	r3, sl
2ffe08f4:	4620      	mov	r0, r4
2ffe08f6:	f7ff ff0b 	bl	2ffe0710 <i2c_wait_txis>
2ffe08fa:	2800      	cmp	r0, #0
2ffe08fc:	d189      	bne.n	2ffe0812 <i2c_write+0x7e>
2ffe08fe:	f819 2f01 	ldrb.w	r2, [r9, #1]!
2ffe0902:	3f01      	subs	r7, #1
2ffe0904:	6823      	ldr	r3, [r4, #0]
2ffe0906:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2ffe090a:	d031      	beq.n	2ffe0970 <i2c_write+0x1dc>
2ffe090c:	3d01      	subs	r5, #1
2ffe090e:	d1ef      	bne.n	2ffe08f0 <i2c_write+0x15c>
2ffe0910:	462a      	mov	r2, r5
2ffe0912:	2180      	movs	r1, #128	; 0x80
2ffe0914:	4620      	mov	r0, r4
2ffe0916:	e9cd 6a00 	strd	r6, sl, [sp]
2ffe091a:	f7ff fe8f 	bl	2ffe063c <i2c_wait_flag>
2ffe091e:	2800      	cmp	r0, #0
2ffe0920:	f47f af77 	bne.w	2ffe0812 <i2c_write+0x7e>
2ffe0924:	6820      	ldr	r0, [r4, #0]
2ffe0926:	2fff      	cmp	r7, #255	; 0xff
2ffe0928:	9500      	str	r5, [sp, #0]
2ffe092a:	d910      	bls.n	2ffe094e <i2c_write+0x1ba>
2ffe092c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2ffe0930:	22ff      	movs	r2, #255	; 0xff
2ffe0932:	4641      	mov	r1, r8
2ffe0934:	25ff      	movs	r5, #255	; 0xff
2ffe0936:	f7ff fe6b 	bl	2ffe0610 <i2c_transfer_config.isra.0>
2ffe093a:	e7d9      	b.n	2ffe08f0 <i2c_write+0x15c>
2ffe093c:	2dff      	cmp	r5, #255	; 0xff
2ffe093e:	d8b7      	bhi.n	2ffe08b0 <i2c_write+0x11c>
2ffe0940:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2ffe0944:	462a      	mov	r2, r5
2ffe0946:	4641      	mov	r1, r8
2ffe0948:	f7ff fe62 	bl	2ffe0610 <i2c_transfer_config.isra.0>
2ffe094c:	e7cd      	b.n	2ffe08ea <i2c_write+0x156>
2ffe094e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2ffe0952:	b2ba      	uxth	r2, r7
2ffe0954:	4641      	mov	r1, r8
2ffe0956:	463d      	mov	r5, r7
2ffe0958:	f7ff fe5a 	bl	2ffe0610 <i2c_transfer_config.isra.0>
2ffe095c:	e7c8      	b.n	2ffe08f0 <i2c_write+0x15c>
2ffe095e:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2ffe0962:	e75d      	b.n	2ffe0820 <i2c_write+0x8c>
2ffe0964:	f06f 050f 	mvn.w	r5, #15
2ffe0968:	e75a      	b.n	2ffe0820 <i2c_write+0x8c>
2ffe096a:	f06f 0515 	mvn.w	r5, #21
2ffe096e:	e757      	b.n	2ffe0820 <i2c_write+0x8c>
2ffe0970:	4632      	mov	r2, r6
2ffe0972:	4653      	mov	r3, sl
2ffe0974:	4620      	mov	r0, r4
2ffe0976:	f7ff feec 	bl	2ffe0752 <i2c_wait_stop>
2ffe097a:	4605      	mov	r5, r0
2ffe097c:	2800      	cmp	r0, #0
2ffe097e:	f47f af48 	bne.w	2ffe0812 <i2c_write+0x7e>
2ffe0982:	6823      	ldr	r3, [r4, #0]
2ffe0984:	2220      	movs	r2, #32
2ffe0986:	61da      	str	r2, [r3, #28]
2ffe0988:	6821      	ldr	r1, [r4, #0]
2ffe098a:	684b      	ldr	r3, [r1, #4]
2ffe098c:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2ffe0990:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2ffe0994:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2ffe0998:	f023 0301 	bic.w	r3, r3, #1
2ffe099c:	604b      	str	r3, [r1, #4]
2ffe099e:	6122      	str	r2, [r4, #16]
2ffe09a0:	6167      	str	r7, [r4, #20]
2ffe09a2:	e738      	b.n	2ffe0816 <i2c_write+0x82>
2ffe09a4:	000f4240 	.word	0x000f4240
2ffe09a8:	80002000 	.word	0x80002000

2ffe09ac <i2c_read.isra.0>:
2ffe09ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe09b0:	b085      	sub	sp, #20
2ffe09b2:	4699      	mov	r9, r3
2ffe09b4:	4604      	mov	r4, r0
2ffe09b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
2ffe09b8:	4688      	mov	r8, r1
2ffe09ba:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
2ffe09be:	4617      	mov	r7, r2
2ffe09c0:	2b10      	cmp	r3, #16
2ffe09c2:	d002      	beq.n	2ffe09ca <i2c_read.isra.0+0x1e>
2ffe09c4:	2b40      	cmp	r3, #64	; 0x40
2ffe09c6:	f040 80be 	bne.w	2ffe0b46 <i2c_read.isra.0+0x19a>
2ffe09ca:	6923      	ldr	r3, [r4, #16]
2ffe09cc:	2b20      	cmp	r3, #32
2ffe09ce:	f040 80bd 	bne.w	2ffe0b4c <i2c_read.isra.0+0x1a0>
2ffe09d2:	7b23      	ldrb	r3, [r4, #12]
2ffe09d4:	2b00      	cmp	r3, #0
2ffe09d6:	f040 80b9 	bne.w	2ffe0b4c <i2c_read.isra.0+0x1a0>
2ffe09da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2ffe09dc:	2b00      	cmp	r3, #0
2ffe09de:	f000 80b8 	beq.w	2ffe0b52 <i2c_read.isra.0+0x1a6>
2ffe09e2:	f1ba 0f00 	cmp.w	sl, #0
2ffe09e6:	f000 80b4 	beq.w	2ffe0b52 <i2c_read.isra.0+0x1a6>
2ffe09ea:	68a0      	ldr	r0, [r4, #8]
2ffe09ec:	f04f 0b01 	mov.w	fp, #1
2ffe09f0:	f7fe fe90 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe09f4:	f884 b00c 	strb.w	fp, [r4, #12]
2ffe09f8:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffe09fc:	ec56 5f0e 	mrrc	15, 0, r5, r6, cr14
2ffe0a00:	4a62      	ldr	r2, [pc, #392]	; (2ffe0b8c <i2c_read.isra.0+0x1e0>)
2ffe0a02:	f246 11a8 	movw	r1, #25000	; 0x61a8
2ffe0a06:	2300      	movs	r3, #0
2ffe0a08:	fba0 0101 	umull	r0, r1, r0, r1
2ffe0a0c:	f001 ee28 	blx	2ffe2660 <__aeabi_uldivmod>
2ffe0a10:	1943      	adds	r3, r0, r5
2ffe0a12:	465a      	mov	r2, fp
2ffe0a14:	eb41 0606 	adc.w	r6, r1, r6
2ffe0a18:	4620      	mov	r0, r4
2ffe0a1a:	e9cd 3600 	strd	r3, r6, [sp]
2ffe0a1e:	9303      	str	r3, [sp, #12]
2ffe0a20:	f44f 4100 	mov.w	r1, #32768	; 0x8000
2ffe0a24:	f7ff fe0a 	bl	2ffe063c <i2c_wait_flag>
2ffe0a28:	4603      	mov	r3, r0
2ffe0a2a:	b150      	cbz	r0, 2ffe0a42 <i2c_read.isra.0+0x96>
2ffe0a2c:	f06f 0504 	mvn.w	r5, #4
2ffe0a30:	68a0      	ldr	r0, [r4, #8]
2ffe0a32:	2300      	movs	r3, #0
2ffe0a34:	7323      	strb	r3, [r4, #12]
2ffe0a36:	f7fe fe70 	bl	2ffdf71a <stm32mp_clk_disable>
2ffe0a3a:	4628      	mov	r0, r5
2ffe0a3c:	b005      	add	sp, #20
2ffe0a3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe0a42:	61a0      	str	r0, [r4, #24]
2ffe0a44:	2222      	movs	r2, #34	; 0x22
2ffe0a46:	6122      	str	r2, [r4, #16]
2ffe0a48:	9a10      	ldr	r2, [sp, #64]	; 0x40
2ffe0a4a:	6162      	str	r2, [r4, #20]
2ffe0a4c:	2a40      	cmp	r2, #64	; 0x40
2ffe0a4e:	d00d      	beq.n	2ffe0a6c <i2c_read.isra.0+0xc0>
2ffe0a50:	6820      	ldr	r0, [r4, #0]
2ffe0a52:	4657      	mov	r7, sl
2ffe0a54:	4b4e      	ldr	r3, [pc, #312]	; (2ffe0b90 <i2c_read.isra.0+0x1e4>)
2ffe0a56:	2fff      	cmp	r7, #255	; 0xff
2ffe0a58:	d835      	bhi.n	2ffe0ac6 <i2c_read.isra.0+0x11a>
2ffe0a5a:	9300      	str	r3, [sp, #0]
2ffe0a5c:	4652      	mov	r2, sl
2ffe0a5e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2ffe0a62:	4641      	mov	r1, r8
2ffe0a64:	46d1      	mov	r9, sl
2ffe0a66:	f7ff fdd3 	bl	2ffe0610 <i2c_transfer_config.isra.0>
2ffe0a6a:	e035      	b.n	2ffe0ad8 <i2c_read.isra.0+0x12c>
2ffe0a6c:	4a49      	ldr	r2, [pc, #292]	; (2ffe0b94 <i2c_read.isra.0+0x1e8>)
2ffe0a6e:	4641      	mov	r1, r8
2ffe0a70:	6820      	ldr	r0, [r4, #0]
2ffe0a72:	9200      	str	r2, [sp, #0]
2ffe0a74:	464a      	mov	r2, r9
2ffe0a76:	f7ff fdcb 	bl	2ffe0610 <i2c_transfer_config.isra.0>
2ffe0a7a:	9a03      	ldr	r2, [sp, #12]
2ffe0a7c:	4633      	mov	r3, r6
2ffe0a7e:	4620      	mov	r0, r4
2ffe0a80:	f7ff fe46 	bl	2ffe0710 <i2c_wait_txis>
2ffe0a84:	2800      	cmp	r0, #0
2ffe0a86:	d1d1      	bne.n	2ffe0a2c <i2c_read.isra.0+0x80>
2ffe0a88:	6823      	ldr	r3, [r4, #0]
2ffe0a8a:	f1b9 0f01 	cmp.w	r9, #1
2ffe0a8e:	d10d      	bne.n	2ffe0aac <i2c_read.isra.0+0x100>
2ffe0a90:	b2ff      	uxtb	r7, r7
2ffe0a92:	f883 7028 	strb.w	r7, [r3, #40]	; 0x28
2ffe0a96:	2200      	movs	r2, #0
2ffe0a98:	9b03      	ldr	r3, [sp, #12]
2ffe0a9a:	2140      	movs	r1, #64	; 0x40
2ffe0a9c:	4620      	mov	r0, r4
2ffe0a9e:	e9cd 3600 	strd	r3, r6, [sp]
2ffe0aa2:	f7ff fdcb 	bl	2ffe063c <i2c_wait_flag>
2ffe0aa6:	2800      	cmp	r0, #0
2ffe0aa8:	d0d2      	beq.n	2ffe0a50 <i2c_read.isra.0+0xa4>
2ffe0aaa:	e7bf      	b.n	2ffe0a2c <i2c_read.isra.0+0x80>
2ffe0aac:	0a3a      	lsrs	r2, r7, #8
2ffe0aae:	4620      	mov	r0, r4
2ffe0ab0:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2ffe0ab4:	4633      	mov	r3, r6
2ffe0ab6:	9a03      	ldr	r2, [sp, #12]
2ffe0ab8:	f7ff fe2a 	bl	2ffe0710 <i2c_wait_txis>
2ffe0abc:	2800      	cmp	r0, #0
2ffe0abe:	d1b5      	bne.n	2ffe0a2c <i2c_read.isra.0+0x80>
2ffe0ac0:	6823      	ldr	r3, [r4, #0]
2ffe0ac2:	b2ff      	uxtb	r7, r7
2ffe0ac4:	e7e5      	b.n	2ffe0a92 <i2c_read.isra.0+0xe6>
2ffe0ac6:	9300      	str	r3, [sp, #0]
2ffe0ac8:	22ff      	movs	r2, #255	; 0xff
2ffe0aca:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2ffe0ace:	4641      	mov	r1, r8
2ffe0ad0:	f04f 09ff 	mov.w	r9, #255	; 0xff
2ffe0ad4:	f7ff fd9c 	bl	2ffe0610 <i2c_transfer_config.isra.0>
2ffe0ad8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2ffe0ada:	f103 3aff 	add.w	sl, r3, #4294967295	; 0xffffffff
2ffe0ade:	9b03      	ldr	r3, [sp, #12]
2ffe0ae0:	2200      	movs	r2, #0
2ffe0ae2:	2104      	movs	r1, #4
2ffe0ae4:	4620      	mov	r0, r4
2ffe0ae6:	e9cd 3600 	strd	r3, r6, [sp]
2ffe0aea:	f7ff fda7 	bl	2ffe063c <i2c_wait_flag>
2ffe0aee:	2800      	cmp	r0, #0
2ffe0af0:	d19c      	bne.n	2ffe0a2c <i2c_read.isra.0+0x80>
2ffe0af2:	6823      	ldr	r3, [r4, #0]
2ffe0af4:	3f01      	subs	r7, #1
2ffe0af6:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
2ffe0afa:	f80a 3f01 	strb.w	r3, [sl, #1]!
2ffe0afe:	d02b      	beq.n	2ffe0b58 <i2c_read.isra.0+0x1ac>
2ffe0b00:	f1b9 0901 	subs.w	r9, r9, #1
2ffe0b04:	d1eb      	bne.n	2ffe0ade <i2c_read.isra.0+0x132>
2ffe0b06:	9b03      	ldr	r3, [sp, #12]
2ffe0b08:	464a      	mov	r2, r9
2ffe0b0a:	2180      	movs	r1, #128	; 0x80
2ffe0b0c:	4620      	mov	r0, r4
2ffe0b0e:	e9cd 3600 	strd	r3, r6, [sp]
2ffe0b12:	f7ff fd93 	bl	2ffe063c <i2c_wait_flag>
2ffe0b16:	2800      	cmp	r0, #0
2ffe0b18:	d188      	bne.n	2ffe0a2c <i2c_read.isra.0+0x80>
2ffe0b1a:	6820      	ldr	r0, [r4, #0]
2ffe0b1c:	2fff      	cmp	r7, #255	; 0xff
2ffe0b1e:	f8cd 9000 	str.w	r9, [sp]
2ffe0b22:	d908      	bls.n	2ffe0b36 <i2c_read.isra.0+0x18a>
2ffe0b24:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2ffe0b28:	22ff      	movs	r2, #255	; 0xff
2ffe0b2a:	4641      	mov	r1, r8
2ffe0b2c:	f04f 09ff 	mov.w	r9, #255	; 0xff
2ffe0b30:	f7ff fd6e 	bl	2ffe0610 <i2c_transfer_config.isra.0>
2ffe0b34:	e7d3      	b.n	2ffe0ade <i2c_read.isra.0+0x132>
2ffe0b36:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2ffe0b3a:	b2ba      	uxth	r2, r7
2ffe0b3c:	4641      	mov	r1, r8
2ffe0b3e:	46b9      	mov	r9, r7
2ffe0b40:	f7ff fd66 	bl	2ffe0610 <i2c_transfer_config.isra.0>
2ffe0b44:	e7cb      	b.n	2ffe0ade <i2c_read.isra.0+0x132>
2ffe0b46:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2ffe0b4a:	e776      	b.n	2ffe0a3a <i2c_read.isra.0+0x8e>
2ffe0b4c:	f06f 050f 	mvn.w	r5, #15
2ffe0b50:	e773      	b.n	2ffe0a3a <i2c_read.isra.0+0x8e>
2ffe0b52:	f06f 0515 	mvn.w	r5, #21
2ffe0b56:	e770      	b.n	2ffe0a3a <i2c_read.isra.0+0x8e>
2ffe0b58:	9a03      	ldr	r2, [sp, #12]
2ffe0b5a:	4633      	mov	r3, r6
2ffe0b5c:	4620      	mov	r0, r4
2ffe0b5e:	f7ff fdf8 	bl	2ffe0752 <i2c_wait_stop>
2ffe0b62:	4605      	mov	r5, r0
2ffe0b64:	2800      	cmp	r0, #0
2ffe0b66:	f47f af61 	bne.w	2ffe0a2c <i2c_read.isra.0+0x80>
2ffe0b6a:	6823      	ldr	r3, [r4, #0]
2ffe0b6c:	2220      	movs	r2, #32
2ffe0b6e:	61da      	str	r2, [r3, #28]
2ffe0b70:	6821      	ldr	r1, [r4, #0]
2ffe0b72:	684b      	ldr	r3, [r1, #4]
2ffe0b74:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2ffe0b78:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2ffe0b7c:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2ffe0b80:	f023 0301 	bic.w	r3, r3, #1
2ffe0b84:	604b      	str	r3, [r1, #4]
2ffe0b86:	6122      	str	r2, [r4, #16]
2ffe0b88:	6167      	str	r7, [r4, #20]
2ffe0b8a:	e751      	b.n	2ffe0a30 <i2c_read.isra.0+0x84>
2ffe0b8c:	000f4240 	.word	0x000f4240
2ffe0b90:	80002400 	.word	0x80002400
2ffe0b94:	80002000 	.word	0x80002000

2ffe0b98 <stm32_i2c_get_setup_from_fdt>:
2ffe0b98:	b538      	push	{r3, r4, r5, lr}
2ffe0b9a:	2219      	movs	r2, #25
2ffe0b9c:	460d      	mov	r5, r1
2ffe0b9e:	4604      	mov	r4, r0
2ffe0ba0:	490f      	ldr	r1, [pc, #60]	; (2ffe0be0 <stm32_i2c_get_setup_from_fdt+0x48>)
2ffe0ba2:	f001 f9d9 	bl	2ffe1f58 <fdt_read_uint32_default>
2ffe0ba6:	61e8      	str	r0, [r5, #28]
2ffe0ba8:	220a      	movs	r2, #10
2ffe0baa:	490e      	ldr	r1, [pc, #56]	; (2ffe0be4 <stm32_i2c_get_setup_from_fdt+0x4c>)
2ffe0bac:	4620      	mov	r0, r4
2ffe0bae:	f001 f9d3 	bl	2ffe1f58 <fdt_read_uint32_default>
2ffe0bb2:	6228      	str	r0, [r5, #32]
2ffe0bb4:	4620      	mov	r0, r4
2ffe0bb6:	4a0c      	ldr	r2, [pc, #48]	; (2ffe0be8 <stm32_i2c_get_setup_from_fdt+0x50>)
2ffe0bb8:	490c      	ldr	r1, [pc, #48]	; (2ffe0bec <stm32_i2c_get_setup_from_fdt+0x54>)
2ffe0bba:	f001 f9cd 	bl	2ffe1f58 <fdt_read_uint32_default>
2ffe0bbe:	4a0c      	ldr	r2, [pc, #48]	; (2ffe0bf0 <stm32_i2c_get_setup_from_fdt+0x58>)
2ffe0bc0:	4601      	mov	r1, r0
2ffe0bc2:	4290      	cmp	r0, r2
2ffe0bc4:	d805      	bhi.n	2ffe0bd2 <stm32_i2c_get_setup_from_fdt+0x3a>
2ffe0bc6:	6268      	str	r0, [r5, #36]	; 0x24
2ffe0bc8:	4620      	mov	r0, r4
2ffe0bca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffe0bce:	f7ff bc1d 	b.w	2ffe040c <dt_set_pinctrl_config>
2ffe0bd2:	4808      	ldr	r0, [pc, #32]	; (2ffe0bf4 <stm32_i2c_get_setup_from_fdt+0x5c>)
2ffe0bd4:	f7fb ff8a 	bl	2ffdcaec <tf_log>
2ffe0bd8:	f06f 000e 	mvn.w	r0, #14
2ffe0bdc:	bd38      	pop	{r3, r4, r5, pc}
2ffe0bde:	bf00      	nop
2ffe0be0:	2ffe634f 	.word	0x2ffe634f
2ffe0be4:	2ffe6366 	.word	0x2ffe6366
2ffe0be8:	000186a0 	.word	0x000186a0
2ffe0bec:	2ffe5c89 	.word	0x2ffe5c89
2ffe0bf0:	000f4240 	.word	0x000f4240
2ffe0bf4:	2ffe637e 	.word	0x2ffe637e

2ffe0bf8 <stm32_i2c_init>:
2ffe0bf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe0bfc:	460d      	mov	r5, r1
2ffe0bfe:	b0a5      	sub	sp, #148	; 0x94
2ffe0c00:	4604      	mov	r4, r0
2ffe0c02:	2800      	cmp	r0, #0
2ffe0c04:	f000 8213 	beq.w	2ffe102e <stm32_i2c_init+0x436>
2ffe0c08:	6903      	ldr	r3, [r0, #16]
2ffe0c0a:	b903      	cbnz	r3, 2ffe0c0e <stm32_i2c_init+0x16>
2ffe0c0c:	7303      	strb	r3, [r0, #12]
2ffe0c0e:	68a0      	ldr	r0, [r4, #8]
2ffe0c10:	2324      	movs	r3, #36	; 0x24
2ffe0c12:	6123      	str	r3, [r4, #16]
2ffe0c14:	f7fe fd87 	bl	2ffdf726 <stm32mp_clk_get_rate>
2ffe0c18:	4683      	mov	fp, r0
2ffe0c1a:	b940      	cbnz	r0, 2ffe0c2e <stm32_i2c_init+0x36>
2ffe0c1c:	489a      	ldr	r0, [pc, #616]	; (2ffe0e88 <stm32_i2c_init+0x290>)
2ffe0c1e:	f06f 0815 	mvn.w	r8, #21
2ffe0c22:	f7fb ff63 	bl	2ffdcaec <tf_log>
2ffe0c26:	4640      	mov	r0, r8
2ffe0c28:	b025      	add	sp, #148	; 0x94
2ffe0c2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe0c2e:	6a23      	ldr	r3, [r4, #32]
2ffe0c30:	4298      	cmp	r0, r3
2ffe0c32:	d02d      	beq.n	2ffe0c90 <stm32_i2c_init+0x98>
2ffe0c34:	4b95      	ldr	r3, [pc, #596]	; (2ffe0e8c <stm32_i2c_init+0x294>)
2ffe0c36:	eb03 0650 	add.w	r6, r3, r0, lsr #1
2ffe0c3a:	9306      	str	r3, [sp, #24]
2ffe0c3c:	fbb6 f2f0 	udiv	r2, r6, r0
2ffe0c40:	9203      	str	r2, [sp, #12]
2ffe0c42:	0052      	lsls	r2, r2, #1
2ffe0c44:	920b      	str	r2, [sp, #44]	; 0x2c
2ffe0c46:	6a69      	ldr	r1, [r5, #36]	; 0x24
2ffe0c48:	4b91      	ldr	r3, [pc, #580]	; (2ffe0e90 <stm32_i2c_init+0x298>)
2ffe0c4a:	4299      	cmp	r1, r3
2ffe0c4c:	d97f      	bls.n	2ffe0d4e <stm32_i2c_init+0x156>
2ffe0c4e:	4b91      	ldr	r3, [pc, #580]	; (2ffe0e94 <stm32_i2c_init+0x29c>)
2ffe0c50:	4299      	cmp	r1, r3
2ffe0c52:	d97f      	bls.n	2ffe0d54 <stm32_i2c_init+0x15c>
2ffe0c54:	4b90      	ldr	r3, [pc, #576]	; (2ffe0e98 <stm32_i2c_init+0x2a0>)
2ffe0c56:	4299      	cmp	r1, r3
2ffe0c58:	d87f      	bhi.n	2ffe0d5a <stm32_i2c_init+0x162>
2ffe0c5a:	f04f 0902 	mov.w	r9, #2
2ffe0c5e:	4a8f      	ldr	r2, [pc, #572]	; (2ffe0e9c <stm32_i2c_init+0x2a4>)
2ffe0c60:	ea4f 1349 	mov.w	r3, r9, lsl #5
2ffe0c64:	eb02 1049 	add.w	r0, r2, r9, lsl #5
2ffe0c68:	f852 a003 	ldr.w	sl, [r2, r3]
2ffe0c6c:	9b06      	ldr	r3, [sp, #24]
2ffe0c6e:	6882      	ldr	r2, [r0, #8]
2ffe0c70:	eb03 035a 	add.w	r3, r3, sl, lsr #1
2ffe0c74:	69e9      	ldr	r1, [r5, #28]
2ffe0c76:	fbb3 f3fa 	udiv	r3, r3, sl
2ffe0c7a:	4291      	cmp	r1, r2
2ffe0c7c:	9309      	str	r3, [sp, #36]	; 0x24
2ffe0c7e:	6840      	ldr	r0, [r0, #4]
2ffe0c80:	6a2b      	ldr	r3, [r5, #32]
2ffe0c82:	f240 8083 	bls.w	2ffe0d8c <stm32_i2c_init+0x194>
2ffe0c86:	9000      	str	r0, [sp, #0]
2ffe0c88:	4885      	ldr	r0, [pc, #532]	; (2ffe0ea0 <stm32_i2c_init+0x2a8>)
2ffe0c8a:	f7fb ff2f 	bl	2ffdcaec <tf_log>
2ffe0c8e:	e067      	b.n	2ffe0d60 <stm32_i2c_init+0x168>
2ffe0c90:	69e6      	ldr	r6, [r4, #28]
2ffe0c92:	68a0      	ldr	r0, [r4, #8]
2ffe0c94:	f026 6670 	bic.w	r6, r6, #251658240	; 0xf000000
2ffe0c98:	f7fe fd3c 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe0c9c:	6822      	ldr	r2, [r4, #0]
2ffe0c9e:	2120      	movs	r1, #32
2ffe0ca0:	6813      	ldr	r3, [r2, #0]
2ffe0ca2:	f023 0301 	bic.w	r3, r3, #1
2ffe0ca6:	6013      	str	r3, [r2, #0]
2ffe0ca8:	6823      	ldr	r3, [r4, #0]
2ffe0caa:	611e      	str	r6, [r3, #16]
2ffe0cac:	6822      	ldr	r2, [r4, #0]
2ffe0cae:	6893      	ldr	r3, [r2, #8]
2ffe0cb0:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
2ffe0cb4:	6093      	str	r3, [r2, #8]
2ffe0cb6:	686b      	ldr	r3, [r5, #4]
2ffe0cb8:	6822      	ldr	r2, [r4, #0]
2ffe0cba:	2b01      	cmp	r3, #1
2ffe0cbc:	682b      	ldr	r3, [r5, #0]
2ffe0cbe:	bf0c      	ite	eq
2ffe0cc0:	f443 4300 	orreq.w	r3, r3, #32768	; 0x8000
2ffe0cc4:	f443 4304 	orrne.w	r3, r3, #33792	; 0x8400
2ffe0cc8:	6093      	str	r3, [r2, #8]
2ffe0cca:	2200      	movs	r2, #0
2ffe0ccc:	6823      	ldr	r3, [r4, #0]
2ffe0cce:	605a      	str	r2, [r3, #4]
2ffe0cd0:	686b      	ldr	r3, [r5, #4]
2ffe0cd2:	2b02      	cmp	r3, #2
2ffe0cd4:	bf01      	itttt	eq
2ffe0cd6:	6822      	ldreq	r2, [r4, #0]
2ffe0cd8:	6853      	ldreq	r3, [r2, #4]
2ffe0cda:	f443 6300 	orreq.w	r3, r3, #2048	; 0x800
2ffe0cde:	6053      	streq	r3, [r2, #4]
2ffe0ce0:	6822      	ldr	r2, [r4, #0]
2ffe0ce2:	6853      	ldr	r3, [r2, #4]
2ffe0ce4:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
2ffe0ce8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
2ffe0cec:	6053      	str	r3, [r2, #4]
2ffe0cee:	6822      	ldr	r2, [r4, #0]
2ffe0cf0:	68d3      	ldr	r3, [r2, #12]
2ffe0cf2:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
2ffe0cf6:	60d3      	str	r3, [r2, #12]
2ffe0cf8:	68ea      	ldr	r2, [r5, #12]
2ffe0cfa:	68ab      	ldr	r3, [r5, #8]
2ffe0cfc:	4313      	orrs	r3, r2
2ffe0cfe:	692a      	ldr	r2, [r5, #16]
2ffe0d00:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffe0d04:	6822      	ldr	r2, [r4, #0]
2ffe0d06:	60d3      	str	r3, [r2, #12]
2ffe0d08:	69aa      	ldr	r2, [r5, #24]
2ffe0d0a:	696b      	ldr	r3, [r5, #20]
2ffe0d0c:	4313      	orrs	r3, r2
2ffe0d0e:	6822      	ldr	r2, [r4, #0]
2ffe0d10:	6013      	str	r3, [r2, #0]
2ffe0d12:	6822      	ldr	r2, [r4, #0]
2ffe0d14:	6813      	ldr	r3, [r2, #0]
2ffe0d16:	f043 0301 	orr.w	r3, r3, #1
2ffe0d1a:	6013      	str	r3, [r2, #0]
2ffe0d1c:	2300      	movs	r3, #0
2ffe0d1e:	61a3      	str	r3, [r4, #24]
2ffe0d20:	6163      	str	r3, [r4, #20]
2ffe0d22:	6aab      	ldr	r3, [r5, #40]	; 0x28
2ffe0d24:	7b25      	ldrb	r5, [r4, #12]
2ffe0d26:	6121      	str	r1, [r4, #16]
2ffe0d28:	2b00      	cmp	r3, #0
2ffe0d2a:	bf14      	ite	ne
2ffe0d2c:	2300      	movne	r3, #0
2ffe0d2e:	f44f 5380 	moveq.w	r3, #4096	; 0x1000
2ffe0d32:	2d00      	cmp	r5, #0
2ffe0d34:	f000 815d 	beq.w	2ffe0ff2 <stm32_i2c_init+0x3fa>
2ffe0d38:	485a      	ldr	r0, [pc, #360]	; (2ffe0ea4 <stm32_i2c_init+0x2ac>)
2ffe0d3a:	f06f 010f 	mvn.w	r1, #15
2ffe0d3e:	f06f 080f 	mvn.w	r8, #15
2ffe0d42:	f7fb fed3 	bl	2ffdcaec <tf_log>
2ffe0d46:	68a0      	ldr	r0, [r4, #8]
2ffe0d48:	f7fe fce7 	bl	2ffdf71a <stm32mp_clk_disable>
2ffe0d4c:	e76b      	b.n	2ffe0c26 <stm32_i2c_init+0x2e>
2ffe0d4e:	f04f 0900 	mov.w	r9, #0
2ffe0d52:	e784      	b.n	2ffe0c5e <stm32_i2c_init+0x66>
2ffe0d54:	f04f 0901 	mov.w	r9, #1
2ffe0d58:	e781      	b.n	2ffe0c5e <stm32_i2c_init+0x66>
2ffe0d5a:	4853      	ldr	r0, [pc, #332]	; (2ffe0ea8 <stm32_i2c_init+0x2b0>)
2ffe0d5c:	f7fb fec6 	bl	2ffdcaec <tf_log>
2ffe0d60:	f06f 0815 	mvn.w	r8, #21
2ffe0d64:	4851      	ldr	r0, [pc, #324]	; (2ffe0eac <stm32_i2c_init+0x2b4>)
2ffe0d66:	f7fb fec1 	bl	2ffdcaec <tf_log>
2ffe0d6a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
2ffe0d6c:	4a48      	ldr	r2, [pc, #288]	; (2ffe0e90 <stm32_i2c_init+0x298>)
2ffe0d6e:	4293      	cmp	r3, r2
2ffe0d70:	f240 8160 	bls.w	2ffe1034 <stm32_i2c_init+0x43c>
2ffe0d74:	4948      	ldr	r1, [pc, #288]	; (2ffe0e98 <stm32_i2c_init+0x2a0>)
2ffe0d76:	428b      	cmp	r3, r1
2ffe0d78:	d803      	bhi.n	2ffe0d82 <stm32_i2c_init+0x18a>
2ffe0d7a:	4946      	ldr	r1, [pc, #280]	; (2ffe0e94 <stm32_i2c_init+0x29c>)
2ffe0d7c:	428b      	cmp	r3, r1
2ffe0d7e:	bf98      	it	ls
2ffe0d80:	4611      	movls	r1, r2
2ffe0d82:	484b      	ldr	r0, [pc, #300]	; (2ffe0eb0 <stm32_i2c_init+0x2b8>)
2ffe0d84:	6269      	str	r1, [r5, #36]	; 0x24
2ffe0d86:	f7fb feb1 	bl	2ffdcaec <tf_log>
2ffe0d8a:	e75c      	b.n	2ffe0c46 <stm32_i2c_init+0x4e>
2ffe0d8c:	4298      	cmp	r0, r3
2ffe0d8e:	f4ff af7a 	bcc.w	2ffe0c86 <stm32_i2c_init+0x8e>
2ffe0d92:	f895 802c 	ldrb.w	r8, [r5, #44]	; 0x2c
2ffe0d96:	f1b8 0f10 	cmp.w	r8, #16
2ffe0d9a:	d905      	bls.n	2ffe0da8 <stm32_i2c_init+0x1b0>
2ffe0d9c:	4845      	ldr	r0, [pc, #276]	; (2ffe0eb4 <stm32_i2c_init+0x2bc>)
2ffe0d9e:	2210      	movs	r2, #16
2ffe0da0:	4641      	mov	r1, r8
2ffe0da2:	f7fb fea3 	bl	2ffdcaec <tf_log>
2ffe0da6:	e7db      	b.n	2ffe0d60 <stm32_i2c_init+0x168>
2ffe0da8:	6aaf      	ldr	r7, [r5, #40]	; 0x28
2ffe0daa:	2f00      	cmp	r7, #0
2ffe0dac:	d130      	bne.n	2ffe0e10 <stm32_i2c_init+0x218>
2ffe0dae:	46bc      	mov	ip, r7
2ffe0db0:	9a03      	ldr	r2, [sp, #12]
2ffe0db2:	fb02 f208 	mul.w	r2, r2, r8
2ffe0db6:	f108 0803 	add.w	r8, r8, #3
2ffe0dba:	9207      	str	r2, [sp, #28]
2ffe0dbc:	9a03      	ldr	r2, [sp, #12]
2ffe0dbe:	fb02 f808 	mul.w	r8, r2, r8
2ffe0dc2:	4a36      	ldr	r2, [pc, #216]	; (2ffe0e9c <stm32_i2c_init+0x2a4>)
2ffe0dc4:	eba3 0308 	sub.w	r3, r3, r8
2ffe0dc8:	eb02 1049 	add.w	r0, r2, r9, lsl #5
2ffe0dcc:	68c2      	ldr	r2, [r0, #12]
2ffe0dce:	4413      	add	r3, r2
2ffe0dd0:	1bdb      	subs	r3, r3, r7
2ffe0dd2:	9304      	str	r3, [sp, #16]
2ffe0dd4:	9b03      	ldr	r3, [sp, #12]
2ffe0dd6:	4498      	add	r8, r3
2ffe0dd8:	6903      	ldr	r3, [r0, #16]
2ffe0dda:	4488      	add	r8, r1
2ffe0ddc:	eba3 0808 	sub.w	r8, r3, r8
2ffe0de0:	6943      	ldr	r3, [r0, #20]
2ffe0de2:	a810      	add	r0, sp, #64	; 0x40
2ffe0de4:	eba8 080c 	sub.w	r8, r8, ip
2ffe0de8:	18cb      	adds	r3, r1, r3
2ffe0dea:	2150      	movs	r1, #80	; 0x50
2ffe0dec:	930a      	str	r3, [sp, #40]	; 0x28
2ffe0dee:	9b04      	ldr	r3, [sp, #16]
2ffe0df0:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
2ffe0df4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
2ffe0df8:	9304      	str	r3, [sp, #16]
2ffe0dfa:	f7f5 eb32 	blx	2ffd6460 <zero_normalmem>
2ffe0dfe:	9803      	ldr	r0, [sp, #12]
2ffe0e00:	2300      	movs	r3, #0
2ffe0e02:	f04f 0c10 	mov.w	ip, #16
2ffe0e06:	9005      	str	r0, [sp, #20]
2ffe0e08:	1c59      	adds	r1, r3, #1
2ffe0e0a:	9108      	str	r1, [sp, #32]
2ffe0e0c:	2200      	movs	r2, #0
2ffe0e0e:	e011      	b.n	2ffe0e34 <stm32_i2c_init+0x23c>
2ffe0e10:	2732      	movs	r7, #50	; 0x32
2ffe0e12:	f44f 7c82 	mov.w	ip, #260	; 0x104
2ffe0e16:	e7cb      	b.n	2ffe0db0 <stm32_i2c_init+0x1b8>
2ffe0e18:	4486      	add	lr, r0
2ffe0e1a:	3101      	adds	r1, #1
2ffe0e1c:	b289      	uxth	r1, r1
2ffe0e1e:	2910      	cmp	r1, #16
2ffe0e20:	d110      	bne.n	2ffe0e44 <stm32_i2c_init+0x24c>
2ffe0e22:	4563      	cmp	r3, ip
2ffe0e24:	d022      	beq.n	2ffe0e6c <stm32_i2c_init+0x274>
2ffe0e26:	9905      	ldr	r1, [sp, #20]
2ffe0e28:	3201      	adds	r2, #1
2ffe0e2a:	b292      	uxth	r2, r2
2ffe0e2c:	4401      	add	r1, r0
2ffe0e2e:	2a10      	cmp	r2, #16
2ffe0e30:	9105      	str	r1, [sp, #20]
2ffe0e32:	d01b      	beq.n	2ffe0e6c <stm32_i2c_init+0x274>
2ffe0e34:	990a      	ldr	r1, [sp, #40]	; 0x28
2ffe0e36:	460e      	mov	r6, r1
2ffe0e38:	9905      	ldr	r1, [sp, #20]
2ffe0e3a:	428e      	cmp	r6, r1
2ffe0e3c:	d8f3      	bhi.n	2ffe0e26 <stm32_i2c_init+0x22e>
2ffe0e3e:	f8dd e00c 	ldr.w	lr, [sp, #12]
2ffe0e42:	2100      	movs	r1, #0
2ffe0e44:	9e04      	ldr	r6, [sp, #16]
2ffe0e46:	4576      	cmp	r6, lr
2ffe0e48:	d8e6      	bhi.n	2ffe0e18 <stm32_i2c_init+0x220>
2ffe0e4a:	45f0      	cmp	r8, lr
2ffe0e4c:	d3e4      	bcc.n	2ffe0e18 <stm32_i2c_init+0x220>
2ffe0e4e:	4563      	cmp	r3, ip
2ffe0e50:	d0e2      	beq.n	2ffe0e18 <stm32_i2c_init+0x220>
2ffe0e52:	eb03 0c83 	add.w	ip, r3, r3, lsl #2
2ffe0e56:	ae24      	add	r6, sp, #144	; 0x90
2ffe0e58:	44b4      	add	ip, r6
2ffe0e5a:	f80c 2c50 	strb.w	r2, [ip, #-80]
2ffe0e5e:	f04f 0201 	mov.w	r2, #1
2ffe0e62:	f80c 1c4f 	strb.w	r1, [ip, #-79]
2ffe0e66:	f80c 2c4c 	strb.w	r2, [ip, #-76]
2ffe0e6a:	469c      	mov	ip, r3
2ffe0e6c:	9b03      	ldr	r3, [sp, #12]
2ffe0e6e:	4418      	add	r0, r3
2ffe0e70:	9b08      	ldr	r3, [sp, #32]
2ffe0e72:	2b10      	cmp	r3, #16
2ffe0e74:	d1c7      	bne.n	2ffe0e06 <stm32_i2c_init+0x20e>
2ffe0e76:	f1bc 0f10 	cmp.w	ip, #16
2ffe0e7a:	d11f      	bne.n	2ffe0ebc <stm32_i2c_init+0x2c4>
2ffe0e7c:	480e      	ldr	r0, [pc, #56]	; (2ffe0eb8 <stm32_i2c_init+0x2c0>)
2ffe0e7e:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2ffe0e82:	f7fb fe33 	bl	2ffdcaec <tf_log>
2ffe0e86:	e76d      	b.n	2ffe0d64 <stm32_i2c_init+0x16c>
2ffe0e88:	2ffe639c 	.word	0x2ffe639c
2ffe0e8c:	3b9aca00 	.word	0x3b9aca00
2ffe0e90:	000186a0 	.word	0x000186a0
2ffe0e94:	00061a80 	.word	0x00061a80
2ffe0e98:	000f4240 	.word	0x000f4240
2ffe0e9c:	2ffe64e4 	.word	0x2ffe64e4
2ffe0ea0:	2ffe63d0 	.word	0x2ffe63d0
2ffe0ea4:	2ffe6493 	.word	0x2ffe6493
2ffe0ea8:	2ffe63b2 	.word	0x2ffe63b2
2ffe0eac:	2ffe6454 	.word	0x2ffe6454
2ffe0eb0:	2ffe6474 	.word	0x2ffe6474
2ffe0eb4:	2ffe6404 	.word	0x2ffe6404
2ffe0eb8:	2ffe641d 	.word	0x2ffe641d
2ffe0ebc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
2ffe0ebe:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
2ffe0ec2:	9b07      	ldr	r3, [sp, #28]
2ffe0ec4:	f04f 0e00 	mov.w	lr, #0
2ffe0ec8:	9903      	ldr	r1, [sp, #12]
2ffe0eca:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2ffe0ece:	4413      	add	r3, r2
2ffe0ed0:	443b      	add	r3, r7
2ffe0ed2:	9308      	str	r3, [sp, #32]
2ffe0ed4:	2364      	movs	r3, #100	; 0x64
2ffe0ed6:	fbba f2f3 	udiv	r2, sl, r3
2ffe0eda:	2350      	movs	r3, #80	; 0x50
2ffe0edc:	4353      	muls	r3, r2
2ffe0ede:	9a06      	ldr	r2, [sp, #24]
2ffe0ee0:	fbb2 f3f3 	udiv	r3, r2, r3
2ffe0ee4:	930a      	str	r3, [sp, #40]	; 0x28
2ffe0ee6:	fbb2 f3fa 	udiv	r3, r2, sl
2ffe0eea:	930c      	str	r3, [sp, #48]	; 0x30
2ffe0eec:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
2ffe0ef0:	9305      	str	r3, [sp, #20]
2ffe0ef2:	4b52      	ldr	r3, [pc, #328]	; (2ffe103c <stm32_i2c_init+0x444>)
2ffe0ef4:	eb03 1a49 	add.w	sl, r3, r9, lsl #5
2ffe0ef8:	9b07      	ldr	r3, [sp, #28]
2ffe0efa:	443b      	add	r3, r7
2ffe0efc:	930f      	str	r3, [sp, #60]	; 0x3c
2ffe0efe:	f89c 3004 	ldrb.w	r3, [ip, #4]
2ffe0f02:	2b00      	cmp	r3, #0
2ffe0f04:	d045      	beq.n	2ffe0f92 <stm32_i2c_init+0x39a>
2ffe0f06:	f8da 3018 	ldr.w	r3, [sl, #24]
2ffe0f0a:	930d      	str	r3, [sp, #52]	; 0x34
2ffe0f0c:	9b08      	ldr	r3, [sp, #32]
2ffe0f0e:	440b      	add	r3, r1
2ffe0f10:	9304      	str	r3, [sp, #16]
2ffe0f12:	4699      	mov	r9, r3
2ffe0f14:	2300      	movs	r3, #0
2ffe0f16:	9a0d      	ldr	r2, [sp, #52]	; 0x34
2ffe0f18:	4591      	cmp	r9, r2
2ffe0f1a:	d334      	bcc.n	2ffe0f86 <stm32_i2c_init+0x38e>
2ffe0f1c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
2ffe0f1e:	9803      	ldr	r0, [sp, #12]
2ffe0f20:	eba9 0202 	sub.w	r2, r9, r2
2ffe0f24:	ebb0 0f92 	cmp.w	r0, r2, lsr #2
2ffe0f28:	d22d      	bcs.n	2ffe0f86 <stm32_i2c_init+0x38e>
2ffe0f2a:	6a28      	ldr	r0, [r5, #32]
2ffe0f2c:	69ea      	ldr	r2, [r5, #28]
2ffe0f2e:	9e09      	ldr	r6, [sp, #36]	; 0x24
2ffe0f30:	4402      	add	r2, r0
2ffe0f32:	444a      	add	r2, r9
2ffe0f34:	9207      	str	r2, [sp, #28]
2ffe0f36:	2200      	movs	r2, #0
2ffe0f38:	9807      	ldr	r0, [sp, #28]
2ffe0f3a:	9f04      	ldr	r7, [sp, #16]
2ffe0f3c:	1b80      	subs	r0, r0, r6
2ffe0f3e:	900e      	str	r0, [sp, #56]	; 0x38
2ffe0f40:	9807      	ldr	r0, [sp, #28]
2ffe0f42:	9e0c      	ldr	r6, [sp, #48]	; 0x30
2ffe0f44:	1838      	adds	r0, r7, r0
2ffe0f46:	4286      	cmp	r6, r0
2ffe0f48:	d817      	bhi.n	2ffe0f7a <stm32_i2c_init+0x382>
2ffe0f4a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
2ffe0f4c:	4286      	cmp	r6, r0
2ffe0f4e:	d314      	bcc.n	2ffe0f7a <stm32_i2c_init+0x382>
2ffe0f50:	f8da 001c 	ldr.w	r0, [sl, #28]
2ffe0f54:	42b8      	cmp	r0, r7
2ffe0f56:	d810      	bhi.n	2ffe0f7a <stm32_i2c_init+0x382>
2ffe0f58:	9803      	ldr	r0, [sp, #12]
2ffe0f5a:	42b8      	cmp	r0, r7
2ffe0f5c:	d20d      	bcs.n	2ffe0f7a <stm32_i2c_init+0x382>
2ffe0f5e:	980e      	ldr	r0, [sp, #56]	; 0x38
2ffe0f60:	9e05      	ldr	r6, [sp, #20]
2ffe0f62:	4438      	add	r0, r7
2ffe0f64:	2800      	cmp	r0, #0
2ffe0f66:	bfb8      	it	lt
2ffe0f68:	4240      	neglt	r0, r0
2ffe0f6a:	42b0      	cmp	r0, r6
2ffe0f6c:	bfbf      	itttt	lt
2ffe0f6e:	f88c 3003 	strblt.w	r3, [ip, #3]
2ffe0f72:	46f0      	movlt	r8, lr
2ffe0f74:	f88c 2002 	strblt.w	r2, [ip, #2]
2ffe0f78:	9005      	strlt	r0, [sp, #20]
2ffe0f7a:	440f      	add	r7, r1
2ffe0f7c:	3201      	adds	r2, #1
2ffe0f7e:	b292      	uxth	r2, r2
2ffe0f80:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
2ffe0f84:	d1dc      	bne.n	2ffe0f40 <stm32_i2c_init+0x348>
2ffe0f86:	4489      	add	r9, r1
2ffe0f88:	3301      	adds	r3, #1
2ffe0f8a:	b29b      	uxth	r3, r3
2ffe0f8c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
2ffe0f90:	d1c1      	bne.n	2ffe0f16 <stm32_i2c_init+0x31e>
2ffe0f92:	9b03      	ldr	r3, [sp, #12]
2ffe0f94:	f10e 0e01 	add.w	lr, lr, #1
2ffe0f98:	f1be 0f10 	cmp.w	lr, #16
2ffe0f9c:	f10c 0c05 	add.w	ip, ip, #5
2ffe0fa0:	4419      	add	r1, r3
2ffe0fa2:	d1ac      	bne.n	2ffe0efe <stm32_i2c_init+0x306>
2ffe0fa4:	f1b8 3fff 	cmp.w	r8, #4294967295	; 0xffffffff
2ffe0fa8:	d103      	bne.n	2ffe0fb2 <stm32_i2c_init+0x3ba>
2ffe0faa:	4825      	ldr	r0, [pc, #148]	; (2ffe1040 <stm32_i2c_init+0x448>)
2ffe0fac:	f7fb fd9e 	bl	2ffdcaec <tf_log>
2ffe0fb0:	e6d8      	b.n	2ffe0d64 <stm32_i2c_init+0x16c>
2ffe0fb2:	eb08 0388 	add.w	r3, r8, r8, lsl #2
2ffe0fb6:	aa24      	add	r2, sp, #144	; 0x90
2ffe0fb8:	4413      	add	r3, r2
2ffe0fba:	f8c4 b020 	str.w	fp, [r4, #32]
2ffe0fbe:	f813 6c4d 	ldrb.w	r6, [r3, #-77]
2ffe0fc2:	ea46 7608 	orr.w	r6, r6, r8, lsl #28
2ffe0fc6:	f813 8c4e 	ldrb.w	r8, [r3, #-78]
2ffe0fca:	ea46 2608 	orr.w	r6, r6, r8, lsl #8
2ffe0fce:	f813 8c50 	ldrb.w	r8, [r3, #-80]
2ffe0fd2:	ea4f 5808 	mov.w	r8, r8, lsl #20
2ffe0fd6:	f408 0870 	and.w	r8, r8, #15728640	; 0xf00000
2ffe0fda:	ea46 0608 	orr.w	r6, r6, r8
2ffe0fde:	f813 8c4f 	ldrb.w	r8, [r3, #-79]
2ffe0fe2:	ea4f 4808 	mov.w	r8, r8, lsl #16
2ffe0fe6:	f408 2870 	and.w	r8, r8, #983040	; 0xf0000
2ffe0fea:	ea46 0608 	orr.w	r6, r6, r8
2ffe0fee:	61e6      	str	r6, [r4, #28]
2ffe0ff0:	e64f      	b.n	2ffe0c92 <stm32_i2c_init+0x9a>
2ffe0ff2:	6820      	ldr	r0, [r4, #0]
2ffe0ff4:	2201      	movs	r2, #1
2ffe0ff6:	7322      	strb	r2, [r4, #12]
2ffe0ff8:	2224      	movs	r2, #36	; 0x24
2ffe0ffa:	6122      	str	r2, [r4, #16]
2ffe0ffc:	46a8      	mov	r8, r5
2ffe0ffe:	6802      	ldr	r2, [r0, #0]
2ffe1000:	f022 0201 	bic.w	r2, r2, #1
2ffe1004:	6002      	str	r2, [r0, #0]
2ffe1006:	6820      	ldr	r0, [r4, #0]
2ffe1008:	6802      	ldr	r2, [r0, #0]
2ffe100a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
2ffe100e:	6002      	str	r2, [r0, #0]
2ffe1010:	6822      	ldr	r2, [r4, #0]
2ffe1012:	6810      	ldr	r0, [r2, #0]
2ffe1014:	4303      	orrs	r3, r0
2ffe1016:	6013      	str	r3, [r2, #0]
2ffe1018:	6822      	ldr	r2, [r4, #0]
2ffe101a:	6813      	ldr	r3, [r2, #0]
2ffe101c:	f043 0301 	orr.w	r3, r3, #1
2ffe1020:	6013      	str	r3, [r2, #0]
2ffe1022:	6121      	str	r1, [r4, #16]
2ffe1024:	68a0      	ldr	r0, [r4, #8]
2ffe1026:	7325      	strb	r5, [r4, #12]
2ffe1028:	f7fe fb77 	bl	2ffdf71a <stm32mp_clk_disable>
2ffe102c:	e5fb      	b.n	2ffe0c26 <stm32_i2c_init+0x2e>
2ffe102e:	f06f 0801 	mvn.w	r8, #1
2ffe1032:	e5f8      	b.n	2ffe0c26 <stm32_i2c_init+0x2e>
2ffe1034:	4803      	ldr	r0, [pc, #12]	; (2ffe1044 <stm32_i2c_init+0x44c>)
2ffe1036:	f7fb fd59 	bl	2ffdcaec <tf_log>
2ffe103a:	e5f4      	b.n	2ffe0c26 <stm32_i2c_init+0x2e>
2ffe103c:	2ffe64e4 	.word	0x2ffe64e4
2ffe1040:	2ffe643a 	.word	0x2ffe643a
2ffe1044:	2ffe64be 	.word	0x2ffe64be

2ffe1048 <stm32_i2c_mem_write>:
2ffe1048:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2ffe104a:	2440      	movs	r4, #64	; 0x40
2ffe104c:	9403      	str	r4, [sp, #12]
2ffe104e:	9c08      	ldr	r4, [sp, #32]
2ffe1050:	9402      	str	r4, [sp, #8]
2ffe1052:	f8bd 401c 	ldrh.w	r4, [sp, #28]
2ffe1056:	9401      	str	r4, [sp, #4]
2ffe1058:	9c06      	ldr	r4, [sp, #24]
2ffe105a:	9400      	str	r4, [sp, #0]
2ffe105c:	f7ff fb9a 	bl	2ffe0794 <i2c_write>
2ffe1060:	b004      	add	sp, #16
2ffe1062:	bd10      	pop	{r4, pc}

2ffe1064 <stm32_i2c_mem_read>:
2ffe1064:	b430      	push	{r4, r5}
2ffe1066:	2540      	movs	r5, #64	; 0x40
2ffe1068:	f8bd 400c 	ldrh.w	r4, [sp, #12]
2ffe106c:	9504      	str	r5, [sp, #16]
2ffe106e:	9403      	str	r4, [sp, #12]
2ffe1070:	bc30      	pop	{r4, r5}
2ffe1072:	f7ff bc9b 	b.w	2ffe09ac <i2c_read.isra.0>
	...

2ffe1078 <stm32_i2c_is_device_ready>:
2ffe1078:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe107c:	469a      	mov	sl, r3
2ffe107e:	6903      	ldr	r3, [r0, #16]
2ffe1080:	b085      	sub	sp, #20
2ffe1082:	4604      	mov	r4, r0
2ffe1084:	460e      	mov	r6, r1
2ffe1086:	2b20      	cmp	r3, #32
2ffe1088:	4617      	mov	r7, r2
2ffe108a:	f040 8094 	bne.w	2ffe11b6 <stm32_i2c_is_device_ready+0x13e>
2ffe108e:	7b05      	ldrb	r5, [r0, #12]
2ffe1090:	2d00      	cmp	r5, #0
2ffe1092:	f040 8090 	bne.w	2ffe11b6 <stm32_i2c_is_device_ready+0x13e>
2ffe1096:	6880      	ldr	r0, [r0, #8]
2ffe1098:	f7fe fb3c 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe109c:	6165      	str	r5, [r4, #20]
2ffe109e:	2301      	movs	r3, #1
2ffe10a0:	7323      	strb	r3, [r4, #12]
2ffe10a2:	6823      	ldr	r3, [r4, #0]
2ffe10a4:	699d      	ldr	r5, [r3, #24]
2ffe10a6:	f415 4500 	ands.w	r5, r5, #32768	; 0x8000
2ffe10aa:	d009      	beq.n	2ffe10c0 <stm32_i2c_is_device_ready+0x48>
2ffe10ac:	2500      	movs	r5, #0
2ffe10ae:	68a0      	ldr	r0, [r4, #8]
2ffe10b0:	2300      	movs	r3, #0
2ffe10b2:	7323      	strb	r3, [r4, #12]
2ffe10b4:	f7fe fb31 	bl	2ffdf71a <stm32mp_clk_disable>
2ffe10b8:	4628      	mov	r0, r5
2ffe10ba:	b005      	add	sp, #20
2ffe10bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe10c0:	f3c6 0609 	ubfx	r6, r6, #0, #10
2ffe10c4:	2324      	movs	r3, #36	; 0x24
2ffe10c6:	6123      	str	r3, [r4, #16]
2ffe10c8:	f046 7b00 	orr.w	fp, r6, #33554432	; 0x2000000
2ffe10cc:	61a5      	str	r5, [r4, #24]
2ffe10ce:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2ffe10d2:	fb03 fa0a 	mul.w	sl, r3, sl
2ffe10d6:	f44b 5b00 	orr.w	fp, fp, #8192	; 0x2000
2ffe10da:	6823      	ldr	r3, [r4, #0]
2ffe10dc:	689a      	ldr	r2, [r3, #8]
2ffe10de:	0552      	lsls	r2, r2, #21
2ffe10e0:	bf52      	itee	pl
2ffe10e2:	f8c3 b004 	strpl.w	fp, [r3, #4]
2ffe10e6:	f446 5220 	orrmi.w	r2, r6, #10240	; 0x2800
2ffe10ea:	605a      	strmi	r2, [r3, #4]
2ffe10ec:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffe10f0:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffe10f4:	e9cd 2302 	strd	r2, r3, [sp, #8]
2ffe10f8:	fbaa 0100 	umull	r0, r1, sl, r0
2ffe10fc:	4a2f      	ldr	r2, [pc, #188]	; (2ffe11bc <stm32_i2c_is_device_ready+0x144>)
2ffe10fe:	2300      	movs	r3, #0
2ffe1100:	f001 eaae 	blx	2ffe2660 <__aeabi_uldivmod>
2ffe1104:	9b02      	ldr	r3, [sp, #8]
2ffe1106:	6822      	ldr	r2, [r4, #0]
2ffe1108:	eb10 0803 	adds.w	r8, r0, r3
2ffe110c:	9b03      	ldr	r3, [sp, #12]
2ffe110e:	f102 0c18 	add.w	ip, r2, #24
2ffe1112:	eb41 0903 	adc.w	r9, r1, r3
2ffe1116:	f8dc 3000 	ldr.w	r3, [ip]
2ffe111a:	f013 0330 	ands.w	r3, r3, #48	; 0x30
2ffe111e:	d10d      	bne.n	2ffe113c <stm32_i2c_is_device_ready+0xc4>
2ffe1120:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffe1124:	4589      	cmp	r9, r1
2ffe1126:	bf08      	it	eq
2ffe1128:	4580      	cmpeq	r8, r0
2ffe112a:	d2f4      	bcs.n	2ffe1116 <stm32_i2c_is_device_ready+0x9e>
2ffe112c:	69a2      	ldr	r2, [r4, #24]
2ffe112e:	6163      	str	r3, [r4, #20]
2ffe1130:	f042 0220 	orr.w	r2, r2, #32
2ffe1134:	61a2      	str	r2, [r4, #24]
2ffe1136:	2220      	movs	r2, #32
2ffe1138:	6122      	str	r2, [r4, #16]
2ffe113a:	e7b7      	b.n	2ffe10ac <stm32_i2c_is_device_ready+0x34>
2ffe113c:	6992      	ldr	r2, [r2, #24]
2ffe113e:	e9cd 8900 	strd	r8, r9, [sp]
2ffe1142:	f012 0210 	ands.w	r2, r2, #16
2ffe1146:	d10b      	bne.n	2ffe1160 <stm32_i2c_is_device_ready+0xe8>
2ffe1148:	2120      	movs	r1, #32
2ffe114a:	4620      	mov	r0, r4
2ffe114c:	f7ff fa76 	bl	2ffe063c <i2c_wait_flag>
2ffe1150:	2800      	cmp	r0, #0
2ffe1152:	d1ab      	bne.n	2ffe10ac <stm32_i2c_is_device_ready+0x34>
2ffe1154:	6822      	ldr	r2, [r4, #0]
2ffe1156:	2320      	movs	r3, #32
2ffe1158:	2501      	movs	r5, #1
2ffe115a:	61d3      	str	r3, [r2, #28]
2ffe115c:	6123      	str	r3, [r4, #16]
2ffe115e:	e7a6      	b.n	2ffe10ae <stm32_i2c_is_device_ready+0x36>
2ffe1160:	2200      	movs	r2, #0
2ffe1162:	2120      	movs	r1, #32
2ffe1164:	4620      	mov	r0, r4
2ffe1166:	f7ff fa69 	bl	2ffe063c <i2c_wait_flag>
2ffe116a:	4602      	mov	r2, r0
2ffe116c:	2800      	cmp	r0, #0
2ffe116e:	d19d      	bne.n	2ffe10ac <stm32_i2c_is_device_ready+0x34>
2ffe1170:	6823      	ldr	r3, [r4, #0]
2ffe1172:	2110      	movs	r1, #16
2ffe1174:	42bd      	cmp	r5, r7
2ffe1176:	61d9      	str	r1, [r3, #28]
2ffe1178:	f04f 0120 	mov.w	r1, #32
2ffe117c:	6823      	ldr	r3, [r4, #0]
2ffe117e:	61d9      	str	r1, [r3, #28]
2ffe1180:	d10d      	bne.n	2ffe119e <stm32_i2c_is_device_ready+0x126>
2ffe1182:	6820      	ldr	r0, [r4, #0]
2ffe1184:	6843      	ldr	r3, [r0, #4]
2ffe1186:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
2ffe118a:	6043      	str	r3, [r0, #4]
2ffe118c:	4620      	mov	r0, r4
2ffe118e:	e9cd 8900 	strd	r8, r9, [sp]
2ffe1192:	f7ff fa53 	bl	2ffe063c <i2c_wait_flag>
2ffe1196:	2800      	cmp	r0, #0
2ffe1198:	d188      	bne.n	2ffe10ac <stm32_i2c_is_device_ready+0x34>
2ffe119a:	6823      	ldr	r3, [r4, #0]
2ffe119c:	61d9      	str	r1, [r3, #28]
2ffe119e:	3501      	adds	r5, #1
2ffe11a0:	42af      	cmp	r7, r5
2ffe11a2:	d89a      	bhi.n	2ffe10da <stm32_i2c_is_device_ready+0x62>
2ffe11a4:	69a3      	ldr	r3, [r4, #24]
2ffe11a6:	2500      	movs	r5, #0
2ffe11a8:	6165      	str	r5, [r4, #20]
2ffe11aa:	f043 0320 	orr.w	r3, r3, #32
2ffe11ae:	61a3      	str	r3, [r4, #24]
2ffe11b0:	2320      	movs	r3, #32
2ffe11b2:	6123      	str	r3, [r4, #16]
2ffe11b4:	e77b      	b.n	2ffe10ae <stm32_i2c_is_device_ready+0x36>
2ffe11b6:	2500      	movs	r5, #0
2ffe11b8:	e77e      	b.n	2ffe10b8 <stm32_i2c_is_device_ready+0x40>
2ffe11ba:	bf00      	nop
2ffe11bc:	000f4240 	.word	0x000f4240

2ffe11c0 <stm32_iwdg_refresh>:
2ffe11c0:	b510      	push	{r4, lr}
2ffe11c2:	4c0e      	ldr	r4, [pc, #56]	; (2ffe11fc <stm32_iwdg_refresh+0x3c>)
2ffe11c4:	6823      	ldr	r3, [r4, #0]
2ffe11c6:	b14b      	cbz	r3, 2ffe11dc <stm32_iwdg_refresh+0x1c>
2ffe11c8:	6860      	ldr	r0, [r4, #4]
2ffe11ca:	f7fe faa3 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe11ce:	6823      	ldr	r3, [r4, #0]
2ffe11d0:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
2ffe11d4:	601a      	str	r2, [r3, #0]
2ffe11d6:	6860      	ldr	r0, [r4, #4]
2ffe11d8:	f7fe fa9f 	bl	2ffdf71a <stm32mp_clk_disable>
2ffe11dc:	6923      	ldr	r3, [r4, #16]
2ffe11de:	b15b      	cbz	r3, 2ffe11f8 <stm32_iwdg_refresh+0x38>
2ffe11e0:	6960      	ldr	r0, [r4, #20]
2ffe11e2:	f7fe fa97 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe11e6:	6923      	ldr	r3, [r4, #16]
2ffe11e8:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
2ffe11ec:	601a      	str	r2, [r3, #0]
2ffe11ee:	6960      	ldr	r0, [r4, #20]
2ffe11f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe11f4:	f7fe ba91 	b.w	2ffdf71a <stm32mp_clk_disable>
2ffe11f8:	bd10      	pop	{r4, pc}
2ffe11fa:	bf00      	nop
2ffe11fc:	2ffe9090 	.word	0x2ffe9090

2ffe1200 <stm32_iwdg_init>:
2ffe1200:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2ffe1204:	b087      	sub	sp, #28
2ffe1206:	a801      	add	r0, sp, #4
2ffe1208:	f000 fe58 	bl	2ffe1ebc <fdt_get_address>
2ffe120c:	b918      	cbnz	r0, 2ffe1216 <stm32_iwdg_init+0x16>
2ffe120e:	f7fb fd0b 	bl	2ffdcc28 <console_flush>
2ffe1212:	f7f5 e826 	blx	2ffd6260 <do_panic>
2ffe1216:	4a3a      	ldr	r2, [pc, #232]	; (2ffe1300 <stm32_iwdg_init+0x100>)
2ffe1218:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffe121c:	4e39      	ldr	r6, [pc, #228]	; (2ffe1304 <stm32_iwdg_init+0x104>)
2ffe121e:	a802      	add	r0, sp, #8
2ffe1220:	f8df 80ec 	ldr.w	r8, [pc, #236]	; 2ffe1310 <stm32_iwdg_init+0x110>
2ffe1224:	f000 ff70 	bl	2ffe2108 <dt_get_node>
2ffe1228:	ea40 75e0 	orr.w	r5, r0, r0, asr #31
2ffe122c:	1c6b      	adds	r3, r5, #1
2ffe122e:	d103      	bne.n	2ffe1238 <stm32_iwdg_init+0x38>
2ffe1230:	2000      	movs	r0, #0
2ffe1232:	b007      	add	sp, #28
2ffe1234:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffe1238:	9802      	ldr	r0, [sp, #8]
2ffe123a:	f7fc f8c9 	bl	2ffdd3d0 <stm32_iwdg_get_instance>
2ffe123e:	0104      	lsls	r4, r0, #4
2ffe1240:	4607      	mov	r7, r0
2ffe1242:	9b02      	ldr	r3, [sp, #8]
2ffe1244:	4642      	mov	r2, r8
2ffe1246:	eb06 1900 	add.w	r9, r6, r0, lsl #4
2ffe124a:	4629      	mov	r1, r5
2ffe124c:	5133      	str	r3, [r6, r4]
2ffe124e:	9b03      	ldr	r3, [sp, #12]
2ffe1250:	9801      	ldr	r0, [sp, #4]
2ffe1252:	f8c9 3004 	str.w	r3, [r9, #4]
2ffe1256:	2300      	movs	r3, #0
2ffe1258:	f001 fcbf 	bl	2ffe2bda <fdt_getprop>
2ffe125c:	b928      	cbnz	r0, 2ffe126a <stm32_iwdg_init+0x6a>
2ffe125e:	f899 3008 	ldrb.w	r3, [r9, #8]
2ffe1262:	f043 0302 	orr.w	r3, r3, #2
2ffe1266:	f889 3008 	strb.w	r3, [r9, #8]
2ffe126a:	4a27      	ldr	r2, [pc, #156]	; (2ffe1308 <stm32_iwdg_init+0x108>)
2ffe126c:	2300      	movs	r3, #0
2ffe126e:	9801      	ldr	r0, [sp, #4]
2ffe1270:	4629      	mov	r1, r5
2ffe1272:	f001 fcb2 	bl	2ffe2bda <fdt_getprop>
2ffe1276:	b920      	cbnz	r0, 2ffe1282 <stm32_iwdg_init+0x82>
2ffe1278:	1932      	adds	r2, r6, r4
2ffe127a:	7a13      	ldrb	r3, [r2, #8]
2ffe127c:	f043 0304 	orr.w	r3, r3, #4
2ffe1280:	7213      	strb	r3, [r2, #8]
2ffe1282:	4638      	mov	r0, r7
2ffe1284:	f7fc f8b8 	bl	2ffdd3f8 <stm32_iwdg_get_otp_config>
2ffe1288:	9b05      	ldr	r3, [sp, #20]
2ffe128a:	f010 0f01 	tst.w	r0, #1
2ffe128e:	d029      	beq.n	2ffe12e4 <stm32_iwdg_init+0xe4>
2ffe1290:	b923      	cbnz	r3, 2ffe129c <stm32_iwdg_init+0x9c>
2ffe1292:	481e      	ldr	r0, [pc, #120]	; (2ffe130c <stm32_iwdg_init+0x10c>)
2ffe1294:	1c79      	adds	r1, r7, #1
2ffe1296:	f7fb fc29 	bl	2ffdcaec <tf_log>
2ffe129a:	e7b8      	b.n	2ffe120e <stm32_iwdg_init+0xe>
2ffe129c:	1932      	adds	r2, r6, r4
2ffe129e:	7a13      	ldrb	r3, [r2, #8]
2ffe12a0:	f043 0301 	orr.w	r3, r3, #1
2ffe12a4:	7213      	strb	r3, [r2, #8]
2ffe12a6:	0781      	lsls	r1, r0, #30
2ffe12a8:	bf41      	itttt	mi
2ffe12aa:	1932      	addmi	r2, r6, r4
2ffe12ac:	7a13      	ldrbmi	r3, [r2, #8]
2ffe12ae:	f043 0302 	orrmi.w	r3, r3, #2
2ffe12b2:	7213      	strbmi	r3, [r2, #8]
2ffe12b4:	0742      	lsls	r2, r0, #29
2ffe12b6:	bf48      	it	mi
2ffe12b8:	1932      	addmi	r2, r6, r4
2ffe12ba:	4434      	add	r4, r6
2ffe12bc:	bf48      	it	mi
2ffe12be:	7a13      	ldrbmi	r3, [r2, #8]
2ffe12c0:	6860      	ldr	r0, [r4, #4]
2ffe12c2:	bf44      	itt	mi
2ffe12c4:	f043 0304 	orrmi.w	r3, r3, #4
2ffe12c8:	7213      	strbmi	r3, [r2, #8]
2ffe12ca:	f7fe fa23 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe12ce:	6860      	ldr	r0, [r4, #4]
2ffe12d0:	f7fe fa23 	bl	2ffdf71a <stm32mp_clk_disable>
2ffe12d4:	7a21      	ldrb	r1, [r4, #8]
2ffe12d6:	4638      	mov	r0, r7
2ffe12d8:	f7fc f8b6 	bl	2ffdd448 <stm32_iwdg_shadow_update>
2ffe12dc:	b140      	cbz	r0, 2ffe12f0 <stm32_iwdg_init+0xf0>
2ffe12de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe12e2:	e7a6      	b.n	2ffe1232 <stm32_iwdg_init+0x32>
2ffe12e4:	2b00      	cmp	r3, #0
2ffe12e6:	d1de      	bne.n	2ffe12a6 <stm32_iwdg_init+0xa6>
2ffe12e8:	1930      	adds	r0, r6, r4
2ffe12ea:	2110      	movs	r1, #16
2ffe12ec:	f7f5 e8b8 	blx	2ffd6460 <zero_normalmem>
2ffe12f0:	4a03      	ldr	r2, [pc, #12]	; (2ffe1300 <stm32_iwdg_init+0x100>)
2ffe12f2:	4629      	mov	r1, r5
2ffe12f4:	a802      	add	r0, sp, #8
2ffe12f6:	f000 ff07 	bl	2ffe2108 <dt_get_node>
2ffe12fa:	ea40 75e0 	orr.w	r5, r0, r0, asr #31
2ffe12fe:	e795      	b.n	2ffe122c <stm32_iwdg_init+0x2c>
2ffe1300:	2ffe6544 	.word	0x2ffe6544
2ffe1304:	2ffe9090 	.word	0x2ffe9090
2ffe1308:	2ffe656a 	.word	0x2ffe656a
2ffe130c:	2ffe6582 	.word	0x2ffe6582
2ffe1310:	2ffe6555 	.word	0x2ffe6555

2ffe1314 <dt_get_pmic_node>:
2ffe1314:	b510      	push	{r4, lr}
2ffe1316:	4c05      	ldr	r4, [pc, #20]	; (2ffe132c <dt_get_pmic_node+0x18>)
2ffe1318:	6823      	ldr	r3, [r4, #0]
2ffe131a:	3304      	adds	r3, #4
2ffe131c:	d103      	bne.n	2ffe1326 <dt_get_pmic_node+0x12>
2ffe131e:	4804      	ldr	r0, [pc, #16]	; (2ffe1330 <dt_get_pmic_node+0x1c>)
2ffe1320:	f000 ff14 	bl	2ffe214c <dt_get_node_by_compatible>
2ffe1324:	6020      	str	r0, [r4, #0]
2ffe1326:	6820      	ldr	r0, [r4, #0]
2ffe1328:	bd10      	pop	{r4, pc}
2ffe132a:	bf00      	nop
2ffe132c:	2ffe71f4 	.word	0x2ffe71f4
2ffe1330:	2ffe65a7 	.word	0x2ffe65a7

2ffe1334 <pmic_regulator_enable>:
2ffe1334:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffe1336:	4604      	mov	r4, r0
2ffe1338:	a801      	add	r0, sp, #4
2ffe133a:	f000 fdbf 	bl	2ffe1ebc <fdt_get_address>
2ffe133e:	b168      	cbz	r0, 2ffe135c <pmic_regulator_enable+0x28>
2ffe1340:	9d01      	ldr	r5, [sp, #4]
2ffe1342:	6861      	ldr	r1, [r4, #4]
2ffe1344:	4628      	mov	r0, r5
2ffe1346:	f001 fd3a 	bl	2ffe2dbe <fdt_node_offset_by_phandle>
2ffe134a:	4601      	mov	r1, r0
2ffe134c:	2200      	movs	r2, #0
2ffe134e:	4628      	mov	r0, r5
2ffe1350:	f001 fb52 	bl	2ffe29f8 <fdt_get_name>
2ffe1354:	f000 fbd1 	bl	2ffe1afa <stpmic1_regulator_enable>
2ffe1358:	b003      	add	sp, #12
2ffe135a:	bd30      	pop	{r4, r5, pc}
2ffe135c:	f06f 0001 	mvn.w	r0, #1
2ffe1360:	e7fa      	b.n	2ffe1358 <pmic_regulator_enable+0x24>

2ffe1362 <pmic_regulator_disable>:
2ffe1362:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffe1364:	4604      	mov	r4, r0
2ffe1366:	a801      	add	r0, sp, #4
2ffe1368:	f000 fda8 	bl	2ffe1ebc <fdt_get_address>
2ffe136c:	b168      	cbz	r0, 2ffe138a <pmic_regulator_disable+0x28>
2ffe136e:	9d01      	ldr	r5, [sp, #4]
2ffe1370:	6861      	ldr	r1, [r4, #4]
2ffe1372:	4628      	mov	r0, r5
2ffe1374:	f001 fd23 	bl	2ffe2dbe <fdt_node_offset_by_phandle>
2ffe1378:	4601      	mov	r1, r0
2ffe137a:	2200      	movs	r2, #0
2ffe137c:	4628      	mov	r0, r5
2ffe137e:	f001 fb3b 	bl	2ffe29f8 <fdt_get_name>
2ffe1382:	f000 fbc4 	bl	2ffe1b0e <stpmic1_regulator_disable>
2ffe1386:	b003      	add	sp, #12
2ffe1388:	bd30      	pop	{r4, r5, pc}
2ffe138a:	f06f 0001 	mvn.w	r0, #1
2ffe138e:	e7fa      	b.n	2ffe1386 <pmic_regulator_disable+0x24>

2ffe1390 <dt_pmic_get_regulator_voltage>:
2ffe1390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffe1392:	4615      	mov	r5, r2
2ffe1394:	4a1d      	ldr	r2, [pc, #116]	; (2ffe140c <dt_pmic_get_regulator_voltage+0x7c>)
2ffe1396:	461c      	mov	r4, r3
2ffe1398:	2300      	movs	r3, #0
2ffe139a:	4606      	mov	r6, r0
2ffe139c:	460f      	mov	r7, r1
2ffe139e:	f001 fc1c 	bl	2ffe2bda <fdt_getprop>
2ffe13a2:	b910      	cbnz	r0, 2ffe13aa <dt_pmic_get_regulator_voltage+0x1a>
2ffe13a4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe13a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffe13aa:	b185      	cbz	r5, 2ffe13ce <dt_pmic_get_regulator_voltage+0x3e>
2ffe13ac:	6802      	ldr	r2, [r0, #0]
2ffe13ae:	0e13      	lsrs	r3, r2, #24
2ffe13b0:	f3c2 2107 	ubfx	r1, r2, #8, #8
2ffe13b4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffe13b8:	f3c2 4207 	ubfx	r2, r2, #16, #8
2ffe13bc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffe13c0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffe13c4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2ffe13c8:	fbb3 f3f2 	udiv	r3, r3, r2
2ffe13cc:	802b      	strh	r3, [r5, #0]
2ffe13ce:	4a10      	ldr	r2, [pc, #64]	; (2ffe1410 <dt_pmic_get_regulator_voltage+0x80>)
2ffe13d0:	2300      	movs	r3, #0
2ffe13d2:	4639      	mov	r1, r7
2ffe13d4:	4630      	mov	r0, r6
2ffe13d6:	f001 fc00 	bl	2ffe2bda <fdt_getprop>
2ffe13da:	2800      	cmp	r0, #0
2ffe13dc:	d0e2      	beq.n	2ffe13a4 <dt_pmic_get_regulator_voltage+0x14>
2ffe13de:	b194      	cbz	r4, 2ffe1406 <dt_pmic_get_regulator_voltage+0x76>
2ffe13e0:	6802      	ldr	r2, [r0, #0]
2ffe13e2:	2000      	movs	r0, #0
2ffe13e4:	0e13      	lsrs	r3, r2, #24
2ffe13e6:	f3c2 2107 	ubfx	r1, r2, #8, #8
2ffe13ea:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffe13ee:	f3c2 4207 	ubfx	r2, r2, #16, #8
2ffe13f2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffe13f6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffe13fa:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2ffe13fe:	fbb3 f3f2 	udiv	r3, r3, r2
2ffe1402:	8023      	strh	r3, [r4, #0]
2ffe1404:	e7d0      	b.n	2ffe13a8 <dt_pmic_get_regulator_voltage+0x18>
2ffe1406:	4620      	mov	r0, r4
2ffe1408:	e7ce      	b.n	2ffe13a8 <dt_pmic_get_regulator_voltage+0x18>
2ffe140a:	bf00      	nop
2ffe140c:	2ffe65b2 	.word	0x2ffe65b2
2ffe1410:	2ffe65ca 	.word	0x2ffe65ca

2ffe1414 <pmic_operate>:
2ffe1414:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe1418:	4606      	mov	r6, r0
2ffe141a:	a801      	add	r0, sp, #4
2ffe141c:	4688      	mov	r8, r1
2ffe141e:	4691      	mov	r9, r2
2ffe1420:	f000 fd4c 	bl	2ffe1ebc <fdt_get_address>
2ffe1424:	b928      	cbnz	r0, 2ffe1432 <pmic_operate+0x1e>
2ffe1426:	f06f 0a01 	mvn.w	sl, #1
2ffe142a:	4650      	mov	r0, sl
2ffe142c:	b003      	add	sp, #12
2ffe142e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe1432:	f7ff ff6f 	bl	2ffe1314 <dt_get_pmic_node>
2ffe1436:	1e01      	subs	r1, r0, #0
2ffe1438:	dbf5      	blt.n	2ffe1426 <pmic_operate+0x12>
2ffe143a:	4a4f      	ldr	r2, [pc, #316]	; (2ffe1578 <pmic_operate+0x164>)
2ffe143c:	9801      	ldr	r0, [sp, #4]
2ffe143e:	f001 fb4a 	bl	2ffe2ad6 <fdt_subnode_offset>
2ffe1442:	1e01      	subs	r1, r0, #0
2ffe1444:	dbef      	blt.n	2ffe1426 <pmic_operate+0x12>
2ffe1446:	9801      	ldr	r0, [sp, #4]
2ffe1448:	f06f 0a04 	mvn.w	sl, #4
2ffe144c:	f8df b13c 	ldr.w	fp, [pc, #316]	; 2ffe158c <pmic_operate+0x178>
2ffe1450:	f001 fa23 	bl	2ffe289a <fdt_first_subnode>
2ffe1454:	4604      	mov	r4, r0
2ffe1456:	2c00      	cmp	r4, #0
2ffe1458:	dbe7      	blt.n	2ffe142a <pmic_operate+0x16>
2ffe145a:	9801      	ldr	r0, [sp, #4]
2ffe145c:	2200      	movs	r2, #0
2ffe145e:	4621      	mov	r1, r4
2ffe1460:	f001 faca 	bl	2ffe29f8 <fdt_get_name>
2ffe1464:	4605      	mov	r5, r0
2ffe1466:	b126      	cbz	r6, 2ffe1472 <pmic_operate+0x5e>
2ffe1468:	2e01      	cmp	r6, #1
2ffe146a:	d020      	beq.n	2ffe14ae <pmic_operate+0x9a>
2ffe146c:	f06f 0a15 	mvn.w	sl, #21
2ffe1470:	e7db      	b.n	2ffe142a <pmic_operate+0x16>
2ffe1472:	f1b8 0f00 	cmp.w	r8, #0
2ffe1476:	d104      	bne.n	2ffe1482 <pmic_operate+0x6e>
2ffe1478:	f240 110d 	movw	r1, #269	; 0x10d
2ffe147c:	483f      	ldr	r0, [pc, #252]	; (2ffe157c <pmic_operate+0x168>)
2ffe147e:	f001 fd49 	bl	2ffe2f14 <__assert>
2ffe1482:	f1b9 0f00 	cmp.w	r9, #0
2ffe1486:	d102      	bne.n	2ffe148e <pmic_operate+0x7a>
2ffe1488:	f44f 7187 	mov.w	r1, #270	; 0x10e
2ffe148c:	e7f6      	b.n	2ffe147c <pmic_operate+0x68>
2ffe148e:	4641      	mov	r1, r8
2ffe1490:	f001 ff5b 	bl	2ffe334a <strcmp>
2ffe1494:	b9e0      	cbnz	r0, 2ffe14d0 <pmic_operate+0xbc>
2ffe1496:	9801      	ldr	r0, [sp, #4]
2ffe1498:	4633      	mov	r3, r6
2ffe149a:	464a      	mov	r2, r9
2ffe149c:	4621      	mov	r1, r4
2ffe149e:	f7ff ff77 	bl	2ffe1390 <dt_pmic_get_regulator_voltage>
2ffe14a2:	f1b0 0a00 	subs.w	sl, r0, #0
2ffe14a6:	bfb8      	it	lt
2ffe14a8:	f06f 0a05 	mvnlt.w	sl, #5
2ffe14ac:	e7bd      	b.n	2ffe142a <pmic_operate+0x16>
2ffe14ae:	9f01      	ldr	r7, [sp, #4]
2ffe14b0:	2300      	movs	r3, #0
2ffe14b2:	4a33      	ldr	r2, [pc, #204]	; (2ffe1580 <pmic_operate+0x16c>)
2ffe14b4:	4621      	mov	r1, r4
2ffe14b6:	4638      	mov	r0, r7
2ffe14b8:	f001 fb8f 	bl	2ffe2bda <fdt_getprop>
2ffe14bc:	4603      	mov	r3, r0
2ffe14be:	b968      	cbnz	r0, 2ffe14dc <pmic_operate+0xc8>
2ffe14c0:	4a30      	ldr	r2, [pc, #192]	; (2ffe1584 <pmic_operate+0x170>)
2ffe14c2:	4621      	mov	r1, r4
2ffe14c4:	4638      	mov	r0, r7
2ffe14c6:	f001 fb88 	bl	2ffe2bda <fdt_getprop>
2ffe14ca:	b938      	cbnz	r0, 2ffe14dc <pmic_operate+0xc8>
2ffe14cc:	f04f 0a00 	mov.w	sl, #0
2ffe14d0:	9801      	ldr	r0, [sp, #4]
2ffe14d2:	4621      	mov	r1, r4
2ffe14d4:	f001 f9f4 	bl	2ffe28c0 <fdt_next_subnode>
2ffe14d8:	4604      	mov	r4, r0
2ffe14da:	e7bc      	b.n	2ffe1456 <pmic_operate+0x42>
2ffe14dc:	4a2a      	ldr	r2, [pc, #168]	; (2ffe1588 <pmic_operate+0x174>)
2ffe14de:	2300      	movs	r3, #0
2ffe14e0:	4621      	mov	r1, r4
2ffe14e2:	4638      	mov	r0, r7
2ffe14e4:	f001 fb79 	bl	2ffe2bda <fdt_getprop>
2ffe14e8:	bb88      	cbnz	r0, 2ffe154e <pmic_operate+0x13a>
2ffe14ea:	2300      	movs	r3, #0
2ffe14ec:	465a      	mov	r2, fp
2ffe14ee:	4621      	mov	r1, r4
2ffe14f0:	4638      	mov	r0, r7
2ffe14f2:	f001 fb72 	bl	2ffe2bda <fdt_getprop>
2ffe14f6:	bb88      	cbnz	r0, 2ffe155c <pmic_operate+0x148>
2ffe14f8:	f10d 0302 	add.w	r3, sp, #2
2ffe14fc:	466a      	mov	r2, sp
2ffe14fe:	4621      	mov	r1, r4
2ffe1500:	4638      	mov	r0, r7
2ffe1502:	f7ff ff45 	bl	2ffe1390 <dt_pmic_get_regulator_voltage>
2ffe1506:	2800      	cmp	r0, #0
2ffe1508:	dbe0      	blt.n	2ffe14cc <pmic_operate+0xb8>
2ffe150a:	4628      	mov	r0, r5
2ffe150c:	f000 fa78 	bl	2ffe1a00 <stpmic1_regulator_voltage_get>
2ffe1510:	f1b0 0a00 	subs.w	sl, r0, #0
2ffe1514:	db89      	blt.n	2ffe142a <pmic_operate+0x16>
2ffe1516:	f8bd 1000 	ldrh.w	r1, [sp]
2ffe151a:	fa1f f08a 	uxth.w	r0, sl
2ffe151e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
2ffe1522:	4288      	cmp	r0, r1
2ffe1524:	bf28      	it	cs
2ffe1526:	2100      	movcs	r1, #0
2ffe1528:	4290      	cmp	r0, r2
2ffe152a:	bf88      	it	hi
2ffe152c:	4611      	movhi	r1, r2
2ffe152e:	b9e1      	cbnz	r1, 2ffe156a <pmic_operate+0x156>
2ffe1530:	4628      	mov	r0, r5
2ffe1532:	f000 fa51 	bl	2ffe19d8 <stpmic1_is_regulator_enabled>
2ffe1536:	4607      	mov	r7, r0
2ffe1538:	2800      	cmp	r0, #0
2ffe153a:	d1c7      	bne.n	2ffe14cc <pmic_operate+0xb8>
2ffe153c:	4628      	mov	r0, r5
2ffe153e:	f000 fadc 	bl	2ffe1afa <stpmic1_regulator_enable>
2ffe1542:	f1b0 0a00 	subs.w	sl, r0, #0
2ffe1546:	f6ff af70 	blt.w	2ffe142a <pmic_operate+0x16>
2ffe154a:	46ba      	mov	sl, r7
2ffe154c:	e7c0      	b.n	2ffe14d0 <pmic_operate+0xbc>
2ffe154e:	4628      	mov	r0, r5
2ffe1550:	f000 fb16 	bl	2ffe1b80 <stpmic1_regulator_pull_down_set>
2ffe1554:	f1b0 0a00 	subs.w	sl, r0, #0
2ffe1558:	dac7      	bge.n	2ffe14ea <pmic_operate+0xd6>
2ffe155a:	e766      	b.n	2ffe142a <pmic_operate+0x16>
2ffe155c:	4628      	mov	r0, r5
2ffe155e:	f000 fb21 	bl	2ffe1ba4 <stpmic1_regulator_mask_reset_set>
2ffe1562:	f1b0 0a00 	subs.w	sl, r0, #0
2ffe1566:	dac7      	bge.n	2ffe14f8 <pmic_operate+0xe4>
2ffe1568:	e75f      	b.n	2ffe142a <pmic_operate+0x16>
2ffe156a:	4628      	mov	r0, r5
2ffe156c:	f000 fada 	bl	2ffe1b24 <stpmic1_regulator_voltage_set>
2ffe1570:	f1b0 0a00 	subs.w	sl, r0, #0
2ffe1574:	dadc      	bge.n	2ffe1530 <pmic_operate+0x11c>
2ffe1576:	e758      	b.n	2ffe142a <pmic_operate+0x16>
2ffe1578:	2ffe66a4 	.word	0x2ffe66a4
2ffe157c:	2ffe65e2 	.word	0x2ffe65e2
2ffe1580:	2ffe6601 	.word	0x2ffe6601
2ffe1584:	2ffe5860 	.word	0x2ffe5860
2ffe1588:	2ffe6613 	.word	0x2ffe6613
2ffe158c:	2ffe6627 	.word	0x2ffe6627

2ffe1590 <dt_pmic_status>:
2ffe1590:	b510      	push	{r4, lr}
2ffe1592:	4c08      	ldr	r4, [pc, #32]	; (2ffe15b4 <dt_pmic_status+0x24>)
2ffe1594:	6820      	ldr	r0, [r4, #0]
2ffe1596:	f110 0f0f 	cmn.w	r0, #15
2ffe159a:	d106      	bne.n	2ffe15aa <dt_pmic_status+0x1a>
2ffe159c:	f7ff feba 	bl	2ffe1314 <dt_get_pmic_node>
2ffe15a0:	2800      	cmp	r0, #0
2ffe15a2:	dc03      	bgt.n	2ffe15ac <dt_pmic_status+0x1c>
2ffe15a4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe15a8:	6020      	str	r0, [r4, #0]
2ffe15aa:	bd10      	pop	{r4, pc}
2ffe15ac:	f000 fca2 	bl	2ffe1ef4 <fdt_get_status>
2ffe15b0:	e7fa      	b.n	2ffe15a8 <dt_pmic_status+0x18>
2ffe15b2:	bf00      	nop
2ffe15b4:	2ffe71f8 	.word	0x2ffe71f8

2ffe15b8 <pmic_configure_boot_on_regulators>:
2ffe15b8:	2200      	movs	r2, #0
2ffe15ba:	2001      	movs	r0, #1
2ffe15bc:	4611      	mov	r1, r2
2ffe15be:	f7ff bf29 	b.w	2ffe1414 <pmic_operate>
	...

2ffe15c4 <dt_pmic_find_supply>:
2ffe15c4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffe15c8:	4606      	mov	r6, r0
2ffe15ca:	a801      	add	r0, sp, #4
2ffe15cc:	460f      	mov	r7, r1
2ffe15ce:	f000 fc75 	bl	2ffe1ebc <fdt_get_address>
2ffe15d2:	b928      	cbnz	r0, 2ffe15e0 <dt_pmic_find_supply+0x1c>
2ffe15d4:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2ffe15d8:	4628      	mov	r0, r5
2ffe15da:	b002      	add	sp, #8
2ffe15dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe15e0:	f7ff fe98 	bl	2ffe1314 <dt_get_pmic_node>
2ffe15e4:	1e01      	subs	r1, r0, #0
2ffe15e6:	dbf5      	blt.n	2ffe15d4 <dt_pmic_find_supply+0x10>
2ffe15e8:	4a13      	ldr	r2, [pc, #76]	; (2ffe1638 <dt_pmic_find_supply+0x74>)
2ffe15ea:	9801      	ldr	r0, [sp, #4]
2ffe15ec:	f001 fa73 	bl	2ffe2ad6 <fdt_subnode_offset>
2ffe15f0:	1e01      	subs	r1, r0, #0
2ffe15f2:	dbef      	blt.n	2ffe15d4 <dt_pmic_find_supply+0x10>
2ffe15f4:	9801      	ldr	r0, [sp, #4]
2ffe15f6:	f8df 8044 	ldr.w	r8, [pc, #68]	; 2ffe163c <dt_pmic_find_supply+0x78>
2ffe15fa:	f001 f94e 	bl	2ffe289a <fdt_first_subnode>
2ffe15fe:	4604      	mov	r4, r0
2ffe1600:	2c00      	cmp	r4, #0
2ffe1602:	dbe7      	blt.n	2ffe15d4 <dt_pmic_find_supply+0x10>
2ffe1604:	9801      	ldr	r0, [sp, #4]
2ffe1606:	2300      	movs	r3, #0
2ffe1608:	4642      	mov	r2, r8
2ffe160a:	4621      	mov	r1, r4
2ffe160c:	f001 fae5 	bl	2ffe2bda <fdt_getprop>
2ffe1610:	b158      	cbz	r0, 2ffe162a <dt_pmic_find_supply+0x66>
2ffe1612:	4639      	mov	r1, r7
2ffe1614:	f001 fe99 	bl	2ffe334a <strcmp>
2ffe1618:	4605      	mov	r5, r0
2ffe161a:	b930      	cbnz	r0, 2ffe162a <dt_pmic_find_supply+0x66>
2ffe161c:	4602      	mov	r2, r0
2ffe161e:	4621      	mov	r1, r4
2ffe1620:	9801      	ldr	r0, [sp, #4]
2ffe1622:	f001 f9e9 	bl	2ffe29f8 <fdt_get_name>
2ffe1626:	6030      	str	r0, [r6, #0]
2ffe1628:	e7d6      	b.n	2ffe15d8 <dt_pmic_find_supply+0x14>
2ffe162a:	9801      	ldr	r0, [sp, #4]
2ffe162c:	4621      	mov	r1, r4
2ffe162e:	f001 f947 	bl	2ffe28c0 <fdt_next_subnode>
2ffe1632:	4604      	mov	r4, r0
2ffe1634:	e7e4      	b.n	2ffe1600 <dt_pmic_find_supply+0x3c>
2ffe1636:	bf00      	nop
2ffe1638:	2ffe66a4 	.word	0x2ffe66a4
2ffe163c:	2ffe6635 	.word	0x2ffe6635

2ffe1640 <initialize_pmic_i2c>:
2ffe1640:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffe1642:	b091      	sub	sp, #68	; 0x44
2ffe1644:	4d3d      	ldr	r5, [pc, #244]	; (2ffe173c <initialize_pmic_i2c+0xfc>)
2ffe1646:	682c      	ldr	r4, [r5, #0]
2ffe1648:	1c63      	adds	r3, r4, #1
2ffe164a:	d132      	bne.n	2ffe16b2 <initialize_pmic_i2c+0x72>
2ffe164c:	a804      	add	r0, sp, #16
2ffe164e:	f000 fc35 	bl	2ffe1ebc <fdt_get_address>
2ffe1652:	b318      	cbz	r0, 2ffe169c <initialize_pmic_i2c+0x5c>
2ffe1654:	f7ff fe5e 	bl	2ffe1314 <dt_get_pmic_node>
2ffe1658:	1e06      	subs	r6, r0, #0
2ffe165a:	db6d      	blt.n	2ffe1738 <initialize_pmic_i2c+0xf8>
2ffe165c:	4a38      	ldr	r2, [pc, #224]	; (2ffe1740 <initialize_pmic_i2c+0x100>)
2ffe165e:	2300      	movs	r3, #0
2ffe1660:	9804      	ldr	r0, [sp, #16]
2ffe1662:	4631      	mov	r1, r6
2ffe1664:	f001 fab9 	bl	2ffe2bda <fdt_getprop>
2ffe1668:	b1c0      	cbz	r0, 2ffe169c <initialize_pmic_i2c+0x5c>
2ffe166a:	6802      	ldr	r2, [r0, #0]
2ffe166c:	0e13      	lsrs	r3, r2, #24
2ffe166e:	f3c2 2107 	ubfx	r1, r2, #8, #8
2ffe1672:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2ffe1676:	f3c2 4207 	ubfx	r2, r2, #16, #8
2ffe167a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2ffe167e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2ffe1682:	4a30      	ldr	r2, [pc, #192]	; (2ffe1744 <initialize_pmic_i2c+0x104>)
2ffe1684:	005b      	lsls	r3, r3, #1
2ffe1686:	6013      	str	r3, [r2, #0]
2ffe1688:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
2ffe168c:	d20e      	bcs.n	2ffe16ac <initialize_pmic_i2c+0x6c>
2ffe168e:	9804      	ldr	r0, [sp, #16]
2ffe1690:	4631      	mov	r1, r6
2ffe1692:	f001 fb84 	bl	2ffe2d9e <fdt_parent_offset>
2ffe1696:	6028      	str	r0, [r5, #0]
2ffe1698:	2800      	cmp	r0, #0
2ffe169a:	da0a      	bge.n	2ffe16b2 <initialize_pmic_i2c+0x72>
2ffe169c:	482a      	ldr	r0, [pc, #168]	; (2ffe1748 <initialize_pmic_i2c+0x108>)
2ffe169e:	4621      	mov	r1, r4
2ffe16a0:	f7fb fa24 	bl	2ffdcaec <tf_log>
2ffe16a4:	f7fb fac0 	bl	2ffdcc28 <console_flush>
2ffe16a8:	f7f4 edda 	blx	2ffd6260 <do_panic>
2ffe16ac:	f06f 040e 	mvn.w	r4, #14
2ffe16b0:	e7f4      	b.n	2ffe169c <initialize_pmic_i2c+0x5c>
2ffe16b2:	6829      	ldr	r1, [r5, #0]
2ffe16b4:	4668      	mov	r0, sp
2ffe16b6:	f000 fce3 	bl	2ffe2080 <dt_fill_device_info>
2ffe16ba:	9b00      	ldr	r3, [sp, #0]
2ffe16bc:	b333      	cbz	r3, 2ffe170c <initialize_pmic_i2c+0xcc>
2ffe16be:	6828      	ldr	r0, [r5, #0]
2ffe16c0:	a904      	add	r1, sp, #16
2ffe16c2:	f7ff fa69 	bl	2ffe0b98 <stm32_i2c_get_setup_from_fdt>
2ffe16c6:	1e04      	subs	r4, r0, #0
2ffe16c8:	dbe8      	blt.n	2ffe169c <initialize_pmic_i2c+0x5c>
2ffe16ca:	d135      	bne.n	2ffe1738 <initialize_pmic_i2c+0xf8>
2ffe16cc:	4d1f      	ldr	r5, [pc, #124]	; (2ffe174c <initialize_pmic_i2c+0x10c>)
2ffe16ce:	2701      	movs	r7, #1
2ffe16d0:	9b00      	ldr	r3, [sp, #0]
2ffe16d2:	a904      	add	r1, sp, #16
2ffe16d4:	4e1b      	ldr	r6, [pc, #108]	; (2ffe1744 <initialize_pmic_i2c+0x104>)
2ffe16d6:	4628      	mov	r0, r5
2ffe16d8:	602b      	str	r3, [r5, #0]
2ffe16da:	9b03      	ldr	r3, [sp, #12]
2ffe16dc:	612c      	str	r4, [r5, #16]
2ffe16de:	606b      	str	r3, [r5, #4]
2ffe16e0:	9b01      	ldr	r3, [sp, #4]
2ffe16e2:	9705      	str	r7, [sp, #20]
2ffe16e4:	60ab      	str	r3, [r5, #8]
2ffe16e6:	6833      	ldr	r3, [r6, #0]
2ffe16e8:	e9cd 4406 	strd	r4, r4, [sp, #24]
2ffe16ec:	9304      	str	r3, [sp, #16]
2ffe16ee:	e9cd 4408 	strd	r4, r4, [sp, #32]
2ffe16f2:	940a      	str	r4, [sp, #40]	; 0x28
2ffe16f4:	970e      	str	r7, [sp, #56]	; 0x38
2ffe16f6:	f88d 403c 	strb.w	r4, [sp, #60]	; 0x3c
2ffe16fa:	f7ff fa7d 	bl	2ffe0bf8 <stm32_i2c_init>
2ffe16fe:	4602      	mov	r2, r0
2ffe1700:	b138      	cbz	r0, 2ffe1712 <initialize_pmic_i2c+0xd2>
2ffe1702:	6829      	ldr	r1, [r5, #0]
2ffe1704:	4812      	ldr	r0, [pc, #72]	; (2ffe1750 <initialize_pmic_i2c+0x110>)
2ffe1706:	f7fb f9f1 	bl	2ffdcaec <tf_log>
2ffe170a:	e7cb      	b.n	2ffe16a4 <initialize_pmic_i2c+0x64>
2ffe170c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffe1710:	e7c4      	b.n	2ffe169c <initialize_pmic_i2c+0x5c>
2ffe1712:	8831      	ldrh	r1, [r6, #0]
2ffe1714:	2319      	movs	r3, #25
2ffe1716:	463a      	mov	r2, r7
2ffe1718:	4628      	mov	r0, r5
2ffe171a:	f7ff fcad 	bl	2ffe1078 <stm32_i2c_is_device_ready>
2ffe171e:	4604      	mov	r4, r0
2ffe1720:	b918      	cbnz	r0, 2ffe172a <initialize_pmic_i2c+0xea>
2ffe1722:	480c      	ldr	r0, [pc, #48]	; (2ffe1754 <initialize_pmic_i2c+0x114>)
2ffe1724:	f7fb f9e2 	bl	2ffdcaec <tf_log>
2ffe1728:	e7bc      	b.n	2ffe16a4 <initialize_pmic_i2c+0x64>
2ffe172a:	8831      	ldrh	r1, [r6, #0]
2ffe172c:	4628      	mov	r0, r5
2ffe172e:	f000 fa47 	bl	2ffe1bc0 <stpmic1_bind_i2c>
2ffe1732:	4620      	mov	r0, r4
2ffe1734:	b011      	add	sp, #68	; 0x44
2ffe1736:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffe1738:	2400      	movs	r4, #0
2ffe173a:	e7fa      	b.n	2ffe1732 <initialize_pmic_i2c+0xf2>
2ffe173c:	2ffe71f0 	.word	0x2ffe71f0
2ffe1740:	2ffe521b 	.word	0x2ffe521b
2ffe1744:	2ffe90d4 	.word	0x2ffe90d4
2ffe1748:	2ffe6644 	.word	0x2ffe6644
2ffe174c:	2ffe90b0 	.word	0x2ffe90b0
2ffe1750:	2ffe6662 	.word	0x2ffe6662
2ffe1754:	2ffe6682 	.word	0x2ffe6682

2ffe1758 <is_pmic_regulator>:
2ffe1758:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffe175a:	4604      	mov	r4, r0
2ffe175c:	a801      	add	r0, sp, #4
2ffe175e:	f000 fbad 	bl	2ffe1ebc <fdt_get_address>
2ffe1762:	b180      	cbz	r0, 2ffe1786 <is_pmic_regulator+0x2e>
2ffe1764:	9d01      	ldr	r5, [sp, #4]
2ffe1766:	6861      	ldr	r1, [r4, #4]
2ffe1768:	4628      	mov	r0, r5
2ffe176a:	f001 fb28 	bl	2ffe2dbe <fdt_node_offset_by_phandle>
2ffe176e:	4601      	mov	r1, r0
2ffe1770:	4628      	mov	r0, r5
2ffe1772:	f001 fb14 	bl	2ffe2d9e <fdt_parent_offset>
2ffe1776:	4a05      	ldr	r2, [pc, #20]	; (2ffe178c <is_pmic_regulator+0x34>)
2ffe1778:	4601      	mov	r1, r0
2ffe177a:	9801      	ldr	r0, [sp, #4]
2ffe177c:	f001 fb96 	bl	2ffe2eac <fdt_node_check_compatible>
2ffe1780:	fab0 f080 	clz	r0, r0
2ffe1784:	0940      	lsrs	r0, r0, #5
2ffe1786:	b003      	add	sp, #12
2ffe1788:	bd30      	pop	{r4, r5, pc}
2ffe178a:	bf00      	nop
2ffe178c:	2ffe6699 	.word	0x2ffe6699

2ffe1790 <bind_pmic_regulator>:
2ffe1790:	4b01      	ldr	r3, [pc, #4]	; (2ffe1798 <bind_pmic_regulator+0x8>)
2ffe1792:	6003      	str	r3, [r0, #0]
2ffe1794:	4770      	bx	lr
2ffe1796:	bf00      	nop
2ffe1798:	2ffe66f4 	.word	0x2ffe66f4

2ffe179c <initialize_pmic>:
2ffe179c:	b508      	push	{r3, lr}
2ffe179e:	f7ff ff4f 	bl	2ffe1640 <initialize_pmic_i2c>
2ffe17a2:	b118      	cbz	r0, 2ffe17ac <initialize_pmic+0x10>
2ffe17a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe17a8:	f7ff bef2 	b.w	2ffe1590 <dt_pmic_status>
2ffe17ac:	bd08      	pop	{r3, pc}

2ffe17ae <configure_pmic>:
2ffe17ae:	b508      	push	{r3, lr}
2ffe17b0:	f7ff ff02 	bl	2ffe15b8 <pmic_configure_boot_on_regulators>
2ffe17b4:	2800      	cmp	r0, #0
2ffe17b6:	da03      	bge.n	2ffe17c0 <configure_pmic+0x12>
2ffe17b8:	f7fb fa36 	bl	2ffdcc28 <console_flush>
2ffe17bc:	f7f4 ed50 	blx	2ffd6260 <do_panic>
2ffe17c0:	bd08      	pop	{r3, pc}
	...

2ffe17c4 <print_pmic_info_and_debug>:
2ffe17c4:	b507      	push	{r0, r1, r2, lr}
2ffe17c6:	a801      	add	r0, sp, #4
2ffe17c8:	f000 fa05 	bl	2ffe1bd6 <stpmic1_get_version>
2ffe17cc:	b130      	cbz	r0, 2ffe17dc <print_pmic_info_and_debug+0x18>
2ffe17ce:	4808      	ldr	r0, [pc, #32]	; (2ffe17f0 <print_pmic_info_and_debug+0x2c>)
2ffe17d0:	f7fb f98c 	bl	2ffdcaec <tf_log>
2ffe17d4:	f7fb fa28 	bl	2ffdcc28 <console_flush>
2ffe17d8:	f7f4 ed42 	blx	2ffd6260 <do_panic>
2ffe17dc:	9901      	ldr	r1, [sp, #4]
2ffe17de:	4805      	ldr	r0, [pc, #20]	; (2ffe17f4 <print_pmic_info_and_debug+0x30>)
2ffe17e0:	f7fb f984 	bl	2ffdcaec <tf_log>
2ffe17e4:	f000 f9f6 	bl	2ffe1bd4 <stpmic1_dump_regulators>
2ffe17e8:	b003      	add	sp, #12
2ffe17ea:	f85d fb04 	ldr.w	pc, [sp], #4
2ffe17ee:	bf00      	nop
2ffe17f0:	2ffe66af 	.word	0x2ffe66af
2ffe17f4:	2ffe66c7 	.word	0x2ffe66c7

2ffe17f8 <pmic_ddr_power_init>:
2ffe17f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffe17fa:	4605      	mov	r5, r0
2ffe17fc:	494f      	ldr	r1, [pc, #316]	; (2ffe193c <pmic_ddr_power_init+0x144>)
2ffe17fe:	aa01      	add	r2, sp, #4
2ffe1800:	2000      	movs	r0, #0
2ffe1802:	f7ff fe07 	bl	2ffe1414 <pmic_operate>
2ffe1806:	4604      	mov	r4, r0
2ffe1808:	b120      	cbz	r0, 2ffe1814 <pmic_ddr_power_init+0x1c>
2ffe180a:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffe180e:	4620      	mov	r0, r4
2ffe1810:	b003      	add	sp, #12
2ffe1812:	bd30      	pop	{r4, r5, pc}
2ffe1814:	2d00      	cmp	r5, #0
2ffe1816:	d054      	beq.n	2ffe18c2 <pmic_ddr_power_init+0xca>
2ffe1818:	3d01      	subs	r5, #1
2ffe181a:	2d01      	cmp	r5, #1
2ffe181c:	d8f7      	bhi.n	2ffe180e <pmic_ddr_power_init+0x16>
2ffe181e:	f10d 0103 	add.w	r1, sp, #3
2ffe1822:	2022      	movs	r0, #34	; 0x22
2ffe1824:	f000 f8c4 	bl	2ffe19b0 <stpmic1_register_read>
2ffe1828:	4604      	mov	r4, r0
2ffe182a:	2800      	cmp	r0, #0
2ffe182c:	d1ef      	bne.n	2ffe180e <pmic_ddr_power_init+0x16>
2ffe182e:	f89d 5003 	ldrb.w	r5, [sp, #3]
2ffe1832:	f10d 0103 	add.w	r1, sp, #3
2ffe1836:	2027      	movs	r0, #39	; 0x27
2ffe1838:	f000 f8ba 	bl	2ffe19b0 <stpmic1_register_read>
2ffe183c:	4604      	mov	r4, r0
2ffe183e:	2800      	cmp	r0, #0
2ffe1840:	d1e5      	bne.n	2ffe180e <pmic_ddr_power_init+0x16>
2ffe1842:	f89d 3003 	ldrb.w	r3, [sp, #3]
2ffe1846:	f005 059c 	and.w	r5, r5, #156	; 0x9c
2ffe184a:	2d9c      	cmp	r5, #156	; 0x9c
2ffe184c:	f04f 0027 	mov.w	r0, #39	; 0x27
2ffe1850:	f003 0303 	and.w	r3, r3, #3
2ffe1854:	bf08      	it	eq
2ffe1856:	f063 037f 	orneq	r3, r3, #127	; 0x7f
2ffe185a:	f88d 3003 	strb.w	r3, [sp, #3]
2ffe185e:	f89d 1003 	ldrb.w	r1, [sp, #3]
2ffe1862:	f000 f907 	bl	2ffe1a74 <stpmic1_register_write>
2ffe1866:	4604      	mov	r4, r0
2ffe1868:	2800      	cmp	r0, #0
2ffe186a:	d1d0      	bne.n	2ffe180e <pmic_ddr_power_init+0x16>
2ffe186c:	4934      	ldr	r1, [pc, #208]	; (2ffe1940 <pmic_ddr_power_init+0x148>)
2ffe186e:	f10d 0206 	add.w	r2, sp, #6
2ffe1872:	f7ff fdcf 	bl	2ffe1414 <pmic_operate>
2ffe1876:	2800      	cmp	r0, #0
2ffe1878:	d1c7      	bne.n	2ffe180a <pmic_ddr_power_init+0x12>
2ffe187a:	f8bd 1006 	ldrh.w	r1, [sp, #6]
2ffe187e:	4830      	ldr	r0, [pc, #192]	; (2ffe1940 <pmic_ddr_power_init+0x148>)
2ffe1880:	f000 f950 	bl	2ffe1b24 <stpmic1_regulator_voltage_set>
2ffe1884:	4604      	mov	r4, r0
2ffe1886:	2800      	cmp	r0, #0
2ffe1888:	d1c1      	bne.n	2ffe180e <pmic_ddr_power_init+0x16>
2ffe188a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
2ffe188e:	482b      	ldr	r0, [pc, #172]	; (2ffe193c <pmic_ddr_power_init+0x144>)
2ffe1890:	f000 f948 	bl	2ffe1b24 <stpmic1_regulator_voltage_set>
2ffe1894:	4604      	mov	r4, r0
2ffe1896:	2800      	cmp	r0, #0
2ffe1898:	d1b9      	bne.n	2ffe180e <pmic_ddr_power_init+0x16>
2ffe189a:	4829      	ldr	r0, [pc, #164]	; (2ffe1940 <pmic_ddr_power_init+0x148>)
2ffe189c:	f000 f92d 	bl	2ffe1afa <stpmic1_regulator_enable>
2ffe18a0:	4604      	mov	r4, r0
2ffe18a2:	2800      	cmp	r0, #0
2ffe18a4:	d1b3      	bne.n	2ffe180e <pmic_ddr_power_init+0x16>
2ffe18a6:	2001      	movs	r0, #1
2ffe18a8:	f7fc fdba 	bl	2ffde420 <mdelay>
2ffe18ac:	4823      	ldr	r0, [pc, #140]	; (2ffe193c <pmic_ddr_power_init+0x144>)
2ffe18ae:	f000 f924 	bl	2ffe1afa <stpmic1_regulator_enable>
2ffe18b2:	4604      	mov	r4, r0
2ffe18b4:	2800      	cmp	r0, #0
2ffe18b6:	d1aa      	bne.n	2ffe180e <pmic_ddr_power_init+0x16>
2ffe18b8:	2001      	movs	r0, #1
2ffe18ba:	f7fc fdb1 	bl	2ffde420 <mdelay>
2ffe18be:	4821      	ldr	r0, [pc, #132]	; (2ffe1944 <pmic_ddr_power_init+0x14c>)
2ffe18c0:	e031      	b.n	2ffe1926 <pmic_ddr_power_init+0x12e>
2ffe18c2:	f10d 0103 	add.w	r1, sp, #3
2ffe18c6:	2027      	movs	r0, #39	; 0x27
2ffe18c8:	f000 f872 	bl	2ffe19b0 <stpmic1_register_read>
2ffe18cc:	4604      	mov	r4, r0
2ffe18ce:	2800      	cmp	r0, #0
2ffe18d0:	d19d      	bne.n	2ffe180e <pmic_ddr_power_init+0x16>
2ffe18d2:	f89d 1003 	ldrb.w	r1, [sp, #3]
2ffe18d6:	2027      	movs	r0, #39	; 0x27
2ffe18d8:	f001 0103 	and.w	r1, r1, #3
2ffe18dc:	f041 017c 	orr.w	r1, r1, #124	; 0x7c
2ffe18e0:	f88d 1003 	strb.w	r1, [sp, #3]
2ffe18e4:	f000 f8c6 	bl	2ffe1a74 <stpmic1_register_write>
2ffe18e8:	4604      	mov	r4, r0
2ffe18ea:	2800      	cmp	r0, #0
2ffe18ec:	d18f      	bne.n	2ffe180e <pmic_ddr_power_init+0x16>
2ffe18ee:	f8bd 1004 	ldrh.w	r1, [sp, #4]
2ffe18f2:	4812      	ldr	r0, [pc, #72]	; (2ffe193c <pmic_ddr_power_init+0x144>)
2ffe18f4:	f000 f916 	bl	2ffe1b24 <stpmic1_regulator_voltage_set>
2ffe18f8:	4604      	mov	r4, r0
2ffe18fa:	2800      	cmp	r0, #0
2ffe18fc:	d187      	bne.n	2ffe180e <pmic_ddr_power_init+0x16>
2ffe18fe:	480f      	ldr	r0, [pc, #60]	; (2ffe193c <pmic_ddr_power_init+0x144>)
2ffe1900:	f000 f8fb 	bl	2ffe1afa <stpmic1_regulator_enable>
2ffe1904:	4604      	mov	r4, r0
2ffe1906:	2800      	cmp	r0, #0
2ffe1908:	d181      	bne.n	2ffe180e <pmic_ddr_power_init+0x16>
2ffe190a:	2001      	movs	r0, #1
2ffe190c:	f7fc fd88 	bl	2ffde420 <mdelay>
2ffe1910:	480c      	ldr	r0, [pc, #48]	; (2ffe1944 <pmic_ddr_power_init+0x14c>)
2ffe1912:	f000 f8f2 	bl	2ffe1afa <stpmic1_regulator_enable>
2ffe1916:	4604      	mov	r4, r0
2ffe1918:	2800      	cmp	r0, #0
2ffe191a:	f47f af78 	bne.w	2ffe180e <pmic_ddr_power_init+0x16>
2ffe191e:	2001      	movs	r0, #1
2ffe1920:	f7fc fd7e 	bl	2ffde420 <mdelay>
2ffe1924:	4806      	ldr	r0, [pc, #24]	; (2ffe1940 <pmic_ddr_power_init+0x148>)
2ffe1926:	f000 f8e8 	bl	2ffe1afa <stpmic1_regulator_enable>
2ffe192a:	4604      	mov	r4, r0
2ffe192c:	2800      	cmp	r0, #0
2ffe192e:	f47f af6e 	bne.w	2ffe180e <pmic_ddr_power_init+0x16>
2ffe1932:	2001      	movs	r0, #1
2ffe1934:	f7fc fd74 	bl	2ffde420 <mdelay>
2ffe1938:	e769      	b.n	2ffe180e <pmic_ddr_power_init+0x16>
2ffe193a:	bf00      	nop
2ffe193c:	2ffe66e0 	.word	0x2ffe66e0
2ffe1940:	2ffe66ef 	.word	0x2ffe66ef
2ffe1944:	2ffe66e6 	.word	0x2ffe66e6

2ffe1948 <get_regulator_data>:
2ffe1948:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe194c:	4606      	mov	r6, r0
2ffe194e:	4c0c      	ldr	r4, [pc, #48]	; (2ffe1980 <get_regulator_data+0x38>)
2ffe1950:	2500      	movs	r5, #0
2ffe1952:	012f      	lsls	r7, r5, #4
2ffe1954:	f857 8004 	ldr.w	r8, [r7, r4]
2ffe1958:	4640      	mov	r0, r8
2ffe195a:	f001 fd02 	bl	2ffe3362 <strlen>
2ffe195e:	4602      	mov	r2, r0
2ffe1960:	4641      	mov	r1, r8
2ffe1962:	4630      	mov	r0, r6
2ffe1964:	f001 fd05 	bl	2ffe3372 <strncmp>
2ffe1968:	b910      	cbnz	r0, 2ffe1970 <get_regulator_data+0x28>
2ffe196a:	19e0      	adds	r0, r4, r7
2ffe196c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe1970:	3501      	adds	r5, #1
2ffe1972:	2d0e      	cmp	r5, #14
2ffe1974:	d1ed      	bne.n	2ffe1952 <get_regulator_data+0xa>
2ffe1976:	f7fb f957 	bl	2ffdcc28 <console_flush>
2ffe197a:	f7f4 ec72 	blx	2ffd6260 <do_panic>
2ffe197e:	bf00      	nop
2ffe1980:	2ffe6a14 	.word	0x2ffe6a14

2ffe1984 <voltage_to_index>:
2ffe1984:	b538      	push	{r3, r4, r5, lr}
2ffe1986:	460c      	mov	r4, r1
2ffe1988:	f7ff ffde 	bl	2ffe1948 <get_regulator_data>
2ffe198c:	7a01      	ldrb	r1, [r0, #8]
2ffe198e:	4602      	mov	r2, r0
2ffe1990:	2300      	movs	r3, #0
2ffe1992:	b2d8      	uxtb	r0, r3
2ffe1994:	4281      	cmp	r1, r0
2ffe1996:	d803      	bhi.n	2ffe19a0 <voltage_to_index+0x1c>
2ffe1998:	f7fb f946 	bl	2ffdcc28 <console_flush>
2ffe199c:	f7f4 ec60 	blx	2ffd6260 <do_panic>
2ffe19a0:	6855      	ldr	r5, [r2, #4]
2ffe19a2:	f835 5013 	ldrh.w	r5, [r5, r3, lsl #1]
2ffe19a6:	3301      	adds	r3, #1
2ffe19a8:	42a5      	cmp	r5, r4
2ffe19aa:	d1f2      	bne.n	2ffe1992 <voltage_to_index+0xe>
2ffe19ac:	bd38      	pop	{r3, r4, r5, pc}
	...

2ffe19b0 <stpmic1_register_read>:
2ffe19b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2ffe19b2:	2319      	movs	r3, #25
2ffe19b4:	9302      	str	r3, [sp, #8]
2ffe19b6:	2301      	movs	r3, #1
2ffe19b8:	e9cd 1300 	strd	r1, r3, [sp]
2ffe19bc:	4904      	ldr	r1, [pc, #16]	; (2ffe19d0 <stpmic1_register_read+0x20>)
2ffe19be:	4602      	mov	r2, r0
2ffe19c0:	4804      	ldr	r0, [pc, #16]	; (2ffe19d4 <stpmic1_register_read+0x24>)
2ffe19c2:	8809      	ldrh	r1, [r1, #0]
2ffe19c4:	6800      	ldr	r0, [r0, #0]
2ffe19c6:	f7ff fb4d 	bl	2ffe1064 <stm32_i2c_mem_read>
2ffe19ca:	b005      	add	sp, #20
2ffe19cc:	f85d fb04 	ldr.w	pc, [sp], #4
2ffe19d0:	2ffe9124 	.word	0x2ffe9124
2ffe19d4:	2ffe90d8 	.word	0x2ffe90d8

2ffe19d8 <stpmic1_is_regulator_enabled>:
2ffe19d8:	b507      	push	{r0, r1, r2, lr}
2ffe19da:	f7ff ffb5 	bl	2ffe1948 <get_regulator_data>
2ffe19de:	7a40      	ldrb	r0, [r0, #9]
2ffe19e0:	f10d 0107 	add.w	r1, sp, #7
2ffe19e4:	f7ff ffe4 	bl	2ffe19b0 <stpmic1_register_read>
2ffe19e8:	b118      	cbz	r0, 2ffe19f2 <stpmic1_is_regulator_enabled+0x1a>
2ffe19ea:	f7fb f91d 	bl	2ffdcc28 <console_flush>
2ffe19ee:	f7f4 ec38 	blx	2ffd6260 <do_panic>
2ffe19f2:	f89d 0007 	ldrb.w	r0, [sp, #7]
2ffe19f6:	f000 0001 	and.w	r0, r0, #1
2ffe19fa:	b003      	add	sp, #12
2ffe19fc:	f85d fb04 	ldr.w	pc, [sp], #4

2ffe1a00 <stpmic1_regulator_voltage_get>:
2ffe1a00:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffe1a02:	4605      	mov	r5, r0
2ffe1a04:	f7ff ffa0 	bl	2ffe1948 <get_regulator_data>
2ffe1a08:	4917      	ldr	r1, [pc, #92]	; (2ffe1a68 <stpmic1_regulator_voltage_get+0x68>)
2ffe1a0a:	4604      	mov	r4, r0
2ffe1a0c:	2204      	movs	r2, #4
2ffe1a0e:	4628      	mov	r0, r5
2ffe1a10:	f001 fcaf 	bl	2ffe3372 <strncmp>
2ffe1a14:	b328      	cbz	r0, 2ffe1a62 <stpmic1_regulator_voltage_get+0x62>
2ffe1a16:	4915      	ldr	r1, [pc, #84]	; (2ffe1a6c <stpmic1_regulator_voltage_get+0x6c>)
2ffe1a18:	2203      	movs	r2, #3
2ffe1a1a:	4628      	mov	r0, r5
2ffe1a1c:	f001 fca9 	bl	2ffe3372 <strncmp>
2ffe1a20:	b110      	cbz	r0, 2ffe1a28 <stpmic1_regulator_voltage_get+0x28>
2ffe1a22:	2000      	movs	r0, #0
2ffe1a24:	b003      	add	sp, #12
2ffe1a26:	bd30      	pop	{r4, r5, pc}
2ffe1a28:	4911      	ldr	r1, [pc, #68]	; (2ffe1a70 <stpmic1_regulator_voltage_get+0x70>)
2ffe1a2a:	2204      	movs	r2, #4
2ffe1a2c:	4628      	mov	r0, r5
2ffe1a2e:	f001 fca0 	bl	2ffe3372 <strncmp>
2ffe1a32:	2800      	cmp	r0, #0
2ffe1a34:	d0f5      	beq.n	2ffe1a22 <stpmic1_regulator_voltage_get+0x22>
2ffe1a36:	257c      	movs	r5, #124	; 0x7c
2ffe1a38:	7a60      	ldrb	r0, [r4, #9]
2ffe1a3a:	f10d 0107 	add.w	r1, sp, #7
2ffe1a3e:	f7ff ffb7 	bl	2ffe19b0 <stpmic1_register_read>
2ffe1a42:	2800      	cmp	r0, #0
2ffe1a44:	dbee      	blt.n	2ffe1a24 <stpmic1_regulator_voltage_get+0x24>
2ffe1a46:	f89d 3007 	ldrb.w	r3, [sp, #7]
2ffe1a4a:	401d      	ands	r5, r3
2ffe1a4c:	7a23      	ldrb	r3, [r4, #8]
2ffe1a4e:	08aa      	lsrs	r2, r5, #2
2ffe1a50:	ebb3 0f95 	cmp.w	r3, r5, lsr #2
2ffe1a54:	bf32      	itee	cc
2ffe1a56:	f06f 0021 	mvncc.w	r0, #33	; 0x21
2ffe1a5a:	6863      	ldrcs	r3, [r4, #4]
2ffe1a5c:	f833 0012 	ldrhcs.w	r0, [r3, r2, lsl #1]
2ffe1a60:	e7e0      	b.n	2ffe1a24 <stpmic1_regulator_voltage_get+0x24>
2ffe1a62:	25fc      	movs	r5, #252	; 0xfc
2ffe1a64:	e7e8      	b.n	2ffe1a38 <stpmic1_regulator_voltage_get+0x38>
2ffe1a66:	bf00      	nop
2ffe1a68:	2ffe66fc 	.word	0x2ffe66fc
2ffe1a6c:	2ffe6701 	.word	0x2ffe6701
2ffe1a70:	2ffe6705 	.word	0x2ffe6705

2ffe1a74 <stpmic1_register_write>:
2ffe1a74:	b510      	push	{r4, lr}
2ffe1a76:	b088      	sub	sp, #32
2ffe1a78:	f10d 0217 	add.w	r2, sp, #23
2ffe1a7c:	2319      	movs	r3, #25
2ffe1a7e:	9200      	str	r2, [sp, #0]
2ffe1a80:	4604      	mov	r4, r0
2ffe1a82:	f88d 1017 	strb.w	r1, [sp, #23]
2ffe1a86:	4602      	mov	r2, r0
2ffe1a88:	490e      	ldr	r1, [pc, #56]	; (2ffe1ac4 <stpmic1_register_write+0x50>)
2ffe1a8a:	480f      	ldr	r0, [pc, #60]	; (2ffe1ac8 <stpmic1_register_write+0x54>)
2ffe1a8c:	9302      	str	r3, [sp, #8]
2ffe1a8e:	2301      	movs	r3, #1
2ffe1a90:	9301      	str	r3, [sp, #4]
2ffe1a92:	8809      	ldrh	r1, [r1, #0]
2ffe1a94:	6800      	ldr	r0, [r0, #0]
2ffe1a96:	f7ff fad7 	bl	2ffe1048 <stm32_i2c_mem_write>
2ffe1a9a:	b988      	cbnz	r0, 2ffe1ac0 <stpmic1_register_write+0x4c>
2ffe1a9c:	2c1b      	cmp	r4, #27
2ffe1a9e:	d00f      	beq.n	2ffe1ac0 <stpmic1_register_write+0x4c>
2ffe1aa0:	2c40      	cmp	r4, #64	; 0x40
2ffe1aa2:	d80d      	bhi.n	2ffe1ac0 <stpmic1_register_write+0x4c>
2ffe1aa4:	f10d 011f 	add.w	r1, sp, #31
2ffe1aa8:	4620      	mov	r0, r4
2ffe1aaa:	f7ff ff81 	bl	2ffe19b0 <stpmic1_register_read>
2ffe1aae:	b938      	cbnz	r0, 2ffe1ac0 <stpmic1_register_write+0x4c>
2ffe1ab0:	f89d 201f 	ldrb.w	r2, [sp, #31]
2ffe1ab4:	f89d 3017 	ldrb.w	r3, [sp, #23]
2ffe1ab8:	429a      	cmp	r2, r3
2ffe1aba:	bf18      	it	ne
2ffe1abc:	f06f 0004 	mvnne.w	r0, #4
2ffe1ac0:	b008      	add	sp, #32
2ffe1ac2:	bd10      	pop	{r4, pc}
2ffe1ac4:	2ffe9124 	.word	0x2ffe9124
2ffe1ac8:	2ffe90d8 	.word	0x2ffe90d8

2ffe1acc <stpmic1_register_update>:
2ffe1acc:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffe1ace:	460e      	mov	r6, r1
2ffe1ad0:	f10d 0107 	add.w	r1, sp, #7
2ffe1ad4:	4605      	mov	r5, r0
2ffe1ad6:	4614      	mov	r4, r2
2ffe1ad8:	f7ff ff6a 	bl	2ffe19b0 <stpmic1_register_read>
2ffe1adc:	b958      	cbnz	r0, 2ffe1af6 <stpmic1_register_update+0x2a>
2ffe1ade:	f89d 3007 	ldrb.w	r3, [sp, #7]
2ffe1ae2:	4628      	mov	r0, r5
2ffe1ae4:	ea04 0106 	and.w	r1, r4, r6
2ffe1ae8:	ea23 0304 	bic.w	r3, r3, r4
2ffe1aec:	4319      	orrs	r1, r3
2ffe1aee:	f88d 1007 	strb.w	r1, [sp, #7]
2ffe1af2:	f7ff ffbf 	bl	2ffe1a74 <stpmic1_register_write>
2ffe1af6:	b002      	add	sp, #8
2ffe1af8:	bd70      	pop	{r4, r5, r6, pc}

2ffe1afa <stpmic1_regulator_enable>:
2ffe1afa:	b508      	push	{r3, lr}
2ffe1afc:	f7ff ff24 	bl	2ffe1948 <get_regulator_data>
2ffe1b00:	7a40      	ldrb	r0, [r0, #9]
2ffe1b02:	2201      	movs	r2, #1
2ffe1b04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe1b08:	4611      	mov	r1, r2
2ffe1b0a:	f7ff bfdf 	b.w	2ffe1acc <stpmic1_register_update>

2ffe1b0e <stpmic1_regulator_disable>:
2ffe1b0e:	b508      	push	{r3, lr}
2ffe1b10:	f7ff ff1a 	bl	2ffe1948 <get_regulator_data>
2ffe1b14:	7a40      	ldrb	r0, [r0, #9]
2ffe1b16:	2201      	movs	r2, #1
2ffe1b18:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe1b1c:	2100      	movs	r1, #0
2ffe1b1e:	f7ff bfd5 	b.w	2ffe1acc <stpmic1_register_update>
	...

2ffe1b24 <stpmic1_regulator_voltage_set>:
2ffe1b24:	b570      	push	{r4, r5, r6, lr}
2ffe1b26:	4604      	mov	r4, r0
2ffe1b28:	f7ff ff2c 	bl	2ffe1984 <voltage_to_index>
2ffe1b2c:	4605      	mov	r5, r0
2ffe1b2e:	4620      	mov	r0, r4
2ffe1b30:	f7ff ff0a 	bl	2ffe1948 <get_regulator_data>
2ffe1b34:	490f      	ldr	r1, [pc, #60]	; (2ffe1b74 <stpmic1_regulator_voltage_set+0x50>)
2ffe1b36:	4606      	mov	r6, r0
2ffe1b38:	2204      	movs	r2, #4
2ffe1b3a:	4620      	mov	r0, r4
2ffe1b3c:	f001 fc19 	bl	2ffe3372 <strncmp>
2ffe1b40:	b1a0      	cbz	r0, 2ffe1b6c <stpmic1_regulator_voltage_set+0x48>
2ffe1b42:	490d      	ldr	r1, [pc, #52]	; (2ffe1b78 <stpmic1_regulator_voltage_set+0x54>)
2ffe1b44:	2203      	movs	r2, #3
2ffe1b46:	4620      	mov	r0, r4
2ffe1b48:	f001 fc13 	bl	2ffe3372 <strncmp>
2ffe1b4c:	b980      	cbnz	r0, 2ffe1b70 <stpmic1_regulator_voltage_set+0x4c>
2ffe1b4e:	490b      	ldr	r1, [pc, #44]	; (2ffe1b7c <stpmic1_regulator_voltage_set+0x58>)
2ffe1b50:	2204      	movs	r2, #4
2ffe1b52:	4620      	mov	r0, r4
2ffe1b54:	f001 fc0d 	bl	2ffe3372 <strncmp>
2ffe1b58:	b150      	cbz	r0, 2ffe1b70 <stpmic1_regulator_voltage_set+0x4c>
2ffe1b5a:	227c      	movs	r2, #124	; 0x7c
2ffe1b5c:	00a9      	lsls	r1, r5, #2
2ffe1b5e:	7a70      	ldrb	r0, [r6, #9]
2ffe1b60:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
2ffe1b64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffe1b68:	f7ff bfb0 	b.w	2ffe1acc <stpmic1_register_update>
2ffe1b6c:	22fc      	movs	r2, #252	; 0xfc
2ffe1b6e:	e7f5      	b.n	2ffe1b5c <stpmic1_regulator_voltage_set+0x38>
2ffe1b70:	2000      	movs	r0, #0
2ffe1b72:	bd70      	pop	{r4, r5, r6, pc}
2ffe1b74:	2ffe66fc 	.word	0x2ffe66fc
2ffe1b78:	2ffe6701 	.word	0x2ffe6701
2ffe1b7c:	2ffe6705 	.word	0x2ffe6705

2ffe1b80 <stpmic1_regulator_pull_down_set>:
2ffe1b80:	b508      	push	{r3, lr}
2ffe1b82:	f7ff fee1 	bl	2ffe1948 <get_regulator_data>
2ffe1b86:	4603      	mov	r3, r0
2ffe1b88:	7ac0      	ldrb	r0, [r0, #11]
2ffe1b8a:	b150      	cbz	r0, 2ffe1ba2 <stpmic1_regulator_pull_down_set+0x22>
2ffe1b8c:	7b1b      	ldrb	r3, [r3, #12]
2ffe1b8e:	2203      	movs	r2, #3
2ffe1b90:	2101      	movs	r1, #1
2ffe1b92:	409a      	lsls	r2, r3
2ffe1b94:	4099      	lsls	r1, r3
2ffe1b96:	b2d2      	uxtb	r2, r2
2ffe1b98:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe1b9c:	b2c9      	uxtb	r1, r1
2ffe1b9e:	f7ff bf95 	b.w	2ffe1acc <stpmic1_register_update>
2ffe1ba2:	bd08      	pop	{r3, pc}

2ffe1ba4 <stpmic1_regulator_mask_reset_set>:
2ffe1ba4:	b508      	push	{r3, lr}
2ffe1ba6:	f7ff fecf 	bl	2ffe1948 <get_regulator_data>
2ffe1baa:	7b83      	ldrb	r3, [r0, #14]
2ffe1bac:	2201      	movs	r2, #1
2ffe1bae:	7b40      	ldrb	r0, [r0, #13]
2ffe1bb0:	409a      	lsls	r2, r3
2ffe1bb2:	b2d2      	uxtb	r2, r2
2ffe1bb4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe1bb8:	4611      	mov	r1, r2
2ffe1bba:	f7ff bf87 	b.w	2ffe1acc <stpmic1_register_update>
	...

2ffe1bc0 <stpmic1_bind_i2c>:
2ffe1bc0:	4b02      	ldr	r3, [pc, #8]	; (2ffe1bcc <stpmic1_bind_i2c+0xc>)
2ffe1bc2:	6018      	str	r0, [r3, #0]
2ffe1bc4:	4b02      	ldr	r3, [pc, #8]	; (2ffe1bd0 <stpmic1_bind_i2c+0x10>)
2ffe1bc6:	8019      	strh	r1, [r3, #0]
2ffe1bc8:	4770      	bx	lr
2ffe1bca:	bf00      	nop
2ffe1bcc:	2ffe90d8 	.word	0x2ffe90d8
2ffe1bd0:	2ffe9124 	.word	0x2ffe9124

2ffe1bd4 <stpmic1_dump_regulators>:
2ffe1bd4:	4770      	bx	lr

2ffe1bd6 <stpmic1_get_version>:
2ffe1bd6:	b513      	push	{r0, r1, r4, lr}
2ffe1bd8:	4604      	mov	r4, r0
2ffe1bda:	f10d 0107 	add.w	r1, sp, #7
2ffe1bde:	2006      	movs	r0, #6
2ffe1be0:	f7ff fee6 	bl	2ffe19b0 <stpmic1_register_read>
2ffe1be4:	2800      	cmp	r0, #0
2ffe1be6:	bfa2      	ittt	ge
2ffe1be8:	2000      	movge	r0, #0
2ffe1bea:	f89d 3007 	ldrbge.w	r3, [sp, #7]
2ffe1bee:	6023      	strge	r3, [r4, #0]
2ffe1bf0:	b002      	add	sp, #8
2ffe1bf2:	bd10      	pop	{r4, pc}

2ffe1bf4 <dummy_regulator_enable>:
2ffe1bf4:	2000      	movs	r0, #0
2ffe1bf6:	4770      	bx	lr

2ffe1bf8 <dummy_regulator_disable>:
2ffe1bf8:	2000      	movs	r0, #0
2ffe1bfa:	4770      	bx	lr

2ffe1bfc <bind_dummy_regulator>:
2ffe1bfc:	4b01      	ldr	r3, [pc, #4]	; (2ffe1c04 <bind_dummy_regulator+0x8>)
2ffe1bfe:	6003      	str	r3, [r0, #0]
2ffe1c00:	4770      	bx	lr
2ffe1c02:	bf00      	nop
2ffe1c04:	2ffe6af8 	.word	0x2ffe6af8

2ffe1c08 <stm32mp_regulator_enable>:
2ffe1c08:	6803      	ldr	r3, [r0, #0]
2ffe1c0a:	b510      	push	{r4, lr}
2ffe1c0c:	b10b      	cbz	r3, 2ffe1c12 <stm32mp_regulator_enable+0xa>
2ffe1c0e:	681b      	ldr	r3, [r3, #0]
2ffe1c10:	b91b      	cbnz	r3, 2ffe1c1a <stm32mp_regulator_enable+0x12>
2ffe1c12:	4803      	ldr	r0, [pc, #12]	; (2ffe1c20 <stm32mp_regulator_enable+0x18>)
2ffe1c14:	2113      	movs	r1, #19
2ffe1c16:	f001 f97d 	bl	2ffe2f14 <__assert>
2ffe1c1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe1c1e:	4718      	bx	r3
2ffe1c20:	2ffe6b00 	.word	0x2ffe6b00

2ffe1c24 <stm32mp_regulator_disable>:
2ffe1c24:	6802      	ldr	r2, [r0, #0]
2ffe1c26:	b510      	push	{r4, lr}
2ffe1c28:	b10a      	cbz	r2, 2ffe1c2e <stm32mp_regulator_disable+0xa>
2ffe1c2a:	6852      	ldr	r2, [r2, #4]
2ffe1c2c:	b91a      	cbnz	r2, 2ffe1c36 <stm32mp_regulator_disable+0x12>
2ffe1c2e:	4805      	ldr	r0, [pc, #20]	; (2ffe1c44 <stm32mp_regulator_disable+0x20>)
2ffe1c30:	211a      	movs	r1, #26
2ffe1c32:	f001 f96f 	bl	2ffe2f14 <__assert>
2ffe1c36:	7a03      	ldrb	r3, [r0, #8]
2ffe1c38:	b913      	cbnz	r3, 2ffe1c40 <stm32mp_regulator_disable+0x1c>
2ffe1c3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe1c3e:	4710      	bx	r2
2ffe1c40:	2000      	movs	r0, #0
2ffe1c42:	bd10      	pop	{r4, pc}
2ffe1c44:	2ffe6b00 	.word	0x2ffe6b00

2ffe1c48 <stm32mp_regulator_register>:
2ffe1c48:	f7fb bc38 	b.w	2ffdd4bc <plat_bind_regulator>

2ffe1c4c <stm32mp_reset_assert_to>:
2ffe1c4c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe1c50:	f000 031f 	and.w	r3, r0, #31
2ffe1c54:	9101      	str	r1, [sp, #4]
2ffe1c56:	4604      	mov	r4, r0
2ffe1c58:	2501      	movs	r5, #1
2ffe1c5a:	0964      	lsrs	r4, r4, #5
2ffe1c5c:	409d      	lsls	r5, r3
2ffe1c5e:	f7fb f92b 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffe1c62:	9901      	ldr	r1, [sp, #4]
2ffe1c64:	4682      	mov	sl, r0
2ffe1c66:	eb00 0b84 	add.w	fp, r0, r4, lsl #2
2ffe1c6a:	f840 5024 	str.w	r5, [r0, r4, lsl #2]
2ffe1c6e:	b309      	cbz	r1, 2ffe1cb4 <stm32mp_reset_assert_to+0x68>
2ffe1c70:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffe1c74:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffe1c78:	4a0f      	ldr	r2, [pc, #60]	; (2ffe1cb8 <stm32mp_reset_assert_to+0x6c>)
2ffe1c7a:	2300      	movs	r3, #0
2ffe1c7c:	fba1 0100 	umull	r0, r1, r1, r0
2ffe1c80:	f000 ecee 	blx	2ffe2660 <__aeabi_uldivmod>
2ffe1c84:	eb10 0806 	adds.w	r8, r0, r6
2ffe1c88:	eb41 0907 	adc.w	r9, r1, r7
2ffe1c8c:	f8db 3000 	ldr.w	r3, [fp]
2ffe1c90:	421d      	tst	r5, r3
2ffe1c92:	d105      	bne.n	2ffe1ca0 <stm32mp_reset_assert_to+0x54>
2ffe1c94:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffe1c98:	4599      	cmp	r9, r3
2ffe1c9a:	bf08      	it	eq
2ffe1c9c:	4590      	cmpeq	r8, r2
2ffe1c9e:	d2f5      	bcs.n	2ffe1c8c <stm32mp_reset_assert_to+0x40>
2ffe1ca0:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
2ffe1ca4:	421d      	tst	r5, r3
2ffe1ca6:	bf14      	ite	ne
2ffe1ca8:	2000      	movne	r0, #0
2ffe1caa:	f06f 003b 	mvneq.w	r0, #59	; 0x3b
2ffe1cae:	b003      	add	sp, #12
2ffe1cb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe1cb4:	4608      	mov	r0, r1
2ffe1cb6:	e7fa      	b.n	2ffe1cae <stm32mp_reset_assert_to+0x62>
2ffe1cb8:	000f4240 	.word	0x000f4240

2ffe1cbc <stm32mp_reset_deassert_to>:
2ffe1cbc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe1cc0:	4604      	mov	r4, r0
2ffe1cc2:	9101      	str	r1, [sp, #4]
2ffe1cc4:	f000 031f 	and.w	r3, r0, #31
2ffe1cc8:	0964      	lsrs	r4, r4, #5
2ffe1cca:	2501      	movs	r5, #1
2ffe1ccc:	3401      	adds	r4, #1
2ffe1cce:	409d      	lsls	r5, r3
2ffe1cd0:	f7fb f8f2 	bl	2ffdceb8 <stm32mp_rcc_base>
2ffe1cd4:	9901      	ldr	r1, [sp, #4]
2ffe1cd6:	4682      	mov	sl, r0
2ffe1cd8:	eb00 0b84 	add.w	fp, r0, r4, lsl #2
2ffe1cdc:	f840 5024 	str.w	r5, [r0, r4, lsl #2]
2ffe1ce0:	b309      	cbz	r1, 2ffe1d26 <stm32mp_reset_deassert_to+0x6a>
2ffe1ce2:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffe1ce6:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2ffe1cea:	4a10      	ldr	r2, [pc, #64]	; (2ffe1d2c <stm32mp_reset_deassert_to+0x70>)
2ffe1cec:	2300      	movs	r3, #0
2ffe1cee:	fba1 0100 	umull	r0, r1, r1, r0
2ffe1cf2:	f000 ecb6 	blx	2ffe2660 <__aeabi_uldivmod>
2ffe1cf6:	eb10 0806 	adds.w	r8, r0, r6
2ffe1cfa:	eb41 0907 	adc.w	r9, r1, r7
2ffe1cfe:	f8db 3000 	ldr.w	r3, [fp]
2ffe1d02:	421d      	tst	r5, r3
2ffe1d04:	d005      	beq.n	2ffe1d12 <stm32mp_reset_deassert_to+0x56>
2ffe1d06:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2ffe1d0a:	4599      	cmp	r9, r3
2ffe1d0c:	bf08      	it	eq
2ffe1d0e:	4590      	cmpeq	r8, r2
2ffe1d10:	d2f5      	bcs.n	2ffe1cfe <stm32mp_reset_deassert_to+0x42>
2ffe1d12:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
2ffe1d16:	421d      	tst	r5, r3
2ffe1d18:	bf0c      	ite	eq
2ffe1d1a:	2000      	moveq	r0, #0
2ffe1d1c:	f06f 003b 	mvnne.w	r0, #59	; 0x3b
2ffe1d20:	b003      	add	sp, #12
2ffe1d22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe1d26:	4608      	mov	r0, r1
2ffe1d28:	e7fa      	b.n	2ffe1d20 <stm32mp_reset_deassert_to+0x64>
2ffe1d2a:	bf00      	nop
2ffe1d2c:	000f4240 	.word	0x000f4240

2ffe1d30 <fdt32_to_cpu>:
2ffe1d30:	ba00      	rev	r0, r0
2ffe1d32:	4770      	bx	lr

2ffe1d34 <fdt_get_node_parent_address_cells>:
2ffe1d34:	4601      	mov	r1, r0
2ffe1d36:	b508      	push	{r3, lr}
2ffe1d38:	4806      	ldr	r0, [pc, #24]	; (2ffe1d54 <fdt_get_node_parent_address_cells+0x20>)
2ffe1d3a:	f001 f830 	bl	2ffe2d9e <fdt_parent_offset>
2ffe1d3e:	1e01      	subs	r1, r0, #0
2ffe1d40:	db04      	blt.n	2ffe1d4c <fdt_get_node_parent_address_cells+0x18>
2ffe1d42:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe1d46:	4803      	ldr	r0, [pc, #12]	; (2ffe1d54 <fdt_get_node_parent_address_cells+0x20>)
2ffe1d48:	f000 bdd0 	b.w	2ffe28ec <fdt_address_cells>
2ffe1d4c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe1d50:	bd08      	pop	{r3, pc}
2ffe1d52:	bf00      	nop
2ffe1d54:	2ffcc000 	.word	0x2ffcc000

2ffe1d58 <dt_get_stdout_node_offset>:
2ffe1d58:	4919      	ldr	r1, [pc, #100]	; (2ffe1dc0 <dt_get_stdout_node_offset+0x68>)
2ffe1d5a:	481a      	ldr	r0, [pc, #104]	; (2ffe1dc4 <dt_get_stdout_node_offset+0x6c>)
2ffe1d5c:	b570      	push	{r4, r5, r6, lr}
2ffe1d5e:	f000 ffce 	bl	2ffe2cfe <fdt_path_offset>
2ffe1d62:	1e01      	subs	r1, r0, #0
2ffe1d64:	da05      	bge.n	2ffe1d72 <dt_get_stdout_node_offset+0x1a>
2ffe1d66:	4918      	ldr	r1, [pc, #96]	; (2ffe1dc8 <dt_get_stdout_node_offset+0x70>)
2ffe1d68:	4816      	ldr	r0, [pc, #88]	; (2ffe1dc4 <dt_get_stdout_node_offset+0x6c>)
2ffe1d6a:	f000 ffc8 	bl	2ffe2cfe <fdt_path_offset>
2ffe1d6e:	1e01      	subs	r1, r0, #0
2ffe1d70:	db23      	blt.n	2ffe1dba <dt_get_stdout_node_offset+0x62>
2ffe1d72:	4a16      	ldr	r2, [pc, #88]	; (2ffe1dcc <dt_get_stdout_node_offset+0x74>)
2ffe1d74:	2300      	movs	r3, #0
2ffe1d76:	4813      	ldr	r0, [pc, #76]	; (2ffe1dc4 <dt_get_stdout_node_offset+0x6c>)
2ffe1d78:	f000 ff2f 	bl	2ffe2bda <fdt_getprop>
2ffe1d7c:	4604      	mov	r4, r0
2ffe1d7e:	b1e0      	cbz	r0, 2ffe1dba <dt_get_stdout_node_offset+0x62>
2ffe1d80:	213a      	movs	r1, #58	; 0x3a
2ffe1d82:	f001 fad7 	bl	2ffe3334 <strchr>
2ffe1d86:	b9a8      	cbnz	r0, 2ffe1db4 <dt_get_stdout_node_offset+0x5c>
2ffe1d88:	4621      	mov	r1, r4
2ffe1d8a:	e00e      	b.n	2ffe1daa <dt_get_stdout_node_offset+0x52>
2ffe1d8c:	3501      	adds	r5, #1
2ffe1d8e:	1961      	adds	r1, r4, r5
2ffe1d90:	2201      	movs	r2, #1
2ffe1d92:	4630      	mov	r0, r6
2ffe1d94:	f001 faed 	bl	2ffe3372 <strncmp>
2ffe1d98:	2800      	cmp	r0, #0
2ffe1d9a:	d1f7      	bne.n	2ffe1d8c <dt_get_stdout_node_offset+0x34>
2ffe1d9c:	4809      	ldr	r0, [pc, #36]	; (2ffe1dc4 <dt_get_stdout_node_offset+0x6c>)
2ffe1d9e:	4621      	mov	r1, r4
2ffe1da0:	462a      	mov	r2, r5
2ffe1da2:	f000 ff4d 	bl	2ffe2c40 <fdt_get_alias_namelen>
2ffe1da6:	4601      	mov	r1, r0
2ffe1da8:	b138      	cbz	r0, 2ffe1dba <dt_get_stdout_node_offset+0x62>
2ffe1daa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffe1dae:	4805      	ldr	r0, [pc, #20]	; (2ffe1dc4 <dt_get_stdout_node_offset+0x6c>)
2ffe1db0:	f000 bfa5 	b.w	2ffe2cfe <fdt_path_offset>
2ffe1db4:	4e06      	ldr	r6, [pc, #24]	; (2ffe1dd0 <dt_get_stdout_node_offset+0x78>)
2ffe1db6:	2500      	movs	r5, #0
2ffe1db8:	e7e9      	b.n	2ffe1d8e <dt_get_stdout_node_offset+0x36>
2ffe1dba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe1dbe:	bd70      	pop	{r4, r5, r6, pc}
2ffe1dc0:	2ffe6b29 	.word	0x2ffe6b29
2ffe1dc4:	2ffcc000 	.word	0x2ffcc000
2ffe1dc8:	2ffe6b38 	.word	0x2ffe6b38
2ffe1dcc:	2ffe6b40 	.word	0x2ffe6b40
2ffe1dd0:	2ffe6b4c 	.word	0x2ffe6b4c

2ffe1dd4 <dt_get_opp_freqvolt_from_subnode>:
2ffe1dd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffe1dd8:	4604      	mov	r4, r0
2ffe1dda:	4688      	mov	r8, r1
2ffe1ddc:	4615      	mov	r5, r2
2ffe1dde:	4a2c      	ldr	r2, [pc, #176]	; (2ffe1e90 <dt_get_opp_freqvolt_from_subnode+0xbc>)
2ffe1de0:	4601      	mov	r1, r0
2ffe1de2:	482c      	ldr	r0, [pc, #176]	; (2ffe1e94 <dt_get_opp_freqvolt_from_subnode+0xc0>)
2ffe1de4:	2300      	movs	r3, #0
2ffe1de6:	f000 fef8 	bl	2ffe2bda <fdt_getprop>
2ffe1dea:	b948      	cbnz	r0, 2ffe1e00 <dt_get_opp_freqvolt_from_subnode+0x2c>
2ffe1dec:	4a2a      	ldr	r2, [pc, #168]	; (2ffe1e98 <dt_get_opp_freqvolt_from_subnode+0xc4>)
2ffe1dee:	2300      	movs	r3, #0
2ffe1df0:	4828      	ldr	r0, [pc, #160]	; (2ffe1e94 <dt_get_opp_freqvolt_from_subnode+0xc0>)
2ffe1df2:	4621      	mov	r1, r4
2ffe1df4:	f000 fef1 	bl	2ffe2bda <fdt_getprop>
2ffe1df8:	b968      	cbnz	r0, 2ffe1e16 <dt_get_opp_freqvolt_from_subnode+0x42>
2ffe1dfa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe1dfe:	e008      	b.n	2ffe1e12 <dt_get_opp_freqvolt_from_subnode+0x3e>
2ffe1e00:	6800      	ldr	r0, [r0, #0]
2ffe1e02:	f7ff ff95 	bl	2ffe1d30 <fdt32_to_cpu>
2ffe1e06:	f7fb f9bd 	bl	2ffdd184 <stm32mp_supports_cpu_opp>
2ffe1e0a:	2800      	cmp	r0, #0
2ffe1e0c:	d1ee      	bne.n	2ffe1dec <dt_get_opp_freqvolt_from_subnode+0x18>
2ffe1e0e:	f06f 000e 	mvn.w	r0, #14
2ffe1e12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffe1e16:	e9d0 0300 	ldrd	r0, r3, [r0]
2ffe1e1a:	0202      	lsls	r2, r0, #8
2ffe1e1c:	0a06      	lsrs	r6, r0, #8
2ffe1e1e:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
2ffe1e22:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
2ffe1e26:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
2ffe1e2a:	4332      	orrs	r2, r6
2ffe1e2c:	0e19      	lsrs	r1, r3, #24
2ffe1e2e:	021e      	lsls	r6, r3, #8
2ffe1e30:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
2ffe1e34:	f406 067f 	and.w	r6, r6, #16711680	; 0xff0000
2ffe1e38:	0a1b      	lsrs	r3, r3, #8
2ffe1e3a:	4331      	orrs	r1, r6
2ffe1e3c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
2ffe1e40:	ea41 0603 	orr.w	r6, r1, r3
2ffe1e44:	2300      	movs	r3, #0
2ffe1e46:	ea42 6710 	orr.w	r7, r2, r0, lsr #24
2ffe1e4a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2ffe1e4e:	4630      	mov	r0, r6
2ffe1e50:	4639      	mov	r1, r7
2ffe1e52:	f000 ec06 	blx	2ffe2660 <__aeabi_uldivmod>
2ffe1e56:	f5b7 7f7a 	cmp.w	r7, #1000	; 0x3e8
2ffe1e5a:	4681      	mov	r9, r0
2ffe1e5c:	bf08      	it	eq
2ffe1e5e:	2e00      	cmpeq	r6, #0
2ffe1e60:	d2d5      	bcs.n	2ffe1e0e <dt_get_opp_freqvolt_from_subnode+0x3a>
2ffe1e62:	4a0e      	ldr	r2, [pc, #56]	; (2ffe1e9c <dt_get_opp_freqvolt_from_subnode+0xc8>)
2ffe1e64:	2300      	movs	r3, #0
2ffe1e66:	480b      	ldr	r0, [pc, #44]	; (2ffe1e94 <dt_get_opp_freqvolt_from_subnode+0xc0>)
2ffe1e68:	4621      	mov	r1, r4
2ffe1e6a:	f000 feb6 	bl	2ffe2bda <fdt_getprop>
2ffe1e6e:	2800      	cmp	r0, #0
2ffe1e70:	d0c3      	beq.n	2ffe1dfa <dt_get_opp_freqvolt_from_subnode+0x26>
2ffe1e72:	6800      	ldr	r0, [r0, #0]
2ffe1e74:	f7ff ff5c 	bl	2ffe1d30 <fdt32_to_cpu>
2ffe1e78:	f1b0 7f7a 	cmp.w	r0, #65536000	; 0x3e80000
2ffe1e7c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2ffe1e80:	fbb0 f3f3 	udiv	r3, r0, r3
2ffe1e84:	d2c3      	bcs.n	2ffe1e0e <dt_get_opp_freqvolt_from_subnode+0x3a>
2ffe1e86:	f8c8 9000 	str.w	r9, [r8]
2ffe1e8a:	2000      	movs	r0, #0
2ffe1e8c:	602b      	str	r3, [r5, #0]
2ffe1e8e:	e7c0      	b.n	2ffe1e12 <dt_get_opp_freqvolt_from_subnode+0x3e>
2ffe1e90:	2ffe6b4e 	.word	0x2ffe6b4e
2ffe1e94:	2ffcc000 	.word	0x2ffcc000
2ffe1e98:	2ffe6b5f 	.word	0x2ffe6b5f
2ffe1e9c:	2ffe6b66 	.word	0x2ffe6b66

2ffe1ea0 <dt_open_and_check>:
2ffe1ea0:	b508      	push	{r3, lr}
2ffe1ea2:	4804      	ldr	r0, [pc, #16]	; (2ffe1eb4 <dt_open_and_check+0x14>)
2ffe1ea4:	f000 fbf0 	bl	2ffe2688 <fdt_check_header>
2ffe1ea8:	b910      	cbnz	r0, 2ffe1eb0 <dt_open_and_check+0x10>
2ffe1eaa:	4b03      	ldr	r3, [pc, #12]	; (2ffe1eb8 <dt_open_and_check+0x18>)
2ffe1eac:	2201      	movs	r2, #1
2ffe1eae:	601a      	str	r2, [r3, #0]
2ffe1eb0:	bd08      	pop	{r3, pc}
2ffe1eb2:	bf00      	nop
2ffe1eb4:	2ffcc000 	.word	0x2ffcc000
2ffe1eb8:	2ffe90dc 	.word	0x2ffe90dc

2ffe1ebc <fdt_get_address>:
2ffe1ebc:	4a03      	ldr	r2, [pc, #12]	; (2ffe1ecc <fdt_get_address+0x10>)
2ffe1ebe:	4603      	mov	r3, r0
2ffe1ec0:	6810      	ldr	r0, [r2, #0]
2ffe1ec2:	2801      	cmp	r0, #1
2ffe1ec4:	bf04      	itt	eq
2ffe1ec6:	4a02      	ldreq	r2, [pc, #8]	; (2ffe1ed0 <fdt_get_address+0x14>)
2ffe1ec8:	601a      	streq	r2, [r3, #0]
2ffe1eca:	4770      	bx	lr
2ffe1ecc:	2ffe90dc 	.word	0x2ffe90dc
2ffe1ed0:	2ffcc000 	.word	0x2ffcc000

2ffe1ed4 <fdt_check_node>:
2ffe1ed4:	b507      	push	{r0, r1, r2, lr}
2ffe1ed6:	4601      	mov	r1, r0
2ffe1ed8:	4805      	ldr	r0, [pc, #20]	; (2ffe1ef0 <fdt_check_node+0x1c>)
2ffe1eda:	aa01      	add	r2, sp, #4
2ffe1edc:	f000 fd8c 	bl	2ffe29f8 <fdt_get_name>
2ffe1ee0:	b110      	cbz	r0, 2ffe1ee8 <fdt_check_node+0x14>
2ffe1ee2:	9801      	ldr	r0, [sp, #4]
2ffe1ee4:	43c0      	mvns	r0, r0
2ffe1ee6:	0fc0      	lsrs	r0, r0, #31
2ffe1ee8:	b003      	add	sp, #12
2ffe1eea:	f85d fb04 	ldr.w	pc, [sp], #4
2ffe1eee:	bf00      	nop
2ffe1ef0:	2ffcc000 	.word	0x2ffcc000

2ffe1ef4 <fdt_get_status>:
2ffe1ef4:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffe1ef6:	4605      	mov	r5, r0
2ffe1ef8:	4a13      	ldr	r2, [pc, #76]	; (2ffe1f48 <fdt_get_status+0x54>)
2ffe1efa:	4601      	mov	r1, r0
2ffe1efc:	4813      	ldr	r0, [pc, #76]	; (2ffe1f4c <fdt_get_status+0x58>)
2ffe1efe:	ab01      	add	r3, sp, #4
2ffe1f00:	f000 fe6b 	bl	2ffe2bda <fdt_getprop>
2ffe1f04:	b198      	cbz	r0, 2ffe1f2e <fdt_get_status+0x3a>
2ffe1f06:	9a01      	ldr	r2, [sp, #4]
2ffe1f08:	4911      	ldr	r1, [pc, #68]	; (2ffe1f50 <fdt_get_status+0x5c>)
2ffe1f0a:	f001 fa32 	bl	2ffe3372 <strncmp>
2ffe1f0e:	fab0 f480 	clz	r4, r0
2ffe1f12:	0964      	lsrs	r4, r4, #5
2ffe1f14:	4a0f      	ldr	r2, [pc, #60]	; (2ffe1f54 <fdt_get_status+0x60>)
2ffe1f16:	ab01      	add	r3, sp, #4
2ffe1f18:	480c      	ldr	r0, [pc, #48]	; (2ffe1f4c <fdt_get_status+0x58>)
2ffe1f1a:	4629      	mov	r1, r5
2ffe1f1c:	f000 fe5d 	bl	2ffe2bda <fdt_getprop>
2ffe1f20:	b938      	cbnz	r0, 2ffe1f32 <fdt_get_status+0x3e>
2ffe1f22:	2c01      	cmp	r4, #1
2ffe1f24:	bf08      	it	eq
2ffe1f26:	2403      	moveq	r4, #3
2ffe1f28:	4620      	mov	r0, r4
2ffe1f2a:	b003      	add	sp, #12
2ffe1f2c:	bd30      	pop	{r4, r5, pc}
2ffe1f2e:	2401      	movs	r4, #1
2ffe1f30:	e7f0      	b.n	2ffe1f14 <fdt_get_status+0x20>
2ffe1f32:	9a01      	ldr	r2, [sp, #4]
2ffe1f34:	4906      	ldr	r1, [pc, #24]	; (2ffe1f50 <fdt_get_status+0x5c>)
2ffe1f36:	f001 fa1c 	bl	2ffe3372 <strncmp>
2ffe1f3a:	2800      	cmp	r0, #0
2ffe1f3c:	d1f4      	bne.n	2ffe1f28 <fdt_get_status+0x34>
2ffe1f3e:	f044 0402 	orr.w	r4, r4, #2
2ffe1f42:	b2e4      	uxtb	r4, r4
2ffe1f44:	e7f0      	b.n	2ffe1f28 <fdt_get_status+0x34>
2ffe1f46:	bf00      	nop
2ffe1f48:	2ffe6b80 	.word	0x2ffe6b80
2ffe1f4c:	2ffcc000 	.word	0x2ffcc000
2ffe1f50:	2ffe6b74 	.word	0x2ffe6b74
2ffe1f54:	2ffe6b79 	.word	0x2ffe6b79

2ffe1f58 <fdt_read_uint32_default>:
2ffe1f58:	b513      	push	{r0, r1, r4, lr}
2ffe1f5a:	4614      	mov	r4, r2
2ffe1f5c:	ab01      	add	r3, sp, #4
2ffe1f5e:	460a      	mov	r2, r1
2ffe1f60:	4601      	mov	r1, r0
2ffe1f62:	4806      	ldr	r0, [pc, #24]	; (2ffe1f7c <fdt_read_uint32_default+0x24>)
2ffe1f64:	f000 fe39 	bl	2ffe2bda <fdt_getprop>
2ffe1f68:	b128      	cbz	r0, 2ffe1f76 <fdt_read_uint32_default+0x1e>
2ffe1f6a:	6800      	ldr	r0, [r0, #0]
2ffe1f6c:	b002      	add	sp, #8
2ffe1f6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe1f72:	f7ff bedd 	b.w	2ffe1d30 <fdt32_to_cpu>
2ffe1f76:	4620      	mov	r0, r4
2ffe1f78:	b002      	add	sp, #8
2ffe1f7a:	bd10      	pop	{r4, pc}
2ffe1f7c:	2ffcc000 	.word	0x2ffcc000

2ffe1f80 <fdt_read_uint32_array>:
2ffe1f80:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffe1f82:	4615      	mov	r5, r2
2ffe1f84:	461c      	mov	r4, r3
2ffe1f86:	460a      	mov	r2, r1
2ffe1f88:	ab01      	add	r3, sp, #4
2ffe1f8a:	4601      	mov	r1, r0
2ffe1f8c:	480f      	ldr	r0, [pc, #60]	; (2ffe1fcc <fdt_read_uint32_array+0x4c>)
2ffe1f8e:	f000 fe24 	bl	2ffe2bda <fdt_getprop>
2ffe1f92:	4601      	mov	r1, r0
2ffe1f94:	b198      	cbz	r0, 2ffe1fbe <fdt_read_uint32_array+0x3e>
2ffe1f96:	9a01      	ldr	r2, [sp, #4]
2ffe1f98:	00a3      	lsls	r3, r4, #2
2ffe1f9a:	ebb2 0f84 	cmp.w	r2, r4, lsl #2
2ffe1f9e:	d111      	bne.n	2ffe1fc4 <fdt_read_uint32_array+0x44>
2ffe1fa0:	089c      	lsrs	r4, r3, #2
2ffe1fa2:	2300      	movs	r3, #0
2ffe1fa4:	429c      	cmp	r4, r3
2ffe1fa6:	d102      	bne.n	2ffe1fae <fdt_read_uint32_array+0x2e>
2ffe1fa8:	2000      	movs	r0, #0
2ffe1faa:	b003      	add	sp, #12
2ffe1fac:	bd30      	pop	{r4, r5, pc}
2ffe1fae:	f851 0023 	ldr.w	r0, [r1, r3, lsl #2]
2ffe1fb2:	f7ff febd 	bl	2ffe1d30 <fdt32_to_cpu>
2ffe1fb6:	f845 0023 	str.w	r0, [r5, r3, lsl #2]
2ffe1fba:	3301      	adds	r3, #1
2ffe1fbc:	e7f2      	b.n	2ffe1fa4 <fdt_read_uint32_array+0x24>
2ffe1fbe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe1fc2:	e7f2      	b.n	2ffe1faa <fdt_read_uint32_array+0x2a>
2ffe1fc4:	f06f 000b 	mvn.w	r0, #11
2ffe1fc8:	e7ef      	b.n	2ffe1faa <fdt_read_uint32_array+0x2a>
2ffe1fca:	bf00      	nop
2ffe1fcc:	2ffcc000 	.word	0x2ffcc000

2ffe1fd0 <fdt_get_reg_props_by_name>:
2ffe1fd0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffe1fd2:	4606      	mov	r6, r0
2ffe1fd4:	460c      	mov	r4, r1
2ffe1fd6:	4617      	mov	r7, r2
2ffe1fd8:	461d      	mov	r5, r3
2ffe1fda:	f7ff feab 	bl	2ffe1d34 <fdt_get_node_parent_address_cells>
2ffe1fde:	2801      	cmp	r0, #1
2ffe1fe0:	d003      	beq.n	2ffe1fea <fdt_get_reg_props_by_name+0x1a>
2ffe1fe2:	481d      	ldr	r0, [pc, #116]	; (2ffe2058 <fdt_get_reg_props_by_name+0x88>)
2ffe1fe4:	21e6      	movs	r1, #230	; 0xe6
2ffe1fe6:	f000 ff95 	bl	2ffe2f14 <__assert>
2ffe1fea:	481c      	ldr	r0, [pc, #112]	; (2ffe205c <fdt_get_reg_props_by_name+0x8c>)
2ffe1fec:	4631      	mov	r1, r6
2ffe1fee:	f000 fed6 	bl	2ffe2d9e <fdt_parent_offset>
2ffe1ff2:	1e01      	subs	r1, r0, #0
2ffe1ff4:	dbf5      	blt.n	2ffe1fe2 <fdt_get_reg_props_by_name+0x12>
2ffe1ff6:	4819      	ldr	r0, [pc, #100]	; (2ffe205c <fdt_get_reg_props_by_name+0x8c>)
2ffe1ff8:	f000 fc9c 	bl	2ffe2934 <fdt_size_cells>
2ffe1ffc:	2801      	cmp	r0, #1
2ffe1ffe:	d1f0      	bne.n	2ffe1fe2 <fdt_get_reg_props_by_name+0x12>
2ffe2000:	4a17      	ldr	r2, [pc, #92]	; (2ffe2060 <fdt_get_reg_props_by_name+0x90>)
2ffe2002:	4623      	mov	r3, r4
2ffe2004:	4815      	ldr	r0, [pc, #84]	; (2ffe205c <fdt_get_reg_props_by_name+0x8c>)
2ffe2006:	4631      	mov	r1, r6
2ffe2008:	f000 ff1d 	bl	2ffe2e46 <fdt_stringlist_search>
2ffe200c:	1e04      	subs	r4, r0, #0
2ffe200e:	db18      	blt.n	2ffe2042 <fdt_get_reg_props_by_name+0x72>
2ffe2010:	4a14      	ldr	r2, [pc, #80]	; (2ffe2064 <fdt_get_reg_props_by_name+0x94>)
2ffe2012:	ab01      	add	r3, sp, #4
2ffe2014:	4811      	ldr	r0, [pc, #68]	; (2ffe205c <fdt_get_reg_props_by_name+0x8c>)
2ffe2016:	4631      	mov	r1, r6
2ffe2018:	f000 fddf 	bl	2ffe2bda <fdt_getprop>
2ffe201c:	b1a0      	cbz	r0, 2ffe2048 <fdt_get_reg_props_by_name+0x78>
2ffe201e:	9b01      	ldr	r3, [sp, #4]
2ffe2020:	ebb3 0f84 	cmp.w	r3, r4, lsl #2
2ffe2024:	db13      	blt.n	2ffe204e <fdt_get_reg_props_by_name+0x7e>
2ffe2026:	eb00 03c4 	add.w	r3, r0, r4, lsl #3
2ffe202a:	b127      	cbz	r7, 2ffe2036 <fdt_get_reg_props_by_name+0x66>
2ffe202c:	f850 0034 	ldr.w	r0, [r0, r4, lsl #3]
2ffe2030:	f7ff fe7e 	bl	2ffe1d30 <fdt32_to_cpu>
2ffe2034:	6038      	str	r0, [r7, #0]
2ffe2036:	b16d      	cbz	r5, 2ffe2054 <fdt_get_reg_props_by_name+0x84>
2ffe2038:	6858      	ldr	r0, [r3, #4]
2ffe203a:	2400      	movs	r4, #0
2ffe203c:	f7ff fe78 	bl	2ffe1d30 <fdt32_to_cpu>
2ffe2040:	6028      	str	r0, [r5, #0]
2ffe2042:	4620      	mov	r0, r4
2ffe2044:	b003      	add	sp, #12
2ffe2046:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffe2048:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffe204c:	e7f9      	b.n	2ffe2042 <fdt_get_reg_props_by_name+0x72>
2ffe204e:	f06f 040e 	mvn.w	r4, #14
2ffe2052:	e7f6      	b.n	2ffe2042 <fdt_get_reg_props_by_name+0x72>
2ffe2054:	462c      	mov	r4, r5
2ffe2056:	e7f4      	b.n	2ffe2042 <fdt_get_reg_props_by_name+0x72>
2ffe2058:	2ffe6b87 	.word	0x2ffe6b87
2ffe205c:	2ffcc000 	.word	0x2ffcc000
2ffe2060:	2ffe6ba3 	.word	0x2ffe6ba3
2ffe2064:	2ffe521b 	.word	0x2ffe521b

2ffe2068 <dt_set_stdout_pinctrl>:
2ffe2068:	b508      	push	{r3, lr}
2ffe206a:	f7ff fe75 	bl	2ffe1d58 <dt_get_stdout_node_offset>
2ffe206e:	2800      	cmp	r0, #0
2ffe2070:	db03      	blt.n	2ffe207a <dt_set_stdout_pinctrl+0x12>
2ffe2072:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe2076:	f7fe b9c9 	b.w	2ffe040c <dt_set_pinctrl_config>
2ffe207a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe207e:	bd08      	pop	{r3, pc}

2ffe2080 <dt_fill_device_info>:
2ffe2080:	b538      	push	{r3, r4, r5, lr}
2ffe2082:	4605      	mov	r5, r0
2ffe2084:	4608      	mov	r0, r1
2ffe2086:	460c      	mov	r4, r1
2ffe2088:	f7ff fe54 	bl	2ffe1d34 <fdt_get_node_parent_address_cells>
2ffe208c:	2801      	cmp	r0, #1
2ffe208e:	d004      	beq.n	2ffe209a <dt_fill_device_info+0x1a>
2ffe2090:	4818      	ldr	r0, [pc, #96]	; (2ffe20f4 <dt_fill_device_info+0x74>)
2ffe2092:	f240 1149 	movw	r1, #329	; 0x149
2ffe2096:	f000 ff3d 	bl	2ffe2f14 <__assert>
2ffe209a:	4a17      	ldr	r2, [pc, #92]	; (2ffe20f8 <dt_fill_device_info+0x78>)
2ffe209c:	2300      	movs	r3, #0
2ffe209e:	4817      	ldr	r0, [pc, #92]	; (2ffe20fc <dt_fill_device_info+0x7c>)
2ffe20a0:	4621      	mov	r1, r4
2ffe20a2:	f000 fd9a 	bl	2ffe2bda <fdt_getprop>
2ffe20a6:	b110      	cbz	r0, 2ffe20ae <dt_fill_device_info+0x2e>
2ffe20a8:	6800      	ldr	r0, [r0, #0]
2ffe20aa:	f7ff fe41 	bl	2ffe1d30 <fdt32_to_cpu>
2ffe20ae:	6028      	str	r0, [r5, #0]
2ffe20b0:	2300      	movs	r3, #0
2ffe20b2:	4a13      	ldr	r2, [pc, #76]	; (2ffe2100 <dt_fill_device_info+0x80>)
2ffe20b4:	4621      	mov	r1, r4
2ffe20b6:	4811      	ldr	r0, [pc, #68]	; (2ffe20fc <dt_fill_device_info+0x7c>)
2ffe20b8:	f000 fd8f 	bl	2ffe2bda <fdt_getprop>
2ffe20bc:	b198      	cbz	r0, 2ffe20e6 <dt_fill_device_info+0x66>
2ffe20be:	6840      	ldr	r0, [r0, #4]
2ffe20c0:	f7ff fe36 	bl	2ffe1d30 <fdt32_to_cpu>
2ffe20c4:	6068      	str	r0, [r5, #4]
2ffe20c6:	2300      	movs	r3, #0
2ffe20c8:	4a0e      	ldr	r2, [pc, #56]	; (2ffe2104 <dt_fill_device_info+0x84>)
2ffe20ca:	4621      	mov	r1, r4
2ffe20cc:	480b      	ldr	r0, [pc, #44]	; (2ffe20fc <dt_fill_device_info+0x7c>)
2ffe20ce:	f000 fd84 	bl	2ffe2bda <fdt_getprop>
2ffe20d2:	b158      	cbz	r0, 2ffe20ec <dt_fill_device_info+0x6c>
2ffe20d4:	6840      	ldr	r0, [r0, #4]
2ffe20d6:	f7ff fe2b 	bl	2ffe1d30 <fdt32_to_cpu>
2ffe20da:	60a8      	str	r0, [r5, #8]
2ffe20dc:	4620      	mov	r0, r4
2ffe20de:	f7ff ff09 	bl	2ffe1ef4 <fdt_get_status>
2ffe20e2:	60e8      	str	r0, [r5, #12]
2ffe20e4:	bd38      	pop	{r3, r4, r5, pc}
2ffe20e6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe20ea:	e7eb      	b.n	2ffe20c4 <dt_fill_device_info+0x44>
2ffe20ec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe20f0:	e7f3      	b.n	2ffe20da <dt_fill_device_info+0x5a>
2ffe20f2:	bf00      	nop
2ffe20f4:	2ffe6b87 	.word	0x2ffe6b87
2ffe20f8:	2ffe521b 	.word	0x2ffe521b
2ffe20fc:	2ffcc000 	.word	0x2ffcc000
2ffe2100:	2ffe5c82 	.word	0x2ffe5c82
2ffe2104:	2ffe6bad 	.word	0x2ffe6bad

2ffe2108 <dt_get_node>:
2ffe2108:	b538      	push	{r3, r4, r5, lr}
2ffe210a:	4605      	mov	r5, r0
2ffe210c:	4806      	ldr	r0, [pc, #24]	; (2ffe2128 <dt_get_node+0x20>)
2ffe210e:	f000 fee1 	bl	2ffe2ed4 <fdt_node_offset_by_compatible>
2ffe2112:	1e04      	subs	r4, r0, #0
2ffe2114:	db05      	blt.n	2ffe2122 <dt_get_node+0x1a>
2ffe2116:	4621      	mov	r1, r4
2ffe2118:	4628      	mov	r0, r5
2ffe211a:	f7ff ffb1 	bl	2ffe2080 <dt_fill_device_info>
2ffe211e:	4620      	mov	r0, r4
2ffe2120:	bd38      	pop	{r3, r4, r5, pc}
2ffe2122:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffe2126:	e7fa      	b.n	2ffe211e <dt_get_node+0x16>
2ffe2128:	2ffcc000 	.word	0x2ffcc000

2ffe212c <dt_get_stdout_uart_info>:
2ffe212c:	b538      	push	{r3, r4, r5, lr}
2ffe212e:	4605      	mov	r5, r0
2ffe2130:	f7ff fe12 	bl	2ffe1d58 <dt_get_stdout_node_offset>
2ffe2134:	1e04      	subs	r4, r0, #0
2ffe2136:	db05      	blt.n	2ffe2144 <dt_get_stdout_uart_info+0x18>
2ffe2138:	4621      	mov	r1, r4
2ffe213a:	4628      	mov	r0, r5
2ffe213c:	f7ff ffa0 	bl	2ffe2080 <dt_fill_device_info>
2ffe2140:	4620      	mov	r0, r4
2ffe2142:	bd38      	pop	{r3, r4, r5, pc}
2ffe2144:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffe2148:	e7fa      	b.n	2ffe2140 <dt_get_stdout_uart_info+0x14>
	...

2ffe214c <dt_get_node_by_compatible>:
2ffe214c:	b538      	push	{r3, r4, r5, lr}
2ffe214e:	4602      	mov	r2, r0
2ffe2150:	4605      	mov	r5, r0
2ffe2152:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffe2156:	4805      	ldr	r0, [pc, #20]	; (2ffe216c <dt_get_node_by_compatible+0x20>)
2ffe2158:	f000 febc 	bl	2ffe2ed4 <fdt_node_offset_by_compatible>
2ffe215c:	1e04      	subs	r4, r0, #0
2ffe215e:	da03      	bge.n	2ffe2168 <dt_get_node_by_compatible+0x1c>
2ffe2160:	4803      	ldr	r0, [pc, #12]	; (2ffe2170 <dt_get_node_by_compatible+0x24>)
2ffe2162:	4629      	mov	r1, r5
2ffe2164:	f7fa fcc2 	bl	2ffdcaec <tf_log>
2ffe2168:	4620      	mov	r0, r4
2ffe216a:	bd38      	pop	{r3, r4, r5, pc}
2ffe216c:	2ffcc000 	.word	0x2ffcc000
2ffe2170:	2ffe6bb4 	.word	0x2ffe6bb4

2ffe2174 <dt_match_instance_by_compatible>:
2ffe2174:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe2178:	4602      	mov	r2, r0
2ffe217a:	f8df 8060 	ldr.w	r8, [pc, #96]	; 2ffe21dc <dt_match_instance_by_compatible+0x68>
2ffe217e:	4605      	mov	r5, r0
2ffe2180:	4814      	ldr	r0, [pc, #80]	; (2ffe21d4 <dt_match_instance_by_compatible+0x60>)
2ffe2182:	460e      	mov	r6, r1
2ffe2184:	4f13      	ldr	r7, [pc, #76]	; (2ffe21d4 <dt_match_instance_by_compatible+0x60>)
2ffe2186:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffe218a:	f000 fea3 	bl	2ffe2ed4 <fdt_node_offset_by_compatible>
2ffe218e:	4604      	mov	r4, r0
2ffe2190:	1c63      	adds	r3, r4, #1
2ffe2192:	d102      	bne.n	2ffe219a <dt_match_instance_by_compatible+0x26>
2ffe2194:	4620      	mov	r0, r4
2ffe2196:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe219a:	4620      	mov	r0, r4
2ffe219c:	f7ff fdca 	bl	2ffe1d34 <fdt_get_node_parent_address_cells>
2ffe21a0:	2801      	cmp	r0, #1
2ffe21a2:	d004      	beq.n	2ffe21ae <dt_match_instance_by_compatible+0x3a>
2ffe21a4:	480c      	ldr	r0, [pc, #48]	; (2ffe21d8 <dt_match_instance_by_compatible+0x64>)
2ffe21a6:	f44f 71d4 	mov.w	r1, #424	; 0x1a8
2ffe21aa:	f000 feb3 	bl	2ffe2f14 <__assert>
2ffe21ae:	2300      	movs	r3, #0
2ffe21b0:	4642      	mov	r2, r8
2ffe21b2:	4621      	mov	r1, r4
2ffe21b4:	4638      	mov	r0, r7
2ffe21b6:	f000 fd10 	bl	2ffe2bda <fdt_getprop>
2ffe21ba:	b120      	cbz	r0, 2ffe21c6 <dt_match_instance_by_compatible+0x52>
2ffe21bc:	6800      	ldr	r0, [r0, #0]
2ffe21be:	f7ff fdb7 	bl	2ffe1d30 <fdt32_to_cpu>
2ffe21c2:	42b0      	cmp	r0, r6
2ffe21c4:	d0e6      	beq.n	2ffe2194 <dt_match_instance_by_compatible+0x20>
2ffe21c6:	4621      	mov	r1, r4
2ffe21c8:	462a      	mov	r2, r5
2ffe21ca:	4638      	mov	r0, r7
2ffe21cc:	f000 fe82 	bl	2ffe2ed4 <fdt_node_offset_by_compatible>
2ffe21d0:	4604      	mov	r4, r0
2ffe21d2:	e7dd      	b.n	2ffe2190 <dt_match_instance_by_compatible+0x1c>
2ffe21d4:	2ffcc000 	.word	0x2ffcc000
2ffe21d8:	2ffe6b87 	.word	0x2ffe6b87
2ffe21dc:	2ffe521b 	.word	0x2ffe521b

2ffe21e0 <dt_get_ddr_size>:
2ffe21e0:	4806      	ldr	r0, [pc, #24]	; (2ffe21fc <dt_get_ddr_size+0x1c>)
2ffe21e2:	b508      	push	{r3, lr}
2ffe21e4:	f7ff ffb2 	bl	2ffe214c <dt_get_node_by_compatible>
2ffe21e8:	2800      	cmp	r0, #0
2ffe21ea:	db05      	blt.n	2ffe21f8 <dt_get_ddr_size+0x18>
2ffe21ec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe21f0:	4903      	ldr	r1, [pc, #12]	; (2ffe2200 <dt_get_ddr_size+0x20>)
2ffe21f2:	2200      	movs	r2, #0
2ffe21f4:	f7ff beb0 	b.w	2ffe1f58 <fdt_read_uint32_default>
2ffe21f8:	2000      	movs	r0, #0
2ffe21fa:	bd08      	pop	{r3, pc}
2ffe21fc:	2ffe5268 	.word	0x2ffe5268
2ffe2200:	2ffe5285 	.word	0x2ffe5285

2ffe2204 <dt_get_max_opp_freqvolt>:
2ffe2204:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2ffe2208:	460d      	mov	r5, r1
2ffe220a:	4607      	mov	r7, r0
2ffe220c:	b920      	cbnz	r0, 2ffe2218 <dt_get_max_opp_freqvolt+0x14>
2ffe220e:	f44f 7106 	mov.w	r1, #536	; 0x218
2ffe2212:	481b      	ldr	r0, [pc, #108]	; (2ffe2280 <dt_get_max_opp_freqvolt+0x7c>)
2ffe2214:	f000 fe7e 	bl	2ffe2f14 <__assert>
2ffe2218:	b911      	cbnz	r1, 2ffe2220 <dt_get_max_opp_freqvolt+0x1c>
2ffe221a:	f240 2119 	movw	r1, #537	; 0x219
2ffe221e:	e7f8      	b.n	2ffe2212 <dt_get_max_opp_freqvolt+0xe>
2ffe2220:	4818      	ldr	r0, [pc, #96]	; (2ffe2284 <dt_get_max_opp_freqvolt+0x80>)
2ffe2222:	f7ff ff93 	bl	2ffe214c <dt_get_node_by_compatible>
2ffe2226:	2800      	cmp	r0, #0
2ffe2228:	db12      	blt.n	2ffe2250 <dt_get_max_opp_freqvolt+0x4c>
2ffe222a:	f8df 905c 	ldr.w	r9, [pc, #92]	; 2ffe2288 <dt_get_max_opp_freqvolt+0x84>
2ffe222e:	4601      	mov	r1, r0
2ffe2230:	4815      	ldr	r0, [pc, #84]	; (2ffe2288 <dt_get_max_opp_freqvolt+0x84>)
2ffe2232:	2600      	movs	r6, #0
2ffe2234:	46b0      	mov	r8, r6
2ffe2236:	f000 fb30 	bl	2ffe289a <fdt_first_subnode>
2ffe223a:	4604      	mov	r4, r0
2ffe223c:	2c00      	cmp	r4, #0
2ffe223e:	da0a      	bge.n	2ffe2256 <dt_get_max_opp_freqvolt+0x52>
2ffe2240:	f1b8 0f00 	cmp.w	r8, #0
2ffe2244:	d018      	beq.n	2ffe2278 <dt_get_max_opp_freqvolt+0x74>
2ffe2246:	b1be      	cbz	r6, 2ffe2278 <dt_get_max_opp_freqvolt+0x74>
2ffe2248:	f8c7 8000 	str.w	r8, [r7]
2ffe224c:	2000      	movs	r0, #0
2ffe224e:	602e      	str	r6, [r5, #0]
2ffe2250:	b003      	add	sp, #12
2ffe2252:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffe2256:	aa01      	add	r2, sp, #4
2ffe2258:	4669      	mov	r1, sp
2ffe225a:	4620      	mov	r0, r4
2ffe225c:	f7ff fdba 	bl	2ffe1dd4 <dt_get_opp_freqvolt_from_subnode>
2ffe2260:	b920      	cbnz	r0, 2ffe226c <dt_get_max_opp_freqvolt+0x68>
2ffe2262:	9b00      	ldr	r3, [sp, #0]
2ffe2264:	4543      	cmp	r3, r8
2ffe2266:	bf84      	itt	hi
2ffe2268:	4698      	movhi	r8, r3
2ffe226a:	9e01      	ldrhi	r6, [sp, #4]
2ffe226c:	4621      	mov	r1, r4
2ffe226e:	4648      	mov	r0, r9
2ffe2270:	f000 fb26 	bl	2ffe28c0 <fdt_next_subnode>
2ffe2274:	4604      	mov	r4, r0
2ffe2276:	e7e1      	b.n	2ffe223c <dt_get_max_opp_freqvolt+0x38>
2ffe2278:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe227c:	e7e8      	b.n	2ffe2250 <dt_get_max_opp_freqvolt+0x4c>
2ffe227e:	bf00      	nop
2ffe2280:	2ffe6b87 	.word	0x2ffe6b87
2ffe2284:	2ffe6bd0 	.word	0x2ffe6bd0
2ffe2288:	2ffcc000 	.word	0x2ffcc000

2ffe228c <dt_get_pwr_vdd_voltage>:
2ffe228c:	4810      	ldr	r0, [pc, #64]	; (2ffe22d0 <dt_get_pwr_vdd_voltage+0x44>)
2ffe228e:	b508      	push	{r3, lr}
2ffe2290:	f7ff ff5c 	bl	2ffe214c <dt_get_node_by_compatible>
2ffe2294:	1e01      	subs	r1, r0, #0
2ffe2296:	db19      	blt.n	2ffe22cc <dt_get_pwr_vdd_voltage+0x40>
2ffe2298:	4a0e      	ldr	r2, [pc, #56]	; (2ffe22d4 <dt_get_pwr_vdd_voltage+0x48>)
2ffe229a:	2300      	movs	r3, #0
2ffe229c:	480e      	ldr	r0, [pc, #56]	; (2ffe22d8 <dt_get_pwr_vdd_voltage+0x4c>)
2ffe229e:	f000 fc9c 	bl	2ffe2bda <fdt_getprop>
2ffe22a2:	b198      	cbz	r0, 2ffe22cc <dt_get_pwr_vdd_voltage+0x40>
2ffe22a4:	6800      	ldr	r0, [r0, #0]
2ffe22a6:	f7ff fd43 	bl	2ffe1d30 <fdt32_to_cpu>
2ffe22aa:	4601      	mov	r1, r0
2ffe22ac:	480a      	ldr	r0, [pc, #40]	; (2ffe22d8 <dt_get_pwr_vdd_voltage+0x4c>)
2ffe22ae:	f000 fd86 	bl	2ffe2dbe <fdt_node_offset_by_phandle>
2ffe22b2:	1e01      	subs	r1, r0, #0
2ffe22b4:	db0a      	blt.n	2ffe22cc <dt_get_pwr_vdd_voltage+0x40>
2ffe22b6:	4a09      	ldr	r2, [pc, #36]	; (2ffe22dc <dt_get_pwr_vdd_voltage+0x50>)
2ffe22b8:	2300      	movs	r3, #0
2ffe22ba:	4807      	ldr	r0, [pc, #28]	; (2ffe22d8 <dt_get_pwr_vdd_voltage+0x4c>)
2ffe22bc:	f000 fc8d 	bl	2ffe2bda <fdt_getprop>
2ffe22c0:	b120      	cbz	r0, 2ffe22cc <dt_get_pwr_vdd_voltage+0x40>
2ffe22c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe22c6:	6800      	ldr	r0, [r0, #0]
2ffe22c8:	f7ff bd32 	b.w	2ffe1d30 <fdt32_to_cpu>
2ffe22cc:	2000      	movs	r0, #0
2ffe22ce:	bd08      	pop	{r3, pc}
2ffe22d0:	2ffe6be4 	.word	0x2ffe6be4
2ffe22d4:	2ffe6bf8 	.word	0x2ffe6bf8
2ffe22d8:	2ffcc000 	.word	0x2ffcc000
2ffe22dc:	2ffe65b2 	.word	0x2ffe65b2

2ffe22e0 <dt_get_cpu_regulator_name>:
2ffe22e0:	490f      	ldr	r1, [pc, #60]	; (2ffe2320 <dt_get_cpu_regulator_name+0x40>)
2ffe22e2:	4810      	ldr	r0, [pc, #64]	; (2ffe2324 <dt_get_cpu_regulator_name+0x44>)
2ffe22e4:	b510      	push	{r4, lr}
2ffe22e6:	f000 fd0a 	bl	2ffe2cfe <fdt_path_offset>
2ffe22ea:	1e01      	subs	r1, r0, #0
2ffe22ec:	db15      	blt.n	2ffe231a <dt_get_cpu_regulator_name+0x3a>
2ffe22ee:	4a0e      	ldr	r2, [pc, #56]	; (2ffe2328 <dt_get_cpu_regulator_name+0x48>)
2ffe22f0:	2300      	movs	r3, #0
2ffe22f2:	480c      	ldr	r0, [pc, #48]	; (2ffe2324 <dt_get_cpu_regulator_name+0x44>)
2ffe22f4:	f000 fc71 	bl	2ffe2bda <fdt_getprop>
2ffe22f8:	b178      	cbz	r0, 2ffe231a <dt_get_cpu_regulator_name+0x3a>
2ffe22fa:	6800      	ldr	r0, [r0, #0]
2ffe22fc:	f7ff fd18 	bl	2ffe1d30 <fdt32_to_cpu>
2ffe2300:	4601      	mov	r1, r0
2ffe2302:	4808      	ldr	r0, [pc, #32]	; (2ffe2324 <dt_get_cpu_regulator_name+0x44>)
2ffe2304:	f000 fd5b 	bl	2ffe2dbe <fdt_node_offset_by_phandle>
2ffe2308:	1e01      	subs	r1, r0, #0
2ffe230a:	db06      	blt.n	2ffe231a <dt_get_cpu_regulator_name+0x3a>
2ffe230c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe2310:	4a06      	ldr	r2, [pc, #24]	; (2ffe232c <dt_get_cpu_regulator_name+0x4c>)
2ffe2312:	2300      	movs	r3, #0
2ffe2314:	4803      	ldr	r0, [pc, #12]	; (2ffe2324 <dt_get_cpu_regulator_name+0x44>)
2ffe2316:	f000 bc60 	b.w	2ffe2bda <fdt_getprop>
2ffe231a:	2000      	movs	r0, #0
2ffe231c:	bd10      	pop	{r4, pc}
2ffe231e:	bf00      	nop
2ffe2320:	2ffe6c03 	.word	0x2ffe6c03
2ffe2324:	2ffcc000 	.word	0x2ffcc000
2ffe2328:	2ffe6c0f 	.word	0x2ffe6c0f
2ffe232c:	2ffe6635 	.word	0x2ffe6635

2ffe2330 <dt_get_board_model>:
2ffe2330:	4907      	ldr	r1, [pc, #28]	; (2ffe2350 <dt_get_board_model+0x20>)
2ffe2332:	4808      	ldr	r0, [pc, #32]	; (2ffe2354 <dt_get_board_model+0x24>)
2ffe2334:	b510      	push	{r4, lr}
2ffe2336:	f000 fce2 	bl	2ffe2cfe <fdt_path_offset>
2ffe233a:	1e01      	subs	r1, r0, #0
2ffe233c:	db06      	blt.n	2ffe234c <dt_get_board_model+0x1c>
2ffe233e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe2342:	4a05      	ldr	r2, [pc, #20]	; (2ffe2358 <dt_get_board_model+0x28>)
2ffe2344:	2300      	movs	r3, #0
2ffe2346:	4803      	ldr	r0, [pc, #12]	; (2ffe2354 <dt_get_board_model+0x24>)
2ffe2348:	f000 bc47 	b.w	2ffe2bda <fdt_getprop>
2ffe234c:	2000      	movs	r0, #0
2ffe234e:	bd10      	pop	{r4, pc}
2ffe2350:	2ffe6c1a 	.word	0x2ffe6c1a
2ffe2354:	2ffcc000 	.word	0x2ffcc000
2ffe2358:	2ffe6c1c 	.word	0x2ffe6c1c

2ffe235c <stm32mp_lock_shregs>:
2ffe235c:	b508      	push	{r3, lr}
2ffe235e:	f7fa fdae 	bl	2ffdcebe <stm32mp_lock_available>
2ffe2362:	b120      	cbz	r0, 2ffe236e <stm32mp_lock_shregs+0x12>
2ffe2364:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe2368:	4801      	ldr	r0, [pc, #4]	; (2ffe2370 <stm32mp_lock_shregs+0x14>)
2ffe236a:	f004 be1d 	b.w	2ffe6fa8 <__spin_lock_from_thumb>
2ffe236e:	bd08      	pop	{r3, pc}
2ffe2370:	2ffe90e0 	.word	0x2ffe90e0

2ffe2374 <stm32mp_unlock_shregs>:
2ffe2374:	b508      	push	{r3, lr}
2ffe2376:	f7fa fda2 	bl	2ffdcebe <stm32mp_lock_available>
2ffe237a:	b120      	cbz	r0, 2ffe2386 <stm32mp_unlock_shregs+0x12>
2ffe237c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe2380:	4801      	ldr	r0, [pc, #4]	; (2ffe2388 <stm32mp_unlock_shregs+0x14>)
2ffe2382:	f004 be19 	b.w	2ffe6fb8 <__spin_unlock_from_thumb>
2ffe2386:	bd08      	pop	{r3, pc}
2ffe2388:	2ffe90e0 	.word	0x2ffe90e0

2ffe238c <stm32mp_mmio_clrbits_32_shregs>:
2ffe238c:	b538      	push	{r3, r4, r5, lr}
2ffe238e:	4604      	mov	r4, r0
2ffe2390:	460d      	mov	r5, r1
2ffe2392:	f7ff ffe3 	bl	2ffe235c <stm32mp_lock_shregs>
2ffe2396:	6823      	ldr	r3, [r4, #0]
2ffe2398:	ea23 0305 	bic.w	r3, r3, r5
2ffe239c:	6023      	str	r3, [r4, #0]
2ffe239e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffe23a2:	f7ff bfe7 	b.w	2ffe2374 <stm32mp_unlock_shregs>

2ffe23a6 <stm32mp_mmio_setbits_32_shregs>:
2ffe23a6:	b538      	push	{r3, r4, r5, lr}
2ffe23a8:	4605      	mov	r5, r0
2ffe23aa:	460c      	mov	r4, r1
2ffe23ac:	f7ff ffd6 	bl	2ffe235c <stm32mp_lock_shregs>
2ffe23b0:	6829      	ldr	r1, [r5, #0]
2ffe23b2:	430c      	orrs	r4, r1
2ffe23b4:	602c      	str	r4, [r5, #0]
2ffe23b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffe23ba:	f7ff bfdb 	b.w	2ffe2374 <stm32mp_unlock_shregs>

2ffe23be <stm32_get_zdata_from_context>:
2ffe23be:	b510      	push	{r4, lr}
2ffe23c0:	2063      	movs	r0, #99	; 0x63
2ffe23c2:	f7fd f9a7 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe23c6:	f04f 43a8 	mov.w	r3, #1409286144	; 0x54000000
2ffe23ca:	2063      	movs	r0, #99	; 0x63
2ffe23cc:	f8d3 4160 	ldr.w	r4, [r3, #352]	; 0x160
2ffe23d0:	f7fd f9a3 	bl	2ffdf71a <stm32mp_clk_disable>
2ffe23d4:	f024 4470 	bic.w	r4, r4, #4026531840	; 0xf0000000
2ffe23d8:	4620      	mov	r0, r4
2ffe23da:	bd10      	pop	{r4, pc}

2ffe23dc <stm32_get_pll1_settings_from_context>:
2ffe23dc:	b508      	push	{r3, lr}
2ffe23de:	2063      	movs	r0, #99	; 0x63
2ffe23e0:	f7fd f998 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe23e4:	4804      	ldr	r0, [pc, #16]	; (2ffe23f8 <stm32_get_pll1_settings_from_context+0x1c>)
2ffe23e6:	214c      	movs	r1, #76	; 0x4c
2ffe23e8:	f7fd fae2 	bl	2ffdf9b0 <stm32mp1_clk_lp_load_opp_pll1_settings>
2ffe23ec:	2063      	movs	r0, #99	; 0x63
2ffe23ee:	f7fd f994 	bl	2ffdf71a <stm32mp_clk_disable>
2ffe23f2:	2000      	movs	r0, #0
2ffe23f4:	bd08      	pop	{r3, pc}
2ffe23f6:	bf00      	nop
2ffe23f8:	540001b0 	.word	0x540001b0

2ffe23fc <stm32_save_boot_interface>:
2ffe23fc:	b538      	push	{r3, r4, r5, lr}
2ffe23fe:	4605      	mov	r5, r0
2ffe2400:	2041      	movs	r0, #65	; 0x41
2ffe2402:	460c      	mov	r4, r1
2ffe2404:	f004 040f 	and.w	r4, r4, #15
2ffe2408:	f7fd f984 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe240c:	4a06      	ldr	r2, [pc, #24]	; (2ffe2428 <stm32_save_boot_interface+0x2c>)
2ffe240e:	ea44 1005 	orr.w	r0, r4, r5, lsl #4
2ffe2412:	6813      	ldr	r3, [r2, #0]
2ffe2414:	f423 447f 	bic.w	r4, r3, #65280	; 0xff00
2ffe2418:	ea44 2000 	orr.w	r0, r4, r0, lsl #8
2ffe241c:	6010      	str	r0, [r2, #0]
2ffe241e:	2041      	movs	r0, #65	; 0x41
2ffe2420:	f7fd f97b 	bl	2ffdf71a <stm32mp_clk_disable>
2ffe2424:	2000      	movs	r0, #0
2ffe2426:	bd38      	pop	{r3, r4, r5, pc}
2ffe2428:	5c00a150 	.word	0x5c00a150

2ffe242c <stm32_restore_ddr_training_area>:
2ffe242c:	b508      	push	{r3, lr}
2ffe242e:	2063      	movs	r0, #99	; 0x63
2ffe2430:	f7fd f970 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe2434:	4906      	ldr	r1, [pc, #24]	; (2ffe2450 <stm32_restore_ddr_training_area+0x24>)
2ffe2436:	2240      	movs	r2, #64	; 0x40
2ffe2438:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
2ffe243c:	f000 fd92 	bl	2ffe2f64 <memcpy>
2ffe2440:	f3bf 8f4f 	dsb	sy
2ffe2444:	2063      	movs	r0, #99	; 0x63
2ffe2446:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffe244a:	f7fd b966 	b.w	2ffdf71a <stm32mp_clk_disable>
2ffe244e:	bf00      	nop
2ffe2450:	54000170 	.word	0x54000170

2ffe2454 <stm32mp1_dbgmcu_init>:
2ffe2454:	b508      	push	{r3, lr}
2ffe2456:	f7fc f8ff 	bl	2ffde658 <bsec_read_debug_conf>
2ffe245a:	0543      	lsls	r3, r0, #21
2ffe245c:	d405      	bmi.n	2ffe246a <stm32mp1_dbgmcu_init+0x16>
2ffe245e:	4806      	ldr	r0, [pc, #24]	; (2ffe2478 <stm32mp1_dbgmcu_init+0x24>)
2ffe2460:	f7fa fb44 	bl	2ffdcaec <tf_log>
2ffe2464:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe2468:	bd08      	pop	{r3, pc}
2ffe246a:	4a04      	ldr	r2, [pc, #16]	; (2ffe247c <stm32mp1_dbgmcu_init+0x28>)
2ffe246c:	2000      	movs	r0, #0
2ffe246e:	6813      	ldr	r3, [r2, #0]
2ffe2470:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2ffe2474:	6013      	str	r3, [r2, #0]
2ffe2476:	e7f7      	b.n	2ffe2468 <stm32mp1_dbgmcu_init+0x14>
2ffe2478:	2ffe6c22 	.word	0x2ffe6c22
2ffe247c:	5000080c 	.word	0x5000080c

2ffe2480 <stm32mp1_dbgmcu_get_chip_version>:
2ffe2480:	b510      	push	{r4, lr}
2ffe2482:	4604      	mov	r4, r0
2ffe2484:	b918      	cbnz	r0, 2ffe248e <stm32mp1_dbgmcu_get_chip_version+0xe>
2ffe2486:	4807      	ldr	r0, [pc, #28]	; (2ffe24a4 <stm32mp1_dbgmcu_get_chip_version+0x24>)
2ffe2488:	2139      	movs	r1, #57	; 0x39
2ffe248a:	f000 fd43 	bl	2ffe2f14 <__assert>
2ffe248e:	f7ff ffe1 	bl	2ffe2454 <stm32mp1_dbgmcu_init>
2ffe2492:	b920      	cbnz	r0, 2ffe249e <stm32mp1_dbgmcu_get_chip_version+0x1e>
2ffe2494:	4b04      	ldr	r3, [pc, #16]	; (2ffe24a8 <stm32mp1_dbgmcu_get_chip_version+0x28>)
2ffe2496:	681b      	ldr	r3, [r3, #0]
2ffe2498:	0c1b      	lsrs	r3, r3, #16
2ffe249a:	6023      	str	r3, [r4, #0]
2ffe249c:	bd10      	pop	{r4, pc}
2ffe249e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe24a2:	e7fb      	b.n	2ffe249c <stm32mp1_dbgmcu_get_chip_version+0x1c>
2ffe24a4:	2ffe6c58 	.word	0x2ffe6c58
2ffe24a8:	50081000 	.word	0x50081000

2ffe24ac <stm32mp1_dbgmcu_get_chip_dev_id>:
2ffe24ac:	b510      	push	{r4, lr}
2ffe24ae:	4604      	mov	r4, r0
2ffe24b0:	b918      	cbnz	r0, 2ffe24ba <stm32mp1_dbgmcu_get_chip_dev_id+0xe>
2ffe24b2:	4808      	ldr	r0, [pc, #32]	; (2ffe24d4 <stm32mp1_dbgmcu_get_chip_dev_id+0x28>)
2ffe24b4:	214c      	movs	r1, #76	; 0x4c
2ffe24b6:	f000 fd2d 	bl	2ffe2f14 <__assert>
2ffe24ba:	f7ff ffcb 	bl	2ffe2454 <stm32mp1_dbgmcu_init>
2ffe24be:	b928      	cbnz	r0, 2ffe24cc <stm32mp1_dbgmcu_get_chip_dev_id+0x20>
2ffe24c0:	4b05      	ldr	r3, [pc, #20]	; (2ffe24d8 <stm32mp1_dbgmcu_get_chip_dev_id+0x2c>)
2ffe24c2:	681b      	ldr	r3, [r3, #0]
2ffe24c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
2ffe24c8:	6023      	str	r3, [r4, #0]
2ffe24ca:	bd10      	pop	{r4, pc}
2ffe24cc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe24d0:	e7fb      	b.n	2ffe24ca <stm32mp1_dbgmcu_get_chip_dev_id+0x1e>
2ffe24d2:	bf00      	nop
2ffe24d4:	2ffe6c58 	.word	0x2ffe6c58
2ffe24d8:	50081000 	.word	0x50081000

2ffe24dc <stm32mp1_dbgmcu_freeze_iwdg2>:
2ffe24dc:	b510      	push	{r4, lr}
2ffe24de:	f7ff ffb9 	bl	2ffe2454 <stm32mp1_dbgmcu_init>
2ffe24e2:	4604      	mov	r4, r0
2ffe24e4:	b958      	cbnz	r0, 2ffe24fe <stm32mp1_dbgmcu_freeze_iwdg2+0x22>
2ffe24e6:	f7fc f8b7 	bl	2ffde658 <bsec_read_debug_conf>
2ffe24ea:	f010 0f60 	tst.w	r0, #96	; 0x60
2ffe24ee:	d004      	beq.n	2ffe24fa <stm32mp1_dbgmcu_freeze_iwdg2+0x1e>
2ffe24f0:	4a04      	ldr	r2, [pc, #16]	; (2ffe2504 <stm32mp1_dbgmcu_freeze_iwdg2+0x28>)
2ffe24f2:	6813      	ldr	r3, [r2, #0]
2ffe24f4:	f043 0304 	orr.w	r3, r3, #4
2ffe24f8:	6013      	str	r3, [r2, #0]
2ffe24fa:	4620      	mov	r0, r4
2ffe24fc:	bd10      	pop	{r4, pc}
2ffe24fe:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffe2502:	e7fa      	b.n	2ffe24fa <stm32mp1_dbgmcu_freeze_iwdg2+0x1e>
2ffe2504:	5008102c 	.word	0x5008102c

2ffe2508 <stm32mp1_arch_security_setup>:
2ffe2508:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2ffe250a:	2042      	movs	r0, #66	; 0x42
2ffe250c:	f7fd f902 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe2510:	2071      	movs	r0, #113	; 0x71
2ffe2512:	f7fd f8ff 	bl	2ffdf714 <stm32mp_clk_enable>
2ffe2516:	480e      	ldr	r0, [pc, #56]	; (2ffe2550 <stm32mp1_arch_security_setup+0x48>)
2ffe2518:	f7fb fe6e 	bl	2ffde1f8 <tzc400_init>
2ffe251c:	f7fb ff2c 	bl	2ffde378 <tzc400_disable_filters>
2ffe2520:	4b0c      	ldr	r3, [pc, #48]	; (2ffe2554 <stm32mp1_arch_security_setup+0x4c>)
2ffe2522:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
2ffe2526:	2101      	movs	r1, #1
2ffe2528:	2003      	movs	r0, #3
2ffe252a:	9303      	str	r3, [sp, #12]
2ffe252c:	2300      	movs	r3, #0
2ffe252e:	9302      	str	r3, [sp, #8]
2ffe2530:	2300      	movs	r3, #0
2ffe2532:	e9cd 2300 	strd	r2, r3, [sp]
2ffe2536:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
2ffe253a:	2300      	movs	r3, #0
2ffe253c:	f7fb fe8a 	bl	2ffde254 <tzc400_configure_region>
2ffe2540:	2001      	movs	r0, #1
2ffe2542:	f7fb fe47 	bl	2ffde1d4 <tzc400_set_action>
2ffe2546:	b005      	add	sp, #20
2ffe2548:	f85d eb04 	ldr.w	lr, [sp], #4
2ffe254c:	f7fb bee0 	b.w	2ffde310 <tzc400_enable_filters>
2ffe2550:	5c006000 	.word	0x5c006000
2ffe2554:	02010201 	.word	0x02010201

2ffe2558 <stm32mp1_syscfg_enable_io_compensation>:
2ffe2558:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffe255a:	2033      	movs	r0, #51	; 0x33
2ffe255c:	f7fd f8e0 	bl	2ffdf720 <stm32mp1_clk_force_enable>
2ffe2560:	4a13      	ldr	r2, [pc, #76]	; (2ffe25b0 <stm32mp1_syscfg_enable_io_compensation+0x58>)
2ffe2562:	6813      	ldr	r3, [r2, #0]
2ffe2564:	f043 0301 	orr.w	r3, r3, #1
2ffe2568:	6013      	str	r3, [r2, #0]
2ffe256a:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffe256e:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2ffe2572:	4a10      	ldr	r2, [pc, #64]	; (2ffe25b4 <stm32mp1_syscfg_enable_io_compensation+0x5c>)
2ffe2574:	f242 7110 	movw	r1, #10000	; 0x2710
2ffe2578:	2300      	movs	r3, #0
2ffe257a:	fba0 0101 	umull	r0, r1, r0, r1
2ffe257e:	f000 e870 	blx	2ffe2660 <__aeabi_uldivmod>
2ffe2582:	4b0d      	ldr	r3, [pc, #52]	; (2ffe25b8 <stm32mp1_syscfg_enable_io_compensation+0x60>)
2ffe2584:	1906      	adds	r6, r0, r4
2ffe2586:	eb41 0705 	adc.w	r7, r1, r5
2ffe258a:	461c      	mov	r4, r3
2ffe258c:	681a      	ldr	r2, [r3, #0]
2ffe258e:	05d2      	lsls	r2, r2, #23
2ffe2590:	d408      	bmi.n	2ffe25a4 <stm32mp1_syscfg_enable_io_compensation+0x4c>
2ffe2592:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffe2596:	428f      	cmp	r7, r1
2ffe2598:	bf08      	it	eq
2ffe259a:	4286      	cmpeq	r6, r0
2ffe259c:	d2f6      	bcs.n	2ffe258c <stm32mp1_syscfg_enable_io_compensation+0x34>
2ffe259e:	4807      	ldr	r0, [pc, #28]	; (2ffe25bc <stm32mp1_syscfg_enable_io_compensation+0x64>)
2ffe25a0:	f7fa faa4 	bl	2ffdcaec <tf_log>
2ffe25a4:	6823      	ldr	r3, [r4, #0]
2ffe25a6:	f023 0302 	bic.w	r3, r3, #2
2ffe25aa:	6023      	str	r3, [r4, #0]
2ffe25ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffe25ae:	bf00      	nop
2ffe25b0:	50020024 	.word	0x50020024
2ffe25b4:	000f4240 	.word	0x000f4240
2ffe25b8:	50020020 	.word	0x50020020
2ffe25bc:	2ffe6c7b 	.word	0x2ffe6c7b

2ffe25c0 <stm32mp1_syscfg_init>:
2ffe25c0:	4b1d      	ldr	r3, [pc, #116]	; (2ffe2638 <stm32mp1_syscfg_init+0x78>)
2ffe25c2:	f44f 7200 	mov.w	r2, #512	; 0x200
2ffe25c6:	b513      	push	{r0, r1, r4, lr}
2ffe25c8:	601a      	str	r2, [r3, #0]
2ffe25ca:	4a1c      	ldr	r2, [pc, #112]	; (2ffe263c <stm32mp1_syscfg_init+0x7c>)
2ffe25cc:	481c      	ldr	r0, [pc, #112]	; (2ffe2640 <stm32mp1_syscfg_init+0x80>)
2ffe25ce:	6813      	ldr	r3, [r2, #0]
2ffe25d0:	6811      	ldr	r1, [r2, #0]
2ffe25d2:	011b      	lsls	r3, r3, #4
2ffe25d4:	f021 0170 	bic.w	r1, r1, #112	; 0x70
2ffe25d8:	f003 0370 	and.w	r3, r3, #112	; 0x70
2ffe25dc:	430b      	orrs	r3, r1
2ffe25de:	a901      	add	r1, sp, #4
2ffe25e0:	6013      	str	r3, [r2, #0]
2ffe25e2:	f7fa fd85 	bl	2ffdd0f0 <stm32_get_otp_value>
2ffe25e6:	b118      	cbz	r0, 2ffe25f0 <stm32mp1_syscfg_init+0x30>
2ffe25e8:	f7fa fb1e 	bl	2ffdcc28 <console_flush>
2ffe25ec:	f7f3 ee38 	blx	2ffd6260 <do_panic>
2ffe25f0:	9c01      	ldr	r4, [sp, #4]
2ffe25f2:	f7ff fe4b 	bl	2ffe228c <dt_get_pwr_vdd_voltage>
2ffe25f6:	b930      	cbnz	r0, 2ffe2606 <stm32mp1_syscfg_init+0x46>
2ffe25f8:	4812      	ldr	r0, [pc, #72]	; (2ffe2644 <stm32mp1_syscfg_init+0x84>)
2ffe25fa:	f7fa fa77 	bl	2ffdcaec <tf_log>
2ffe25fe:	f7ff ffab 	bl	2ffe2558 <stm32mp1_syscfg_enable_io_compensation>
2ffe2602:	b002      	add	sp, #8
2ffe2604:	bd10      	pop	{r4, pc}
2ffe2606:	4a10      	ldr	r2, [pc, #64]	; (2ffe2648 <stm32mp1_syscfg_init+0x88>)
2ffe2608:	f404 5400 	and.w	r4, r4, #8192	; 0x2000
2ffe260c:	4290      	cmp	r0, r2
2ffe260e:	d206      	bcs.n	2ffe261e <stm32mp1_syscfg_init+0x5e>
2ffe2610:	4a0e      	ldr	r2, [pc, #56]	; (2ffe264c <stm32mp1_syscfg_init+0x8c>)
2ffe2612:	211f      	movs	r1, #31
2ffe2614:	6011      	str	r1, [r2, #0]
2ffe2616:	2c00      	cmp	r4, #0
2ffe2618:	d1f1      	bne.n	2ffe25fe <stm32mp1_syscfg_init+0x3e>
2ffe261a:	480d      	ldr	r0, [pc, #52]	; (2ffe2650 <stm32mp1_syscfg_init+0x90>)
2ffe261c:	e7ed      	b.n	2ffe25fa <stm32mp1_syscfg_init+0x3a>
2ffe261e:	2c00      	cmp	r4, #0
2ffe2620:	d0ed      	beq.n	2ffe25fe <stm32mp1_syscfg_init+0x3e>
2ffe2622:	480c      	ldr	r0, [pc, #48]	; (2ffe2654 <stm32mp1_syscfg_init+0x94>)
2ffe2624:	f7fa fa62 	bl	2ffdcaec <tf_log>
2ffe2628:	480b      	ldr	r0, [pc, #44]	; (2ffe2658 <stm32mp1_syscfg_init+0x98>)
2ffe262a:	f7fa fa5f 	bl	2ffdcaec <tf_log>
2ffe262e:	480b      	ldr	r0, [pc, #44]	; (2ffe265c <stm32mp1_syscfg_init+0x9c>)
2ffe2630:	f7fa fa5c 	bl	2ffdcaec <tf_log>
2ffe2634:	e7d8      	b.n	2ffe25e8 <stm32mp1_syscfg_init+0x28>
2ffe2636:	bf00      	nop
2ffe2638:	5002001c 	.word	0x5002001c
2ffe263c:	50020000 	.word	0x50020000
2ffe2640:	2ffe5858 	.word	0x2ffe5858
2ffe2644:	2ffe6c9c 	.word	0x2ffe6c9c
2ffe2648:	002932e0 	.word	0x002932e0
2ffe264c:	50020018 	.word	0x50020018
2ffe2650:	2ffe6ca9 	.word	0x2ffe6ca9
2ffe2654:	2ffe6cd7 	.word	0x2ffe6cd7
2ffe2658:	2ffe6cee 	.word	0x2ffe6cee
2ffe265c:	2ffe6d0f 	.word	0x2ffe6d0f

2ffe2660 <__aeabi_uldivmod>:
2ffe2660:	e92d4040 	push	{r6, lr}
2ffe2664:	e24dd010 	sub	sp, sp, #16
2ffe2668:	e28d6008 	add	r6, sp, #8
2ffe266c:	e58d6000 	str	r6, [sp]
2ffe2670:	fbffe99a 	blx	2ffdcce2 <__udivmoddi4>
2ffe2674:	e59d2008 	ldr	r2, [sp, #8]
2ffe2678:	e59d300c 	ldr	r3, [sp, #12]
2ffe267c:	e28dd010 	add	sp, sp, #16
2ffe2680:	e8bd8040 	pop	{r6, pc}

2ffe2684 <fdt32_to_cpu>:
2ffe2684:	ba00      	rev	r0, r0
2ffe2686:	4770      	bx	lr

2ffe2688 <fdt_check_header>:
2ffe2688:	b508      	push	{r3, lr}
2ffe268a:	4603      	mov	r3, r0
2ffe268c:	6800      	ldr	r0, [r0, #0]
2ffe268e:	f7ff fff9 	bl	2ffe2684 <fdt32_to_cpu>
2ffe2692:	4a11      	ldr	r2, [pc, #68]	; (2ffe26d8 <fdt_check_header+0x50>)
2ffe2694:	4290      	cmp	r0, r2
2ffe2696:	d10d      	bne.n	2ffe26b4 <fdt_check_header+0x2c>
2ffe2698:	6958      	ldr	r0, [r3, #20]
2ffe269a:	f7ff fff3 	bl	2ffe2684 <fdt32_to_cpu>
2ffe269e:	2801      	cmp	r0, #1
2ffe26a0:	d914      	bls.n	2ffe26cc <fdt_check_header+0x44>
2ffe26a2:	6998      	ldr	r0, [r3, #24]
2ffe26a4:	f7ff ffee 	bl	2ffe2684 <fdt32_to_cpu>
2ffe26a8:	2811      	cmp	r0, #17
2ffe26aa:	bf94      	ite	ls
2ffe26ac:	2000      	movls	r0, #0
2ffe26ae:	f06f 0009 	mvnhi.w	r0, #9
2ffe26b2:	bd08      	pop	{r3, pc}
2ffe26b4:	4a09      	ldr	r2, [pc, #36]	; (2ffe26dc <fdt_check_header+0x54>)
2ffe26b6:	4290      	cmp	r0, r2
2ffe26b8:	d10b      	bne.n	2ffe26d2 <fdt_check_header+0x4a>
2ffe26ba:	6a58      	ldr	r0, [r3, #36]	; 0x24
2ffe26bc:	f7ff ffe2 	bl	2ffe2684 <fdt32_to_cpu>
2ffe26c0:	2800      	cmp	r0, #0
2ffe26c2:	bf14      	ite	ne
2ffe26c4:	2000      	movne	r0, #0
2ffe26c6:	f06f 0006 	mvneq.w	r0, #6
2ffe26ca:	e7f2      	b.n	2ffe26b2 <fdt_check_header+0x2a>
2ffe26cc:	f06f 0009 	mvn.w	r0, #9
2ffe26d0:	e7ef      	b.n	2ffe26b2 <fdt_check_header+0x2a>
2ffe26d2:	f06f 0008 	mvn.w	r0, #8
2ffe26d6:	e7ec      	b.n	2ffe26b2 <fdt_check_header+0x2a>
2ffe26d8:	d00dfeed 	.word	0xd00dfeed
2ffe26dc:	2ff20112 	.word	0x2ff20112

2ffe26e0 <fdt_offset_ptr>:
2ffe26e0:	b538      	push	{r3, r4, r5, lr}
2ffe26e2:	4603      	mov	r3, r0
2ffe26e4:	6880      	ldr	r0, [r0, #8]
2ffe26e6:	f7ff ffcd 	bl	2ffe2684 <fdt32_to_cpu>
2ffe26ea:	1844      	adds	r4, r0, r1
2ffe26ec:	d201      	bcs.n	2ffe26f2 <fdt_offset_ptr+0x12>
2ffe26ee:	18a5      	adds	r5, r4, r2
2ffe26f0:	d301      	bcc.n	2ffe26f6 <fdt_offset_ptr+0x16>
2ffe26f2:	2000      	movs	r0, #0
2ffe26f4:	e011      	b.n	2ffe271a <fdt_offset_ptr+0x3a>
2ffe26f6:	6858      	ldr	r0, [r3, #4]
2ffe26f8:	f7ff ffc4 	bl	2ffe2684 <fdt32_to_cpu>
2ffe26fc:	4285      	cmp	r5, r0
2ffe26fe:	d8f8      	bhi.n	2ffe26f2 <fdt_offset_ptr+0x12>
2ffe2700:	6958      	ldr	r0, [r3, #20]
2ffe2702:	f7ff ffbf 	bl	2ffe2684 <fdt32_to_cpu>
2ffe2706:	2810      	cmp	r0, #16
2ffe2708:	d906      	bls.n	2ffe2718 <fdt_offset_ptr+0x38>
2ffe270a:	1889      	adds	r1, r1, r2
2ffe270c:	d2f1      	bcs.n	2ffe26f2 <fdt_offset_ptr+0x12>
2ffe270e:	6a58      	ldr	r0, [r3, #36]	; 0x24
2ffe2710:	f7ff ffb8 	bl	2ffe2684 <fdt32_to_cpu>
2ffe2714:	4281      	cmp	r1, r0
2ffe2716:	d8ec      	bhi.n	2ffe26f2 <fdt_offset_ptr+0x12>
2ffe2718:	1918      	adds	r0, r3, r4
2ffe271a:	bd38      	pop	{r3, r4, r5, pc}

2ffe271c <fdt_next_tag>:
2ffe271c:	f06f 0307 	mvn.w	r3, #7
2ffe2720:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe2724:	4690      	mov	r8, r2
2ffe2726:	6013      	str	r3, [r2, #0]
2ffe2728:	2204      	movs	r2, #4
2ffe272a:	4606      	mov	r6, r0
2ffe272c:	460f      	mov	r7, r1
2ffe272e:	f7ff ffd7 	bl	2ffe26e0 <fdt_offset_ptr>
2ffe2732:	b908      	cbnz	r0, 2ffe2738 <fdt_next_tag+0x1c>
2ffe2734:	2509      	movs	r5, #9
2ffe2736:	e038      	b.n	2ffe27aa <fdt_next_tag+0x8e>
2ffe2738:	6800      	ldr	r0, [r0, #0]
2ffe273a:	1d3c      	adds	r4, r7, #4
2ffe273c:	f7ff ffa2 	bl	2ffe2684 <fdt32_to_cpu>
2ffe2740:	f06f 030a 	mvn.w	r3, #10
2ffe2744:	4605      	mov	r5, r0
2ffe2746:	f8c8 3000 	str.w	r3, [r8]
2ffe274a:	1e43      	subs	r3, r0, #1
2ffe274c:	2b08      	cmp	r3, #8
2ffe274e:	d8f1      	bhi.n	2ffe2734 <fdt_next_tag+0x18>
2ffe2750:	a201      	add	r2, pc, #4	; (adr r2, 2ffe2758 <fdt_next_tag+0x3c>)
2ffe2752:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
2ffe2756:	bf00      	nop
2ffe2758:	2ffe277d 	.word	0x2ffe277d
2ffe275c:	2ffe2793 	.word	0x2ffe2793
2ffe2760:	2ffe27b1 	.word	0x2ffe27b1
2ffe2764:	2ffe2793 	.word	0x2ffe2793
2ffe2768:	2ffe2735 	.word	0x2ffe2735
2ffe276c:	2ffe2735 	.word	0x2ffe2735
2ffe2770:	2ffe2735 	.word	0x2ffe2735
2ffe2774:	2ffe2735 	.word	0x2ffe2735
2ffe2778:	2ffe2793 	.word	0x2ffe2793
2ffe277c:	4621      	mov	r1, r4
2ffe277e:	2201      	movs	r2, #1
2ffe2780:	4414      	add	r4, r2
2ffe2782:	4630      	mov	r0, r6
2ffe2784:	f7ff ffac 	bl	2ffe26e0 <fdt_offset_ptr>
2ffe2788:	2800      	cmp	r0, #0
2ffe278a:	d0d3      	beq.n	2ffe2734 <fdt_next_tag+0x18>
2ffe278c:	7803      	ldrb	r3, [r0, #0]
2ffe278e:	2b00      	cmp	r3, #0
2ffe2790:	d1f4      	bne.n	2ffe277c <fdt_next_tag+0x60>
2ffe2792:	1be2      	subs	r2, r4, r7
2ffe2794:	4639      	mov	r1, r7
2ffe2796:	4630      	mov	r0, r6
2ffe2798:	f7ff ffa2 	bl	2ffe26e0 <fdt_offset_ptr>
2ffe279c:	2800      	cmp	r0, #0
2ffe279e:	d0c9      	beq.n	2ffe2734 <fdt_next_tag+0x18>
2ffe27a0:	3403      	adds	r4, #3
2ffe27a2:	f024 0403 	bic.w	r4, r4, #3
2ffe27a6:	f8c8 4000 	str.w	r4, [r8]
2ffe27aa:	4628      	mov	r0, r5
2ffe27ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe27b0:	2204      	movs	r2, #4
2ffe27b2:	4621      	mov	r1, r4
2ffe27b4:	4630      	mov	r0, r6
2ffe27b6:	f7ff ff93 	bl	2ffe26e0 <fdt_offset_ptr>
2ffe27ba:	2800      	cmp	r0, #0
2ffe27bc:	d0ba      	beq.n	2ffe2734 <fdt_next_tag+0x18>
2ffe27be:	6800      	ldr	r0, [r0, #0]
2ffe27c0:	f7ff ff60 	bl	2ffe2684 <fdt32_to_cpu>
2ffe27c4:	f107 020c 	add.w	r2, r7, #12
2ffe27c8:	4603      	mov	r3, r0
2ffe27ca:	1884      	adds	r4, r0, r2
2ffe27cc:	6970      	ldr	r0, [r6, #20]
2ffe27ce:	f7ff ff59 	bl	2ffe2684 <fdt32_to_cpu>
2ffe27d2:	280f      	cmp	r0, #15
2ffe27d4:	d8dd      	bhi.n	2ffe2792 <fdt_next_tag+0x76>
2ffe27d6:	2b07      	cmp	r3, #7
2ffe27d8:	d9db      	bls.n	2ffe2792 <fdt_next_tag+0x76>
2ffe27da:	0753      	lsls	r3, r2, #29
2ffe27dc:	bf18      	it	ne
2ffe27de:	3404      	addne	r4, #4
2ffe27e0:	e7d7      	b.n	2ffe2792 <fdt_next_tag+0x76>
2ffe27e2:	bf00      	nop

2ffe27e4 <fdt_check_node_offset_>:
2ffe27e4:	1e0b      	subs	r3, r1, #0
2ffe27e6:	b507      	push	{r0, r1, r2, lr}
2ffe27e8:	9101      	str	r1, [sp, #4]
2ffe27ea:	da04      	bge.n	2ffe27f6 <fdt_check_node_offset_+0x12>
2ffe27ec:	f06f 0003 	mvn.w	r0, #3
2ffe27f0:	b003      	add	sp, #12
2ffe27f2:	f85d fb04 	ldr.w	pc, [sp], #4
2ffe27f6:	079b      	lsls	r3, r3, #30
2ffe27f8:	d1f8      	bne.n	2ffe27ec <fdt_check_node_offset_+0x8>
2ffe27fa:	aa01      	add	r2, sp, #4
2ffe27fc:	f7ff ff8e 	bl	2ffe271c <fdt_next_tag>
2ffe2800:	2801      	cmp	r0, #1
2ffe2802:	d1f3      	bne.n	2ffe27ec <fdt_check_node_offset_+0x8>
2ffe2804:	9801      	ldr	r0, [sp, #4]
2ffe2806:	e7f3      	b.n	2ffe27f0 <fdt_check_node_offset_+0xc>

2ffe2808 <fdt_check_prop_offset_>:
2ffe2808:	1e0b      	subs	r3, r1, #0
2ffe280a:	b507      	push	{r0, r1, r2, lr}
2ffe280c:	9101      	str	r1, [sp, #4]
2ffe280e:	da04      	bge.n	2ffe281a <fdt_check_prop_offset_+0x12>
2ffe2810:	f06f 0003 	mvn.w	r0, #3
2ffe2814:	b003      	add	sp, #12
2ffe2816:	f85d fb04 	ldr.w	pc, [sp], #4
2ffe281a:	079b      	lsls	r3, r3, #30
2ffe281c:	d1f8      	bne.n	2ffe2810 <fdt_check_prop_offset_+0x8>
2ffe281e:	aa01      	add	r2, sp, #4
2ffe2820:	f7ff ff7c 	bl	2ffe271c <fdt_next_tag>
2ffe2824:	2803      	cmp	r0, #3
2ffe2826:	d1f3      	bne.n	2ffe2810 <fdt_check_prop_offset_+0x8>
2ffe2828:	9801      	ldr	r0, [sp, #4]
2ffe282a:	e7f3      	b.n	2ffe2814 <fdt_check_prop_offset_+0xc>

2ffe282c <fdt_next_node>:
2ffe282c:	2300      	movs	r3, #0
2ffe282e:	4299      	cmp	r1, r3
2ffe2830:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffe2832:	4606      	mov	r6, r0
2ffe2834:	9301      	str	r3, [sp, #4]
2ffe2836:	4615      	mov	r5, r2
2ffe2838:	db05      	blt.n	2ffe2846 <fdt_next_node+0x1a>
2ffe283a:	f7ff ffd3 	bl	2ffe27e4 <fdt_check_node_offset_>
2ffe283e:	9001      	str	r0, [sp, #4]
2ffe2840:	2800      	cmp	r0, #0
2ffe2842:	4604      	mov	r4, r0
2ffe2844:	db0f      	blt.n	2ffe2866 <fdt_next_node+0x3a>
2ffe2846:	9c01      	ldr	r4, [sp, #4]
2ffe2848:	aa01      	add	r2, sp, #4
2ffe284a:	4630      	mov	r0, r6
2ffe284c:	4621      	mov	r1, r4
2ffe284e:	f7ff ff65 	bl	2ffe271c <fdt_next_tag>
2ffe2852:	2802      	cmp	r0, #2
2ffe2854:	d00a      	beq.n	2ffe286c <fdt_next_node+0x40>
2ffe2856:	2809      	cmp	r0, #9
2ffe2858:	d011      	beq.n	2ffe287e <fdt_next_node+0x52>
2ffe285a:	2801      	cmp	r0, #1
2ffe285c:	d1f3      	bne.n	2ffe2846 <fdt_next_node+0x1a>
2ffe285e:	b115      	cbz	r5, 2ffe2866 <fdt_next_node+0x3a>
2ffe2860:	682b      	ldr	r3, [r5, #0]
2ffe2862:	3301      	adds	r3, #1
2ffe2864:	602b      	str	r3, [r5, #0]
2ffe2866:	4620      	mov	r0, r4
2ffe2868:	b002      	add	sp, #8
2ffe286a:	bd70      	pop	{r4, r5, r6, pc}
2ffe286c:	2d00      	cmp	r5, #0
2ffe286e:	d0ea      	beq.n	2ffe2846 <fdt_next_node+0x1a>
2ffe2870:	682b      	ldr	r3, [r5, #0]
2ffe2872:	3b01      	subs	r3, #1
2ffe2874:	602b      	str	r3, [r5, #0]
2ffe2876:	2b00      	cmp	r3, #0
2ffe2878:	dae5      	bge.n	2ffe2846 <fdt_next_node+0x1a>
2ffe287a:	9c01      	ldr	r4, [sp, #4]
2ffe287c:	e7f3      	b.n	2ffe2866 <fdt_next_node+0x3a>
2ffe287e:	9c01      	ldr	r4, [sp, #4]
2ffe2880:	2c00      	cmp	r4, #0
2ffe2882:	da07      	bge.n	2ffe2894 <fdt_next_node+0x68>
2ffe2884:	f114 0f08 	cmn.w	r4, #8
2ffe2888:	d1ed      	bne.n	2ffe2866 <fdt_next_node+0x3a>
2ffe288a:	2d00      	cmp	r5, #0
2ffe288c:	bf08      	it	eq
2ffe288e:	f04f 34ff 	moveq.w	r4, #4294967295	; 0xffffffff
2ffe2892:	e7e8      	b.n	2ffe2866 <fdt_next_node+0x3a>
2ffe2894:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffe2898:	e7e5      	b.n	2ffe2866 <fdt_next_node+0x3a>

2ffe289a <fdt_first_subnode>:
2ffe289a:	b507      	push	{r0, r1, r2, lr}
2ffe289c:	2300      	movs	r3, #0
2ffe289e:	9301      	str	r3, [sp, #4]
2ffe28a0:	aa01      	add	r2, sp, #4
2ffe28a2:	f7ff ffc3 	bl	2ffe282c <fdt_next_node>
2ffe28a6:	2800      	cmp	r0, #0
2ffe28a8:	db07      	blt.n	2ffe28ba <fdt_first_subnode+0x20>
2ffe28aa:	9b01      	ldr	r3, [sp, #4]
2ffe28ac:	2b01      	cmp	r3, #1
2ffe28ae:	bf18      	it	ne
2ffe28b0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
2ffe28b4:	b003      	add	sp, #12
2ffe28b6:	f85d fb04 	ldr.w	pc, [sp], #4
2ffe28ba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe28be:	e7f9      	b.n	2ffe28b4 <fdt_first_subnode+0x1a>

2ffe28c0 <fdt_next_subnode>:
2ffe28c0:	b513      	push	{r0, r1, r4, lr}
2ffe28c2:	4604      	mov	r4, r0
2ffe28c4:	2301      	movs	r3, #1
2ffe28c6:	9301      	str	r3, [sp, #4]
2ffe28c8:	aa01      	add	r2, sp, #4
2ffe28ca:	4620      	mov	r0, r4
2ffe28cc:	f7ff ffae 	bl	2ffe282c <fdt_next_node>
2ffe28d0:	1e01      	subs	r1, r0, #0
2ffe28d2:	db07      	blt.n	2ffe28e4 <fdt_next_subnode+0x24>
2ffe28d4:	9b01      	ldr	r3, [sp, #4]
2ffe28d6:	2b00      	cmp	r3, #0
2ffe28d8:	dd04      	ble.n	2ffe28e4 <fdt_next_subnode+0x24>
2ffe28da:	2b01      	cmp	r3, #1
2ffe28dc:	d1f4      	bne.n	2ffe28c8 <fdt_next_subnode+0x8>
2ffe28de:	4608      	mov	r0, r1
2ffe28e0:	b002      	add	sp, #8
2ffe28e2:	bd10      	pop	{r4, pc}
2ffe28e4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffe28e8:	e7f9      	b.n	2ffe28de <fdt_next_subnode+0x1e>
	...

2ffe28ec <fdt_address_cells>:
2ffe28ec:	b507      	push	{r0, r1, r2, lr}
2ffe28ee:	ab01      	add	r3, sp, #4
2ffe28f0:	4a0f      	ldr	r2, [pc, #60]	; (2ffe2930 <fdt_address_cells+0x44>)
2ffe28f2:	f000 f972 	bl	2ffe2bda <fdt_getprop>
2ffe28f6:	b1b0      	cbz	r0, 2ffe2926 <fdt_address_cells+0x3a>
2ffe28f8:	9b01      	ldr	r3, [sp, #4]
2ffe28fa:	2b04      	cmp	r3, #4
2ffe28fc:	d115      	bne.n	2ffe292a <fdt_address_cells+0x3e>
2ffe28fe:	6803      	ldr	r3, [r0, #0]
2ffe2900:	0e18      	lsrs	r0, r3, #24
2ffe2902:	f3c3 2207 	ubfx	r2, r3, #8, #8
2ffe2906:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
2ffe290a:	f3c3 4307 	ubfx	r3, r3, #16, #8
2ffe290e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
2ffe2912:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
2ffe2916:	1e43      	subs	r3, r0, #1
2ffe2918:	2b04      	cmp	r3, #4
2ffe291a:	bf28      	it	cs
2ffe291c:	f06f 000d 	mvncs.w	r0, #13
2ffe2920:	b003      	add	sp, #12
2ffe2922:	f85d fb04 	ldr.w	pc, [sp], #4
2ffe2926:	2002      	movs	r0, #2
2ffe2928:	e7fa      	b.n	2ffe2920 <fdt_address_cells+0x34>
2ffe292a:	f06f 000d 	mvn.w	r0, #13
2ffe292e:	e7f7      	b.n	2ffe2920 <fdt_address_cells+0x34>
2ffe2930:	2ffe6e8b 	.word	0x2ffe6e8b

2ffe2934 <fdt_size_cells>:
2ffe2934:	b507      	push	{r0, r1, r2, lr}
2ffe2936:	ab01      	add	r3, sp, #4
2ffe2938:	4a0f      	ldr	r2, [pc, #60]	; (2ffe2978 <fdt_size_cells+0x44>)
2ffe293a:	f000 f94e 	bl	2ffe2bda <fdt_getprop>
2ffe293e:	b1a8      	cbz	r0, 2ffe296c <fdt_size_cells+0x38>
2ffe2940:	9b01      	ldr	r3, [sp, #4]
2ffe2942:	2b04      	cmp	r3, #4
2ffe2944:	d114      	bne.n	2ffe2970 <fdt_size_cells+0x3c>
2ffe2946:	6803      	ldr	r3, [r0, #0]
2ffe2948:	0e18      	lsrs	r0, r3, #24
2ffe294a:	f3c3 2207 	ubfx	r2, r3, #8, #8
2ffe294e:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
2ffe2952:	f3c3 4307 	ubfx	r3, r3, #16, #8
2ffe2956:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
2ffe295a:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
2ffe295e:	2805      	cmp	r0, #5
2ffe2960:	bf28      	it	cs
2ffe2962:	f06f 000d 	mvncs.w	r0, #13
2ffe2966:	b003      	add	sp, #12
2ffe2968:	f85d fb04 	ldr.w	pc, [sp], #4
2ffe296c:	2002      	movs	r0, #2
2ffe296e:	e7fa      	b.n	2ffe2966 <fdt_size_cells+0x32>
2ffe2970:	f06f 000d 	mvn.w	r0, #13
2ffe2974:	e7f7      	b.n	2ffe2966 <fdt_size_cells+0x32>
2ffe2976:	bf00      	nop
2ffe2978:	2ffe6e9a 	.word	0x2ffe6e9a

2ffe297c <fdt32_to_cpu>:
2ffe297c:	ba00      	rev	r0, r0
2ffe297e:	4770      	bx	lr

2ffe2980 <nextprop_>:
2ffe2980:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffe2982:	4605      	mov	r5, r0
2ffe2984:	460c      	mov	r4, r1
2ffe2986:	aa01      	add	r2, sp, #4
2ffe2988:	4621      	mov	r1, r4
2ffe298a:	4628      	mov	r0, r5
2ffe298c:	f7ff fec6 	bl	2ffe271c <fdt_next_tag>
2ffe2990:	2803      	cmp	r0, #3
2ffe2992:	d006      	beq.n	2ffe29a2 <nextprop_+0x22>
2ffe2994:	9c01      	ldr	r4, [sp, #4]
2ffe2996:	2809      	cmp	r0, #9
2ffe2998:	d106      	bne.n	2ffe29a8 <nextprop_+0x28>
2ffe299a:	2c00      	cmp	r4, #0
2ffe299c:	bfa8      	it	ge
2ffe299e:	f06f 040a 	mvnge.w	r4, #10
2ffe29a2:	4620      	mov	r0, r4
2ffe29a4:	b003      	add	sp, #12
2ffe29a6:	bd30      	pop	{r4, r5, pc}
2ffe29a8:	2804      	cmp	r0, #4
2ffe29aa:	d0ec      	beq.n	2ffe2986 <nextprop_+0x6>
2ffe29ac:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffe29b0:	e7f7      	b.n	2ffe29a2 <nextprop_+0x22>

2ffe29b2 <fdt_get_property_by_offset_>:
2ffe29b2:	b570      	push	{r4, r5, r6, lr}
2ffe29b4:	4604      	mov	r4, r0
2ffe29b6:	460e      	mov	r6, r1
2ffe29b8:	4615      	mov	r5, r2
2ffe29ba:	f7ff ff25 	bl	2ffe2808 <fdt_check_prop_offset_>
2ffe29be:	2800      	cmp	r0, #0
2ffe29c0:	da04      	bge.n	2ffe29cc <fdt_get_property_by_offset_+0x1a>
2ffe29c2:	b17d      	cbz	r5, 2ffe29e4 <fdt_get_property_by_offset_+0x32>
2ffe29c4:	6028      	str	r0, [r5, #0]
2ffe29c6:	2100      	movs	r1, #0
2ffe29c8:	4608      	mov	r0, r1
2ffe29ca:	bd70      	pop	{r4, r5, r6, pc}
2ffe29cc:	68a0      	ldr	r0, [r4, #8]
2ffe29ce:	f7ff ffd5 	bl	2ffe297c <fdt32_to_cpu>
2ffe29d2:	1831      	adds	r1, r6, r0
2ffe29d4:	4421      	add	r1, r4
2ffe29d6:	2d00      	cmp	r5, #0
2ffe29d8:	d0f6      	beq.n	2ffe29c8 <fdt_get_property_by_offset_+0x16>
2ffe29da:	6848      	ldr	r0, [r1, #4]
2ffe29dc:	f7ff ffce 	bl	2ffe297c <fdt32_to_cpu>
2ffe29e0:	6028      	str	r0, [r5, #0]
2ffe29e2:	e7f1      	b.n	2ffe29c8 <fdt_get_property_by_offset_+0x16>
2ffe29e4:	4629      	mov	r1, r5
2ffe29e6:	e7ef      	b.n	2ffe29c8 <fdt_get_property_by_offset_+0x16>

2ffe29e8 <fdt_string>:
2ffe29e8:	b508      	push	{r3, lr}
2ffe29ea:	4603      	mov	r3, r0
2ffe29ec:	68c0      	ldr	r0, [r0, #12]
2ffe29ee:	f7ff ffc5 	bl	2ffe297c <fdt32_to_cpu>
2ffe29f2:	4408      	add	r0, r1
2ffe29f4:	4418      	add	r0, r3
2ffe29f6:	bd08      	pop	{r3, pc}

2ffe29f8 <fdt_get_name>:
2ffe29f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffe29fa:	4606      	mov	r6, r0
2ffe29fc:	6887      	ldr	r7, [r0, #8]
2ffe29fe:	460c      	mov	r4, r1
2ffe2a00:	4615      	mov	r5, r2
2ffe2a02:	f7ff fe41 	bl	2ffe2688 <fdt_check_header>
2ffe2a06:	bb00      	cbnz	r0, 2ffe2a4a <fdt_get_name+0x52>
2ffe2a08:	4621      	mov	r1, r4
2ffe2a0a:	4630      	mov	r0, r6
2ffe2a0c:	f7ff feea 	bl	2ffe27e4 <fdt_check_node_offset_>
2ffe2a10:	2800      	cmp	r0, #0
2ffe2a12:	db1a      	blt.n	2ffe2a4a <fdt_get_name+0x52>
2ffe2a14:	4638      	mov	r0, r7
2ffe2a16:	f7ff ffb1 	bl	2ffe297c <fdt32_to_cpu>
2ffe2a1a:	4404      	add	r4, r0
2ffe2a1c:	6970      	ldr	r0, [r6, #20]
2ffe2a1e:	4434      	add	r4, r6
2ffe2a20:	f7ff ffac 	bl	2ffe297c <fdt32_to_cpu>
2ffe2a24:	280f      	cmp	r0, #15
2ffe2a26:	f104 0404 	add.w	r4, r4, #4
2ffe2a2a:	d805      	bhi.n	2ffe2a38 <fdt_get_name+0x40>
2ffe2a2c:	212f      	movs	r1, #47	; 0x2f
2ffe2a2e:	4620      	mov	r0, r4
2ffe2a30:	f000 fcbd 	bl	2ffe33ae <strrchr>
2ffe2a34:	b138      	cbz	r0, 2ffe2a46 <fdt_get_name+0x4e>
2ffe2a36:	1c44      	adds	r4, r0, #1
2ffe2a38:	b11d      	cbz	r5, 2ffe2a42 <fdt_get_name+0x4a>
2ffe2a3a:	4620      	mov	r0, r4
2ffe2a3c:	f000 fc91 	bl	2ffe3362 <strlen>
2ffe2a40:	6028      	str	r0, [r5, #0]
2ffe2a42:	4620      	mov	r0, r4
2ffe2a44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffe2a46:	f06f 000a 	mvn.w	r0, #10
2ffe2a4a:	b115      	cbz	r5, 2ffe2a52 <fdt_get_name+0x5a>
2ffe2a4c:	6028      	str	r0, [r5, #0]
2ffe2a4e:	2400      	movs	r4, #0
2ffe2a50:	e7f7      	b.n	2ffe2a42 <fdt_get_name+0x4a>
2ffe2a52:	462c      	mov	r4, r5
2ffe2a54:	e7f5      	b.n	2ffe2a42 <fdt_get_name+0x4a>

2ffe2a56 <fdt_subnode_offset_namelen>:
2ffe2a56:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffe2a5a:	4607      	mov	r7, r0
2ffe2a5c:	460e      	mov	r6, r1
2ffe2a5e:	4690      	mov	r8, r2
2ffe2a60:	461d      	mov	r5, r3
2ffe2a62:	f7ff fe11 	bl	2ffe2688 <fdt_check_header>
2ffe2a66:	4604      	mov	r4, r0
2ffe2a68:	b940      	cbnz	r0, 2ffe2a7c <fdt_subnode_offset_namelen+0x26>
2ffe2a6a:	9000      	str	r0, [sp, #0]
2ffe2a6c:	4634      	mov	r4, r6
2ffe2a6e:	9b00      	ldr	r3, [sp, #0]
2ffe2a70:	2c00      	cmp	r4, #0
2ffe2a72:	db2b      	blt.n	2ffe2acc <fdt_subnode_offset_namelen+0x76>
2ffe2a74:	2b00      	cmp	r3, #0
2ffe2a76:	da05      	bge.n	2ffe2a84 <fdt_subnode_offset_namelen+0x2e>
2ffe2a78:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffe2a7c:	4620      	mov	r0, r4
2ffe2a7e:	b002      	add	sp, #8
2ffe2a80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe2a84:	2b01      	cmp	r3, #1
2ffe2a86:	d11a      	bne.n	2ffe2abe <fdt_subnode_offset_namelen+0x68>
2ffe2a88:	aa01      	add	r2, sp, #4
2ffe2a8a:	4621      	mov	r1, r4
2ffe2a8c:	4638      	mov	r0, r7
2ffe2a8e:	f7ff ffb3 	bl	2ffe29f8 <fdt_get_name>
2ffe2a92:	4606      	mov	r6, r0
2ffe2a94:	b198      	cbz	r0, 2ffe2abe <fdt_subnode_offset_namelen+0x68>
2ffe2a96:	9b01      	ldr	r3, [sp, #4]
2ffe2a98:	429d      	cmp	r5, r3
2ffe2a9a:	dc10      	bgt.n	2ffe2abe <fdt_subnode_offset_namelen+0x68>
2ffe2a9c:	462a      	mov	r2, r5
2ffe2a9e:	4641      	mov	r1, r8
2ffe2aa0:	f000 fa52 	bl	2ffe2f48 <memcmp>
2ffe2aa4:	b958      	cbnz	r0, 2ffe2abe <fdt_subnode_offset_namelen+0x68>
2ffe2aa6:	5d73      	ldrb	r3, [r6, r5]
2ffe2aa8:	2b00      	cmp	r3, #0
2ffe2aaa:	d0e7      	beq.n	2ffe2a7c <fdt_subnode_offset_namelen+0x26>
2ffe2aac:	462a      	mov	r2, r5
2ffe2aae:	2140      	movs	r1, #64	; 0x40
2ffe2ab0:	4640      	mov	r0, r8
2ffe2ab2:	f000 fa3b 	bl	2ffe2f2c <memchr>
2ffe2ab6:	b910      	cbnz	r0, 2ffe2abe <fdt_subnode_offset_namelen+0x68>
2ffe2ab8:	5d73      	ldrb	r3, [r6, r5]
2ffe2aba:	2b40      	cmp	r3, #64	; 0x40
2ffe2abc:	d0de      	beq.n	2ffe2a7c <fdt_subnode_offset_namelen+0x26>
2ffe2abe:	4621      	mov	r1, r4
2ffe2ac0:	466a      	mov	r2, sp
2ffe2ac2:	4638      	mov	r0, r7
2ffe2ac4:	f7ff feb2 	bl	2ffe282c <fdt_next_node>
2ffe2ac8:	4604      	mov	r4, r0
2ffe2aca:	e7d0      	b.n	2ffe2a6e <fdt_subnode_offset_namelen+0x18>
2ffe2acc:	2b00      	cmp	r3, #0
2ffe2ace:	bfb8      	it	lt
2ffe2ad0:	f04f 34ff 	movlt.w	r4, #4294967295	; 0xffffffff
2ffe2ad4:	e7d2      	b.n	2ffe2a7c <fdt_subnode_offset_namelen+0x26>

2ffe2ad6 <fdt_subnode_offset>:
2ffe2ad6:	b570      	push	{r4, r5, r6, lr}
2ffe2ad8:	4605      	mov	r5, r0
2ffe2ada:	4610      	mov	r0, r2
2ffe2adc:	460e      	mov	r6, r1
2ffe2ade:	4614      	mov	r4, r2
2ffe2ae0:	f000 fc3f 	bl	2ffe3362 <strlen>
2ffe2ae4:	4603      	mov	r3, r0
2ffe2ae6:	4622      	mov	r2, r4
2ffe2ae8:	4631      	mov	r1, r6
2ffe2aea:	4628      	mov	r0, r5
2ffe2aec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffe2af0:	f7ff bfb1 	b.w	2ffe2a56 <fdt_subnode_offset_namelen>

2ffe2af4 <fdt_first_property_offset>:
2ffe2af4:	b510      	push	{r4, lr}
2ffe2af6:	4604      	mov	r4, r0
2ffe2af8:	f7ff fe74 	bl	2ffe27e4 <fdt_check_node_offset_>
2ffe2afc:	1e01      	subs	r1, r0, #0
2ffe2afe:	db04      	blt.n	2ffe2b0a <fdt_first_property_offset+0x16>
2ffe2b00:	4620      	mov	r0, r4
2ffe2b02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe2b06:	f7ff bf3b 	b.w	2ffe2980 <nextprop_>
2ffe2b0a:	bd10      	pop	{r4, pc}

2ffe2b0c <fdt_next_property_offset>:
2ffe2b0c:	b510      	push	{r4, lr}
2ffe2b0e:	4604      	mov	r4, r0
2ffe2b10:	f7ff fe7a 	bl	2ffe2808 <fdt_check_prop_offset_>
2ffe2b14:	1e01      	subs	r1, r0, #0
2ffe2b16:	db04      	blt.n	2ffe2b22 <fdt_next_property_offset+0x16>
2ffe2b18:	4620      	mov	r0, r4
2ffe2b1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffe2b1e:	f7ff bf2f 	b.w	2ffe2980 <nextprop_>
2ffe2b22:	bd10      	pop	{r4, pc}

2ffe2b24 <fdt_get_property_namelen_>:
2ffe2b24:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe2b28:	4606      	mov	r6, r0
2ffe2b2a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
2ffe2b2c:	4691      	mov	r9, r2
2ffe2b2e:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
2ffe2b32:	4698      	mov	r8, r3
2ffe2b34:	f7ff ffde 	bl	2ffe2af4 <fdt_first_property_offset>
2ffe2b38:	2800      	cmp	r0, #0
2ffe2b3a:	4604      	mov	r4, r0
2ffe2b3c:	da03      	bge.n	2ffe2b46 <fdt_get_property_namelen_+0x22>
2ffe2b3e:	b35f      	cbz	r7, 2ffe2b98 <fdt_get_property_namelen_+0x74>
2ffe2b40:	603c      	str	r4, [r7, #0]
2ffe2b42:	2500      	movs	r5, #0
2ffe2b44:	e01d      	b.n	2ffe2b82 <fdt_get_property_namelen_+0x5e>
2ffe2b46:	463a      	mov	r2, r7
2ffe2b48:	4621      	mov	r1, r4
2ffe2b4a:	4630      	mov	r0, r6
2ffe2b4c:	f7ff ff31 	bl	2ffe29b2 <fdt_get_property_by_offset_>
2ffe2b50:	4605      	mov	r5, r0
2ffe2b52:	b1f0      	cbz	r0, 2ffe2b92 <fdt_get_property_namelen_+0x6e>
2ffe2b54:	6880      	ldr	r0, [r0, #8]
2ffe2b56:	f7ff ff11 	bl	2ffe297c <fdt32_to_cpu>
2ffe2b5a:	4601      	mov	r1, r0
2ffe2b5c:	4630      	mov	r0, r6
2ffe2b5e:	f7ff ff43 	bl	2ffe29e8 <fdt_string>
2ffe2b62:	4682      	mov	sl, r0
2ffe2b64:	f000 fbfd 	bl	2ffe3362 <strlen>
2ffe2b68:	4540      	cmp	r0, r8
2ffe2b6a:	d10d      	bne.n	2ffe2b88 <fdt_get_property_namelen_+0x64>
2ffe2b6c:	4642      	mov	r2, r8
2ffe2b6e:	4649      	mov	r1, r9
2ffe2b70:	4650      	mov	r0, sl
2ffe2b72:	f000 f9e9 	bl	2ffe2f48 <memcmp>
2ffe2b76:	b938      	cbnz	r0, 2ffe2b88 <fdt_get_property_namelen_+0x64>
2ffe2b78:	f1bb 0f00 	cmp.w	fp, #0
2ffe2b7c:	d001      	beq.n	2ffe2b82 <fdt_get_property_namelen_+0x5e>
2ffe2b7e:	f8cb 4000 	str.w	r4, [fp]
2ffe2b82:	4628      	mov	r0, r5
2ffe2b84:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe2b88:	4621      	mov	r1, r4
2ffe2b8a:	4630      	mov	r0, r6
2ffe2b8c:	f7ff ffbe 	bl	2ffe2b0c <fdt_next_property_offset>
2ffe2b90:	e7d2      	b.n	2ffe2b38 <fdt_get_property_namelen_+0x14>
2ffe2b92:	f06f 040c 	mvn.w	r4, #12
2ffe2b96:	e7d2      	b.n	2ffe2b3e <fdt_get_property_namelen_+0x1a>
2ffe2b98:	463d      	mov	r5, r7
2ffe2b9a:	e7f2      	b.n	2ffe2b82 <fdt_get_property_namelen_+0x5e>

2ffe2b9c <fdt_getprop_namelen>:
2ffe2b9c:	b530      	push	{r4, r5, lr}
2ffe2b9e:	b085      	sub	sp, #20
2ffe2ba0:	ad03      	add	r5, sp, #12
2ffe2ba2:	4604      	mov	r4, r0
2ffe2ba4:	9501      	str	r5, [sp, #4]
2ffe2ba6:	9d08      	ldr	r5, [sp, #32]
2ffe2ba8:	9500      	str	r5, [sp, #0]
2ffe2baa:	f7ff ffbb 	bl	2ffe2b24 <fdt_get_property_namelen_>
2ffe2bae:	4603      	mov	r3, r0
2ffe2bb0:	b170      	cbz	r0, 2ffe2bd0 <fdt_getprop_namelen+0x34>
2ffe2bb2:	6960      	ldr	r0, [r4, #20]
2ffe2bb4:	f7ff fee2 	bl	2ffe297c <fdt32_to_cpu>
2ffe2bb8:	280f      	cmp	r0, #15
2ffe2bba:	d80c      	bhi.n	2ffe2bd6 <fdt_getprop_namelen+0x3a>
2ffe2bbc:	9a03      	ldr	r2, [sp, #12]
2ffe2bbe:	320c      	adds	r2, #12
2ffe2bc0:	0752      	lsls	r2, r2, #29
2ffe2bc2:	d008      	beq.n	2ffe2bd6 <fdt_getprop_namelen+0x3a>
2ffe2bc4:	6858      	ldr	r0, [r3, #4]
2ffe2bc6:	f7ff fed9 	bl	2ffe297c <fdt32_to_cpu>
2ffe2bca:	2807      	cmp	r0, #7
2ffe2bcc:	d903      	bls.n	2ffe2bd6 <fdt_getprop_namelen+0x3a>
2ffe2bce:	3310      	adds	r3, #16
2ffe2bd0:	4618      	mov	r0, r3
2ffe2bd2:	b005      	add	sp, #20
2ffe2bd4:	bd30      	pop	{r4, r5, pc}
2ffe2bd6:	330c      	adds	r3, #12
2ffe2bd8:	e7fa      	b.n	2ffe2bd0 <fdt_getprop_namelen+0x34>

2ffe2bda <fdt_getprop>:
2ffe2bda:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2ffe2bdc:	4605      	mov	r5, r0
2ffe2bde:	4610      	mov	r0, r2
2ffe2be0:	461f      	mov	r7, r3
2ffe2be2:	460e      	mov	r6, r1
2ffe2be4:	4614      	mov	r4, r2
2ffe2be6:	f000 fbbc 	bl	2ffe3362 <strlen>
2ffe2bea:	9700      	str	r7, [sp, #0]
2ffe2bec:	4603      	mov	r3, r0
2ffe2bee:	4622      	mov	r2, r4
2ffe2bf0:	4631      	mov	r1, r6
2ffe2bf2:	4628      	mov	r0, r5
2ffe2bf4:	f7ff ffd2 	bl	2ffe2b9c <fdt_getprop_namelen>
2ffe2bf8:	b003      	add	sp, #12
2ffe2bfa:	bdf0      	pop	{r4, r5, r6, r7, pc}

2ffe2bfc <fdt_get_phandle>:
2ffe2bfc:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffe2bfe:	ab01      	add	r3, sp, #4
2ffe2c00:	4a0d      	ldr	r2, [pc, #52]	; (2ffe2c38 <fdt_get_phandle+0x3c>)
2ffe2c02:	4604      	mov	r4, r0
2ffe2c04:	460d      	mov	r5, r1
2ffe2c06:	f7ff ffe8 	bl	2ffe2bda <fdt_getprop>
2ffe2c0a:	b110      	cbz	r0, 2ffe2c12 <fdt_get_phandle+0x16>
2ffe2c0c:	9b01      	ldr	r3, [sp, #4]
2ffe2c0e:	2b04      	cmp	r3, #4
2ffe2c10:	d009      	beq.n	2ffe2c26 <fdt_get_phandle+0x2a>
2ffe2c12:	4a0a      	ldr	r2, [pc, #40]	; (2ffe2c3c <fdt_get_phandle+0x40>)
2ffe2c14:	ab01      	add	r3, sp, #4
2ffe2c16:	4629      	mov	r1, r5
2ffe2c18:	4620      	mov	r0, r4
2ffe2c1a:	f7ff ffde 	bl	2ffe2bda <fdt_getprop>
2ffe2c1e:	b140      	cbz	r0, 2ffe2c32 <fdt_get_phandle+0x36>
2ffe2c20:	9b01      	ldr	r3, [sp, #4]
2ffe2c22:	2b04      	cmp	r3, #4
2ffe2c24:	d105      	bne.n	2ffe2c32 <fdt_get_phandle+0x36>
2ffe2c26:	6800      	ldr	r0, [r0, #0]
2ffe2c28:	b003      	add	sp, #12
2ffe2c2a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2ffe2c2e:	f7ff bea5 	b.w	2ffe297c <fdt32_to_cpu>
2ffe2c32:	2000      	movs	r0, #0
2ffe2c34:	b003      	add	sp, #12
2ffe2c36:	bd30      	pop	{r4, r5, pc}
2ffe2c38:	2ffe6eac 	.word	0x2ffe6eac
2ffe2c3c:	2ffe6ea6 	.word	0x2ffe6ea6

2ffe2c40 <fdt_get_alias_namelen>:
2ffe2c40:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffe2c42:	460d      	mov	r5, r1
2ffe2c44:	4908      	ldr	r1, [pc, #32]	; (2ffe2c68 <fdt_get_alias_namelen+0x28>)
2ffe2c46:	4604      	mov	r4, r0
2ffe2c48:	4616      	mov	r6, r2
2ffe2c4a:	f000 f858 	bl	2ffe2cfe <fdt_path_offset>
2ffe2c4e:	1e01      	subs	r1, r0, #0
2ffe2c50:	f04f 0000 	mov.w	r0, #0
2ffe2c54:	db05      	blt.n	2ffe2c62 <fdt_get_alias_namelen+0x22>
2ffe2c56:	9000      	str	r0, [sp, #0]
2ffe2c58:	4633      	mov	r3, r6
2ffe2c5a:	462a      	mov	r2, r5
2ffe2c5c:	4620      	mov	r0, r4
2ffe2c5e:	f7ff ff9d 	bl	2ffe2b9c <fdt_getprop_namelen>
2ffe2c62:	b002      	add	sp, #8
2ffe2c64:	bd70      	pop	{r4, r5, r6, pc}
2ffe2c66:	bf00      	nop
2ffe2c68:	2ffe6eb4 	.word	0x2ffe6eb4

2ffe2c6c <fdt_path_offset_namelen>:
2ffe2c6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe2c70:	4607      	mov	r7, r0
2ffe2c72:	460c      	mov	r4, r1
2ffe2c74:	4690      	mov	r8, r2
2ffe2c76:	f7ff fd07 	bl	2ffe2688 <fdt_check_header>
2ffe2c7a:	4605      	mov	r5, r0
2ffe2c7c:	2800      	cmp	r0, #0
2ffe2c7e:	d138      	bne.n	2ffe2cf2 <fdt_path_offset_namelen+0x86>
2ffe2c80:	7823      	ldrb	r3, [r4, #0]
2ffe2c82:	eb04 0608 	add.w	r6, r4, r8
2ffe2c86:	2b2f      	cmp	r3, #47	; 0x2f
2ffe2c88:	d015      	beq.n	2ffe2cb6 <fdt_path_offset_namelen+0x4a>
2ffe2c8a:	4642      	mov	r2, r8
2ffe2c8c:	212f      	movs	r1, #47	; 0x2f
2ffe2c8e:	4620      	mov	r0, r4
2ffe2c90:	f000 f94c 	bl	2ffe2f2c <memchr>
2ffe2c94:	2800      	cmp	r0, #0
2ffe2c96:	bf14      	ite	ne
2ffe2c98:	4680      	movne	r8, r0
2ffe2c9a:	46b0      	moveq	r8, r6
2ffe2c9c:	4621      	mov	r1, r4
2ffe2c9e:	eba8 0204 	sub.w	r2, r8, r4
2ffe2ca2:	4638      	mov	r0, r7
2ffe2ca4:	f7ff ffcc 	bl	2ffe2c40 <fdt_get_alias_namelen>
2ffe2ca8:	4601      	mov	r1, r0
2ffe2caa:	b328      	cbz	r0, 2ffe2cf8 <fdt_path_offset_namelen+0x8c>
2ffe2cac:	4638      	mov	r0, r7
2ffe2cae:	4644      	mov	r4, r8
2ffe2cb0:	f000 f825 	bl	2ffe2cfe <fdt_path_offset>
2ffe2cb4:	4605      	mov	r5, r0
2ffe2cb6:	42b4      	cmp	r4, r6
2ffe2cb8:	d302      	bcc.n	2ffe2cc0 <fdt_path_offset_namelen+0x54>
2ffe2cba:	e01a      	b.n	2ffe2cf2 <fdt_path_offset_namelen+0x86>
2ffe2cbc:	42a6      	cmp	r6, r4
2ffe2cbe:	d018      	beq.n	2ffe2cf2 <fdt_path_offset_namelen+0x86>
2ffe2cc0:	46a0      	mov	r8, r4
2ffe2cc2:	3401      	adds	r4, #1
2ffe2cc4:	f898 3000 	ldrb.w	r3, [r8]
2ffe2cc8:	2b2f      	cmp	r3, #47	; 0x2f
2ffe2cca:	d0f7      	beq.n	2ffe2cbc <fdt_path_offset_namelen+0x50>
2ffe2ccc:	eba6 0208 	sub.w	r2, r6, r8
2ffe2cd0:	212f      	movs	r1, #47	; 0x2f
2ffe2cd2:	4640      	mov	r0, r8
2ffe2cd4:	f000 f92a 	bl	2ffe2f2c <memchr>
2ffe2cd8:	2800      	cmp	r0, #0
2ffe2cda:	bf14      	ite	ne
2ffe2cdc:	4604      	movne	r4, r0
2ffe2cde:	4634      	moveq	r4, r6
2ffe2ce0:	4629      	mov	r1, r5
2ffe2ce2:	eba4 0308 	sub.w	r3, r4, r8
2ffe2ce6:	4642      	mov	r2, r8
2ffe2ce8:	4638      	mov	r0, r7
2ffe2cea:	f7ff feb4 	bl	2ffe2a56 <fdt_subnode_offset_namelen>
2ffe2cee:	1e05      	subs	r5, r0, #0
2ffe2cf0:	dae1      	bge.n	2ffe2cb6 <fdt_path_offset_namelen+0x4a>
2ffe2cf2:	4628      	mov	r0, r5
2ffe2cf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe2cf8:	f06f 0504 	mvn.w	r5, #4
2ffe2cfc:	e7f9      	b.n	2ffe2cf2 <fdt_path_offset_namelen+0x86>

2ffe2cfe <fdt_path_offset>:
2ffe2cfe:	b538      	push	{r3, r4, r5, lr}
2ffe2d00:	4605      	mov	r5, r0
2ffe2d02:	4608      	mov	r0, r1
2ffe2d04:	460c      	mov	r4, r1
2ffe2d06:	f000 fb2c 	bl	2ffe3362 <strlen>
2ffe2d0a:	4602      	mov	r2, r0
2ffe2d0c:	4621      	mov	r1, r4
2ffe2d0e:	4628      	mov	r0, r5
2ffe2d10:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffe2d14:	f7ff bfaa 	b.w	2ffe2c6c <fdt_path_offset_namelen>

2ffe2d18 <fdt_supernode_atdepth_offset>:
2ffe2d18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffe2d1c:	4680      	mov	r8, r0
2ffe2d1e:	460d      	mov	r5, r1
2ffe2d20:	4614      	mov	r4, r2
2ffe2d22:	461e      	mov	r6, r3
2ffe2d24:	f7ff fcb0 	bl	2ffe2688 <fdt_check_header>
2ffe2d28:	b9b0      	cbnz	r0, 2ffe2d58 <fdt_supernode_atdepth_offset+0x40>
2ffe2d2a:	2c00      	cmp	r4, #0
2ffe2d2c:	db25      	blt.n	2ffe2d7a <fdt_supernode_atdepth_offset+0x62>
2ffe2d2e:	9001      	str	r0, [sp, #4]
2ffe2d30:	f06f 070c 	mvn.w	r7, #12
2ffe2d34:	4285      	cmp	r5, r0
2ffe2d36:	da02      	bge.n	2ffe2d3e <fdt_supernode_atdepth_offset+0x26>
2ffe2d38:	f06f 0003 	mvn.w	r0, #3
2ffe2d3c:	e00c      	b.n	2ffe2d58 <fdt_supernode_atdepth_offset+0x40>
2ffe2d3e:	9b01      	ldr	r3, [sp, #4]
2ffe2d40:	429c      	cmp	r4, r3
2ffe2d42:	bf08      	it	eq
2ffe2d44:	4607      	moveq	r7, r0
2ffe2d46:	4285      	cmp	r5, r0
2ffe2d48:	d109      	bne.n	2ffe2d5e <fdt_supernode_atdepth_offset+0x46>
2ffe2d4a:	b106      	cbz	r6, 2ffe2d4e <fdt_supernode_atdepth_offset+0x36>
2ffe2d4c:	6033      	str	r3, [r6, #0]
2ffe2d4e:	429c      	cmp	r4, r3
2ffe2d50:	bfd4      	ite	le
2ffe2d52:	4638      	movle	r0, r7
2ffe2d54:	f04f 30ff 	movgt.w	r0, #4294967295	; 0xffffffff
2ffe2d58:	b002      	add	sp, #8
2ffe2d5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe2d5e:	4601      	mov	r1, r0
2ffe2d60:	aa01      	add	r2, sp, #4
2ffe2d62:	4640      	mov	r0, r8
2ffe2d64:	f7ff fd62 	bl	2ffe282c <fdt_next_node>
2ffe2d68:	2800      	cmp	r0, #0
2ffe2d6a:	dae3      	bge.n	2ffe2d34 <fdt_supernode_atdepth_offset+0x1c>
2ffe2d6c:	1c42      	adds	r2, r0, #1
2ffe2d6e:	d0e3      	beq.n	2ffe2d38 <fdt_supernode_atdepth_offset+0x20>
2ffe2d70:	1d03      	adds	r3, r0, #4
2ffe2d72:	bf08      	it	eq
2ffe2d74:	f06f 000a 	mvneq.w	r0, #10
2ffe2d78:	e7ee      	b.n	2ffe2d58 <fdt_supernode_atdepth_offset+0x40>
2ffe2d7a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffe2d7e:	e7eb      	b.n	2ffe2d58 <fdt_supernode_atdepth_offset+0x40>

2ffe2d80 <fdt_node_depth>:
2ffe2d80:	b507      	push	{r0, r1, r2, lr}
2ffe2d82:	2200      	movs	r2, #0
2ffe2d84:	ab01      	add	r3, sp, #4
2ffe2d86:	f7ff ffc7 	bl	2ffe2d18 <fdt_supernode_atdepth_offset>
2ffe2d8a:	2800      	cmp	r0, #0
2ffe2d8c:	d005      	beq.n	2ffe2d9a <fdt_node_depth+0x1a>
2ffe2d8e:	db01      	blt.n	2ffe2d94 <fdt_node_depth+0x14>
2ffe2d90:	f06f 000c 	mvn.w	r0, #12
2ffe2d94:	b003      	add	sp, #12
2ffe2d96:	f85d fb04 	ldr.w	pc, [sp], #4
2ffe2d9a:	9801      	ldr	r0, [sp, #4]
2ffe2d9c:	e7fa      	b.n	2ffe2d94 <fdt_node_depth+0x14>

2ffe2d9e <fdt_parent_offset>:
2ffe2d9e:	b570      	push	{r4, r5, r6, lr}
2ffe2da0:	4604      	mov	r4, r0
2ffe2da2:	460d      	mov	r5, r1
2ffe2da4:	f7ff ffec 	bl	2ffe2d80 <fdt_node_depth>
2ffe2da8:	1e02      	subs	r2, r0, #0
2ffe2daa:	db07      	blt.n	2ffe2dbc <fdt_parent_offset+0x1e>
2ffe2dac:	4629      	mov	r1, r5
2ffe2dae:	4620      	mov	r0, r4
2ffe2db0:	2300      	movs	r3, #0
2ffe2db2:	3a01      	subs	r2, #1
2ffe2db4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffe2db8:	f7ff bfae 	b.w	2ffe2d18 <fdt_supernode_atdepth_offset>
2ffe2dbc:	bd70      	pop	{r4, r5, r6, pc}

2ffe2dbe <fdt_node_offset_by_phandle>:
2ffe2dbe:	1e4b      	subs	r3, r1, #1
2ffe2dc0:	3303      	adds	r3, #3
2ffe2dc2:	b570      	push	{r4, r5, r6, lr}
2ffe2dc4:	4605      	mov	r5, r0
2ffe2dc6:	460e      	mov	r6, r1
2ffe2dc8:	d817      	bhi.n	2ffe2dfa <fdt_node_offset_by_phandle+0x3c>
2ffe2dca:	f7ff fc5d 	bl	2ffe2688 <fdt_check_header>
2ffe2dce:	4604      	mov	r4, r0
2ffe2dd0:	b940      	cbnz	r0, 2ffe2de4 <fdt_node_offset_by_phandle+0x26>
2ffe2dd2:	4602      	mov	r2, r0
2ffe2dd4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffe2dd8:	4628      	mov	r0, r5
2ffe2dda:	f7ff fd27 	bl	2ffe282c <fdt_next_node>
2ffe2dde:	2800      	cmp	r0, #0
2ffe2de0:	4604      	mov	r4, r0
2ffe2de2:	da01      	bge.n	2ffe2de8 <fdt_node_offset_by_phandle+0x2a>
2ffe2de4:	4620      	mov	r0, r4
2ffe2de6:	bd70      	pop	{r4, r5, r6, pc}
2ffe2de8:	4621      	mov	r1, r4
2ffe2dea:	4628      	mov	r0, r5
2ffe2dec:	f7ff ff06 	bl	2ffe2bfc <fdt_get_phandle>
2ffe2df0:	42b0      	cmp	r0, r6
2ffe2df2:	d0f7      	beq.n	2ffe2de4 <fdt_node_offset_by_phandle+0x26>
2ffe2df4:	2200      	movs	r2, #0
2ffe2df6:	4621      	mov	r1, r4
2ffe2df8:	e7ee      	b.n	2ffe2dd8 <fdt_node_offset_by_phandle+0x1a>
2ffe2dfa:	f06f 0405 	mvn.w	r4, #5
2ffe2dfe:	e7f1      	b.n	2ffe2de4 <fdt_node_offset_by_phandle+0x26>

2ffe2e00 <fdt_stringlist_contains>:
2ffe2e00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffe2e04:	4604      	mov	r4, r0
2ffe2e06:	4610      	mov	r0, r2
2ffe2e08:	460d      	mov	r5, r1
2ffe2e0a:	4617      	mov	r7, r2
2ffe2e0c:	f000 faa9 	bl	2ffe3362 <strlen>
2ffe2e10:	4606      	mov	r6, r0
2ffe2e12:	f100 0801 	add.w	r8, r0, #1
2ffe2e16:	42b5      	cmp	r5, r6
2ffe2e18:	db0b      	blt.n	2ffe2e32 <fdt_stringlist_contains+0x32>
2ffe2e1a:	4642      	mov	r2, r8
2ffe2e1c:	4621      	mov	r1, r4
2ffe2e1e:	4638      	mov	r0, r7
2ffe2e20:	f000 f892 	bl	2ffe2f48 <memcmp>
2ffe2e24:	b168      	cbz	r0, 2ffe2e42 <fdt_stringlist_contains+0x42>
2ffe2e26:	462a      	mov	r2, r5
2ffe2e28:	2100      	movs	r1, #0
2ffe2e2a:	4620      	mov	r0, r4
2ffe2e2c:	f000 f87e 	bl	2ffe2f2c <memchr>
2ffe2e30:	b910      	cbnz	r0, 2ffe2e38 <fdt_stringlist_contains+0x38>
2ffe2e32:	2000      	movs	r0, #0
2ffe2e34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe2e38:	1b04      	subs	r4, r0, r4
2ffe2e3a:	3401      	adds	r4, #1
2ffe2e3c:	1b2d      	subs	r5, r5, r4
2ffe2e3e:	1c44      	adds	r4, r0, #1
2ffe2e40:	e7e9      	b.n	2ffe2e16 <fdt_stringlist_contains+0x16>
2ffe2e42:	2001      	movs	r0, #1
2ffe2e44:	e7f6      	b.n	2ffe2e34 <fdt_stringlist_contains+0x34>

2ffe2e46 <fdt_stringlist_search>:
2ffe2e46:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2ffe2e4a:	4698      	mov	r8, r3
2ffe2e4c:	ab01      	add	r3, sp, #4
2ffe2e4e:	f7ff fec4 	bl	2ffe2bda <fdt_getprop>
2ffe2e52:	4604      	mov	r4, r0
2ffe2e54:	b920      	cbnz	r0, 2ffe2e60 <fdt_stringlist_search+0x1a>
2ffe2e56:	9d01      	ldr	r5, [sp, #4]
2ffe2e58:	4628      	mov	r0, r5
2ffe2e5a:	b002      	add	sp, #8
2ffe2e5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffe2e60:	4640      	mov	r0, r8
2ffe2e62:	2500      	movs	r5, #0
2ffe2e64:	f000 fa7d 	bl	2ffe3362 <strlen>
2ffe2e68:	9e01      	ldr	r6, [sp, #4]
2ffe2e6a:	1c47      	adds	r7, r0, #1
2ffe2e6c:	4426      	add	r6, r4
2ffe2e6e:	42b4      	cmp	r4, r6
2ffe2e70:	d302      	bcc.n	2ffe2e78 <fdt_stringlist_search+0x32>
2ffe2e72:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2ffe2e76:	e7ef      	b.n	2ffe2e58 <fdt_stringlist_search+0x12>
2ffe2e78:	1b31      	subs	r1, r6, r4
2ffe2e7a:	4620      	mov	r0, r4
2ffe2e7c:	f000 fa8d 	bl	2ffe339a <strnlen>
2ffe2e80:	3001      	adds	r0, #1
2ffe2e82:	1823      	adds	r3, r4, r0
2ffe2e84:	429e      	cmp	r6, r3
2ffe2e86:	9001      	str	r0, [sp, #4]
2ffe2e88:	d30d      	bcc.n	2ffe2ea6 <fdt_stringlist_search+0x60>
2ffe2e8a:	42b8      	cmp	r0, r7
2ffe2e8c:	d003      	beq.n	2ffe2e96 <fdt_stringlist_search+0x50>
2ffe2e8e:	9b01      	ldr	r3, [sp, #4]
2ffe2e90:	3501      	adds	r5, #1
2ffe2e92:	441c      	add	r4, r3
2ffe2e94:	e7eb      	b.n	2ffe2e6e <fdt_stringlist_search+0x28>
2ffe2e96:	463a      	mov	r2, r7
2ffe2e98:	4641      	mov	r1, r8
2ffe2e9a:	4620      	mov	r0, r4
2ffe2e9c:	f000 f854 	bl	2ffe2f48 <memcmp>
2ffe2ea0:	2800      	cmp	r0, #0
2ffe2ea2:	d1f4      	bne.n	2ffe2e8e <fdt_stringlist_search+0x48>
2ffe2ea4:	e7d8      	b.n	2ffe2e58 <fdt_stringlist_search+0x12>
2ffe2ea6:	f06f 050e 	mvn.w	r5, #14
2ffe2eaa:	e7d5      	b.n	2ffe2e58 <fdt_stringlist_search+0x12>

2ffe2eac <fdt_node_check_compatible>:
2ffe2eac:	b513      	push	{r0, r1, r4, lr}
2ffe2eae:	4614      	mov	r4, r2
2ffe2eb0:	4a07      	ldr	r2, [pc, #28]	; (2ffe2ed0 <fdt_node_check_compatible+0x24>)
2ffe2eb2:	ab01      	add	r3, sp, #4
2ffe2eb4:	f7ff fe91 	bl	2ffe2bda <fdt_getprop>
2ffe2eb8:	b910      	cbnz	r0, 2ffe2ec0 <fdt_node_check_compatible+0x14>
2ffe2eba:	9801      	ldr	r0, [sp, #4]
2ffe2ebc:	b002      	add	sp, #8
2ffe2ebe:	bd10      	pop	{r4, pc}
2ffe2ec0:	9901      	ldr	r1, [sp, #4]
2ffe2ec2:	4622      	mov	r2, r4
2ffe2ec4:	f7ff ff9c 	bl	2ffe2e00 <fdt_stringlist_contains>
2ffe2ec8:	fab0 f080 	clz	r0, r0
2ffe2ecc:	0940      	lsrs	r0, r0, #5
2ffe2ece:	e7f5      	b.n	2ffe2ebc <fdt_node_check_compatible+0x10>
2ffe2ed0:	2ffe6ebd 	.word	0x2ffe6ebd

2ffe2ed4 <fdt_node_offset_by_compatible>:
2ffe2ed4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffe2ed6:	4605      	mov	r5, r0
2ffe2ed8:	460f      	mov	r7, r1
2ffe2eda:	4616      	mov	r6, r2
2ffe2edc:	f7ff fbd4 	bl	2ffe2688 <fdt_check_header>
2ffe2ee0:	4604      	mov	r4, r0
2ffe2ee2:	b938      	cbnz	r0, 2ffe2ef4 <fdt_node_offset_by_compatible+0x20>
2ffe2ee4:	4602      	mov	r2, r0
2ffe2ee6:	4639      	mov	r1, r7
2ffe2ee8:	4628      	mov	r0, r5
2ffe2eea:	f7ff fc9f 	bl	2ffe282c <fdt_next_node>
2ffe2eee:	2800      	cmp	r0, #0
2ffe2ef0:	4604      	mov	r4, r0
2ffe2ef2:	da01      	bge.n	2ffe2ef8 <fdt_node_offset_by_compatible+0x24>
2ffe2ef4:	4620      	mov	r0, r4
2ffe2ef6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffe2ef8:	4632      	mov	r2, r6
2ffe2efa:	4621      	mov	r1, r4
2ffe2efc:	4628      	mov	r0, r5
2ffe2efe:	f7ff ffd5 	bl	2ffe2eac <fdt_node_check_compatible>
2ffe2f02:	1c43      	adds	r3, r0, #1
2ffe2f04:	db04      	blt.n	2ffe2f10 <fdt_node_offset_by_compatible+0x3c>
2ffe2f06:	2800      	cmp	r0, #0
2ffe2f08:	d0f4      	beq.n	2ffe2ef4 <fdt_node_offset_by_compatible+0x20>
2ffe2f0a:	2200      	movs	r2, #0
2ffe2f0c:	4621      	mov	r1, r4
2ffe2f0e:	e7eb      	b.n	2ffe2ee8 <fdt_node_offset_by_compatible+0x14>
2ffe2f10:	4604      	mov	r4, r0
2ffe2f12:	e7ef      	b.n	2ffe2ef4 <fdt_node_offset_by_compatible+0x20>

2ffe2f14 <__assert>:
2ffe2f14:	460a      	mov	r2, r1
2ffe2f16:	4601      	mov	r1, r0
2ffe2f18:	b508      	push	{r3, lr}
2ffe2f1a:	4803      	ldr	r0, [pc, #12]	; (2ffe2f28 <__assert+0x14>)
2ffe2f1c:	f000 f95c 	bl	2ffe31d8 <printf>
2ffe2f20:	f7f9 fe82 	bl	2ffdcc28 <console_flush>
2ffe2f24:	f7f3 ed1a 	blx	2ffd695c <plat_panic_handler>
2ffe2f28:	2ffe6ec8 	.word	0x2ffe6ec8

2ffe2f2c <memchr>:
2ffe2f2c:	4402      	add	r2, r0
2ffe2f2e:	4603      	mov	r3, r0
2ffe2f30:	b2c9      	uxtb	r1, r1
2ffe2f32:	b510      	push	{r4, lr}
2ffe2f34:	4618      	mov	r0, r3
2ffe2f36:	4293      	cmp	r3, r2
2ffe2f38:	d101      	bne.n	2ffe2f3e <memchr+0x12>
2ffe2f3a:	2000      	movs	r0, #0
2ffe2f3c:	e003      	b.n	2ffe2f46 <memchr+0x1a>
2ffe2f3e:	7804      	ldrb	r4, [r0, #0]
2ffe2f40:	3301      	adds	r3, #1
2ffe2f42:	428c      	cmp	r4, r1
2ffe2f44:	d1f6      	bne.n	2ffe2f34 <memchr+0x8>
2ffe2f46:	bd10      	pop	{r4, pc}

2ffe2f48 <memcmp>:
2ffe2f48:	4402      	add	r2, r0
2ffe2f4a:	b510      	push	{r4, lr}
2ffe2f4c:	4290      	cmp	r0, r2
2ffe2f4e:	d101      	bne.n	2ffe2f54 <memcmp+0xc>
2ffe2f50:	2000      	movs	r0, #0
2ffe2f52:	e006      	b.n	2ffe2f62 <memcmp+0x1a>
2ffe2f54:	f810 3b01 	ldrb.w	r3, [r0], #1
2ffe2f58:	f811 4b01 	ldrb.w	r4, [r1], #1
2ffe2f5c:	42a3      	cmp	r3, r4
2ffe2f5e:	d0f5      	beq.n	2ffe2f4c <memcmp+0x4>
2ffe2f60:	1b18      	subs	r0, r3, r4
2ffe2f62:	bd10      	pop	{r4, pc}

2ffe2f64 <memcpy>:
2ffe2f64:	440a      	add	r2, r1
2ffe2f66:	1e43      	subs	r3, r0, #1
2ffe2f68:	b510      	push	{r4, lr}
2ffe2f6a:	4291      	cmp	r1, r2
2ffe2f6c:	d100      	bne.n	2ffe2f70 <memcpy+0xc>
2ffe2f6e:	bd10      	pop	{r4, pc}
2ffe2f70:	f811 4b01 	ldrb.w	r4, [r1], #1
2ffe2f74:	f803 4f01 	strb.w	r4, [r3, #1]!
2ffe2f78:	e7f7      	b.n	2ffe2f6a <memcpy+0x6>

2ffe2f7a <memmove>:
2ffe2f7a:	b470      	push	{r4, r5, r6}
2ffe2f7c:	4613      	mov	r3, r2
2ffe2f7e:	1a46      	subs	r6, r0, r1
2ffe2f80:	4605      	mov	r5, r0
2ffe2f82:	4296      	cmp	r6, r2
2ffe2f84:	460c      	mov	r4, r1
2ffe2f86:	d302      	bcc.n	2ffe2f8e <memmove+0x14>
2ffe2f88:	bc70      	pop	{r4, r5, r6}
2ffe2f8a:	f7ff bfeb 	b.w	2ffe2f64 <memcpy>
2ffe2f8e:	4414      	add	r4, r2
2ffe2f90:	4403      	add	r3, r0
2ffe2f92:	429d      	cmp	r5, r3
2ffe2f94:	d102      	bne.n	2ffe2f9c <memmove+0x22>
2ffe2f96:	4628      	mov	r0, r5
2ffe2f98:	bc70      	pop	{r4, r5, r6}
2ffe2f9a:	4770      	bx	lr
2ffe2f9c:	f814 2d01 	ldrb.w	r2, [r4, #-1]!
2ffe2fa0:	f803 2d01 	strb.w	r2, [r3, #-1]!
2ffe2fa4:	e7f5      	b.n	2ffe2f92 <memmove+0x18>

2ffe2fa6 <memset>:
2ffe2fa6:	4402      	add	r2, r0
2ffe2fa8:	4603      	mov	r3, r0
2ffe2faa:	4293      	cmp	r3, r2
2ffe2fac:	d100      	bne.n	2ffe2fb0 <memset+0xa>
2ffe2fae:	4770      	bx	lr
2ffe2fb0:	f803 1b01 	strb.w	r1, [r3], #1
2ffe2fb4:	e7f9      	b.n	2ffe2faa <memset+0x4>

2ffe2fb6 <unsigned_num_print>:
2ffe2fb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe2fba:	b087      	sub	sp, #28
2ffe2fbc:	4606      	mov	r6, r0
2ffe2fbe:	460f      	mov	r7, r1
2ffe2fc0:	9d10      	ldr	r5, [sp, #64]	; 0x40
2ffe2fc2:	469a      	mov	sl, r3
2ffe2fc4:	f10d 0b04 	add.w	fp, sp, #4
2ffe2fc8:	2400      	movs	r4, #0
2ffe2fca:	4690      	mov	r8, r2
2ffe2fcc:	f04f 0900 	mov.w	r9, #0
2ffe2fd0:	4642      	mov	r2, r8
2ffe2fd2:	464b      	mov	r3, r9
2ffe2fd4:	4630      	mov	r0, r6
2ffe2fd6:	4639      	mov	r1, r7
2ffe2fd8:	3401      	adds	r4, #1
2ffe2fda:	f7ff eb42 	blx	2ffe2660 <__aeabi_uldivmod>
2ffe2fde:	b2d3      	uxtb	r3, r2
2ffe2fe0:	2a09      	cmp	r2, #9
2ffe2fe2:	bf94      	ite	ls
2ffe2fe4:	3330      	addls	r3, #48	; 0x30
2ffe2fe6:	3357      	addhi	r3, #87	; 0x57
2ffe2fe8:	454f      	cmp	r7, r9
2ffe2fea:	b2db      	uxtb	r3, r3
2ffe2fec:	bf08      	it	eq
2ffe2fee:	4546      	cmpeq	r6, r8
2ffe2ff0:	f80b 3b01 	strb.w	r3, [fp], #1
2ffe2ff4:	d20a      	bcs.n	2ffe300c <unsigned_num_print+0x56>
2ffe2ff6:	2d00      	cmp	r5, #0
2ffe2ff8:	dc17      	bgt.n	2ffe302a <unsigned_num_print+0x74>
2ffe2ffa:	2500      	movs	r5, #0
2ffe2ffc:	4626      	mov	r6, r4
2ffe2ffe:	af01      	add	r7, sp, #4
2ffe3000:	3e01      	subs	r6, #1
2ffe3002:	d214      	bcs.n	2ffe302e <unsigned_num_print+0x78>
2ffe3004:	1960      	adds	r0, r4, r5
2ffe3006:	b007      	add	sp, #28
2ffe3008:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe300c:	4606      	mov	r6, r0
2ffe300e:	460f      	mov	r7, r1
2ffe3010:	e7de      	b.n	2ffe2fd0 <unsigned_num_print+0x1a>
2ffe3012:	4650      	mov	r0, sl
2ffe3014:	3e01      	subs	r6, #1
2ffe3016:	f000 f8ec 	bl	2ffe31f2 <putchar>
2ffe301a:	42a6      	cmp	r6, r4
2ffe301c:	dcf9      	bgt.n	2ffe3012 <unsigned_num_print+0x5c>
2ffe301e:	1b2b      	subs	r3, r5, r4
2ffe3020:	42ac      	cmp	r4, r5
2ffe3022:	bfd4      	ite	le
2ffe3024:	461d      	movle	r5, r3
2ffe3026:	2500      	movgt	r5, #0
2ffe3028:	e7e8      	b.n	2ffe2ffc <unsigned_num_print+0x46>
2ffe302a:	462e      	mov	r6, r5
2ffe302c:	e7f5      	b.n	2ffe301a <unsigned_num_print+0x64>
2ffe302e:	5db8      	ldrb	r0, [r7, r6]
2ffe3030:	f000 f8df 	bl	2ffe31f2 <putchar>
2ffe3034:	e7e4      	b.n	2ffe3000 <unsigned_num_print+0x4a>
	...

2ffe3038 <vprintf>:
2ffe3038:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffe303c:	2500      	movs	r5, #0
2ffe303e:	4606      	mov	r6, r0
2ffe3040:	460c      	mov	r4, r1
2ffe3042:	462f      	mov	r7, r5
2ffe3044:	7830      	ldrb	r0, [r6, #0]
2ffe3046:	b918      	cbnz	r0, 2ffe3050 <vprintf+0x18>
2ffe3048:	4628      	mov	r0, r5
2ffe304a:	b003      	add	sp, #12
2ffe304c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffe3050:	2825      	cmp	r0, #37	; 0x25
2ffe3052:	f106 0601 	add.w	r6, r6, #1
2ffe3056:	f040 80b4 	bne.w	2ffe31c2 <vprintf+0x18a>
2ffe305a:	f04f 0b00 	mov.w	fp, #0
2ffe305e:	4659      	mov	r1, fp
2ffe3060:	e000      	b.n	2ffe3064 <vprintf+0x2c>
2ffe3062:	2730      	movs	r7, #48	; 0x30
2ffe3064:	7832      	ldrb	r2, [r6, #0]
2ffe3066:	2a30      	cmp	r2, #48	; 0x30
2ffe3068:	f000 809c 	beq.w	2ffe31a4 <vprintf+0x16c>
2ffe306c:	3a64      	subs	r2, #100	; 0x64
2ffe306e:	b2d0      	uxtb	r0, r2
2ffe3070:	2816      	cmp	r0, #22
2ffe3072:	f200 80aa 	bhi.w	2ffe31ca <vprintf+0x192>
2ffe3076:	2a16      	cmp	r2, #22
2ffe3078:	f200 80a7 	bhi.w	2ffe31ca <vprintf+0x192>
2ffe307c:	e8df f002 	tbb	[pc, r2]
2ffe3080:	a5a5a50c 	.word	0xa5a5a50c
2ffe3084:	a5a50ca5 	.word	0xa5a50ca5
2ffe3088:	a5a5a57c 	.word	0xa5a5a57c
2ffe308c:	35a5a54b 	.word	0x35a5a54b
2ffe3090:	a5a57fa5 	.word	0xa5a57fa5
2ffe3094:	a569      	.short	0xa569
2ffe3096:	7d          	.byte	0x7d
2ffe3097:	00          	.byte	0x00
2ffe3098:	2901      	cmp	r1, #1
2ffe309a:	dd1c      	ble.n	2ffe30d6 <vprintf+0x9e>
2ffe309c:	3407      	adds	r4, #7
2ffe309e:	f024 0a07 	bic.w	sl, r4, #7
2ffe30a2:	e8fa 8902 	ldrd	r8, r9, [sl], #8
2ffe30a6:	f1b8 0f00 	cmp.w	r8, #0
2ffe30aa:	f179 0300 	sbcs.w	r3, r9, #0
2ffe30ae:	da19      	bge.n	2ffe30e4 <vprintf+0xac>
2ffe30b0:	202d      	movs	r0, #45	; 0x2d
2ffe30b2:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
2ffe30b6:	f000 f89c 	bl	2ffe31f2 <putchar>
2ffe30ba:	f1d8 0000 	rsbs	r0, r8, #0
2ffe30be:	eb69 0149 	sbc.w	r1, r9, r9, lsl #1
2ffe30c2:	f8cd b000 	str.w	fp, [sp]
2ffe30c6:	463b      	mov	r3, r7
2ffe30c8:	220a      	movs	r2, #10
2ffe30ca:	4654      	mov	r4, sl
2ffe30cc:	f7ff ff73 	bl	2ffe2fb6 <unsigned_num_print>
2ffe30d0:	4405      	add	r5, r0
2ffe30d2:	3601      	adds	r6, #1
2ffe30d4:	e7b6      	b.n	2ffe3044 <vprintf+0xc>
2ffe30d6:	6820      	ldr	r0, [r4, #0]
2ffe30d8:	f104 0a04 	add.w	sl, r4, #4
2ffe30dc:	ea4f 79e0 	mov.w	r9, r0, asr #31
2ffe30e0:	4680      	mov	r8, r0
2ffe30e2:	e7e0      	b.n	2ffe30a6 <vprintf+0x6e>
2ffe30e4:	4640      	mov	r0, r8
2ffe30e6:	4649      	mov	r1, r9
2ffe30e8:	e7eb      	b.n	2ffe30c2 <vprintf+0x8a>
2ffe30ea:	f854 9b04 	ldr.w	r9, [r4], #4
2ffe30ee:	f1b9 0f00 	cmp.w	r9, #0
2ffe30f2:	d10d      	bne.n	2ffe3110 <vprintf+0xd8>
2ffe30f4:	4836      	ldr	r0, [pc, #216]	; (2ffe31d0 <vprintf+0x198>)
2ffe30f6:	211c      	movs	r1, #28
2ffe30f8:	f7ff ff0c 	bl	2ffe2f14 <__assert>
2ffe30fc:	f108 0801 	add.w	r8, r8, #1
2ffe3100:	f000 f877 	bl	2ffe31f2 <putchar>
2ffe3104:	f819 0008 	ldrb.w	r0, [r9, r8]
2ffe3108:	2800      	cmp	r0, #0
2ffe310a:	d1f7      	bne.n	2ffe30fc <vprintf+0xc4>
2ffe310c:	4445      	add	r5, r8
2ffe310e:	e7e0      	b.n	2ffe30d2 <vprintf+0x9a>
2ffe3110:	f04f 0800 	mov.w	r8, #0
2ffe3114:	e7f6      	b.n	2ffe3104 <vprintf+0xcc>
2ffe3116:	f854 9b04 	ldr.w	r9, [r4], #4
2ffe311a:	f1b9 0f00 	cmp.w	r9, #0
2ffe311e:	d009      	beq.n	2ffe3134 <vprintf+0xfc>
2ffe3120:	f8df a0b0 	ldr.w	sl, [pc, #176]	; 2ffe31d4 <vprintf+0x19c>
2ffe3124:	f04f 0800 	mov.w	r8, #0
2ffe3128:	f81a 0b01 	ldrb.w	r0, [sl], #1
2ffe312c:	b960      	cbnz	r0, 2ffe3148 <vprintf+0x110>
2ffe312e:	4445      	add	r5, r8
2ffe3130:	f1ab 0b02 	sub.w	fp, fp, #2
2ffe3134:	f8cd b000 	str.w	fp, [sp]
2ffe3138:	463b      	mov	r3, r7
2ffe313a:	2210      	movs	r2, #16
2ffe313c:	4648      	mov	r0, r9
2ffe313e:	2100      	movs	r1, #0
2ffe3140:	f7ff ff39 	bl	2ffe2fb6 <unsigned_num_print>
2ffe3144:	4405      	add	r5, r0
2ffe3146:	e7c4      	b.n	2ffe30d2 <vprintf+0x9a>
2ffe3148:	f108 0801 	add.w	r8, r8, #1
2ffe314c:	f000 f851 	bl	2ffe31f2 <putchar>
2ffe3150:	e7ea      	b.n	2ffe3128 <vprintf+0xf0>
2ffe3152:	2901      	cmp	r1, #1
2ffe3154:	463b      	mov	r3, r7
2ffe3156:	bfca      	itet	gt
2ffe3158:	1de1      	addgt	r1, r4, #7
2ffe315a:	2100      	movle	r1, #0
2ffe315c:	f021 0107 	bicgt.w	r1, r1, #7
2ffe3160:	f04f 0210 	mov.w	r2, #16
2ffe3164:	bfd1      	iteee	le
2ffe3166:	f854 0b04 	ldrle.w	r0, [r4], #4
2ffe316a:	460c      	movgt	r4, r1
2ffe316c:	6849      	ldrgt	r1, [r1, #4]
2ffe316e:	f854 0b08 	ldrgt.w	r0, [r4], #8
2ffe3172:	f8cd b000 	str.w	fp, [sp]
2ffe3176:	e7e3      	b.n	2ffe3140 <vprintf+0x108>
2ffe3178:	3101      	adds	r1, #1
2ffe317a:	3601      	adds	r6, #1
2ffe317c:	e772      	b.n	2ffe3064 <vprintf+0x2c>
2ffe317e:	2901      	cmp	r1, #1
2ffe3180:	463b      	mov	r3, r7
2ffe3182:	bfca      	itet	gt
2ffe3184:	1de1      	addgt	r1, r4, #7
2ffe3186:	2100      	movle	r1, #0
2ffe3188:	f021 0107 	bicgt.w	r1, r1, #7
2ffe318c:	f04f 020a 	mov.w	r2, #10
2ffe3190:	bfd1      	iteee	le
2ffe3192:	f854 0b04 	ldrle.w	r0, [r4], #4
2ffe3196:	460c      	movgt	r4, r1
2ffe3198:	6849      	ldrgt	r1, [r1, #4]
2ffe319a:	f854 0b08 	ldrgt.w	r0, [r4], #8
2ffe319e:	f8cd b000 	str.w	fp, [sp]
2ffe31a2:	e7cd      	b.n	2ffe3140 <vprintf+0x108>
2ffe31a4:	1c70      	adds	r0, r6, #1
2ffe31a6:	f04f 0b00 	mov.w	fp, #0
2ffe31aa:	4606      	mov	r6, r0
2ffe31ac:	f810 2b01 	ldrb.w	r2, [r0], #1
2ffe31b0:	3a30      	subs	r2, #48	; 0x30
2ffe31b2:	b2d7      	uxtb	r7, r2
2ffe31b4:	2f09      	cmp	r7, #9
2ffe31b6:	f63f af54 	bhi.w	2ffe3062 <vprintf+0x2a>
2ffe31ba:	230a      	movs	r3, #10
2ffe31bc:	fb03 2b0b 	mla	fp, r3, fp, r2
2ffe31c0:	e7f3      	b.n	2ffe31aa <vprintf+0x172>
2ffe31c2:	3501      	adds	r5, #1
2ffe31c4:	f000 f815 	bl	2ffe31f2 <putchar>
2ffe31c8:	e73c      	b.n	2ffe3044 <vprintf+0xc>
2ffe31ca:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2ffe31ce:	e73b      	b.n	2ffe3048 <vprintf+0x10>
2ffe31d0:	2ffe6ed7 	.word	0x2ffe6ed7
2ffe31d4:	2ffe6ee9 	.word	0x2ffe6ee9

2ffe31d8 <printf>:
2ffe31d8:	b40f      	push	{r0, r1, r2, r3}
2ffe31da:	b507      	push	{r0, r1, r2, lr}
2ffe31dc:	a904      	add	r1, sp, #16
2ffe31de:	f851 0b04 	ldr.w	r0, [r1], #4
2ffe31e2:	9101      	str	r1, [sp, #4]
2ffe31e4:	f7ff ff28 	bl	2ffe3038 <vprintf>
2ffe31e8:	b003      	add	sp, #12
2ffe31ea:	f85d eb04 	ldr.w	lr, [sp], #4
2ffe31ee:	b004      	add	sp, #16
2ffe31f0:	4770      	bx	lr

2ffe31f2 <putchar>:
2ffe31f2:	b510      	push	{r4, lr}
2ffe31f4:	4604      	mov	r4, r0
2ffe31f6:	b2c0      	uxtb	r0, r0
2ffe31f8:	f7f9 fcea 	bl	2ffdcbd0 <console_putc>
2ffe31fc:	2800      	cmp	r0, #0
2ffe31fe:	bfac      	ite	ge
2ffe3200:	4620      	movge	r0, r4
2ffe3202:	f04f 30ff 	movlt.w	r0, #4294967295	; 0xffffffff
2ffe3206:	bd10      	pop	{r4, pc}

2ffe3208 <unsigned_dec_print>:
2ffe3208:	b5f0      	push	{r4, r5, r6, r7, lr}
2ffe320a:	b085      	sub	sp, #20
2ffe320c:	ad01      	add	r5, sp, #4
2ffe320e:	2400      	movs	r4, #0
2ffe3210:	46ac      	mov	ip, r5
2ffe3212:	f04f 0e0a 	mov.w	lr, #10
2ffe3216:	fbb3 f7fe 	udiv	r7, r3, lr
2ffe321a:	fb0e 3617 	mls	r6, lr, r7, r3
2ffe321e:	3401      	adds	r4, #1
2ffe3220:	3630      	adds	r6, #48	; 0x30
2ffe3222:	f805 6b01 	strb.w	r6, [r5], #1
2ffe3226:	461e      	mov	r6, r3
2ffe3228:	2e09      	cmp	r6, #9
2ffe322a:	463b      	mov	r3, r7
2ffe322c:	d8f3      	bhi.n	2ffe3216 <unsigned_dec_print+0xe>
2ffe322e:	3c01      	subs	r4, #1
2ffe3230:	d201      	bcs.n	2ffe3236 <unsigned_dec_print+0x2e>
2ffe3232:	b005      	add	sp, #20
2ffe3234:	bdf0      	pop	{r4, r5, r6, r7, pc}
2ffe3236:	6813      	ldr	r3, [r2, #0]
2ffe3238:	428b      	cmp	r3, r1
2ffe323a:	d206      	bcs.n	2ffe324a <unsigned_dec_print+0x42>
2ffe323c:	6803      	ldr	r3, [r0, #0]
2ffe323e:	f81c 5004 	ldrb.w	r5, [ip, r4]
2ffe3242:	701d      	strb	r5, [r3, #0]
2ffe3244:	6803      	ldr	r3, [r0, #0]
2ffe3246:	3301      	adds	r3, #1
2ffe3248:	6003      	str	r3, [r0, #0]
2ffe324a:	6813      	ldr	r3, [r2, #0]
2ffe324c:	3301      	adds	r3, #1
2ffe324e:	6013      	str	r3, [r2, #0]
2ffe3250:	e7ed      	b.n	2ffe322e <unsigned_dec_print+0x26>
	...

2ffe3254 <snprintf>:
2ffe3254:	b40c      	push	{r2, r3}
2ffe3256:	2300      	movs	r3, #0
2ffe3258:	b530      	push	{r4, r5, lr}
2ffe325a:	b085      	sub	sp, #20
2ffe325c:	9c08      	ldr	r4, [sp, #32]
2ffe325e:	9001      	str	r0, [sp, #4]
2ffe3260:	9303      	str	r3, [sp, #12]
2ffe3262:	b129      	cbz	r1, 2ffe3270 <snprintf+0x1c>
2ffe3264:	2901      	cmp	r1, #1
2ffe3266:	bf06      	itte	eq
2ffe3268:	7003      	strbeq	r3, [r0, #0]
2ffe326a:	4619      	moveq	r1, r3
2ffe326c:	f101 31ff 	addne.w	r1, r1, #4294967295	; 0xffffffff
2ffe3270:	252d      	movs	r5, #45	; 0x2d
2ffe3272:	ab09      	add	r3, sp, #36	; 0x24
2ffe3274:	9302      	str	r3, [sp, #8]
2ffe3276:	7823      	ldrb	r3, [r4, #0]
2ffe3278:	b943      	cbnz	r3, 2ffe328c <snprintf+0x38>
2ffe327a:	b109      	cbz	r1, 2ffe3280 <snprintf+0x2c>
2ffe327c:	9a01      	ldr	r2, [sp, #4]
2ffe327e:	7013      	strb	r3, [r2, #0]
2ffe3280:	9803      	ldr	r0, [sp, #12]
2ffe3282:	b005      	add	sp, #20
2ffe3284:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2ffe3288:	b002      	add	sp, #8
2ffe328a:	4770      	bx	lr
2ffe328c:	2b25      	cmp	r3, #37	; 0x25
2ffe328e:	d141      	bne.n	2ffe3314 <snprintf+0xc0>
2ffe3290:	7863      	ldrb	r3, [r4, #1]
2ffe3292:	2b73      	cmp	r3, #115	; 0x73
2ffe3294:	d028      	beq.n	2ffe32e8 <snprintf+0x94>
2ffe3296:	d809      	bhi.n	2ffe32ac <snprintf+0x58>
2ffe3298:	2b64      	cmp	r3, #100	; 0x64
2ffe329a:	d00e      	beq.n	2ffe32ba <snprintf+0x66>
2ffe329c:	2b69      	cmp	r3, #105	; 0x69
2ffe329e:	d00c      	beq.n	2ffe32ba <snprintf+0x66>
2ffe32a0:	4823      	ldr	r0, [pc, #140]	; (2ffe3330 <snprintf+0xdc>)
2ffe32a2:	4619      	mov	r1, r3
2ffe32a4:	f7f9 fc22 	bl	2ffdcaec <tf_log>
2ffe32a8:	f7f3 eb58 	blx	2ffd695c <plat_panic_handler>
2ffe32ac:	2b75      	cmp	r3, #117	; 0x75
2ffe32ae:	d1f7      	bne.n	2ffe32a0 <snprintf+0x4c>
2ffe32b0:	9b02      	ldr	r3, [sp, #8]
2ffe32b2:	1d1a      	adds	r2, r3, #4
2ffe32b4:	9202      	str	r2, [sp, #8]
2ffe32b6:	681b      	ldr	r3, [r3, #0]
2ffe32b8:	e011      	b.n	2ffe32de <snprintf+0x8a>
2ffe32ba:	9b02      	ldr	r3, [sp, #8]
2ffe32bc:	1d1a      	adds	r2, r3, #4
2ffe32be:	681b      	ldr	r3, [r3, #0]
2ffe32c0:	9202      	str	r2, [sp, #8]
2ffe32c2:	2b00      	cmp	r3, #0
2ffe32c4:	da0b      	bge.n	2ffe32de <snprintf+0x8a>
2ffe32c6:	9a03      	ldr	r2, [sp, #12]
2ffe32c8:	428a      	cmp	r2, r1
2ffe32ca:	d204      	bcs.n	2ffe32d6 <snprintf+0x82>
2ffe32cc:	9a01      	ldr	r2, [sp, #4]
2ffe32ce:	7015      	strb	r5, [r2, #0]
2ffe32d0:	9a01      	ldr	r2, [sp, #4]
2ffe32d2:	3201      	adds	r2, #1
2ffe32d4:	9201      	str	r2, [sp, #4]
2ffe32d6:	9a03      	ldr	r2, [sp, #12]
2ffe32d8:	425b      	negs	r3, r3
2ffe32da:	3201      	adds	r2, #1
2ffe32dc:	9203      	str	r2, [sp, #12]
2ffe32de:	aa03      	add	r2, sp, #12
2ffe32e0:	a801      	add	r0, sp, #4
2ffe32e2:	f7ff ff91 	bl	2ffe3208 <unsigned_dec_print>
2ffe32e6:	e007      	b.n	2ffe32f8 <snprintf+0xa4>
2ffe32e8:	9b02      	ldr	r3, [sp, #8]
2ffe32ea:	1d1a      	adds	r2, r3, #4
2ffe32ec:	681b      	ldr	r3, [r3, #0]
2ffe32ee:	9202      	str	r2, [sp, #8]
2ffe32f0:	3b01      	subs	r3, #1
2ffe32f2:	f813 2f01 	ldrb.w	r2, [r3, #1]!
2ffe32f6:	b90a      	cbnz	r2, 2ffe32fc <snprintf+0xa8>
2ffe32f8:	3402      	adds	r4, #2
2ffe32fa:	e7bc      	b.n	2ffe3276 <snprintf+0x22>
2ffe32fc:	9803      	ldr	r0, [sp, #12]
2ffe32fe:	4281      	cmp	r1, r0
2ffe3300:	d904      	bls.n	2ffe330c <snprintf+0xb8>
2ffe3302:	9801      	ldr	r0, [sp, #4]
2ffe3304:	7002      	strb	r2, [r0, #0]
2ffe3306:	9a01      	ldr	r2, [sp, #4]
2ffe3308:	3201      	adds	r2, #1
2ffe330a:	9201      	str	r2, [sp, #4]
2ffe330c:	9a03      	ldr	r2, [sp, #12]
2ffe330e:	3201      	adds	r2, #1
2ffe3310:	9203      	str	r2, [sp, #12]
2ffe3312:	e7ee      	b.n	2ffe32f2 <snprintf+0x9e>
2ffe3314:	9a03      	ldr	r2, [sp, #12]
2ffe3316:	428a      	cmp	r2, r1
2ffe3318:	d204      	bcs.n	2ffe3324 <snprintf+0xd0>
2ffe331a:	9a01      	ldr	r2, [sp, #4]
2ffe331c:	7013      	strb	r3, [r2, #0]
2ffe331e:	9b01      	ldr	r3, [sp, #4]
2ffe3320:	3301      	adds	r3, #1
2ffe3322:	9301      	str	r3, [sp, #4]
2ffe3324:	9b03      	ldr	r3, [sp, #12]
2ffe3326:	3401      	adds	r4, #1
2ffe3328:	3301      	adds	r3, #1
2ffe332a:	9303      	str	r3, [sp, #12]
2ffe332c:	e7a3      	b.n	2ffe3276 <snprintf+0x22>
2ffe332e:	bf00      	nop
2ffe3330:	2ffe6eec 	.word	0x2ffe6eec

2ffe3334 <strchr>:
2ffe3334:	b2c9      	uxtb	r1, r1
2ffe3336:	4603      	mov	r3, r0
2ffe3338:	781a      	ldrb	r2, [r3, #0]
2ffe333a:	4618      	mov	r0, r3
2ffe333c:	3301      	adds	r3, #1
2ffe333e:	428a      	cmp	r2, r1
2ffe3340:	d002      	beq.n	2ffe3348 <strchr+0x14>
2ffe3342:	2a00      	cmp	r2, #0
2ffe3344:	d1f8      	bne.n	2ffe3338 <strchr+0x4>
2ffe3346:	4610      	mov	r0, r2
2ffe3348:	4770      	bx	lr

2ffe334a <strcmp>:
2ffe334a:	1e43      	subs	r3, r0, #1
2ffe334c:	f813 0f01 	ldrb.w	r0, [r3, #1]!
2ffe3350:	f811 2b01 	ldrb.w	r2, [r1], #1
2ffe3354:	4290      	cmp	r0, r2
2ffe3356:	d001      	beq.n	2ffe335c <strcmp+0x12>
2ffe3358:	1a80      	subs	r0, r0, r2
2ffe335a:	e001      	b.n	2ffe3360 <strcmp+0x16>
2ffe335c:	2800      	cmp	r0, #0
2ffe335e:	d1f5      	bne.n	2ffe334c <strcmp+0x2>
2ffe3360:	4770      	bx	lr

2ffe3362 <strlen>:
2ffe3362:	4603      	mov	r3, r0
2ffe3364:	461a      	mov	r2, r3
2ffe3366:	3301      	adds	r3, #1
2ffe3368:	7811      	ldrb	r1, [r2, #0]
2ffe336a:	2900      	cmp	r1, #0
2ffe336c:	d1fa      	bne.n	2ffe3364 <strlen+0x2>
2ffe336e:	1a10      	subs	r0, r2, r0
2ffe3370:	4770      	bx	lr

2ffe3372 <strncmp>:
2ffe3372:	4603      	mov	r3, r0
2ffe3374:	4610      	mov	r0, r2
2ffe3376:	b510      	push	{r4, lr}
2ffe3378:	b142      	cbz	r2, 2ffe338c <strncmp+0x1a>
2ffe337a:	188c      	adds	r4, r1, r2
2ffe337c:	3b01      	subs	r3, #1
2ffe337e:	f813 0f01 	ldrb.w	r0, [r3, #1]!
2ffe3382:	f811 2b01 	ldrb.w	r2, [r1], #1
2ffe3386:	4290      	cmp	r0, r2
2ffe3388:	d001      	beq.n	2ffe338e <strncmp+0x1c>
2ffe338a:	1a80      	subs	r0, r0, r2
2ffe338c:	bd10      	pop	{r4, pc}
2ffe338e:	2800      	cmp	r0, #0
2ffe3390:	d0fc      	beq.n	2ffe338c <strncmp+0x1a>
2ffe3392:	428c      	cmp	r4, r1
2ffe3394:	d1f3      	bne.n	2ffe337e <strncmp+0xc>
2ffe3396:	2000      	movs	r0, #0
2ffe3398:	e7f8      	b.n	2ffe338c <strncmp+0x1a>

2ffe339a <strnlen>:
2ffe339a:	4603      	mov	r3, r0
2ffe339c:	2000      	movs	r0, #0
2ffe339e:	4288      	cmp	r0, r1
2ffe33a0:	d100      	bne.n	2ffe33a4 <strnlen+0xa>
2ffe33a2:	4770      	bx	lr
2ffe33a4:	5c1a      	ldrb	r2, [r3, r0]
2ffe33a6:	2a00      	cmp	r2, #0
2ffe33a8:	d0fb      	beq.n	2ffe33a2 <strnlen+0x8>
2ffe33aa:	3001      	adds	r0, #1
2ffe33ac:	e7f7      	b.n	2ffe339e <strnlen+0x4>

2ffe33ae <strrchr>:
2ffe33ae:	4603      	mov	r3, r0
2ffe33b0:	b2c9      	uxtb	r1, r1
2ffe33b2:	2000      	movs	r0, #0
2ffe33b4:	b510      	push	{r4, lr}
2ffe33b6:	461c      	mov	r4, r3
2ffe33b8:	f813 2b01 	ldrb.w	r2, [r3], #1
2ffe33bc:	428a      	cmp	r2, r1
2ffe33be:	bf08      	it	eq
2ffe33c0:	4620      	moveq	r0, r4
2ffe33c2:	2a00      	cmp	r2, #0
2ffe33c4:	d1f7      	bne.n	2ffe33b6 <strrchr+0x8>
2ffe33c6:	bd10      	pop	{r4, pc}

2ffe33c8 <build_message>:
2ffe33c8:	7542 6c69 2074 203a 3332 313a 3a34 3535     Built : 23:14:55
2ffe33d8:	202c 614d 2079 3731 3220 3230 0033          , May 17 2023.

2ffe33e6 <version_string>:
2ffe33e6:	3276 322e 722d 2e31 2830 6564 7562 2967     v2.2-r1.0(debug)
2ffe33f6:	333a 3836 6461 6136 6332 642d 7269 7974     :368ad6a2c-dirty
2ffe3406:	6400 6972 6576 7372 692f 2f6f 6f69 625f     .drivers/io/io_b
2ffe3416:	6f6c 6b63 632e 0000 0000                    lock.c....

2ffe3420 <block_dev_connector>:
2ffe3420:	6b91 2ffd                                   .k./

2ffe3424 <block_dev_funcs>:
2ffe3424:	6971 2ffd 6c69 2ffd 6c09 2ffd 0000 0000     qi./il./.l./....
2ffe3434:	6a9d 2ffd 697d 2ffd 6975 2ffd 0000 0000     .j./}i./ui./....
2ffe3444:	6cb5 2ffd 7264 7669 7265 2f73 6f69 692f     .l./drivers/io/i
2ffe3454:	5f6f 7564 6d6d 2e79 0063 411e 4420 6d75     o_dummy.c..A Dum
2ffe3464:	796d 6420 7665 6369 2065 7369 6120 726c     my device is alr
2ffe3474:	6165 7964 6120 7463 7669 2e65 4320 6f6c     eady active. Clo
2ffe3484:	6573 6620 7269 7473 0a2e 0000               se first....

2ffe3490 <dummy_dev_connector>:
2ffe3490:	6d31 2ffd                                   1m./

2ffe3494 <dummy_dev_funcs>:
2ffe3494:	6d29 2ffd 6da5 2ffd 0000 0000 6d85 2ffd     )m./.m./.....m./
2ffe34a4:	6d6d 2ffd 0000 0000 6d4d 2ffd 0000 0000     mm./....Mm./....
2ffe34b4:	6d2d 2ffd                                   -m./

2ffe34b8 <dummy_dev_info>:
2ffe34b8:	3494 2ffe 0000 0000 7264 7669 7265 2f73     .4./....drivers/
2ffe34c8:	6f69 692f 5f6f 746d 2e64 0063               io/io_mtd.c.

2ffe34d4 <mtd_dev_connector>:
2ffe34d4:	6f5d 2ffd                                   ]o./

2ffe34d8 <mtd_dev_funcs>:
2ffe34d8:	6e09 2ffd 6f0d 2ffd 6e99 2ffd 0000 0000     .n./.o./.n./....
2ffe34e8:	6e15 2ffd 0000 0000 6e0d 2ffd 0000 0000     .n./.....n./....
2ffe34f8:	6f31 2ffd 7264 7669 7265 2f73 6f69 692f     1o./drivers/io/i
2ffe3508:	5f6f 7473 726f 6761 2e65 0063 250a 3a73     o_storage.c..%s:
2ffe3518:	6220 7375 2079 6974 656d 756f 0a74 6400      busy timeout..d
2ffe3528:	6972 6576 7372 732f 2f74 7263 7079 6f74     rivers/st/crypto
2ffe3538:	732f 6d74 3233 685f 7361 2e68 0063 7473     /stm32_hash.c.st
2ffe3548:	732c 6d74 3233 3766 3635 682d 7361 0068     ,stm32f756-hash.

2ffe3558 <__func__.7019>:
2ffe3558:	6168 6873 775f 6961 5f74 7562 7973           hash_wait_busy.

2ffe3567 <__func__.7027>:
2ffe3567:	6168 6873 775f 6961 5f74 6f63 706d 7475     hash_wait_comput
2ffe3577:	7461 6f69 006e 530a 4d54 3233 4920 616d     ation..STM32 Ima
2ffe3587:	6567 6920 206f 7573 7070 726f 7374 6f20     ge io supports o
2ffe3597:	6c6e 2079 6e6f 2065 6573 7373 6f69 0a6e     nly one session.
2ffe35a7:	0a00 5453 334d 2032 6d69 6761 2065 7265     ..STM32 image er
2ffe35b7:	6f72 2072 2528 2969 000a 7264 7669 7265     ror (%i)..driver
2ffe35c7:	2f73 7473 692f 2f6f 6f69 735f 6d74 3233     s/st/io/io_stm32
2ffe35d7:	6d69 6761 2e65 0063 570a 6f72 676e 6c20     image.c..Wrong l
2ffe35e7:	616f 2064 6461 7264 7365 0a73 0a00 7325     oad address...%s
2ffe35f7:	203a 6f69 6f5f 6570 206e 2528 2969 000a     : io_open (%i)..
2ffe3607:	250a 3a73 6920 5f6f 6573 6b65 2820 6925     .%s: io_seek (%i
2ffe3617:	0a29 0a00 7325 203a 6f69 725f 6165 2064     )...%s: io_read 
2ffe3627:	2528 2969 000a 5328 4d54 3233 4920 616d     (%i)..(STM32 Ima
2ffe3637:	6567 7320 7a69 2065 203a 6c25 0a75 0a00     ge size : %lu...
2ffe3647:	7257 6e6f 2067 6170 7472 7469 6f69 206e     Wrong partition 
2ffe3657:	6e69 6564 2078 2528 2964 000a               index (%d)..

2ffe3663 <__func__.7190>:
2ffe3663:	7473 336d 6932 616d 6567 705f 7261 6974     stm32image_parti
2ffe3673:	6974 6e6f 735f 7a69 0065                    tion_size.

2ffe367d <__func__.7204>:
2ffe367d:	7473 336d 6932 616d 6567 705f 7261 6974     stm32image_parti
2ffe368d:	6974 6e6f 725f 6165 0064                     tion_read..

2ffe3698 <stm32image_dev_connector>:
2ffe3698:	77e9 2ffd                                   .w./

2ffe369c <stm32image_dev_funcs>:
2ffe369c:	7591 2ffd 7831 2ffd 0000 0000 76fd 2ffd     .u./1x./.....v./
2ffe36ac:	7601 2ffd 0000 0000 75b1 2ffd 75bd 2ffd     .v./.....u./.u./
2ffe36bc:	7595 2ffd 531e 4d44 434d 6920 736e 6174     .u./.SDMMC insta
2ffe36cc:	636e 2065 6f6e 2074 6f66 6e75 2c64 7520     nce not found, u
2ffe36dc:	6973 676e 6420 6665 7561 746c 000a 530a     sing default...S
2ffe36ec:	4d44 434d 7525 6920 696e 2074 6166 6c69     DMMC%u init fail
2ffe36fc:	6465 000a 6c70 7461 732f 2f74 6f63 6d6d     ed..plat/st/comm
2ffe370c:	6e6f 622f 326c 695f 5f6f 7473 726f 6761     on/bl2_io_storag
2ffe371c:	2e65 0063 500a 7261 6974 6974 6e6f 2520     e.c..Partition %
2ffe372c:	2073 6f6e 2074 6f66 6e75 0a64 2800 7355     s not found..(Us
2ffe373c:	6e69 2067 4453 4d4d 0a43 2800 7355 6e69     ing SDMMC..(Usin
2ffe374c:	2067 4d45 434d 000a 5528 6973 676e 5120     g EMMC..(Using Q
2ffe375c:	5053 2049 4f4e 0a52 2800 7355 6e69 2067     SPI NOR..(Using 
2ffe376c:	4d46 2043 414e 444e 000a 5528 6973 676e     FMC NAND..(Using
2ffe377c:	5320 4950 4e20 4e41 0a44 2800 7355 6e69      SPI NAND..(Usin
2ffe378c:	2067 4155 5452 000a 5528 6973 676e 5520     g UART..(Using U
2ffe379c:	4253 000a 420a 6f6f 2074 6e69 6574 6672     SB...Boot interf
2ffe37ac:	6361 2065 7525 6e20 746f 6620 756f 646e     ace %u not found
2ffe37bc:	000a 2028 4920 736e 6174 636e 2065 6425     ..(  Instance %d
2ffe37cc:	000a 4228 6f6f 2074 7375 6465 7020 7261     ..(Boot used par
2ffe37dc:	6974 6974 6e6f 6620 6273 256c 0a64 0a00     tition fsbl%d...
2ffe37ec:	6f42 746f 6920 746e 7265 6166 6563 2520     Boot interface %
2ffe37fc:	2064 6f6e 2074 7573 7070 726f 6574 0a64     d not supported.
2ffe380c:	0000 0000                                   ....

2ffe3810 <bl2_block_spec>:
2ffe3810:	6000 2ffd 7000 0001                         .`./.p..

2ffe3818 <bl32_block_spec>:
2ffe3818:	d000 2ffe 2000 0001                         .../. ..

2ffe3820 <bl33_partition_spec>:
2ffe3820:	7373 6c62 0000 0000 0000 0000 0000 0000     ssbl............
	...

2ffe3854 <mmc_block_dev_spec>:
2ffe3854:	7e00 2ffe 0200 0000 8be5 2ffd 0000 0000     .~./......./....
2ffe3864:	0200 0000                                   ....

2ffe3868 <policies>:
	...
2ffe3874:	8dc8 2ffe 3810 2ffe 7a0d 2ffd 0000 0000     .../.8./.z./....
	...
2ffe3898:	8dc8 2ffe 3818 2ffe 7a0d 2ffd 8dcc 2ffe     .../.8./.z./.../
2ffe38a8:	3820 2ffe 79fd 2ffd 0000 0000 0000 0000      8./.y./........
	...
2ffe39b8:	8de8 2ffe 700c 2ffe 79ed 2ffd 8de8 2ffe     .../.p./.y./.../
2ffe39c8:	8ddc 2ffe 79ed 2ffd 6c70 7461 732f 2f74     .../.y./plat/st/
2ffe39d8:	7473 336d 6d32 3170 622f 326c 705f 616c     stm32mp1/bl2_pla
2ffe39e8:	5f74 6573 7574 2e70 0063 490a 766e 6c61     t_setup.c..Inval
2ffe39f8:	6469 4420 5244 6920 696e 3a74 6520 7272     id DDR init: err
2ffe3a08:	726f 2520 0a64 2800 4c42 2032 7572 736e     or %d..(BL2 runs
2ffe3a18:	5320 5f50 494d 204e 6573 7574 0a70 6600      SP_MIN setup..f
2ffe3a28:	6961 656c 0064 7573 6363 6565 6564 0064     ailed.succeeded.
2ffe3a38:	4d14 646f 6c65 203a 7325 000a 4214 6f6f     .Model: %s...Boo
2ffe3a48:	7274 6d6f 6120 7475 6568 746e 6369 7461     trom authenticat
2ffe3a58:	6f69 206e 7325 000a 4928 4457 3247 6620     ion %s..(IWDG2 f
2ffe3a68:	6572 7a65 2065 7265 6f72 2072 203a 6925     reeze error : %i
2ffe3a78:	000a 0a14 7325 0a00 6143 6e6e 746f 7320     ....%s..Cannot s
2ffe3a88:	7661 2065 6f62 746f 6920 746e 7265 6166     ave boot interfa
2ffe3a98:	6563 000a 521e 7365 7465 7220 6165 6f73     ce...Reset reaso
2ffe3aa8:	206e 6e75 6e6b 776f 0a6e 2800 6552 6573     n unknown..(Rese
2ffe3ab8:	2074 6572 7361 6e6f 2820 7830 7825 3a29     t reason (0x%x):
2ffe3ac8:	000a 5328 7379 6574 206d 7865 7469 2073     ..(System exits 
2ffe3ad8:	7266 6d6f 5320 4154 444e 5942 000a 4d28     from STANDBY..(M
2ffe3ae8:	5550 6520 6978 7374 6620 6f72 206d 5343     PU exits from CS
2ffe3af8:	4154 444e 5942 000a 2028 5020 776f 7265     TANDBY..(  Power
2ffe3b08:	6f2d 206e 6552 6573 2074 7228 7473 705f     -on Reset (rst_p
2ffe3b18:	726f 0a29 2800 2020 7242 776f 6f6e 7475     or)..(  Brownout
2ffe3b28:	5220 7365 7465 2820 7372 5f74 6f62 2972      Reset (rst_bor)
2ffe3b38:	000a 2028 5320 7379 6574 206d 6572 6573     ..(  System rese
2ffe3b48:	2074 6567 656e 6172 6574 2064 7962 4d20     t generated by M
2ffe3b58:	5543 2820 434d 5953 5253 5453 0a29 2800     CU (MCSYSRST)..(
2ffe3b68:	2020 6f4c 6163 206c 6572 6573 2074 6567       Local reset ge
2ffe3b78:	656e 6172 6574 2064 7962 4d20 5543 2820     nerated by MCU (
2ffe3b88:	434d 5953 5253 5453 0a29 2800 2020 7953     MCSYSRST)..(  Sy
2ffe3b98:	7473 6d65 7220 7365 7465 6720 6e65 7265     stem reset gener
2ffe3ba8:	7461 6465 6220 2079 504d 2055 4d28 5350     ated by MPU (MPS
2ffe3bb8:	5359 5352 2954 000a 2028 5220 7365 7465     YSRST)..(  Reset
2ffe3bc8:	6420 6575 7420 206f 2061 6c63 636f 206b      due to a clock 
2ffe3bd8:	6166 6c69 7275 2065 6e6f 4820 4553 000a     failure on HSE..
2ffe3be8:	2028 4920 4457 3147 5220 7365 7465 2820     (  IWDG1 Reset (
2ffe3bf8:	7372 5f74 7769 6764 2931 000a 2028 4920     rst_iwdg1)..(  I
2ffe3c08:	4457 3247 5220 7365 7465 2820 7372 5f74     WDG2 Reset (rst_
2ffe3c18:	7769 6764 2932 000a 2028 4d20 5550 5020     iwdg2)..(  MPU P
2ffe3c28:	6f72 6563 7373 726f 3020 5220 7365 7465     rocessor 0 Reset
2ffe3c38:	000a 2028 4d20 5550 5020 6f72 6563 7373     ..(  MPU Process
2ffe3c48:	726f 3120 5220 7365 7465 000a 2028 5020     or 1 Reset..(  P
2ffe3c58:	6461 5220 7365 7465 6620 6f72 206d 524e     ad Reset from NR
2ffe3c68:	5453 000a 2028 5220 7365 7465 6420 6575     ST..(  Reset due
2ffe3c78:	7420 206f 2061 6166 6c69 7275 2065 666f      to a failure of
2ffe3c88:	5620 4444 435f 524f 0a45 0a00 2020 6e55      VDD_CORE...  Un
2ffe3c98:	6469 6e65 6974 6966 6465 7220 7365 7465     identified reset
2ffe3ca8:	7220 6165 6f73 0a6e 6d00 6e6f 746f 6e6f      reason..monoton
2ffe3cb8:	6369 6f5f 7074 0a00 5342 4345 203a 4f4d     ic_otp..BSEC: MO
2ffe3cc8:	4f4e 4f54 494e 5f43 544f 2050 7270 676f     NOTONIC_OTP prog
2ffe3cd8:	6172 206d 7245 6f72 2072 6925 000a 4d28     ram Error %i..(M
2ffe3ce8:	6e6f 746f 6e6f 6369 6320 756f 746e 7265     onotonic counter
2ffe3cf8:	6820 7361 6220 6565 206e 6e69 7263 6d65      has been increm
2ffe3d08:	6e65 6574 2064 7628 6c61 6575 3020 2578     ented (value 0x%
2ffe3d18:	2978 000a                                   x)..

2ffe3d1c <debug_msg>:
2ffe3d1c:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2ffe3d2c:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2ffe3d3c:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2ffe3d4c:	2a2a 0a2a 2a2a 4e20 544f 4349 2045 2020     ***.** NOTICE   
2ffe3d5c:	4f4e 4954 4543 2020 4e20 544f 4349 2045     NOTICE   NOTICE 
2ffe3d6c:	2020 4f4e 4954 4543 2020 4e20 544f 4349       NOTICE   NOTIC
2ffe3d7c:	2045 2020 2a20 0a2a 2a2a 2020 2020 2020     E    **.**      
2ffe3d8c:	2020 2020 2020 2020 2020 2020 2020 2020                     
2ffe3d9c:	2020 2020 2020 2020 2020 2020 2020 2020                     
2ffe3dac:	2020 2020 2020 2020 2a20 0a2a 2a2a 4420              **.** D
2ffe3dbc:	4245 4755 4120 4343 5345 2053 4f50 5452     EBUG ACCESS PORT
2ffe3dcc:	4920 2053 504f 4e45 2021 2020 2020 2020      IS OPEN!       
2ffe3ddc:	2020 2020 2020 2020 2020 2020 2a20 0a2a                  **.
2ffe3dec:	2a2a 5420 6968 2073 6f62 746f 6920 616d     ** This boot ima
2ffe3dfc:	6567 6920 2073 6e6f 796c 6620 726f 6420     ge is only for d
2ffe3e0c:	6265 6775 6967 676e 7020 7275 6f70 6573     ebugging purpose
2ffe3e1c:	2a20 0a2a 2a2a 6120 646e 6920 2073 6e75      **.** and is un
2ffe3e2c:	6173 6566 6620 726f 7020 6f72 7564 7463     safe for product
2ffe3e3c:	6f69 206e 7375 2e65 2020 2020 2020 2020     ion use.        
2ffe3e4c:	2020 2020 2a20 0a2a 2a2a 2020 2020 2020          **.**      
2ffe3e5c:	2020 2020 2020 2020 2020 2020 2020 2020                     
2ffe3e6c:	2020 2020 2020 2020 2020 2020 2020 2020                     
2ffe3e7c:	2020 2020 2020 2020 2a20 0a2a 2a2a 4920              **.** I
2ffe3e8c:	2066 6f79 2075 6573 2065 6874 7369 6d20     f you see this m
2ffe3e9c:	7365 6173 6567 6120 646e 7920 756f 6120     essage and you a
2ffe3eac:	6572 6e20 746f 2020 2020 2020 2a20 0a2a     re not       **.
2ffe3ebc:	2a2a 6420 6265 6775 6967 676e 7220 7065     ** debugging rep
2ffe3ecc:	726f 2074 6874 7369 6920 6d6d 6465 6169     ort this immedia
2ffe3edc:	6574 796c 7420 206f 6f79 7275 2020 2020     tely to your    
2ffe3eec:	2a20 0a2a 2a2a 7620 6e65 6f64 2172 2020      **.** vendor!  
2ffe3efc:	2020 2020 2020 2020 2020 2020 2020 2020                     
2ffe3f0c:	2020 2020 2020 2020 2020 2020 2020 2020                     
2ffe3f1c:	2020 2020 2a20 0a2a 2a2a 2020 2020 2020          **.**      
2ffe3f2c:	2020 2020 2020 2020 2020 2020 2020 2020                     
2ffe3f3c:	2020 2020 2020 2020 2020 2020 2020 2020                     
2ffe3f4c:	2020 2020 2020 2020 2a20 0a2a 2a2a 2a2a              **.****
2ffe3f5c:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2ffe3f6c:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a     ****************
2ffe3f7c:	2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 2a2a 0a2a     ***************.
2ffe3f8c:	0000 7264 7669 7265 2f73 7561 6874 612f     ..drivers/auth/a
2ffe3f9c:	7475 5f68 6f6d 2e64 0063 5214 544f 4b50     uth_mod.c..ROTPK
2ffe3fac:	6920 2073 6f6e 2074 6564 6c70 796f 6465      is not deployed
2ffe3fbc:	6f20 206e 6c70 7461 6f66 6d72 202e 6b53      on platform. Sk
2ffe3fcc:	7069 6970 676e 5220 544f 4b50 7620 7265     ipping ROTPK ver
2ffe3fdc:	6669 6369 7461 6f69 2e6e 000a 7264 7669     ification...driv
2ffe3fec:	7265 2f73 7561 6874 632f 7972 7470 5f6f     ers/auth/crypto_
2ffe3ffc:	6f6d 2e64 0063 5528 6973 676e 6320 7972     mod.c.(Using cry
2ffe400c:	7470 206f 696c 7262 7261 2079 2527 2773     pto library '%s'
2ffe401c:	000a 7264 7669 7265 2f73 7561 6874 692f     ..drivers/auth/i
2ffe402c:	676d 705f 7261 6573 5f72 6f6d 2e64 0063     mg_parser_mod.c.

2ffe403c <__compound_literal.0>:
	...

2ffe408c <__compound_literal.1>:
2ffe408c:	0002 0000 70a8 2ffe 70b0 2ffe 70b8 2ffe     .....p./.p./.p./
2ffe409c:	70c0 2ffe 0000 0000 0000 0000 0000 0000     .p./............
	...

2ffe40dc <bl32_image>:
2ffe40dc:	0004 0000 0000 0000 0000 0000 403c 2ffe     ............<@./
2ffe40ec:	0000 0000                                   ....

2ffe40f0 <bl33_image>:
2ffe40f0:	0005 0000 0001 0000 0000 0000 408c 2ffe     .............@./
2ffe4100:	0000 0000                                   ....

2ffe4104 <cot_desc>:
	...
2ffe4114:	40dc 2ffe 40f0 2ffe                         .@./.@./

2ffe411c <cot_desc_ptr>:
2ffe411c:	4104 2ffe 531e 696b 2070 6973 6e67 7461     .A./.Skip signat
2ffe412c:	7275 2065 6863 6365 206b 6828 6165 6564     ure check (heade
2ffe413c:	2072 706f 6974 6e6f 0a29 2800 6843 6365     r option)..(Chec
2ffe414c:	206b 6973 6e67 7461 7275 2065 6e6f 4f20     k signature on O
2ffe415c:	6570 206e 6564 6976 6563 000a 520a 544f     pen device...ROT
2ffe416c:	4b50 7620 7265 6669 6369 7461 6f69 206e     PK verification 
2ffe417c:	6166 6c69 6465 000a 5214 544f 4b50 7620     failed...ROTPK v
2ffe418c:	7265 6669 6369 7461 6f69 206e 6f66 6372     erification forc
2ffe419c:	6465 6120 646e 6320 6568 6b63 6465 4f20     ed and checked O
2ffe41ac:	0a4b 7300 6d74 3233 635f 7972 7470 5f6f     K..stm32_crypto_
2ffe41bc:	696c 0062                                   lib.

2ffe41c0 <crypto_lib_desc>:
2ffe41c0:	41af 2ffe 892d 2ffd 882d 2ffd 87e5 2ffd     .A./-../-../.../
2ffe41d0:	7473 336d 5f32 6d69 5f67 6170 7372 7265     stm32_img_parser
2ffe41e0:	6c5f 6269 7000 686b 6f5f 7074 0a00 4d43     _lib.pkh_otp..CM
2ffe41f0:	3144 2033 6166 6c69 6465 6120 7466 7265     D13 failed after
2ffe4200:	2520 2064 6572 7274 6569 0a73 6400 6972      %d retries..dri
2ffe4210:	6576 7372 6d2f 636d 6d2f 636d 632e 0a00     vers/mmc/mmc.c..
2ffe4220:	4d43 3144 6620 6961 656c 2064 6661 6574     CMD1 failed afte
2ffe4230:	2072 6425 7220 7465 6972 7365 000a 410a     r %d retries...A
2ffe4240:	4d43 3444 2031 6166 6c69 6465 6120 7466     CMD41 failed aft
2ffe4250:	7265 2520 2064 6572 7274 6569 0a73 1e00     er %d retries...
2ffe4260:	7257 6e6f 2067 7562 2073 6f63 666e 6769     Wrong bus config
2ffe4270:	6620 726f 5320 2d44 6163 6472 202c 6f66      for SD-card, fo
2ffe4280:	6372 2065 6f74 3420 000a 410a 4d43 3544     rce to 4...ACMD5
2ffe4290:	2031 6166 6c69 6465 6120 7466 7265 2520     1 failed after %
2ffe42a0:	2064 6572 7274 6569 2073 7228 7465 253d     d retries (ret=%
2ffe42b0:	2964 000a                                   d)..

2ffe42b4 <sd_tran_speed_base>:
2ffe42b4:	0a00 0d0c 140f 1e19 2823 322d 3c37 5046     ........#(-27<FP

2ffe42c4 <tran_speed_base>:
2ffe42c4:	0a00 0d0c 140f 1e1a 2823 342d 3c37 5046     ........#(-47<FP
2ffe42d4:	7264 7669 7265 2f73 6170 7472 7469 6f69     drivers/partitio
2ffe42e4:	2f6e 7067 2e74 0063 461e 6961 656c 2064     n/gpt.c..Failed 
2ffe42f4:	6f74 6f20 7462 6961 206e 6572 6566 6572     to obtain refere
2ffe4304:	636e 2065 6f74 6920 616d 6567 6920 3d64     nce to image id=
2ffe4314:	7525 2820 6925 0a29 1e00 6146 6c69 6465     %u (%i)...Failed
2ffe4324:	7420 206f 6361 6563 7373 6920 616d 6567      to access image
2ffe4334:	6920 3d64 7525 2820 6925 0a29 1e00 6146      id=%u (%i)...Fa
2ffe4344:	6c69 6465 7420 206f 6573 6b65 2820 6925     iled to seek (%i
2ffe4354:	0a29 1e00 6146 6c69 6465 7420 206f 6572     )...Failed to re
2ffe4364:	6461 6420 7461 2061 2528 2969 000a 4645     ad data (%i)..EF
2ffe4374:	2049 4150 5452 6400 6972 6576 7372 702f     I PART.drivers/p
2ffe4384:	7261 6974 6974 6e6f 702f 7261 6974 6974     artition/partiti
2ffe4394:	6e6f 632e 6400 6972 6576 7372 732f 2f74     on.c.drivers/st/
2ffe43a4:	6f69 692f 5f6f 6d6d 2e63 0063               io/io_mmc.c.

2ffe43b0 <mmc_dev_connector>:
2ffe43b0:	9525 2ffd                                   %../

2ffe43b4 <mmc_dev_funcs>:
2ffe43b4:	9479 2ffd 9481 2ffd 9491 2ffd 0000 0000     y../.../.../....
2ffe43c4:	94a9 2ffd 0000 0000 94a5 2ffd 947d 2ffd     .../......./}../
2ffe43d4:	9541 2ffd                                   A../

2ffe43d8 <mmc_dev_info>:
2ffe43d8:	43b4 2ffe 0000 0000 5328 4d44 434d 505f     .C./....(SDMMC_P
2ffe43e8:	574f 5245 2020 2020 203d 7830 7825 000a     OWER    = 0x%x..
2ffe43f8:	5328 4d44 434d 435f 4b4c 5243 2020 2020     (SDMMC_CLKCR    
2ffe4408:	203d 7830 7825 000a 5328 4d44 434d 415f     = 0x%x..(SDMMC_A
2ffe4418:	4752 2052 2020 2020 203d 7830 7825 000a     RGR     = 0x%x..
2ffe4428:	5328 4d44 434d 435f 444d 2052 2020 2020     (SDMMC_CMDR     
2ffe4438:	203d 7830 7825 000a 5328 4d44 434d 525f     = 0x%x..(SDMMC_R
2ffe4448:	5345 4350 444d 2052 203d 7830 7825 000a     ESPCMDR = 0x%x..
2ffe4458:	5328 4d44 434d 525f 5345 3150 2052 2020     (SDMMC_RESP1R   
2ffe4468:	203d 7830 7825 000a 5328 4d44 434d 525f     = 0x%x..(SDMMC_R
2ffe4478:	5345 3250 2052 2020 203d 7830 7825 000a     ESP2R   = 0x%x..
2ffe4488:	5328 4d44 434d 525f 5345 3350 2052 2020     (SDMMC_RESP3R   
2ffe4498:	203d 7830 7825 000a 5328 4d44 434d 525f     = 0x%x..(SDMMC_R
2ffe44a8:	5345 3450 2052 2020 203d 7830 7825 000a     ESP4R   = 0x%x..
2ffe44b8:	5328 4d44 434d 445f 4954 454d 2052 2020     (SDMMC_DTIMER   
2ffe44c8:	203d 7830 7825 000a 5328 4d44 434d 445f     = 0x%x..(SDMMC_D
2ffe44d8:	454c 524e 2020 2020 203d 7830 7825 000a     LENR    = 0x%x..
2ffe44e8:	5328 4d44 434d 445f 5443 4c52 2052 2020     (SDMMC_DCTRLR   
2ffe44f8:	203d 7830 7825 000a 5328 4d44 434d 445f     = 0x%x..(SDMMC_D
2ffe4508:	4e43 5254 2020 2020 203d 7830 7825 000a     CNTR    = 0x%x..
2ffe4518:	5328 4d44 434d 4d5f 5341 524b 2020 2020     (SDMMC_MASKR    
2ffe4528:	203d 7830 7825 000a 5328 4d44 434d 415f     = 0x%x..(SDMMC_A
2ffe4538:	4b43 4954 454d 2052 203d 7830 7825 000a     CKTIMER = 0x%x..
2ffe4548:	7264 7669 7265 2f73 7473 6d2f 636d 732f     drivers/st/mmc/s
2ffe4558:	6d74 3233 735f 6d64 636d 2e32 0063 250a     tm32_sdmmc2.c..%
2ffe4568:	3a73 7420 6d69 6f65 7475 3120 6d30 2073     s: timeout 10ms 
2ffe4578:	6328 646d 3d20 2520 2c64 7473 7461 7375     (cmd = %d,status
2ffe4588:	3d20 2520 2978 000a 250a 3a73 4320 4954      = %x)...%s: CTI
2ffe4598:	454d 554f 2054 6328 646d 3d20 2520 2c64     MEOUT (cmd = %d,
2ffe45a8:	7473 7461 7375 3d20 2520 2978 000a 250a     status = %x)...%
2ffe45b8:	3a73 4320 4352 4146 4c49 2820 6d63 2064     s: CRCFAIL (cmd 
2ffe45c8:	203d 6425 732c 6174 7574 2073 203d 7825     = %d,status = %x
2ffe45d8:	0a29 0a00 7325 203a 7245 6f72 2072 6c66     )...%s: Error fl
2ffe45e8:	6761 2820 6d63 2064 203d 6425 732c 6174     ag (cmd = %d,sta
2ffe45f8:	7574 2073 203d 7825 0a29 1e00 4320 444d     tus = %x)... CMD
2ffe4608:	6425 202c 6552 7274 3a79 2520 2c64 4520     %d, Retry: %d, E
2ffe4618:	7272 726f 203a 6425 000a 250a 3a73 5220     rror: %d...%s: R
2ffe4628:	6165 2064 7265 6f72 2072 7328 6174 7574     ead error (statu
2ffe4638:	2073 203d 7825 0a29 0a00 7325 203a 6974     s = %x)...%s: ti
2ffe4648:	656d 756f 2074 7331 2820 7473 7461 7375     meout 1s (status
2ffe4658:	3d20 2520 2978 000a 251e 3a73 4420 5350      = %x)...%s: DPS
2ffe4668:	414d 5443 313d 202c 6573 646e 7320 6f74     MACT=1, send sto
2ffe4678:	0a70 0a00 4d43 3144 2036 6166 6c69 6465     p...CMD16 failed
2ffe4688:	000a 250a 3a73 4420 2054 7265 6f72 0a72     ...%s: DT error.
2ffe4698:	7300 2c74 7473 336d 2d32 6473 6d6d 3263     .st,stm32-sdmmc2
2ffe46a8:	7300 2c74 7375 2d65 6b63 6e69 7300 2c74     .st,use-ckin.st,
2ffe46b8:	6973 2d67 6964 0072 7473 6e2c 6765 652d     sig-dir.st,neg-e
2ffe46c8:	6764 0065 6d76 636d 732d 7075 6c70 0079     dge.vmmc-supply.

2ffe46d8 <__func__.7255>:
2ffe46d8:	7473 336d 5f32 6473 6d6d 3263 735f 6e65     stm32_sdmmc2_sen
2ffe46e8:	5f64 6d63 5f64 6572 0071                    d_cmd_req.

2ffe46f2 <__func__.7316>:
2ffe46f2:	7473 336d 5f32 6473 6d6d 3263 725f 6165     stm32_sdmmc2_rea
2ffe4702:	0064                                        d.

2ffe4704 <__func__.7345>:
2ffe4704:	7473 336d 5f32 6473 6d6d 3263 6d5f 636d     stm32_sdmmc2_mmc
2ffe4714:	695f 696e 0074 0000                         _init...

2ffe471c <stm32_sdmmc2_ops>:
2ffe471c:	96b1 2ffd 9745 2ffd 9635 2ffd 9b49 2ffd     .../E../5../I../
2ffe472c:	9a19 2ffd 956d 2ffd 4e4f 4946 1e00 7245     .../m../ONFI..Er
2ffe473c:	6f72 2072 4e4f 4946 6420 7465 6365 6974     ror ONFI detecti
2ffe474c:	6e6f 000a 451e 7272 726f 7220 6165 6964     on...Error readi
2ffe475c:	676e 7020 7261 6d61 000a 421e 6f6c 6b63     ng param...Block
2ffe476c:	2520 2075 7369 6220 6461 000a 4e1e 4e41      %u is bad...NAN
2ffe477c:	2044 6f4e 206e 4e4f 4946 6420 7465 6365     D Non ONFI detec
2ffe478c:	6574 0a64 1e00 6544 6574 7463 4f20 464e     ted...Detect ONF
2ffe479c:	2049 6166 6c69 6465 000a 7264 7669 7265     I failed..driver
2ffe47ac:	2f73 746d 2f64 616e 646e 722f 7761 6e5f     s/mtd/nand/raw_n
2ffe47bc:	6e61 2e64 0063 250a 3a73 5520 636e 726f     and.c..%s: Uncor
2ffe47cc:	6572 7463 6261 656c 4520 4343 4520 7272     rectable ECC Err
2ffe47dc:	726f 0a73 0a00 7325 203a 6148 6d6d 6e69     ors...%s: Hammin
2ffe47ec:	2067 6f63 7272 6365 6974 6e6f 6520 7272     g correction err
2ffe47fc:	726f 000a 7473 732c 6d74 3233 706d 3531     or..st,stm32mp15
2ffe480c:	662d 636d 0032 4e1e 206f 4d46 3243 6e20     -fmc2..No FMC2 n
2ffe481c:	646f 2065 6f66 6e75 0a64 1e00 6e4f 796c     ode found...Only
2ffe482c:	6f20 656e 5320 434c 4e20 4e41 2044 6564      one SLC NAND de
2ffe483c:	6976 6563 7320 7075 6f70 7472 6465 000a     vice supported..
2ffe484c:	431e 6968 2070 6573 656c 7463 6e20 746f     .Chip select not
2ffe485c:	7720 6c65 206c 6564 6966 656e 0a64            well defined..

2ffe486b <__func__.6688>:
2ffe486b:	7473 336d 5f32 6d66 3263 685f 6d61 635f     stm32_fmc2_ham_c
2ffe487b:	726f 6572 7463 0000                          orrect...

2ffe4884 <ctrl_ops>:
2ffe4884:	a32d 2ffd a2c1 2ffd 421e 6f6c 6b63 2520     -../.../.Block %
2ffe4894:	2069 7369 6220 6461 000a 7264 7669 7265     i is bad..driver
2ffe48a4:	2f73 746d 2f64 6f6e 2f72 7073 5f69 6f6e     s/mtd/nor/spi_no
2ffe48b4:	2e72 0063 4528 616e 6c62 2065 614d 7263     r.c.(Enable Macr
2ffe48c4:	6e6f 7869 7120 6175 2064 7573 7070 726f     onix quad suppor
2ffe48d4:	0a74 1e00 7245 6f72 2072 6e69 7320 6970     t...Error in spi
2ffe48e4:	6d5f 6d65 735f 7075 6f70 7472 000a 451e     _mem_support...E
2ffe48f4:	7272 726f 6320 616c 6d69 625f 7375 000a     rror claim_bus..
2ffe4904:	4f0a 6c6e 2079 6e6f 2065 5053 2049 6564     .Only one SPI de
2ffe4914:	6976 6563 6920 2073 7563 7272 6e65 6c74     vice is currentl
2ffe4924:	2079 7573 7070 726f 6574 0a64 0a00 6843     y supported...Ch
2ffe4934:	7069 7320 6c65 6365 2074 6f6e 2074 6577     ip select not we
2ffe4944:	6c6c 6420 6665 6e69 6465 000a 7073 2d69     ll defined..spi-
2ffe4954:	616d 2d78 7266 7165 6575 636e 0079 7073     max-frequency.sp
2ffe4964:	2d69 7063 6c6f 7300 6970 632d 6870 0061     i-cpol.spi-cpha.
2ffe4974:	7073 2d69 7363 682d 6769 0068 7073 2d69     spi-cs-high.spi-
2ffe4984:	7733 7269 0065 7073 2d69 6168 666c 642d     3wire.spi-half-d
2ffe4994:	7075 656c 0078 7073 2d69 7874 622d 7375     uplex.spi-tx-bus
2ffe49a4:	772d 6469 6874 1e00 7073 2d69 7874 622d     -width..spi-tx-b
2ffe49b4:	7375 772d 6469 6874 2520 2064 6f6e 2074     us-width %d not 
2ffe49c4:	7573 7070 726f 6574 0a64 7300 6970 722d     supported..spi-r
2ffe49d4:	2d78 7562 2d73 6977 7464 0068 731e 6970     x-bus-width..spi
2ffe49e4:	722d 2d78 7562 2d73 6977 7464 2068 6425     -rx-bus-width %d
2ffe49f4:	6e20 746f 7320 7075 6f70 7472 6465 000a      not supported..
2ffe4a04:	250a 3a73 6620 6669 206f 6974 656d 756f     .%s: fifo timeou
2ffe4a14:	0a74 0a00 7325 203a 7274 6e61 6673 7265     t...%s: transfer
2ffe4a24:	6520 7272 726f 000a 250a 3a73 6520 6578      error...%s: exe
2ffe4a34:	2063 706f 6520 7272 726f 000a 250a 3a73     c op error...%s:
2ffe4a44:	6320 646d 7420 6d69 6f65 7475 000a 7473      cmd timeout..st
2ffe4a54:	732c 6d74 3233 3466 3936 712d 7073 0069     ,stm32f469-qspi.
2ffe4a64:	4e0a 206f 5351 4950 6320 7274 206c 6f66     .No QSPI ctrl fo
2ffe4a74:	6e75 0a64 7100 7073 5f69 6d6d                und..qspi_mm.

2ffe4a81 <__func__.6560>:
2ffe4a81:	7473 336d 5f32 7371 6970 775f 6961 5f74     stm32_qspi_wait_
2ffe4a91:	6f66 5f72 6f6e 5f74 7562 7973                for_not_busy.

2ffe4a9e <__func__.6572>:
2ffe4a9e:	7473 336d 5f32 7371 6970 775f 6961 5f74     stm32_qspi_wait_
2ffe4aae:	6d63 0064                                   cmd.

2ffe4ab2 <__func__.6590>:
2ffe4ab2:	7473 336d 5f32 7371 6970 705f 6c6f 006c     stm32_qspi_poll.

2ffe4ac2 <__func__.6615>:
2ffe4ac2:	7473 336d 5f32 7371 6970 655f 6578 5f63     stm32_qspi_exec_
2ffe4ad2:	706f 0000 0000                              op....

2ffe4ad8 <stm32_qspi_bus_ops>:
2ffe4ad8:	b461 2ffd b489 2ffd b531 2ffd b4f5 2ffd     a../.../1../.../
2ffe4ae8:	b5a5 2ffd 616e 646e 6f5f 7074 0a00 5342     .../nand_otp..BS
2ffe4af8:	4345 203a 414e 444e 4f5f 5054 4520 7272     EC: NAND_OTP Err
2ffe4b08:	726f 000a 430a 6e61 6f6e 2074 6572 6461     or...Cannot read
2ffe4b18:	4e20 4e41 2044 6170 6567 7320 7a69 0a65      NAND page size.
2ffe4b28:	0a00 6143 6e6e 746f 7220 6165 2064 414e     ..Cannot read NA
2ffe4b38:	444e 6220 6f6c 6b63 7320 7a69 0a65 0a00     ND block size...
2ffe4b48:	6f4e 7620 6c61 6469 6520 6363 6962 2074     No valid eccbit 
2ffe4b58:	756e 626d 7265 000a 690a 766e 6c61 6469     number...invalid
2ffe4b68:	7020 7261 6d61 7465 7265 6f20 6666 6573      parameter offse
2ffe4b78:	2074 6f66 2072 7325 0a00 4444 2052 7974     t for %s..DDR ty
2ffe4b88:	6570 6e20 746f 7320 7075 6f70 7472 6465     pe not supported
2ffe4b98:	000a 7473 7461 6369 6400 3078 6c64 636c     ..static.dx0dllc
2ffe4ba8:	0072 7864 6430 7471 0072 7864 6430 7371     r.dx0dqtr.dx0dqs
2ffe4bb8:	7274 6400 3178 6c64 636c 0072 7864 6431     tr.dx1dllcr.dx1d
2ffe4bc8:	7471 0072 7864 6431 7371 7274 6400 3278     qtr.dx1dqstr.dx2
2ffe4bd8:	6c64 636c 0072 7864 6432 7471 0072 7864     dllcr.dx2dqtr.dx
2ffe4be8:	6432 7371 7274 6400 3378 6c64 636c 0072     2dqstr.dx3dllcr.
2ffe4bf8:	7864 6433 7471 0072 7864 6433 7371 7274     dx3dqtr.dx3dqstr
2ffe4c08:	7000 7274 0030 7470 3172 7000 7274 0032     .ptr0.ptr1.ptr2.
2ffe4c18:	7464 7270 0030 7464 7270 0031 7464 7270     dtpr0.dtpr1.dtpr
2ffe4c28:	0032 726d 0030 726d 0031 726d 0032 726d     2.mr0.mr1.mr2.mr
2ffe4c38:	0033 6770 7263 6100 6963 636f 0072 7864     3.pgcr.aciocr.dx
2ffe4c48:	6363 0072 7364 6367 0072 6364 0072 646f     ccr.dsgcr.dcr.od
2ffe4c58:	6374 0072 717a 6330 3172 6400 3078 6367     tcr.zq0cr1.dx0gc
2ffe4c68:	0072 7864 6731 7263 6400 3278 6367 0072     r.dx1gcr.dx2gcr.
2ffe4c78:	7864 6733 7263 7300 6863 6465 7300 6863     dx3gcr.sched.sch
2ffe4c88:	6465 0031 6570 6672 7068 3172 7000 7265     ed1.perfhpr1.per
2ffe4c98:	6c66 7270 0031 6570 6672 7277 0031 6370     flpr1.perfwr1.pc
2ffe4ca8:	6766 5f72 0030 6370 6766 5f77 0030 6370     fgr_0.pcfgw_0.pc
2ffe4cb8:	6766 6f71 3073 305f 7000 6663 7167 736f     fgqos0_0.pcfgqos
2ffe4cc8:	5f31 0030 6370 6766 7177 736f 5f30 0030     1_0.pcfgwqos0_0.
2ffe4cd8:	6370 6766 7177 736f 5f31 0030 6370 6766     pcfgwqos1_0.pcfg
2ffe4ce8:	5f72 0031 6370 6766 5f77 0031 6370 6766     r_1.pcfgw_1.pcfg
2ffe4cf8:	6f71 3073 315f 7000 6663 7167 736f 5f31     qos0_1.pcfgqos1_
2ffe4d08:	0031 6370 6766 7177 736f 5f30 0031 6370     1.pcfgwqos0_1.pc
2ffe4d18:	6766 7177 736f 5f31 0031 6461 7264 616d     fgwqos1_1.addrma
2ffe4d28:	3170 6100 6464 6d72 7061 0032 6461 7264     p1.addrmap2.addr
2ffe4d38:	616d 3370 6100 6464 6d72 7061 0034 6461     map3.addrmap4.ad
2ffe4d48:	7264 616d 3570 6100 6464 6d72 7061 0036     drmap5.addrmap6.
2ffe4d58:	6461 7264 616d 3970 6100 6464 6d72 7061     addrmap9.addrmap
2ffe4d68:	3031 6100 6464 6d72 7061 3131 7200 7366     10.addrmap11.rfs
2ffe4d78:	7468 676d 6400 6172 746d 676d 0030 7264     htmg.dramtmg0.dr
2ffe4d88:	6d61 6d74 3167 6400 6172 746d 676d 0032     amtmg1.dramtmg2.
2ffe4d98:	7264 6d61 6d74 3367 6400 6172 746d 676d     dramtmg3.dramtmg
2ffe4da8:	0034 7264 6d61 6d74 3567 6400 6172 746d     4.dramtmg5.dramt
2ffe4db8:	676d 0036 7264 6d61 6d74 3767 6400 6172     mg6.dramtmg7.dra
2ffe4dc8:	746d 676d 0038 7264 6d61 6d74 3167 0034     mtmg8.dramtmg14.
2ffe4dd8:	646f 6374 6766 6d00 6372 7274 306c 6d00     odtcfg.mrctrl0.m
2ffe4de8:	6372 7274 316c 6400 7265 7461 6565 006e     rctrl1.derateen.
2ffe4df8:	6564 6172 6574 6e69 0074 7770 6372 6c74     derateint.pwrctl
2ffe4e08:	7000 7277 6d74 0067 7768 706c 7463 006c     .pwrtmg.hwlpctl.
2ffe4e18:	6672 6873 7463 306c 7200 7366 6368 6c74     rfshctl0.rfshctl
2ffe4e28:	0033 7263 7063 7261 7463 306c 7a00 6371     3.crcparctl0.zqc
2ffe4e38:	6c74 0030 6664 7469 676d 0030 6664 7469     tl0.dfitmg0.dfit
2ffe4e48:	676d 0031 6664 6c69 6370 6766 0030 6664     mg1.dfilpcfg0.df
2ffe4e58:	7569 6470 0030 6664 7569 6470 0031 6664     iupd0.dfiupd1.df
2ffe4e68:	7569 6470 0032 6664 7069 7968 736d 7274     iupd2.dfiphymstr
2ffe4e78:	6f00 7464 616d 0070 6264 3067 6400 6762     .odtmap.dbg0.dbg
2ffe4e88:	0031 6264 6367 646d 7000 696f 6f73 636e     1.dbgcmd.poisonc
2ffe4e98:	6766 7000 6363 6766 0000 0000               fg.pccfg....

2ffe4ea4 <ddr_map>:
2ffe4ea4:	4d22 2ffe 0204 0000 4d2b 2ffe 0208 0004     "M./....+M./....
2ffe4eb4:	4d34 2ffe 020c 0008 4d3d 2ffe 0210 000c     4M./....=M./....
2ffe4ec4:	4d46 2ffe 0214 0010 4d4f 2ffe 0218 0014     FM./....OM./....
2ffe4ed4:	4d58 2ffe 0224 0018 4d61 2ffe 0228 001c     XM./$...aM./(...
2ffe4ee4:	4d6b 2ffe 022c 0020                         kM./,. .

2ffe4eec <ddr_perf>:
2ffe4eec:	4c7f 2ffe 0250 0000 4c85 2ffe 0254 0004     .L./P....L./T...
2ffe4efc:	4c8c 2ffe 025c 0008 4c95 2ffe 0264 000c     .L./\....L./d...
2ffe4f0c:	4c9e 2ffe 026c 0010 4ca6 2ffe 0404 0014     .L./l....L./....
2ffe4f1c:	4cae 2ffe 0408 0018 4cb6 2ffe 0494 001c     .L./.....L./....
2ffe4f2c:	4cc1 2ffe 0498 0020 4ccc 2ffe 049c 0024     .L./.. ..L./..$.
2ffe4f3c:	4cd8 2ffe 04a0 0028 4ce4 2ffe 04b4 002c     .L./..(..L./..,.
2ffe4f4c:	4cec 2ffe 04b8 0030 4cf4 2ffe 0544 0034     .L./..0..L./D.4.
2ffe4f5c:	4cff 2ffe 0548 0038 4d0a 2ffe 054c 003c     .L./H.8..M./L.<.
2ffe4f6c:	4d16 2ffe 0550 0040                         .M./P.@.

2ffe4f74 <ddr_reg>:
2ffe4f74:	4e74 2ffe 0000 0000 4ddf 2ffe 0010 0004     tN./.....M./....
2ffe4f84:	4de7 2ffe 0014 0008 4def 2ffe 0020 000c     .M./.....M./ ...
2ffe4f94:	4df8 2ffe 0024 0010 4e02 2ffe 0030 0014     .M./$....N./0...
2ffe4fa4:	4e09 2ffe 0034 0018 4e10 2ffe 0038 001c     .N./4....N./8...
2ffe4fb4:	4e18 2ffe 0050 0020 4e21 2ffe 0060 0024     .N./P. .!N./`.$.
2ffe4fc4:	4e2a 2ffe 00c0 0028 4e35 2ffe 0180 002c     *N./..(.5N./..,.
2ffe4fd4:	4e3c 2ffe 0190 0030 4e44 2ffe 0194 0034     <N./..0.DN./..4.
2ffe4fe4:	4e4c 2ffe 0198 0038 4e56 2ffe 01a0 003c     LN./..8.VN./..<.
2ffe4ff4:	4e5e 2ffe 01a4 0040 4e66 2ffe 01a8 0044     ^N./..@.fN./..D.
2ffe5004:	4e6e 2ffe 01c4 0048 4e79 2ffe 0244 004c     nN./..H.yN./D.L.
2ffe5014:	4e80 2ffe 0300 0050 4e85 2ffe 0304 0054     .N./..P..N./..T.
2ffe5024:	4e8a 2ffe 030c 0058 4e91 2ffe 036c 005c     .N./..X..N./l.\.
2ffe5034:	4e9b 2ffe 0400 0060                         .N./..`.

2ffe503c <ddr_registers>:
2ffe503c:	4b9a 2ffe 4f74 2ffe 0019 0000 0000 0000     .K./tO./........
2ffe504c:	5226 2ffe 50ac 2ffe 000c 0000 0000 0000     &R./.P./........
2ffe505c:	523f 2ffe 4eec 2ffe 0011 0000 0000 0000     ?R./.N./........
2ffe506c:	5234 2ffe 4ea4 2ffe 0009 0000 0000 0000     4R./.N./........
2ffe507c:	4b9a 2ffe 516c 2ffe 000b 0000 0001 0000     .K./lQ./........
2ffe508c:	5226 2ffe 51c4 2ffe 000a 0000 0001 0000     &R./.Q./........
2ffe509c:	5264 2ffe 510c 2ffe 000c 0000 0001 0000     dR./.Q./........

2ffe50ac <ddr_timing>:
2ffe50ac:	4d75 2ffe 0064 0000 4d7d 2ffe 0100 0004     uM./d...}M./....
2ffe50bc:	4d86 2ffe 0104 0008 4d8f 2ffe 0108 000c     .M./.....M./....
2ffe50cc:	4d98 2ffe 010c 0010 4da1 2ffe 0110 0014     .M./.....M./....
2ffe50dc:	4daa 2ffe 0114 0018 4db3 2ffe 0118 001c     .M./.....M./....
2ffe50ec:	4dbc 2ffe 011c 0020 4dc5 2ffe 0120 0024     .M./.. ..M./ .$.
2ffe50fc:	4dce 2ffe 0138 0028 4dd8 2ffe 0240 002c     .M./8.(..M./@.,.

2ffe510c <ddrphy_cal>:
2ffe510c:	4ba1 2ffe 01cc 0000 4baa 2ffe 01d0 0004     .K./.....K./....
2ffe511c:	4bb2 2ffe 01d4 0008 4bbb 2ffe 020c 000c     .K./.....K./....
2ffe512c:	4bc4 2ffe 0210 0010 4bcc 2ffe 0214 0014     .K./.....K./....
2ffe513c:	4bd5 2ffe 024c 0018 4bde 2ffe 0250 001c     .K./L....K./P...
2ffe514c:	4be6 2ffe 0254 0020 4bef 2ffe 028c 0024     .K./T. ..K./..$.
2ffe515c:	4bf8 2ffe 0290 0028 4c00 2ffe 0294 002c     .K./..(..L./..,.

2ffe516c <ddrphy_reg>:
2ffe516c:	4c3a 2ffe 0008 0000 4c3f 2ffe 0024 0004     :L./....?L./$...
2ffe517c:	4c46 2ffe 0028 0008 4c4c 2ffe 002c 000c     FL./(...LL./,...
2ffe518c:	4c52 2ffe 0030 0010 4c56 2ffe 0050 0014     RL./0...VL./P...
2ffe519c:	4c5c 2ffe 0184 0018 4c63 2ffe 01c0 001c     \L./....cL./....
2ffe51ac:	4c6a 2ffe 0200 0020 4c71 2ffe 0240 0024     jL./.. .qL./@.$.
2ffe51bc:	4c78 2ffe 0280 0028                         xL./..(.

2ffe51c4 <ddrphy_timing>:
2ffe51c4:	4c09 2ffe 0018 0000 4c0e 2ffe 001c 0004     .L./.....L./....
2ffe51d4:	4c13 2ffe 0020 0008 4c18 2ffe 0034 000c     .L./ ....L./4...
2ffe51e4:	4c1e 2ffe 0038 0010 4c24 2ffe 003c 0014     .L./8...$L./<...
2ffe51f4:	4c2a 2ffe 0040 0018 4c2e 2ffe 0044 001c     *L./@....L./D...
2ffe5204:	4c32 2ffe 0048 0020 4c36 2ffe 004c 0024     2L./H. .6L./L.$.
2ffe5214:	7473 632c 6c74 722d 6765 7300 2c74 7463     st,ctl-reg.st,ct
2ffe5224:	2d6c 6974 696d 676e 7300 2c74 7463 2d6c     l-timing.st,ctl-
2ffe5234:	616d 0070 7473 632c 6c74 702d 7265 0066     map.st,ctl-perf.
2ffe5244:	7473 702c 7968 722d 6765 7300 2c74 6870     st,phy-reg.st,ph
2ffe5254:	2d79 6974 696d 676e 7300 2c74 6870 2d79     y-timing.st,phy-
2ffe5264:	6163 006c 7473 732c 6d74 3233 706d 2d31     cal.st,stm32mp1-
2ffe5274:	6464 0072 7473 6d2c 6d65 732d 6570 6465     ddr.st,mem-speed
2ffe5284:	7300 2c74 656d 2d6d 6973 657a 7300 2c74     .st,mem-size.st,
2ffe5294:	656d 2d6d 616e 656d 2800 4152 3a4d 2520     mem-name.(RAM: %
2ffe52a4:	0a73 0a00 7325 203a 6143 6e6e 746f 7220     s...%s: Cannot r
2ffe52b4:	6165 2064 7325 202c 7265 6f72 3d72 6425     ead %s, error=%d
2ffe52c4:	000a 440a 5244 7220 2077 6574 7473 203a     ...DDR rw test: 
2ffe52d4:	6143 276e 2074 6361 6563 7373 6d20 6d65     Can't access mem
2ffe52e4:	726f 2079 2040 7830 7825 000a 440a 5244     ory @ 0x%x...DDR
2ffe52f4:	6120 6464 2072 7562 2073 6574 7473 203a      addr bus test: 
2ffe5304:	6163 276e 2074 6361 6563 7373 6d20 6d65     can't access mem
2ffe5314:	726f 2079 2040 7830 7825 000a 4d28 6d65     ory @ 0x%x..(Mem
2ffe5324:	726f 2079 6973 657a 3d20 3020 2578 2078     ory size = 0x%x 
2ffe5334:	2528 2064 424d 0a29 0a00 4444 2052 6973     (%d MB)...DDR si
2ffe5344:	657a 203a 7830 7825 6420 656f 2073 6f6e     ze: 0x%x does no
2ffe5354:	2074 616d 6374 2068 5444 6320 6e6f 6966     t match DT confi
2ffe5364:	3a67 3020 2578 0a78 0a00 4444 2052 6164     g: 0x%x...DDR da
2ffe5374:	6174 6220 7375 7420 7365 3a74 6320 6e61     ta bus test: can
2ffe5384:	7427 6120 6363 7365 2073 656d 6f6d 7972     't access memory
2ffe5394:	4020 3020 2578 0a78 0a00 4444 2052 7865      @ 0x%x...DDR ex
2ffe53a4:	6570 7463 6465 6620 6572 2071 6425 6b20     pected freq %d k
2ffe53b4:	7a48 202c 7563 7272 6e65 2074 7369 2520     Hz, current is %
2ffe53c4:	646c 6b20 7a48 000a                         ld kHz..

2ffe53cc <__func__.6740>:
2ffe53cc:	7473 336d 6d32 3170 645f 7264 735f 7465     stm32mp1_ddr_set
2ffe53dc:	7075 6300 6d6f 6f6d 2f6e 6564 6373 695f     up.common/desc_i
2ffe53ec:	616d 6567 6c5f 616f 2e64 0063 6c62 2f32     mage_load.c.bl2/
2ffe53fc:	6c62 5f32 6d69 6761 5f65 6f6c 6461 765f     bl2_image_load_v
2ffe540c:	2e32 0063 421e 324c 203a 6c50 7461 6f66     2.c..BL2: Platfo
2ffe541c:	6d72 7320 7465 7075 6120 726c 6165 7964     rm setup already
2ffe542c:	6420 6e6f 2165 0a21 2800 4c42 3a32 4420      done!!..(BL2: D
2ffe543c:	696f 676e 7020 616c 6674 726f 206d 6573     oing platform se
2ffe544c:	7574 0a70 0a00 4c42 3a32 4620 6961 756c     tup...BL2: Failu
2ffe545c:	6572 6920 206e 7270 2065 6d69 6761 2065     re in pre image 
2ffe546c:	6f6c 6461 6820 6e61 6c64 6e69 2067 2528     load handling (%
2ffe547c:	2969 000a 4228 324c 203a 6f4c 6461 6e69     i)..(BL2: Loadin
2ffe548c:	2067 6d69 6761 2065 6469 2520 0a64 0a00     g image id %d...
2ffe549c:	4c42 3a32 4620 6961 656c 2064 6f74 6c20     BL2: Failed to l
2ffe54ac:	616f 2064 6d69 6761 2065 2528 2969 000a     oad image (%i)..
2ffe54bc:	420a 324c 203a 6146 6c69 7275 2065 6e69     .BL2: Failure in
2ffe54cc:	7020 736f 2074 6d69 6761 2065 6f6c 6461      post image load
2ffe54dc:	6820 6e61 6c64 6e69 2067 2528 2969 000a      handling (%i)..
2ffe54ec:	4228 324c 203a 6b53 7069 6c20 616f 6964     (BL2: Skip loadi
2ffe54fc:	676e 6920 616d 6567 6920 2064 6425 000a     ng image id %d..
2ffe550c:	4214 324c 203a 7325 000a 4214 324c 203a     .BL2: %s...BL2: 
2ffe551c:	6f42 746f 6e69 2067 4c42 3233 000a 6f63     Booting BL32..co
2ffe552c:	6d6d 6e6f 622f 5f6c 6f63 6d6d 6e6f 632e     mmon/bl_common.c
2ffe553c:	2800 6f4c 6461 6e69 2067 6d69 6761 2065     .(Loading image 
2ffe554c:	6469 253d 2075 7461 6120 6464 6572 7373     id=%u at address
2ffe555c:	3020 2578 786c 000a 461e 6961 656c 2064      0x%lx...Failed 
2ffe556c:	6f74 6420 7465 7265 696d 656e 7420 6568     to determine the
2ffe557c:	7320 7a69 2065 666f 7420 6568 6920 616d      size of the ima
2ffe558c:	6567 6920 3d64 7525 2820 6925 0a29 1e00     ge id=%u (%i)...
2ffe559c:	6d49 6761 2065 6469 253d 2075 6973 657a     Image id=%u size
2ffe55ac:	6f20 7475 6f20 2066 6f62 6e75 7364 000a      out of bounds..
2ffe55bc:	461e 6961 656c 2064 6f74 6c20 616f 2064     .Failed to load 
2ffe55cc:	6d69 6761 2065 6469 253d 2075 2528 2969     image id=%u (%i)
2ffe55dc:	000a 4928 616d 6567 6920 3d64 7525 6c20     ..(Image id=%u l
2ffe55ec:	616f 6564 3a64 3020 2578 786c 2d20 3020     oaded: 0x%lx - 0
2ffe55fc:	2578 786c 000a 4528 746e 7972 7020 696f     x%lx..(Entry poi
2ffe560c:	746e 6120 6464 6572 7373 3d20 3020 2578     nt address = 0x%
2ffe561c:	786c 000a 5328 5350 2052 203d 7830 7825     lx..(SPSR = 0x%x
2ffe562c:	000a 6f63 6d6d 6e6f 742f 5f66 6f6c 2e67     ..common/tf_log.
2ffe563c:	0063 7264 7669 7265 2f73 6f63 736e 6c6f     c.drivers/consol
2ffe564c:	2f65 756d 746c 5f69 6f63 736e 6c6f 2e65     e/multi_console.
2ffe565c:	0063 5245 4f52 3a52 2020 0020 4f4e 4954     c.ERROR:   .NOTI
2ffe566c:	4543 203a 0020 4157 4e52 4e49 3a47 0020     CE:  .WARNING: .
2ffe567c:	4e49 4f46 203a 2020 0020 4556 4252 534f     INFO:    .VERBOS
2ffe568c:	3a45 0020                                   E: .

2ffe5690 <plat_prefix_str>:
2ffe5690:	565e 2ffe 5668 2ffe 5672 2ffe 567c 2ffe     ^V./hV./rV./|V./
2ffe56a0:	5686 2ffe 6c70 7461 732f 2f74 6f63 6d6d     .V./plat/st/comm
2ffe56b0:	6e6f 732f 6d74 3233 706d 635f 6d6f 6f6d     on/stm32mp_commo
2ffe56c0:	2e6e 0063 480a 6165 6564 2072 616d 6967     n.c..Header magi
2ffe56d0:	0a63 0a00 6548 6461 7265 7620 7265 6973     c...Header versi
2ffe56e0:	6e6f 000a 430a 6568 6b63 7573 3a6d 3020     on...Checksum: 0
2ffe56f0:	2578 2078 6128 6177 7469 6465 203a 7830     x%x (awaited: 0x
2ffe5700:	7825 0a29 7000 616c 2f74 7473 732f 6d74     %x)..plat/st/stm
2ffe5710:	3233 706d 2f31 7473 336d 6d32 3170 705f     32mp1/stm32mp1_p
2ffe5720:	6972 6176 6574 632e 0a00 5342 4345 203a     rivate.c..BSEC: 
2ffe5730:	6469 3d78 6425 5220 6165 2064 7245 6f72     idx=%d Read Erro
2ffe5740:	0a72 0a00 5342 4345 203a 7325 5220 6165     r...BSEC: %s Rea
2ffe5750:	2064 7245 6f72 0a72 2800 7355 2065 6564     d Error..(Use de
2ffe5760:	6166 6c75 2074 6863 7069 4920 2c44 6420     fault chip ID, d
2ffe5770:	6265 6775 6420 7369 6261 656c 0a64 7000     ebug disabled..p
2ffe5780:	7261 5f74 756e 626d 7265 6f5f 7074 3f00     art_number_otp.?
2ffe5790:	3f3f 003f 3531 4337 3100 3335 0046 3531     ???.157C.153F.15
2ffe57a0:	4133 3100 3135 0043 3531 4131 3100 3735     3A.151C.151A.157
2ffe57b0:	0046 3531 4333 3100 3735 0041 3531 4433     F.153C.157A.153D
2ffe57c0:	3100 3135 0046 3531 4431 3100 3735 0044     .151F.151D.157D.
2ffe57d0:	005a 6170 6b63 6761 5f65 746f 0070 4328     Z.package_otp.(C
2ffe57e0:	6e61 6f6e 2074 6567 2074 5043 2055 6576     annot get CPU ve
2ffe57f0:	7372 6f69 2c6e 6420 6265 6775 6420 7369     rsion, debug dis
2ffe5800:	6261 656c 0a64 1400 5043 3a55 5320 4d54     abled...CPU: STM
2ffe5810:	3233 504d 7325 7325 5220 7665 252e 0a73     32MP%s%s Rev.%s.
2ffe5820:	6200 616f 6472 695f 0064 4214 616f 6472     .board_id..Board
2ffe5830:	203a 424d 3025 7834 5620 7261 6425 252e     : MB%04x Var%d.%
2ffe5840:	2064 6552 2e76 7325 252d 3230 0a64 6300     d Rev.%s-%02d..c
2ffe5850:	6766 5f30 746f 0070 7768 5f32 746f 0070     fg0_otp.hw2_otp.
2ffe5860:	6572 7567 616c 6f74 2d72 6c61 6177 7379     regulator-always
2ffe5870:	6f2d 006e 4441 4100 0043 4241 4100 0041     -on.AD.AC.AB.AA.

2ffe5880 <CSWTCH.52>:
2ffe5880:	5874 2ffe 5877 2ffe 587a 2ffe 587d 2ffe     tX./wX./zX./}X./

2ffe5890 <stm32mp1_mmap>:
2ffe5890:	0000 2ffc 0000 0000 0000 2ffc 0000 0004     .../......./....
2ffe58a0:	002a 0000 0000 4000 0000 4000 0000 0000     *......@...@....
2ffe58b0:	0000 4000 0000 4000 0028 0000 0000 4000     ...@...@(......@
2ffe58c0:	0000 8000 0000 0000 0000 8000 0000 4000     ...............@
2ffe58d0:	0028 0000 0000 4000 0000 0000 0000 0000     (......@........
	...
2ffe58f0:	696c 2f62 6c78 7461 745f 6261 656c 5f73     lib/xlat_tables_
2ffe5900:	3276 612f 7261 6863 3233 782f 616c 5f74     v2/aarch32/xlat_
2ffe5910:	6174 6c62 7365 615f 6372 2e68 0063 696c     tables_arch.c.li
2ffe5920:	2f62 6c78 7461 745f 6261 656c 5f73 3276     b/xlat_tables_v2
2ffe5930:	782f 616c 5f74 6174 6c62 7365 635f 6e6f     /xlat_tables_con
2ffe5940:	6574 7478 632e 6c00 6269 782f 616c 5f74     text.c.lib/xlat_
2ffe5950:	6174 6c62 7365 765f 2f32 6c78 7461 745f     tables_v2/xlat_t
2ffe5960:	6261 656c 5f73 6f63 6572 632e 0a00 6d6d     ables_core.c..mm
2ffe5970:	7061 615f 6464 725f 6765 6f69 5f6e 6863     ap_add_region_ch
2ffe5980:	6365 286b 2029 6166 6c69 6465 202e 7265     eck() failed. er
2ffe5990:	6f72 2072 6425 000a 4e0a 746f 6520 6f6e     ror %d...Not eno
2ffe59a0:	6775 2068 656d 6f6d 7972 7420 206f 616d     ugh memory to ma
2ffe59b0:	2070 6572 6967 6e6f 0a3a 5620 3a41 7830     p region:. VA:0x
2ffe59c0:	6c25 2078 5020 3a41 7830 6c25 786c 2020     %lx  PA:0x%llx  
2ffe59d0:	6973 657a 303a 2578 787a 2020 7461 7274     size:0x%zx  attr
2ffe59e0:	303a 2578 0a78 6400 6972 6576 7372 612f     :0x%x..drivers/a
2ffe59f0:	6d72 742f 637a 742f 637a 3034 2e30 0063     rm/tzc/tzc400.c.
2ffe5a00:	540a 435a 342d 3030 3a20 5720 6f72 676e     .TZC-400 : Wrong
2ffe5a10:	6420 7665 6369 2065 4449 2820 7830 7825      device ID (0x%x
2ffe5a20:	2e29 000a 540a 435a 342d 3030 203a 6946     )....TZC-400: Fi
2ffe5a30:	746c 7265 2520 2064 6147 6574 656b 7065     lter %d Gatekeep
2ffe5a40:	7265 6120 726c 6165 7964 6520 616e 6c62     er already enabl
2ffe5a50:	6465 000a 7264 7669 7265 2f73 6564 616c     ed..drivers/dela
2ffe5a60:	5f79 6974 656d 2f72 6564 616c 5f79 6974     y_timer/delay_ti
2ffe5a70:	656d 2e72 0063 7264 7669 7265 2f73 6564     mer.c.drivers/de
2ffe5a80:	616c 5f79 6974 656d 2f72 6567 656e 6972     lay_timer/generi
2ffe5a90:	5f63 6564 616c 5f79 6974 656d 2e72 0063     c_delay_timer.c.
2ffe5aa0:	7264 7669 7265 2f73 7473 622f 6573 2f63     drivers/st/bsec/
2ffe5ab0:	7362 6365 2e32 0063 7473 732c 6d74 3233     bsec2.c.st,stm32
2ffe5ac0:	6e2d 6d76 6d65 6c2d 7961 756f 0074 766e     -nvmem-layout.nv
2ffe5ad0:	656d 2d6d 6563 6c6c 6e2d 6d61 7365 6e00     mem-cell-names.n
2ffe5ae0:	6d76 6d65 632d 6c65 736c 0a00 614d 666c     vmem-cells..Malf
2ffe5af0:	726f 656d 2064 766e 656d 5f6d 616c 6f79     ormed nvmem_layo
2ffe5b00:	7475 6e20 646f 3a65 6920 6e67 726f 6465     ut node: ignored
2ffe5b10:	000a 4d0a 7369 6c61 6769 656e 2064 766e     ...Misaligned nv
2ffe5b20:	656d 5f6d 616c 6f79 7475 6520 656c 656d     mem_layout eleme
2ffe5b30:	746e 203a 6769 6f6e 6572 0a64 7300 2c74     nt: ignored..st,
2ffe5b40:	7473 336d 6d32 3170 2d35 7362 6365 0a00     stm32mp15-bsec..
2ffe5b50:	5342 4345 203a 7525 5320 6974 6b63 2d79     BSEC: %u Sticky-
2ffe5b60:	6572 6461 6220 7469 7220 6165 2064 7245     read bit read Er
2ffe5b70:	6f72 2072 6925 000a 420a 4553 3a43 2520     ror %i...BSEC: %
2ffe5b80:	2075 7453 6369 796b 772d 6972 6574 6220     u Sticky-write b
2ffe5b90:	7469 7220 6165 2064 7245 6f72 2072 6925     it read Error %i
2ffe5ba0:	000a 420a 4553 3a43 2520 2075 7453 6369     ...BSEC: %u Stic
2ffe5bb0:	796b 702d 6f72 2067 6962 2074 6572 6461     ky-prog bit read
2ffe5bc0:	4520 7272 726f 2520 0a69 0a00 5342 4345      Error %i...BSEC
2ffe5bd0:	203a 7525 7020 7265 616d 656e 746e 6220     : %u permanent b
2ffe5be0:	7469 7220 6165 2064 7245 6f72 2072 6925     it read Error %i
2ffe5bf0:	000a 421e 4553 3a43 4f20 5054 6c20 636f     ...BSEC: OTP loc
2ffe5c00:	656b 2c64 7020 6f72 2067 6977 6c6c 6220     ked, prog will b
2ffe5c10:	2065 6769 6f6e 6572 0a64 1e00 5342 4345     e ignored...BSEC
2ffe5c20:	203a 5047 4f4c 4b43 6120 7463 7669 7461     : GPLOCK activat
2ffe5c30:	6465 202c 7270 676f 7720 6c69 206c 6562     ed, prog will be
2ffe5c40:	6920 6e67 726f 6465 000a 420a 4553 3a43      ignored...BSEC:
2ffe5c50:	2520 2075 6853 6461 776f 6e69 2067 7245      %u Shadowing Er
2ffe5c60:	6f72 2072 6925 000a 420a 4553 3a43 2520     ror %i...BSEC: %
2ffe5c70:	2075 6552 6461 4520 7272 726f 2520 0a69     u Read Error %i.
2ffe5c80:	2f00 6c63 636f 736b 6300 6f6c 6b63 662d     ./clocks.clock-f
2ffe5c90:	6572 7571 6e65 7963 7300 2c74 7473 336d     requency.st,stm3
2ffe5ca0:	6d32 3170 722d 6363 7300 2c74 6c70 406c     2mp1-rcc.st,pll@
2ffe5cb0:	0030 500a 4c4c 6425 7320 6f74 2070 6166     0..PLL%d stop fa
2ffe5cc0:	6c69 6465 4020 3020 2578 786c 203a 7830     iled @ 0x%lx: 0x
2ffe5cd0:	7825 000a 7266 6361 0a00 7325 203a 6c63     %x..frac..%s: cl
2ffe5ce0:	206b 6469 2520 2064 6f6e 2074 6f66 6e75     k id %d not foun
2ffe5cf0:	0a64 0a00 6c43 636f 206b 6425 6320 6e61     d...Clock %d can
2ffe5d00:	7427 6220 2065 6e65 6261 656c 0a64 0a00     't be enabled...
2ffe5d10:	6c43 636f 206b 6425 6320 6e61 7427 6220     Clock %d can't b
2ffe5d20:	2065 6964 6173 6c62 6465 000a 430a 4b4c     e disabled...CLK
2ffe5d30:	4944 2056 7825 7320 6174 7472 6620 6961     DIV %x start fai
2ffe5d40:	656c 2064 2040 7830 6c25 3a78 3020 2578     led @ 0x%lx: 0x%
2ffe5d50:	0a78 0a00 534f 2043 7825 4020 2520 786c     x...OSC %x @ %lx
2ffe5d60:	7420 6d69 6f65 7475 6620 726f 6520 616e      timeout for ena
2ffe5d70:	6c62 3d65 6425 3a20 3020 2578 0a78 0a00     ble=%d : 0x%x...
2ffe5d80:	4c43 534b 4352 2520 2078 7473 7261 2074     CLKSRC %x start 
2ffe5d90:	6166 6c69 6465 4020 3020 2578 786c 203a     failed @ 0x%lx: 
2ffe5da0:	7830 7825 000a 500a 4c4c 6425 7320 6174     0x%x...PLL%d sta
2ffe5db0:	7472 6620 6961 656c 2064 2040 7830 6c25     rt failed @ 0x%l
2ffe5dc0:	3a78 3020 2578 0a78 6400 6972 6576 7372     x: 0x%x..drivers
2ffe5dd0:	732f 2f74 6c63 2f6b 7473 336d 6d32 3170     /st/clk/stm32mp1
2ffe5de0:	635f 6b6c 632e 7300 2c74 6c63 736b 6372     _clk.c.st,clksrc
2ffe5df0:	7300 2c74 6c63 646b 7669 7300 2c74 6c70     .st,clkdiv.st,pl
2ffe5e00:	406c 6425 6300 6773 7300 2c74 7962 6170     l@%d.csg.st,bypa
2ffe5e10:	7373 7300 2c74 6964 6267 7079 7361 0073     ss.st,digbypass.
2ffe5e20:	7473 632c 7373 7300 2c74 7264 7669 0065     st,css.st,drive.
2ffe5e30:	480a 4953 4944 2056 6166 6c69 6465 4020     .HSIDIV failed @
2ffe5e40:	3020 2578 786c 203a 7830 7825 000a 7473      0x%lx: 0x%x..st
2ffe5e50:	702c 636b 0073 490a 766e 6c61 6469 6320     ,pkcs..Invalid c
2ffe5e60:	6b6c 682d 6973 6620 6572 7571 6e65 7963     lk-hsi frequency
2ffe5e70:	000a 6c63 2d6b 7368 0069 6c63 2d6b 7368     ..clk-hsi.clk-hs
2ffe5e80:	0065 6c63 2d6b 7363 0069 6c63 2d6b 736c     e.clk-csi.clk-ls
2ffe5e90:	0069 6c63 2d6b 736c 0065 3269 5f73 6b63     i.clk-lse.i2s_ck
2ffe5ea0:	6e69                                         in.

2ffe5ea3 <__func__.7250>:
2ffe5ea3:	7473 336d 6d32 3170 635f 6b6c 675f 7465     stm32mp1_clk_get
2ffe5eb3:	675f 7461 6465 695f 0064                    _gated_id.

2ffe5ebd <axiss_parents>:
2ffe5ebd:	0100                                         ...

2ffe5ec0 <fmc_parents>:
2ffe5ec0:	1216 1e13                                   ....

2ffe5ec4 <i2c12_parents>:
2ffe5ec4:	1517 0906                                   ....

2ffe5ec8 <i2c35_parents>:
2ffe5ec8:	1517 0906                                   ....

2ffe5ecc <i2c46_parents>:
2ffe5ecc:	111b 0906                                   ....

2ffe5ed0 <mcuss_parents>:
2ffe5ed0:	0100 1002                                   ....

2ffe5ed4 <mpu_parents>:
2ffe5ed4:	0100 0a0a                                   ....

2ffe5ed8 <parent_id_clock_id>:
2ffe5ed8:	0004 0201 ff03 0004 0105 b5b4 b7b6 b9b8     ................
2ffe5ee8:	bbba bdbc bfbe c3c3 c3c3 c3c3 0000 c2c1     ................
2ffe5ef8:	ffc4                                        ..

2ffe5efa <per_parents>:
2ffe5efa:	0100                                         ...

2ffe5efd <pllncfgr2>:
2ffe5efd:	0800                                         ...

2ffe5f00 <qspi_parents>:
2ffe5f00:	1216 1e13                                   ....

2ffe5f04 <rng1_parents>:
2ffe5f04:	1502 0304                                   ....

2ffe5f08 <rtc_parents>:
2ffe5f08:	04ff 0103                                   ....

2ffe5f0c <sdmmc12_parents>:
2ffe5f0c:	121c 0613                                   ....

2ffe5f10 <sdmmc3_parents>:
2ffe5f10:	121d 0613                                   ....

2ffe5f14 <spi6_parents>:
2ffe5f14:	141b 0906 1107                              ......

2ffe5f1a <stgen_parents>:
2ffe5f1a:	0706                                        ..

2ffe5f1c <stm32mp1_axi_div>:
2ffe5f1c:	0201 0403 0404 0404                         ........

2ffe5f24 <stm32mp1_clk_gate>:
2ffe5f24:	00d8 dc00 0100 16ff 00d8 dd01 0100 16ff     ................
2ffe5f34:	00d8 de02 0100 16ff 00d8 df03 0100 16ff     ................
2ffe5f44:	00d8 e004 0100 0fff 00d8 e105 0100 0fff     ................
2ffe5f54:	00d8 e206 0100 1aff 00d8 e307 0100 1aff     ................
2ffe5f64:	00d8 e408 0100 16ff 00d8 e509 0100 1aff     ................
2ffe5f74:	00d8 e60a 0100 1aff 0a00 950e 0001 ff08     ................
2ffe5f84:	0a00 960f 0001 ff09 0a00 9710 0001 ff08     ................
2ffe5f94:	0a00 9811 0001 ff09 0a00 9a12 0001 ff0a     ................
2ffe5fa4:	0a00 9b13 0001 ff0a 0a08 990d 0001 ff07     ................
2ffe5fb4:	0a10 330b 0001 ffff 0200 e708 0001 ffff     ...3............
2ffe5fc4:	0200 3a0f 0001 ffff 0200 7f10 0001 ff11     ...:............
2ffe5fd4:	0208 8700 0101 ff04 0208 8c02 0101 ff03     ................
2ffe5fe4:	0208 8e03 0101 ff03 0208 9404 0101 ff05     ................
2ffe5ff4:	0208 4108 0101 1bff 0208 420b 0101 1bff     ...A.......B....
2ffe6004:	0208 710c 0101 1bff 0208 430d 0101 1bff     ...q.......C....
2ffe6014:	0208 440f 0101 1bff 0208 4510 0101 1bff     ...D.......E....
2ffe6024:	0208 8014 0101 ff02 0140 c014 0100 ff13     ........@.......
2ffe6034:	0a28 5400 0001 ffff 0a28 5501 0001 ffff     (..T....(..U....
2ffe6044:	0a28 5602 0001 ffff 0a28 5703 0001 ffff     (..V....(..W....
2ffe6054:	0a28 5804 0001 ffff 0a28 5905 0001 ffff     (..X....(..Y....
2ffe6064:	0a28 5a06 0001 ffff 0a28 5b07 0001 ffff     (..Z....(..[....
2ffe6074:	0a28 5c08 0001 ffff 0a28 5d09 0001 ffff     (..\....(..]....
2ffe6084:	0a28 5e0a 0001 ffff 0210 5f00 0101 1bff     (..^......._....
2ffe6094:	0210 6004 0101 1bff 0210 6105 0101 1bff     ...`.......a....
2ffe60a4:	0210 7c06 0101 ff06 0210 6308 0101 1bff     ...|.......c....
2ffe60b4:	0218 790c 0001 ff0e 0218 7a0e 0001 ff0d     ...y.......z....
2ffe60c4:	0218 7610 0001 ff0b 0218 7711 0001 ff0b     ...v.......w....
2ffe60d4:	080c d608 0000 ffff                         ........

2ffe60dc <stm32mp1_clk_pll>:
2ffe60dc:	0001 0000 0028 0084 0088 008c 0080 0090     ....(...........
2ffe60ec:	0000 0000 0001 0000 00ff 0000 00ff 0000     ................
2ffe60fc:	0001 0000 0028 0098 009c 00a0 0094 00a4     ....(...........
2ffe610c:	0000 0000 0001 0000 00ff 0000 00ff 0000     ................
2ffe611c:	0000 0000 0820 0884 0888 088c 0880 0890     .... ...........
2ffe612c:	0000 0000 0001 0000 0002 0000 00ff 0000     ................
2ffe613c:	0000 0000 0824 0898 089c 08a0 0894 08a4     ....$...........
2ffe614c:	0000 0000 0001 0000 0002 0000 0005 0000     ................

2ffe615c <stm32mp1_clk_sel>:
2ffe615c:	08c0 0700 0004 0000 5ec4 2ffe 08c4 0700     .........^./....
2ffe616c:	0004 0000 5ec8 2ffe 00d4 0300 0002 0000     .....^./........
2ffe617c:	5f1a 2ffe 00c0 0700 0004 0000 5ecc 2ffe     ._./.........^./
2ffe618c:	00c4 0700 0006 0000 5f14 2ffe 00c8 0700     ........._./....
2ffe619c:	0006 0000 628c 2ffe 00cc 0300 0004 0000     .....b./........
2ffe61ac:	5f04 2ffe 08e4 0700 0005 0000 6287 2ffe     ._./.........b./
2ffe61bc:	08e8 0700 0005 0000 6282 2ffe 08ec 0700     .........b./....
2ffe61cc:	0005 0000 6282 2ffe 08f0 0700 0005 0000     .....b./........
2ffe61dc:	6282 2ffe 08f4 0700 0004 0000 5f0c 2ffe     .b./........._./
2ffe61ec:	08f8 0700 0004 0000 5f10 2ffe 0900 0300     ........._./....
2ffe61fc:	0004 0000 5f00 2ffe 0904 0300 0004 0000     ....._./........
2ffe620c:	5ec0 2ffe 0024 0700 0003 0000 5ebd 2ffe     .^./$........^./
2ffe621c:	0048 0300 0004 0000 5ed0 2ffe 091c 0300     H........^./....
2ffe622c:	0003 0000 6294 2ffe 091c 0104 0002 0000     .....b./........
2ffe623c:	6292 2ffe 0140 0310 0004 0000 5f08 2ffe     .b./@........_./
2ffe624c:	0020 0300 0004 0000 5ed4 2ffe 00d0 0300      ........^./....
2ffe625c:	0003 0000 5efa 2ffe                         .....^./

2ffe6264 <stm32mp1_mcu_div>:
2ffe6264:	0100 0302 0604 0807 0909 0909 0909 0909     ................

2ffe6274 <stm32mp1_mpu_apbx_div>:
2ffe6274:	0100 0302 0404 0404                         ........

2ffe627c <stm32mp1_pll>:
2ffe627c:	1004 0863 c710                              ..c...

2ffe6282 <uart234578_parents>:
2ffe6282:	1417 0906                                    .....

2ffe6287 <uart6_parents>:
2ffe6287:	1418 0906                                    .....

2ffe628c <usart1_parents>:
2ffe628c:	111b 0906 0714                              ......

2ffe6292 <usbo_parents>:
2ffe6292:	2115                                        .!

2ffe6294 <usbphy_parents>:
2ffe6294:	1507 0a08 6e55 6e6b 776f 206e 6553 666c     ....Unknown Self
2ffe62a4:	5220 6665 6572 6873 6d20 646f 0a65            Refresh mode..

2ffe62b3 <CSWTCH.26>:
2ffe62b3:	0001 0000 0000 0000 0302 7264 7669 7265     ..........driver
2ffe62c3:	2f73 7473 672f 6970 2f6f 7473 336d 5f32     s/st/gpio/stm32_
2ffe62d3:	7067 6f69 632e 7000 6e69 7463 6c72 302d     gpio.c.pinctrl-0
2ffe62e3:	7000 6e69 756d 0078 6c73 7765 722d 7461     .pinmux.slew-rat
2ffe62f3:	0065 6962 7361 702d 6c75 2d6c 7075 6200     e.bias-pull-up.b
2ffe6303:	6169 2d73 7570 6c6c 642d 776f 006e 7264     ias-pull-down.dr
2ffe6313:	7669 2d65 706f 6e65 642d 6172 6e69 6700     ive-open-drain.g
2ffe6323:	6970 2d6f 6f63 746e 6f72 6c6c 7265 0a00     pio-controller..
2ffe6333:	4950 434e 5254 204c 6e69 6f63 736e 7369     PINCTRL inconsis
2ffe6343:	6574 746e 6920 206e 5444 000a 3269 2d63     tent in DT..i2c-
2ffe6353:	6373 2d6c 6972 6973 676e 742d 6d69 2d65     scl-rising-time-
2ffe6363:	736e 6900 6332 732d 6c63 662d 6c61 696c     ns.i2c-scl-falli
2ffe6373:	676e 742d 6d69 2d65 736e 0a00 6e49 6176     ng-time-ns..Inva
2ffe6383:	696c 2064 7562 2073 7073 6565 2064 2528     lid bus speed (%
2ffe6393:	2069 203e 6925 0a29 0a00 3249 2043 6c63     i > %i)...I2C cl
2ffe63a3:	636f 206b 6172 6574 6920 2073 0a30 0a00     ock rate is 0...
2ffe63b3:	3249 2043 7073 6565 2064 756f 2074 666f     I2C speed out of
2ffe63c3:	6220 756f 646e 7b20 6425 0a7d 0a00 4920      bound {%d}... I
2ffe63d3:	4332 7420 6d69 6e69 7367 6f20 7475 6f20     2C timings out o
2ffe63e3:	2066 6f62 6e75 2064 6952 6573 257b 3e64     f bound Rise{%d>
2ffe63f3:	6425 2f7d 6146 6c6c 257b 3e64 6425 0a7d     %d}/Fall{%d>%d}.
2ffe6403:	0a00 4e44 2046 756f 2074 666f 6220 756f     ..DNF out of bou
2ffe6413:	646e 2520 2f64 6425 000a 200a 3249 2043     nd %d/%d... I2C 
2ffe6423:	6f6e 5020 6572 6373 6c61 7265 7320 6c6f     no Prescaler sol
2ffe6433:	7475 6f69 0a6e 0a00 4920 4332 6e20 206f     ution... I2C no 
2ffe6443:	6f73 756c 6974 6e6f 6120 2074 6c61 0a6c     solution at all.
2ffe6453:	0a00 6146 6c69 6465 7420 206f 6f63 706d     ..Failed to comp
2ffe6463:	7475 2065 3249 2043 6974 696d 676e 0a73     ute I2C timings.
2ffe6473:	1e00 6f44 6e77 7267 6461 2065 3249 2043     ..Downgrade I2C 
2ffe6483:	7073 6565 2064 6f74 2520 4875 297a 000a     speed to %uHz)..
2ffe6493:	430a 6e61 6f6e 2074 6e69 7469 6169 696c     .Cannot initiali
2ffe64a3:	657a 4920 4332 6120 616e 6f6c 2067 6966     ze I2C analog fi
2ffe64b3:	746c 7265 2820 6425 0a29 0a00 6d49 6f70     lter (%d)...Impo
2ffe64c3:	7373 6269 656c 7420 206f 6f63 706d 7475     ssible to comput
2ffe64d3:	2065 3249 2043 6974 696d 676e 0a73 0000     e I2C timings...
	...

2ffe64e4 <i2c_specs>:
2ffe64e4:	86a0 0001 012c 0000 03e8 0000 0000 0000     ....,...........
2ffe64f4:	0d7a 0000 00fa 0000 125c 0000 0fa0 0000     z.......\.......
2ffe6504:	1a80 0006 012c 0000 012c 0000 0000 0000     ....,...,.......
2ffe6514:	0384 0000 0064 0000 0514 0000 0258 0000     ....d.......X...
2ffe6524:	4240 000f 0064 0000 0078 0000 0000 0000     @B..d...x.......
2ffe6534:	01c2 0000 0032 0000 01f4 0000 0104 0000     ....2...........
2ffe6544:	7473 732c 6d74 3233 706d 2d31 7769 6764     st,stm32mp1-iwdg
2ffe6554:	7300 6d74 3233 652c 616e 6c62 2d65 6e6f     .stm32,enable-on
2ffe6564:	732d 6f74 0070 7473 336d 2c32 6e65 6261     -stop.stm32,enab
2ffe6574:	656c 6f2d 2d6e 7473 6e61 6264 0079 4f0a     le-on-standby..O
2ffe6584:	5054 6520 616e 6c62 6465 6220 7475 6920     TP enabled but i
2ffe6594:	6477 2567 2075 5444 642d 7369 6261 656c     wdg%u DT-disable
2ffe65a4:	0a64 7300 2c74 7473 6d70 6369 0031 6572     d..st,stpmic1.re
2ffe65b4:	7567 616c 6f74 2d72 696d 2d6e 696d 7263     gulator-min-micr
2ffe65c4:	766f 6c6f 0074 6572 7567 616c 6f74 2d72     ovolt.regulator-
2ffe65d4:	616d 2d78 696d 7263 766f 6c6f 0074 7264     max-microvolt.dr
2ffe65e4:	7669 7265 2f73 7473 702f 696d 2f63 7473     ivers/st/pmic/st
2ffe65f4:	336d 6d32 5f70 6d70 6369 632e 7200 6765     m32mp_pmic.c.reg
2ffe6604:	6c75 7461 726f 622d 6f6f 2d74 6e6f 7200     ulator-boot-on.r
2ffe6614:	6765 6c75 7461 726f 702d 6c75 2d6c 6f64     egulator-pull-do
2ffe6624:	6e77 7300 2c74 616d 6b73 722d 7365 7465     wn.st,mask-reset
2ffe6634:	7200 6765 6c75 7461 726f 6e2d 6d61 0065     .regulator-name.
2ffe6644:	490a 4332 6320 6e6f 6966 7567 6172 6974     .I2C configurati
2ffe6654:	6e6f 6620 6961 656c 2064 6425 000a 430a     on failed %d...C
2ffe6664:	6e61 6f6e 2074 6e69 7469 6169 696c 657a     annot initialize
2ffe6674:	4920 4332 2520 2078 2528 2964 000a 490a      I2C %x (%d)...I
2ffe6684:	4332 6420 7665 6369 2065 6f6e 2074 6572     2C device not re
2ffe6694:	6461 0a79 7300 2c74 7473 6d70 6369 2d31     ady..st,stpmic1-
2ffe66a4:	6572 7567 616c 6f74 7372 0a00 6146 6c69     regulators..Fail
2ffe66b4:	6465 7420 206f 6361 6563 7373 5020 494d     ed to access PMI
2ffe66c4:	0a43 2800 4d50 4349 7620 7265 6973 6e6f     C..(PMIC version
2ffe66d4:	3d20 3020 2578 3230 786c 000a 7562 6b63      = 0x%02lx..buck
2ffe66e4:	0032 7276 6665 645f 7264 6c00 6f64 0033     2.vref_ddr.ldo3.

2ffe66f4 <pmic_regu_ops>:
2ffe66f4:	1335 2ffe 1363 2ffe 7562 6b63 6c00 6f64     5../c../buck.ldo
2ffe6704:	6c00 6f64 0034 7562 6b63 0031 7562 6b63     .ldo4.buck1.buck
2ffe6714:	0033 7562 6b63 0034 646c 316f 6c00 6f64     3.buck4.ldo1.ldo
2ffe6724:	0032 646c 356f 6c00 6f64 0036 6f62 736f     2.ldo5.ldo6.boos
2ffe6734:	0074 7770 5f72 7773 0031 7770 5f72 7773     t.pwr_sw1.pwr_sw
2ffe6744:	0032                                        2.

2ffe6746 <buck1_voltage_table>:
2ffe6746:	02d5 02d5 02d5 02d5 02d5 02d5 02ee 0307     ................
2ffe6756:	0320 0339 0352 036b 0384 039d 03b6 03cf      .9.R.k.........
2ffe6766:	03e8 0401 041a 0433 044c 0465 047e 0497     ......3.L.e.~...
2ffe6776:	04b0 04c9 04e2 04fb 0514 052d 0546 055f     ..........-.F._.
2ffe6786:	0578 0591 05aa 05c3 05dc 05dc 05dc 05dc     x...............
2ffe6796:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................
2ffe67a6:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................
2ffe67b6:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................

2ffe67c6 <buck2_voltage_table>:
2ffe67c6:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2ffe67d6:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2ffe67e6:	03e8 03e8 041a 041a 044c 044c 047e 047e     ........L.L.~.~.
2ffe67f6:	04b0 04b0 04e2 04e2 0514 0514 0546 0546     ............F.F.
2ffe6806:	0578 0578 05aa 05aa 05dc                    x.x.......

2ffe6810 <buck3_voltage_table>:
2ffe6810:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2ffe6820:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2ffe6830:	03e8 03e8 03e8 03e8 044c 044c 044c 044c     ........L.L.L.L.
2ffe6840:	04b0 04b0 04b0 04b0 0514 0514 0514 0514     ................
2ffe6850:	0578 0578 0578 0578 05dc 0640 06a4 0708     x.x.x.x...@.....
2ffe6860:	076c 07d0 0834 0898 08fc 0960 09c4 0a28     l...4.....`...(.
2ffe6870:	0a8c 0af0 0b54 0bb8 0c1c 0c80 0ce4 0d48     ....T.........H.

2ffe6880 <buck4_voltage_table>:
2ffe6880:	0258 0271 028a 02a3 02bc 02d5 02ee 0307     X.q.............
2ffe6890:	0320 0339 0352 036b 0384 039d 03b6 03cf      .9.R.k.........
2ffe68a0:	03e8 0401 041a 0433 044c 0465 047e 0497     ......3.L.e.~...
2ffe68b0:	04b0 04c9 04e2 04fb 0514 0514 0546 0546     ............F.F.
2ffe68c0:	0578 0578 05aa 05aa 05dc 0640 06a4 0708     x.x.......@.....
2ffe68d0:	076c 07d0 0834 0898 08fc 0960 09c4 0a28     l...4.....`...(.
2ffe68e0:	0a8c 0af0 0b54 0bb8 0c1c 0c80 0ce4 0d48     ....T.........H.
2ffe68f0:	0dac 0e10 0e74 0ed8 0f3c                    ....t...<.

2ffe68fa <fixed_5v_voltage_table>:
2ffe68fa:	1388                                        ..

2ffe68fc <ldo1_voltage_table>:
2ffe68fc:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2ffe690c:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2ffe691c:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2ffe692c:	0ce4                                        ..

2ffe692e <ldo2_voltage_table>:
2ffe692e:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2ffe693e:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2ffe694e:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2ffe695e:	0ce4                                        ..

2ffe6960 <ldo3_voltage_table>:
2ffe6960:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2ffe6970:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2ffe6980:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2ffe6990:	0ce4 0ce4 0ce4 0ce4 0ce4 0ce4 0ce4 01f4     ................
2ffe69a0:	ffff                                        ..

2ffe69a2 <ldo4_voltage_table>:
2ffe69a2:	0ce4                                        ..

2ffe69a4 <ldo5_voltage_table>:
2ffe69a4:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2ffe69b4:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2ffe69c4:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2ffe69d4:	0ce4 0d48 0dac 0e10 0e74 0ed8 0f3c          ..H.....t...<.

2ffe69e2 <ldo6_voltage_table>:
2ffe69e2:	0384 03e8 044c 04b0 0514 0578 05dc 0640     ....L.....x...@.
2ffe69f2:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2ffe6a02:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2ffe6a12:	0ce4                                        ..

2ffe6a14 <regulators_table>:
2ffe6a14:	670a 2ffe 6746 2ffe 2040 1230 1800 0000     .g./Fg./@ 0.....
2ffe6a24:	66e0 2ffe 67c6 2ffe 2125 1231 1802 0001     .f./.g./%!1.....
2ffe6a34:	6710 2ffe 6810 2ffe 2238 1232 1804 0002     .g./.h./8"2.....
2ffe6a44:	6716 2ffe 6880 2ffe 233d 1233 1806 0003     .g./.h./=#3.....
2ffe6a54:	671c 2ffe 68fc 2ffe 2519 0035 1a00 0000     .g./.h./.%5.....
2ffe6a64:	6721 2ffe 692e 2ffe 2619 0036 1a00 0001     !g./.i./.&6.....
2ffe6a74:	66ef 2ffe 6960 2ffe 2721 0037 1a00 0002     .f./`i./!'7.....
2ffe6a84:	6705 2ffe 69a2 2ffe 2801 0038 1a00 0003     .g./.i./.(8.....
2ffe6a94:	6726 2ffe 69a4 2ffe 291f 0039 1a00 0004     &g./.i./.)9.....
2ffe6aa4:	672b 2ffe 69e2 2ffe 2a19 003a 1a00 0005     +g./.i./.*:.....
2ffe6ab4:	66e6 2ffe 6af4 2ffe 2401 0034 1a00 0006     .f./.j./.$4.....
2ffe6ac4:	6730 2ffe 68fa 2ffe 4001 0000 0000 0001     0g./.h./.@......
2ffe6ad4:	6736 2ffe 68fa 2ffe 4001 0000 0000 0002     6g./.h./.@......
2ffe6ae4:	673e 2ffe 68fa 2ffe 4001 0000 0000 0004     >g./.h./.@......

2ffe6af4 <vref_ddr_voltage_table>:
2ffe6af4:	0ce4 0000                                   ....

2ffe6af8 <dummy_regu_ops>:
2ffe6af8:	1bf5 2ffe 1bf9 2ffe 7264 7669 7265 2f73     .../.../drivers/
2ffe6b08:	7473 722f 6765 6c75 7461 726f 732f 6d74     st/regulator/stm
2ffe6b18:	3233 706d 725f 6765 6c75 7461 726f 632e     32mp_regulator.c
2ffe6b28:	2f00 6573 7563 6572 632d 6f68 6573 006e     ./secure-chosen.
2ffe6b38:	632f 6f68 6573 006e 7473 6f64 7475 702d     /chosen.stdout-p
2ffe6b48:	7461 0068 003a 706f 2d70 7573 7070 726f     ath.:.opp-suppor
2ffe6b58:	6574 2d64 7768 6f00 7070 682d 007a 706f     ted-hw.opp-hz.op
2ffe6b68:	2d70 696d 7263 766f 6c6f 0074 6b6f 7961     p-microvolt.okay
2ffe6b78:	7300 6365 7275 2d65 7473 7461 7375 7000     .secure-status.p
2ffe6b88:	616c 2f74 7473 632f 6d6f 6f6d 2f6e 7473     lat/st/common/st
2ffe6b98:	336d 6d32 5f70 7464 632e 7200 6765 6e2d     m32mp_dt.c.reg-n
2ffe6ba8:	6d61 7365 7200 7365 7465 0073 4328 6e61     ames.resets.(Can
2ffe6bb8:	6f6e 2074 6966 646e 2520 2073 6f6e 6564     not find %s node
2ffe6bc8:	6920 206e 5444 000a 706f 7265 7461 6e69      in DT..operatin
2ffe6bd8:	2d67 6f70 6e69 7374 762d 0032 7473 732c     g-points-v2.st,s
2ffe6be8:	6d74 3233 706d 2c31 7770 2d72 6572 0067     tm32mp1,pwr-reg.
2ffe6bf8:	6476 2d64 7573 7070 796c 2f00 7063 7375     vdd-supply./cpus
2ffe6c08:	632f 7570 3040 6300 7570 732d 7075 6c70     /cpu@0.cpu-suppl
2ffe6c18:	0079 002f 6f6d 6564 006c 5328 666f 7774     y./.model.(Softw
2ffe6c28:	7261 2065 6361 6563 7373 7420 206f 6c61     are access to al
2ffe6c38:	206c 6564 7562 2067 6f63 706d 6e6f 6e65     l debug componen
2ffe6c48:	7374 6920 2073 6964 6173 6c62 6465 000a     ts is disabled..
2ffe6c58:	6c70 7461 732f 2f74 7473 336d 6d32 3170     plat/st/stm32mp1
2ffe6c68:	732f 6d74 3233 706d 5f31 6264 6d67 7563     /stm32mp1_dbgmcu
2ffe6c78:	632e 1e00 4f49 6320 6d6f 6570 736e 7461     .c..IO compensat
2ffe6c88:	6f69 206e 6563 6c6c 6e20 746f 7220 6165     ion cell not rea
2ffe6c98:	7964 000a 561e 4444 7520 6b6e 6f6e 6e77     dy...VDD unknown
2ffe6ca8:	2800 7250 646f 6375 5f74 6562 6f6c 5f77     .(Product_below_
2ffe6cb8:	7632 3d35 3a30 4820 4c53 4556 204e 7270     2v5=0: HSLVEN pr
2ffe6cc8:	746f 6365 6574 2064 7962 4820 0a57 0a00     otected by HW...
2ffe6cd8:	7250 646f 6375 5f74 6562 6f6c 5f77 7632     Product_below_2v
2ffe6ce8:	3d35 3a31 000a 090a 5348 564c 4e45 7520     5=1:....HSLVEN u
2ffe6cf8:	6470 7461 2065 7369 6420 7365 7274 6375     pdate is destruc
2ffe6d08:	6974 6576 0a2c 0a00 6e09 206f 7075 6164     tive,....no upda
2ffe6d18:	6574 6120 2073 4456 2044 203e 2e32 5637     te as VDD > 2.7V
2ffe6d28:	000a 6e69 6c63 6475 2f65 7261 6863 612f     ..include/arch/a
2ffe6d38:	7261 6863 3233 652f 336c 635f 6d6f 6f6d     arch32/el3_commo
2ffe6d48:	5f6e 616d 7263 736f 532e 6c00 6269 632f     n_macros.S.lib/c
2ffe6d58:	7570 2f73 6161 6372 3368 2f32 7063 5f75     pus/aarch32/cpu_
2ffe6d68:	6568 706c 7265 2e73 0053                    helpers.S.

2ffe6d72 <panic_msg>:
2ffe6d72:	4150      	.short	0x4150
2ffe6d74:	2043494e 	.word	0x2043494e
2ffe6d78:	50207461 	.word	0x50207461
2ffe6d7c:	203a2043 	.word	0x203a2043
2ffe6d80:	7830      	.short	0x7830
	...

2ffe6d83 <panic_end>:
2ffe6d83:	0d          	.byte	0x0d
2ffe6d84:	000a      	.short	0x000a

2ffe6d86 <assert_msg1>:
2ffe6d86:	5341      	.short	0x5341
2ffe6d88:	54524553 	.word	0x54524553
2ffe6d8c:	6946203a 	.word	0x6946203a
2ffe6d90:	0020656c 	.word	0x0020656c

2ffe6d94 <assert_msg2>:
2ffe6d94:	6e694c20 	.word	0x6e694c20
2ffe6d98:	2065      	.short	0x2065
2ffe6d9a:	00          	.byte	0x00
2ffe6d9b:	64          	.byte	0x64
2ffe6d9c:	65766972 	.word	0x65766972
2ffe6da0:	732f7372 	.word	0x732f7372
2ffe6da4:	61752f74 	.word	0x61752f74
2ffe6da8:	612f7472 	.word	0x612f7472
2ffe6dac:	68637261 	.word	0x68637261
2ffe6db0:	732f3233 	.word	0x732f3233
2ffe6db4:	32336d74 	.word	0x32336d74
2ffe6db8:	6e6f635f 	.word	0x6e6f635f
2ffe6dbc:	656c6f73 	.word	0x656c6f73
2ffe6dc0:	532e      	.short	0x532e
2ffe6dc2:	00          	.byte	0x00
2ffe6dc3:	6c          	.byte	0x6c
2ffe6dc4:	782f6269 	.word	0x782f6269
2ffe6dc8:	5f74616c 	.word	0x5f74616c
2ffe6dcc:	6c626174 	.word	0x6c626174
2ffe6dd0:	765f7365 	.word	0x765f7365
2ffe6dd4:	61612f32 	.word	0x61612f32
2ffe6dd8:	33686372 	.word	0x33686372
2ffe6ddc:	6e652f32 	.word	0x6e652f32
2ffe6de0:	656c6261 	.word	0x656c6261
2ffe6de4:	756d6d5f 	.word	0x756d6d5f
2ffe6de8:	532e      	.short	0x532e
	...

2ffe6deb <abort_str>:
2ffe6deb:	0a          	.byte	0x0a
2ffe6dec:	726f6241 	.word	0x726f6241
2ffe6df0:	74612074 	.word	0x74612074
2ffe6df4:	7830203a 	.word	0x7830203a
	...

2ffe6df9 <prefetch_abort_str>:
2ffe6df9:	0a          	.byte	0x0a
2ffe6dfa:	7250      	.short	0x7250
2ffe6dfc:	74656665 	.word	0x74656665
2ffe6e00:	41206863 	.word	0x41206863
2ffe6e04:	74726f62 	.word	0x74726f62
2ffe6e08:	3a746120 	.word	0x3a746120
2ffe6e0c:	00783020 	.word	0x00783020

2ffe6e10 <data_abort_str>:
2ffe6e10:	7461440a 	.word	0x7461440a
2ffe6e14:	62412061 	.word	0x62412061
2ffe6e18:	2074726f 	.word	0x2074726f
2ffe6e1c:	203a7461 	.word	0x203a7461
2ffe6e20:	7830      	.short	0x7830
	...

2ffe6e23 <undefined_str>:
2ffe6e23:	0a          	.byte	0x0a
2ffe6e24:	65646e55 	.word	0x65646e55
2ffe6e28:	656e6966 	.word	0x656e6966
2ffe6e2c:	6e692064 	.word	0x6e692064
2ffe6e30:	75727473 	.word	0x75727473
2ffe6e34:	6f697463 	.word	0x6f697463
2ffe6e38:	7461206e 	.word	0x7461206e
2ffe6e3c:	7830203a 	.word	0x7830203a
	...

2ffe6e41 <exception_start_str>:
2ffe6e41:	0a          	.byte	0x0a
2ffe6e42:	7845      	.short	0x7845
2ffe6e44:	74706563 	.word	0x74706563
2ffe6e48:	206e6f69 	.word	0x206e6f69
2ffe6e4c:	65646f6d 	.word	0x65646f6d
2ffe6e50:	0078303d 	.word	0x0078303d

2ffe6e54 <exception_end_str>:
2ffe6e54:	3a746120 	.word	0x3a746120
2ffe6e58:	00783020 	.word	0x00783020

2ffe6e5c <dfsr_str>:
2ffe6e5c:	53464420 	.word	0x53464420
2ffe6e60:	203d2052 	.word	0x203d2052
2ffe6e64:	7830      	.short	0x7830
	...

2ffe6e67 <dfar_str>:
2ffe6e67:	20          	.byte	0x20
2ffe6e68:	52414644 	.word	0x52414644
2ffe6e6c:	30203d20 	.word	0x30203d20
2ffe6e70:	0078      	.short	0x0078

2ffe6e72 <ifsr_str>:
2ffe6e72:	4920      	.short	0x4920
2ffe6e74:	20525346 	.word	0x20525346
2ffe6e78:	7830203d 	.word	0x7830203d
	...

2ffe6e7d <ifar_str>:
2ffe6e7d:	20          	.byte	0x20
2ffe6e7e:	4649      	.short	0x4649
2ffe6e80:	3d205241 	.word	0x3d205241
2ffe6e84:	00783020 	.word	0x00783020

2ffe6e88 <end_error_str>:
2ffe6e88:	0d0a      	.short	0x0d0a
2ffe6e8a:	00          	.byte	0x00
2ffe6e8b:	23          	.byte	0x23
2ffe6e8c:	72646461 	.word	0x72646461
2ffe6e90:	2d737365 	.word	0x2d737365
2ffe6e94:	6c6c6563 	.word	0x6c6c6563
2ffe6e98:	0073      	.short	0x0073
2ffe6e9a:	7323      	.short	0x7323
2ffe6e9c:	2d657a69 	.word	0x2d657a69
2ffe6ea0:	6c6c6563 	.word	0x6c6c6563
2ffe6ea4:	0073      	.short	0x0073
2ffe6ea6:	696c      	.short	0x696c
2ffe6ea8:	2c78756e 	.word	0x2c78756e
2ffe6eac:	6e616870 	.word	0x6e616870
2ffe6eb0:	00656c64 	.word	0x00656c64
2ffe6eb4:	696c612f 	.word	0x696c612f
2ffe6eb8:	73657361 	.word	0x73657361
2ffe6ebc:	00          	.byte	0x00
2ffe6ebd:	63          	.byte	0x63
2ffe6ebe:	6d6f      	.short	0x6d6f
2ffe6ec0:	69746170 	.word	0x69746170
2ffe6ec4:	00656c62 	.word	0x00656c62
2ffe6ec8:	45535341 	.word	0x45535341
2ffe6ecc:	203a5452 	.word	0x203a5452
2ffe6ed0:	253a7325 	.word	0x253a7325
2ffe6ed4:	0a64      	.short	0x0a64
2ffe6ed6:	00          	.byte	0x00
2ffe6ed7:	6c          	.byte	0x6c
2ffe6ed8:	6c2f6269 	.word	0x6c2f6269
2ffe6edc:	2f636269 	.word	0x2f636269
2ffe6ee0:	6e697270 	.word	0x6e697270
2ffe6ee4:	632e6674 	.word	0x632e6674
2ffe6ee8:	00783000 	.word	0x00783000
2ffe6eec:	706e730a 	.word	0x706e730a
2ffe6ef0:	746e6972 	.word	0x746e6972
2ffe6ef4:	73203a66 	.word	0x73203a66
2ffe6ef8:	69636570 	.word	0x69636570
2ffe6efc:	72656966 	.word	0x72656966
2ffe6f00:	74697720 	.word	0x74697720
2ffe6f04:	53412068 	.word	0x53412068
2ffe6f08:	20494943 	.word	0x20494943
2ffe6f0c:	65646f63 	.word	0x65646f63
2ffe6f10:	64252720 	.word	0x64252720
2ffe6f14:	6f6e2027 	.word	0x6f6e2027
2ffe6f18:	75732074 	.word	0x75732074
2ffe6f1c:	726f7070 	.word	0x726f7070
2ffe6f20:	2e646574 	.word	0x2e646574
2ffe6f24:	00000000 	.word	0x00000000

2ffe6f28 <__CPU_OPS_START__>:
2ffe6f28:	410fc070 	.word	0x410fc070
2ffe6f2c:	2ffd670c 	.word	0x2ffd670c

2ffe6f30 <__CPU_OPS_END__>:
2ffe6f30:	00000001 	.word	0x00000001
2ffe6f34:	2ffe41d0 	.word	0x2ffe41d0
2ffe6f38:	2ffd898d 	.word	0x2ffd898d
2ffe6f3c:	2ffd8a03 	.word	0x2ffd8a03
2ffe6f40:	2ffd898f 	.word	0x2ffd898f

2ffe6f44 <__PARSER_LIB_DESCS_END__>:
	...

2ffe6f60 <bl2_vector_table>:
2ffe6f60:	eaffbc26 	b	2ffd6000 <bl2_entrypoint>
2ffe6f64:	eaffbcd1 	b	2ffd62b0 <report_undef_inst>
2ffe6f68:	eaffbccb 	b	2ffd629c <report_exception>
2ffe6f6c:	eaffbcd3 	b	2ffd62c0 <report_prefetch_abort>
2ffe6f70:	eaffbcd6 	b	2ffd62d0 <report_data_abort>
2ffe6f74:	eaffbcc8 	b	2ffd629c <report_exception>
2ffe6f78:	eaffbcc7 	b	2ffd629c <report_exception>
2ffe6f7c:	eaffbcc6 	b	2ffd629c <report_exception>

2ffe6f80 <__zeromem_from_thumb>:
2ffe6f80:	4778      	bx	pc
2ffe6f82:	e7fd      	b.n	2ffe6f80 <__zeromem_from_thumb>
2ffe6f84:	eaffbd35 	b	2ffd6460 <zero_normalmem>

2ffe6f88 <__clean_dcache_range_from_thumb>:
2ffe6f88:	4778      	bx	pc
2ffe6f8a:	e7fd      	b.n	2ffe6f88 <__clean_dcache_range_from_thumb>
2ffe6f8c:	eaffbd15 	b	2ffd63e8 <clean_dcache_range>

2ffe6f90 <__enable_mmu_direct_svc_mon_from_thumb>:
2ffe6f90:	4778      	bx	pc
2ffe6f92:	e7fd      	b.n	2ffe6f90 <__enable_mmu_direct_svc_mon_from_thumb>
2ffe6f94:	eaffbdb7 	b	2ffd6678 <enable_mmu_direct_svc_mon>

2ffe6f98 <__console_register_from_arm>:
2ffe6f98:	e51ff004 	ldr	pc, [pc, #-4]	; 2ffe6f9c <__console_register_from_arm+0x4>
2ffe6f9c:	2ffdcb75 	.word	0x2ffdcb75

2ffe6fa0 <__flush_dcache_range_from_thumb>:
2ffe6fa0:	4778      	bx	pc
2ffe6fa2:	e7fd      	b.n	2ffe6fa0 <__flush_dcache_range_from_thumb>
2ffe6fa4:	eaffbd00 	b	2ffd63ac <flush_dcache_range>

2ffe6fa8 <__spin_lock_from_thumb>:
2ffe6fa8:	4778      	bx	pc
2ffe6faa:	e7fd      	b.n	2ffe6fa8 <__spin_lock_from_thumb>
2ffe6fac:	eaffbc79 	b	2ffd6198 <spin_lock>

2ffe6fb0 <__bl2_run_next_image_from_thumb>:
2ffe6fb0:	4778      	bx	pc
2ffe6fb2:	e7fd      	b.n	2ffe6fb0 <__bl2_run_next_image_from_thumb>
2ffe6fb4:	eaffbc67 	b	2ffd6158 <bl2_run_next_image>

2ffe6fb8 <__spin_unlock_from_thumb>:
2ffe6fb8:	4778      	bx	pc
2ffe6fba:	e7fd      	b.n	2ffe6fb8 <__spin_unlock_from_thumb>
2ffe6fbc:	eaffbc7e 	b	2ffd61bc <spin_unlock>

2ffe6fc0 <__RO_END_UNALIGNED__>:
	...
