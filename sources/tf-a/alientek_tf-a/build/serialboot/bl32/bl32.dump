
/home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/bl32.elf:     file format elf32-littlearm
/home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/bl32.elf
architecture: armv7, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x2fffce00

Program Header:
    LOAD off    0x00000000 vaddr 0x2ffe0000 paddr 0x2ffe0000 align 2**16
         filesz 0x0001d540 memsz 0x0001ed40 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx
private flags = 5000200: [Version5 EABI] [soft-float ABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 ro            00010000  2ffed000  2ffed000  0000d000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000540  2fffd000  2fffd000  0001d000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 stacks        00000c00  2fffd540  2fffd540  0001d540  2**6
                  ALLOC
  3 .bss          00000c00  2fffe140  2fffe140  0001d540  2**6
                  ALLOC
  4 .debug_info   00049271  00000000  00000000  0001d540  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000e4d5  00000000  00000000  000667b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00002458  00000000  00000000  00074c88  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0002403b  00000000  00000000  000770e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000a6a9  00000000  00000000  0009b11b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      0000005a  00000000  00000000  000a57c4  2**0
                  CONTENTS, READONLY
 10 .ARM.attributes 0000003b  00000000  00000000  000a581e  2**0
                  CONTENTS, READONLY
 11 .debug_loc    0002f8b2  00000000  00000000  000a5859  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00006678  00000000  00000000  000d5110  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00005cf4  00000000  00000000  000db788  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
2ffed000 l    d  ro	00000000 ro
2fffd000 l    d  .data	00000000 .data
2fffd540 l    d  stacks	00000000 stacks
2fffe140 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/entrypoint.o
2ffed3c0 l     F ro	00000084 sp_min_exit
00000000 l    df *ABS*	00000000 sp_min_main.c
2fffe140 l     O .bss	00000008 sp_min_cpu_ctx_ptr
2fffe148 l     O .bss	00000120 sp_min_smc_context
2fffa590 l     O ro	0000000c psci_args.7162
00000000 l    df *ABS*	00000000 runtime_svc.c
00000000 l    df *ABS*	00000000 plat_sp_min_common.c
00000000 l    df *ABS*	00000000 std_svc_setup.c
2ffed7b0 l     F ro	0000007c std_svc_smc_handler
2ffed82c l     F ro	00000024 std_svc_setup
2fffcdc4 l     O ro	00000010 __svc_desc_std_svc
00000000 l    df *ABS*	00000000 context_mgmt.c
00000000 l    df *ABS*	00000000 errata_report.c
00000000 l    df *ABS*	00000000 psci_off.c
00000000 l    df *ABS*	00000000 psci_on.c
00000000 l    df *ABS*	00000000 psci_suspend.c
00000000 l    df *ABS*	00000000 psci_common.c
2fffe268 l     O .bss	00000002 psci_req_local_pwr_states
2fffa798 l     O ro	0000000c psci_state_type_str.7419
00000000 l    df *ABS*	00000000 psci_main.c
00000000 l    df *ABS*	00000000 psci_setup.c
2fffe270 l     O .bss	00000040 psci_ns_context
00000000 l    df *ABS*	00000000 psci_system_off.c
00000000 l    df *ABS*	00000000 psci_mem_protect.c
00000000 l    df *ABS*	00000000 bakery_lock_normal.c
00000000 l    df *ABS*	00000000 stm32mp1_calib.c
2ffeeca8 l     F ro	00000084 trim_table_init
2ffeed2c l     F ro	00000020 csi_get_trimed_cal
2ffeed4c l     F ro	00000028 csi_set_trim
2ffeed74 l     F ro	0000001c hsi_get_trimed_cal
2ffeed90 l     F ro	00000024 hsi_set_trim
2ffeedb4 l     F ro	000001b0 rcc_calibration
2fffe2b0 l     O .bss	00000001 rcc_wakeup
2fffe2b4 l     O .bss	00000004 timer_val
2fffd000 l     O .data	00000022 fbv_csi
2fffd022 l     O .data	00000022 fbv_hsi
2fffd044 l     O .data	000000a8 stm32mp1_clk_cal_csi
2fffd0ec l     O .data	000000a8 stm32mp1_clk_cal_hsi
00000000 l    df *ABS*	00000000 etzpc.c
2fffe2b8 l     O .bss	0000000c etzpc_dev
00000000 l    df *ABS*	00000000 stm32_rng.c
2fffe2c4 l     O .bss	00000008 stm32_rng
00000000 l    df *ABS*	00000000 stm32_rtc.c
2ffef440 l     F ro	00000030 stm32_rtc_read_calendar
2ffef470 l     F ro	0000002c stm32_is_a_leap_year
2ffef49c l     F ro	00000050 stm32_rtc_get_date
2ffef4ec l     F ro	00000050 stm32_rtc_get_time
2fffe2cc l     O .bss	00000004 lock
2fffe2d0 l     O .bss	00000010 rtc_dev
2fffa9a9 l     O ro	0000000c month_len.6671
00000000 l    df *ABS*	00000000 stm32_tamp.c
2fffe2e0 l     O .bss	0000001c stm32_tamp
00000000 l    df *ABS*	00000000 stm32_timer.c
2ffefbb4 l     F ro	0000007c stm32_timer_config
2ffefc30 l     F ro	0000007a stm32_timer_start_capture.part.0
2fffe2fc l     O .bss	00000020 stm32_timer
2fffaaf8 l     O ro	00000018 __func__.6536
00000000 l    df *ABS*	00000000 sp_min_setup.c
2ffefe24 l     F ro	00000020 stm32mp1_tamper_action
2fffe31c l     O .bss	00000024 bl33_image_ep_info
2fffe340 l     O .bss	00000018 console
2fffd194 l     O .data	00000024 ext_tamp
2fffd1b8 l     O .data	00000030 int_tamp
2fffacd0 l     O ro	00000018 tamper_name
00000000 l    df *ABS*	00000000 stm32mp1_low_power.c
2fffe358 l     O .bss	00000001 enter_cstop_done
2fffe35c l     O .bss	00000004 gicc_pmr
2fffe360 l     O .bss	00000400 int_stack
2fffe760 l     O .bss	0000000c sleep_time
2fffad68 l     O ro	00000054 config_pwr
00000000 l    df *ABS*	00000000 stm32mp1_pm.c
2fff0410 l     F ro	00000002 stm32_pwr_domain_off
2fff0412 l     F ro	0000001c stm32_validate_power_state
2fff0430 l     F ro	00000018 stm32_validate_ns_entrypoint
2fff0448 l     F ro	0000000c stm32_node_hw_state
2fff0454 l     F ro	00000008 stm32_get_sys_suspend_power_state
2fff045c l     F ro	00000014 stm32_system_reset
2fff0470 l     F ro	00000018 stm32_pwr_domain_suspend
2fff0488 l     F ro	0000003c stm32_system_off
2fff04c4 l     F ro	00000040 stm32_pwr_domain_pwr_down_wfi
2fff0504 l     F ro	00000014 stm32_pwr_domain_on_finish
2fff0518 l     F ro	00000084 stm32_pwr_domain_on
2fff059c l     F ro	0000003c stm32_cpu_standby
2fff05d8 l     F ro	00000002 stm32_pwr_domain_suspend_finish
2fffe76c l     O .bss	00000004 cntfrq_core0
2fffe770 l     O .bss	00000004 saved_entrypoint
2fffe774 l     O .bss	00000004 stm32_sec_entrypoint
2fffaddc l     O ro	00000054 stm32_psci_ops
00000000 l    df *ABS*	00000000 stm32mp1_power_config.c
2fffe778 l     O .bss	00000004 deepest_system_suspend_mode
2fffe77c l     O .bss	00000003 pm_dom
2fffe77f l     O .bss	00000007 stm32mp1_supported_soc_modes
2fffe788 l     O .bss	00000004 system_off_mode
00000000 l    df *ABS*	00000000 stm32mp1_shared_resources.c
2fff0738 l     F ro	00000038 decprot2str
2fff0770 l     F ro	00000034 get_gpioz_nbpin
2fff07a4 l     F ro	000000b0 register_periph
2fff0854 l     F ro	00000128 register_periph_iomem
2fff097c l     F ro	00000054 check_decprot
2fff09d0 l     F ro	0000003c decprot_periph_attr
2fff0a0c l     F ro	00000040 stm32mp_gpio_bank_is_non_secure.part.0
2fffe78c l     O .bss	00000001 registering_locked
2fffe78d l     O .bss	00000014 shres_state
2fffd1e8 l     O .data	00000001 gpioz_nbpin
2fffb0a0 l     O ro	00000090 shres2decprot_tbl
2fffb130 l     O ro	00000050 shres2str_id_tbl
00000000 l    df *ABS*	00000000 stm32mp1_topology.c
2fffb180 l     O ro	00000002 stm32mp1_power_domain_tree_desc
00000000 l    df *ABS*	00000000 gic_common.c
00000000 l    df *ABS*	00000000 gicv2_helpers.c
00000000 l    df *ABS*	00000000 gicv2_main.c
2fffe7a4 l     O .bss	00000004 driver_data
2fffe7a8 l     O .bss	00000004 gic_lock
00000000 l    df *ABS*	00000000 plat_gicv2.c
00000000 l    df *ABS*	00000000 stm32_gic.c
2fff157c l     F ro	00000004 fdt32_to_cpu
2fff1580 l     F ro	00000062 enable_gic_interrupt
2fffe7ac l     O .bss	00000008 stm32_gic
2fffd1ec l     O .data	00000018 platform_gic_data
2fffd204 l     O .data	00000008 target_mask_array
2fffb230 l     O ro	0000002c stm32_interrupt_props
00000000 l    df *ABS*	00000000 plat_psci_common.c
00000000 l    df *ABS*	00000000 bsec_svc.c
2fff17e4 l     F ro	00000064 bsec_check_ssp
00000000 l    df *ABS*	00000000 low_power_svc.c
00000000 l    df *ABS*	00000000 pwr_svc.c
00000000 l    df *ABS*	00000000 rcc_svc.c
00000000 l    df *ABS*	00000000 stm32mp1_svc_setup.c
2fff1ec4 l     F ro	00000004 stm32mp1_svc_setup
2fff1ec8 l     F ro	000000f0 stm32mp1_svc_smc_handler
2fffcdd4 l     O ro	00000010 __svc_desc_stm32mp1_sip_svc
00000000 l    df *ABS*	00000000 base.c
2fff1fb8 l     F ro	0000008c discover_list_protocols
2fff2044 l     F ro	00000024 discover_implementation_version
2fff2068 l     F ro	00000044 report_message_attributes
2fff20ac l     F ro	00000028 report_version
2fff20d4 l     F ro	0000002e report_attributes
2fff2104 l     F ro	00000054 discover_sub_vendor
2fff2158 l     F ro	00000054 discover_vendor
2fffb310 l     O ro	0000001c scmi_base_handler_table
00000000 l    df *ABS*	00000000 clock.c
2fff21d0 l     F ro	0000000c confine_array_index
2fff21dc l     F ro	00000044 report_message_attributes
2fff2220 l     F ro	00000028 report_version
2fff2248 l     F ro	00000030 write_rate_desc_array_in_buffer
2fff2278 l     F ro	00000034 report_attributes
2fff22ac l     F ro	000000fc scmi_clock_describe_rates
2fff23a8 l     F ro	00000060 scmi_clock_rate_get
2fff2408 l     F ro	0000004a scmi_clock_rate_set
2fff2454 l     F ro	00000090 scmi_clock_attributes
2fff24e4 l     F ro	0000004e scmi_clock_config_set
2fffb348 l     O ro	00000020 scmi_clock_handler_table
00000000 l    df *ABS*	00000000 entry.c
00000000 l    df *ABS*	00000000 reset_domain.c
2fff25fc l     F ro	00000044 report_message_attributes
2fff2640 l     F ro	00000028 report_version
2fff2668 l     F ro	0000002e report_attributes
2fff2698 l     F ro	00000094 reset_domain_attributes
2fff272c l     F ro	00000078 reset_request
2fffb3dc l     O ro	00000014 scmi_rd_handler_table
00000000 l    df *ABS*	00000000 smt.c
2fff27c8 l     F ro	000000b0 scmi_proccess_smt
2fffe7b4 l     O .bss	000000b8 fast_smc_payload
2fffe86c l     O .bss	00000004 smt_channels_lock
00000000 l    df *ABS*	00000000 stm32mp1_scmi.c
2fff28b8 l     F ro	00000010 find_resource.part.0
2fff28c8 l     F ro	00000034 find_clock
2fff28fc l     F ro	00000034 find_rd
2fffd20c l     O .data	00000020 scmi_channel
2fffd22c l     O .data	000000fc stm32_scmi0_clock
2fffd328 l     O .data	00000058 stm32_scmi0_reset_domain
2fffd380 l     O .data	00000024 stm32_scmi1_clock
2fffb52c l     O ro	00000020 agent_resources
2fffb54c l     O ro	00000003 plat_protocol_list
2fffb54f l     O ro	00000001 sub_vendor
2fffb550 l     O ro	00000003 vendor
00000000 l    df *ABS*	00000000 tf_log.c
2fffd3a4 l     O .data	00000004 max_log_level
00000000 l    df *ABS*	00000000 multi_console.c
00000000 l    df *ABS*	00000000 plat_log_common.c
2fffb5b8 l     O ro	00000014 plat_prefix_str
00000000 l    df *ABS*	00000000 plat_common.c
00000000 l    df *ABS*	00000000 ctzdi2.c
00000000 l    df *ABS*	00000000 udivmoddi4.c
00000000 l    df *ABS*	00000000 stm32mp_common.c
2fffe870 l     O .bss	00000004 lock
00000000 l    df *ABS*	00000000 stm32mp1_private.c
2fff32b4 l     F ro	0000004c get_part_number
2fffe874 l     O .bss	00000004 part_number.7224
2fffb680 l     O ro	00000078 stm32mp1_mmap
2fffb6f8 l     O ro	00000020 stm32mp1_uart_addresses
2fffb718 l     O ro	00000084 tzc_source_ip
00000000 l    df *ABS*	00000000 xlat_tables_arch.c
00000000 l    df *ABS*	00000000 xlat_tables_context.c
2fffe880 l     O .bss	00000020 tf_base_xlat_table
2fffe8a0 l     O .bss	00000014 tf_mapped_regions
2fffe8b8 l     O .bss	000000a8 tf_mmap
2fffd3b0 l     O .data	00000048 tf_xlat_ctx
00000000 l    df *ABS*	00000000 xlat_tables_core.c
2fff3738 l     F ro	00000158 mmap_add_region_check
2fff3890 l     F ro	0000001a xlat_clean_dcache_range
2fff38ac l     F ro	00000028 xlat_table_get_index
2fff38d4 l     F ro	00000158 xlat_tables_unmap_region
2fff3ae0 l     F ro	000001b4 xlat_tables_map_region
00000000 l    df *ABS*	00000000 xlat_tables_utils.c
00000000 l    df *ABS*	00000000 tzc400.c
2fffe960 l     O .bss	00000008 tzc400
00000000 l    df *ABS*	00000000 delay_timer.c
2fffe968 l     O .bss	00000004 timer_ops
00000000 l    df *ABS*	00000000 generic_delay_timer.c
2fff44e0 l     F ro	00000008 get_timer_value
2fffe96c l     O .bss	0000000c ops
00000000 l    df *ABS*	00000000 bsec2.c
2fff4544 l     F ro	00000004 fdt32_to_cpu
2fff4548 l     F ro	00000018 bsec_lock
2fff4560 l     F ro	00000018 bsec_unlock
2fff4578 l     F ro	00000018 otp_bank_offset
2fff4590 l     F ro	00000034 bsec_check_error
2fff4740 l     F ro	00000064 bsec_power_safmem
2fffe978 l     O .bss	00000004 bsec_base
2fffe97c l     O .bss	00000004 bsec_spinlock
2fffe980 l     O .bss	0000000c otp_nsec_access
00000000 l    df *ABS*	00000000 stm32mp_clkfunc.c
00000000 l    df *ABS*	00000000 stm32mp1_clk.c
2fff4f60 l     F ro	0000001c clock_is_always_on
2fff4f7c l     F ro	000000b8 stm32mp1_read_pll_freq
2fff5034 l     F ro	00000198 get_clock_rate
2fff51cc l     F ro	0000008c stm32mp1_pll_compute_pllxcfgr1
2fff5258 l     F ro	00000024 stm32mp1_pll_start
2fff527c l     F ro	00000016 stm32mp1_clk_lock
2fff5292 l     F ro	00000016 stm32mp1_clk_unlock
2fff52a8 l     F ro	00000080 stm32mp1_pll_stop
2fff5328 l     F ro	00000022 __clk_enable
2fff534a l     F ro	00000024 __clk_disable
2fff5370 l     F ro	00000034 stm32mp1_clk_get_gated_id
2fff53a4 l     F ro	00000078 stm32mp1_clk_get_parent
2fff541c l     F ro	0000007c __stm32mp1_clk_enable
2fff5498 l     F ro	00000078 __stm32mp1_clk_disable
2fff5510 l     F ro	0000006c stm32mp1_set_clkdiv
2fff557c l     F ro	00000080 stm32mp1_set_clksrc
2fff55fc l     F ro	00000088 stm32mp1_pll_output
2fff5684 l     F ro	00000034 stm32mp1_pll_config_output
2fff56b8 l     F ro	00000050 stm32mp1_pll_config
2fff5708 l     F ro	00000158 stm32mp1_pll1_config_from_opp_khz
2fff5910 l     F ro	0000021c clk_get_pll1_settings.part.0
2fffe98c l     O .bss	00000004 current_opp_khz
2fffe990 l     O .bss	000000b8 gate_refcounts
2fffea48 l     O .bss	00000004 mcudivr
2fffea4c l     O .bss	00000004 mssckselr
2fffea50 l     O .bss	0000004c pll1_settings
2fffea9c l     O .bss	00000004 pll3cr
2fffeaa0 l     O .bss	00000004 pll4cr
2fffeaa4 l     O .bss	00000004 refcount_lock
2fffeaa8 l     O .bss	00000004 reg_lock
2fffeaac l     O .bss	00000018 stm32mp1_osc
2fffd3f8 l     O .data	00000038 backup_clock_cfg
2fffd430 l     O .data	00000058 backup_clock_sc_cfg
2fffd488 l     O .data	00000088 backup_mux0_cfg
2fffd510 l     O .data	00000004 backup_mux4_cfg
2fffbd94 l     O ro	0000001a __func__.7241
2fffbdae l     O ro	00000003 axiss_parents
2fffbdb1 l     O ro	00000004 fmc_parents
2fffbdb5 l     O ro	00000004 i2c12_parents
2fffbdb9 l     O ro	00000004 i2c35_parents
2fffbdbd l     O ro	00000004 i2c46_parents
2fffbdc1 l     O ro	00000004 mcuss_parents
2fffbdc5 l     O ro	00000004 mpu_parents
2fffbdc9 l     O ro	00000022 parent_id_clock_id
2fffbdeb l     O ro	00000003 per_parents
2fffbdee l     O ro	00000003 pllncfgr2
2fffbdf1 l     O ro	00000004 qspi_parents
2fffbdf5 l     O ro	00000004 rng1_parents
2fffbdf9 l     O ro	00000004 rtc_parents
2fffbdfd l     O ro	00000004 sdmmc12_parents
2fffbe01 l     O ro	00000004 sdmmc3_parents
2fffbe05 l     O ro	00000006 spi6_parents
2fffbe0b l     O ro	00000002 stgen_parents
2fffbe0d l     O ro	00000008 stm32mp1_axi_div
2fffbe16 l     O ro	00000170 stm32mp1_clk_gate
2fffbf88 l     O ro	00000080 stm32mp1_clk_pll
2fffc008 l     O ro	00000108 stm32mp1_clk_sel
2fffc138 l     O ro	00000006 usart1_parents
2fffc133 l     O ro	00000005 uart6_parents
2fffc12e l     O ro	00000005 uart234578_parents
2fffc140 l     O ro	00000003 usbphy_parents
2fffc13e l     O ro	00000002 usbo_parents
2fffc110 l     O ro	00000010 stm32mp1_mcu_div
2fffc120 l     O ro	00000008 stm32mp1_mpu_apbx_div
2fffc128 l     O ro	00000006 stm32mp1_pll
00000000 l    df *ABS*	00000000 stm32mp1_ddr_helpers.c
2fff62d0 l     F ro	00000014 do_sw_handshake
2fff62e4 l     F ro	0000005c do_sw_ack
2fffeac4 l     O .bss	00000004 saved_ddr_sr_mode
2fffc15f l     O ro	0000000a CSWTCH.26
00000000 l    df *ABS*	00000000 stm32_gpio.c
2fff69da l     F ro	00000004 fdt32_to_cpu
00000000 l    df *ABS*	00000000 stm32_i2c.c
2fff6d44 l     F ro	0000002c i2c_transfer_config.isra.0
2fff6d70 l     F ro	00000044 i2c_wait_flag
2fff6db4 l     F ro	00000090 i2c_ack_failed
2fff6e44 l     F ro	00000042 i2c_wait_txis
2fff6e86 l     F ro	00000042 i2c_wait_stop
2fff6ec8 l     F ro	00000218 i2c_write
2fff70e0 l     F ro	000001ec i2c_read.isra.0
2fffc390 l     O ro	00000060 i2c_specs
00000000 l    df *ABS*	00000000 stm32_iwdg.c
2fffeac8 l     O .bss	00000020 stm32_iwdg
00000000 l    df *ABS*	00000000 stm32mp_pmic.c
2fff7b88 l     F ro	00000004 fdt32_to_cpu
2fff7b8c l     F ro	00000020 dt_get_pmic_node
2fff7bac l     F ro	00000060 dt_pmic_get_regulator_voltage
2fff7c0c l     F ro	00000244 pmic_operate
2fffeae8 l     O .bss	00000024 i2c_handle
2fffeb0c l     O .bss	00000004 pmic_i2c_addr
2fffd52c l     O .data	00000004 i2c_node.6740
2fffd530 l     O .data	00000004 node.6679
2fffd534 l     O .data	00000004 status.6683
00000000 l    df *ABS*	00000000 stpmic1.c
2fff8044 l     F ro	0000003c get_regulator_data
2fff8080 l     F ro	0000002a voltage_to_index
2fffeb10 l     O .bss	00000002 pmic_i2c_addr
2fffeb14 l     O .bss	00000004 pmic_i2c_handle
2fffc65c l     O ro	00000080 buck1_voltage_table
2fffc6dc l     O ro	0000004a buck2_voltage_table
2fffc726 l     O ro	00000070 buck3_voltage_table
2fffc796 l     O ro	0000007a buck4_voltage_table
2fffc810 l     O ro	00000002 fixed_5v_voltage_table
2fffc812 l     O ro	00000032 ldo1_voltage_table
2fffc844 l     O ro	00000032 ldo2_voltage_table
2fffc876 l     O ro	00000042 ldo3_voltage_table
2fffc8b8 l     O ro	00000002 ldo4_voltage_table
2fffc8ba l     O ro	0000003e ldo5_voltage_table
2fffc8f8 l     O ro	00000032 ldo6_voltage_table
2fffc92c l     O ro	000000e0 regulators_table
2fffca0c l     O ro	00000002 vref_ddr_voltage_table
00000000 l    df *ABS*	00000000 stm32mp1_reset.c
00000000 l    df *ABS*	00000000 stm32mp_dt.c
2fff8464 l     F ro	00000004 fdt32_to_cpu
2fff8468 l     F ro	00000024 fdt_get_node_parent_address_cells
2fff848c l     F ro	0000007c dt_get_stdout_node_offset
2fff8508 l     F ro	000000cc dt_get_opp_freqvolt_from_subnode
2fffeb18 l     O .bss	00000004 fdt_checked
00000000 l    df *ABS*	00000000 stm32mp_shres_helpers.c
2fffeb1c l     O .bss	00000004 shregs_lock
00000000 l    df *ABS*	00000000 stm32mp1_context.c
00000000 l    df *ABS*	00000000 stm32mp1_dbgmcu.c
2fff8cf0 l     F ro	0000002c stm32mp1_dbgmcu_init
00000000 l    df *ABS*	00000000 stm32mp1_security.c
00000000 l    df *ABS*	00000000 stm32mp1_syscfg.c
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/cpu_data.o
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/cpu_helpers.o
00000004 l       *ABS*	00000000 CPU_MIDR_SIZE
00000004 l       *ABS*	00000000 CPU_RESET_FUNC_SIZE
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_FUNC_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_LOCK_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_PRINTED_SIZE
00000000 l       *ABS*	00000000 CPU_MIDR
00000004 l       *ABS*	00000000 CPU_RESET_FUNC
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS
00000010 l       *ABS*	00000000 CPU_ERRATA_FUNC
00000014 l       *ABS*	00000000 CPU_ERRATA_LOCK
00000018 l       *ABS*	00000000 CPU_ERRATA_PRINTED
0000001c l       *ABS*	00000000 CPU_OPS_SIZE
2fff8f54 l       ro	00000000 error_exit
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/spinlock.o
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/psci_helpers.o
2fff901c l     F ro	0000003c do_stack_maintenance
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/platform_mp_stack.o
2fffd540 l       stacks	00000000 platform_normal_stacks
00000006 l       *ABS*	00000000 TZ_COUNT
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/debug.o
2fffcc39 l       ro	00000000 panic_msg
2fffcc4a l       ro	00000000 panic_end
2fffcc4d l       ro	00000000 assert_msg1
2fffcc5b l       ro	00000000 assert_msg2
2fff9154 l       ro	00000000 dec_print_loop
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/cache_helpers.o
2fff9214 l       ro	00000000 exit_loop_cimvac
2fff9200 l       ro	00000000 loop_cimvac
2fff9250 l       ro	00000000 exit_loop_cmvac
2fff923c l       ro	00000000 loop_cmvac
2fff928c l       ro	00000000 exit_loop_imvac
2fff9278 l       ro	00000000 loop_imvac
2fff9290 l     F ro	0000009c do_dcsw_op
2fff9314 l       ro	00000000 dcsw_loop_table
2fff929c l       ro	00000000 loop1
2fff92f0 l       ro	00000000 level_done
2fff92d0 l       ro	00000000 loop2
2fff92d4 l       ro	00000000 loop3
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/misc_helpers.o
2fff93b8 l       ro	00000000 do_disable_mmu
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/platform_helpers.o
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/stm32_console.o
2fff9414 l       ro	00000000 core_init_fail
2fff9468 l       ro	00000000 register_fail
2fff94b4 l       ro	00000000 putc_error
2fff9480 l       ro	00000000 txe_loop
2fff949c l       ro	00000000 tc_loop
2fff9504 l       ro	00000000 flush_error
2fff94e8 l       ro	00000000 txe_loop_3
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/enable_mmu.o
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/cortex_a7.o
00000004 l       *ABS*	00000000 CPU_MIDR_SIZE
00000004 l       *ABS*	00000000 CPU_RESET_FUNC_SIZE
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_FUNC_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_LOCK_SIZE
00000004 l       *ABS*	00000000 CPU_ERRATA_PRINTED_SIZE
00000000 l       *ABS*	00000000 CPU_MIDR
00000004 l       *ABS*	00000000 CPU_RESET_FUNC
00000008 l       *ABS*	00000000 CPU_PWR_DWN_OPS
00000010 l       *ABS*	00000000 CPU_ERRATA_FUNC
00000014 l       *ABS*	00000000 CPU_ERRATA_LOCK
00000018 l       *ABS*	00000000 CPU_ERRATA_PRINTED
0000001c l       *ABS*	00000000 CPU_OPS_SIZE
2fff95ac l     F ro	00000018 cortex_a7_disable_smp
2fff95c4 l     F ro	00000014 cortex_a7_enable_smp
2fff95d8 l     F ro	00000004 cortex_a7_reset_func
2fff95dc l     F ro	0000002c cortex_a7_core_pwr_dwn
2fff960c l     F ro	00000030 cortex_a7_cluster_pwr_dwn
2fff9640 l     F ro	00000004 cortex_a7_errata_report
2fffd538 l       .data	00000000 cortex_a7_errata_lock
2fffd53c l       .data	00000000 cortex_a7_errata_reported
00000000 l    df *ABS*	00000000 /home/share/samba/embed_linux/embeded_linux/sources/tf-a/alientek_tf-a/tf-a-stm32mp-2.2.r1/../build/serialboot/bl32/stm32mp1_helper.o
2fff965c l       ro	00000000 undef_inst_lbl
2fffcccf l       ro	00000000 abort_str
2fff968c l       ro	00000000 print_excpetion_info
2fff9670 l       ro	00000000 other_excpetion_lbl
2fffcd07 l       ro	00000000 undefined_str
2fffcd25 l       ro	00000000 exception_start_str
2fffcd38 l       ro	00000000 exception_end_str
2fffcd6c l       ro	00000000 end_error_str
2fffccdd l       ro	00000000 prefetch_abort_str
2fffcd56 l       ro	00000000 ifsr_str
2fffcd61 l       ro	00000000 ifar_str
2fffccf4 l       ro	00000000 data_abort_str
2fffcd40 l       ro	00000000 dfsr_str
2fffcd4b l       ro	00000000 dfar_str
2fff979c l     F ro	00000010 plat_stm32mp1_get_core_pos
00000000 l    df *ABS*	00000000 fdt.c
2fff98d0 l     F ro	00000004 fdt32_to_cpu
00000000 l    df *ABS*	00000000 fdt_addresses.c
00000000 l    df *ABS*	00000000 fdt_ro.c
2fff9b80 l     F ro	00000004 fdt32_to_cpu
2fff9b84 l     F ro	00000032 nextprop_
2fff9bb6 l     F ro	00000036 fdt_get_property_by_offset_
2fff9d28 l     F ro	00000078 fdt_get_property_namelen_
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
2fffa1ba l     F ro	00000080 unsigned_num_print
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 strnlen.c
00000000 l    df *ABS*	00000000 strrchr.c
00000000 l    df *ABS*	00000000 
00000000 l    df *ABS*	00000000 cpu_data_array.c
2fffce20 l     F ro	00000008 __spin_lock_from_thumb
2fffce28 l     F ro	00000008 __psci_do_pwrdown_cache_maintenance_from_thumb
2fffce30 l     F ro	00000008 __print_errata_status_from_thumb
2fffce38 l     F ro	00000008 __spin_unlock_from_thumb
2fffce40 l     F ro	00000008 __clean_dcache_range_from_thumb
2fffce48 l     F ro	00000008 __flush_dcache_range_from_thumb
2fffce50 l     F ro	00000008 __enable_mmu_direct_svc_mon_from_thumb
2fffce58 l     F ro	00000008 __console_register_from_arm
2fff4f18 g     F ro	00000048 stm32mp_stgen_restore_counter
2fffa3f6 g     F ro	00000016 putchar
2fff6364 g     F ro	000001f4 ddr_sw_self_refresh_exit
2ffed8f8 g     F ro	000000b4 cm_prepare_el3_exit
2fff2df0 g     F ro	0000001c console_set_scope
2fff81c8 g     F ro	00000026 stpmic1_lp_copy_reg
2fff9b38 g     F ro	00000048 fdt_address_cells
2fff44ac g     F ro	0000000a mdelay
2fff30c0 g     F ro	00000018 stm32mp_pwr_regs_lock
2fff992c g     F ro	0000003c fdt_offset_ptr
2fff7798 g     F ro	00000012 stm32_i2c_mem_read
2fff00bc g     F ro	000000a4 sp_min_platform_setup
2fff8a56 g     F ro	0000001a stm32mp_mmio_clrbits_32_shregs
2fff4d04 g     F ro	00000034 bsec_check_nsec_access_rights
2fff5dcc g     F ro	00000020 stm32mp1_clk_lp_load_opp_pll1_settings
2ffee592 g     F ro	00000018 psci_migrate_info_up_cpu
2fff2b84 g     F ro	000000a8 stm32mp1_init_scmi_server
2fffd514 g     O .data	00000018 stm32mp_osc_node_label
2fff2da4 g     F ro	00000040 console_register
2fff0f28 g     F ro	0000000c gicd_set_icenabler
2ffee3a0 g     F ro	000000c4 psci_cpu_suspend
2fff8e68 g     F ro	00000034 reset_handler
2ffed2e0 g     F ro	000000d0 sp_min_warm_entrypoint
2fff2878 g     F ro	00000020 scmi_smt_fastcall_smc_entry
2fff9350 g     F ro	00000064 zeromem
2fff58f4 g     F ro	00000016 stm32mp_clk_get_rate
2fffa4f6 g     O ro	00000021 version_string
2ffed444 g     F ro	00000024 smc_get_ctx
2fffce00 g       ro	00000000 __pubsub_psci_suspend_pwrdown_finish_end
2fff48f8 g     F ro	00000038 bsec_read_sr_lock
2ffee164 g     F ro	00000094 psci_validate_entry_point
2fff0afc g     F ro	00000018 stm32mp_gpio_bank_is_non_secure
2fff3d84 g     F ro	00000018 mmap_add_ctx
2fff2a6e g     F ro	00000044 plat_scmi_clock_set_state
2ffed47c g     F ro	00000024 cm_get_context
2fffa3dc g     F ro	0000001a printf
2fff3d9c g     F ro	00000168 mmap_add_dynamic_region_ctx
2fffec88 g     O .bss	00000018 mmu_cfg_params
2fff4166 g     F ro	00000002 xlat_tables_print
2ffee124 g     F ro	0000002c psci_release_pwr_domain_locks
2ffede04 g     F ro	00000030 psci_validate_power_state
2fff0e64 g     F ro	00000022 plat_core_pos_by_mpidr
2fff5bc8 g     F ro	00000038 stm32mp1_round_opp_khz
2fffd000 g       ro	00000000 __RW_START__
2fff3490 g     F ro	00000010 stm32mp_etzpc_binding2decprot
2ffef824 g     F ro	00000020 stm32_rtc_is_timestamp_enable
2ffed468 g     F ro	00000014 smc_get_next_ctx
2fff4b00 g     F ro	00000038 bsec_read_sw_lock
2fff110c g     F ro	0000002c gicv2_cpuif_enable
2fff2af0 g     F ro	00000018 plat_scmi_rd_count
2ffedd78 g     F ro	0000008c psci_cpu_suspend_finish
2fff78f4 g     F ro	00000040 stm32_iwdg_refresh
2fff8e40 g     F ro	00000010 _cpu_data
2fff9da0 g     F ro	0000003e fdt_getprop_namelen
2fff82f4 g     F ro	0000001a stpmic1_lp_set_mode
2fff3168 g     F ro	0000001c configure_mmu
2fff2930 g     F ro	00000020 plat_scmi_get_channel
2fff9cf8 g     F ro	00000018 fdt_first_property_offset
2fff3690 g     F ro	00000028 mmap_add_dynamic_region
2fff880c g     F ro	00000028 dt_get_node_by_compatible
2fff9110 g     F ro	0000006c asm_assert
2fff9340 g     F ro	00000010 dcsw_op_level1
2fff4b38 g     F ro	00000044 bsec_write_otp
2fff90a4 g     F ro	00000034 do_panic
2fff1174 g     F ro	00000044 gicv2_distif_init
2fff9100 g     F ro	00000010 report_data_abort
2fff9fa2 g     F ro	00000020 fdt_parent_offset
2fffa17e g     F ro	0000002c memmove
2fffeb20 g     O .bss	00000080 rt_svc_descs_indices
2ffed5d8 g     F ro	00000084 sp_min_warm_boot
2fff0ea6 g     F ro	0000000c gicd_write_isenabler
2fff05dc g     F ro	00000014 plat_setup_psci_ops
2fff35b0 g     F ro	000000ac setup_mmu_cfg
2fff9058 g     F ro	00000010 psci_power_down_wfi
2fff1574  w    F ro	00000004 plat_ic_set_interrupt_priority
2ffef17c g     F ro	00000030 etzpc_lock_decprot
2ffed65c g     F ro	00000016 sp_min_fiq
2fff3f04 g     F ro	0000010c mmap_remove_dynamic_region_ctx
2fff6ae0 g     F ro	00000204 dt_set_pinctrl_config
2fff430c g     F ro	0000004c tzc400_disable_filters
2fff8fec g     F ro	00000030 psci_do_pwrup_cache_maintenance
2ffee4ec g     F ro	0000002a psci_affinity_info
2fff9f02 g     F ro	0000001a fdt_path_offset
2fff2ea4  w    F ro	00000024 plat_log_get_prefix
2ffee518 g     F ro	0000006c psci_migrate
2fff80ac g     F ro	00000028 stpmic1_register_read
2fff9644 g     F ro	00000060 plat_report_exception
2fff05f0 g     F ro	000000dc stm32mp1_init_lp_states
2fff96b8 g     F ro	00000028 plat_report_undef_inst
2ffef9d0 g     F ro	000000dc stm32_tamp_it_handler
2ffef108 g     F ro	00000040 etzpc_configure_decprot
2fff06e0 g     F ro	00000058 stm32mp1_get_lp_soc_mode
2fffa4d8 g     O ro	0000001e build_message
2fff612c g     F ro	0000004c stm32mp1_clock_stopmode_save
2fff2898 g     F ro	00000020 scmi_smt_init_agent_channel
2ffee7a0 g     F ro	0000022c psci_setup
2fff4dd8 g     F ro	0000000c fdt_get_rcc_node
2fff36c8 g     F ro	0000003c init_xlat_tables
2fff69e0 g     F ro	00000100 set_gpio
2fffd000 g       .data	00000000 __DATA_START__
2fff5b68 g     F ro	0000005e stm32mp1_rtc_get_read_twice
2fff29a0 g     F ro	00000006 plat_scmi_clock_rates_array
2fff1508 g     F ro	00000038 gicv2_set_pmr
2ffef878 g     F ro	00000058 stm32_tamp_configure_internal
2fff31f4 g     F ro	00000020 stm32_get_gpio_bank_clock
2fffecc0 g     O .bss	00000004 psci_locks
2fff4728 g     F ro	0000000c bsec_read_debug_conf
2fff941c g     F ro	00000050 console_stm32_register
2fff29ea g     F ro	00000048 plat_scmi_clock_set_rate
2fff93dc  w    F ro	00000004 plat_disable_acp
2fff58a8 g     F ro	00000006 stm32mp1_clk_force_enable
2fff0be4 g     F ro	000000b8 stm32mp_nsec_can_access_reset
2fff2b4e g     F ro	00000036 plat_scmi_rd_set_state
2ffee08c g     F ro	00000014 psci_find_target_suspend_lvl
2fff34cc g     F ro	00000028 xlat_arch_regime_get_xn_desc
2fff7f08 g     F ro	00000108 initialize_pmic_i2c
2fff0f1c g     F ro	0000000c gicd_set_isenabler
2fff5890 g     F ro	0000000c stm32mp1_clk_rcc_regs_unlock
2ffee788 g     F ro	00000016 psci_arch_setup
2fffa0d8 g     F ro	00000040 fdt_node_offset_by_compatible
2fff88ec g     F ro	00000050 dt_get_cpu_regulator_name
2fff2c2c g     F ro	00000078 stm32mp1_pm_save_scmi_state
2ffeea28 g     F ro	00000038 psci_system_reset
2fff0f72 g     F ro	00000050 gicv2_spis_configure_defaults
2fff4930 g     F ro	0000007c bsec_shadow_register
2fff8c60 g     F ro	0000002c stm32_get_boot_interface
2ffef3a4 g     F ro	0000009c stm32_rng_init
2fff0f34 g     F ro	0000000a gicd_set_ipriorityr
2fffa168 g     F ro	00000016 memcpy
2fff6990 g     F ro	0000004a ddr_is_nonsecured_area
2fff48c0 g     F ro	00000038 bsec_set_sr_lock
2ffee150 g     F ro	00000012 psci_validate_mpidr
2ffee464 g     F ro	0000006c psci_system_suspend
2ffed8c8 g     F ro	00000018 cm_init_context_by_index
2fff4394 g     F ro	000000bc tzc400_it_handler
2ffef040 g     F ro	000000c8 stm32mp1_calib_init
2fff3098 g     F ro	00000008 stm32mp_ddrphyc_base
2fff9350 g     F ro	00000064 zero_normalmem
2ffedf08 g     F ro	0000002c psci_get_parent_pwr_domain_nodes
2fff93e0 g     F ro	00000024 __aeabi_uldivmod
2fff5f20 g     F ro	00000050 save_clock_pm_context
2fff8010 g     F ro	00000034 initialize_pmic
2fff1d48 g     F ro	00000094 pwr_scv_handler
2fff8c8c g     F ro	00000064 stm32_save_ddr_training_area
2fff836c g     F ro	00000014 stpmic1_bind_i2c
2ffee9f0 g     F ro	00000038 psci_system_off
2fff4e98 g     F ro	00000070 fdt_get_clock_id_by_name
2fff90f0 g     F ro	00000010 report_prefetch_abort
2fff49ac g     F ro	0000011c bsec_probe
2fff46e4 g     F ro	00000020 bsec_read_otp
2fff0eb2 g     F ro	0000000c gicd_write_icenabler
2fff15e2 g     F ro	00000016 stm32_gic_pcpu_init
2ffef024 g     F ro	0000001c stm32mp1_calib_start_csi_cal
2fff3684 g     F ro	0000000c mmap_add
2fff81ee g     F ro	0000002e stpmic1_register_update
2fff30a0 g     F ro	00000008 stm32mp_pwr_base
2fff308a g     F ro	00000006 plat_get_syscnt_freq2
2fff3118 g     F ro	00000020 stm32_get_gpio_bank_offset
2fff9878 g     F ro	00000014 plat_panic_handler
2fff8da4 g     F ro	00000068 stm32mp1_syscfg_enable_io_compensation
2fffcdc4 g       ro	00000000 __RT_SVC_DESCS_START__
2fff8a20 g     F ro	00000018 stm32mp_unlock_shregs
2fff9c5a g     F ro	00000080 fdt_subnode_offset_namelen
2fff6790 g     F ro	00000018 ddr_read_sr_mode
2fffe140 g       stacks	00000000 __STACKS_END__
2fffce00 g       ro	00000000 __pubsub_psci_suspend_pwrdown_start_end
2fff9f84 g     F ro	0000001e fdt_node_depth
2fffed00 g       .bss	00000000 __PERCPU_BAKERY_LOCK_END__
2fff3418 g     F ro	00000028 stm32_iwdg_get_instance
2fff2eec g     F ro	0000019e __udivmoddi4
2fff9218 g     F ro	0000003c clean_dcache_range
2ffefe44 g     F ro	000000d0 sp_min_plat_fiq_handler
2fff8ea0 g     F ro	00000040 prepare_cpu_pwr_dwn
2fff3184 g     F ro	00000014 get_uart_address
2ffed7a8  w    F ro	00000006 sp_min_plat_runtime_setup
2fff8740 g     F ro	00000088 dt_fill_device_info
2fff589c g     F ro	00000006 stm32mp_clk_enable
2ffee1f8 g     F ro	00000098 psci_warmboot_entrypoint
2ffef148 g     F ro	00000034 etzpc_get_decprot
2fff8380 g     F ro	00000070 stm32mp_reset_assert_to
2fff9740 g     F ro	00000048 plat_report_data_abort
2fff9084  w    F ro	0000001c plat_set_my_stack
2ffed4c0 g     F ro	00000020 cm_set_context_by_index
2fffcde4 g       ro	00000000 __RT_SVC_DESCS_END__
2fff4bec g     F ro	00000038 bsec_read_permanent_lock
2fff9a30 g     F ro	00000024 fdt_check_node_offset_
2fff2ca4 g     F ro	00000078 stm32mp1_pm_restore_scmi_state
2fff27a4 g     F ro	00000024 scmi_msg_get_rd_handler
2fff91a8 g     F ro	00000034 asm_print_hex
2fff296c g     F ro	00000018 plat_scmi_clock_count
2ffee9cc g     F ro	00000024 psci_prepare_next_non_secure_ctx
2fffec40 g     O .bss	00000018 psci_cpu_pd_nodes
00000c00 g       *ABS*	00000000 __BSS_SIZE__
2fff48b0 g     F ro	00000010 bsec_get_id
2fff918c g     F ro	0000001c asm_print_str
2fff866c g     F ro	0000005c fdt_get_interrupt
2fff9860 g     F ro	00000008 plat_crash_console_flush
2fff3090 g     F ro	00000008 stm32mp_ddrctrl_base
2fffa4aa g     F ro	00000014 strnlen
2ffee290 g     F ro	0000002c psci_spd_migrate_info
2fff1e78 g     F ro	0000004c rcc_opp_scv_handler
2fff8a38 g     F ro	0000001e stm32mp_mmio_clrsetbits_32_shregs
2fff9dde g     F ro	00000022 fdt_getprop
2fff8e50 g     F ro	00000014 _cpu_data_by_index
2ffed160 g     F ro	000000cc sp_min_handle_smc
2fff6214 g     F ro	000000bc stm32mp1_clk_probe
2fff1688 g     F ro	00000138 stm32_gic_enable_spi
2ffee2bc g     F ro	000000b0 psci_print_power_domain_map
2fffce60 g       ro	00000000 __RO_END_UNALIGNED__
2fff17c0 g     F ro	00000024 plat_get_target_pwr_state
2fff4d38 g     F ro	000000a0 fdt_osc_read_freq
2fff2e0c g     F ro	00000058 console_putc
2fff6178 g     F ro	00000098 stm32mp1_clock_stopmode_resume
2fff0a58 g     F ro	00000006 stm32mp_register_non_secure_periph_iomem
2fff0eca g     F ro	0000000c gicd_write_icfgr
2fffa4be g     F ro	0000001a strrchr
2ffede54 g     F ro	00000050 psci_is_last_on_cpu
2fff01a8 g     F ro	00000098 stm32_exit_cstop
2fff97b4 g     F ro	00000090 plat_crash_console_init
2fff91dc g     F ro	0000003c flush_dcache_range
2fff2964 g     F ro	00000008 plat_scmi_protocol_list
2fff15f8 g     F ro	00000090 stm32_gic_init
2fff77ac g     F ro	00000148 stm32_i2c_is_device_ready
2fff3300 g     F ro	00000040 stm32mp_supports_cpu_opp
2fff44b8 g     F ro	00000028 timer_init
2fffa004 g     F ro	00000046 fdt_stringlist_contains
2fff8230 g     F ro	00000014 stpmic1_regulator_enable
2fff3198 g     F ro	0000001a stm32mp_mask_timer
2fff48a0 g     F ro	00000010 bsec_get_version
2fff1058 g     F ro	000000b4 gicv2_secure_ppi_sgi_setup_props
2fffce00 g       ro	00000000 sp_min_vector_table
2fff34a8 g     F ro	00000006 xlat_get_min_virt_addr_space_size
2fff45d0 g     F ro	00000044 bsec_get_config
2fff5c00 g     F ro	00000070 stm32mp1_set_opp_khz
2fff21ac g     F ro	00000024 scmi_msg_get_base_handler
2ffef5ac g     F ro	000001c4 stm32_rtc_diff_calendar
2fff129c g     F ro	00000068 gicv2_set_pe_target_mask
2fff80fc g     F ro	00000074 stpmic1_regulator_voltage_get
2fffa23c g     F ro	000001a0 vprintf
2fff0f6a g     F ro	00000008 gicv2_get_cpuif_id
2fff86f0 g     F ro	00000050 fdt_read_uint32_array
2fff2a32 g     F ro	00000020 plat_scmi_clock_get_rate
2fff34ae g     F ro	0000001c is_dcache_enabled
2ffedbbc g     F ro	0000009c psci_cpu_on_finish
2fff932c g     F ro	00000014 dcsw_op_all
2fff45c4 g     F ro	0000000c bsec_get_base
2ffee4d0 g     F ro	0000001c psci_cpu_off
2fff9798 g     F ro	00000004 plat_reset_handler
2fff58b4 g     F ro	00000040 stm32mp_clk_is_enabled
2fff4de4 g     F ro	0000001e fdt_rcc_read_uint32_default
2fff9cda g     F ro	0000001e fdt_subnode_offset
2ffef1d0 g     F ro	000000f4 etzpc_init
2fff4e32 g     F ro	0000001c fdt_rcc_enable_it
2fff8f20 g     F ro	00000038 get_cpu_ops_ptr
2ffefcac g     F ro	00000034 stm32_timer_csi_freq
2fff8aa6 g     F ro	00000038 stm32mp1_pm_save_clock_cfg
2ffed4a0 g     F ro	00000020 cm_get_context_by_index
2ffed8e0 g     F ro	00000018 cm_init_my_context
2fff8a08 g     F ro	00000018 stm32mp_lock_shregs
2fff1578 g     F ro	00000004 plat_ic_set_priority_mask
2fffa130 g     F ro	0000001c memchr
2fff1568  w    F ro	00000004 plat_ic_acknowledge_interrupt
2fff2b08 g     F ro	00000046 plat_scmi_rd_autonomous
2fff988c g     F ro	00000044 wfi_svc_int_enable
2ffeff78 g     F ro	00000144 sp_min_early_platform_setup2
2fff3534 g     F ro	0000003c xlat_arch_current_el
2fff4614 g     F ro	000000d0 bsec_find_otp_name_in_dt
2fff1540 g     F ro	00000014 gicv2_interrupt_set_cfg
2fff9f1c g     F ro	00000068 fdt_supernode_atdepth_offset
2fff336c g     F ro	000000ac stm32mp_plat_reset
2fff86c8 g     F ro	00000028 fdt_read_uint32_default
00000040 g       *ABS*	00000000 __PERCPU_BAKERY_LOCK_SIZE__
2fff2534 g     F ro	00000020 scmi_msg_get_clock_handler
2fff0a98 g     F ro	00000064 stm32mp1_register_etzpc_decprot
2fff0e90 g     F ro	0000000c gicd_read_icfgr
2fff9b0c g     F ro	0000002a fdt_next_subnode
2ffed9d8 g     F ro	000000b8 psci_do_cpu_off
2fff323c g     F ro	00000030 stm32_get_otp_value_from_idx
2fffec80 g     O .bss	00000004 psci_caps
2fff2950 g     F ro	00000008 plat_scmi_vendor_name
2fff5f70 g     F ro	00000050 restore_clock_pm_context
2ffed850 g     F ro	00000078 cm_setup_context
2ffef770 g     F ro	0000006c stm32_rtc_get_timestamp
2fff4b7c g     F ro	00000038 bsec_set_sp_lock
2fffa43a g     F ro	00000038 strlcpy
2fffa482 g     F ro	00000028 strncmp
2fff2ec8  w    F ro	00000004 bl32_plat_enable_mmu
2fff2584 g     F ro	0000002c scmi_write_response
2fffed40 g       .bss	00000000 __BL32_END__
2fff8b94 g     F ro	00000084 stm32_restore_context
2fffd540 g       .data	00000000 __DATA_END__
2ffefd10 g     F ro	00000034 stm32_timer_freq_func
2fff90e0 g     F ro	00000010 report_undef_inst
2ffeef70 g     F ro	0000000c stm32mp1_calib_set_wakeup
2fff8858 g     F ro	00000094 dt_get_all_opp_freqvolt
2fff0160 g     F ro	00000002 sp_min_plat_arch_setup
2fffcde4 g       ro	00000000 __CPU_OPS_START__
2fff2984 g     F ro	0000001c plat_scmi_clock_get_name
2fff4450 g     F ro	0000005c udelay
2fff893c g     F ro	00000030 fdt_get_gpio_bank_pinctrl_node
2fff87ec g     F ro	0000001e dt_get_stdout_uart_info
2fff6210 g     F ro	00000002 stm32mp1_dump_clocks_state
2fff9a54 g     F ro	00000024 fdt_check_prop_offset_
2fff4e02 g     F ro	00000030 fdt_rcc_read_prop
2fff9254 g     F ro	0000003c inv_dcache_range
2fffd3a8 g     O .data	00000001 console_state
2fff9474 g     F ro	00000048 console_stm32_core_putc
2ffed000 g     F ro	00000134 sp_min_entrypoint
2ffee654 g     F ro	00000134 psci_smc_handler
2fff94dc g     F ro	00000030 console_stm32_core_flush
2fff4500 g     F ro	00000044 generic_delay_timer_init
2ffedc58 g     F ro	00000120 psci_cpu_suspend_start
2fff0a60 g     F ro	00000028 stm32mp_register_secure_gpio
2fff4734 g     F ro	0000000c bsec_get_status
2ffedea4 g     F ro	00000010 psci_init_req_local_pwr_states
2fff44e8 g     F ro	00000018 generic_delay_timer_init_args
2fffed40 g       .bss	00000000 __BAKERY_LOCK_END__
2fff2ab4 g     F ro	0000003c plat_scmi_rd_get_name
2fffa14c g     F ro	0000001c memcmp
2fff30a8 g     F ro	00000006 stm32mp_rcc_base
2ffeda90 g     F ro	0000012c psci_cpu_on_start
2fff7934 g     F ro	0000005c stm32_iwdg_it_handler
2ffee074 g     F ro	00000018 psci_find_max_off_lvl
2fff31b2 g     F ro	00000042 stm32mp_wait_cpu_reset
2fff3a2c g     F ro	000000b4 xlat_desc
2fff9e70 g     F ro	00000092 fdt_path_offset_namelen
2fff9d10 g     F ro	00000018 fdt_next_property_offset
2fff8d1c g     F ro	00000030 stm32mp1_dbgmcu_get_chip_dev_id
2fff0f3e g     F ro	0000002c gicd_set_icfgr
2fffec58 g     O .bss	00000020 psci_non_cpu_pd_nodes
2fff87c8 g     F ro	00000024 dt_get_node
2ffef008 g     F ro	0000001c stm32mp1_calib_start_hsi_cal
2fffed40 g       .bss	00000000 __BSS_END__
2fffce00 g       ro	00000000 __CPU_OPS_END__
2fff58ae g     F ro	00000006 stm32mp1_clk_force_disable
2fff2a52 g     F ro	0000001c plat_scmi_clock_get_state
2fff1570  w    F ro	00000004 plat_ic_disable_interrupt
2ffee36c g     F ro	00000004 psci_do_pwrdown_sequence
2fff42a4 g     F ro	00000068 tzc400_enable_filters
2ffef7dc g     F ro	00000048 stm32_rtc_set_tamper_timestamp
2fff8fd4 g     F ro	00000018 psci_do_pwrdown_cache_maintenance
2fff9fc2 g     F ro	00000042 fdt_node_offset_by_phandle
2fff2ecc g     F ro	00000020 __ctzdi2
2fff4e50 g     F ro	00000048 fdt_get_clock_id
2fff41e8 g     F ro	000000bc tzc400_configure_region
2ffee370 g     F ro	0000002e psci_cpu_on
2fff0278 g     F ro	00000198 stm32_enter_low_power
2fff8c18 g     F ro	0000001c stm32_get_stgen_from_context
2fff85d4 g     F ro	0000001c dt_open_and_check
2fff0ed6 g     F ro	00000022 gicd_set_igroupr
2fff93d0 g     F ro	00000008 disable_mmu_icache_secure
2ffee0a0 g     F ro	00000052 psci_validate_suspend_req
2ffef554 g     F ro	00000018 stm32_rtc_regs_unlock
2ffee5f4 g     F ro	00000060 psci_features
2fffa1aa g     F ro	00000010 memset
2ffefaac g     F ro	00000108 stm32_tamp_init
2fffecc0 g       .bss	00000000 __BAKERY_LOCK_START__
2ffedeb4 g     F ro	00000054 psci_get_target_local_pwr_states
2fff121c g     F ro	00000038 gicv2_get_pending_interrupt_id
2fff3138 g     F ro	0000002e stm32mp_get_cpu_supply_name
2ffef53c g     F ro	00000018 stm32_rtc_regs_lock
2fff8e0c g     F ro	00000034 stm32mp1_syscfg_disable_io_compensation
2fff94bc g     F ro	0000001c console_stm32_putc
2fff6984 g     F ro	0000000c ddr_restore_sr_mode
2fffec78 g     O .bss	00000004 psci_plat_pm_ops
2fff29a6 g     F ro	00000044 plat_scmi_clock_rates_by_step
2fff34a0 g     F ro	00000008 xlat_arch_get_max_supported_pa
2fff2554 g     F ro	00000030 scmi_status_response
2fff3704 g     F ro	00000034 enable_mmu_svc_mon
2fff4704 g     F ro	00000024 bsec_write_debug_conf
2fffce00 g       ro	00000000 __pubsub_psci_suspend_pwrdown_start_start
2fff67a8 g     F ro	000001cc ddr_set_sr_mode
2fff156c  w    F ro	00000004 plat_ic_end_of_interrupt
2ffef8d0 g     F ro	00000100 stm32_tamp_configure_external
2fff9e00 g     F ro	00000044 fdt_get_phandle
2fff0164 g     F ro	00000044 stm32_apply_pmic_suspend_config
2ffed4e0 g     F ro	00000020 get_arm_std_svc_args
2fffa422 g     F ro	00000018 strcmp
2fff7990 g     F ro	000001f8 stm32_iwdg_init
2ffeeb50 g     F ro	00000100 bakery_lock_get
2fff4810 g     F ro	00000090 bsec_permanent_lock_otp
2fff4168 g     F ro	00000024 tzc400_set_action
2fff8244 g     F ro	0000005c stpmic1_regulator_voltage_set
2ffeead0 g     F ro	0000004c psci_mem_protect
2fff821c g     F ro	0000000a stpmic1_powerctrl_on
2ffef56c g     F ro	00000040 stm32_rtc_get_calendar
2ffeec50 g     F ro	00000058 bakery_lock_release
2ffeff14 g     F ro	00000064 sp_min_plat_get_bl33_ep_info
2fff9404 g     F ro	00000018 console_stm32_core_init
2fff93b4 g     F ro	0000001c disable_mmu_secure
2fff0e5c g     F ro	00000008 plat_get_power_domain_tree_desc
2fff1384 g     F ro	00000040 gicv2_set_interrupt_priority
2fff72cc g     F ro	00000060 stm32_i2c_get_setup_from_fdt
2fff0fc4 g     F ro	00000094 gicv2_secure_spis_configure_props
2fff0ebe g     F ro	0000000c gicd_write_ipriorityr
2fff0c9c g     F ro	000001c0 stm32mp_lock_periph_registering
2fff8170 g     F ro	00000058 stpmic1_register_write
2fff80d4 g     F ro	00000028 stpmic1_is_regulator_enabled
2fff950c g     F ro	0000001c console_stm32_flush
2ffee5ac g     F ro	00000048 psci_node_hw_state
2fff6974 g     F ro	00000010 ddr_save_sr_mode
2fff98d4 g     F ro	00000058 fdt_check_header
2fff149c g     F ro	0000006c gicv2_set_spi_routing
2fff47a4 g     F ro	0000006c bsec_set_config
2fff8ee4 g     F ro	00000038 init_cpu_ops
2fff8c34 g     F ro	0000002c stm32_are_pll1_settings_valid_in_context
2fff2e64 g     F ro	00000040 console_flush
2fff3524 g     F ro	00000010 xlat_arch_tlbi_va_sync
2fff58a2 g     F ro	00000006 stm32mp_clk_disable
2fffd000 g       ro	00000000 __RO_END__
2fff9bfc g     F ro	0000005e fdt_get_name
2fff5c70 g     F ro	00000130 stm32mp1_clk_compute_all_pll1_settings
2fff0e86 g     F ro	0000000a gicd_read_igroupr
2ffed22c g     F ro	000000b4 sp_min_handle_fiq
2fff2de4 g     F ro	0000000c console_switch_state
2fff8f64 g     F ro	00000034 print_errata_status
2fff8fbc g     F ro	00000018 spin_unlock
2fff9ae6 g     F ro	00000026 fdt_first_subnode
2fff1554  w    F ro	00000014 plat_ic_get_pending_interrupt_id
2fffe140 g       .bss	00000000 __BSS_START__
2fff6058 g     F ro	000000d4 stm32mp1_clock_resume
2ffefce0 g     F ro	00000030 stm32_timer_hsi_freq
2ffeef7c g     F ro	0000008c stm32mp1_calib_it_handler
2ffed000 g       ro	00000000 __RO_START__
2fff82c4 g     F ro	0000001a stpmic1_regulator_mask_reset_set
2fff3c94 g     F ro	000000f0 mmap_add_region_ctx
2fff986c g     F ro	00000008 plat_crash_console_putc
2fff4c24 g     F ro	000000e0 bsec_program_otp
2fffebc0 g     O .bss	00000080 percpu_data
2fff1348 g     F ro	0000003c gicv2_disable_interrupt
2fff1ddc g     F ro	00000076 rcc_scv_handler
2fff2960 g     F ro	00000004 plat_scmi_protocol_count
2fff9a78 g     F ro	0000006e fdt_next_node
2fff1d30 g     F ro	00000018 pm_domain_scv_handler
2fff8226 g     F ro	0000000a stpmic1_switch_off
2fff896c g     F ro	0000009c fdt_get_gpioz_nbpins_from_dt
2fff8b18 g     F ro	0000007c stm32_save_context
2fff5da0 g     F ro	0000002c stm32mp1_clk_lp_save_opp_pll1_settings
2fff85f0 g     F ro	00000018 fdt_get_address
2fff8f98 g     F ro	00000024 spin_lock
2fff2d78 g     F ro	0000002c console_is_registered
2fff0240 g     F ro	00000038 stm32_pwr_down_wfi
2fff586e g     F ro	00000014 stm32mp1_rcc_is_mckprot
2fff30d8 g     F ro	00000018 stm32mp_pwr_regs_unlock
2fff6340 g     F ro	00000022 ddr_enable_clock
2ffede34 g     F ro	00000020 psci_query_sys_suspend_pwrstate
2fff8834 g     F ro	00000024 dt_get_ddr_size
2fff3570 g     F ro	00000040 is_mmu_enabled_ctx
2fff0a52 g     F ro	00000006 stm32mp_register_secure_periph_iomem
2fff418c g     F ro	0000005c tzc400_init
2ffeef64 g     F ro	0000000c stm32mp1_calib_get_wakeup
2fff2d1c g     F ro	0000005c tf_log
2fff1430 g     F ro	0000006c gicv2_raise_sgi
2fffce00 g       ro	00000000 __pubsub_psci_cpu_on_finish_start
2fff82de g     F ro	00000016 stpmic1_lp_reg_on_off
2fff0a4c g     F ro	00000006 stm32mp_register_secure_periph
2fff6558 g     F ro	00000238 ddr_standby_sr_entry
2fff3340 g     F ro	0000002c stm32mp_is_single_core
2fffed40 g       .bss	00000000 __RW_END__
2fff30f0 g     F ro	00000028 stm32_get_gpio_bank_base
2fff8608 g     F ro	00000064 fdt_get_status
2fff0a88 g     F ro	00000010 stm32mp_register_non_secure_gpio
2fff5884 g     F ro	0000000c stm32mp1_clk_rcc_regs_lock
2fff8ade g     F ro	00000038 stm32mp1_pm_restore_clock_cfg
2fff8a70 g     F ro	00000018 stm32mp_mmio_setbits_32_shregs
2fff9bec g     F ro	00000010 fdt_string
2fff96e8 g     F ro	00000048 plat_report_prefetch_abort
2fffd540 g       stacks	00000000 __STACKS_START__
2fff8d4c g     F ro	00000058 stm32mp1_security_setup
2ffed674 g     F ro	00000060 handle_runtime_svc
2ffedfb8 g     F ro	000000bc psci_do_state_coordination
2ffeea60 g     F ro	00000070 psci_system_reset2
2fff1848 g     F ro	000004e8 bsec_main
2fff9968 g     F ro	000000c6 fdt_next_tag
2fff4010 g     F ro	00000154 init_xlat_tables_ctx
2fff732c g     F ro	00000450 stm32_i2c_init
2fffce00 g       ro	00000000 __pubsub_psci_suspend_pwrdown_finish_start
2fff5b2c g     F ro	0000003c stm32mp_clk_timer_get_rate
2ffefd44 g     F ro	000000e0 stm32_timer_init
2fff777c g     F ro	0000001c stm32_i2c_mem_write
2fff1e52 g     F ro	00000026 rcc_cal_scv_handler
2fff97ac g     F ro	00000008 plat_my_core_pos
2fff9e44 g     F ro	0000002c fdt_get_alias_namelen
2fff11b8 g     F ro	00000064 gicv2_driver_init
2ffef1ac g     F ro	00000024 etzpc_configure_tzma
2fff4f08 g     F ro	00000010 stm32mp_stgen_get_counter
2fff30ae g     F ro	00000010 stm32mp_lock_available
2ffed6d4 g     F ro	000000d4 runtime_svc_init
2fff6ce4 g     F ro	00000060 set_gpio_secure_cfg
2fff1304 g     F ro	00000044 gicv2_enable_interrupt
2fff25b0 g     F ro	0000004c scmi_process_message
2fffa472 g     F ro	00000010 strlen
2fff1138 g     F ro	0000003c gicv2_pcpu_distif_init
2fff83f0 g     F ro	00000074 stm32mp_reset_deassert_to
2ffed500 g     F ro	000000d8 sp_min_main
2ffee584 g     F ro	0000000e psci_migrate_info_type
2ffef2c4 g     F ro	000000e0 stm32_rng_read
2fff3214 g     F ro	00000028 stm32_get_otp_index
2fff34f4 g     F ro	00000030 xlat_arch_tlbi_va
2fff3440 g     F ro	00000050 stm32_iwdg_get_otp_config
2fff1254 g     F ro	00000024 gicv2_acknowledge_interrupt
2fff7e50 g     F ro	00000028 dt_pmic_status
2fff1278 g     F ro	00000024 gicv2_end_of_interrupt
2fff2958 g     F ro	00000008 plat_scmi_sub_vendor_name
2fffa118 g     F ro	00000018 __assert
2ffeeb1c g     F ro	00000034 psci_mem_chk_range
2fff4ac8 g     F ro	00000038 bsec_set_sw_lock
2fff0ef8 g     F ro	00000024 gicd_clr_igroupr
2fffa40c g     F ro	00000016 strchr
2fff4164 g     F ro	00000002 xlat_mmap_print
2fff8310 g     F ro	0000005c stpmic1_lp_set_voltage
2fff82a0 g     F ro	00000024 stpmic1_regulator_pull_down_set
2fff952c g     F ro	00000074 enable_mmu_direct_svc_mon
2fff4358 g     F ro	0000003c tzc400_is_pending_interrupt
2fffa04a g     F ro	00000066 fdt_stringlist_search
2ffee0f4 g     F ro	00000030 psci_acquire_pwr_domain_locks
2fffa0b0 g     F ro	00000028 fdt_node_check_compatible
2fff5fc0 g     F ro	00000098 stm32mp1_clock_suspend
2fffce00 g       ro	00000000 __pubsub_psci_cpu_on_finish_end
2fff8a88 g     F ro	0000001e stm32_clean_context
2fff36b8 g     F ro	00000010 mmap_remove_dynamic_region
2fff7e8c g     F ro	0000007c dt_pmic_find_supply
2fff5860 g     F ro	0000000e stm32mp1_rcc_is_secure
2fff326c g     F ro	00000048 stm32_get_otp_value
2fff5dec g     F ro	00000134 stm32mp1_register_clock_parents_secure
2fffec84 g     O .bss	00000004 console_list
2ffedf34 g     F ro	00000084 psci_set_pwr_domains_to_run
2fff13c4 g     F ro	0000006c gicv2_set_interrupt_type
2fff06cc g     F ro	00000014 stm32mp1_set_pm_domain_state
2fff7e82 g     F ro	0000000a pmic_set_lp_config
2fff0e9c g     F ro	0000000a gicd_write_igroupr
2ffef844 g     F ro	00000034 stm32_rtc_init
2fff4bb4 g     F ro	00000038 bsec_read_sp_lock
2fff0b14 g     F ro	000000d0 stm32mp_nsec_can_access_clock
2fffecc0 g       .bss	00000000 __PERCPU_BAKERY_LOCK_START__
2fff9068  w    F ro	00000018 plat_get_my_stack
2fff365c g     F ro	00000028 mmap_add_region
2ffed9ac g     F ro	0000002a errata_needs_reporting
2fffec7c g     O .bss	00000004 psci_spd_pm
2fff7e78 g     F ro	0000000a pmic_configure_boot_on_regulators



Disassembly of section ro:

2ffed000 <sp_min_entrypoint>:
2ffed000:	e1a09000 	mov	r9, r0
2ffed004:	e1a0a001 	mov	sl, r1
2ffed008:	e1a0b002 	mov	fp, r2
2ffed00c:	e1a0c003 	mov	ip, r3
2ffed010:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffed014:	e3100001 	tst	r0, #1
2ffed018:	0a000002 	beq	2ffed028 <sp_min_entrypoint+0x28>
2ffed01c:	e59f0110 	ldr	r0, [pc, #272]	; 2ffed134 <sp_min_entrypoint+0x134>
2ffed020:	e3a010d4 	mov	r1, #212	; 0xd4
2ffed024:	ea003039 	b	2fff9110 <asm_assert>
2ffed028:	f1020016 	cps	#22
2ffed02c:	f57ff06f 	isb	sy
2ffed030:	e59f0100 	ldr	r0, [pc, #256]	; 2ffed138 <sp_min_entrypoint+0x138>
2ffed034:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
2ffed038:	ee0c0f30 	mcr	15, 0, r0, cr12, cr0, {1}
2ffed03c:	f57ff06f 	isb	sy
2ffed040:	eb002f88 	bl	2fff8e68 <reset_handler>
2ffed044:	e59f10f0 	ldr	r1, [pc, #240]	; 2ffed13c <sp_min_entrypoint+0x13c>
2ffed048:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffed04c:	e1800001 	orr	r0, r0, r1
2ffed050:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffed054:	f57ff06f 	isb	sy
2ffed058:	e3a00c02 	mov	r0, #512	; 0x200
2ffed05c:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed060:	f1080100 	cpsie	a
2ffed064:	f57ff06f 	isb	sy
2ffed068:	ee110f51 	mrc	15, 0, r0, cr1, cr1, {2}
2ffed06c:	e2000807 	and	r0, r0, #458752	; 0x70000
2ffed070:	e3800b03 	orr	r0, r0, #3072	; 0xc00
2ffed074:	ee010f51 	mcr	15, 0, r0, cr1, cr1, {2}
2ffed078:	f57ff06f 	isb	sy
2ffed07c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
2ffed080:	ee010f50 	mcr	15, 0, r0, cr1, cr0, {2}
2ffed084:	f57ff06f 	isb	sy
2ffed088:	e59f00b0 	ldr	r0, [pc, #176]	; 2ffed140 <sp_min_entrypoint+0x140>
2ffed08c:	eee80a10 	vmsr	fpexc, r0
2ffed090:	f57ff06f 	isb	sy
2ffed094:	e3a00020 	mov	r0, #32
2ffed098:	ee090f1c 	mcr	15, 0, r0, cr9, cr12, {0}
2ffed09c:	ee100f11 	mrc	15, 0, r0, cr0, cr1, {0}
2ffed0a0:	e200040f 	and	r0, r0, #251658240	; 0xf000000
2ffed0a4:	e3500401 	cmp	r0, #16777216	; 0x1000000
2ffed0a8:	1a000002 	bne	2ffed0b8 <sp_min_entrypoint+0xb8>
2ffed0ac:	e10f0000 	mrs	r0, CPSR
2ffed0b0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
2ffed0b4:	e12ff000 	msr	CPSR_fsxc, r0
2ffed0b8:	e59f0084 	ldr	r0, [pc, #132]	; 2ffed144 <sp_min_entrypoint+0x144>
2ffed0bc:	e59f1084 	ldr	r1, [pc, #132]	; 2ffed148 <sp_min_entrypoint+0x148>
2ffed0c0:	e0411000 	sub	r1, r1, r0
2ffed0c4:	eb003062 	bl	2fff9254 <inv_dcache_range>
2ffed0c8:	e1a0700c 	mov	r7, ip
2ffed0cc:	e59f0078 	ldr	r0, [pc, #120]	; 2ffed14c <sp_min_entrypoint+0x14c>
2ffed0d0:	e59f1078 	ldr	r1, [pc, #120]	; 2ffed150 <sp_min_entrypoint+0x150>
2ffed0d4:	eb00309d 	bl	2fff9350 <zero_normalmem>
2ffed0d8:	e1a0c007 	mov	ip, r7
2ffed0dc:	eb002fe8 	bl	2fff9084 <plat_set_my_stack>
2ffed0e0:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2ffed0e4:	e3844004 	orr	r4, r4, #4
2ffed0e8:	e3c44010 	bic	r4, r4, #16
2ffed0ec:	ee014f11 	mcr	15, 0, r4, cr1, cr1, {0}
2ffed0f0:	e1a00009 	mov	r0, r9
2ffed0f4:	e1a0100a 	mov	r1, sl
2ffed0f8:	e1a0200b 	mov	r2, fp
2ffed0fc:	e1a0300c 	mov	r3, ip
2ffed100:	fa000b9c 	blx	2ffeff78 <sp_min_early_platform_setup2>
2ffed104:	fa000c15 	blx	2fff0160 <sp_min_plat_arch_setup>
2ffed108:	fa0000fc 	blx	2ffed500 <sp_min_main>
2ffed10c:	e59f0040 	ldr	r0, [pc, #64]	; 2ffed154 <sp_min_entrypoint+0x154>
2ffed110:	e59f1040 	ldr	r1, [pc, #64]	; 2ffed158 <sp_min_entrypoint+0x158>
2ffed114:	e0411000 	sub	r1, r1, r0
2ffed118:	eb00303e 	bl	2fff9218 <clean_dcache_range>
2ffed11c:	e59f0028 	ldr	r0, [pc, #40]	; 2ffed14c <sp_min_entrypoint+0x14c>
2ffed120:	e59f1034 	ldr	r1, [pc, #52]	; 2ffed15c <sp_min_entrypoint+0x15c>
2ffed124:	e0411000 	sub	r1, r1, r0
2ffed128:	eb00303a 	bl	2fff9218 <clean_dcache_range>
2ffed12c:	fa0000cd 	blx	2ffed468 <smc_get_next_ctx>
2ffed130:	ea0000a2 	b	2ffed3c0 <sp_min_exit>
2ffed134:	2fffcbf1 	.word	0x2fffcbf1
2ffed138:	2fffce00 	.word	0x2fffce00
2ffed13c:	00001002 	.word	0x00001002
2ffed140:	40000700 	.word	0x40000700
2ffed144:	2fffd000 	.word	0x2fffd000
2ffed148:	2fffed40 	.word	0x2fffed40
2ffed14c:	2fffe140 	.word	0x2fffe140
2ffed150:	00000c00 	.word	0x00000c00
2ffed154:	2fffd000 	.word	0x2fffd000
2ffed158:	2fffd540 	.word	0x2fffd540
2ffed15c:	2fffed40 	.word	0x2fffed40

2ffed160 <sp_min_handle_smc>:
2ffed160:	e58de080 	str	lr, [sp, #128]	; 0x80
2ffed164:	e88d1fff 	stm	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed168:	e1a0000d 	mov	r0, sp
2ffed16c:	e2800034 	add	r0, r0, #52	; 0x34
2ffed170:	e1054200 	mrs	r4, SP_usr
2ffed174:	e1065200 	mrs	r5, LR_usr
2ffed178:	e1406300 	mrs	r6, SPSR_irq
2ffed17c:	e1017300 	mrs	r7, SP_irq
2ffed180:	e1008300 	mrs	r8, LR_irq
2ffed184:	e14e9200 	mrs	r9, SPSR_fiq
2ffed188:	e10da200 	mrs	sl, SP_fiq
2ffed18c:	e10eb200 	mrs	fp, LR_fiq
2ffed190:	e142c300 	mrs	ip, SPSR_svc
2ffed194:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed198:	e1034300 	mrs	r4, SP_svc
2ffed19c:	e1025300 	mrs	r5, LR_svc
2ffed1a0:	e1446300 	mrs	r6, SPSR_abt
2ffed1a4:	e1057300 	mrs	r7, SP_abt
2ffed1a8:	e1048300 	mrs	r8, LR_abt
2ffed1ac:	e1469300 	mrs	r9, SPSR_und
2ffed1b0:	e107a300 	mrs	sl, SP_und
2ffed1b4:	e106b300 	mrs	fp, LR_und
2ffed1b8:	e14fc000 	mrs	ip, SPSR
2ffed1bc:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed1c0:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2ffed1c4:	ee195f1c 	mrc	15, 0, r5, cr9, cr12, {0}
2ffed1c8:	e3140001 	tst	r4, #1
2ffed1cc:	0a000000 	beq	2ffed1d4 <sp_min_handle_smc+0x74>
2ffed1d0:	e58d5088 	str	r5, [sp, #136]	; 0x88
2ffed1d4:	e3855020 	orr	r5, r5, #32
2ffed1d8:	ee095f1c 	mcr	15, 0, r5, cr9, cr12, {0}
2ffed1dc:	f57ff06f 	isb	sy
2ffed1e0:	e58d4084 	str	r4, [sp, #132]	; 0x84
2ffed1e4:	f57ff01f 	clrex
2ffed1e8:	e1a0200d 	mov	r2, sp
2ffed1ec:	e592d07c 	ldr	sp, [r2, #124]	; 0x7c
2ffed1f0:	e5920084 	ldr	r0, [r2, #132]	; 0x84
2ffed1f4:	e2003001 	and	r3, r0, #1
2ffed1f8:	e3c00001 	bic	r0, r0, #1
2ffed1fc:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed200:	f57ff06f 	isb	sy
2ffed204:	e5920000 	ldr	r0, [r2]
2ffed208:	e3100101 	tst	r0, #1073741824	; 0x40000000
2ffed20c:	0a000003 	beq	2ffed220 <sp_min_handle_smc+0xc0>
2ffed210:	e3e00000 	mvn	r0, #0
2ffed214:	e5820000 	str	r0, [r2]
2ffed218:	e1a00002 	mov	r0, r2
2ffed21c:	ea000067 	b	2ffed3c0 <sp_min_exit>
2ffed220:	e3a01000 	mov	r1, #0
2ffed224:	fa000112 	blx	2ffed674 <handle_runtime_svc>
2ffed228:	ea000064 	b	2ffed3c0 <sp_min_exit>

2ffed22c <sp_min_handle_fiq>:
2ffed22c:	e24ee004 	sub	lr, lr, #4
2ffed230:	e58de080 	str	lr, [sp, #128]	; 0x80
2ffed234:	e88d1fff 	stm	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed238:	e1a0000d 	mov	r0, sp
2ffed23c:	e2800034 	add	r0, r0, #52	; 0x34
2ffed240:	e1054200 	mrs	r4, SP_usr
2ffed244:	e1065200 	mrs	r5, LR_usr
2ffed248:	e1406300 	mrs	r6, SPSR_irq
2ffed24c:	e1017300 	mrs	r7, SP_irq
2ffed250:	e1008300 	mrs	r8, LR_irq
2ffed254:	e14e9200 	mrs	r9, SPSR_fiq
2ffed258:	e10da200 	mrs	sl, SP_fiq
2ffed25c:	e10eb200 	mrs	fp, LR_fiq
2ffed260:	e142c300 	mrs	ip, SPSR_svc
2ffed264:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed268:	e1034300 	mrs	r4, SP_svc
2ffed26c:	e1025300 	mrs	r5, LR_svc
2ffed270:	e1446300 	mrs	r6, SPSR_abt
2ffed274:	e1057300 	mrs	r7, SP_abt
2ffed278:	e1048300 	mrs	r8, LR_abt
2ffed27c:	e1469300 	mrs	r9, SPSR_und
2ffed280:	e107a300 	mrs	sl, SP_und
2ffed284:	e106b300 	mrs	fp, LR_und
2ffed288:	e14fc000 	mrs	ip, SPSR
2ffed28c:	e8a01ff0 	stmia	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed290:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2ffed294:	ee195f1c 	mrc	15, 0, r5, cr9, cr12, {0}
2ffed298:	e3140001 	tst	r4, #1
2ffed29c:	0a000000 	beq	2ffed2a4 <sp_min_handle_fiq+0x78>
2ffed2a0:	e58d5088 	str	r5, [sp, #136]	; 0x88
2ffed2a4:	e3855020 	orr	r5, r5, #32
2ffed2a8:	ee095f1c 	mcr	15, 0, r5, cr9, cr12, {0}
2ffed2ac:	f57ff06f 	isb	sy
2ffed2b0:	e58d4084 	str	r4, [sp, #132]	; 0x84
2ffed2b4:	f57ff01f 	clrex
2ffed2b8:	e1a0200d 	mov	r2, sp
2ffed2bc:	e592d07c 	ldr	sp, [r2, #124]	; 0x7c
2ffed2c0:	e5920084 	ldr	r0, [r2, #132]	; 0x84
2ffed2c4:	e3c00001 	bic	r0, r0, #1
2ffed2c8:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed2cc:	f57ff06f 	isb	sy
2ffed2d0:	e92d000c 	push	{r2, r3}
2ffed2d4:	fa0000e0 	blx	2ffed65c <sp_min_fiq>
2ffed2d8:	e8bd0009 	pop	{r0, r3}
2ffed2dc:	ea000037 	b	2ffed3c0 <sp_min_exit>

2ffed2e0 <sp_min_warm_entrypoint>:
2ffed2e0:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffed2e4:	e3100001 	tst	r0, #1
2ffed2e8:	0a000002 	beq	2ffed2f8 <sp_min_warm_entrypoint+0x18>
2ffed2ec:	e59f00bc 	ldr	r0, [pc, #188]	; 2ffed3b0 <sp_min_warm_entrypoint+0xd0>
2ffed2f0:	e3a010d4 	mov	r1, #212	; 0xd4
2ffed2f4:	ea002f85 	b	2fff9110 <asm_assert>
2ffed2f8:	f1020016 	cps	#22
2ffed2fc:	f57ff06f 	isb	sy
2ffed300:	e59f00ac 	ldr	r0, [pc, #172]	; 2ffed3b4 <sp_min_warm_entrypoint+0xd4>
2ffed304:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}
2ffed308:	ee0c0f30 	mcr	15, 0, r0, cr12, cr0, {1}
2ffed30c:	f57ff06f 	isb	sy
2ffed310:	eb002ed4 	bl	2fff8e68 <reset_handler>
2ffed314:	e59f109c 	ldr	r1, [pc, #156]	; 2ffed3b8 <sp_min_warm_entrypoint+0xd8>
2ffed318:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2ffed31c:	e1800001 	orr	r0, r0, r1
2ffed320:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2ffed324:	f57ff06f 	isb	sy
2ffed328:	e3a00c02 	mov	r0, #512	; 0x200
2ffed32c:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed330:	f1080100 	cpsie	a
2ffed334:	f57ff06f 	isb	sy
2ffed338:	ee110f51 	mrc	15, 0, r0, cr1, cr1, {2}
2ffed33c:	e2000807 	and	r0, r0, #458752	; 0x70000
2ffed340:	e3800b03 	orr	r0, r0, #3072	; 0xc00
2ffed344:	ee010f51 	mcr	15, 0, r0, cr1, cr1, {2}
2ffed348:	f57ff06f 	isb	sy
2ffed34c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
2ffed350:	ee010f50 	mcr	15, 0, r0, cr1, cr0, {2}
2ffed354:	f57ff06f 	isb	sy
2ffed358:	e59f005c 	ldr	r0, [pc, #92]	; 2ffed3bc <sp_min_warm_entrypoint+0xdc>
2ffed35c:	eee80a10 	vmsr	fpexc, r0
2ffed360:	f57ff06f 	isb	sy
2ffed364:	e3a00020 	mov	r0, #32
2ffed368:	ee090f1c 	mcr	15, 0, r0, cr9, cr12, {0}
2ffed36c:	ee100f11 	mrc	15, 0, r0, cr0, cr1, {0}
2ffed370:	e200040f 	and	r0, r0, #251658240	; 0xf000000
2ffed374:	e3500401 	cmp	r0, #16777216	; 0x1000000
2ffed378:	1a000002 	bne	2ffed388 <sp_min_warm_entrypoint+0xa8>
2ffed37c:	e10f0000 	mrs	r0, CPSR
2ffed380:	e3800602 	orr	r0, r0, #2097152	; 0x200000
2ffed384:	e12ff000 	msr	CPSR_fsxc, r0
2ffed388:	eb002f3d 	bl	2fff9084 <plat_set_my_stack>
2ffed38c:	e3a00001 	mov	r0, #1
2ffed390:	fa0016cc 	blx	2fff2ec8 <bl32_plat_enable_mmu>
2ffed394:	ee110f11 	mrc	15, 0, r0, cr1, cr1, {0}
2ffed398:	e3800004 	orr	r0, r0, #4
2ffed39c:	e3c00010 	bic	r0, r0, #16
2ffed3a0:	ee010f11 	mcr	15, 0, r0, cr1, cr1, {0}
2ffed3a4:	fa00008b 	blx	2ffed5d8 <sp_min_warm_boot>
2ffed3a8:	fa00002e 	blx	2ffed468 <smc_get_next_ctx>
2ffed3ac:	ea000003 	b	2ffed3c0 <sp_min_exit>
2ffed3b0:	2fffcbf1 	.word	0x2fffcbf1
2ffed3b4:	2fffce00 	.word	0x2fffce00
2ffed3b8:	00001002 	.word	0x00001002
2ffed3bc:	40000700 	.word	0x40000700

2ffed3c0 <sp_min_exit>:
2ffed3c0:	e580d07c 	str	sp, [r0, #124]	; 0x7c
2ffed3c4:	e1a0d000 	mov	sp, r0
2ffed3c8:	e5901084 	ldr	r1, [r0, #132]	; 0x84
2ffed3cc:	ee011f11 	mcr	15, 0, r1, cr1, cr1, {0}
2ffed3d0:	f57ff06f 	isb	sy
2ffed3d4:	e3110001 	tst	r1, #1
2ffed3d8:	0a000001 	beq	2ffed3e4 <sp_min_exit+0x24>
2ffed3dc:	e5901088 	ldr	r1, [r0, #136]	; 0x88
2ffed3e0:	ee091f1c 	mcr	15, 0, r1, cr9, cr12, {0}
2ffed3e4:	e2801034 	add	r1, r0, #52	; 0x34
2ffed3e8:	e8b11ff0 	ldm	r1!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed3ec:	e125f204 	msr	SP_usr, r4
2ffed3f0:	e126f205 	msr	LR_usr, r5
2ffed3f4:	e160f306 	msr	SPSR_irq, r6
2ffed3f8:	e121f307 	msr	SP_irq, r7
2ffed3fc:	e120f308 	msr	LR_irq, r8
2ffed400:	e16ef209 	msr	SPSR_fiq, r9
2ffed404:	e12df20a 	msr	SP_fiq, sl
2ffed408:	e12ef20b 	msr	LR_fiq, fp
2ffed40c:	e162f30c 	msr	SPSR_svc, ip
2ffed410:	e8b11ff0 	ldm	r1!, {r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed414:	e123f304 	msr	SP_svc, r4
2ffed418:	e122f305 	msr	LR_svc, r5
2ffed41c:	e164f306 	msr	SPSR_abt, r6
2ffed420:	e125f307 	msr	SP_abt, r7
2ffed424:	e124f308 	msr	LR_abt, r8
2ffed428:	e166f309 	msr	SPSR_und, r9
2ffed42c:	e127f30a 	msr	SP_und, sl
2ffed430:	e126f30b 	msr	LR_und, fp
2ffed434:	e16ff00c 	msr	SPSR_fsxc, ip
2ffed438:	e590e080 	ldr	lr, [r0, #128]	; 0x80
2ffed43c:	e8901fff 	ldm	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
2ffed440:	e160006e 	eret

2ffed444 <smc_get_ctx>:
2ffed444:	2801      	cmp	r0, #1
2ffed446:	b508      	push	{r3, lr}
2ffed448:	d003      	beq.n	2ffed452 <smc_get_ctx+0xe>
2ffed44a:	4805      	ldr	r0, [pc, #20]	; (2ffed460 <smc_get_ctx+0x1c>)
2ffed44c:	212a      	movs	r1, #42	; 0x2a
2ffed44e:	f00c fe63 	bl	2fffa118 <__assert>
2ffed452:	f00c e9ac 	blx	2fff97ac <plat_my_core_pos>
2ffed456:	4b03      	ldr	r3, [pc, #12]	; (2ffed464 <smc_get_ctx+0x20>)
2ffed458:	2290      	movs	r2, #144	; 0x90
2ffed45a:	fb02 3000 	mla	r0, r2, r0, r3
2ffed45e:	bd08      	pop	{r3, pc}
2ffed460:	2fffa517 	.word	0x2fffa517
2ffed464:	2fffe148 	.word	0x2fffe148

2ffed468 <smc_get_next_ctx>:
2ffed468:	b508      	push	{r3, lr}
2ffed46a:	f00c e9a0 	blx	2fff97ac <plat_my_core_pos>
2ffed46e:	4b02      	ldr	r3, [pc, #8]	; (2ffed478 <smc_get_next_ctx+0x10>)
2ffed470:	2290      	movs	r2, #144	; 0x90
2ffed472:	fb02 3000 	mla	r0, r2, r0, r3
2ffed476:	bd08      	pop	{r3, pc}
2ffed478:	2fffe148 	.word	0x2fffe148

2ffed47c <cm_get_context>:
2ffed47c:	2801      	cmp	r0, #1
2ffed47e:	b508      	push	{r3, lr}
2ffed480:	d003      	beq.n	2ffed48a <cm_get_context+0xe>
2ffed482:	4805      	ldr	r0, [pc, #20]	; (2ffed498 <cm_get_context+0x1c>)
2ffed484:	2140      	movs	r1, #64	; 0x40
2ffed486:	f00c fe47 	bl	2fffa118 <__assert>
2ffed48a:	f00c e990 	blx	2fff97ac <plat_my_core_pos>
2ffed48e:	4b03      	ldr	r3, [pc, #12]	; (2ffed49c <cm_get_context+0x20>)
2ffed490:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2ffed494:	bd08      	pop	{r3, pc}
2ffed496:	bf00      	nop
2ffed498:	2fffa517 	.word	0x2fffa517
2ffed49c:	2fffe140 	.word	0x2fffe140

2ffed4a0 <cm_get_context_by_index>:
2ffed4a0:	2901      	cmp	r1, #1
2ffed4a2:	b508      	push	{r3, lr}
2ffed4a4:	d003      	beq.n	2ffed4ae <cm_get_context_by_index+0xe>
2ffed4a6:	4804      	ldr	r0, [pc, #16]	; (2ffed4b8 <cm_get_context_by_index+0x18>)
2ffed4a8:	2157      	movs	r1, #87	; 0x57
2ffed4aa:	f00c fe35 	bl	2fffa118 <__assert>
2ffed4ae:	4b03      	ldr	r3, [pc, #12]	; (2ffed4bc <cm_get_context_by_index+0x1c>)
2ffed4b0:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2ffed4b4:	bd08      	pop	{r3, pc}
2ffed4b6:	bf00      	nop
2ffed4b8:	2fffa517 	.word	0x2fffa517
2ffed4bc:	2fffe140 	.word	0x2fffe140

2ffed4c0 <cm_set_context_by_index>:
2ffed4c0:	2a01      	cmp	r2, #1
2ffed4c2:	b508      	push	{r3, lr}
2ffed4c4:	d003      	beq.n	2ffed4ce <cm_set_context_by_index+0xe>
2ffed4c6:	4804      	ldr	r0, [pc, #16]	; (2ffed4d8 <cm_set_context_by_index+0x18>)
2ffed4c8:	2162      	movs	r1, #98	; 0x62
2ffed4ca:	f00c fe25 	bl	2fffa118 <__assert>
2ffed4ce:	4b03      	ldr	r3, [pc, #12]	; (2ffed4dc <cm_set_context_by_index+0x1c>)
2ffed4d0:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
2ffed4d4:	bd08      	pop	{r3, pc}
2ffed4d6:	bf00      	nop
2ffed4d8:	2fffa517 	.word	0x2fffa517
2ffed4dc:	2fffe140 	.word	0x2fffe140

2ffed4e0 <get_arm_std_svc_args>:
2ffed4e0:	b508      	push	{r3, lr}
2ffed4e2:	f64f 73e0 	movw	r3, #65504	; 0xffe0
2ffed4e6:	4298      	cmp	r0, r3
2ffed4e8:	d003      	beq.n	2ffed4f2 <get_arm_std_svc_args+0x12>
2ffed4ea:	4803      	ldr	r0, [pc, #12]	; (2ffed4f8 <get_arm_std_svc_args+0x18>)
2ffed4ec:	219f      	movs	r1, #159	; 0x9f
2ffed4ee:	f00c fe13 	bl	2fffa118 <__assert>
2ffed4f2:	4802      	ldr	r0, [pc, #8]	; (2ffed4fc <get_arm_std_svc_args+0x1c>)
2ffed4f4:	bd08      	pop	{r3, pc}
2ffed4f6:	bf00      	nop
2ffed4f8:	2fffa517 	.word	0x2fffa517
2ffed4fc:	2fffa590 	.word	0x2fffa590

2ffed500 <sp_min_main>:
2ffed500:	b570      	push	{r4, r5, r6, lr}
2ffed502:	492d      	ldr	r1, [pc, #180]	; (2ffed5b8 <sp_min_main+0xb8>)
2ffed504:	482d      	ldr	r0, [pc, #180]	; (2ffed5bc <sp_min_main+0xbc>)
2ffed506:	4e2e      	ldr	r6, [pc, #184]	; (2ffed5c0 <sp_min_main+0xc0>)
2ffed508:	f005 fc08 	bl	2fff2d1c <tf_log>
2ffed50c:	492d      	ldr	r1, [pc, #180]	; (2ffed5c4 <sp_min_main+0xc4>)
2ffed50e:	482b      	ldr	r0, [pc, #172]	; (2ffed5bc <sp_min_main+0xbc>)
2ffed510:	f005 fc04 	bl	2fff2d1c <tf_log>
2ffed514:	f002 fdd2 	bl	2fff00bc <sp_min_platform_setup>
2ffed518:	482b      	ldr	r0, [pc, #172]	; (2ffed5c8 <sp_min_main+0xc8>)
2ffed51a:	f005 fbff 	bl	2fff2d1c <tf_log>
2ffed51e:	f000 f8d9 	bl	2ffed6d4 <runtime_svc_init>
2ffed522:	f00c e944 	blx	2fff97ac <plat_my_core_pos>
2ffed526:	f856 5020 	ldr.w	r5, [r6, r0, lsl #2]
2ffed52a:	f002 fcf3 	bl	2ffeff14 <sp_min_plat_get_bl33_ep_info>
2ffed52e:	4604      	mov	r4, r0
2ffed530:	b918      	cbnz	r0, 2ffed53a <sp_min_main+0x3a>
2ffed532:	217e      	movs	r1, #126	; 0x7e
2ffed534:	4825      	ldr	r0, [pc, #148]	; (2ffed5cc <sp_min_main+0xcc>)
2ffed536:	f00c fdef 	bl	2fffa118 <__assert>
2ffed53a:	6843      	ldr	r3, [r0, #4]
2ffed53c:	07db      	lsls	r3, r3, #31
2ffed53e:	d401      	bmi.n	2ffed544 <sp_min_main+0x44>
2ffed540:	217f      	movs	r1, #127	; 0x7f
2ffed542:	e7f7      	b.n	2ffed534 <sp_min_main+0x34>
2ffed544:	4822      	ldr	r0, [pc, #136]	; (2ffed5d0 <sp_min_main+0xd0>)
2ffed546:	f005 fbe9 	bl	2fff2d1c <tf_log>
2ffed54a:	4620      	mov	r0, r4
2ffed54c:	f001 fa3e 	bl	2ffee9cc <psci_prepare_next_non_secure_ctx>
2ffed550:	f00c e92c 	blx	2fff97ac <plat_my_core_pos>
2ffed554:	f856 4020 	ldr.w	r4, [r6, r0, lsl #2]
2ffed558:	f00c e928 	blx	2fff97ac <plat_my_core_pos>
2ffed55c:	4a1d      	ldr	r2, [pc, #116]	; (2ffed5d4 <sp_min_main+0xd4>)
2ffed55e:	2390      	movs	r3, #144	; 0x90
2ffed560:	6821      	ldr	r1, [r4, #0]
2ffed562:	4358      	muls	r0, r3
2ffed564:	1813      	adds	r3, r2, r0
2ffed566:	5011      	str	r1, [r2, r0]
2ffed568:	6862      	ldr	r2, [r4, #4]
2ffed56a:	605a      	str	r2, [r3, #4]
2ffed56c:	68a2      	ldr	r2, [r4, #8]
2ffed56e:	609a      	str	r2, [r3, #8]
2ffed570:	6922      	ldr	r2, [r4, #16]
2ffed572:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
2ffed576:	69a2      	ldr	r2, [r4, #24]
2ffed578:	679a      	str	r2, [r3, #120]	; 0x78
2ffed57a:	6962      	ldr	r2, [r4, #20]
2ffed57c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
2ffed580:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed584:	f043 0301 	orr.w	r3, r3, #1
2ffed588:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed58c:	f3bf 8f6f 	isb	sy
2ffed590:	69eb      	ldr	r3, [r5, #28]
2ffed592:	ee01 3f10 	mcr	15, 0, r3, cr1, cr0, {0}
2ffed596:	f3bf 8f6f 	isb	sy
2ffed59a:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed59e:	f023 0301 	bic.w	r3, r3, #1
2ffed5a2:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed5a6:	f3bf 8f6f 	isb	sy
2ffed5aa:	f000 f8fd 	bl	2ffed7a8 <sp_min_plat_runtime_setup>
2ffed5ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffed5b2:	f005 bc57 	b.w	2fff2e64 <console_flush>
2ffed5b6:	bf00      	nop
2ffed5b8:	2fffa4f6 	.word	0x2fffa4f6
2ffed5bc:	2fffa531 	.word	0x2fffa531
2ffed5c0:	2fffe140 	.word	0x2fffe140
2ffed5c4:	2fffa4d8 	.word	0x2fffa4d8
2ffed5c8:	2fffa53e 	.word	0x2fffa53e
2ffed5cc:	2fffa517 	.word	0x2fffa517
2ffed5d0:	2fffa566 	.word	0x2fffa566
2ffed5d4:	2fffe148 	.word	0x2fffe148

2ffed5d8 <sp_min_warm_boot>:
2ffed5d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffed5dc:	f00c e8e6 	blx	2fff97ac <plat_my_core_pos>
2ffed5e0:	4f1c      	ldr	r7, [pc, #112]	; (2ffed654 <sp_min_warm_boot+0x7c>)
2ffed5e2:	4e1d      	ldr	r6, [pc, #116]	; (2ffed658 <sp_min_warm_boot+0x80>)
2ffed5e4:	f857 8020 	ldr.w	r8, [r7, r0, lsl #2]
2ffed5e8:	f000 fe06 	bl	2ffee1f8 <psci_warmboot_entrypoint>
2ffed5ec:	f00c e8de 	blx	2fff97ac <plat_my_core_pos>
2ffed5f0:	2190      	movs	r1, #144	; 0x90
2ffed5f2:	fb01 f500 	mul.w	r5, r1, r0
2ffed5f6:	1974      	adds	r4, r6, r5
2ffed5f8:	4620      	mov	r0, r4
2ffed5fa:	f00b eeaa 	blx	2fff9350 <zero_normalmem>
2ffed5fe:	f00c e8d6 	blx	2fff97ac <plat_my_core_pos>
2ffed602:	f857 3020 	ldr.w	r3, [r7, r0, lsl #2]
2ffed606:	681a      	ldr	r2, [r3, #0]
2ffed608:	5172      	str	r2, [r6, r5]
2ffed60a:	685a      	ldr	r2, [r3, #4]
2ffed60c:	6062      	str	r2, [r4, #4]
2ffed60e:	689a      	ldr	r2, [r3, #8]
2ffed610:	60a2      	str	r2, [r4, #8]
2ffed612:	691a      	ldr	r2, [r3, #16]
2ffed614:	f8c4 2080 	str.w	r2, [r4, #128]	; 0x80
2ffed618:	699a      	ldr	r2, [r3, #24]
2ffed61a:	695b      	ldr	r3, [r3, #20]
2ffed61c:	67a2      	str	r2, [r4, #120]	; 0x78
2ffed61e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
2ffed622:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed626:	f043 0301 	orr.w	r3, r3, #1
2ffed62a:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed62e:	f3bf 8f6f 	isb	sy
2ffed632:	f8d8 301c 	ldr.w	r3, [r8, #28]
2ffed636:	ee01 3f10 	mcr	15, 0, r3, cr1, cr0, {0}
2ffed63a:	f3bf 8f6f 	isb	sy
2ffed63e:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed642:	f023 0301 	bic.w	r3, r3, #1
2ffed646:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed64a:	f3bf 8f6f 	isb	sy
2ffed64e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffed652:	bf00      	nop
2ffed654:	2fffe140 	.word	0x2fffe140
2ffed658:	2fffe148 	.word	0x2fffe148

2ffed65c <sp_min_fiq>:
2ffed65c:	b510      	push	{r4, lr}
2ffed65e:	f003 ff83 	bl	2fff1568 <plat_ic_acknowledge_interrupt>
2ffed662:	4604      	mov	r4, r0
2ffed664:	f002 fbee 	bl	2ffefe44 <sp_min_plat_fiq_handler>
2ffed668:	4620      	mov	r0, r4
2ffed66a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed66e:	f003 bf7d 	b.w	2fff156c <plat_ic_end_of_interrupt>
	...

2ffed674 <handle_runtime_svc>:
2ffed674:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffed676:	4614      	mov	r4, r2
2ffed678:	b91a      	cbnz	r2, 2ffed682 <handle_runtime_svc+0xe>
2ffed67a:	4812      	ldr	r0, [pc, #72]	; (2ffed6c4 <handle_runtime_svc+0x50>)
2ffed67c:	212a      	movs	r1, #42	; 0x2a
2ffed67e:	f00c fd4b 	bl	2fffa118 <__assert>
2ffed682:	0fc5      	lsrs	r5, r0, #31
2ffed684:	f3c0 6205 	ubfx	r2, r0, #24, #6
2ffed688:	ea42 1585 	orr.w	r5, r2, r5, lsl #6
2ffed68c:	4a0e      	ldr	r2, [pc, #56]	; (2ffed6c8 <handle_runtime_svc+0x54>)
2ffed68e:	5d56      	ldrb	r6, [r2, r5]
2ffed690:	4a0e      	ldr	r2, [pc, #56]	; (2ffed6cc <handle_runtime_svc+0x58>)
2ffed692:	4d0f      	ldr	r5, [pc, #60]	; (2ffed6d0 <handle_runtime_svc+0x5c>)
2ffed694:	1aad      	subs	r5, r5, r2
2ffed696:	ebb6 1f15 	cmp.w	r6, r5, lsr #4
2ffed69a:	d305      	bcc.n	2ffed6a8 <handle_runtime_svc+0x34>
2ffed69c:	4620      	mov	r0, r4
2ffed69e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2ffed6a2:	6023      	str	r3, [r4, #0]
2ffed6a4:	b004      	add	sp, #16
2ffed6a6:	bd70      	pop	{r4, r5, r6, pc}
2ffed6a8:	9303      	str	r3, [sp, #12]
2ffed6aa:	9402      	str	r4, [sp, #8]
2ffed6ac:	9101      	str	r1, [sp, #4]
2ffed6ae:	eb02 1206 	add.w	r2, r2, r6, lsl #4
2ffed6b2:	6923      	ldr	r3, [r4, #16]
2ffed6b4:	9300      	str	r3, [sp, #0]
2ffed6b6:	68d5      	ldr	r5, [r2, #12]
2ffed6b8:	6861      	ldr	r1, [r4, #4]
2ffed6ba:	e9d4 2302 	ldrd	r2, r3, [r4, #8]
2ffed6be:	47a8      	blx	r5
2ffed6c0:	e7f0      	b.n	2ffed6a4 <handle_runtime_svc+0x30>
2ffed6c2:	bf00      	nop
2ffed6c4:	2fffa59c 	.word	0x2fffa59c
2ffed6c8:	2fffeb20 	.word	0x2fffeb20
2ffed6cc:	2fffcdc4 	.word	0x2fffcdc4
2ffed6d0:	2fffcde4 	.word	0x2fffcde4

2ffed6d4 <runtime_svc_init>:
2ffed6d4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffed6d8:	4c2d      	ldr	r4, [pc, #180]	; (2ffed790 <runtime_svc_init+0xbc>)
2ffed6da:	4e2e      	ldr	r6, [pc, #184]	; (2ffed794 <runtime_svc_init+0xc0>)
2ffed6dc:	42b4      	cmp	r4, r6
2ffed6de:	d303      	bcc.n	2ffed6e8 <runtime_svc_init+0x14>
2ffed6e0:	1ba4      	subs	r4, r4, r6
2ffed6e2:	f5b4 6f00 	cmp.w	r4, #2048	; 0x800
2ffed6e6:	d303      	bcc.n	2ffed6f0 <runtime_svc_init+0x1c>
2ffed6e8:	2161      	movs	r1, #97	; 0x61
2ffed6ea:	482b      	ldr	r0, [pc, #172]	; (2ffed798 <runtime_svc_init+0xc4>)
2ffed6ec:	f00c fd14 	bl	2fffa118 <__assert>
2ffed6f0:	2c0f      	cmp	r4, #15
2ffed6f2:	d90f      	bls.n	2ffed714 <runtime_svc_init+0x40>
2ffed6f4:	4829      	ldr	r0, [pc, #164]	; (2ffed79c <runtime_svc_init+0xc8>)
2ffed6f6:	2280      	movs	r2, #128	; 0x80
2ffed6f8:	4f28      	ldr	r7, [pc, #160]	; (2ffed79c <runtime_svc_init+0xc8>)
2ffed6fa:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffed6fe:	0924      	lsrs	r4, r4, #4
2ffed700:	f04f 0900 	mov.w	r9, #0
2ffed704:	f8df 809c 	ldr.w	r8, [pc, #156]	; 2ffed7a4 <runtime_svc_init+0xd0>
2ffed708:	f00c fd4f 	bl	2fffa1aa <memset>
2ffed70c:	fa5f fa89 	uxtb.w	sl, r9
2ffed710:	4554      	cmp	r4, sl
2ffed712:	d801      	bhi.n	2ffed718 <runtime_svc_init+0x44>
2ffed714:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffed718:	ea4f 1b0a 	mov.w	fp, sl, lsl #4
2ffed71c:	eb06 150a 	add.w	r5, r6, sl, lsl #4
2ffed720:	f816 200b 	ldrb.w	r2, [r6, fp]
2ffed724:	786b      	ldrb	r3, [r5, #1]
2ffed726:	429a      	cmp	r2, r3
2ffed728:	d808      	bhi.n	2ffed73c <runtime_svc_init+0x68>
2ffed72a:	2b3f      	cmp	r3, #63	; 0x3f
2ffed72c:	d806      	bhi.n	2ffed73c <runtime_svc_init+0x68>
2ffed72e:	78ab      	ldrb	r3, [r5, #2]
2ffed730:	2b01      	cmp	r3, #1
2ffed732:	d803      	bhi.n	2ffed73c <runtime_svc_init+0x68>
2ffed734:	68ab      	ldr	r3, [r5, #8]
2ffed736:	b94b      	cbnz	r3, 2ffed74c <runtime_svc_init+0x78>
2ffed738:	68eb      	ldr	r3, [r5, #12]
2ffed73a:	b983      	cbnz	r3, 2ffed75e <runtime_svc_init+0x8a>
2ffed73c:	4818      	ldr	r0, [pc, #96]	; (2ffed7a0 <runtime_svc_init+0xcc>)
2ffed73e:	4629      	mov	r1, r5
2ffed740:	f005 faec 	bl	2fff2d1c <tf_log>
2ffed744:	f005 fb8e 	bl	2fff2e64 <console_flush>
2ffed748:	f00b ecac 	blx	2fff90a4 <do_panic>
2ffed74c:	4798      	blx	r3
2ffed74e:	b130      	cbz	r0, 2ffed75e <runtime_svc_init+0x8a>
2ffed750:	6869      	ldr	r1, [r5, #4]
2ffed752:	4640      	mov	r0, r8
2ffed754:	f005 fae2 	bl	2fff2d1c <tf_log>
2ffed758:	f109 0901 	add.w	r9, r9, #1
2ffed75c:	e7d6      	b.n	2ffed70c <runtime_svc_init+0x38>
2ffed75e:	78ab      	ldrb	r3, [r5, #2]
2ffed760:	f816 100b 	ldrb.w	r1, [r6, fp]
2ffed764:	786a      	ldrb	r2, [r5, #1]
2ffed766:	019b      	lsls	r3, r3, #6
2ffed768:	f001 013f 	and.w	r1, r1, #63	; 0x3f
2ffed76c:	f003 0340 	and.w	r3, r3, #64	; 0x40
2ffed770:	f002 023f 	and.w	r2, r2, #63	; 0x3f
2ffed774:	ea41 0003 	orr.w	r0, r1, r3
2ffed778:	431a      	orrs	r2, r3
2ffed77a:	4290      	cmp	r0, r2
2ffed77c:	d901      	bls.n	2ffed782 <runtime_svc_init+0xae>
2ffed77e:	2195      	movs	r1, #149	; 0x95
2ffed780:	e7b3      	b.n	2ffed6ea <runtime_svc_init+0x16>
2ffed782:	f800 a007 	strb.w	sl, [r0, r7]
2ffed786:	3001      	adds	r0, #1
2ffed788:	b2c3      	uxtb	r3, r0
2ffed78a:	429a      	cmp	r2, r3
2ffed78c:	d2f9      	bcs.n	2ffed782 <runtime_svc_init+0xae>
2ffed78e:	e7e3      	b.n	2ffed758 <runtime_svc_init+0x84>
2ffed790:	2fffcde4 	.word	0x2fffcde4
2ffed794:	2fffcdc4 	.word	0x2fffcdc4
2ffed798:	2fffa59c 	.word	0x2fffa59c
2ffed79c:	2fffeb20 	.word	0x2fffeb20
2ffed7a0:	2fffa5b1 	.word	0x2fffa5b1
2ffed7a4:	2fffa5d9 	.word	0x2fffa5d9

2ffed7a8 <sp_min_plat_runtime_setup>:
2ffed7a8:	2002      	movs	r0, #2
2ffed7aa:	f005 bb1b 	b.w	2fff2de4 <console_switch_state>
	...

2ffed7b0 <std_svc_smc_handler>:
2ffed7b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2ffed7b2:	f64f 76e0 	movw	r6, #65504	; 0xffe0
2ffed7b6:	4230      	tst	r0, r6
2ffed7b8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
2ffed7ba:	d10c      	bne.n	2ffed7d6 <std_svc_smc_handler+0x26>
2ffed7bc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
2ffed7be:	9402      	str	r4, [sp, #8]
2ffed7c0:	9503      	str	r5, [sp, #12]
2ffed7c2:	9d09      	ldr	r5, [sp, #36]	; 0x24
2ffed7c4:	9501      	str	r5, [sp, #4]
2ffed7c6:	9d08      	ldr	r5, [sp, #32]
2ffed7c8:	9500      	str	r5, [sp, #0]
2ffed7ca:	f000 ff43 	bl	2ffee654 <psci_smc_handler>
2ffed7ce:	6020      	str	r0, [r4, #0]
2ffed7d0:	4620      	mov	r0, r4
2ffed7d2:	b004      	add	sp, #16
2ffed7d4:	bd70      	pop	{r4, r5, r6, pc}
2ffed7d6:	4b0f      	ldr	r3, [pc, #60]	; (2ffed814 <std_svc_smc_handler+0x64>)
2ffed7d8:	4298      	cmp	r0, r3
2ffed7da:	d008      	beq.n	2ffed7ee <std_svc_smc_handler+0x3e>
2ffed7dc:	3302      	adds	r3, #2
2ffed7de:	4298      	cmp	r0, r3
2ffed7e0:	d00d      	beq.n	2ffed7fe <std_svc_smc_handler+0x4e>
2ffed7e2:	3b03      	subs	r3, #3
2ffed7e4:	4298      	cmp	r0, r3
2ffed7e6:	d10e      	bne.n	2ffed806 <std_svc_smc_handler+0x56>
2ffed7e8:	2312      	movs	r3, #18
2ffed7ea:	6023      	str	r3, [r4, #0]
2ffed7ec:	e7f0      	b.n	2ffed7d0 <std_svc_smc_handler+0x20>
2ffed7ee:	4b0a      	ldr	r3, [pc, #40]	; (2ffed818 <std_svc_smc_handler+0x68>)
2ffed7f0:	4a0a      	ldr	r2, [pc, #40]	; (2ffed81c <std_svc_smc_handler+0x6c>)
2ffed7f2:	e9c4 3202 	strd	r3, r2, [r4, #8]
2ffed7f6:	4b0a      	ldr	r3, [pc, #40]	; (2ffed820 <std_svc_smc_handler+0x70>)
2ffed7f8:	6063      	str	r3, [r4, #4]
2ffed7fa:	4b0a      	ldr	r3, [pc, #40]	; (2ffed824 <std_svc_smc_handler+0x74>)
2ffed7fc:	e7f5      	b.n	2ffed7ea <std_svc_smc_handler+0x3a>
2ffed7fe:	2301      	movs	r3, #1
2ffed800:	6063      	str	r3, [r4, #4]
2ffed802:	2300      	movs	r3, #0
2ffed804:	e7f1      	b.n	2ffed7ea <std_svc_smc_handler+0x3a>
2ffed806:	4601      	mov	r1, r0
2ffed808:	4807      	ldr	r0, [pc, #28]	; (2ffed828 <std_svc_smc_handler+0x78>)
2ffed80a:	f005 fa87 	bl	2fff2d1c <tf_log>
2ffed80e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2ffed812:	e7ea      	b.n	2ffed7ea <std_svc_smc_handler+0x3a>
2ffed814:	8400ff01 	.word	0x8400ff01
2ffed818:	fbc02dae 	.word	0xfbc02dae
2ffed81c:	e2f64156 	.word	0xe2f64156
2ffed820:	47e8f863 	.word	0x47e8f863
2ffed824:	108d905b 	.word	0x108d905b
2ffed828:	2fffa601 	.word	0x2fffa601

2ffed82c <std_svc_setup>:
2ffed82c:	b508      	push	{r3, lr}
2ffed82e:	f64f 70e0 	movw	r0, #65504	; 0xffe0
2ffed832:	f7ff fe55 	bl	2ffed4e0 <get_arm_std_svc_args>
2ffed836:	b918      	cbnz	r0, 2ffed840 <std_svc_setup+0x14>
2ffed838:	4804      	ldr	r0, [pc, #16]	; (2ffed84c <std_svc_setup+0x20>)
2ffed83a:	2126      	movs	r1, #38	; 0x26
2ffed83c:	f00c fc6c 	bl	2fffa118 <__assert>
2ffed840:	f000 ffae 	bl	2ffee7a0 <psci_setup>
2ffed844:	3800      	subs	r0, #0
2ffed846:	bf18      	it	ne
2ffed848:	2001      	movne	r0, #1
2ffed84a:	bd08      	pop	{r3, pc}
2ffed84c:	2fffa62e 	.word	0x2fffa62e

2ffed850 <cm_setup_context>:
2ffed850:	b570      	push	{r4, r5, r6, lr}
2ffed852:	460d      	mov	r5, r1
2ffed854:	4604      	mov	r4, r0
2ffed856:	b918      	cbnz	r0, 2ffed860 <cm_setup_context+0x10>
2ffed858:	213e      	movs	r1, #62	; 0x3e
2ffed85a:	481a      	ldr	r0, [pc, #104]	; (2ffed8c4 <cm_setup_context+0x74>)
2ffed85c:	f00c fc5c 	bl	2fffa118 <__assert>
2ffed860:	684b      	ldr	r3, [r1, #4]
2ffed862:	2120      	movs	r1, #32
2ffed864:	f003 0601 	and.w	r6, r3, #1
2ffed868:	f00b ed72 	blx	2fff9350 <zero_normalmem>
2ffed86c:	ee11 2f11 	mrc	15, 0, r2, cr1, cr1, {0}
2ffed870:	f422 7280 	bic.w	r2, r2, #256	; 0x100
2ffed874:	f022 0201 	bic.w	r2, r2, #1
2ffed878:	68e9      	ldr	r1, [r5, #12]
2ffed87a:	b18e      	cbz	r6, 2ffed8a0 <cm_setup_context+0x50>
2ffed87c:	686b      	ldr	r3, [r5, #4]
2ffed87e:	f042 0201 	orr.w	r2, r2, #1
2ffed882:	0858      	lsrs	r0, r3, #1
2ffed884:	ea80 2051 	eor.w	r0, r0, r1, lsr #9
2ffed888:	07c0      	lsls	r0, r0, #31
2ffed88a:	d501      	bpl.n	2ffed890 <cm_setup_context+0x40>
2ffed88c:	2163      	movs	r1, #99	; 0x63
2ffed88e:	e7e4      	b.n	2ffed85a <cm_setup_context+0xa>
2ffed890:	061b      	lsls	r3, r3, #24
2ffed892:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
2ffed896:	f443 0345 	orr.w	r3, r3, #12910592	; 0xc50000
2ffed89a:	f043 0338 	orr.w	r3, r3, #56	; 0x38
2ffed89e:	61e3      	str	r3, [r4, #28]
2ffed8a0:	f001 031f 	and.w	r3, r1, #31
2ffed8a4:	4620      	mov	r0, r4
2ffed8a6:	2b1a      	cmp	r3, #26
2ffed8a8:	68ab      	ldr	r3, [r5, #8]
2ffed8aa:	bf08      	it	eq
2ffed8ac:	f442 7280 	orreq.w	r2, r2, #256	; 0x100
2ffed8b0:	6162      	str	r2, [r4, #20]
2ffed8b2:	2210      	movs	r2, #16
2ffed8b4:	61a1      	str	r1, [r4, #24]
2ffed8b6:	f105 0114 	add.w	r1, r5, #20
2ffed8ba:	6123      	str	r3, [r4, #16]
2ffed8bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffed8c0:	f00c bc52 	b.w	2fffa168 <memcpy>
2ffed8c4:	2fffa657 	.word	0x2fffa657

2ffed8c8 <cm_init_context_by_index>:
2ffed8c8:	b510      	push	{r4, lr}
2ffed8ca:	460c      	mov	r4, r1
2ffed8cc:	6849      	ldr	r1, [r1, #4]
2ffed8ce:	f001 0101 	and.w	r1, r1, #1
2ffed8d2:	f7ff fde5 	bl	2ffed4a0 <cm_get_context_by_index>
2ffed8d6:	4621      	mov	r1, r4
2ffed8d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed8dc:	f7ff bfb8 	b.w	2ffed850 <cm_setup_context>

2ffed8e0 <cm_init_my_context>:
2ffed8e0:	b510      	push	{r4, lr}
2ffed8e2:	4604      	mov	r4, r0
2ffed8e4:	6840      	ldr	r0, [r0, #4]
2ffed8e6:	f000 0001 	and.w	r0, r0, #1
2ffed8ea:	f7ff fdc7 	bl	2ffed47c <cm_get_context>
2ffed8ee:	4621      	mov	r1, r4
2ffed8f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffed8f4:	f7ff bfac 	b.w	2ffed850 <cm_setup_context>

2ffed8f8 <cm_prepare_el3_exit>:
2ffed8f8:	b510      	push	{r4, lr}
2ffed8fa:	4604      	mov	r4, r0
2ffed8fc:	f7ff fdbe 	bl	2ffed47c <cm_get_context>
2ffed900:	b918      	cbnz	r0, 2ffed90a <cm_prepare_el3_exit+0x12>
2ffed902:	4828      	ldr	r0, [pc, #160]	; (2ffed9a4 <cm_prepare_el3_exit+0xac>)
2ffed904:	21b7      	movs	r1, #183	; 0xb7
2ffed906:	f00c fc07 	bl	2fffa118 <__assert>
2ffed90a:	2c01      	cmp	r4, #1
2ffed90c:	d11a      	bne.n	2ffed944 <cm_prepare_el3_exit+0x4c>
2ffed90e:	6943      	ldr	r3, [r0, #20]
2ffed910:	f413 7380 	ands.w	r3, r3, #256	; 0x100
2ffed914:	d017      	beq.n	2ffed946 <cm_prepare_el3_exit+0x4e>
2ffed916:	69c2      	ldr	r2, [r0, #28]
2ffed918:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed91c:	f043 0301 	orr.w	r3, r3, #1
2ffed920:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed924:	f3bf 8f6f 	isb	sy
2ffed928:	4b1f      	ldr	r3, [pc, #124]	; (2ffed9a8 <cm_prepare_el3_exit+0xb0>)
2ffed92a:	4313      	orrs	r3, r2
2ffed92c:	ee81 3f10 	mcr	15, 4, r3, cr1, cr0, {0}
2ffed930:	f3bf 8f6f 	isb	sy
2ffed934:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffed938:	f023 0301 	bic.w	r3, r3, #1
2ffed93c:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffed940:	f3bf 8f6f 	isb	sy
2ffed944:	bd10      	pop	{r4, pc}
2ffed946:	ee10 2f31 	mrc	15, 0, r2, cr0, cr1, {1}
2ffed94a:	f412 4f70 	tst.w	r2, #61440	; 0xf000
2ffed94e:	d0f9      	beq.n	2ffed944 <cm_prepare_el3_exit+0x4c>
2ffed950:	ee11 2f11 	mrc	15, 0, r2, cr1, cr1, {0}
2ffed954:	f042 0201 	orr.w	r2, r2, #1
2ffed958:	ee01 2f11 	mcr	15, 0, r2, cr1, cr1, {0}
2ffed95c:	f3bf 8f6f 	isb	sy
2ffed960:	ee81 3f11 	mcr	15, 4, r3, cr1, cr1, {0}
2ffed964:	f243 32ff 	movw	r2, #13311	; 0x33ff
2ffed968:	ee81 2f51 	mcr	15, 4, r2, cr1, cr1, {2}
2ffed96c:	2203      	movs	r2, #3
2ffed96e:	ee8e 2f11 	mcr	15, 4, r2, cr14, cr1, {0}
2ffed972:	2000      	movs	r0, #0
2ffed974:	2100      	movs	r1, #0
2ffed976:	ec41 0f4e 	mcrr	15, 4, r0, r1, cr14
2ffed97a:	ee10 2f10 	mrc	15, 0, r2, cr0, cr0, {0}
2ffed97e:	ee80 2f10 	mcr	15, 4, r2, cr0, cr0, {0}
2ffed982:	ee10 2fb0 	mrc	15, 0, r2, cr0, cr0, {5}
2ffed986:	ee80 2fb0 	mcr	15, 4, r2, cr0, cr0, {5}
2ffed98a:	ec41 0f62 	mcrr	15, 6, r0, r1, cr2
2ffed98e:	ee19 2f1c 	mrc	15, 0, r2, cr9, cr12, {0}
2ffed992:	f3c2 22c4 	ubfx	r2, r2, #11, #5
2ffed996:	ee81 2f31 	mcr	15, 4, r2, cr1, cr1, {1}
2ffed99a:	ee81 3f71 	mcr	15, 4, r3, cr1, cr1, {3}
2ffed99e:	ee8e 3f32 	mcr	15, 4, r3, cr14, cr2, {1}
2ffed9a2:	e7c5      	b.n	2ffed930 <cm_prepare_el3_exit+0x38>
2ffed9a4:	2fffa657 	.word	0x2fffa657
2ffed9a8:	30c50818 	.word	0x30c50818

2ffed9ac <errata_needs_reporting>:
2ffed9ac:	680b      	ldr	r3, [r1, #0]
2ffed9ae:	b570      	push	{r4, r5, r6, lr}
2ffed9b0:	4606      	mov	r6, r0
2ffed9b2:	460c      	mov	r4, r1
2ffed9b4:	b96b      	cbnz	r3, 2ffed9d2 <errata_needs_reporting+0x26>
2ffed9b6:	f00b eaf0 	blx	2fff8f98 <spin_lock>
2ffed9ba:	6823      	ldr	r3, [r4, #0]
2ffed9bc:	4630      	mov	r0, r6
2ffed9be:	2b00      	cmp	r3, #0
2ffed9c0:	bf03      	ittte	eq
2ffed9c2:	2301      	moveq	r3, #1
2ffed9c4:	2501      	moveq	r5, #1
2ffed9c6:	6023      	streq	r3, [r4, #0]
2ffed9c8:	2500      	movne	r5, #0
2ffed9ca:	f00b eaf8 	blx	2fff8fbc <spin_unlock>
2ffed9ce:	4628      	mov	r0, r5
2ffed9d0:	bd70      	pop	{r4, r5, r6, pc}
2ffed9d2:	2000      	movs	r0, #0
2ffed9d4:	e7fc      	b.n	2ffed9d0 <errata_needs_reporting+0x24>
	...

2ffed9d8 <psci_do_cpu_off>:
2ffed9d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
2ffed9da:	4605      	mov	r5, r0
2ffed9dc:	4e29      	ldr	r6, [pc, #164]	; (2ffeda84 <psci_do_cpu_off+0xac>)
2ffed9de:	f00b eee6 	blx	2fff97ac <plat_my_core_pos>
2ffed9e2:	2400      	movs	r4, #0
2ffed9e4:	6833      	ldr	r3, [r6, #0]
2ffed9e6:	9401      	str	r4, [sp, #4]
2ffed9e8:	689b      	ldr	r3, [r3, #8]
2ffed9ea:	2b00      	cmp	r3, #0
2ffed9ec:	d038      	beq.n	2ffeda60 <psci_do_cpu_off+0x88>
2ffed9ee:	f240 2302 	movw	r3, #514	; 0x202
2ffed9f2:	aa01      	add	r2, sp, #4
2ffed9f4:	f8ad 3000 	strh.w	r3, [sp]
2ffed9f8:	4629      	mov	r1, r5
2ffed9fa:	f000 fa85 	bl	2ffedf08 <psci_get_parent_pwr_domain_nodes>
2ffed9fe:	a901      	add	r1, sp, #4
2ffeda00:	4628      	mov	r0, r5
2ffeda02:	f000 fb77 	bl	2ffee0f4 <psci_acquire_pwr_domain_locks>
2ffeda06:	4b20      	ldr	r3, [pc, #128]	; (2ffeda88 <psci_do_cpu_off+0xb0>)
2ffeda08:	681b      	ldr	r3, [r3, #0]
2ffeda0a:	bb6b      	cbnz	r3, 2ffeda68 <psci_do_cpu_off+0x90>
2ffeda0c:	4669      	mov	r1, sp
2ffeda0e:	4628      	mov	r0, r5
2ffeda10:	2400      	movs	r4, #0
2ffeda12:	f000 fad1 	bl	2ffedfb8 <psci_do_state_coordination>
2ffeda16:	4668      	mov	r0, sp
2ffeda18:	f000 fb2c 	bl	2ffee074 <psci_find_max_off_lvl>
2ffeda1c:	f000 fca6 	bl	2ffee36c <psci_do_pwrdown_sequence>
2ffeda20:	6833      	ldr	r3, [r6, #0]
2ffeda22:	4668      	mov	r0, sp
2ffeda24:	689b      	ldr	r3, [r3, #8]
2ffeda26:	4798      	blx	r3
2ffeda28:	a901      	add	r1, sp, #4
2ffeda2a:	4628      	mov	r0, r5
2ffeda2c:	f000 fb7a 	bl	2ffee124 <psci_release_pwr_domain_locks>
2ffeda30:	bb2c      	cbnz	r4, 2ffeda7e <psci_do_cpu_off+0xa6>
2ffeda32:	f00b ea06 	blx	2fff8e40 <_cpu_data>
2ffeda36:	2104      	movs	r1, #4
2ffeda38:	4408      	add	r0, r1
2ffeda3a:	f00b ebd0 	blx	2fff91dc <flush_dcache_range>
2ffeda3e:	f00b ea00 	blx	2fff8e40 <_cpu_data>
2ffeda42:	2301      	movs	r3, #1
2ffeda44:	6043      	str	r3, [r0, #4]
2ffeda46:	f3bf 8f4b 	dsb	ish
2ffeda4a:	f00b e9fa 	blx	2fff8e40 <_cpu_data>
2ffeda4e:	2104      	movs	r1, #4
2ffeda50:	4408      	add	r0, r1
2ffeda52:	f00b ec00 	blx	2fff9254 <inv_dcache_range>
2ffeda56:	6833      	ldr	r3, [r6, #0]
2ffeda58:	6a1b      	ldr	r3, [r3, #32]
2ffeda5a:	b173      	cbz	r3, 2ffeda7a <psci_do_cpu_off+0xa2>
2ffeda5c:	4668      	mov	r0, sp
2ffeda5e:	4798      	blx	r3
2ffeda60:	480a      	ldr	r0, [pc, #40]	; (2ffeda8c <psci_do_cpu_off+0xb4>)
2ffeda62:	2136      	movs	r1, #54	; 0x36
2ffeda64:	f00c fb58 	bl	2fffa118 <__assert>
2ffeda68:	685b      	ldr	r3, [r3, #4]
2ffeda6a:	2b00      	cmp	r3, #0
2ffeda6c:	d0ce      	beq.n	2ffeda0c <psci_do_cpu_off+0x34>
2ffeda6e:	4620      	mov	r0, r4
2ffeda70:	4798      	blx	r3
2ffeda72:	4604      	mov	r4, r0
2ffeda74:	2800      	cmp	r0, #0
2ffeda76:	d0c9      	beq.n	2ffeda0c <psci_do_cpu_off+0x34>
2ffeda78:	e7d6      	b.n	2ffeda28 <psci_do_cpu_off+0x50>
2ffeda7a:	f00b eaee 	blx	2fff9058 <psci_power_down_wfi>
2ffeda7e:	4620      	mov	r0, r4
2ffeda80:	b002      	add	sp, #8
2ffeda82:	bd70      	pop	{r4, r5, r6, pc}
2ffeda84:	2fffec78 	.word	0x2fffec78
2ffeda88:	2fffec7c 	.word	0x2fffec7c
2ffeda8c:	2fffa67e 	.word	0x2fffa67e

2ffeda90 <psci_cpu_on_start>:
2ffeda90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2ffeda94:	4605      	mov	r5, r0
2ffeda96:	460f      	mov	r7, r1
2ffeda98:	f003 f9e4 	bl	2fff0e64 <plat_core_pos_by_mpidr>
2ffeda9c:	1e04      	subs	r4, r0, #0
2ffeda9e:	da03      	bge.n	2ffedaa8 <psci_cpu_on_start+0x18>
2ffedaa0:	2143      	movs	r1, #67	; 0x43
2ffedaa2:	4842      	ldr	r0, [pc, #264]	; (2ffedbac <psci_cpu_on_start+0x11c>)
2ffedaa4:	f00c fb38 	bl	2fffa118 <__assert>
2ffedaa8:	b90f      	cbnz	r7, 2ffedaae <psci_cpu_on_start+0x1e>
2ffedaaa:	2144      	movs	r1, #68	; 0x44
2ffedaac:	e7f9      	b.n	2ffedaa2 <psci_cpu_on_start+0x12>
2ffedaae:	4a40      	ldr	r2, [pc, #256]	; (2ffedbb0 <psci_cpu_on_start+0x120>)
2ffedab0:	6813      	ldr	r3, [r2, #0]
2ffedab2:	4690      	mov	r8, r2
2ffedab4:	6859      	ldr	r1, [r3, #4]
2ffedab6:	b109      	cbz	r1, 2ffedabc <psci_cpu_on_start+0x2c>
2ffedab8:	695b      	ldr	r3, [r3, #20]
2ffedaba:	b90b      	cbnz	r3, 2ffedac0 <psci_cpu_on_start+0x30>
2ffedabc:	214a      	movs	r1, #74	; 0x4a
2ffedabe:	e7f0      	b.n	2ffedaa2 <psci_cpu_on_start+0x12>
2ffedac0:	4b3c      	ldr	r3, [pc, #240]	; (2ffedbb4 <psci_cpu_on_start+0x124>)
2ffedac2:	260c      	movs	r6, #12
2ffedac4:	fb06 3604 	mla	r6, r6, r4, r3
2ffedac8:	4630      	mov	r0, r6
2ffedaca:	f00b ea66 	blx	2fff8f98 <spin_lock>
2ffedace:	4620      	mov	r0, r4
2ffedad0:	f00b e9be 	blx	2fff8e50 <_cpu_data_by_index>
2ffedad4:	2104      	movs	r1, #4
2ffedad6:	4408      	add	r0, r1
2ffedad8:	f00b eb80 	blx	2fff91dc <flush_dcache_range>
2ffedadc:	4620      	mov	r0, r4
2ffedade:	f00b e9b8 	blx	2fff8e50 <_cpu_data_by_index>
2ffedae2:	6843      	ldr	r3, [r0, #4]
2ffedae4:	2b00      	cmp	r3, #0
2ffedae6:	d05a      	beq.n	2ffedb9e <psci_cpu_on_start+0x10e>
2ffedae8:	2b02      	cmp	r3, #2
2ffedaea:	d05b      	beq.n	2ffedba4 <psci_cpu_on_start+0x114>
2ffedaec:	2b01      	cmp	r3, #1
2ffedaee:	d001      	beq.n	2ffedaf4 <psci_cpu_on_start+0x64>
2ffedaf0:	212d      	movs	r1, #45	; 0x2d
2ffedaf2:	e7d6      	b.n	2ffedaa2 <psci_cpu_on_start+0x12>
2ffedaf4:	4b30      	ldr	r3, [pc, #192]	; (2ffedbb8 <psci_cpu_on_start+0x128>)
2ffedaf6:	681b      	ldr	r3, [r3, #0]
2ffedaf8:	b11b      	cbz	r3, 2ffedb02 <psci_cpu_on_start+0x72>
2ffedafa:	681b      	ldr	r3, [r3, #0]
2ffedafc:	b10b      	cbz	r3, 2ffedb02 <psci_cpu_on_start+0x72>
2ffedafe:	4628      	mov	r0, r5
2ffedb00:	4798      	blx	r3
2ffedb02:	4620      	mov	r0, r4
2ffedb04:	f04f 0902 	mov.w	r9, #2
2ffedb08:	f00b e9a2 	blx	2fff8e50 <_cpu_data_by_index>
2ffedb0c:	f8c0 9004 	str.w	r9, [r0, #4]
2ffedb10:	4620      	mov	r0, r4
2ffedb12:	f00b e99e 	blx	2fff8e50 <_cpu_data_by_index>
2ffedb16:	2104      	movs	r1, #4
2ffedb18:	4408      	add	r0, r1
2ffedb1a:	f00b eb60 	blx	2fff91dc <flush_dcache_range>
2ffedb1e:	4620      	mov	r0, r4
2ffedb20:	f00b e996 	blx	2fff8e50 <_cpu_data_by_index>
2ffedb24:	6843      	ldr	r3, [r0, #4]
2ffedb26:	454b      	cmp	r3, r9
2ffedb28:	d017      	beq.n	2ffedb5a <psci_cpu_on_start+0xca>
2ffedb2a:	2b01      	cmp	r3, #1
2ffedb2c:	d001      	beq.n	2ffedb32 <psci_cpu_on_start+0xa2>
2ffedb2e:	217f      	movs	r1, #127	; 0x7f
2ffedb30:	e7b7      	b.n	2ffedaa2 <psci_cpu_on_start+0x12>
2ffedb32:	4620      	mov	r0, r4
2ffedb34:	f00b e98c 	blx	2fff8e50 <_cpu_data_by_index>
2ffedb38:	f8c0 9004 	str.w	r9, [r0, #4]
2ffedb3c:	4620      	mov	r0, r4
2ffedb3e:	f00b e988 	blx	2fff8e50 <_cpu_data_by_index>
2ffedb42:	2104      	movs	r1, #4
2ffedb44:	4408      	add	r0, r1
2ffedb46:	f00b eb4a 	blx	2fff91dc <flush_dcache_range>
2ffedb4a:	4620      	mov	r0, r4
2ffedb4c:	f00b e980 	blx	2fff8e50 <_cpu_data_by_index>
2ffedb50:	6843      	ldr	r3, [r0, #4]
2ffedb52:	2b02      	cmp	r3, #2
2ffedb54:	d001      	beq.n	2ffedb5a <psci_cpu_on_start+0xca>
2ffedb56:	2184      	movs	r1, #132	; 0x84
2ffedb58:	e7a3      	b.n	2ffedaa2 <psci_cpu_on_start+0x12>
2ffedb5a:	f8d8 3000 	ldr.w	r3, [r8]
2ffedb5e:	4628      	mov	r0, r5
2ffedb60:	685b      	ldr	r3, [r3, #4]
2ffedb62:	4798      	blx	r3
2ffedb64:	4605      	mov	r5, r0
2ffedb66:	b118      	cbz	r0, 2ffedb70 <psci_cpu_on_start+0xe0>
2ffedb68:	1d83      	adds	r3, r0, #6
2ffedb6a:	d00b      	beq.n	2ffedb84 <psci_cpu_on_start+0xf4>
2ffedb6c:	2191      	movs	r1, #145	; 0x91
2ffedb6e:	e798      	b.n	2ffedaa2 <psci_cpu_on_start+0x12>
2ffedb70:	4639      	mov	r1, r7
2ffedb72:	4620      	mov	r0, r4
2ffedb74:	f7ff fea8 	bl	2ffed8c8 <cm_init_context_by_index>
2ffedb78:	4630      	mov	r0, r6
2ffedb7a:	f00b ea20 	blx	2fff8fbc <spin_unlock>
2ffedb7e:	4628      	mov	r0, r5
2ffedb80:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2ffedb84:	4620      	mov	r0, r4
2ffedb86:	f00b e964 	blx	2fff8e50 <_cpu_data_by_index>
2ffedb8a:	2301      	movs	r3, #1
2ffedb8c:	6043      	str	r3, [r0, #4]
2ffedb8e:	4620      	mov	r0, r4
2ffedb90:	f00b e95e 	blx	2fff8e50 <_cpu_data_by_index>
2ffedb94:	2104      	movs	r1, #4
2ffedb96:	4408      	add	r0, r1
2ffedb98:	f00b eb20 	blx	2fff91dc <flush_dcache_range>
2ffedb9c:	e7ec      	b.n	2ffedb78 <psci_cpu_on_start+0xe8>
2ffedb9e:	f06f 0503 	mvn.w	r5, #3
2ffedba2:	e7e9      	b.n	2ffedb78 <psci_cpu_on_start+0xe8>
2ffedba4:	f06f 0504 	mvn.w	r5, #4
2ffedba8:	e7e6      	b.n	2ffedb78 <psci_cpu_on_start+0xe8>
2ffedbaa:	bf00      	nop
2ffedbac:	2fffa692 	.word	0x2fffa692
2ffedbb0:	2fffec78 	.word	0x2fffec78
2ffedbb4:	2fffec48 	.word	0x2fffec48
2ffedbb8:	2fffec7c 	.word	0x2fffec7c

2ffedbbc <psci_cpu_on_finish>:
2ffedbbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffedbbe:	4605      	mov	r5, r0
2ffedbc0:	4e1f      	ldr	r6, [pc, #124]	; (2ffedc40 <psci_cpu_on_finish+0x84>)
2ffedbc2:	4608      	mov	r0, r1
2ffedbc4:	460c      	mov	r4, r1
2ffedbc6:	6833      	ldr	r3, [r6, #0]
2ffedbc8:	695b      	ldr	r3, [r3, #20]
2ffedbca:	4798      	blx	r3
2ffedbcc:	f00b ea0e 	blx	2fff8fec <psci_do_pwrup_cache_maintenance>
2ffedbd0:	6833      	ldr	r3, [r6, #0]
2ffedbd2:	699b      	ldr	r3, [r3, #24]
2ffedbd4:	b10b      	cbz	r3, 2ffedbda <psci_cpu_on_finish+0x1e>
2ffedbd6:	4620      	mov	r0, r4
2ffedbd8:	4798      	blx	r3
2ffedbda:	4e1a      	ldr	r6, [pc, #104]	; (2ffedc44 <psci_cpu_on_finish+0x88>)
2ffedbdc:	240c      	movs	r4, #12
2ffedbde:	436c      	muls	r4, r5
2ffedbe0:	f000 fdd2 	bl	2ffee788 <psci_arch_setup>
2ffedbe4:	3408      	adds	r4, #8
2ffedbe6:	4434      	add	r4, r6
2ffedbe8:	4620      	mov	r0, r4
2ffedbea:	f00b e9d6 	blx	2fff8f98 <spin_lock>
2ffedbee:	4620      	mov	r0, r4
2ffedbf0:	4634      	mov	r4, r6
2ffedbf2:	f00b e9e4 	blx	2fff8fbc <spin_unlock>
2ffedbf6:	f00b e924 	blx	2fff8e40 <_cpu_data>
2ffedbfa:	6843      	ldr	r3, [r0, #4]
2ffedbfc:	2b02      	cmp	r3, #2
2ffedbfe:	d003      	beq.n	2ffedc08 <psci_cpu_on_finish+0x4c>
2ffedc00:	4811      	ldr	r0, [pc, #68]	; (2ffedc48 <psci_cpu_on_finish+0x8c>)
2ffedc02:	21d1      	movs	r1, #209	; 0xd1
2ffedc04:	f00c fa88 	bl	2fffa118 <__assert>
2ffedc08:	4b10      	ldr	r3, [pc, #64]	; (2ffedc4c <psci_cpu_on_finish+0x90>)
2ffedc0a:	681b      	ldr	r3, [r3, #0]
2ffedc0c:	b11b      	cbz	r3, 2ffedc16 <psci_cpu_on_finish+0x5a>
2ffedc0e:	68db      	ldr	r3, [r3, #12]
2ffedc10:	b10b      	cbz	r3, 2ffedc16 <psci_cpu_on_finish+0x5a>
2ffedc12:	2000      	movs	r0, #0
2ffedc14:	4798      	blx	r3
2ffedc16:	4e0e      	ldr	r6, [pc, #56]	; (2ffedc50 <psci_cpu_on_finish+0x94>)
2ffedc18:	4f0e      	ldr	r7, [pc, #56]	; (2ffedc54 <psci_cpu_on_finish+0x98>)
2ffedc1a:	42be      	cmp	r6, r7
2ffedc1c:	d30b      	bcc.n	2ffedc36 <psci_cpu_on_finish+0x7a>
2ffedc1e:	ee10 3fb0 	mrc	15, 0, r3, cr0, cr0, {5}
2ffedc22:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
2ffedc26:	200c      	movs	r0, #12
2ffedc28:	4345      	muls	r5, r0
2ffedc2a:	2001      	movs	r0, #1
2ffedc2c:	5163      	str	r3, [r4, r5]
2ffedc2e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2ffedc32:	f7ff be61 	b.w	2ffed8f8 <cm_prepare_el3_exit>
2ffedc36:	f856 3b04 	ldr.w	r3, [r6], #4
2ffedc3a:	2000      	movs	r0, #0
2ffedc3c:	4798      	blx	r3
2ffedc3e:	e7ec      	b.n	2ffedc1a <psci_cpu_on_finish+0x5e>
2ffedc40:	2fffec78 	.word	0x2fffec78
2ffedc44:	2fffec40 	.word	0x2fffec40
2ffedc48:	2fffa692 	.word	0x2fffa692
2ffedc4c:	2fffec7c 	.word	0x2fffec7c
2ffedc50:	2fffce00 	.word	0x2fffce00
2ffedc54:	2fffce00 	.word	0x2fffce00

2ffedc58 <psci_cpu_suspend_start>:
2ffedc58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffedc5c:	b085      	sub	sp, #20
2ffedc5e:	4d41      	ldr	r5, [pc, #260]	; (2ffedd64 <psci_cpu_suspend_start+0x10c>)
2ffedc60:	4616      	mov	r6, r2
2ffedc62:	461f      	mov	r7, r3
2ffedc64:	4682      	mov	sl, r0
2ffedc66:	460c      	mov	r4, r1
2ffedc68:	f00b eda0 	blx	2fff97ac <plat_my_core_pos>
2ffedc6c:	2300      	movs	r3, #0
2ffedc6e:	4681      	mov	r9, r0
2ffedc70:	9302      	str	r3, [sp, #8]
2ffedc72:	682b      	ldr	r3, [r5, #0]
2ffedc74:	691a      	ldr	r2, [r3, #16]
2ffedc76:	b10a      	cbz	r2, 2ffedc7c <psci_cpu_suspend_start+0x24>
2ffedc78:	69db      	ldr	r3, [r3, #28]
2ffedc7a:	b91b      	cbnz	r3, 2ffedc84 <psci_cpu_suspend_start+0x2c>
2ffedc7c:	483a      	ldr	r0, [pc, #232]	; (2ffedd68 <psci_cpu_suspend_start+0x110>)
2ffedc7e:	21a7      	movs	r1, #167	; 0xa7
2ffedc80:	f00c fa4a 	bl	2fffa118 <__assert>
2ffedc84:	aa02      	add	r2, sp, #8
2ffedc86:	4621      	mov	r1, r4
2ffedc88:	f000 f93e 	bl	2ffedf08 <psci_get_parent_pwr_domain_nodes>
2ffedc8c:	a902      	add	r1, sp, #8
2ffedc8e:	4620      	mov	r0, r4
2ffedc90:	f000 fa30 	bl	2ffee0f4 <psci_acquire_pwr_domain_locks>
2ffedc94:	ee1c 3f11 	mrc	15, 0, r3, cr12, cr1, {0}
2ffedc98:	2b00      	cmp	r3, #0
2ffedc9a:	d140      	bne.n	2ffedd1e <psci_cpu_suspend_start+0xc6>
2ffedc9c:	4631      	mov	r1, r6
2ffedc9e:	4620      	mov	r0, r4
2ffedca0:	f000 f98a 	bl	2ffedfb8 <psci_do_state_coordination>
2ffedca4:	b31f      	cbz	r7, 2ffedcee <psci_cpu_suspend_start+0x96>
2ffedca6:	f8df b0cc 	ldr.w	fp, [pc, #204]	; 2ffedd74 <psci_cpu_suspend_start+0x11c>
2ffedcaa:	4630      	mov	r0, r6
2ffedcac:	f000 f9e2 	bl	2ffee074 <psci_find_max_off_lvl>
2ffedcb0:	4680      	mov	r8, r0
2ffedcb2:	4b2e      	ldr	r3, [pc, #184]	; (2ffedd6c <psci_cpu_suspend_start+0x114>)
2ffedcb4:	459b      	cmp	fp, r3
2ffedcb6:	d32d      	bcc.n	2ffedd14 <psci_cpu_suspend_start+0xbc>
2ffedcb8:	f00b e8c2 	blx	2fff8e40 <_cpu_data>
2ffedcbc:	6084      	str	r4, [r0, #8]
2ffedcbe:	f00b e8c0 	blx	2fff8e40 <_cpu_data>
2ffedcc2:	3008      	adds	r0, #8
2ffedcc4:	2104      	movs	r1, #4
2ffedcc6:	f00b ea8a 	blx	2fff91dc <flush_dcache_range>
2ffedcca:	4b29      	ldr	r3, [pc, #164]	; (2ffedd70 <psci_cpu_suspend_start+0x118>)
2ffedccc:	681b      	ldr	r3, [r3, #0]
2ffedcce:	b11b      	cbz	r3, 2ffedcd8 <psci_cpu_suspend_start+0x80>
2ffedcd0:	689b      	ldr	r3, [r3, #8]
2ffedcd2:	b10b      	cbz	r3, 2ffedcd8 <psci_cpu_suspend_start+0x80>
2ffedcd4:	4640      	mov	r0, r8
2ffedcd6:	4798      	blx	r3
2ffedcd8:	682b      	ldr	r3, [r5, #0]
2ffedcda:	68db      	ldr	r3, [r3, #12]
2ffedcdc:	b10b      	cbz	r3, 2ffedce2 <psci_cpu_suspend_start+0x8a>
2ffedcde:	4630      	mov	r0, r6
2ffedce0:	4798      	blx	r3
2ffedce2:	4650      	mov	r0, sl
2ffedce4:	f7ff fdfc 	bl	2ffed8e0 <cm_init_my_context>
2ffedce8:	4640      	mov	r0, r8
2ffedcea:	f000 fb3f 	bl	2ffee36c <psci_do_pwrdown_sequence>
2ffedcee:	682b      	ldr	r3, [r5, #0]
2ffedcf0:	4630      	mov	r0, r6
2ffedcf2:	f04f 0800 	mov.w	r8, #0
2ffedcf6:	691b      	ldr	r3, [r3, #16]
2ffedcf8:	4798      	blx	r3
2ffedcfa:	a902      	add	r1, sp, #8
2ffedcfc:	4620      	mov	r0, r4
2ffedcfe:	f000 fa11 	bl	2ffee124 <psci_release_pwr_domain_locks>
2ffedd02:	f1b8 0f00 	cmp.w	r8, #0
2ffedd06:	d129      	bne.n	2ffedd5c <psci_cpu_suspend_start+0x104>
2ffedd08:	b177      	cbz	r7, 2ffedd28 <psci_cpu_suspend_start+0xd0>
2ffedd0a:	682b      	ldr	r3, [r5, #0]
2ffedd0c:	6a1b      	ldr	r3, [r3, #32]
2ffedd0e:	b14b      	cbz	r3, 2ffedd24 <psci_cpu_suspend_start+0xcc>
2ffedd10:	4630      	mov	r0, r6
2ffedd12:	4798      	blx	r3
2ffedd14:	f85b 2b04 	ldr.w	r2, [fp], #4
2ffedd18:	2000      	movs	r0, #0
2ffedd1a:	4790      	blx	r2
2ffedd1c:	e7c9      	b.n	2ffedcb2 <psci_cpu_suspend_start+0x5a>
2ffedd1e:	f04f 0801 	mov.w	r8, #1
2ffedd22:	e7ea      	b.n	2ffedcfa <psci_cpu_suspend_start+0xa2>
2ffedd24:	f00b e998 	blx	2fff9058 <psci_power_down_wfi>
2ffedd28:	bf30      	wfi
2ffedd2a:	9703      	str	r7, [sp, #12]
2ffedd2c:	aa03      	add	r2, sp, #12
2ffedd2e:	4621      	mov	r1, r4
2ffedd30:	4648      	mov	r0, r9
2ffedd32:	f000 f8e9 	bl	2ffedf08 <psci_get_parent_pwr_domain_nodes>
2ffedd36:	a903      	add	r1, sp, #12
2ffedd38:	4620      	mov	r0, r4
2ffedd3a:	f000 f9db 	bl	2ffee0f4 <psci_acquire_pwr_domain_locks>
2ffedd3e:	a901      	add	r1, sp, #4
2ffedd40:	4620      	mov	r0, r4
2ffedd42:	f000 f8b7 	bl	2ffedeb4 <psci_get_target_local_pwr_states>
2ffedd46:	682b      	ldr	r3, [r5, #0]
2ffedd48:	a801      	add	r0, sp, #4
2ffedd4a:	69db      	ldr	r3, [r3, #28]
2ffedd4c:	4798      	blx	r3
2ffedd4e:	4620      	mov	r0, r4
2ffedd50:	f000 f8f0 	bl	2ffedf34 <psci_set_pwr_domains_to_run>
2ffedd54:	a903      	add	r1, sp, #12
2ffedd56:	4620      	mov	r0, r4
2ffedd58:	f000 f9e4 	bl	2ffee124 <psci_release_pwr_domain_locks>
2ffedd5c:	b005      	add	sp, #20
2ffedd5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffedd62:	bf00      	nop
2ffedd64:	2fffec78 	.word	0x2fffec78
2ffedd68:	2fffa6a5 	.word	0x2fffa6a5
2ffedd6c:	2fffce00 	.word	0x2fffce00
2ffedd70:	2fffec7c 	.word	0x2fffec7c
2ffedd74:	2fffce00 	.word	0x2fffce00

2ffedd78 <psci_cpu_suspend_finish>:
2ffedd78:	b538      	push	{r3, r4, r5, lr}
2ffedd7a:	460c      	mov	r4, r1
2ffedd7c:	f00b e860 	blx	2fff8e40 <_cpu_data>
2ffedd80:	6843      	ldr	r3, [r0, #4]
2ffedd82:	b913      	cbnz	r3, 2ffedd8a <psci_cpu_suspend_finish+0x12>
2ffedd84:	7823      	ldrb	r3, [r4, #0]
2ffedd86:	2b02      	cmp	r3, #2
2ffedd88:	d004      	beq.n	2ffedd94 <psci_cpu_suspend_finish+0x1c>
2ffedd8a:	f240 111d 	movw	r1, #285	; 0x11d
2ffedd8e:	4818      	ldr	r0, [pc, #96]	; (2ffeddf0 <psci_cpu_suspend_finish+0x78>)
2ffedd90:	f00c f9c2 	bl	2fffa118 <__assert>
2ffedd94:	4b17      	ldr	r3, [pc, #92]	; (2ffeddf4 <psci_cpu_suspend_finish+0x7c>)
2ffedd96:	4620      	mov	r0, r4
2ffedd98:	681b      	ldr	r3, [r3, #0]
2ffedd9a:	69db      	ldr	r3, [r3, #28]
2ffedd9c:	4798      	blx	r3
2ffedd9e:	f00b e926 	blx	2fff8fec <psci_do_pwrup_cache_maintenance>
2ffedda2:	f005 f972 	bl	2fff308a <plat_get_syscnt_freq2>
2ffedda6:	ee0e 0f10 	mcr	15, 0, r0, cr14, cr0, {0}
2ffeddaa:	4d13      	ldr	r5, [pc, #76]	; (2ffeddf8 <psci_cpu_suspend_finish+0x80>)
2ffeddac:	682b      	ldr	r3, [r5, #0]
2ffeddae:	b163      	cbz	r3, 2ffeddca <psci_cpu_suspend_finish+0x52>
2ffeddb0:	691b      	ldr	r3, [r3, #16]
2ffeddb2:	b153      	cbz	r3, 2ffeddca <psci_cpu_suspend_finish+0x52>
2ffeddb4:	4620      	mov	r0, r4
2ffeddb6:	f000 f95d 	bl	2ffee074 <psci_find_max_off_lvl>
2ffeddba:	2802      	cmp	r0, #2
2ffeddbc:	d102      	bne.n	2ffeddc4 <psci_cpu_suspend_finish+0x4c>
2ffeddbe:	f44f 71a0 	mov.w	r1, #320	; 0x140
2ffeddc2:	e7e4      	b.n	2ffedd8e <psci_cpu_suspend_finish+0x16>
2ffeddc4:	682b      	ldr	r3, [r5, #0]
2ffeddc6:	691b      	ldr	r3, [r3, #16]
2ffeddc8:	4798      	blx	r3
2ffeddca:	4c0c      	ldr	r4, [pc, #48]	; (2ffeddfc <psci_cpu_suspend_finish+0x84>)
2ffeddcc:	f00b e838 	blx	2fff8e40 <_cpu_data>
2ffeddd0:	4d0b      	ldr	r5, [pc, #44]	; (2ffede00 <psci_cpu_suspend_finish+0x88>)
2ffeddd2:	2302      	movs	r3, #2
2ffeddd4:	6083      	str	r3, [r0, #8]
2ffeddd6:	42ac      	cmp	r4, r5
2ffeddd8:	d304      	bcc.n	2ffedde4 <psci_cpu_suspend_finish+0x6c>
2ffeddda:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffeddde:	2001      	movs	r0, #1
2ffedde0:	f7ff bd8a 	b.w	2ffed8f8 <cm_prepare_el3_exit>
2ffedde4:	f854 3b04 	ldr.w	r3, [r4], #4
2ffedde8:	2000      	movs	r0, #0
2ffeddea:	4798      	blx	r3
2ffeddec:	e7f3      	b.n	2ffeddd6 <psci_cpu_suspend_finish+0x5e>
2ffeddee:	bf00      	nop
2ffeddf0:	2fffa6a5 	.word	0x2fffa6a5
2ffeddf4:	2fffec78 	.word	0x2fffec78
2ffeddf8:	2fffec7c 	.word	0x2fffec7c
2ffeddfc:	2fffce00 	.word	0x2fffce00
2ffede00:	2fffce00 	.word	0x2fffce00

2ffede04 <psci_validate_power_state>:
2ffede04:	4b08      	ldr	r3, [pc, #32]	; (2ffede28 <psci_validate_power_state+0x24>)
2ffede06:	b510      	push	{r4, lr}
2ffede08:	4003      	ands	r3, r0
2ffede0a:	b953      	cbnz	r3, 2ffede22 <psci_validate_power_state+0x1e>
2ffede0c:	4b07      	ldr	r3, [pc, #28]	; (2ffede2c <psci_validate_power_state+0x28>)
2ffede0e:	681b      	ldr	r3, [r3, #0]
2ffede10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
2ffede12:	b91b      	cbnz	r3, 2ffede1c <psci_validate_power_state+0x18>
2ffede14:	4806      	ldr	r0, [pc, #24]	; (2ffede30 <psci_validate_power_state+0x2c>)
2ffede16:	2182      	movs	r1, #130	; 0x82
2ffede18:	f00c f97e 	bl	2fffa118 <__assert>
2ffede1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffede20:	4718      	bx	r3
2ffede22:	f06f 0001 	mvn.w	r0, #1
2ffede26:	bd10      	pop	{r4, pc}
2ffede28:	fcfe0000 	.word	0xfcfe0000
2ffede2c:	2fffec78 	.word	0x2fffec78
2ffede30:	2fffa6bd 	.word	0x2fffa6bd

2ffede34 <psci_query_sys_suspend_pwrstate>:
2ffede34:	4b05      	ldr	r3, [pc, #20]	; (2ffede4c <psci_query_sys_suspend_pwrstate+0x18>)
2ffede36:	b510      	push	{r4, lr}
2ffede38:	681b      	ldr	r3, [r3, #0]
2ffede3a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
2ffede3c:	b91b      	cbnz	r3, 2ffede46 <psci_query_sys_suspend_pwrstate+0x12>
2ffede3e:	4804      	ldr	r0, [pc, #16]	; (2ffede50 <psci_query_sys_suspend_pwrstate+0x1c>)
2ffede40:	2192      	movs	r1, #146	; 0x92
2ffede42:	f00c f969 	bl	2fffa118 <__assert>
2ffede46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffede4a:	4718      	bx	r3
2ffede4c:	2fffec78 	.word	0x2fffec78
2ffede50:	2fffa6bd 	.word	0x2fffa6bd

2ffede54 <psci_is_last_on_cpu>:
2ffede54:	b510      	push	{r4, lr}
2ffede56:	f00b ecaa 	blx	2fff97ac <plat_my_core_pos>
2ffede5a:	4604      	mov	r4, r0
2ffede5c:	b138      	cbz	r0, 2ffede6e <psci_is_last_on_cpu+0x1a>
2ffede5e:	2000      	movs	r0, #0
2ffede60:	f00a eff6 	blx	2fff8e50 <_cpu_data_by_index>
2ffede64:	6843      	ldr	r3, [r0, #4]
2ffede66:	2b01      	cmp	r3, #1
2ffede68:	d009      	beq.n	2ffede7e <psci_is_last_on_cpu+0x2a>
2ffede6a:	2000      	movs	r0, #0
2ffede6c:	e00f      	b.n	2ffede8e <psci_is_last_on_cpu+0x3a>
2ffede6e:	f00a efe8 	blx	2fff8e40 <_cpu_data>
2ffede72:	6843      	ldr	r3, [r0, #4]
2ffede74:	b163      	cbz	r3, 2ffede90 <psci_is_last_on_cpu+0x3c>
2ffede76:	480a      	ldr	r0, [pc, #40]	; (2ffedea0 <psci_is_last_on_cpu+0x4c>)
2ffede78:	21a7      	movs	r1, #167	; 0xa7
2ffede7a:	f00c f94d 	bl	2fffa118 <__assert>
2ffede7e:	2c01      	cmp	r4, #1
2ffede80:	d106      	bne.n	2ffede90 <psci_is_last_on_cpu+0x3c>
2ffede82:	f00a efde 	blx	2fff8e40 <_cpu_data>
2ffede86:	6843      	ldr	r3, [r0, #4]
2ffede88:	2b00      	cmp	r3, #0
2ffede8a:	d1f4      	bne.n	2ffede76 <psci_is_last_on_cpu+0x22>
2ffede8c:	2001      	movs	r0, #1
2ffede8e:	bd10      	pop	{r4, pc}
2ffede90:	2001      	movs	r0, #1
2ffede92:	f00a efde 	blx	2fff8e50 <_cpu_data_by_index>
2ffede96:	6843      	ldr	r3, [r0, #4]
2ffede98:	2b01      	cmp	r3, #1
2ffede9a:	d0f7      	beq.n	2ffede8c <psci_is_last_on_cpu+0x38>
2ffede9c:	e7e5      	b.n	2ffede6a <psci_is_last_on_cpu+0x16>
2ffede9e:	bf00      	nop
2ffedea0:	2fffa6bd 	.word	0x2fffa6bd

2ffedea4 <psci_init_req_local_pwr_states>:
2ffedea4:	4b02      	ldr	r3, [pc, #8]	; (2ffedeb0 <psci_init_req_local_pwr_states+0xc>)
2ffedea6:	2202      	movs	r2, #2
2ffedea8:	701a      	strb	r2, [r3, #0]
2ffedeaa:	705a      	strb	r2, [r3, #1]
2ffedeac:	4770      	bx	lr
2ffedeae:	bf00      	nop
2ffedeb0:	2fffe268 	.word	0x2fffe268

2ffedeb4 <psci_get_target_local_pwr_states>:
2ffedeb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffedeb8:	460e      	mov	r6, r1
2ffedeba:	f8df 8048 	ldr.w	r8, [pc, #72]	; 2ffedf04 <psci_get_target_local_pwr_states+0x50>
2ffedebe:	4607      	mov	r7, r0
2ffedec0:	2401      	movs	r4, #1
2ffedec2:	f00a efbe 	blx	2fff8e40 <_cpu_data>
2ffedec6:	7b03      	ldrb	r3, [r0, #12]
2ffedec8:	7033      	strb	r3, [r6, #0]
2ffedeca:	f00b ec70 	blx	2fff97ac <plat_my_core_pos>
2ffedece:	4b0c      	ldr	r3, [pc, #48]	; (2ffedf00 <psci_get_target_local_pwr_states+0x4c>)
2ffeded0:	220c      	movs	r2, #12
2ffeded2:	fb02 3000 	mla	r0, r2, r0, r3
2ffeded6:	6845      	ldr	r5, [r0, #4]
2ffeded8:	42bc      	cmp	r4, r7
2ffededa:	d905      	bls.n	2ffedee8 <psci_get_target_local_pwr_states+0x34>
2ffededc:	2c01      	cmp	r4, #1
2ffedede:	bf9c      	itt	ls
2ffedee0:	2300      	movls	r3, #0
2ffedee2:	5533      	strbls	r3, [r6, r4]
2ffedee4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffedee8:	eb08 1505 	add.w	r5, r8, r5, lsl #4
2ffedeec:	2110      	movs	r1, #16
2ffedeee:	4628      	mov	r0, r5
2ffedef0:	f00b e974 	blx	2fff91dc <flush_dcache_range>
2ffedef4:	7b2b      	ldrb	r3, [r5, #12]
2ffedef6:	5533      	strb	r3, [r6, r4]
2ffedef8:	3401      	adds	r4, #1
2ffedefa:	68ad      	ldr	r5, [r5, #8]
2ffedefc:	e7ec      	b.n	2ffeded8 <psci_get_target_local_pwr_states+0x24>
2ffedefe:	bf00      	nop
2ffedf00:	2fffec40 	.word	0x2fffec40
2ffedf04:	2fffec58 	.word	0x2fffec58

2ffedf08 <psci_get_parent_pwr_domain_nodes>:
2ffedf08:	4b08      	ldr	r3, [pc, #32]	; (2ffedf2c <psci_get_parent_pwr_domain_nodes+0x24>)
2ffedf0a:	b510      	push	{r4, lr}
2ffedf0c:	240c      	movs	r4, #12
2ffedf0e:	fb04 3000 	mla	r0, r4, r0, r3
2ffedf12:	4c07      	ldr	r4, [pc, #28]	; (2ffedf30 <psci_get_parent_pwr_domain_nodes+0x28>)
2ffedf14:	6843      	ldr	r3, [r0, #4]
2ffedf16:	2001      	movs	r0, #1
2ffedf18:	4288      	cmp	r0, r1
2ffedf1a:	d900      	bls.n	2ffedf1e <psci_get_parent_pwr_domain_nodes+0x16>
2ffedf1c:	bd10      	pop	{r4, pc}
2ffedf1e:	f842 3b04 	str.w	r3, [r2], #4
2ffedf22:	3001      	adds	r0, #1
2ffedf24:	eb04 1303 	add.w	r3, r4, r3, lsl #4
2ffedf28:	689b      	ldr	r3, [r3, #8]
2ffedf2a:	e7f5      	b.n	2ffedf18 <psci_get_parent_pwr_domain_nodes+0x10>
2ffedf2c:	2fffec40 	.word	0x2fffec40
2ffedf30:	2fffec58 	.word	0x2fffec58

2ffedf34 <psci_set_pwr_domains_to_run>:
2ffedf34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffedf38:	4606      	mov	r6, r0
2ffedf3a:	f8df 8074 	ldr.w	r8, [pc, #116]	; 2ffedfb0 <psci_set_pwr_domains_to_run+0x7c>
2ffedf3e:	f00b ec36 	blx	2fff97ac <plat_my_core_pos>
2ffedf42:	4a19      	ldr	r2, [pc, #100]	; (2ffedfa8 <psci_set_pwr_domains_to_run+0x74>)
2ffedf44:	230c      	movs	r3, #12
2ffedf46:	f8df a06c 	ldr.w	sl, [pc, #108]	; 2ffedfb4 <psci_set_pwr_domains_to_run+0x80>
2ffedf4a:	4605      	mov	r5, r0
2ffedf4c:	fb03 2300 	mla	r3, r3, r0, r2
2ffedf50:	2401      	movs	r4, #1
2ffedf52:	6858      	ldr	r0, [r3, #4]
2ffedf54:	42b4      	cmp	r4, r6
2ffedf56:	d90e      	bls.n	2ffedf76 <psci_set_pwr_domains_to_run+0x42>
2ffedf58:	2400      	movs	r4, #0
2ffedf5a:	f00a ef72 	blx	2fff8e40 <_cpu_data>
2ffedf5e:	6044      	str	r4, [r0, #4]
2ffedf60:	f00a ef6e 	blx	2fff8e40 <_cpu_data>
2ffedf64:	7304      	strb	r4, [r0, #12]
2ffedf66:	f00a ef6c 	blx	2fff8e40 <_cpu_data>
2ffedf6a:	3004      	adds	r0, #4
2ffedf6c:	210c      	movs	r1, #12
2ffedf6e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffedf72:	f00e bf69 	b.w	2fffce48 <__flush_dcache_range_from_thumb>
2ffedf76:	0107      	lsls	r7, r0, #4
2ffedf78:	f04f 0900 	mov.w	r9, #0
2ffedf7c:	eb08 1000 	add.w	r0, r8, r0, lsl #4
2ffedf80:	2110      	movs	r1, #16
2ffedf82:	f880 900c 	strb.w	r9, [r0, #12]
2ffedf86:	f00b e92a 	blx	2fff91dc <flush_dcache_range>
2ffedf8a:	b91c      	cbnz	r4, 2ffedf94 <psci_set_pwr_domains_to_run+0x60>
2ffedf8c:	4807      	ldr	r0, [pc, #28]	; (2ffedfac <psci_set_pwr_domains_to_run+0x78>)
2ffedf8e:	21d1      	movs	r1, #209	; 0xd1
2ffedf90:	f00c f8c2 	bl	2fffa118 <__assert>
2ffedf94:	2c01      	cmp	r4, #1
2ffedf96:	d103      	bne.n	2ffedfa0 <psci_set_pwr_domains_to_run+0x6c>
2ffedf98:	2d01      	cmp	r5, #1
2ffedf9a:	bf98      	it	ls
2ffedf9c:	f80a 9005 	strbls.w	r9, [sl, r5]
2ffedfa0:	4447      	add	r7, r8
2ffedfa2:	3401      	adds	r4, #1
2ffedfa4:	68b8      	ldr	r0, [r7, #8]
2ffedfa6:	e7d5      	b.n	2ffedf54 <psci_set_pwr_domains_to_run+0x20>
2ffedfa8:	2fffec40 	.word	0x2fffec40
2ffedfac:	2fffa6bd 	.word	0x2fffa6bd
2ffedfb0:	2fffec58 	.word	0x2fffec58
2ffedfb4:	2fffe268 	.word	0x2fffe268

2ffedfb8 <psci_do_state_coordination>:
2ffedfb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffedfbc:	4606      	mov	r6, r0
2ffedfbe:	460d      	mov	r5, r1
2ffedfc0:	f00b ebf4 	blx	2fff97ac <plat_my_core_pos>
2ffedfc4:	2e01      	cmp	r6, #1
2ffedfc6:	4607      	mov	r7, r0
2ffedfc8:	d904      	bls.n	2ffedfd4 <psci_do_state_coordination+0x1c>
2ffedfca:	4826      	ldr	r0, [pc, #152]	; (2ffee064 <psci_do_state_coordination+0xac>)
2ffedfcc:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
2ffedfd0:	f00c f8a2 	bl	2fffa118 <__assert>
2ffedfd4:	4824      	ldr	r0, [pc, #144]	; (2ffee068 <psci_do_state_coordination+0xb0>)
2ffedfd6:	230c      	movs	r3, #12
2ffedfd8:	f8df 9094 	ldr.w	r9, [pc, #148]	; 2ffee070 <psci_do_state_coordination+0xb8>
2ffedfdc:	fb03 0307 	mla	r3, r3, r7, r0
2ffedfe0:	f8df a088 	ldr.w	sl, [pc, #136]	; 2ffee06c <psci_do_state_coordination+0xb4>
2ffedfe4:	4680      	mov	r8, r0
2ffedfe6:	685c      	ldr	r4, [r3, #4]
2ffedfe8:	2301      	movs	r3, #1
2ffedfea:	42b3      	cmp	r3, r6
2ffedfec:	d815      	bhi.n	2ffee01a <psci_do_state_coordination+0x62>
2ffedfee:	2f01      	cmp	r7, #1
2ffedff0:	f04f 0001 	mov.w	r0, #1
2ffedff4:	ea4f 1404 	mov.w	r4, r4, lsl #4
2ffedff8:	bf98      	it	ls
2ffedffa:	786b      	ldrbls	r3, [r5, #1]
2ffedffc:	f85a 1004 	ldr.w	r1, [sl, r4]
2ffee000:	4454      	add	r4, sl
2ffee002:	bf98      	it	ls
2ffee004:	f809 3007 	strbls.w	r3, [r9, r7]
2ffee008:	2901      	cmp	r1, #1
2ffee00a:	bf94      	ite	ls
2ffee00c:	4449      	addls	r1, r9
2ffee00e:	2100      	movhi	r1, #0
2ffee010:	6862      	ldr	r2, [r4, #4]
2ffee012:	f003 fbd5 	bl	2fff17c0 <plat_get_target_pwr_state>
2ffee016:	7068      	strb	r0, [r5, #1]
2ffee018:	b9b0      	cbnz	r0, 2ffee048 <psci_do_state_coordination+0x90>
2ffee01a:	782c      	ldrb	r4, [r5, #0]
2ffee01c:	f00a ef10 	blx	2fff8e40 <_cpu_data>
2ffee020:	4f12      	ldr	r7, [pc, #72]	; (2ffee06c <psci_do_state_coordination+0xb4>)
2ffee022:	7304      	strb	r4, [r0, #12]
2ffee024:	f00a ef0c 	blx	2fff8e40 <_cpu_data>
2ffee028:	300c      	adds	r0, #12
2ffee02a:	2101      	movs	r1, #1
2ffee02c:	f00b e8d6 	blx	2fff91dc <flush_dcache_range>
2ffee030:	f00b ebbc 	blx	2fff97ac <plat_my_core_pos>
2ffee034:	230c      	movs	r3, #12
2ffee036:	fb03 8800 	mla	r8, r3, r0, r8
2ffee03a:	2301      	movs	r3, #1
2ffee03c:	f8d8 4004 	ldr.w	r4, [r8, #4]
2ffee040:	429e      	cmp	r6, r3
2ffee042:	d204      	bcs.n	2ffee04e <psci_do_state_coordination+0x96>
2ffee044:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffee048:	68a4      	ldr	r4, [r4, #8]
2ffee04a:	2302      	movs	r3, #2
2ffee04c:	e7cd      	b.n	2ffedfea <psci_do_state_coordination+0x32>
2ffee04e:	786b      	ldrb	r3, [r5, #1]
2ffee050:	2110      	movs	r1, #16
2ffee052:	eb07 1404 	add.w	r4, r7, r4, lsl #4
2ffee056:	4620      	mov	r0, r4
2ffee058:	7323      	strb	r3, [r4, #12]
2ffee05a:	f00b e8c0 	blx	2fff91dc <flush_dcache_range>
2ffee05e:	68a4      	ldr	r4, [r4, #8]
2ffee060:	2302      	movs	r3, #2
2ffee062:	e7ed      	b.n	2ffee040 <psci_do_state_coordination+0x88>
2ffee064:	2fffa6bd 	.word	0x2fffa6bd
2ffee068:	2fffec40 	.word	0x2fffec40
2ffee06c:	2fffec58 	.word	0x2fffec58
2ffee070:	2fffe268 	.word	0x2fffe268

2ffee074 <psci_find_max_off_lvl>:
2ffee074:	7843      	ldrb	r3, [r0, #1]
2ffee076:	2b02      	cmp	r3, #2
2ffee078:	d004      	beq.n	2ffee084 <psci_find_max_off_lvl+0x10>
2ffee07a:	7803      	ldrb	r3, [r0, #0]
2ffee07c:	2b02      	cmp	r3, #2
2ffee07e:	d103      	bne.n	2ffee088 <psci_find_max_off_lvl+0x14>
2ffee080:	2000      	movs	r0, #0
2ffee082:	4770      	bx	lr
2ffee084:	2001      	movs	r0, #1
2ffee086:	4770      	bx	lr
2ffee088:	2002      	movs	r0, #2
2ffee08a:	4770      	bx	lr

2ffee08c <psci_find_target_suspend_lvl>:
2ffee08c:	4603      	mov	r3, r0
2ffee08e:	7840      	ldrb	r0, [r0, #1]
2ffee090:	b910      	cbnz	r0, 2ffee098 <psci_find_target_suspend_lvl+0xc>
2ffee092:	781b      	ldrb	r3, [r3, #0]
2ffee094:	b113      	cbz	r3, 2ffee09c <psci_find_target_suspend_lvl+0x10>
2ffee096:	4770      	bx	lr
2ffee098:	2001      	movs	r0, #1
2ffee09a:	4770      	bx	lr
2ffee09c:	2002      	movs	r0, #2
2ffee09e:	4770      	bx	lr

2ffee0a0 <psci_validate_suspend_req>:
2ffee0a0:	b538      	push	{r3, r4, r5, lr}
2ffee0a2:	4604      	mov	r4, r0
2ffee0a4:	f7ff fff2 	bl	2ffee08c <psci_find_target_suspend_lvl>
2ffee0a8:	2802      	cmp	r0, #2
2ffee0aa:	4602      	mov	r2, r0
2ffee0ac:	d018      	beq.n	2ffee0e0 <psci_validate_suspend_req+0x40>
2ffee0ae:	2500      	movs	r5, #0
2ffee0b0:	2800      	cmp	r0, #0
2ffee0b2:	da0e      	bge.n	2ffee0d2 <psci_validate_suspend_req+0x32>
2ffee0b4:	4620      	mov	r0, r4
2ffee0b6:	f7ff ffdd 	bl	2ffee074 <psci_find_max_off_lvl>
2ffee0ba:	4282      	cmp	r2, r0
2ffee0bc:	bf08      	it	eq
2ffee0be:	2202      	moveq	r2, #2
2ffee0c0:	b9a9      	cbnz	r1, 2ffee0ee <psci_validate_suspend_req+0x4e>
2ffee0c2:	2802      	cmp	r0, #2
2ffee0c4:	d10c      	bne.n	2ffee0e0 <psci_validate_suspend_req+0x40>
2ffee0c6:	2a02      	cmp	r2, #2
2ffee0c8:	bf14      	ite	ne
2ffee0ca:	2000      	movne	r0, #0
2ffee0cc:	f06f 0001 	mvneq.w	r0, #1
2ffee0d0:	bd38      	pop	{r3, r4, r5, pc}
2ffee0d2:	5c23      	ldrb	r3, [r4, r0]
2ffee0d4:	b113      	cbz	r3, 2ffee0dc <psci_validate_suspend_req+0x3c>
2ffee0d6:	2b01      	cmp	r3, #1
2ffee0d8:	d805      	bhi.n	2ffee0e6 <psci_validate_suspend_req+0x46>
2ffee0da:	2301      	movs	r3, #1
2ffee0dc:	429d      	cmp	r5, r3
2ffee0de:	d903      	bls.n	2ffee0e8 <psci_validate_suspend_req+0x48>
2ffee0e0:	f06f 0001 	mvn.w	r0, #1
2ffee0e4:	e7f4      	b.n	2ffee0d0 <psci_validate_suspend_req+0x30>
2ffee0e6:	2302      	movs	r3, #2
2ffee0e8:	3801      	subs	r0, #1
2ffee0ea:	461d      	mov	r5, r3
2ffee0ec:	e7e0      	b.n	2ffee0b0 <psci_validate_suspend_req+0x10>
2ffee0ee:	2000      	movs	r0, #0
2ffee0f0:	e7ee      	b.n	2ffee0d0 <psci_validate_suspend_req+0x30>
	...

2ffee0f4 <psci_acquire_pwr_domain_locks>:
2ffee0f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffee0f6:	460c      	mov	r4, r1
2ffee0f8:	eb01 0580 	add.w	r5, r1, r0, lsl #2
2ffee0fc:	4e07      	ldr	r6, [pc, #28]	; (2ffee11c <psci_acquire_pwr_domain_locks+0x28>)
2ffee0fe:	4f08      	ldr	r7, [pc, #32]	; (2ffee120 <psci_acquire_pwr_domain_locks+0x2c>)
2ffee100:	42ac      	cmp	r4, r5
2ffee102:	d100      	bne.n	2ffee106 <psci_acquire_pwr_domain_locks+0x12>
2ffee104:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffee106:	f854 3b04 	ldr.w	r3, [r4], #4
2ffee10a:	eb07 1303 	add.w	r3, r7, r3, lsl #4
2ffee10e:	7b98      	ldrb	r0, [r3, #14]
2ffee110:	eb06 0040 	add.w	r0, r6, r0, lsl #1
2ffee114:	f000 fd1c 	bl	2ffeeb50 <bakery_lock_get>
2ffee118:	e7f2      	b.n	2ffee100 <psci_acquire_pwr_domain_locks+0xc>
2ffee11a:	bf00      	nop
2ffee11c:	2fffecc0 	.word	0x2fffecc0
2ffee120:	2fffec58 	.word	0x2fffec58

2ffee124 <psci_release_pwr_domain_locks>:
2ffee124:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffee126:	4604      	mov	r4, r0
2ffee128:	4e07      	ldr	r6, [pc, #28]	; (2ffee148 <psci_release_pwr_domain_locks+0x24>)
2ffee12a:	460d      	mov	r5, r1
2ffee12c:	4f07      	ldr	r7, [pc, #28]	; (2ffee14c <psci_release_pwr_domain_locks+0x28>)
2ffee12e:	3c01      	subs	r4, #1
2ffee130:	d200      	bcs.n	2ffee134 <psci_release_pwr_domain_locks+0x10>
2ffee132:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffee134:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
2ffee138:	eb07 1303 	add.w	r3, r7, r3, lsl #4
2ffee13c:	7b98      	ldrb	r0, [r3, #14]
2ffee13e:	eb06 0040 	add.w	r0, r6, r0, lsl #1
2ffee142:	f000 fd85 	bl	2ffeec50 <bakery_lock_release>
2ffee146:	e7f2      	b.n	2ffee12e <psci_release_pwr_domain_locks+0xa>
2ffee148:	2fffecc0 	.word	0x2fffecc0
2ffee14c:	2fffec58 	.word	0x2fffec58

2ffee150 <psci_validate_mpidr>:
2ffee150:	b508      	push	{r3, lr}
2ffee152:	f002 fe87 	bl	2fff0e64 <plat_core_pos_by_mpidr>
2ffee156:	2800      	cmp	r0, #0
2ffee158:	bfb4      	ite	lt
2ffee15a:	f06f 0001 	mvnlt.w	r0, #1
2ffee15e:	2000      	movge	r0, #0
2ffee160:	bd08      	pop	{r3, pc}
	...

2ffee164 <psci_validate_entry_point>:
2ffee164:	4b22      	ldr	r3, [pc, #136]	; (2ffee1f0 <psci_validate_entry_point+0x8c>)
2ffee166:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffee16a:	4605      	mov	r5, r0
2ffee16c:	681b      	ldr	r3, [r3, #0]
2ffee16e:	460c      	mov	r4, r1
2ffee170:	4617      	mov	r7, r2
2ffee172:	6b1b      	ldr	r3, [r3, #48]	; 0x30
2ffee174:	bb93      	cbnz	r3, 2ffee1dc <psci_validate_entry_point+0x78>
2ffee176:	ee11 1f11 	mrc	15, 0, r1, cr1, cr1, {0}
2ffee17a:	f041 0301 	orr.w	r3, r1, #1
2ffee17e:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffee182:	f3bf 8f6f 	isb	sy
2ffee186:	ee11 3f10 	mrc	15, 0, r3, cr1, cr0, {0}
2ffee18a:	f411 7880 	ands.w	r8, r1, #256	; 0x100
2ffee18e:	d12c      	bne.n	2ffee1ea <psci_validate_entry_point+0x86>
2ffee190:	ee01 1f11 	mcr	15, 0, r1, cr1, cr1, {0}
2ffee194:	f3bf 8f6f 	isb	sy
2ffee198:	4a16      	ldr	r2, [pc, #88]	; (2ffee1f4 <psci_validate_entry_point+0x90>)
2ffee19a:	f013 7600 	ands.w	r6, r3, #33554432	; 0x2000000
2ffee19e:	bf14      	ite	ne
2ffee1a0:	2303      	movne	r3, #3
2ffee1a2:	2301      	moveq	r3, #1
2ffee1a4:	e885 001c 	stmia.w	r5, {r2, r3, r4}
2ffee1a8:	f105 0014 	add.w	r0, r5, #20
2ffee1ac:	f04f 0110 	mov.w	r1, #16
2ffee1b0:	bf18      	it	ne
2ffee1b2:	2601      	movne	r6, #1
2ffee1b4:	f00b e8cc 	blx	2fff9350 <zero_normalmem>
2ffee1b8:	0163      	lsls	r3, r4, #5
2ffee1ba:	f1b8 0f00 	cmp.w	r8, #0
2ffee1be:	616f      	str	r7, [r5, #20]
2ffee1c0:	f003 0320 	and.w	r3, r3, #32
2ffee1c4:	bf14      	ite	ne
2ffee1c6:	240a      	movne	r4, #10
2ffee1c8:	2403      	moveq	r4, #3
2ffee1ca:	4323      	orrs	r3, r4
2ffee1cc:	2000      	movs	r0, #0
2ffee1ce:	ea43 2346 	orr.w	r3, r3, r6, lsl #9
2ffee1d2:	f443 73e8 	orr.w	r3, r3, #464	; 0x1d0
2ffee1d6:	60eb      	str	r3, [r5, #12]
2ffee1d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffee1dc:	4608      	mov	r0, r1
2ffee1de:	4798      	blx	r3
2ffee1e0:	2800      	cmp	r0, #0
2ffee1e2:	d0c8      	beq.n	2ffee176 <psci_validate_entry_point+0x12>
2ffee1e4:	f06f 0008 	mvn.w	r0, #8
2ffee1e8:	e7f6      	b.n	2ffee1d8 <psci_validate_entry_point+0x74>
2ffee1ea:	ee91 3f10 	mrc	15, 4, r3, cr1, cr0, {0}
2ffee1ee:	e7cf      	b.n	2ffee190 <psci_validate_entry_point+0x2c>
2ffee1f0:	2fffec78 	.word	0x2fffec78
2ffee1f4:	00240101 	.word	0x00240101

2ffee1f8 <psci_warmboot_entrypoint>:
2ffee1f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffee1fa:	f00b ead8 	blx	2fff97ac <plat_my_core_pos>
2ffee1fe:	4921      	ldr	r1, [pc, #132]	; (2ffee284 <psci_warmboot_entrypoint+0x8c>)
2ffee200:	2300      	movs	r3, #0
2ffee202:	9301      	str	r3, [sp, #4]
2ffee204:	2202      	movs	r2, #2
2ffee206:	4605      	mov	r5, r0
2ffee208:	4668      	mov	r0, sp
2ffee20a:	f00b ffad 	bl	2fffa168 <memcpy>
2ffee20e:	f00a ee18 	blx	2fff8e40 <_cpu_data>
2ffee212:	6843      	ldr	r3, [r0, #4]
2ffee214:	2b01      	cmp	r3, #1
2ffee216:	d106      	bne.n	2ffee226 <psci_warmboot_entrypoint+0x2e>
2ffee218:	481b      	ldr	r0, [pc, #108]	; (2ffee288 <psci_warmboot_entrypoint+0x90>)
2ffee21a:	f004 fd7f 	bl	2fff2d1c <tf_log>
2ffee21e:	f004 fe21 	bl	2fff2e64 <console_flush>
2ffee222:	f00a ef40 	blx	2fff90a4 <do_panic>
2ffee226:	f00a ee0c 	blx	2fff8e40 <_cpu_data>
2ffee22a:	6884      	ldr	r4, [r0, #8]
2ffee22c:	2c02      	cmp	r4, #2
2ffee22e:	d005      	beq.n	2ffee23c <psci_warmboot_entrypoint+0x44>
2ffee230:	2c01      	cmp	r4, #1
2ffee232:	d904      	bls.n	2ffee23e <psci_warmboot_entrypoint+0x46>
2ffee234:	4815      	ldr	r0, [pc, #84]	; (2ffee28c <psci_warmboot_entrypoint+0x94>)
2ffee236:	21c4      	movs	r1, #196	; 0xc4
2ffee238:	f00b ff6e 	bl	2fffa118 <__assert>
2ffee23c:	2401      	movs	r4, #1
2ffee23e:	aa01      	add	r2, sp, #4
2ffee240:	4621      	mov	r1, r4
2ffee242:	4628      	mov	r0, r5
2ffee244:	f7ff fe60 	bl	2ffedf08 <psci_get_parent_pwr_domain_nodes>
2ffee248:	a901      	add	r1, sp, #4
2ffee24a:	4620      	mov	r0, r4
2ffee24c:	f7ff ff52 	bl	2ffee0f4 <psci_acquire_pwr_domain_locks>
2ffee250:	4669      	mov	r1, sp
2ffee252:	4620      	mov	r0, r4
2ffee254:	f7ff fe2e 	bl	2ffedeb4 <psci_get_target_local_pwr_states>
2ffee258:	f00a edf2 	blx	2fff8e40 <_cpu_data>
2ffee25c:	6843      	ldr	r3, [r0, #4]
2ffee25e:	4669      	mov	r1, sp
2ffee260:	4628      	mov	r0, r5
2ffee262:	2b02      	cmp	r3, #2
2ffee264:	d10a      	bne.n	2ffee27c <psci_warmboot_entrypoint+0x84>
2ffee266:	f7ff fca9 	bl	2ffedbbc <psci_cpu_on_finish>
2ffee26a:	4620      	mov	r0, r4
2ffee26c:	f7ff fe62 	bl	2ffedf34 <psci_set_pwr_domains_to_run>
2ffee270:	a901      	add	r1, sp, #4
2ffee272:	4620      	mov	r0, r4
2ffee274:	f7ff ff56 	bl	2ffee124 <psci_release_pwr_domain_locks>
2ffee278:	b003      	add	sp, #12
2ffee27a:	bd30      	pop	{r4, r5, pc}
2ffee27c:	f7ff fd7c 	bl	2ffedd78 <psci_cpu_suspend_finish>
2ffee280:	e7f3      	b.n	2ffee26a <psci_warmboot_entrypoint+0x72>
2ffee282:	bf00      	nop
2ffee284:	2fffa793 	.word	0x2fffa793
2ffee288:	2fffa6d4 	.word	0x2fffa6d4
2ffee28c:	2fffa6bd 	.word	0x2fffa6bd

2ffee290 <psci_spd_migrate_info>:
2ffee290:	b508      	push	{r3, lr}
2ffee292:	4b08      	ldr	r3, [pc, #32]	; (2ffee2b4 <psci_spd_migrate_info+0x24>)
2ffee294:	681b      	ldr	r3, [r3, #0]
2ffee296:	b153      	cbz	r3, 2ffee2ae <psci_spd_migrate_info+0x1e>
2ffee298:	699b      	ldr	r3, [r3, #24]
2ffee29a:	b143      	cbz	r3, 2ffee2ae <psci_spd_migrate_info+0x1e>
2ffee29c:	4798      	blx	r3
2ffee29e:	1c43      	adds	r3, r0, #1
2ffee2a0:	2b03      	cmp	r3, #3
2ffee2a2:	d906      	bls.n	2ffee2b2 <psci_spd_migrate_info+0x22>
2ffee2a4:	4804      	ldr	r0, [pc, #16]	; (2ffee2b8 <psci_spd_migrate_info+0x28>)
2ffee2a6:	f240 316d 	movw	r1, #877	; 0x36d
2ffee2aa:	f00b ff35 	bl	2fffa118 <__assert>
2ffee2ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffee2b2:	bd08      	pop	{r3, pc}
2ffee2b4:	2fffec7c 	.word	0x2fffec7c
2ffee2b8:	2fffa6bd 	.word	0x2fffa6bd

2ffee2bc <psci_print_power_domain_map>:
2ffee2bc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
2ffee2c0:	4c24      	ldr	r4, [pc, #144]	; (2ffee354 <psci_print_power_domain_map+0x98>)
2ffee2c2:	4825      	ldr	r0, [pc, #148]	; (2ffee358 <psci_print_power_domain_map+0x9c>)
2ffee2c4:	f004 fd2a 	bl	2fff2d1c <tf_log>
2ffee2c8:	7b23      	ldrb	r3, [r4, #12]
2ffee2ca:	2b00      	cmp	r3, #0
2ffee2cc:	d03b      	beq.n	2ffee346 <psci_print_power_domain_map+0x8a>
2ffee2ce:	2b02      	cmp	r3, #2
2ffee2d0:	bf34      	ite	cc
2ffee2d2:	2201      	movcc	r2, #1
2ffee2d4:	2202      	movcs	r2, #2
2ffee2d6:	4d21      	ldr	r5, [pc, #132]	; (2ffee35c <psci_print_power_domain_map+0xa0>)
2ffee2d8:	9300      	str	r3, [sp, #0]
2ffee2da:	4821      	ldr	r0, [pc, #132]	; (2ffee360 <psci_print_power_domain_map+0xa4>)
2ffee2dc:	f855 3022 	ldr.w	r3, [r5, r2, lsl #2]
2ffee2e0:	7b61      	ldrb	r1, [r4, #13]
2ffee2e2:	68a2      	ldr	r2, [r4, #8]
2ffee2e4:	f004 fd1a 	bl	2fff2d1c <tf_log>
2ffee2e8:	7f23      	ldrb	r3, [r4, #28]
2ffee2ea:	b373      	cbz	r3, 2ffee34a <psci_print_power_domain_map+0x8e>
2ffee2ec:	2b01      	cmp	r3, #1
2ffee2ee:	bf8c      	ite	hi
2ffee2f0:	2202      	movhi	r2, #2
2ffee2f2:	2201      	movls	r2, #1
2ffee2f4:	9300      	str	r3, [sp, #0]
2ffee2f6:	481a      	ldr	r0, [pc, #104]	; (2ffee360 <psci_print_power_domain_map+0xa4>)
2ffee2f8:	f855 3022 	ldr.w	r3, [r5, r2, lsl #2]
2ffee2fc:	7f61      	ldrb	r1, [r4, #29]
2ffee2fe:	69a2      	ldr	r2, [r4, #24]
2ffee300:	2400      	movs	r4, #0
2ffee302:	4e18      	ldr	r6, [pc, #96]	; (2ffee364 <psci_print_power_domain_map+0xa8>)
2ffee304:	f004 fd0a 	bl	2fff2d1c <tf_log>
2ffee308:	4f17      	ldr	r7, [pc, #92]	; (2ffee368 <psci_print_power_domain_map+0xac>)
2ffee30a:	4620      	mov	r0, r4
2ffee30c:	f00a eda0 	blx	2fff8e50 <_cpu_data_by_index>
2ffee310:	7b03      	ldrb	r3, [r0, #12]
2ffee312:	b11b      	cbz	r3, 2ffee31c <psci_print_power_domain_map+0x60>
2ffee314:	2b01      	cmp	r3, #1
2ffee316:	bf8c      	ite	hi
2ffee318:	2302      	movhi	r3, #2
2ffee31a:	2301      	movls	r3, #1
2ffee31c:	f855 a023 	ldr.w	sl, [r5, r3, lsl #2]
2ffee320:	4620      	mov	r0, r4
2ffee322:	e9d6 8900 	ldrd	r8, r9, [r6]
2ffee326:	360c      	adds	r6, #12
2ffee328:	f00a ed92 	blx	2fff8e50 <_cpu_data_by_index>
2ffee32c:	7b03      	ldrb	r3, [r0, #12]
2ffee32e:	4642      	mov	r2, r8
2ffee330:	4638      	mov	r0, r7
2ffee332:	9302      	str	r3, [sp, #8]
2ffee334:	2300      	movs	r3, #0
2ffee336:	e9cd 9a00 	strd	r9, sl, [sp]
2ffee33a:	f004 fcef 	bl	2fff2d1c <tf_log>
2ffee33e:	b134      	cbz	r4, 2ffee34e <psci_print_power_domain_map+0x92>
2ffee340:	b004      	add	sp, #16
2ffee342:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffee346:	461a      	mov	r2, r3
2ffee348:	e7c5      	b.n	2ffee2d6 <psci_print_power_domain_map+0x1a>
2ffee34a:	461a      	mov	r2, r3
2ffee34c:	e7d2      	b.n	2ffee2f4 <psci_print_power_domain_map+0x38>
2ffee34e:	2401      	movs	r4, #1
2ffee350:	e7db      	b.n	2ffee30a <psci_print_power_domain_map+0x4e>
2ffee352:	bf00      	nop
2ffee354:	2fffec58 	.word	0x2fffec58
2ffee358:	2fffa6f4 	.word	0x2fffa6f4
2ffee35c:	2fffa798 	.word	0x2fffa798
2ffee360:	2fffa70d 	.word	0x2fffa70d
2ffee364:	2fffec40 	.word	0x2fffec40
2ffee368:	2fffa749 	.word	0x2fffa749

2ffee36c <psci_do_pwrdown_sequence>:
2ffee36c:	f00e bd5c 	b.w	2fffce28 <__psci_do_pwrdown_cache_maintenance_from_thumb>

2ffee370 <psci_cpu_on>:
2ffee370:	b570      	push	{r4, r5, r6, lr}
2ffee372:	b08a      	sub	sp, #40	; 0x28
2ffee374:	4604      	mov	r4, r0
2ffee376:	460d      	mov	r5, r1
2ffee378:	4616      	mov	r6, r2
2ffee37a:	f7ff fee9 	bl	2ffee150 <psci_validate_mpidr>
2ffee37e:	b958      	cbnz	r0, 2ffee398 <psci_cpu_on+0x28>
2ffee380:	4632      	mov	r2, r6
2ffee382:	4629      	mov	r1, r5
2ffee384:	a801      	add	r0, sp, #4
2ffee386:	f7ff feed 	bl	2ffee164 <psci_validate_entry_point>
2ffee38a:	b918      	cbnz	r0, 2ffee394 <psci_cpu_on+0x24>
2ffee38c:	a901      	add	r1, sp, #4
2ffee38e:	4620      	mov	r0, r4
2ffee390:	f7ff fb7e 	bl	2ffeda90 <psci_cpu_on_start>
2ffee394:	b00a      	add	sp, #40	; 0x28
2ffee396:	bd70      	pop	{r4, r5, r6, pc}
2ffee398:	f06f 0001 	mvn.w	r0, #1
2ffee39c:	e7fa      	b.n	2ffee394 <psci_cpu_on+0x24>
	...

2ffee3a0 <psci_cpu_suspend>:
2ffee3a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffee3a4:	b08a      	sub	sp, #40	; 0x28
2ffee3a6:	4604      	mov	r4, r0
2ffee3a8:	460f      	mov	r7, r1
2ffee3aa:	492a      	ldr	r1, [pc, #168]	; (2ffee454 <psci_cpu_suspend+0xb4>)
2ffee3ac:	4690      	mov	r8, r2
2ffee3ae:	4668      	mov	r0, sp
2ffee3b0:	2202      	movs	r2, #2
2ffee3b2:	f00b fed9 	bl	2fffa168 <memcpy>
2ffee3b6:	4669      	mov	r1, sp
2ffee3b8:	4620      	mov	r0, r4
2ffee3ba:	f7ff fd23 	bl	2ffede04 <psci_validate_power_state>
2ffee3be:	b158      	cbz	r0, 2ffee3d8 <psci_cpu_suspend+0x38>
2ffee3c0:	3002      	adds	r0, #2
2ffee3c2:	d105      	bne.n	2ffee3d0 <psci_cpu_suspend+0x30>
2ffee3c4:	f06f 0501 	mvn.w	r5, #1
2ffee3c8:	4628      	mov	r0, r5
2ffee3ca:	b00a      	add	sp, #40	; 0x28
2ffee3cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffee3d0:	2143      	movs	r1, #67	; 0x43
2ffee3d2:	4821      	ldr	r0, [pc, #132]	; (2ffee458 <psci_cpu_suspend+0xb8>)
2ffee3d4:	f00b fea0 	bl	2fffa118 <__assert>
2ffee3d8:	f3c4 4400 	ubfx	r4, r4, #16, #1
2ffee3dc:	4668      	mov	r0, sp
2ffee3de:	4621      	mov	r1, r4
2ffee3e0:	f7ff fe5e 	bl	2ffee0a0 <psci_validate_suspend_req>
2ffee3e4:	4605      	mov	r5, r0
2ffee3e6:	b108      	cbz	r0, 2ffee3ec <psci_cpu_suspend+0x4c>
2ffee3e8:	214d      	movs	r1, #77	; 0x4d
2ffee3ea:	e7f2      	b.n	2ffee3d2 <psci_cpu_suspend+0x32>
2ffee3ec:	4668      	mov	r0, sp
2ffee3ee:	f7ff fe4d 	bl	2ffee08c <psci_find_target_suspend_lvl>
2ffee3f2:	2802      	cmp	r0, #2
2ffee3f4:	4606      	mov	r6, r0
2ffee3f6:	d106      	bne.n	2ffee406 <psci_cpu_suspend+0x66>
2ffee3f8:	4818      	ldr	r0, [pc, #96]	; (2ffee45c <psci_cpu_suspend+0xbc>)
2ffee3fa:	f004 fc8f 	bl	2fff2d1c <tf_log>
2ffee3fe:	f004 fd31 	bl	2fff2e64 <console_flush>
2ffee402:	f00a ee50 	blx	2fff90a4 <do_panic>
2ffee406:	ea54 0300 	orrs.w	r3, r4, r0
2ffee40a:	d111      	bne.n	2ffee430 <psci_cpu_suspend+0x90>
2ffee40c:	4e14      	ldr	r6, [pc, #80]	; (2ffee460 <psci_cpu_suspend+0xc0>)
2ffee40e:	6833      	ldr	r3, [r6, #0]
2ffee410:	681b      	ldr	r3, [r3, #0]
2ffee412:	2b00      	cmp	r3, #0
2ffee414:	d0d6      	beq.n	2ffee3c4 <psci_cpu_suspend+0x24>
2ffee416:	f89d 4000 	ldrb.w	r4, [sp]
2ffee41a:	f00a ed12 	blx	2fff8e40 <_cpu_data>
2ffee41e:	6833      	ldr	r3, [r6, #0]
2ffee420:	7304      	strb	r4, [r0, #12]
2ffee422:	4620      	mov	r0, r4
2ffee424:	681b      	ldr	r3, [r3, #0]
2ffee426:	4798      	blx	r3
2ffee428:	f00a ed0a 	blx	2fff8e40 <_cpu_data>
2ffee42c:	7305      	strb	r5, [r0, #12]
2ffee42e:	e7cb      	b.n	2ffee3c8 <psci_cpu_suspend+0x28>
2ffee430:	b934      	cbnz	r4, 2ffee440 <psci_cpu_suspend+0xa0>
2ffee432:	4623      	mov	r3, r4
2ffee434:	466a      	mov	r2, sp
2ffee436:	4631      	mov	r1, r6
2ffee438:	a801      	add	r0, sp, #4
2ffee43a:	f7ff fc0d 	bl	2ffedc58 <psci_cpu_suspend_start>
2ffee43e:	e7c3      	b.n	2ffee3c8 <psci_cpu_suspend+0x28>
2ffee440:	4642      	mov	r2, r8
2ffee442:	4639      	mov	r1, r7
2ffee444:	a801      	add	r0, sp, #4
2ffee446:	f7ff fe8d 	bl	2ffee164 <psci_validate_entry_point>
2ffee44a:	2800      	cmp	r0, #0
2ffee44c:	d0f1      	beq.n	2ffee432 <psci_cpu_suspend+0x92>
2ffee44e:	4605      	mov	r5, r0
2ffee450:	e7ba      	b.n	2ffee3c8 <psci_cpu_suspend+0x28>
2ffee452:	bf00      	nop
2ffee454:	2fffa80c 	.word	0x2fffa80c
2ffee458:	2fffa7a4 	.word	0x2fffa7a4
2ffee45c:	2fffa7b9 	.word	0x2fffa7b9
2ffee460:	2fffec78 	.word	0x2fffec78

2ffee464 <psci_system_suspend>:
2ffee464:	b530      	push	{r4, r5, lr}
2ffee466:	b08b      	sub	sp, #44	; 0x2c
2ffee468:	4604      	mov	r4, r0
2ffee46a:	460d      	mov	r5, r1
2ffee46c:	f7ff fcf2 	bl	2ffede54 <psci_is_last_on_cpu>
2ffee470:	b920      	cbnz	r0, 2ffee47c <psci_system_suspend+0x18>
2ffee472:	f06f 0402 	mvn.w	r4, #2
2ffee476:	4620      	mov	r0, r4
2ffee478:	b00b      	add	sp, #44	; 0x2c
2ffee47a:	bd30      	pop	{r4, r5, pc}
2ffee47c:	4621      	mov	r1, r4
2ffee47e:	462a      	mov	r2, r5
2ffee480:	a801      	add	r0, sp, #4
2ffee482:	f7ff fe6f 	bl	2ffee164 <psci_validate_entry_point>
2ffee486:	4604      	mov	r4, r0
2ffee488:	2800      	cmp	r0, #0
2ffee48a:	d1f4      	bne.n	2ffee476 <psci_system_suspend+0x12>
2ffee48c:	4668      	mov	r0, sp
2ffee48e:	f7ff fcd1 	bl	2ffede34 <psci_query_sys_suspend_pwrstate>
2ffee492:	4668      	mov	r0, sp
2ffee494:	f7ff fdfa 	bl	2ffee08c <psci_find_target_suspend_lvl>
2ffee498:	2800      	cmp	r0, #0
2ffee49a:	d0ea      	beq.n	2ffee472 <psci_system_suspend+0xe>
2ffee49c:	2101      	movs	r1, #1
2ffee49e:	4668      	mov	r0, sp
2ffee4a0:	f7ff fdfe 	bl	2ffee0a0 <psci_validate_suspend_req>
2ffee4a4:	4604      	mov	r4, r0
2ffee4a6:	b118      	cbz	r0, 2ffee4b0 <psci_system_suspend+0x4c>
2ffee4a8:	21b4      	movs	r1, #180	; 0xb4
2ffee4aa:	4808      	ldr	r0, [pc, #32]	; (2ffee4cc <psci_system_suspend+0x68>)
2ffee4ac:	f00b fe34 	bl	2fffa118 <__assert>
2ffee4b0:	f89d 3001 	ldrb.w	r3, [sp, #1]
2ffee4b4:	2b02      	cmp	r3, #2
2ffee4b6:	d001      	beq.n	2ffee4bc <psci_system_suspend+0x58>
2ffee4b8:	21b6      	movs	r1, #182	; 0xb6
2ffee4ba:	e7f6      	b.n	2ffee4aa <psci_system_suspend+0x46>
2ffee4bc:	2301      	movs	r3, #1
2ffee4be:	466a      	mov	r2, sp
2ffee4c0:	4619      	mov	r1, r3
2ffee4c2:	a801      	add	r0, sp, #4
2ffee4c4:	f7ff fbc8 	bl	2ffedc58 <psci_cpu_suspend_start>
2ffee4c8:	e7d5      	b.n	2ffee476 <psci_system_suspend+0x12>
2ffee4ca:	bf00      	nop
2ffee4cc:	2fffa7a4 	.word	0x2fffa7a4

2ffee4d0 <psci_cpu_off>:
2ffee4d0:	b508      	push	{r3, lr}
2ffee4d2:	2001      	movs	r0, #1
2ffee4d4:	f7ff fa80 	bl	2ffed9d8 <psci_do_cpu_off>
2ffee4d8:	1cc3      	adds	r3, r0, #3
2ffee4da:	d003      	beq.n	2ffee4e4 <psci_cpu_off+0x14>
2ffee4dc:	4802      	ldr	r0, [pc, #8]	; (2ffee4e8 <psci_cpu_off+0x18>)
2ffee4de:	21d6      	movs	r1, #214	; 0xd6
2ffee4e0:	f00b fe1a 	bl	2fffa118 <__assert>
2ffee4e4:	bd08      	pop	{r3, pc}
2ffee4e6:	bf00      	nop
2ffee4e8:	2fffa7a4 	.word	0x2fffa7a4

2ffee4ec <psci_affinity_info>:
2ffee4ec:	b510      	push	{r4, lr}
2ffee4ee:	b111      	cbz	r1, 2ffee4f6 <psci_affinity_info+0xa>
2ffee4f0:	f06f 0001 	mvn.w	r0, #1
2ffee4f4:	bd10      	pop	{r4, pc}
2ffee4f6:	f002 fcb5 	bl	2fff0e64 <plat_core_pos_by_mpidr>
2ffee4fa:	1c43      	adds	r3, r0, #1
2ffee4fc:	4604      	mov	r4, r0
2ffee4fe:	d0f7      	beq.n	2ffee4f0 <psci_affinity_info+0x4>
2ffee500:	f00a eca6 	blx	2fff8e50 <_cpu_data_by_index>
2ffee504:	2104      	movs	r1, #4
2ffee506:	4408      	add	r0, r1
2ffee508:	f00a ee68 	blx	2fff91dc <flush_dcache_range>
2ffee50c:	4620      	mov	r0, r4
2ffee50e:	f00a eca0 	blx	2fff8e50 <_cpu_data_by_index>
2ffee512:	6840      	ldr	r0, [r0, #4]
2ffee514:	e7ee      	b.n	2ffee4f4 <psci_affinity_info+0x8>
	...

2ffee518 <psci_migrate>:
2ffee518:	b513      	push	{r0, r1, r4, lr}
2ffee51a:	4604      	mov	r4, r0
2ffee51c:	a801      	add	r0, sp, #4
2ffee51e:	f7ff feb7 	bl	2ffee290 <psci_spd_migrate_info>
2ffee522:	b138      	cbz	r0, 2ffee534 <psci_migrate+0x1c>
2ffee524:	2801      	cmp	r0, #1
2ffee526:	bf0c      	ite	eq
2ffee528:	f06f 0002 	mvneq.w	r0, #2
2ffee52c:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
2ffee530:	b002      	add	sp, #8
2ffee532:	bd10      	pop	{r4, pc}
2ffee534:	ee10 3fb0 	mrc	15, 0, r3, cr0, cr0, {5}
2ffee538:	9a01      	ldr	r2, [sp, #4]
2ffee53a:	429a      	cmp	r2, r3
2ffee53c:	d118      	bne.n	2ffee570 <psci_migrate+0x58>
2ffee53e:	4620      	mov	r0, r4
2ffee540:	f7ff fe06 	bl	2ffee150 <psci_validate_mpidr>
2ffee544:	b9b8      	cbnz	r0, 2ffee576 <psci_migrate+0x5e>
2ffee546:	4b0d      	ldr	r3, [pc, #52]	; (2ffee57c <psci_migrate+0x64>)
2ffee548:	681b      	ldr	r3, [r3, #0]
2ffee54a:	b10b      	cbz	r3, 2ffee550 <psci_migrate+0x38>
2ffee54c:	695b      	ldr	r3, [r3, #20]
2ffee54e:	b923      	cbnz	r3, 2ffee55a <psci_migrate+0x42>
2ffee550:	f44f 718a 	mov.w	r1, #276	; 0x114
2ffee554:	480a      	ldr	r0, [pc, #40]	; (2ffee580 <psci_migrate+0x68>)
2ffee556:	f00b fddf 	bl	2fffa118 <__assert>
2ffee55a:	ee10 0fb0 	mrc	15, 0, r0, cr0, cr0, {5}
2ffee55e:	4621      	mov	r1, r4
2ffee560:	4798      	blx	r3
2ffee562:	2800      	cmp	r0, #0
2ffee564:	d0e4      	beq.n	2ffee530 <psci_migrate+0x18>
2ffee566:	1d83      	adds	r3, r0, #6
2ffee568:	d0e2      	beq.n	2ffee530 <psci_migrate+0x18>
2ffee56a:	f240 1117 	movw	r1, #279	; 0x117
2ffee56e:	e7f1      	b.n	2ffee554 <psci_migrate+0x3c>
2ffee570:	f06f 0006 	mvn.w	r0, #6
2ffee574:	e7dc      	b.n	2ffee530 <psci_migrate+0x18>
2ffee576:	f06f 0001 	mvn.w	r0, #1
2ffee57a:	e7d9      	b.n	2ffee530 <psci_migrate+0x18>
2ffee57c:	2fffec7c 	.word	0x2fffec7c
2ffee580:	2fffa7a4 	.word	0x2fffa7a4

2ffee584 <psci_migrate_info_type>:
2ffee584:	b507      	push	{r0, r1, r2, lr}
2ffee586:	a801      	add	r0, sp, #4
2ffee588:	f7ff fe82 	bl	2ffee290 <psci_spd_migrate_info>
2ffee58c:	b003      	add	sp, #12
2ffee58e:	f85d fb04 	ldr.w	pc, [sp], #4

2ffee592 <psci_migrate_info_up_cpu>:
2ffee592:	b507      	push	{r0, r1, r2, lr}
2ffee594:	a801      	add	r0, sp, #4
2ffee596:	f7ff fe7b 	bl	2ffee290 <psci_spd_migrate_info>
2ffee59a:	2801      	cmp	r0, #1
2ffee59c:	bf8c      	ite	hi
2ffee59e:	f06f 0001 	mvnhi.w	r0, #1
2ffee5a2:	9801      	ldrls	r0, [sp, #4]
2ffee5a4:	b003      	add	sp, #12
2ffee5a6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

2ffee5ac <psci_node_hw_state>:
2ffee5ac:	b538      	push	{r3, r4, r5, lr}
2ffee5ae:	4605      	mov	r5, r0
2ffee5b0:	460c      	mov	r4, r1
2ffee5b2:	f7ff fdcd 	bl	2ffee150 <psci_validate_mpidr>
2ffee5b6:	b9a8      	cbnz	r0, 2ffee5e4 <psci_node_hw_state+0x38>
2ffee5b8:	2c01      	cmp	r4, #1
2ffee5ba:	d813      	bhi.n	2ffee5e4 <psci_node_hw_state+0x38>
2ffee5bc:	4b0b      	ldr	r3, [pc, #44]	; (2ffee5ec <psci_node_hw_state+0x40>)
2ffee5be:	681b      	ldr	r3, [r3, #0]
2ffee5c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
2ffee5c2:	b923      	cbnz	r3, 2ffee5ce <psci_node_hw_state+0x22>
2ffee5c4:	f240 1145 	movw	r1, #325	; 0x145
2ffee5c8:	4809      	ldr	r0, [pc, #36]	; (2ffee5f0 <psci_node_hw_state+0x44>)
2ffee5ca:	f00b fda5 	bl	2fffa118 <__assert>
2ffee5ce:	4621      	mov	r1, r4
2ffee5d0:	4628      	mov	r0, r5
2ffee5d2:	4798      	blx	r3
2ffee5d4:	1c43      	adds	r3, r0, #1
2ffee5d6:	2b03      	cmp	r3, #3
2ffee5d8:	d906      	bls.n	2ffee5e8 <psci_node_hw_state+0x3c>
2ffee5da:	3002      	adds	r0, #2
2ffee5dc:	d002      	beq.n	2ffee5e4 <psci_node_hw_state+0x38>
2ffee5de:	f240 1147 	movw	r1, #327	; 0x147
2ffee5e2:	e7f1      	b.n	2ffee5c8 <psci_node_hw_state+0x1c>
2ffee5e4:	f06f 0001 	mvn.w	r0, #1
2ffee5e8:	bd38      	pop	{r3, r4, r5, pc}
2ffee5ea:	bf00      	nop
2ffee5ec:	2fffec78 	.word	0x2fffec78
2ffee5f0:	2fffa7a4 	.word	0x2fffa7a4

2ffee5f4 <psci_features>:
2ffee5f4:	4b16      	ldr	r3, [pc, #88]	; (2ffee650 <psci_features+0x5c>)
2ffee5f6:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
2ffee5fa:	b510      	push	{r4, lr}
2ffee5fc:	681b      	ldr	r3, [r3, #0]
2ffee5fe:	d021      	beq.n	2ffee644 <psci_features+0x50>
2ffee600:	0042      	lsls	r2, r0, #1
2ffee602:	bf42      	ittt	mi
2ffee604:	f023 437f 	bicmi.w	r3, r3, #4278190080	; 0xff000000
2ffee608:	f423 0368 	bicmi.w	r3, r3, #15204352	; 0xe80000
2ffee60c:	f423 431f 	bicmi.w	r3, r3, #40704	; 0x9f00
2ffee610:	f3c0 6205 	ubfx	r2, r0, #24, #6
2ffee614:	bf48      	it	mi
2ffee616:	f023 0345 	bicmi.w	r3, r3, #69	; 0x45
2ffee61a:	2a04      	cmp	r2, #4
2ffee61c:	d114      	bne.n	2ffee648 <psci_features+0x54>
2ffee61e:	0fc2      	lsrs	r2, r0, #31
2ffee620:	f3c0 4107 	ubfx	r1, r0, #16, #8
2ffee624:	d010      	beq.n	2ffee648 <psci_features+0x54>
2ffee626:	f64f 74e0 	movw	r4, #65504	; 0xffe0
2ffee62a:	4004      	ands	r4, r0
2ffee62c:	4321      	orrs	r1, r4
2ffee62e:	d10b      	bne.n	2ffee648 <psci_features+0x54>
2ffee630:	f000 001f 	and.w	r0, r0, #31
2ffee634:	fa02 f000 	lsl.w	r0, r2, r0
2ffee638:	4218      	tst	r0, r3
2ffee63a:	bf0c      	ite	eq
2ffee63c:	f04f 30ff 	moveq.w	r0, #4294967295	; 0xffffffff
2ffee640:	2000      	movne	r0, #0
2ffee642:	bd10      	pop	{r4, pc}
2ffee644:	2000      	movs	r0, #0
2ffee646:	e7fc      	b.n	2ffee642 <psci_features+0x4e>
2ffee648:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffee64c:	e7f9      	b.n	2ffee642 <psci_features+0x4e>
2ffee64e:	bf00      	nop
2ffee650:	2fffec80 	.word	0x2fffec80

2ffee654 <psci_smc_handler>:
2ffee654:	b538      	push	{r3, r4, r5, lr}
2ffee656:	4604      	mov	r4, r0
2ffee658:	4608      	mov	r0, r1
2ffee65a:	4611      	mov	r1, r2
2ffee65c:	461a      	mov	r2, r3
2ffee65e:	9b07      	ldr	r3, [sp, #28]
2ffee660:	07dd      	lsls	r5, r3, #31
2ffee662:	d556      	bpl.n	2ffee712 <psci_smc_handler+0xbe>
2ffee664:	f004 051f 	and.w	r5, r4, #31
2ffee668:	2301      	movs	r3, #1
2ffee66a:	40ab      	lsls	r3, r5
2ffee66c:	4d44      	ldr	r5, [pc, #272]	; (2ffee780 <psci_smc_handler+0x12c>)
2ffee66e:	682d      	ldr	r5, [r5, #0]
2ffee670:	422b      	tst	r3, r5
2ffee672:	d04e      	beq.n	2ffee712 <psci_smc_handler+0xbe>
2ffee674:	0063      	lsls	r3, r4, #1
2ffee676:	d44f      	bmi.n	2ffee718 <psci_smc_handler+0xc4>
2ffee678:	f104 43f8 	add.w	r3, r4, #2080374784	; 0x7c000000
2ffee67c:	2b14      	cmp	r3, #20
2ffee67e:	d844      	bhi.n	2ffee70a <psci_smc_handler+0xb6>
2ffee680:	e8df f003 	tbb	[pc, r3]
2ffee684:	130b0f7a 	.word	0x130b0f7a
2ffee688:	231f1b17 	.word	0x231f1b17
2ffee68c:	4333312f 	.word	0x4333312f
2ffee690:	432b2743 	.word	0x432b2743
2ffee694:	373f4343 	.word	0x373f4343
2ffee698:	3b          	.byte	0x3b
2ffee699:	00          	.byte	0x00
2ffee69a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee69e:	f7ff bf17 	b.w	2ffee4d0 <psci_cpu_off>
2ffee6a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6a6:	f7ff be7b 	b.w	2ffee3a0 <psci_cpu_suspend>
2ffee6aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6ae:	f7ff be5f 	b.w	2ffee370 <psci_cpu_on>
2ffee6b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6b6:	f7ff bf19 	b.w	2ffee4ec <psci_affinity_info>
2ffee6ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6be:	f7ff bf2b 	b.w	2ffee518 <psci_migrate>
2ffee6c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6c6:	f7ff bf5d 	b.w	2ffee584 <psci_migrate_info_type>
2ffee6ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6ce:	f7ff bf60 	b.w	2ffee592 <psci_migrate_info_up_cpu>
2ffee6d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6d6:	f7ff bf69 	b.w	2ffee5ac <psci_node_hw_state>
2ffee6da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6de:	f7ff bec1 	b.w	2ffee464 <psci_system_suspend>
2ffee6e2:	f000 f985 	bl	2ffee9f0 <psci_system_off>
2ffee6e6:	f000 f99f 	bl	2ffeea28 <psci_system_reset>
2ffee6ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6ee:	f7ff bf81 	b.w	2ffee5f4 <psci_features>
2ffee6f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6f6:	f000 b9eb 	b.w	2ffeead0 <psci_mem_protect>
2ffee6fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee6fe:	f000 ba0d 	b.w	2ffeeb1c <psci_mem_chk_range>
2ffee702:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2ffee706:	f000 b9ab 	b.w	2ffeea60 <psci_system_reset2>
2ffee70a:	481e      	ldr	r0, [pc, #120]	; (2ffee784 <psci_smc_handler+0x130>)
2ffee70c:	4621      	mov	r1, r4
2ffee70e:	f004 fb05 	bl	2fff2d1c <tf_log>
2ffee712:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffee716:	bd38      	pop	{r3, r4, r5, pc}
2ffee718:	f104 5570 	add.w	r5, r4, #1006632960	; 0x3c000000
2ffee71c:	3d01      	subs	r5, #1
2ffee71e:	2d13      	cmp	r5, #19
2ffee720:	d8f3      	bhi.n	2ffee70a <psci_smc_handler+0xb6>
2ffee722:	a301      	add	r3, pc, #4	; (adr r3, 2ffee728 <psci_smc_handler+0xd4>)
2ffee724:	f853 f025 	ldr.w	pc, [r3, r5, lsl #2]
2ffee728:	2ffee6a3 	.word	0x2ffee6a3
2ffee72c:	2ffee70b 	.word	0x2ffee70b
2ffee730:	2ffee6ab 	.word	0x2ffee6ab
2ffee734:	2ffee6b3 	.word	0x2ffee6b3
2ffee738:	2ffee6bb 	.word	0x2ffee6bb
2ffee73c:	2ffee70b 	.word	0x2ffee70b
2ffee740:	2ffee6cb 	.word	0x2ffee6cb
2ffee744:	2ffee70b 	.word	0x2ffee70b
2ffee748:	2ffee70b 	.word	0x2ffee70b
2ffee74c:	2ffee70b 	.word	0x2ffee70b
2ffee750:	2ffee70b 	.word	0x2ffee70b
2ffee754:	2ffee70b 	.word	0x2ffee70b
2ffee758:	2ffee6d3 	.word	0x2ffee6d3
2ffee75c:	2ffee6db 	.word	0x2ffee6db
2ffee760:	2ffee70b 	.word	0x2ffee70b
2ffee764:	2ffee70b 	.word	0x2ffee70b
2ffee768:	2ffee70b 	.word	0x2ffee70b
2ffee76c:	2ffee703 	.word	0x2ffee703
2ffee770:	2ffee70b 	.word	0x2ffee70b
2ffee774:	2ffee6fb 	.word	0x2ffee6fb
2ffee778:	f04f 1001 	mov.w	r0, #65537	; 0x10001
2ffee77c:	e7cb      	b.n	2ffee716 <psci_smc_handler+0xc2>
2ffee77e:	bf00      	nop
2ffee780:	2fffec80 	.word	0x2fffec80
2ffee784:	2fffa7ec 	.word	0x2fffa7ec

2ffee788 <psci_arch_setup>:
2ffee788:	b508      	push	{r3, lr}
2ffee78a:	f004 fc7e 	bl	2fff308a <plat_get_syscnt_freq2>
2ffee78e:	ee0e 0f10 	mcr	15, 0, r0, cr14, cr0, {0}
2ffee792:	f00a eba8 	blx	2fff8ee4 <init_cpu_ops>
2ffee796:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffee79a:	f00e bb49 	b.w	2fffce30 <__print_errata_status_from_thumb>
	...

2ffee7a0 <psci_setup>:
2ffee7a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffee7a4:	4605      	mov	r5, r0
2ffee7a6:	b087      	sub	sp, #28
2ffee7a8:	b150      	cbz	r0, 2ffee7c0 <psci_setup+0x20>
2ffee7aa:	8803      	ldrh	r3, [r0, #0]
2ffee7ac:	f5b3 7f83 	cmp.w	r3, #262	; 0x106
2ffee7b0:	d106      	bne.n	2ffee7c0 <psci_setup+0x20>
2ffee7b2:	8843      	ldrh	r3, [r0, #2]
2ffee7b4:	2b0c      	cmp	r3, #12
2ffee7b6:	d103      	bne.n	2ffee7c0 <psci_setup+0x20>
2ffee7b8:	6844      	ldr	r4, [r0, #4]
2ffee7ba:	b90c      	cbnz	r4, 2ffee7c0 <psci_setup+0x20>
2ffee7bc:	6883      	ldr	r3, [r0, #8]
2ffee7be:	b91b      	cbnz	r3, 2ffee7c8 <psci_setup+0x28>
2ffee7c0:	21c1      	movs	r1, #193	; 0xc1
2ffee7c2:	487c      	ldr	r0, [pc, #496]	; (2ffee9b4 <psci_setup+0x214>)
2ffee7c4:	f00b fca8 	bl	2fffa118 <__assert>
2ffee7c8:	2701      	movs	r7, #1
2ffee7ca:	f7ff ffdd 	bl	2ffee788 <psci_arch_setup>
2ffee7ce:	46a2      	mov	sl, r4
2ffee7d0:	f002 fb44 	bl	2fff0e5c <plat_get_power_domain_tree_desc>
2ffee7d4:	9002      	str	r0, [sp, #8]
2ffee7d6:	4622      	mov	r2, r4
2ffee7d8:	2302      	movs	r3, #2
2ffee7da:	46bb      	mov	fp, r7
2ffee7dc:	46d0      	mov	r8, sl
2ffee7de:	44ba      	add	sl, r7
2ffee7e0:	2700      	movs	r7, #0
2ffee7e2:	463e      	mov	r6, r7
2ffee7e4:	e01a      	b.n	2ffee81c <psci_setup+0x7c>
2ffee7e6:	f1b8 0f02 	cmp.w	r8, #2
2ffee7ea:	dd01      	ble.n	2ffee7f0 <psci_setup+0x50>
2ffee7ec:	218b      	movs	r1, #139	; 0x8b
2ffee7ee:	e7e8      	b.n	2ffee7c2 <psci_setup+0x22>
2ffee7f0:	9a02      	ldr	r2, [sp, #8]
2ffee7f2:	46b1      	mov	r9, r6
2ffee7f4:	f812 2008 	ldrb.w	r2, [r2, r8]
2ffee7f8:	9201      	str	r2, [sp, #4]
2ffee7fa:	9a01      	ldr	r2, [sp, #4]
2ffee7fc:	1991      	adds	r1, r2, r6
2ffee7fe:	bf2c      	ite	cs
2ffee800:	2201      	movcs	r2, #1
2ffee802:	2200      	movcc	r2, #0
2ffee804:	4589      	cmp	r9, r1
2ffee806:	d349      	bcc.n	2ffee89c <psci_setup+0xfc>
2ffee808:	9901      	ldr	r1, [sp, #4]
2ffee80a:	2a00      	cmp	r2, #0
2ffee80c:	9a01      	ldr	r2, [sp, #4]
2ffee80e:	bf18      	it	ne
2ffee810:	2200      	movne	r2, #0
2ffee812:	440f      	add	r7, r1
2ffee814:	f108 0801 	add.w	r8, r8, #1
2ffee818:	4432      	add	r2, r6
2ffee81a:	4616      	mov	r6, r2
2ffee81c:	45c2      	cmp	sl, r8
2ffee81e:	d1e2      	bne.n	2ffee7e6 <psci_setup+0x46>
2ffee820:	2b01      	cmp	r3, #1
2ffee822:	f04f 0b00 	mov.w	fp, #0
2ffee826:	d171      	bne.n	2ffee90c <psci_setup+0x16c>
2ffee828:	2a02      	cmp	r2, #2
2ffee82a:	d171      	bne.n	2ffee910 <psci_setup+0x170>
2ffee82c:	4c62      	ldr	r4, [pc, #392]	; (2ffee9b8 <psci_setup+0x218>)
2ffee82e:	4619      	mov	r1, r3
2ffee830:	aa05      	add	r2, sp, #20
2ffee832:	4658      	mov	r0, fp
2ffee834:	f7ff fb68 	bl	2ffedf08 <psci_get_parent_pwr_domain_nodes>
2ffee838:	9e05      	ldr	r6, [sp, #20]
2ffee83a:	0133      	lsls	r3, r6, #4
2ffee83c:	b10e      	cbz	r6, 2ffee842 <psci_setup+0xa2>
2ffee83e:	f844 b003 	str.w	fp, [r4, r3]
2ffee842:	4423      	add	r3, r4
2ffee844:	2101      	movs	r1, #1
2ffee846:	4608      	mov	r0, r1
2ffee848:	685a      	ldr	r2, [r3, #4]
2ffee84a:	3201      	adds	r2, #1
2ffee84c:	605a      	str	r2, [r3, #4]
2ffee84e:	aa05      	add	r2, sp, #20
2ffee850:	f7ff fb5a 	bl	2ffedf08 <psci_get_parent_pwr_domain_nodes>
2ffee854:	9b05      	ldr	r3, [sp, #20]
2ffee856:	429e      	cmp	r6, r3
2ffee858:	ea4f 1303 	mov.w	r3, r3, lsl #4
2ffee85c:	bf1c      	itt	ne
2ffee85e:	2201      	movne	r2, #1
2ffee860:	50e2      	strne	r2, [r4, r3]
2ffee862:	441c      	add	r4, r3
2ffee864:	6863      	ldr	r3, [r4, #4]
2ffee866:	3301      	adds	r3, #1
2ffee868:	6063      	str	r3, [r4, #4]
2ffee86a:	ee10 4fb0 	mrc	15, 0, r4, cr0, cr0, {5}
2ffee86e:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
2ffee872:	f00a ef9c 	blx	2fff97ac <plat_my_core_pos>
2ffee876:	4a51      	ldr	r2, [pc, #324]	; (2ffee9bc <psci_setup+0x21c>)
2ffee878:	230c      	movs	r3, #12
2ffee87a:	4343      	muls	r3, r0
2ffee87c:	50d4      	str	r4, [r2, r3]
2ffee87e:	4c50      	ldr	r4, [pc, #320]	; (2ffee9c0 <psci_setup+0x220>)
2ffee880:	f7ff fb10 	bl	2ffedea4 <psci_init_req_local_pwr_states>
2ffee884:	2001      	movs	r0, #1
2ffee886:	f7ff fb55 	bl	2ffedf34 <psci_set_pwr_domains_to_run>
2ffee88a:	68a8      	ldr	r0, [r5, #8]
2ffee88c:	4621      	mov	r1, r4
2ffee88e:	f001 fea5 	bl	2fff05dc <plat_setup_psci_ops>
2ffee892:	6823      	ldr	r3, [r4, #0]
2ffee894:	2b00      	cmp	r3, #0
2ffee896:	d13d      	bne.n	2ffee914 <psci_setup+0x174>
2ffee898:	21dd      	movs	r1, #221	; 0xdd
2ffee89a:	e792      	b.n	2ffee7c2 <psci_setup+0x22>
2ffee89c:	f108 30ff 	add.w	r0, r8, #4294967295	; 0xffffffff
2ffee8a0:	fa5f f489 	uxtb.w	r4, r9
2ffee8a4:	f1bb 0f00 	cmp.w	fp, #0
2ffee8a8:	d00c      	beq.n	2ffee8c4 <psci_setup+0x124>
2ffee8aa:	4a43      	ldr	r2, [pc, #268]	; (2ffee9b8 <psci_setup+0x218>)
2ffee8ac:	eb02 1404 	add.w	r4, r2, r4, lsl #4
2ffee8b0:	2201      	movs	r2, #1
2ffee8b2:	7362      	strb	r2, [r4, #13]
2ffee8b4:	2202      	movs	r2, #2
2ffee8b6:	f884 900e 	strb.w	r9, [r4, #14]
2ffee8ba:	60a0      	str	r0, [r4, #8]
2ffee8bc:	7322      	strb	r2, [r4, #12]
2ffee8be:	f109 0901 	add.w	r9, r9, #1
2ffee8c2:	e79a      	b.n	2ffee7fa <psci_setup+0x5a>
2ffee8c4:	9303      	str	r3, [sp, #12]
2ffee8c6:	210c      	movs	r1, #12
2ffee8c8:	fb01 f204 	mul.w	r2, r1, r4
2ffee8cc:	4b3b      	ldr	r3, [pc, #236]	; (2ffee9bc <psci_setup+0x21c>)
2ffee8ce:	eb03 0c02 	add.w	ip, r3, r2
2ffee8d2:	f8cc 0004 	str.w	r0, [ip, #4]
2ffee8d6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffee8da:	5098      	str	r0, [r3, r2]
2ffee8dc:	4620      	mov	r0, r4
2ffee8de:	f00a eab8 	blx	2fff8e50 <_cpu_data_by_index>
2ffee8e2:	f04f 0c02 	mov.w	ip, #2
2ffee8e6:	2201      	movs	r2, #1
2ffee8e8:	6042      	str	r2, [r0, #4]
2ffee8ea:	210c      	movs	r1, #12
2ffee8ec:	f8c0 c008 	str.w	ip, [r0, #8]
2ffee8f0:	3004      	adds	r0, #4
2ffee8f2:	f880 c008 	strb.w	ip, [r0, #8]
2ffee8f6:	f00a ec72 	blx	2fff91dc <flush_dcache_range>
2ffee8fa:	4b32      	ldr	r3, [pc, #200]	; (2ffee9c4 <psci_setup+0x224>)
2ffee8fc:	2201      	movs	r2, #1
2ffee8fe:	4620      	mov	r0, r4
2ffee900:	eb03 1144 	add.w	r1, r3, r4, lsl #5
2ffee904:	f7fe fddc 	bl	2ffed4c0 <cm_set_context_by_index>
2ffee908:	9b03      	ldr	r3, [sp, #12]
2ffee90a:	e7d8      	b.n	2ffee8be <psci_setup+0x11e>
2ffee90c:	2301      	movs	r3, #1
2ffee90e:	e765      	b.n	2ffee7dc <psci_setup+0x3c>
2ffee910:	21a3      	movs	r1, #163	; 0xa3
2ffee912:	e756      	b.n	2ffee7c2 <psci_setup+0x22>
2ffee914:	2104      	movs	r1, #4
2ffee916:	4620      	mov	r0, r4
2ffee918:	f00a ec60 	blx	2fff91dc <flush_dcache_range>
2ffee91c:	4b2a      	ldr	r3, [pc, #168]	; (2ffee9c8 <psci_setup+0x228>)
2ffee91e:	f240 4211 	movw	r2, #1041	; 0x411
2ffee922:	601a      	str	r2, [r3, #0]
2ffee924:	6822      	ldr	r2, [r4, #0]
2ffee926:	6891      	ldr	r1, [r2, #8]
2ffee928:	b111      	cbz	r1, 2ffee930 <psci_setup+0x190>
2ffee92a:	f240 4115 	movw	r1, #1045	; 0x415
2ffee92e:	6019      	str	r1, [r3, #0]
2ffee930:	6851      	ldr	r1, [r2, #4]
2ffee932:	b129      	cbz	r1, 2ffee940 <psci_setup+0x1a0>
2ffee934:	6951      	ldr	r1, [r2, #20]
2ffee936:	b119      	cbz	r1, 2ffee940 <psci_setup+0x1a0>
2ffee938:	6819      	ldr	r1, [r3, #0]
2ffee93a:	f041 0108 	orr.w	r1, r1, #8
2ffee93e:	6019      	str	r1, [r3, #0]
2ffee940:	6911      	ldr	r1, [r2, #16]
2ffee942:	b161      	cbz	r1, 2ffee95e <psci_setup+0x1be>
2ffee944:	69d1      	ldr	r1, [r2, #28]
2ffee946:	b151      	cbz	r1, 2ffee95e <psci_setup+0x1be>
2ffee948:	6819      	ldr	r1, [r3, #0]
2ffee94a:	f041 0002 	orr.w	r0, r1, #2
2ffee94e:	6018      	str	r0, [r3, #0]
2ffee950:	6b50      	ldr	r0, [r2, #52]	; 0x34
2ffee952:	b120      	cbz	r0, 2ffee95e <psci_setup+0x1be>
2ffee954:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
2ffee958:	f041 0102 	orr.w	r1, r1, #2
2ffee95c:	6019      	str	r1, [r3, #0]
2ffee95e:	6a51      	ldr	r1, [r2, #36]	; 0x24
2ffee960:	b119      	cbz	r1, 2ffee96a <psci_setup+0x1ca>
2ffee962:	6819      	ldr	r1, [r3, #0]
2ffee964:	f441 7180 	orr.w	r1, r1, #256	; 0x100
2ffee968:	6019      	str	r1, [r3, #0]
2ffee96a:	6a91      	ldr	r1, [r2, #40]	; 0x28
2ffee96c:	b119      	cbz	r1, 2ffee976 <psci_setup+0x1d6>
2ffee96e:	6819      	ldr	r1, [r3, #0]
2ffee970:	f441 7100 	orr.w	r1, r1, #512	; 0x200
2ffee974:	6019      	str	r1, [r3, #0]
2ffee976:	6c11      	ldr	r1, [r2, #64]	; 0x40
2ffee978:	b119      	cbz	r1, 2ffee982 <psci_setup+0x1e2>
2ffee97a:	6819      	ldr	r1, [r3, #0]
2ffee97c:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
2ffee980:	6019      	str	r1, [r3, #0]
2ffee982:	6c91      	ldr	r1, [r2, #72]	; 0x48
2ffee984:	b129      	cbz	r1, 2ffee992 <psci_setup+0x1f2>
2ffee986:	6cd1      	ldr	r1, [r2, #76]	; 0x4c
2ffee988:	b119      	cbz	r1, 2ffee992 <psci_setup+0x1f2>
2ffee98a:	6819      	ldr	r1, [r3, #0]
2ffee98c:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
2ffee990:	6019      	str	r1, [r3, #0]
2ffee992:	6c51      	ldr	r1, [r2, #68]	; 0x44
2ffee994:	b119      	cbz	r1, 2ffee99e <psci_setup+0x1fe>
2ffee996:	6819      	ldr	r1, [r3, #0]
2ffee998:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
2ffee99c:	6019      	str	r1, [r3, #0]
2ffee99e:	6d12      	ldr	r2, [r2, #80]	; 0x50
2ffee9a0:	b11a      	cbz	r2, 2ffee9aa <psci_setup+0x20a>
2ffee9a2:	681a      	ldr	r2, [r3, #0]
2ffee9a4:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
2ffee9a8:	601a      	str	r2, [r3, #0]
2ffee9aa:	2000      	movs	r0, #0
2ffee9ac:	b007      	add	sp, #28
2ffee9ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffee9b2:	bf00      	nop
2ffee9b4:	2fffa80e 	.word	0x2fffa80e
2ffee9b8:	2fffec58 	.word	0x2fffec58
2ffee9bc:	2fffec40 	.word	0x2fffec40
2ffee9c0:	2fffec78 	.word	0x2fffec78
2ffee9c4:	2fffe270 	.word	0x2fffe270
2ffee9c8:	2fffec80 	.word	0x2fffec80

2ffee9cc <psci_prepare_next_non_secure_ctx>:
2ffee9cc:	b508      	push	{r3, lr}
2ffee9ce:	6843      	ldr	r3, [r0, #4]
2ffee9d0:	07db      	lsls	r3, r3, #31
2ffee9d2:	d404      	bmi.n	2ffee9de <psci_prepare_next_non_secure_ctx+0x12>
2ffee9d4:	4805      	ldr	r0, [pc, #20]	; (2ffee9ec <psci_prepare_next_non_secure_ctx+0x20>)
2ffee9d6:	f44f 7195 	mov.w	r1, #298	; 0x12a
2ffee9da:	f00b fb9d 	bl	2fffa118 <__assert>
2ffee9de:	f7fe ff7f 	bl	2ffed8e0 <cm_init_my_context>
2ffee9e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffee9e6:	2001      	movs	r0, #1
2ffee9e8:	f7fe bf86 	b.w	2ffed8f8 <cm_prepare_el3_exit>
2ffee9ec:	2fffa80e 	.word	0x2fffa80e

2ffee9f0 <psci_system_off>:
2ffee9f0:	4c0a      	ldr	r4, [pc, #40]	; (2ffeea1c <psci_system_off+0x2c>)
2ffee9f2:	b508      	push	{r3, lr}
2ffee9f4:	f7ff fc62 	bl	2ffee2bc <psci_print_power_domain_map>
2ffee9f8:	6822      	ldr	r2, [r4, #0]
2ffee9fa:	6a52      	ldr	r2, [r2, #36]	; 0x24
2ffee9fc:	b91a      	cbnz	r2, 2ffeea06 <psci_system_off+0x16>
2ffee9fe:	4808      	ldr	r0, [pc, #32]	; (2ffeea20 <psci_system_off+0x30>)
2ffeea00:	2115      	movs	r1, #21
2ffeea02:	f00b fb89 	bl	2fffa118 <__assert>
2ffeea06:	4b07      	ldr	r3, [pc, #28]	; (2ffeea24 <psci_system_off+0x34>)
2ffeea08:	681b      	ldr	r3, [r3, #0]
2ffeea0a:	b113      	cbz	r3, 2ffeea12 <psci_system_off+0x22>
2ffeea0c:	69db      	ldr	r3, [r3, #28]
2ffeea0e:	b103      	cbz	r3, 2ffeea12 <psci_system_off+0x22>
2ffeea10:	4798      	blx	r3
2ffeea12:	f004 fa27 	bl	2fff2e64 <console_flush>
2ffeea16:	6823      	ldr	r3, [r4, #0]
2ffeea18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
2ffeea1a:	4798      	blx	r3
2ffeea1c:	2fffec78 	.word	0x2fffec78
2ffeea20:	2fffa824 	.word	0x2fffa824
2ffeea24:	2fffec7c 	.word	0x2fffec7c

2ffeea28 <psci_system_reset>:
2ffeea28:	4c0a      	ldr	r4, [pc, #40]	; (2ffeea54 <psci_system_reset+0x2c>)
2ffeea2a:	b508      	push	{r3, lr}
2ffeea2c:	f7ff fc46 	bl	2ffee2bc <psci_print_power_domain_map>
2ffeea30:	6822      	ldr	r2, [r4, #0]
2ffeea32:	6a92      	ldr	r2, [r2, #40]	; 0x28
2ffeea34:	b91a      	cbnz	r2, 2ffeea3e <psci_system_reset+0x16>
2ffeea36:	4808      	ldr	r0, [pc, #32]	; (2ffeea58 <psci_system_reset+0x30>)
2ffeea38:	2128      	movs	r1, #40	; 0x28
2ffeea3a:	f00b fb6d 	bl	2fffa118 <__assert>
2ffeea3e:	4b07      	ldr	r3, [pc, #28]	; (2ffeea5c <psci_system_reset+0x34>)
2ffeea40:	681b      	ldr	r3, [r3, #0]
2ffeea42:	b113      	cbz	r3, 2ffeea4a <psci_system_reset+0x22>
2ffeea44:	6a1b      	ldr	r3, [r3, #32]
2ffeea46:	b103      	cbz	r3, 2ffeea4a <psci_system_reset+0x22>
2ffeea48:	4798      	blx	r3
2ffeea4a:	f004 fa0b 	bl	2fff2e64 <console_flush>
2ffeea4e:	6823      	ldr	r3, [r4, #0]
2ffeea50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
2ffeea52:	4798      	blx	r3
2ffeea54:	2fffec78 	.word	0x2fffec78
2ffeea58:	2fffa824 	.word	0x2fffa824
2ffeea5c:	2fffec7c 	.word	0x2fffec7c

2ffeea60 <psci_system_reset2>:
2ffeea60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2ffeea64:	460e      	mov	r6, r1
2ffeea66:	4d17      	ldr	r5, [pc, #92]	; (2ffeeac4 <psci_system_reset2+0x64>)
2ffeea68:	4604      	mov	r4, r0
2ffeea6a:	f7ff fc27 	bl	2ffee2bc <psci_print_power_domain_map>
2ffeea6e:	682b      	ldr	r3, [r5, #0]
2ffeea70:	6d19      	ldr	r1, [r3, #80]	; 0x50
2ffeea72:	b919      	cbnz	r1, 2ffeea7c <psci_system_reset2+0x1c>
2ffeea74:	4814      	ldr	r0, [pc, #80]	; (2ffeeac8 <psci_system_reset2+0x68>)
2ffeea76:	213d      	movs	r1, #61	; 0x3d
2ffeea78:	f00b fb4e 	bl	2fffa118 <__assert>
2ffeea7c:	0fe7      	lsrs	r7, r4, #31
2ffeea7e:	d00c      	beq.n	2ffeea9a <psci_system_reset2+0x3a>
2ffeea80:	4b12      	ldr	r3, [pc, #72]	; (2ffeeacc <psci_system_reset2+0x6c>)
2ffeea82:	681b      	ldr	r3, [r3, #0]
2ffeea84:	b9a3      	cbnz	r3, 2ffeeab0 <psci_system_reset2+0x50>
2ffeea86:	f004 f9ed 	bl	2fff2e64 <console_flush>
2ffeea8a:	682b      	ldr	r3, [r5, #0]
2ffeea8c:	4632      	mov	r2, r6
2ffeea8e:	4621      	mov	r1, r4
2ffeea90:	4638      	mov	r0, r7
2ffeea92:	6d1b      	ldr	r3, [r3, #80]	; 0x50
2ffeea94:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2ffeea98:	4718      	bx	r3
2ffeea9a:	b974      	cbnz	r4, 2ffeeaba <psci_system_reset2+0x5a>
2ffeea9c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
2ffeea9e:	2b00      	cmp	r3, #0
2ffeeaa0:	d0ee      	beq.n	2ffeea80 <psci_system_reset2+0x20>
2ffeeaa2:	4620      	mov	r0, r4
2ffeeaa4:	4798      	blx	r3
2ffeeaa6:	2800      	cmp	r0, #0
2ffeeaa8:	daea      	bge.n	2ffeea80 <psci_system_reset2+0x20>
2ffeeaaa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffeeaae:	e006      	b.n	2ffeeabe <psci_system_reset2+0x5e>
2ffeeab0:	6a1b      	ldr	r3, [r3, #32]
2ffeeab2:	2b00      	cmp	r3, #0
2ffeeab4:	d0e7      	beq.n	2ffeea86 <psci_system_reset2+0x26>
2ffeeab6:	4798      	blx	r3
2ffeeab8:	e7e5      	b.n	2ffeea86 <psci_system_reset2+0x26>
2ffeeaba:	f06f 0001 	mvn.w	r0, #1
2ffeeabe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2ffeeac2:	bf00      	nop
2ffeeac4:	2fffec78 	.word	0x2fffec78
2ffeeac8:	2fffa824 	.word	0x2fffa824
2ffeeacc:	2fffec7c 	.word	0x2fffec7c

2ffeead0 <psci_mem_protect>:
2ffeead0:	b537      	push	{r0, r1, r2, r4, r5, lr}
2ffeead2:	4604      	mov	r4, r0
2ffeead4:	4d0f      	ldr	r5, [pc, #60]	; (2ffeeb14 <psci_mem_protect+0x44>)
2ffeead6:	682a      	ldr	r2, [r5, #0]
2ffeead8:	6c93      	ldr	r3, [r2, #72]	; 0x48
2ffeeada:	b91b      	cbnz	r3, 2ffeeae4 <psci_mem_protect+0x14>
2ffeeadc:	2112      	movs	r1, #18
2ffeeade:	480e      	ldr	r0, [pc, #56]	; (2ffeeb18 <psci_mem_protect+0x48>)
2ffeeae0:	f00b fb1a 	bl	2fffa118 <__assert>
2ffeeae4:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
2ffeeae6:	b90a      	cbnz	r2, 2ffeeaec <psci_mem_protect+0x1c>
2ffeeae8:	2113      	movs	r1, #19
2ffeeaea:	e7f8      	b.n	2ffeeade <psci_mem_protect+0xe>
2ffeeaec:	a801      	add	r0, sp, #4
2ffeeaee:	4798      	blx	r3
2ffeeaf0:	2800      	cmp	r0, #0
2ffeeaf2:	da03      	bge.n	2ffeeafc <psci_mem_protect+0x2c>
2ffeeaf4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffeeaf8:	b003      	add	sp, #12
2ffeeafa:	bd30      	pop	{r4, r5, pc}
2ffeeafc:	682b      	ldr	r3, [r5, #0]
2ffeeafe:	4620      	mov	r0, r4
2ffeeb00:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
2ffeeb02:	4798      	blx	r3
2ffeeb04:	2800      	cmp	r0, #0
2ffeeb06:	dbf5      	blt.n	2ffeeaf4 <psci_mem_protect+0x24>
2ffeeb08:	9801      	ldr	r0, [sp, #4]
2ffeeb0a:	3800      	subs	r0, #0
2ffeeb0c:	bf18      	it	ne
2ffeeb0e:	2001      	movne	r0, #1
2ffeeb10:	e7f2      	b.n	2ffeeaf8 <psci_mem_protect+0x28>
2ffeeb12:	bf00      	nop
2ffeeb14:	2fffec78 	.word	0x2fffec78
2ffeeb18:	2fffa83f 	.word	0x2fffa83f

2ffeeb1c <psci_mem_chk_range>:
2ffeeb1c:	b510      	push	{r4, lr}
2ffeeb1e:	4c0a      	ldr	r4, [pc, #40]	; (2ffeeb48 <psci_mem_chk_range+0x2c>)
2ffeeb20:	6824      	ldr	r4, [r4, #0]
2ffeeb22:	6c64      	ldr	r4, [r4, #68]	; 0x44
2ffeeb24:	b91c      	cbnz	r4, 2ffeeb2e <psci_mem_chk_range+0x12>
2ffeeb26:	4809      	ldr	r0, [pc, #36]	; (2ffeeb4c <psci_mem_chk_range+0x30>)
2ffeeb28:	2121      	movs	r1, #33	; 0x21
2ffeeb2a:	f00b faf5 	bl	2fffa118 <__assert>
2ffeeb2e:	b911      	cbnz	r1, 2ffeeb36 <psci_mem_chk_range+0x1a>
2ffeeb30:	f06f 0002 	mvn.w	r0, #2
2ffeeb34:	bd10      	pop	{r4, pc}
2ffeeb36:	424b      	negs	r3, r1
2ffeeb38:	4283      	cmp	r3, r0
2ffeeb3a:	d3f9      	bcc.n	2ffeeb30 <psci_mem_chk_range+0x14>
2ffeeb3c:	47a0      	blx	r4
2ffeeb3e:	2800      	cmp	r0, #0
2ffeeb40:	dbf6      	blt.n	2ffeeb30 <psci_mem_chk_range+0x14>
2ffeeb42:	2000      	movs	r0, #0
2ffeeb44:	e7f6      	b.n	2ffeeb34 <psci_mem_chk_range+0x18>
2ffeeb46:	bf00      	nop
2ffeeb48:	2fffec78 	.word	0x2fffec78
2ffeeb4c:	2fffa83f 	.word	0x2fffa83f

2ffeeb50 <bakery_lock_get>:
2ffeeb50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffeeb52:	4604      	mov	r4, r0
2ffeeb54:	f00a ee2a 	blx	2fff97ac <plat_my_core_pos>
2ffeeb58:	ee11 2f10 	mrc	15, 0, r2, cr1, cr0, {0}
2ffeeb5c:	4e39      	ldr	r6, [pc, #228]	; (2ffeec44 <bakery_lock_get+0xf4>)
2ffeeb5e:	f002 0204 	and.w	r2, r2, #4
2ffeeb62:	4b39      	ldr	r3, [pc, #228]	; (2ffeec48 <bakery_lock_get+0xf8>)
2ffeeb64:	4625      	mov	r5, r4
2ffeeb66:	1af6      	subs	r6, r6, r3
2ffeeb68:	fb06 fc00 	mul.w	ip, r6, r0
2ffeeb6c:	eb1c 0704 	adds.w	r7, ip, r4
2ffeeb70:	d103      	bne.n	2ffeeb7a <bakery_lock_get+0x2a>
2ffeeb72:	216e      	movs	r1, #110	; 0x6e
2ffeeb74:	4835      	ldr	r0, [pc, #212]	; (2ffeec4c <bakery_lock_get+0xfc>)
2ffeeb76:	f00b facf 	bl	2fffa118 <__assert>
2ffeeb7a:	b10a      	cbz	r2, 2ffeeb80 <bakery_lock_get+0x30>
2ffeeb7c:	ee07 7f3e 	mcr	15, 0, r7, cr7, cr14, {1}
2ffeeb80:	f83c 1004 	ldrh.w	r1, [ip, r4]
2ffeeb84:	f3c1 014e 	ubfx	r1, r1, #1, #15
2ffeeb88:	b109      	cbz	r1, 2ffeeb8e <bakery_lock_get+0x3e>
2ffeeb8a:	2171      	movs	r1, #113	; 0x71
2ffeeb8c:	e7f2      	b.n	2ffeeb74 <bakery_lock_get+0x24>
2ffeeb8e:	2301      	movs	r3, #1
2ffeeb90:	f82c 3004 	strh.w	r3, [ip, r4]
2ffeeb94:	b1f2      	cbz	r2, 2ffeebd4 <bakery_lock_get+0x84>
2ffeeb96:	ee07 7f3a 	mcr	15, 0, r7, cr7, cr10, {1}
2ffeeb9a:	f3bf 8f4b 	dsb	ish
2ffeeb9e:	b1f8      	cbz	r0, 2ffeebe0 <bakery_lock_get+0x90>
2ffeeba0:	b314      	cbz	r4, 2ffeebe8 <bakery_lock_get+0x98>
2ffeeba2:	b9d2      	cbnz	r2, 2ffeebda <bakery_lock_get+0x8a>
2ffeeba4:	8823      	ldrh	r3, [r4, #0]
2ffeeba6:	2801      	cmp	r0, #1
2ffeeba8:	f3c3 034e 	ubfx	r3, r3, #1, #15
2ffeebac:	d119      	bne.n	2ffeebe2 <bakery_lock_get+0x92>
2ffeebae:	3301      	adds	r3, #1
2ffeebb0:	ea4f 0e43 	mov.w	lr, r3, lsl #1
2ffeebb4:	fa1f fe8e 	uxth.w	lr, lr
2ffeebb8:	f82c e004 	strh.w	lr, [ip, r4]
2ffeebbc:	b30a      	cbz	r2, 2ffeec02 <bakery_lock_get+0xb2>
2ffeebbe:	ee07 7f3a 	mcr	15, 0, r7, cr7, cr10, {1}
2ffeebc2:	f3bf 8f4b 	dsb	ish
2ffeebc6:	ea40 2303 	orr.w	r3, r0, r3, lsl #8
2ffeebca:	4288      	cmp	r0, r1
2ffeebcc:	d034      	beq.n	2ffeec38 <bakery_lock_get+0xe8>
2ffeebce:	b9ed      	cbnz	r5, 2ffeec0c <bakery_lock_get+0xbc>
2ffeebd0:	21c1      	movs	r1, #193	; 0xc1
2ffeebd2:	e7cf      	b.n	2ffeeb74 <bakery_lock_get+0x24>
2ffeebd4:	ee07 7f36 	mcr	15, 0, r7, cr7, cr6, {1}
2ffeebd8:	e7df      	b.n	2ffeeb9a <bakery_lock_get+0x4a>
2ffeebda:	ee07 4f3e 	mcr	15, 0, r4, cr7, cr14, {1}
2ffeebde:	e7e1      	b.n	2ffeeba4 <bakery_lock_get+0x54>
2ffeebe0:	4603      	mov	r3, r0
2ffeebe2:	eb14 0e06 	adds.w	lr, r4, r6
2ffeebe6:	d101      	bne.n	2ffeebec <bakery_lock_get+0x9c>
2ffeebe8:	2189      	movs	r1, #137	; 0x89
2ffeebea:	e7c3      	b.n	2ffeeb74 <bakery_lock_get+0x24>
2ffeebec:	b10a      	cbz	r2, 2ffeebf2 <bakery_lock_get+0xa2>
2ffeebee:	ee07 ef3e 	mcr	15, 0, lr, cr7, cr14, {1}
2ffeebf2:	f8be e000 	ldrh.w	lr, [lr]
2ffeebf6:	f3ce 0e4e 	ubfx	lr, lr, #1, #15
2ffeebfa:	4573      	cmp	r3, lr
2ffeebfc:	bf38      	it	cc
2ffeebfe:	4673      	movcc	r3, lr
2ffeec00:	e7d5      	b.n	2ffeebae <bakery_lock_get+0x5e>
2ffeec02:	ee07 7f36 	mcr	15, 0, r7, cr7, cr6, {1}
2ffeec06:	e7dc      	b.n	2ffeebc2 <bakery_lock_get+0x72>
2ffeec08:	2101      	movs	r1, #1
2ffeec0a:	e7de      	b.n	2ffeebca <bakery_lock_get+0x7a>
2ffeec0c:	b10a      	cbz	r2, 2ffeec12 <bakery_lock_get+0xc2>
2ffeec0e:	ee07 5f3e 	mcr	15, 0, r5, cr7, cr14, {1}
2ffeec12:	882f      	ldrh	r7, [r5, #0]
2ffeec14:	b2bc      	uxth	r4, r7
2ffeec16:	07ff      	lsls	r7, r7, #31
2ffeec18:	d4f8      	bmi.n	2ffeec0c <bakery_lock_get+0xbc>
2ffeec1a:	0864      	lsrs	r4, r4, #1
2ffeec1c:	d00c      	beq.n	2ffeec38 <bakery_lock_get+0xe8>
2ffeec1e:	ea41 2704 	orr.w	r7, r1, r4, lsl #8
2ffeec22:	42bb      	cmp	r3, r7
2ffeec24:	d908      	bls.n	2ffeec38 <bakery_lock_get+0xe8>
2ffeec26:	bf20      	wfe
2ffeec28:	b10a      	cbz	r2, 2ffeec2e <bakery_lock_get+0xde>
2ffeec2a:	ee07 5f3e 	mcr	15, 0, r5, cr7, cr14, {1}
2ffeec2e:	882f      	ldrh	r7, [r5, #0]
2ffeec30:	f3c7 074e 	ubfx	r7, r7, #1, #15
2ffeec34:	42bc      	cmp	r4, r7
2ffeec36:	d0f6      	beq.n	2ffeec26 <bakery_lock_get+0xd6>
2ffeec38:	4435      	add	r5, r6
2ffeec3a:	2901      	cmp	r1, #1
2ffeec3c:	d1e4      	bne.n	2ffeec08 <bakery_lock_get+0xb8>
2ffeec3e:	f3bf 8f5f 	dmb	sy
2ffeec42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffeec44:	2fffed00 	.word	0x2fffed00
2ffeec48:	2fffecc0 	.word	0x2fffecc0
2ffeec4c:	2fffa85b 	.word	0x2fffa85b

2ffeec50 <bakery_lock_release>:
2ffeec50:	b538      	push	{r3, r4, r5, lr}
2ffeec52:	4604      	mov	r4, r0
2ffeec54:	ee11 5f10 	mrc	15, 0, r5, cr1, cr0, {0}
2ffeec58:	f005 0504 	and.w	r5, r5, #4
2ffeec5c:	f00a eda6 	blx	2fff97ac <plat_my_core_pos>
2ffeec60:	4a0e      	ldr	r2, [pc, #56]	; (2ffeec9c <bakery_lock_release+0x4c>)
2ffeec62:	4b0f      	ldr	r3, [pc, #60]	; (2ffeeca0 <bakery_lock_release+0x50>)
2ffeec64:	1a9b      	subs	r3, r3, r2
2ffeec66:	4343      	muls	r3, r0
2ffeec68:	18e2      	adds	r2, r4, r3
2ffeec6a:	b10d      	cbz	r5, 2ffeec70 <bakery_lock_release+0x20>
2ffeec6c:	ee07 2f3e 	mcr	15, 0, r2, cr7, cr14, {1}
2ffeec70:	5ae1      	ldrh	r1, [r4, r3]
2ffeec72:	f3c1 014e 	ubfx	r1, r1, #1, #15
2ffeec76:	b919      	cbnz	r1, 2ffeec80 <bakery_lock_release+0x30>
2ffeec78:	480a      	ldr	r0, [pc, #40]	; (2ffeeca4 <bakery_lock_release+0x54>)
2ffeec7a:	21ef      	movs	r1, #239	; 0xef
2ffeec7c:	f00b fa4c 	bl	2fffa118 <__assert>
2ffeec80:	f3bf 8f5e 	dmb	st
2ffeec84:	2100      	movs	r1, #0
2ffeec86:	52e1      	strh	r1, [r4, r3]
2ffeec88:	b12d      	cbz	r5, 2ffeec96 <bakery_lock_release+0x46>
2ffeec8a:	ee07 2f3a 	mcr	15, 0, r2, cr7, cr10, {1}
2ffeec8e:	f3bf 8f4b 	dsb	ish
2ffeec92:	bf40      	sev
2ffeec94:	bd38      	pop	{r3, r4, r5, pc}
2ffeec96:	ee07 2f36 	mcr	15, 0, r2, cr7, cr6, {1}
2ffeec9a:	e7f8      	b.n	2ffeec8e <bakery_lock_release+0x3e>
2ffeec9c:	2fffecc0 	.word	0x2fffecc0
2ffeeca0:	2fffed00 	.word	0x2fffed00
2ffeeca4:	2fffa85b 	.word	0x2fffa85b

2ffeeca8 <trim_table_init>:
2ffeeca8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeecac:	4604      	mov	r4, r0
2ffeecae:	6843      	ldr	r3, [r0, #4]
2ffeecb0:	2600      	movs	r6, #0
2ffeecb2:	6882      	ldr	r2, [r0, #8]
2ffeecb4:	f8d0 a000 	ldr.w	sl, [r0]
2ffeecb8:	eb03 0902 	add.w	r9, r3, r2
2ffeecbc:	68c2      	ldr	r2, [r0, #12]
2ffeecbe:	eb03 0802 	add.w	r8, r3, r2
2ffeecc2:	f83a 5b02 	ldrh.w	r5, [sl], #2
2ffeecc6:	b13d      	cbz	r5, 2ffeecd8 <trim_table_init+0x30>
2ffeecc8:	f8ba 7000 	ldrh.w	r7, [sl]
2ffeeccc:	45b9      	cmp	r9, r7
2ffeecce:	d901      	bls.n	2ffeecd4 <trim_table_init+0x2c>
2ffeecd0:	45a8      	cmp	r8, r5
2ffeecd2:	d304      	bcc.n	2ffeecde <trim_table_init+0x36>
2ffeecd4:	2e00      	cmp	r6, #0
2ffeecd6:	d0f4      	beq.n	2ffeecc2 <trim_table_init+0x1a>
2ffeecd8:	6126      	str	r6, [r4, #16]
2ffeecda:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeecde:	3701      	adds	r7, #1
2ffeece0:	4547      	cmp	r7, r8
2ffeece2:	bf38      	it	cc
2ffeece4:	4647      	movcc	r7, r8
2ffeece6:	b926      	cbnz	r6, 2ffeecf2 <trim_table_init+0x4a>
2ffeece8:	f8c4 9028 	str.w	r9, [r4, #40]	; 0x28
2ffeecec:	2601      	movs	r6, #1
2ffeecee:	62e7      	str	r7, [r4, #44]	; 0x2c
2ffeecf0:	e7e7      	b.n	2ffeecc2 <trim_table_init+0x1a>
2ffeecf2:	6a23      	ldr	r3, [r4, #32]
2ffeecf4:	1c68      	adds	r0, r5, #1
2ffeecf6:	4798      	blx	r3
2ffeecf8:	69e3      	ldr	r3, [r4, #28]
2ffeecfa:	4798      	blx	r3
2ffeecfc:	4683      	mov	fp, r0
2ffeecfe:	6863      	ldr	r3, [r4, #4]
2ffeed00:	4629      	mov	r1, r5
2ffeed02:	68e2      	ldr	r2, [r4, #12]
2ffeed04:	3d01      	subs	r5, #1
2ffeed06:	4413      	add	r3, r2
2ffeed08:	4299      	cmp	r1, r3
2ffeed0a:	d201      	bcs.n	2ffeed10 <trim_table_init+0x68>
2ffeed0c:	460d      	mov	r5, r1
2ffeed0e:	e006      	b.n	2ffeed1e <trim_table_init+0x76>
2ffeed10:	6a23      	ldr	r3, [r4, #32]
2ffeed12:	4628      	mov	r0, r5
2ffeed14:	4798      	blx	r3
2ffeed16:	69e3      	ldr	r3, [r4, #28]
2ffeed18:	4798      	blx	r3
2ffeed1a:	4583      	cmp	fp, r0
2ffeed1c:	d3ef      	bcc.n	2ffeecfe <trim_table_init+0x56>
2ffeed1e:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
2ffeed22:	3d01      	subs	r5, #1
2ffeed24:	3601      	adds	r6, #1
2ffeed26:	629d      	str	r5, [r3, #40]	; 0x28
2ffeed28:	62df      	str	r7, [r3, #44]	; 0x2c
2ffeed2a:	e7ca      	b.n	2ffeecc2 <trim_table_init+0x1a>

2ffeed2c <csi_get_trimed_cal>:
2ffeed2c:	b508      	push	{r3, lr}
2ffeed2e:	f004 f9bb 	bl	2fff30a8 <stm32mp_rcc_base>
2ffeed32:	4b05      	ldr	r3, [pc, #20]	; (2ffeed48 <csi_get_trimed_cal+0x1c>)
2ffeed34:	69c0      	ldr	r0, [r0, #28]
2ffeed36:	689a      	ldr	r2, [r3, #8]
2ffeed38:	f3c0 2004 	ubfx	r0, r0, #8, #5
2ffeed3c:	685b      	ldr	r3, [r3, #4]
2ffeed3e:	1a80      	subs	r0, r0, r2
2ffeed40:	4418      	add	r0, r3
2ffeed42:	3801      	subs	r0, #1
2ffeed44:	bd08      	pop	{r3, pc}
2ffeed46:	bf00      	nop
2ffeed48:	2fffd044 	.word	0x2fffd044

2ffeed4c <csi_set_trim>:
2ffeed4c:	4b08      	ldr	r3, [pc, #32]	; (2ffeed70 <csi_set_trim+0x24>)
2ffeed4e:	b510      	push	{r4, lr}
2ffeed50:	685c      	ldr	r4, [r3, #4]
2ffeed52:	1b04      	subs	r4, r0, r4
2ffeed54:	6898      	ldr	r0, [r3, #8]
2ffeed56:	4404      	add	r4, r0
2ffeed58:	f004 f9a6 	bl	2fff30a8 <stm32mp_rcc_base>
2ffeed5c:	69c3      	ldr	r3, [r0, #28]
2ffeed5e:	3401      	adds	r4, #1
2ffeed60:	0224      	lsls	r4, r4, #8
2ffeed62:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
2ffeed66:	f404 54f8 	and.w	r4, r4, #7936	; 0x1f00
2ffeed6a:	431c      	orrs	r4, r3
2ffeed6c:	61c4      	str	r4, [r0, #28]
2ffeed6e:	bd10      	pop	{r4, pc}
2ffeed70:	2fffd044 	.word	0x2fffd044

2ffeed74 <hsi_get_trimed_cal>:
2ffeed74:	b508      	push	{r3, lr}
2ffeed76:	f004 f997 	bl	2fff30a8 <stm32mp_rcc_base>
2ffeed7a:	4a04      	ldr	r2, [pc, #16]	; (2ffeed8c <hsi_get_trimed_cal+0x18>)
2ffeed7c:	6983      	ldr	r3, [r0, #24]
2ffeed7e:	6850      	ldr	r0, [r2, #4]
2ffeed80:	f343 2306 	sbfx	r3, r3, #8, #7
2ffeed84:	4418      	add	r0, r3
2ffeed86:	ea20 70e0 	bic.w	r0, r0, r0, asr #31
2ffeed8a:	bd08      	pop	{r3, pc}
2ffeed8c:	2fffd0ec 	.word	0x2fffd0ec

2ffeed90 <hsi_set_trim>:
2ffeed90:	4b07      	ldr	r3, [pc, #28]	; (2ffeedb0 <hsi_set_trim+0x20>)
2ffeed92:	b510      	push	{r4, lr}
2ffeed94:	685c      	ldr	r4, [r3, #4]
2ffeed96:	1b04      	subs	r4, r0, r4
2ffeed98:	f004 f986 	bl	2fff30a8 <stm32mp_rcc_base>
2ffeed9c:	6983      	ldr	r3, [r0, #24]
2ffeed9e:	0224      	lsls	r4, r4, #8
2ffeeda0:	f423 43fe 	bic.w	r3, r3, #32512	; 0x7f00
2ffeeda4:	f404 44fe 	and.w	r4, r4, #32512	; 0x7f00
2ffeeda8:	431c      	orrs	r4, r3
2ffeedaa:	6184      	str	r4, [r0, #24]
2ffeedac:	bd10      	pop	{r4, pc}
2ffeedae:	bf00      	nop
2ffeedb0:	2fffd0ec 	.word	0x2fffd0ec

2ffeedb4 <rcc_calibration>:
2ffeedb4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeedb8:	4604      	mov	r4, r0
2ffeedba:	69c3      	ldr	r3, [r0, #28]
2ffeedbc:	4798      	blx	r3
2ffeedbe:	6967      	ldr	r7, [r4, #20]
2ffeedc0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2ffeedc4:	69a3      	ldr	r3, [r4, #24]
2ffeedc6:	4606      	mov	r6, r0
2ffeedc8:	437b      	muls	r3, r7
2ffeedca:	fbb3 f3f2 	udiv	r3, r3, r2
2ffeedce:	eba7 0a03 	sub.w	sl, r7, r3
2ffeedd2:	4550      	cmp	r0, sl
2ffeedd4:	441f      	add	r7, r3
2ffeedd6:	d301      	bcc.n	2ffeeddc <rcc_calibration+0x28>
2ffeedd8:	42b8      	cmp	r0, r7
2ffeedda:	d93e      	bls.n	2ffeee5a <rcc_calibration+0xa6>
2ffeeddc:	6a63      	ldr	r3, [r4, #36]	; 0x24
2ffeedde:	4798      	blx	r3
2ffeede0:	4605      	mov	r5, r0
2ffeede2:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2ffeede6:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2ffeedea:	4a59      	ldr	r2, [pc, #356]	; (2ffeef50 <rcc_calibration+0x19c>)
2ffeedec:	f242 7110 	movw	r1, #10000	; 0x2710
2ffeedf0:	2300      	movs	r3, #0
2ffeedf2:	fba0 0101 	umull	r0, r1, r0, r1
2ffeedf6:	f00a eaf4 	blx	2fff93e0 <__aeabi_uldivmod>
2ffeedfa:	eb10 0308 	adds.w	r3, r0, r8
2ffeedfe:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2ffeee02:	9300      	str	r3, [sp, #0]
2ffeee04:	eb41 0309 	adc.w	r3, r1, r9
2ffeee08:	9301      	str	r3, [sp, #4]
2ffeee0a:	6963      	ldr	r3, [r4, #20]
2ffeee0c:	6922      	ldr	r2, [r4, #16]
2ffeee0e:	42b3      	cmp	r3, r6
2ffeee10:	d80c      	bhi.n	2ffeee2c <rcc_calibration+0x78>
2ffeee12:	4623      	mov	r3, r4
2ffeee14:	2600      	movs	r6, #0
2ffeee16:	4296      	cmp	r6, r2
2ffeee18:	d00d      	beq.n	2ffeee36 <rcc_calibration+0x82>
2ffeee1a:	6a98      	ldr	r0, [r3, #40]	; 0x28
2ffeee1c:	4285      	cmp	r5, r0
2ffeee1e:	d814      	bhi.n	2ffeee4a <rcc_calibration+0x96>
2ffeee20:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
2ffeee22:	3308      	adds	r3, #8
2ffeee24:	428d      	cmp	r5, r1
2ffeee26:	d91d      	bls.n	2ffeee64 <rcc_calibration+0xb0>
2ffeee28:	1e68      	subs	r0, r5, #1
2ffeee2a:	e00e      	b.n	2ffeee4a <rcc_calibration+0x96>
2ffeee2c:	eb04 03c2 	add.w	r3, r4, r2, lsl #3
2ffeee30:	1e51      	subs	r1, r2, #1
2ffeee32:	2900      	cmp	r1, #0
2ffeee34:	da01      	bge.n	2ffeee3a <rcc_calibration+0x86>
2ffeee36:	4628      	mov	r0, r5
2ffeee38:	e007      	b.n	2ffeee4a <rcc_calibration+0x96>
2ffeee3a:	6a58      	ldr	r0, [r3, #36]	; 0x24
2ffeee3c:	4285      	cmp	r5, r0
2ffeee3e:	d304      	bcc.n	2ffeee4a <rcc_calibration+0x96>
2ffeee40:	6a1a      	ldr	r2, [r3, #32]
2ffeee42:	3b08      	subs	r3, #8
2ffeee44:	4295      	cmp	r5, r2
2ffeee46:	d20b      	bcs.n	2ffeee60 <rcc_calibration+0xac>
2ffeee48:	1c68      	adds	r0, r5, #1
2ffeee4a:	6a23      	ldr	r3, [r4, #32]
2ffeee4c:	4681      	mov	r9, r0
2ffeee4e:	4798      	blx	r3
2ffeee50:	69e3      	ldr	r3, [r4, #28]
2ffeee52:	4798      	blx	r3
2ffeee54:	4606      	mov	r6, r0
2ffeee56:	b938      	cbnz	r0, 2ffeee68 <rcc_calibration+0xb4>
2ffeee58:	6160      	str	r0, [r4, #20]
2ffeee5a:	b003      	add	sp, #12
2ffeee5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffeee60:	3901      	subs	r1, #1
2ffeee62:	e7e6      	b.n	2ffeee32 <rcc_calibration+0x7e>
2ffeee64:	3601      	adds	r6, #1
2ffeee66:	e7d6      	b.n	2ffeee16 <rcc_calibration+0x62>
2ffeee68:	6963      	ldr	r3, [r4, #20]
2ffeee6a:	4283      	cmp	r3, r0
2ffeee6c:	bf34      	ite	cc
2ffeee6e:	1ac3      	subcc	r3, r0, r3
2ffeee70:	1a1b      	subcs	r3, r3, r0
2ffeee72:	4598      	cmp	r8, r3
2ffeee74:	bf84      	itt	hi
2ffeee76:	4698      	movhi	r8, r3
2ffeee78:	464d      	movhi	r5, r9
2ffeee7a:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2ffeee7e:	e9dd bc00 	ldrd	fp, ip, [sp]
2ffeee82:	458c      	cmp	ip, r1
2ffeee84:	bf08      	it	eq
2ffeee86:	4583      	cmpeq	fp, r0
2ffeee88:	d301      	bcc.n	2ffeee8e <rcc_calibration+0xda>
2ffeee8a:	4598      	cmp	r8, r3
2ffeee8c:	d0bd      	beq.n	2ffeee0a <rcc_calibration+0x56>
2ffeee8e:	6a23      	ldr	r3, [r4, #32]
2ffeee90:	4628      	mov	r0, r5
2ffeee92:	4798      	blx	r3
2ffeee94:	69e3      	ldr	r3, [r4, #28]
2ffeee96:	4798      	blx	r3
2ffeee98:	4582      	cmp	sl, r0
2ffeee9a:	4602      	mov	r2, r0
2ffeee9c:	d801      	bhi.n	2ffeeea2 <rcc_calibration+0xee>
2ffeee9e:	4287      	cmp	r7, r0
2ffeeea0:	d2db      	bcs.n	2ffeee5a <rcc_calibration+0xa6>
2ffeeea2:	6a21      	ldr	r1, [r4, #32]
2ffeeea4:	462b      	mov	r3, r5
2ffeeea6:	482b      	ldr	r0, [pc, #172]	; (2ffeef54 <rcc_calibration+0x1a0>)
2ffeeea8:	4f2b      	ldr	r7, [pc, #172]	; (2ffeef58 <rcc_calibration+0x1a4>)
2ffeeeaa:	4e2c      	ldr	r6, [pc, #176]	; (2ffeef5c <rcc_calibration+0x1a8>)
2ffeeeac:	42b9      	cmp	r1, r7
2ffeeeae:	bf0c      	ite	eq
2ffeeeb0:	4631      	moveq	r1, r6
2ffeeeb2:	4601      	movne	r1, r0
2ffeeeb4:	482a      	ldr	r0, [pc, #168]	; (2ffeef60 <rcc_calibration+0x1ac>)
2ffeeeb6:	f003 ff31 	bl	2fff2d1c <tf_log>
2ffeeeba:	6921      	ldr	r1, [r4, #16]
2ffeeebc:	4622      	mov	r2, r4
2ffeeebe:	2300      	movs	r3, #0
2ffeeec0:	428b      	cmp	r3, r1
2ffeeec2:	d101      	bne.n	2ffeeec8 <rcc_calibration+0x114>
2ffeeec4:	462e      	mov	r6, r5
2ffeeec6:	e007      	b.n	2ffeeed8 <rcc_calibration+0x124>
2ffeeec8:	6a96      	ldr	r6, [r2, #40]	; 0x28
2ffeeeca:	42b5      	cmp	r5, r6
2ffeeecc:	d804      	bhi.n	2ffeeed8 <rcc_calibration+0x124>
2ffeeece:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
2ffeeed0:	3208      	adds	r2, #8
2ffeeed2:	4285      	cmp	r5, r0
2ffeeed4:	d91a      	bls.n	2ffeef0c <rcc_calibration+0x158>
2ffeeed6:	1e6e      	subs	r6, r5, #1
2ffeeed8:	6a23      	ldr	r3, [r4, #32]
2ffeeeda:	4630      	mov	r0, r6
2ffeeedc:	4798      	blx	r3
2ffeeede:	6a22      	ldr	r2, [r4, #32]
2ffeeee0:	491e      	ldr	r1, [pc, #120]	; (2ffeef5c <rcc_calibration+0x1a8>)
2ffeeee2:	4b1c      	ldr	r3, [pc, #112]	; (2ffeef54 <rcc_calibration+0x1a0>)
2ffeeee4:	42ba      	cmp	r2, r7
2ffeeee6:	bf0c      	ite	eq
2ffeeee8:	4688      	moveq	r8, r1
2ffeeeea:	4698      	movne	r8, r3
2ffeeeec:	69e3      	ldr	r3, [r4, #28]
2ffeeeee:	4798      	blx	r3
2ffeeef0:	4602      	mov	r2, r0
2ffeeef2:	4633      	mov	r3, r6
2ffeeef4:	481a      	ldr	r0, [pc, #104]	; (2ffeef60 <rcc_calibration+0x1ac>)
2ffeeef6:	4641      	mov	r1, r8
2ffeeef8:	f003 ff10 	bl	2fff2d1c <tf_log>
2ffeeefc:	6922      	ldr	r2, [r4, #16]
2ffeeefe:	1e53      	subs	r3, r2, #1
2ffeef00:	eb04 02c2 	add.w	r2, r4, r2, lsl #3
2ffeef04:	2b00      	cmp	r3, #0
2ffeef06:	da03      	bge.n	2ffeef10 <rcc_calibration+0x15c>
2ffeef08:	462e      	mov	r6, r5
2ffeef0a:	e009      	b.n	2ffeef20 <rcc_calibration+0x16c>
2ffeef0c:	3301      	adds	r3, #1
2ffeef0e:	e7d7      	b.n	2ffeeec0 <rcc_calibration+0x10c>
2ffeef10:	6a56      	ldr	r6, [r2, #36]	; 0x24
2ffeef12:	42b5      	cmp	r5, r6
2ffeef14:	d304      	bcc.n	2ffeef20 <rcc_calibration+0x16c>
2ffeef16:	6a11      	ldr	r1, [r2, #32]
2ffeef18:	3a08      	subs	r2, #8
2ffeef1a:	428d      	cmp	r5, r1
2ffeef1c:	d215      	bcs.n	2ffeef4a <rcc_calibration+0x196>
2ffeef1e:	1c6e      	adds	r6, r5, #1
2ffeef20:	6a23      	ldr	r3, [r4, #32]
2ffeef22:	4630      	mov	r0, r6
2ffeef24:	4798      	blx	r3
2ffeef26:	6a22      	ldr	r2, [r4, #32]
2ffeef28:	490c      	ldr	r1, [pc, #48]	; (2ffeef5c <rcc_calibration+0x1a8>)
2ffeef2a:	4b0a      	ldr	r3, [pc, #40]	; (2ffeef54 <rcc_calibration+0x1a0>)
2ffeef2c:	42ba      	cmp	r2, r7
2ffeef2e:	bf0c      	ite	eq
2ffeef30:	460f      	moveq	r7, r1
2ffeef32:	461f      	movne	r7, r3
2ffeef34:	69e3      	ldr	r3, [r4, #28]
2ffeef36:	4798      	blx	r3
2ffeef38:	4602      	mov	r2, r0
2ffeef3a:	4633      	mov	r3, r6
2ffeef3c:	4808      	ldr	r0, [pc, #32]	; (2ffeef60 <rcc_calibration+0x1ac>)
2ffeef3e:	4639      	mov	r1, r7
2ffeef40:	b003      	add	sp, #12
2ffeef42:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffeef46:	f003 bee9 	b.w	2fff2d1c <tf_log>
2ffeef4a:	3b01      	subs	r3, #1
2ffeef4c:	e7da      	b.n	2ffeef04 <rcc_calibration+0x150>
2ffeef4e:	bf00      	nop
2ffeef50:	000f4240 	.word	0x000f4240
2ffeef54:	2fffa885 	.word	0x2fffa885
2ffeef58:	2ffeed91 	.word	0x2ffeed91
2ffeef5c:	2fffa881 	.word	0x2fffa881
2ffeef60:	2fffa889 	.word	0x2fffa889

2ffeef64 <stm32mp1_calib_get_wakeup>:
2ffeef64:	4b01      	ldr	r3, [pc, #4]	; (2ffeef6c <stm32mp1_calib_get_wakeup+0x8>)
2ffeef66:	7818      	ldrb	r0, [r3, #0]
2ffeef68:	4770      	bx	lr
2ffeef6a:	bf00      	nop
2ffeef6c:	2fffe2b0 	.word	0x2fffe2b0

2ffeef70 <stm32mp1_calib_set_wakeup>:
2ffeef70:	4b01      	ldr	r3, [pc, #4]	; (2ffeef78 <stm32mp1_calib_set_wakeup+0x8>)
2ffeef72:	7018      	strb	r0, [r3, #0]
2ffeef74:	4770      	bx	lr
2ffeef76:	bf00      	nop
2ffeef78:	2fffe2b0 	.word	0x2fffe2b0

2ffeef7c <stm32mp1_calib_it_handler>:
2ffeef7c:	b538      	push	{r3, r4, r5, lr}
2ffeef7e:	4605      	mov	r5, r0
2ffeef80:	f004 f892 	bl	2fff30a8 <stm32mp_rcc_base>
2ffeef84:	2db0      	cmp	r5, #176	; 0xb0
2ffeef86:	4604      	mov	r4, r0
2ffeef88:	d00e      	beq.n	2ffeefa8 <stm32mp1_calib_it_handler+0x2c>
2ffeef8a:	2db1      	cmp	r5, #177	; 0xb1
2ffeef8c:	d11f      	bne.n	2ffeefce <stm32mp1_calib_it_handler+0x52>
2ffeef8e:	2080      	movs	r0, #128	; 0x80
2ffeef90:	f002 faf2 	bl	2fff1578 <plat_ic_set_priority_mask>
2ffeef94:	f8d4 3418 	ldr.w	r3, [r4, #1048]	; 0x418
2ffeef98:	2201      	movs	r2, #1
2ffeef9a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2ffeef9e:	f8c4 3418 	str.w	r3, [r4, #1048]	; 0x418
2ffeefa2:	4b13      	ldr	r3, [pc, #76]	; (2ffeeff0 <stm32mp1_calib_it_handler+0x74>)
2ffeefa4:	701a      	strb	r2, [r3, #0]
2ffeefa6:	bd38      	pop	{r3, r4, r5, pc}
2ffeefa8:	4b11      	ldr	r3, [pc, #68]	; (2ffeeff0 <stm32mp1_calib_it_handler+0x74>)
2ffeefaa:	2200      	movs	r2, #0
2ffeefac:	701a      	strb	r2, [r3, #0]
2ffeefae:	4b11      	ldr	r3, [pc, #68]	; (2ffeeff4 <stm32mp1_calib_it_handler+0x78>)
2ffeefb0:	681a      	ldr	r2, [r3, #0]
2ffeefb2:	0791      	lsls	r1, r2, #30
2ffeefb4:	bf42      	ittt	mi
2ffeefb6:	681a      	ldrmi	r2, [r3, #0]
2ffeefb8:	f042 0202 	orrmi.w	r2, r2, #2
2ffeefbc:	601a      	strmi	r2, [r3, #0]
2ffeefbe:	4b0e      	ldr	r3, [pc, #56]	; (2ffeeff8 <stm32mp1_calib_it_handler+0x7c>)
2ffeefc0:	681a      	ldr	r2, [r3, #0]
2ffeefc2:	0792      	lsls	r2, r2, #30
2ffeefc4:	bf42      	ittt	mi
2ffeefc6:	681a      	ldrmi	r2, [r3, #0]
2ffeefc8:	f042 0202 	orrmi.w	r2, r2, #2
2ffeefcc:	601a      	strmi	r2, [r3, #0]
2ffeefce:	480b      	ldr	r0, [pc, #44]	; (2ffeeffc <stm32mp1_calib_it_handler+0x80>)
2ffeefd0:	6943      	ldr	r3, [r0, #20]
2ffeefd2:	b10b      	cbz	r3, 2ffeefd8 <stm32mp1_calib_it_handler+0x5c>
2ffeefd4:	f7ff feee 	bl	2ffeedb4 <rcc_calibration>
2ffeefd8:	4809      	ldr	r0, [pc, #36]	; (2ffef000 <stm32mp1_calib_it_handler+0x84>)
2ffeefda:	6943      	ldr	r3, [r0, #20]
2ffeefdc:	b10b      	cbz	r3, 2ffeefe2 <stm32mp1_calib_it_handler+0x66>
2ffeefde:	f7ff fee9 	bl	2ffeedb4 <rcc_calibration>
2ffeefe2:	4b08      	ldr	r3, [pc, #32]	; (2ffef004 <stm32mp1_calib_it_handler+0x88>)
2ffeefe4:	681b      	ldr	r3, [r3, #0]
2ffeefe6:	2b00      	cmp	r3, #0
2ffeefe8:	d0dd      	beq.n	2ffeefa6 <stm32mp1_calib_it_handler+0x2a>
2ffeefea:	ee0e 3f12 	mcr	15, 0, r3, cr14, cr2, {0}
2ffeefee:	e7da      	b.n	2ffeefa6 <stm32mp1_calib_it_handler+0x2a>
2ffeeff0:	2fffe2b0 	.word	0x2fffe2b0
2ffeeff4:	5000d04c 	.word	0x5000d04c
2ffeeff8:	5000d050 	.word	0x5000d050
2ffeeffc:	2fffd0ec 	.word	0x2fffd0ec
2ffef000:	2fffd044 	.word	0x2fffd044
2ffef004:	2fffe2b4 	.word	0x2fffe2b4

2ffef008 <stm32mp1_calib_start_hsi_cal>:
2ffef008:	4805      	ldr	r0, [pc, #20]	; (2ffef020 <stm32mp1_calib_start_hsi_cal+0x18>)
2ffef00a:	b508      	push	{r3, lr}
2ffef00c:	6943      	ldr	r3, [r0, #20]
2ffef00e:	b11b      	cbz	r3, 2ffef018 <stm32mp1_calib_start_hsi_cal+0x10>
2ffef010:	f7ff fed0 	bl	2ffeedb4 <rcc_calibration>
2ffef014:	2000      	movs	r0, #0
2ffef016:	bd08      	pop	{r3, pc}
2ffef018:	f06f 0001 	mvn.w	r0, #1
2ffef01c:	e7fb      	b.n	2ffef016 <stm32mp1_calib_start_hsi_cal+0xe>
2ffef01e:	bf00      	nop
2ffef020:	2fffd0ec 	.word	0x2fffd0ec

2ffef024 <stm32mp1_calib_start_csi_cal>:
2ffef024:	4805      	ldr	r0, [pc, #20]	; (2ffef03c <stm32mp1_calib_start_csi_cal+0x18>)
2ffef026:	b508      	push	{r3, lr}
2ffef028:	6943      	ldr	r3, [r0, #20]
2ffef02a:	b11b      	cbz	r3, 2ffef034 <stm32mp1_calib_start_csi_cal+0x10>
2ffef02c:	f7ff fec2 	bl	2ffeedb4 <rcc_calibration>
2ffef030:	2000      	movs	r0, #0
2ffef032:	bd08      	pop	{r3, pc}
2ffef034:	f06f 0001 	mvn.w	r0, #1
2ffef038:	e7fb      	b.n	2ffef032 <stm32mp1_calib_start_csi_cal+0xe>
2ffef03a:	bf00      	nop
2ffef03c:	2fffd044 	.word	0x2fffd044

2ffef040 <stm32mp1_calib_init>:
2ffef040:	b513      	push	{r0, r1, r4, lr}
2ffef042:	a901      	add	r1, sp, #4
2ffef044:	4829      	ldr	r0, [pc, #164]	; (2ffef0ec <stm32mp1_calib_init+0xac>)
2ffef046:	f005 fedc 	bl	2fff4e02 <fdt_rcc_read_prop>
2ffef04a:	b1d0      	cbz	r0, 2ffef082 <stm32mp1_calib_init+0x42>
2ffef04c:	4c28      	ldr	r4, [pc, #160]	; (2ffef0f0 <stm32mp1_calib_init+0xb0>)
2ffef04e:	2100      	movs	r1, #0
2ffef050:	f104 001c 	add.w	r0, r4, #28
2ffef054:	f000 fe5c 	bl	2ffefd10 <stm32_timer_freq_func>
2ffef058:	69e3      	ldr	r3, [r4, #28]
2ffef05a:	b193      	cbz	r3, 2ffef082 <stm32mp1_calib_init+0x42>
2ffef05c:	2004      	movs	r0, #4
2ffef05e:	f006 fc49 	bl	2fff58f4 <stm32mp_clk_get_rate>
2ffef062:	6160      	str	r0, [r4, #20]
2ffef064:	f004 f820 	bl	2fff30a8 <stm32mp_rcc_base>
2ffef068:	6983      	ldr	r3, [r0, #24]
2ffef06a:	4620      	mov	r0, r4
2ffef06c:	f3c3 4308 	ubfx	r3, r3, #16, #9
2ffef070:	6063      	str	r3, [r4, #4]
2ffef072:	f7ff fe19 	bl	2ffeeca8 <trim_table_init>
2ffef076:	6860      	ldr	r0, [r4, #4]
2ffef078:	6a23      	ldr	r3, [r4, #32]
2ffef07a:	4798      	blx	r3
2ffef07c:	4620      	mov	r0, r4
2ffef07e:	f7ff fe99 	bl	2ffeedb4 <rcc_calibration>
2ffef082:	481c      	ldr	r0, [pc, #112]	; (2ffef0f4 <stm32mp1_calib_init+0xb4>)
2ffef084:	a901      	add	r1, sp, #4
2ffef086:	f005 febc 	bl	2fff4e02 <fdt_rcc_read_prop>
2ffef08a:	b1d0      	cbz	r0, 2ffef0c2 <stm32mp1_calib_init+0x82>
2ffef08c:	4c1a      	ldr	r4, [pc, #104]	; (2ffef0f8 <stm32mp1_calib_init+0xb8>)
2ffef08e:	2101      	movs	r1, #1
2ffef090:	f104 001c 	add.w	r0, r4, #28
2ffef094:	f000 fe3c 	bl	2ffefd10 <stm32_timer_freq_func>
2ffef098:	69e3      	ldr	r3, [r4, #28]
2ffef09a:	b193      	cbz	r3, 2ffef0c2 <stm32mp1_calib_init+0x82>
2ffef09c:	2001      	movs	r0, #1
2ffef09e:	f006 fc29 	bl	2fff58f4 <stm32mp_clk_get_rate>
2ffef0a2:	6160      	str	r0, [r4, #20]
2ffef0a4:	f004 f800 	bl	2fff30a8 <stm32mp_rcc_base>
2ffef0a8:	69c3      	ldr	r3, [r0, #28]
2ffef0aa:	4620      	mov	r0, r4
2ffef0ac:	f3c3 4307 	ubfx	r3, r3, #16, #8
2ffef0b0:	6063      	str	r3, [r4, #4]
2ffef0b2:	f7ff fdf9 	bl	2ffeeca8 <trim_table_init>
2ffef0b6:	6860      	ldr	r0, [r4, #4]
2ffef0b8:	6a23      	ldr	r3, [r4, #32]
2ffef0ba:	4798      	blx	r3
2ffef0bc:	4620      	mov	r0, r4
2ffef0be:	f7ff fe79 	bl	2ffeedb4 <rcc_calibration>
2ffef0c2:	480e      	ldr	r0, [pc, #56]	; (2ffef0fc <stm32mp1_calib_init+0xbc>)
2ffef0c4:	2100      	movs	r1, #0
2ffef0c6:	f005 fe8d 	bl	2fff4de4 <fdt_rcc_read_uint32_default>
2ffef0ca:	4604      	mov	r4, r0
2ffef0cc:	f003 ffdd 	bl	2fff308a <plat_get_syscnt_freq2>
2ffef0d0:	4360      	muls	r0, r4
2ffef0d2:	4b0b      	ldr	r3, [pc, #44]	; (2ffef100 <stm32mp1_calib_init+0xc0>)
2ffef0d4:	6018      	str	r0, [r3, #0]
2ffef0d6:	b120      	cbz	r0, 2ffef0e2 <stm32mp1_calib_init+0xa2>
2ffef0d8:	ee0e 0f12 	mcr	15, 0, r0, cr14, cr2, {0}
2ffef0dc:	2301      	movs	r3, #1
2ffef0de:	ee0e 3f32 	mcr	15, 0, r3, cr14, cr2, {1}
2ffef0e2:	4808      	ldr	r0, [pc, #32]	; (2ffef104 <stm32mp1_calib_init+0xc4>)
2ffef0e4:	f005 fea5 	bl	2fff4e32 <fdt_rcc_enable_it>
2ffef0e8:	b002      	add	sp, #8
2ffef0ea:	bd10      	pop	{r4, pc}
2ffef0ec:	2fffa8ae 	.word	0x2fffa8ae
2ffef0f0:	2fffd0ec 	.word	0x2fffd0ec
2ffef0f4:	2fffa8b9 	.word	0x2fffa8b9
2ffef0f8:	2fffd044 	.word	0x2fffd044
2ffef0fc:	2fffa8c4 	.word	0x2fffa8c4
2ffef100:	2fffe2b4 	.word	0x2fffe2b4
2ffef104:	2fffa8cf 	.word	0x2fffa8cf

2ffef108 <etzpc_configure_decprot>:
2ffef108:	4a0d      	ldr	r2, [pc, #52]	; (2ffef140 <etzpc_configure_decprot+0x38>)
2ffef10a:	b538      	push	{r3, r4, r5, lr}
2ffef10c:	0043      	lsls	r3, r0, #1
2ffef10e:	0905      	lsrs	r5, r0, #4
2ffef110:	f003 041e 	and.w	r4, r3, #30
2ffef114:	f001 0303 	and.w	r3, r1, #3
2ffef118:	7991      	ldrb	r1, [r2, #6]
2ffef11a:	4288      	cmp	r0, r1
2ffef11c:	d303      	bcc.n	2ffef126 <etzpc_configure_decprot+0x1e>
2ffef11e:	4809      	ldr	r0, [pc, #36]	; (2ffef144 <etzpc_configure_decprot+0x3c>)
2ffef120:	2198      	movs	r1, #152	; 0x98
2ffef122:	f00a fff9 	bl	2fffa118 <__assert>
2ffef126:	6812      	ldr	r2, [r2, #0]
2ffef128:	2003      	movs	r0, #3
2ffef12a:	40a3      	lsls	r3, r4
2ffef12c:	40a0      	lsls	r0, r4
2ffef12e:	3210      	adds	r2, #16
2ffef130:	f852 1025 	ldr.w	r1, [r2, r5, lsl #2]
2ffef134:	ea21 0100 	bic.w	r1, r1, r0
2ffef138:	4319      	orrs	r1, r3
2ffef13a:	f842 1025 	str.w	r1, [r2, r5, lsl #2]
2ffef13e:	bd38      	pop	{r3, r4, r5, pc}
2ffef140:	2fffe2b8 	.word	0x2fffe2b8
2ffef144:	2fffa8d7 	.word	0x2fffa8d7

2ffef148 <etzpc_get_decprot>:
2ffef148:	490a      	ldr	r1, [pc, #40]	; (2ffef174 <etzpc_get_decprot+0x2c>)
2ffef14a:	b510      	push	{r4, lr}
2ffef14c:	680a      	ldr	r2, [r1, #0]
2ffef14e:	7989      	ldrb	r1, [r1, #6]
2ffef150:	0043      	lsls	r3, r0, #1
2ffef152:	3210      	adds	r2, #16
2ffef154:	4288      	cmp	r0, r1
2ffef156:	f003 031e 	and.w	r3, r3, #30
2ffef15a:	ea4f 1410 	mov.w	r4, r0, lsr #4
2ffef15e:	d303      	bcc.n	2ffef168 <etzpc_get_decprot+0x20>
2ffef160:	4805      	ldr	r0, [pc, #20]	; (2ffef178 <etzpc_get_decprot+0x30>)
2ffef162:	21ab      	movs	r1, #171	; 0xab
2ffef164:	f00a ffd8 	bl	2fffa118 <__assert>
2ffef168:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
2ffef16c:	40d8      	lsrs	r0, r3
2ffef16e:	f000 0003 	and.w	r0, r0, #3
2ffef172:	bd10      	pop	{r4, pc}
2ffef174:	2fffe2b8 	.word	0x2fffe2b8
2ffef178:	2fffa8d7 	.word	0x2fffa8d7

2ffef17c <etzpc_lock_decprot>:
2ffef17c:	4909      	ldr	r1, [pc, #36]	; (2ffef1a4 <etzpc_lock_decprot+0x28>)
2ffef17e:	f000 031f 	and.w	r3, r0, #31
2ffef182:	2201      	movs	r2, #1
2ffef184:	b510      	push	{r4, lr}
2ffef186:	409a      	lsls	r2, r3
2ffef188:	680b      	ldr	r3, [r1, #0]
2ffef18a:	7989      	ldrb	r1, [r1, #6]
2ffef18c:	0944      	lsrs	r4, r0, #5
2ffef18e:	3330      	adds	r3, #48	; 0x30
2ffef190:	4288      	cmp	r0, r1
2ffef192:	d303      	bcc.n	2ffef19c <etzpc_lock_decprot+0x20>
2ffef194:	4804      	ldr	r0, [pc, #16]	; (2ffef1a8 <etzpc_lock_decprot+0x2c>)
2ffef196:	21bd      	movs	r1, #189	; 0xbd
2ffef198:	f00a ffbe 	bl	2fffa118 <__assert>
2ffef19c:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
2ffef1a0:	bd10      	pop	{r4, pc}
2ffef1a2:	bf00      	nop
2ffef1a4:	2fffe2b8 	.word	0x2fffe2b8
2ffef1a8:	2fffa8d7 	.word	0x2fffa8d7

2ffef1ac <etzpc_configure_tzma>:
2ffef1ac:	b508      	push	{r3, lr}
2ffef1ae:	4b06      	ldr	r3, [pc, #24]	; (2ffef1c8 <etzpc_configure_tzma+0x1c>)
2ffef1b0:	795a      	ldrb	r2, [r3, #5]
2ffef1b2:	4290      	cmp	r0, r2
2ffef1b4:	d303      	bcc.n	2ffef1be <etzpc_configure_tzma+0x12>
2ffef1b6:	4805      	ldr	r0, [pc, #20]	; (2ffef1cc <etzpc_configure_tzma+0x20>)
2ffef1b8:	21c9      	movs	r1, #201	; 0xc9
2ffef1ba:	f00a ffad 	bl	2fffa118 <__assert>
2ffef1be:	681b      	ldr	r3, [r3, #0]
2ffef1c0:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
2ffef1c4:	bd08      	pop	{r3, pc}
2ffef1c6:	bf00      	nop
2ffef1c8:	2fffe2b8 	.word	0x2fffe2b8
2ffef1cc:	2fffa8d7 	.word	0x2fffa8d7

2ffef1d0 <etzpc_init>:
2ffef1d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2ffef1d4:	b087      	sub	sp, #28
2ffef1d6:	4a36      	ldr	r2, [pc, #216]	; (2ffef2b0 <etzpc_init+0xe0>)
2ffef1d8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffef1dc:	a802      	add	r0, sp, #8
2ffef1de:	f009 faf3 	bl	2fff87c8 <dt_get_node>
2ffef1e2:	1e05      	subs	r5, r0, #0
2ffef1e4:	db5d      	blt.n	2ffef2a2 <etzpc_init+0xd2>
2ffef1e6:	9b05      	ldr	r3, [sp, #20]
2ffef1e8:	2b02      	cmp	r3, #2
2ffef1ea:	d15d      	bne.n	2ffef2a8 <etzpc_init+0xd8>
2ffef1ec:	9a02      	ldr	r2, [sp, #8]
2ffef1ee:	2400      	movs	r4, #0
2ffef1f0:	4e30      	ldr	r6, [pc, #192]	; (2ffef2b4 <etzpc_init+0xe4>)
2ffef1f2:	4668      	mov	r0, sp
2ffef1f4:	f8d2 33f0 	ldr.w	r3, [r2, #1008]	; 0x3f0
2ffef1f8:	6032      	str	r2, [r6, #0]
2ffef1fa:	0a19      	lsrs	r1, r3, #8
2ffef1fc:	7173      	strb	r3, [r6, #5]
2ffef1fe:	71b1      	strb	r1, [r6, #6]
2ffef200:	0c19      	lsrs	r1, r3, #16
2ffef202:	0e1b      	lsrs	r3, r3, #24
2ffef204:	7133      	strb	r3, [r6, #4]
2ffef206:	f892 33f4 	ldrb.w	r3, [r2, #1012]	; 0x3f4
2ffef20a:	71f1      	strb	r1, [r6, #7]
2ffef20c:	7233      	strb	r3, [r6, #8]
2ffef20e:	9401      	str	r4, [sp, #4]
2ffef210:	f009 f9ee 	bl	2fff85f0 <fdt_get_address>
2ffef214:	2800      	cmp	r0, #0
2ffef216:	d041      	beq.n	2ffef29c <etzpc_init+0xcc>
2ffef218:	4a27      	ldr	r2, [pc, #156]	; (2ffef2b8 <etzpc_init+0xe8>)
2ffef21a:	4629      	mov	r1, r5
2ffef21c:	9800      	ldr	r0, [sp, #0]
2ffef21e:	ab01      	add	r3, sp, #4
2ffef220:	f00a fddd 	bl	2fff9dde <fdt_getprop>
2ffef224:	4605      	mov	r5, r0
2ffef226:	bbb8      	cbnz	r0, 2ffef298 <etzpc_init+0xc8>
2ffef228:	4824      	ldr	r0, [pc, #144]	; (2ffef2bc <etzpc_init+0xec>)
2ffef22a:	f003 fd77 	bl	2fff2d1c <tf_log>
2ffef22e:	2000      	movs	r0, #0
2ffef230:	e02f      	b.n	2ffef292 <etzpc_init+0xc2>
2ffef232:	f3c7 2001 	ubfx	r0, r7, #8, #2
2ffef236:	f004 f92b 	bl	2fff3490 <stm32mp_etzpc_binding2decprot>
2ffef23a:	4601      	mov	r1, r0
2ffef23c:	4681      	mov	r9, r0
2ffef23e:	4620      	mov	r0, r4
2ffef240:	f001 fc2a 	bl	2fff0a98 <stm32mp1_register_etzpc_decprot>
2ffef244:	4649      	mov	r1, r9
2ffef246:	4620      	mov	r0, r4
2ffef248:	f7ff ff5e 	bl	2ffef108 <etzpc_configure_decprot>
2ffef24c:	07fb      	lsls	r3, r7, #31
2ffef24e:	d502      	bpl.n	2ffef256 <etzpc_init+0x86>
2ffef250:	4620      	mov	r0, r4
2ffef252:	f7ff ff93 	bl	2ffef17c <etzpc_lock_decprot>
2ffef256:	f108 0801 	add.w	r8, r8, #1
2ffef25a:	9b01      	ldr	r3, [sp, #4]
2ffef25c:	ebb8 0f93 	cmp.w	r8, r3, lsr #2
2ffef260:	d2e5      	bcs.n	2ffef22e <etzpc_init+0x5e>
2ffef262:	f855 3028 	ldr.w	r3, [r5, r8, lsl #2]
2ffef266:	0e1c      	lsrs	r4, r3, #24
2ffef268:	f3c3 2207 	ubfx	r2, r3, #8, #8
2ffef26c:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
2ffef270:	f3c3 4307 	ubfx	r3, r3, #16, #8
2ffef274:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
2ffef278:	ea44 2703 	orr.w	r7, r4, r3, lsl #8
2ffef27c:	79b3      	ldrb	r3, [r6, #6]
2ffef27e:	f3c4 4407 	ubfx	r4, r4, #16, #8
2ffef282:	429c      	cmp	r4, r3
2ffef284:	d3d5      	bcc.n	2ffef232 <etzpc_init+0x62>
2ffef286:	480e      	ldr	r0, [pc, #56]	; (2ffef2c0 <etzpc_init+0xf0>)
2ffef288:	4621      	mov	r1, r4
2ffef28a:	f003 fd47 	bl	2fff2d1c <tf_log>
2ffef28e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffef292:	b007      	add	sp, #28
2ffef294:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffef298:	46a0      	mov	r8, r4
2ffef29a:	e7de      	b.n	2ffef25a <etzpc_init+0x8a>
2ffef29c:	f06f 0001 	mvn.w	r0, #1
2ffef2a0:	e7f7      	b.n	2ffef292 <etzpc_init+0xc2>
2ffef2a2:	f06f 0004 	mvn.w	r0, #4
2ffef2a6:	e7f4      	b.n	2ffef292 <etzpc_init+0xc2>
2ffef2a8:	f06f 000c 	mvn.w	r0, #12
2ffef2ac:	e7f1      	b.n	2ffef292 <etzpc_init+0xc2>
2ffef2ae:	bf00      	nop
2ffef2b0:	2fffa8f0 	.word	0x2fffa8f0
2ffef2b4:	2fffe2b8 	.word	0x2fffe2b8
2ffef2b8:	2fffa8ff 	.word	0x2fffa8ff
2ffef2bc:	2fffa90a 	.word	0x2fffa90a
2ffef2c0:	2fffa936 	.word	0x2fffa936

2ffef2c4 <stm32_rng_read>:
2ffef2c4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2ffef2c8:	4606      	mov	r6, r0
2ffef2ca:	4d34      	ldr	r5, [pc, #208]	; (2ffef39c <stm32_rng_read+0xd8>)
2ffef2cc:	460c      	mov	r4, r1
2ffef2ce:	682b      	ldr	r3, [r5, #0]
2ffef2d0:	2b00      	cmp	r3, #0
2ffef2d2:	d05f      	beq.n	2ffef394 <stm32_rng_read+0xd0>
2ffef2d4:	6868      	ldr	r0, [r5, #4]
2ffef2d6:	f006 fae1 	bl	2fff589c <stm32mp_clk_enable>
2ffef2da:	682b      	ldr	r3, [r5, #0]
2ffef2dc:	681a      	ldr	r2, [r3, #0]
2ffef2de:	0751      	lsls	r1, r2, #29
2ffef2e0:	d401      	bmi.n	2ffef2e6 <stm32_rng_read+0x22>
2ffef2e2:	2224      	movs	r2, #36	; 0x24
2ffef2e4:	601a      	str	r2, [r3, #0]
2ffef2e6:	4637      	mov	r7, r6
2ffef2e8:	2c00      	cmp	r4, #0
2ffef2ea:	d043      	beq.n	2ffef374 <stm32_rng_read+0xb0>
2ffef2ec:	f242 7810 	movw	r8, #10000	; 0x2710
2ffef2f0:	682b      	ldr	r3, [r5, #0]
2ffef2f2:	685a      	ldr	r2, [r3, #4]
2ffef2f4:	f012 0f44 	tst.w	r2, #68	; 0x44
2ffef2f8:	d01b      	beq.n	2ffef332 <stm32_rng_read+0x6e>
2ffef2fa:	685a      	ldr	r2, [r3, #4]
2ffef2fc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
2ffef300:	605a      	str	r2, [r3, #4]
2ffef302:	f3bf 8f5f 	dmb	sy
2ffef306:	682b      	ldr	r3, [r5, #0]
2ffef308:	f103 0208 	add.w	r2, r3, #8
2ffef30c:	230c      	movs	r3, #12
2ffef30e:	6811      	ldr	r1, [r2, #0]
2ffef310:	3b01      	subs	r3, #1
2ffef312:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
2ffef316:	d1fa      	bne.n	2ffef30e <stm32_rng_read+0x4a>
2ffef318:	f3bf 8f5f 	dmb	sy
2ffef31c:	682b      	ldr	r3, [r5, #0]
2ffef31e:	685b      	ldr	r3, [r3, #4]
2ffef320:	065a      	lsls	r2, r3, #25
2ffef322:	d506      	bpl.n	2ffef332 <stm32_rng_read+0x6e>
2ffef324:	481e      	ldr	r0, [pc, #120]	; (2ffef3a0 <stm32_rng_read+0xdc>)
2ffef326:	f003 fcf9 	bl	2fff2d1c <tf_log>
2ffef32a:	f003 fd9b 	bl	2fff2e64 <console_flush>
2ffef32e:	f009 eeba 	blx	2fff90a4 <do_panic>
2ffef332:	200a      	movs	r0, #10
2ffef334:	f005 f88c 	bl	2fff4450 <udelay>
2ffef338:	f1b8 0801 	subs.w	r8, r8, #1
2ffef33c:	d027      	beq.n	2ffef38e <stm32_rng_read+0xca>
2ffef33e:	682b      	ldr	r3, [r5, #0]
2ffef340:	685b      	ldr	r3, [r3, #4]
2ffef342:	07db      	lsls	r3, r3, #31
2ffef344:	d5d4      	bpl.n	2ffef2f0 <stm32_rng_read+0x2c>
2ffef346:	f04f 0804 	mov.w	r8, #4
2ffef34a:	682b      	ldr	r3, [r5, #0]
2ffef34c:	2c04      	cmp	r4, #4
2ffef34e:	46a1      	mov	r9, r4
2ffef350:	bf28      	it	cs
2ffef352:	f04f 0904 	movcs.w	r9, #4
2ffef356:	689b      	ldr	r3, [r3, #8]
2ffef358:	4638      	mov	r0, r7
2ffef35a:	eba4 0409 	sub.w	r4, r4, r9
2ffef35e:	464a      	mov	r2, r9
2ffef360:	9301      	str	r3, [sp, #4]
2ffef362:	a901      	add	r1, sp, #4
2ffef364:	444f      	add	r7, r9
2ffef366:	f00a feff 	bl	2fffa168 <memcpy>
2ffef36a:	f1b8 0801 	subs.w	r8, r8, #1
2ffef36e:	d0bb      	beq.n	2ffef2e8 <stm32_rng_read+0x24>
2ffef370:	2c00      	cmp	r4, #0
2ffef372:	d1ea      	bne.n	2ffef34a <stm32_rng_read+0x86>
2ffef374:	6868      	ldr	r0, [r5, #4]
2ffef376:	f006 fa94 	bl	2fff58a2 <stm32mp_clk_disable>
2ffef37a:	b124      	cbz	r4, 2ffef386 <stm32_rng_read+0xc2>
2ffef37c:	1bba      	subs	r2, r7, r6
2ffef37e:	2100      	movs	r1, #0
2ffef380:	4630      	mov	r0, r6
2ffef382:	f00a ff12 	bl	2fffa1aa <memset>
2ffef386:	4620      	mov	r0, r4
2ffef388:	b003      	add	sp, #12
2ffef38a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffef38e:	f06f 043b 	mvn.w	r4, #59	; 0x3b
2ffef392:	e7ef      	b.n	2ffef374 <stm32_rng_read+0xb0>
2ffef394:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2ffef398:	e7f5      	b.n	2ffef386 <stm32_rng_read+0xc2>
2ffef39a:	bf00      	nop
2ffef39c:	2fffe2c4 	.word	0x2fffe2c4
2ffef3a0:	2fffa94a 	.word	0x2fffa94a

2ffef3a4 <stm32_rng_init>:
2ffef3a4:	b510      	push	{r4, lr}
2ffef3a6:	b086      	sub	sp, #24
2ffef3a8:	a801      	add	r0, sp, #4
2ffef3aa:	f009 f921 	bl	2fff85f0 <fdt_get_address>
2ffef3ae:	b918      	cbnz	r0, 2ffef3b8 <stm32_rng_init+0x14>
2ffef3b0:	f003 fd58 	bl	2fff2e64 <console_flush>
2ffef3b4:	f009 ee76 	blx	2fff90a4 <do_panic>
2ffef3b8:	4a1d      	ldr	r2, [pc, #116]	; (2ffef430 <stm32_rng_init+0x8c>)
2ffef3ba:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffef3be:	a802      	add	r0, sp, #8
2ffef3c0:	f009 fa02 	bl	2fff87c8 <dt_get_node>
2ffef3c4:	2800      	cmp	r0, #0
2ffef3c6:	db2c      	blt.n	2ffef422 <stm32_rng_init+0x7e>
2ffef3c8:	9b05      	ldr	r3, [sp, #20]
2ffef3ca:	079a      	lsls	r2, r3, #30
2ffef3cc:	d529      	bpl.n	2ffef422 <stm32_rng_init+0x7e>
2ffef3ce:	9802      	ldr	r0, [sp, #8]
2ffef3d0:	4a18      	ldr	r2, [pc, #96]	; (2ffef434 <stm32_rng_init+0x90>)
2ffef3d2:	4290      	cmp	r0, r2
2ffef3d4:	d003      	beq.n	2ffef3de <stm32_rng_init+0x3a>
2ffef3d6:	4818      	ldr	r0, [pc, #96]	; (2ffef438 <stm32_rng_init+0x94>)
2ffef3d8:	219c      	movs	r1, #156	; 0x9c
2ffef3da:	f00a fe9d 	bl	2fffa118 <__assert>
2ffef3de:	4c17      	ldr	r4, [pc, #92]	; (2ffef43c <stm32_rng_init+0x98>)
2ffef3e0:	07db      	lsls	r3, r3, #31
2ffef3e2:	6020      	str	r0, [r4, #0]
2ffef3e4:	d520      	bpl.n	2ffef428 <stm32_rng_init+0x84>
2ffef3e6:	f001 fb37 	bl	2fff0a58 <stm32mp_register_non_secure_periph_iomem>
2ffef3ea:	9803      	ldr	r0, [sp, #12]
2ffef3ec:	2800      	cmp	r0, #0
2ffef3ee:	dbdf      	blt.n	2ffef3b0 <stm32_rng_init+0xc>
2ffef3f0:	6060      	str	r0, [r4, #4]
2ffef3f2:	f006 fa53 	bl	2fff589c <stm32mp_clk_enable>
2ffef3f6:	6860      	ldr	r0, [r4, #4]
2ffef3f8:	f006 fa53 	bl	2fff58a2 <stm32mp_clk_disable>
2ffef3fc:	9804      	ldr	r0, [sp, #16]
2ffef3fe:	2800      	cmp	r0, #0
2ffef400:	db0f      	blt.n	2ffef422 <stm32_rng_init+0x7e>
2ffef402:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffef406:	f008 ffbb 	bl	2fff8380 <stm32mp_reset_assert_to>
2ffef40a:	2800      	cmp	r0, #0
2ffef40c:	d1d0      	bne.n	2ffef3b0 <stm32_rng_init+0xc>
2ffef40e:	2014      	movs	r0, #20
2ffef410:	f005 f81e 	bl	2fff4450 <udelay>
2ffef414:	9804      	ldr	r0, [sp, #16]
2ffef416:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffef41a:	f008 ffe9 	bl	2fff83f0 <stm32mp_reset_deassert_to>
2ffef41e:	2800      	cmp	r0, #0
2ffef420:	d1c6      	bne.n	2ffef3b0 <stm32_rng_init+0xc>
2ffef422:	2000      	movs	r0, #0
2ffef424:	b006      	add	sp, #24
2ffef426:	bd10      	pop	{r4, pc}
2ffef428:	f001 fb13 	bl	2fff0a52 <stm32mp_register_secure_periph_iomem>
2ffef42c:	e7dd      	b.n	2ffef3ea <stm32_rng_init+0x46>
2ffef42e:	bf00      	nop
2ffef430:	2fffa956 	.word	0x2fffa956
2ffef434:	54003000 	.word	0x54003000
2ffef438:	2fffa963 	.word	0x2fffa963
2ffef43c:	2fffe2c4 	.word	0x2fffe2c4

2ffef440 <stm32_rtc_read_calendar>:
2ffef440:	4b0a      	ldr	r3, [pc, #40]	; (2ffef46c <stm32_rtc_read_calendar+0x2c>)
2ffef442:	681a      	ldr	r2, [r3, #0]
2ffef444:	6991      	ldr	r1, [r2, #24]
2ffef446:	0689      	lsls	r1, r1, #26
2ffef448:	d408      	bmi.n	2ffef45c <stm32_rtc_read_calendar+0x1c>
2ffef44a:	68d1      	ldr	r1, [r2, #12]
2ffef44c:	f021 0120 	bic.w	r1, r1, #32
2ffef450:	60d1      	str	r1, [r2, #12]
2ffef452:	681a      	ldr	r2, [r3, #0]
2ffef454:	320c      	adds	r2, #12
2ffef456:	6811      	ldr	r1, [r2, #0]
2ffef458:	0689      	lsls	r1, r1, #26
2ffef45a:	d5fc      	bpl.n	2ffef456 <stm32_rtc_read_calendar+0x16>
2ffef45c:	681b      	ldr	r3, [r3, #0]
2ffef45e:	689a      	ldr	r2, [r3, #8]
2ffef460:	6002      	str	r2, [r0, #0]
2ffef462:	681a      	ldr	r2, [r3, #0]
2ffef464:	6042      	str	r2, [r0, #4]
2ffef466:	685b      	ldr	r3, [r3, #4]
2ffef468:	6083      	str	r3, [r0, #8]
2ffef46a:	4770      	bx	lr
2ffef46c:	2fffe2d0 	.word	0x2fffe2d0

2ffef470 <stm32_is_a_leap_year>:
2ffef470:	0783      	lsls	r3, r0, #30
2ffef472:	d10f      	bne.n	2ffef494 <stm32_is_a_leap_year+0x24>
2ffef474:	2264      	movs	r2, #100	; 0x64
2ffef476:	fbb0 f3f2 	udiv	r3, r0, r2
2ffef47a:	fb02 0313 	mls	r3, r2, r3, r0
2ffef47e:	b95b      	cbnz	r3, 2ffef498 <stm32_is_a_leap_year+0x28>
2ffef480:	f44f 72c8 	mov.w	r2, #400	; 0x190
2ffef484:	fbb0 f3f2 	udiv	r3, r0, r2
2ffef488:	fb02 0013 	mls	r0, r2, r3, r0
2ffef48c:	fab0 f080 	clz	r0, r0
2ffef490:	0940      	lsrs	r0, r0, #5
2ffef492:	4770      	bx	lr
2ffef494:	2000      	movs	r0, #0
2ffef496:	4770      	bx	lr
2ffef498:	2001      	movs	r0, #1
2ffef49a:	4770      	bx	lr

2ffef49c <stm32_rtc_get_date>:
2ffef49c:	b510      	push	{r4, lr}
2ffef49e:	b918      	cbnz	r0, 2ffef4a8 <stm32_rtc_get_date+0xc>
2ffef4a0:	21ac      	movs	r1, #172	; 0xac
2ffef4a2:	4811      	ldr	r0, [pc, #68]	; (2ffef4e8 <stm32_rtc_get_date+0x4c>)
2ffef4a4:	f00a fe38 	bl	2fffa118 <__assert>
2ffef4a8:	b909      	cbnz	r1, 2ffef4ae <stm32_rtc_get_date+0x12>
2ffef4aa:	21ad      	movs	r1, #173	; 0xad
2ffef4ac:	e7f9      	b.n	2ffef4a2 <stm32_rtc_get_date+0x6>
2ffef4ae:	6883      	ldr	r3, [r0, #8]
2ffef4b0:	200a      	movs	r0, #10
2ffef4b2:	f3c3 3242 	ubfx	r2, r3, #13, #3
2ffef4b6:	f003 040f 	and.w	r4, r3, #15
2ffef4ba:	60ca      	str	r2, [r1, #12]
2ffef4bc:	f3c3 1201 	ubfx	r2, r3, #4, #2
2ffef4c0:	fb00 4202 	mla	r2, r0, r2, r4
2ffef4c4:	f3c3 2403 	ubfx	r4, r3, #8, #4
2ffef4c8:	610a      	str	r2, [r1, #16]
2ffef4ca:	f3c3 3200 	ubfx	r2, r3, #12, #1
2ffef4ce:	fb00 4202 	mla	r2, r0, r2, r4
2ffef4d2:	614a      	str	r2, [r1, #20]
2ffef4d4:	f3c3 5203 	ubfx	r2, r3, #20, #4
2ffef4d8:	f3c3 4303 	ubfx	r3, r3, #16, #4
2ffef4dc:	f503 63fa 	add.w	r3, r3, #2000	; 0x7d0
2ffef4e0:	fb00 3302 	mla	r3, r0, r2, r3
2ffef4e4:	618b      	str	r3, [r1, #24]
2ffef4e6:	bd10      	pop	{r4, pc}
2ffef4e8:	2fffa97e 	.word	0x2fffa97e

2ffef4ec <stm32_rtc_get_time>:
2ffef4ec:	b510      	push	{r4, lr}
2ffef4ee:	b918      	cbnz	r0, 2ffef4f8 <stm32_rtc_get_time+0xc>
2ffef4f0:	2196      	movs	r1, #150	; 0x96
2ffef4f2:	4811      	ldr	r0, [pc, #68]	; (2ffef538 <stm32_rtc_get_time+0x4c>)
2ffef4f4:	f00a fe10 	bl	2fffa118 <__assert>
2ffef4f8:	b909      	cbnz	r1, 2ffef4fe <stm32_rtc_get_time+0x12>
2ffef4fa:	2197      	movs	r1, #151	; 0x97
2ffef4fc:	e7f9      	b.n	2ffef4f2 <stm32_rtc_get_time+0x6>
2ffef4fe:	6843      	ldr	r3, [r0, #4]
2ffef500:	240a      	movs	r4, #10
2ffef502:	f3c3 4003 	ubfx	r0, r3, #16, #4
2ffef506:	f3c3 5201 	ubfx	r2, r3, #20, #2
2ffef50a:	fb04 0202 	mla	r2, r4, r2, r0
2ffef50e:	0258      	lsls	r0, r3, #9
2ffef510:	f04f 000a 	mov.w	r0, #10
2ffef514:	f3c3 2403 	ubfx	r4, r3, #8, #4
2ffef518:	bf48      	it	mi
2ffef51a:	320c      	addmi	r2, #12
2ffef51c:	600a      	str	r2, [r1, #0]
2ffef51e:	f3c3 3202 	ubfx	r2, r3, #12, #3
2ffef522:	fb00 4202 	mla	r2, r0, r2, r4
2ffef526:	604a      	str	r2, [r1, #4]
2ffef528:	f3c3 1202 	ubfx	r2, r3, #4, #3
2ffef52c:	f003 030f 	and.w	r3, r3, #15
2ffef530:	fb00 3302 	mla	r3, r0, r2, r3
2ffef534:	608b      	str	r3, [r1, #8]
2ffef536:	bd10      	pop	{r4, pc}
2ffef538:	2fffa97e 	.word	0x2fffa97e

2ffef53c <stm32_rtc_regs_lock>:
2ffef53c:	b508      	push	{r3, lr}
2ffef53e:	f003 fdb6 	bl	2fff30ae <stm32mp_lock_available>
2ffef542:	b120      	cbz	r0, 2ffef54e <stm32_rtc_regs_lock+0x12>
2ffef544:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffef548:	4801      	ldr	r0, [pc, #4]	; (2ffef550 <stm32_rtc_regs_lock+0x14>)
2ffef54a:	f00d bc69 	b.w	2fffce20 <__spin_lock_from_thumb>
2ffef54e:	bd08      	pop	{r3, pc}
2ffef550:	2fffe2cc 	.word	0x2fffe2cc

2ffef554 <stm32_rtc_regs_unlock>:
2ffef554:	b508      	push	{r3, lr}
2ffef556:	f003 fdaa 	bl	2fff30ae <stm32mp_lock_available>
2ffef55a:	b120      	cbz	r0, 2ffef566 <stm32_rtc_regs_unlock+0x12>
2ffef55c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2ffef560:	4801      	ldr	r0, [pc, #4]	; (2ffef568 <stm32_rtc_regs_unlock+0x14>)
2ffef562:	f00d bc69 	b.w	2fffce38 <__spin_unlock_from_thumb>
2ffef566:	bd08      	pop	{r3, pc}
2ffef568:	2fffe2cc 	.word	0x2fffe2cc

2ffef56c <stm32_rtc_get_calendar>:
2ffef56c:	b570      	push	{r4, r5, r6, lr}
2ffef56e:	4604      	mov	r4, r0
2ffef570:	4d0d      	ldr	r5, [pc, #52]	; (2ffef5a8 <stm32_rtc_get_calendar+0x3c>)
2ffef572:	f006 faf9 	bl	2fff5b68 <stm32mp1_rtc_get_read_twice>
2ffef576:	4606      	mov	r6, r0
2ffef578:	f7ff ffe0 	bl	2ffef53c <stm32_rtc_regs_lock>
2ffef57c:	6868      	ldr	r0, [r5, #4]
2ffef57e:	f006 f98d 	bl	2fff589c <stm32mp_clk_enable>
2ffef582:	4620      	mov	r0, r4
2ffef584:	f7ff ff5c 	bl	2ffef440 <stm32_rtc_read_calendar>
2ffef588:	b13e      	cbz	r6, 2ffef59a <stm32_rtc_get_calendar+0x2e>
2ffef58a:	6866      	ldr	r6, [r4, #4]
2ffef58c:	f7ff ff58 	bl	2ffef440 <stm32_rtc_read_calendar>
2ffef590:	6863      	ldr	r3, [r4, #4]
2ffef592:	42b3      	cmp	r3, r6
2ffef594:	d001      	beq.n	2ffef59a <stm32_rtc_get_calendar+0x2e>
2ffef596:	f7ff ff53 	bl	2ffef440 <stm32_rtc_read_calendar>
2ffef59a:	6868      	ldr	r0, [r5, #4]
2ffef59c:	f006 f981 	bl	2fff58a2 <stm32mp_clk_disable>
2ffef5a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2ffef5a4:	f7ff bfd6 	b.w	2ffef554 <stm32_rtc_regs_unlock>
2ffef5a8:	2fffe2d0 	.word	0x2fffe2d0

2ffef5ac <stm32_rtc_diff_calendar>:
2ffef5ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffef5b0:	4607      	mov	r7, r0
2ffef5b2:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 2ffef76c <stm32_rtc_diff_calendar+0x1c0>
2ffef5b6:	b093      	sub	sp, #76	; 0x4c
2ffef5b8:	460e      	mov	r6, r1
2ffef5ba:	f8d8 0004 	ldr.w	r0, [r8, #4]
2ffef5be:	f006 f96d 	bl	2fff589c <stm32mp_clk_enable>
2ffef5c2:	a904      	add	r1, sp, #16
2ffef5c4:	4638      	mov	r0, r7
2ffef5c6:	f7ff ff69 	bl	2ffef49c <stm32_rtc_get_date>
2ffef5ca:	a90b      	add	r1, sp, #44	; 0x2c
2ffef5cc:	4630      	mov	r0, r6
2ffef5ce:	f7ff ff65 	bl	2ffef49c <stm32_rtc_get_date>
2ffef5d2:	a904      	add	r1, sp, #16
2ffef5d4:	4638      	mov	r0, r7
2ffef5d6:	f7ff ff89 	bl	2ffef4ec <stm32_rtc_get_time>
2ffef5da:	a90b      	add	r1, sp, #44	; 0x2c
2ffef5dc:	4630      	mov	r0, r6
2ffef5de:	f7ff ff85 	bl	2ffef4ec <stm32_rtc_get_time>
2ffef5e2:	f8d8 3000 	ldr.w	r3, [r8]
2ffef5e6:	f04f 0c3c 	mov.w	ip, #60	; 0x3c
2ffef5ea:	9904      	ldr	r1, [sp, #16]
2ffef5ec:	691a      	ldr	r2, [r3, #16]
2ffef5ee:	691b      	ldr	r3, [r3, #16]
2ffef5f0:	f3c2 0e0e 	ubfx	lr, r2, #0, #15
2ffef5f4:	9a05      	ldr	r2, [sp, #20]
2ffef5f6:	f3c3 090e 	ubfx	r9, r3, #0, #15
2ffef5fa:	2300      	movs	r3, #0
2ffef5fc:	fbec 2301 	umlal	r2, r3, ip, r1
2ffef600:	980c      	ldr	r0, [sp, #48]	; 0x30
2ffef602:	2100      	movs	r1, #0
2ffef604:	fba2 450c 	umull	r4, r5, r2, ip
2ffef608:	fb0c 5503 	mla	r5, ip, r3, r5
2ffef60c:	9b06      	ldr	r3, [sp, #24]
2ffef60e:	f8cd 8004 	str.w	r8, [sp, #4]
2ffef612:	18e4      	adds	r4, r4, r3
2ffef614:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
2ffef616:	f145 0500 	adc.w	r5, r5, #0
2ffef61a:	fbec 0103 	umlal	r0, r1, ip, r3
2ffef61e:	fba0 230c 	umull	r2, r3, r0, ip
2ffef622:	fb0c 3301 	mla	r3, ip, r1, r3
2ffef626:	990d      	ldr	r1, [sp, #52]	; 0x34
2ffef628:	1852      	adds	r2, r2, r1
2ffef62a:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2ffef62e:	f143 0300 	adc.w	r3, r3, #0
2ffef632:	1aa2      	subs	r2, r4, r2
2ffef634:	eb65 0003 	sbc.w	r0, r5, r3
2ffef638:	fba2 2301 	umull	r2, r3, r2, r1
2ffef63c:	fb01 3300 	mla	r3, r1, r0, r3
2ffef640:	8834      	ldrh	r4, [r6, #0]
2ffef642:	8838      	ldrh	r0, [r7, #0]
2ffef644:	eba9 0404 	sub.w	r4, r9, r4
2ffef648:	f109 0901 	add.w	r9, r9, #1
2ffef64c:	ebae 0000 	sub.w	r0, lr, r0
2ffef650:	f10e 0e01 	add.w	lr, lr, #1
2ffef654:	4348      	muls	r0, r1
2ffef656:	4361      	muls	r1, r4
2ffef658:	fbb0 f0fe 	udiv	r0, r0, lr
2ffef65c:	fbb1 f9f9 	udiv	r9, r1, r9
2ffef660:	ebb0 0009 	subs.w	r0, r0, r9
2ffef664:	eb60 0100 	sbc.w	r1, r0, r0
2ffef668:	eb12 0a00 	adds.w	sl, r2, r0
2ffef66c:	eb43 0b01 	adc.w	fp, r3, r1
2ffef670:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
2ffef674:	9b08      	ldr	r3, [sp, #32]
2ffef676:	9c10      	ldr	r4, [sp, #64]	; 0x40
2ffef678:	454b      	cmp	r3, r9
2ffef67a:	eba3 0109 	sub.w	r1, r3, r9
2ffef67e:	bf38      	it	cc
2ffef680:	4a38      	ldrcc	r2, [pc, #224]	; (2ffef764 <stm32_rtc_diff_calendar+0x1b8>)
2ffef682:	9d09      	ldr	r5, [sp, #36]	; 0x24
2ffef684:	bf3e      	ittt	cc
2ffef686:	1912      	addcc	r2, r2, r4
2ffef688:	f812 2c01 	ldrbcc.w	r2, [r2, #-1]
2ffef68c:	1889      	addcc	r1, r1, r2
2ffef68e:	1c62      	adds	r2, r4, #1
2ffef690:	4295      	cmp	r5, r2
2ffef692:	d90a      	bls.n	2ffef6aa <stm32_rtc_diff_calendar+0xfe>
2ffef694:	4e33      	ldr	r6, [pc, #204]	; (2ffef764 <stm32_rtc_diff_calendar+0x1b8>)
2ffef696:	4610      	mov	r0, r2
2ffef698:	4426      	add	r6, r4
2ffef69a:	280b      	cmp	r0, #11
2ffef69c:	d805      	bhi.n	2ffef6aa <stm32_rtc_diff_calendar+0xfe>
2ffef69e:	f816 7b01 	ldrb.w	r7, [r6], #1
2ffef6a2:	3001      	adds	r0, #1
2ffef6a4:	4285      	cmp	r5, r0
2ffef6a6:	4439      	add	r1, r7
2ffef6a8:	d8f7      	bhi.n	2ffef69a <stm32_rtc_diff_calendar+0xee>
2ffef6aa:	1e60      	subs	r0, r4, #1
2ffef6ac:	4285      	cmp	r5, r0
2ffef6ae:	d213      	bcs.n	2ffef6d8 <stm32_rtc_diff_calendar+0x12c>
2ffef6b0:	4f2c      	ldr	r7, [pc, #176]	; (2ffef764 <stm32_rtc_diff_calendar+0x1b8>)
2ffef6b2:	2601      	movs	r6, #1
2ffef6b4:	4638      	mov	r0, r7
2ffef6b6:	42b5      	cmp	r5, r6
2ffef6b8:	d901      	bls.n	2ffef6be <stm32_rtc_diff_calendar+0x112>
2ffef6ba:	2e0c      	cmp	r6, #12
2ffef6bc:	d101      	bne.n	2ffef6c2 <stm32_rtc_diff_calendar+0x116>
2ffef6be:	4420      	add	r0, r4
2ffef6c0:	e008      	b.n	2ffef6d4 <stm32_rtc_diff_calendar+0x128>
2ffef6c2:	f817 cb01 	ldrb.w	ip, [r7], #1
2ffef6c6:	3601      	adds	r6, #1
2ffef6c8:	4461      	add	r1, ip
2ffef6ca:	e7f4      	b.n	2ffef6b6 <stm32_rtc_diff_calendar+0x10a>
2ffef6cc:	f810 6b01 	ldrb.w	r6, [r0], #1
2ffef6d0:	3201      	adds	r2, #1
2ffef6d2:	4431      	add	r1, r6
2ffef6d4:	2a0b      	cmp	r2, #11
2ffef6d6:	d9f9      	bls.n	2ffef6cc <stm32_rtc_diff_calendar+0x120>
2ffef6d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
2ffef6da:	9f0a      	ldr	r7, [sp, #40]	; 0x28
2ffef6dc:	1c56      	adds	r6, r2, #1
2ffef6de:	42b7      	cmp	r7, r6
2ffef6e0:	d907      	bls.n	2ffef6f2 <stm32_rtc_diff_calendar+0x146>
2ffef6e2:	1ab8      	subs	r0, r7, r2
2ffef6e4:	f240 1c6d 	movw	ip, #365	; 0x16d
2ffef6e8:	fb0c 1100 	mla	r1, ip, r0, r1
2ffef6ec:	f46f 70b6 	mvn.w	r0, #364	; 0x16c
2ffef6f0:	4401      	add	r1, r0
2ffef6f2:	9203      	str	r2, [sp, #12]
2ffef6f4:	9302      	str	r3, [sp, #8]
2ffef6f6:	b179      	cbz	r1, 2ffef718 <stm32_rtc_diff_calendar+0x16c>
2ffef6f8:	4638      	mov	r0, r7
2ffef6fa:	f7ff feb9 	bl	2ffef470 <stm32_is_a_leap_year>
2ffef6fe:	9a03      	ldr	r2, [sp, #12]
2ffef700:	4680      	mov	r8, r0
2ffef702:	9b02      	ldr	r3, [sp, #8]
2ffef704:	4297      	cmp	r7, r2
2ffef706:	d113      	bne.n	2ffef730 <stm32_rtc_diff_calendar+0x184>
2ffef708:	b130      	cbz	r0, 2ffef718 <stm32_rtc_diff_calendar+0x16c>
2ffef70a:	2c02      	cmp	r4, #2
2ffef70c:	d804      	bhi.n	2ffef718 <stm32_rtc_diff_calendar+0x16c>
2ffef70e:	2d02      	cmp	r5, #2
2ffef710:	d902      	bls.n	2ffef718 <stm32_rtc_diff_calendar+0x16c>
2ffef712:	2b1c      	cmp	r3, #28
2ffef714:	d800      	bhi.n	2ffef718 <stm32_rtc_diff_calendar+0x16c>
2ffef716:	3101      	adds	r1, #1
2ffef718:	4b13      	ldr	r3, [pc, #76]	; (2ffef768 <stm32_rtc_diff_calendar+0x1bc>)
2ffef71a:	fbe3 ab01 	umlal	sl, fp, r3, r1
2ffef71e:	9b01      	ldr	r3, [sp, #4]
2ffef720:	6858      	ldr	r0, [r3, #4]
2ffef722:	f006 f8be 	bl	2fff58a2 <stm32mp_clk_disable>
2ffef726:	4650      	mov	r0, sl
2ffef728:	4659      	mov	r1, fp
2ffef72a:	b013      	add	sp, #76	; 0x4c
2ffef72c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffef730:	4610      	mov	r0, r2
2ffef732:	f7ff fe9d 	bl	2ffef470 <stm32_is_a_leap_year>
2ffef736:	b128      	cbz	r0, 2ffef744 <stm32_rtc_diff_calendar+0x198>
2ffef738:	2c02      	cmp	r4, #2
2ffef73a:	d803      	bhi.n	2ffef744 <stm32_rtc_diff_calendar+0x198>
2ffef73c:	f1b9 0f1c 	cmp.w	r9, #28
2ffef740:	bf98      	it	ls
2ffef742:	3101      	addls	r1, #1
2ffef744:	f1b8 0f00 	cmp.w	r8, #0
2ffef748:	d002      	beq.n	2ffef750 <stm32_rtc_diff_calendar+0x1a4>
2ffef74a:	2d02      	cmp	r5, #2
2ffef74c:	d900      	bls.n	2ffef750 <stm32_rtc_diff_calendar+0x1a4>
2ffef74e:	3101      	adds	r1, #1
2ffef750:	42b7      	cmp	r7, r6
2ffef752:	d9e1      	bls.n	2ffef718 <stm32_rtc_diff_calendar+0x16c>
2ffef754:	4630      	mov	r0, r6
2ffef756:	f7ff fe8b 	bl	2ffef470 <stm32_is_a_leap_year>
2ffef75a:	b100      	cbz	r0, 2ffef75e <stm32_rtc_diff_calendar+0x1b2>
2ffef75c:	3101      	adds	r1, #1
2ffef75e:	3601      	adds	r6, #1
2ffef760:	e7f6      	b.n	2ffef750 <stm32_rtc_diff_calendar+0x1a4>
2ffef762:	bf00      	nop
2ffef764:	2fffa9a9 	.word	0x2fffa9a9
2ffef768:	05265c00 	.word	0x05265c00
2ffef76c:	2fffe2d0 	.word	0x2fffe2d0

2ffef770 <stm32_rtc_get_timestamp>:
2ffef770:	b530      	push	{r4, r5, lr}
2ffef772:	b085      	sub	sp, #20
2ffef774:	4c17      	ldr	r4, [pc, #92]	; (2ffef7d4 <stm32_rtc_get_timestamp+0x64>)
2ffef776:	4605      	mov	r5, r0
2ffef778:	f7ff fee0 	bl	2ffef53c <stm32_rtc_regs_lock>
2ffef77c:	6860      	ldr	r0, [r4, #4]
2ffef77e:	f006 f88d 	bl	2fff589c <stm32mp_clk_enable>
2ffef782:	6823      	ldr	r3, [r4, #0]
2ffef784:	6d1a      	ldr	r2, [r3, #80]	; 0x50
2ffef786:	0711      	lsls	r1, r2, #28
2ffef788:	d51d      	bpl.n	2ffef7c6 <stm32_rtc_get_timestamp+0x56>
2ffef78a:	b91d      	cbnz	r5, 2ffef794 <stm32_rtc_get_timestamp+0x24>
2ffef78c:	4812      	ldr	r0, [pc, #72]	; (2ffef7d8 <stm32_rtc_get_timestamp+0x68>)
2ffef78e:	21c1      	movs	r1, #193	; 0xc1
2ffef790:	f00a fcc2 	bl	2fffa118 <__assert>
2ffef794:	6b1a      	ldr	r2, [r3, #48]	; 0x30
2ffef796:	4629      	mov	r1, r5
2ffef798:	a801      	add	r0, sp, #4
2ffef79a:	9202      	str	r2, [sp, #8]
2ffef79c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
2ffef79e:	9303      	str	r3, [sp, #12]
2ffef7a0:	f7ff fea4 	bl	2ffef4ec <stm32_rtc_get_time>
2ffef7a4:	4629      	mov	r1, r5
2ffef7a6:	a801      	add	r0, sp, #4
2ffef7a8:	f7ff fe78 	bl	2ffef49c <stm32_rtc_get_date>
2ffef7ac:	6822      	ldr	r2, [r4, #0]
2ffef7ae:	6dd3      	ldr	r3, [r2, #92]	; 0x5c
2ffef7b0:	f043 0308 	orr.w	r3, r3, #8
2ffef7b4:	65d3      	str	r3, [r2, #92]	; 0x5c
2ffef7b6:	6823      	ldr	r3, [r4, #0]
2ffef7b8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
2ffef7ba:	06d2      	lsls	r2, r2, #27
2ffef7bc:	bf42      	ittt	mi
2ffef7be:	6dda      	ldrmi	r2, [r3, #92]	; 0x5c
2ffef7c0:	f042 0210 	orrmi.w	r2, r2, #16
2ffef7c4:	65da      	strmi	r2, [r3, #92]	; 0x5c
2ffef7c6:	6860      	ldr	r0, [r4, #4]
2ffef7c8:	f006 f86b 	bl	2fff58a2 <stm32mp_clk_disable>
2ffef7cc:	f7ff fec2 	bl	2ffef554 <stm32_rtc_regs_unlock>
2ffef7d0:	b005      	add	sp, #20
2ffef7d2:	bd30      	pop	{r4, r5, pc}
2ffef7d4:	2fffe2d0 	.word	0x2fffe2d0
2ffef7d8:	2fffa97e 	.word	0x2fffa97e

2ffef7dc <stm32_rtc_set_tamper_timestamp>:
2ffef7dc:	b510      	push	{r4, lr}
2ffef7de:	f7ff fead 	bl	2ffef53c <stm32_rtc_regs_lock>
2ffef7e2:	4c0f      	ldr	r4, [pc, #60]	; (2ffef820 <stm32_rtc_set_tamper_timestamp+0x44>)
2ffef7e4:	6860      	ldr	r0, [r4, #4]
2ffef7e6:	f006 f859 	bl	2fff589c <stm32mp_clk_enable>
2ffef7ea:	6823      	ldr	r3, [r4, #0]
2ffef7ec:	22ca      	movs	r2, #202	; 0xca
2ffef7ee:	625a      	str	r2, [r3, #36]	; 0x24
2ffef7f0:	2253      	movs	r2, #83	; 0x53
2ffef7f2:	6823      	ldr	r3, [r4, #0]
2ffef7f4:	625a      	str	r2, [r3, #36]	; 0x24
2ffef7f6:	6822      	ldr	r2, [r4, #0]
2ffef7f8:	6993      	ldr	r3, [r2, #24]
2ffef7fa:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
2ffef7fe:	6193      	str	r3, [r2, #24]
2ffef800:	6822      	ldr	r2, [r4, #0]
2ffef802:	6a13      	ldr	r3, [r2, #32]
2ffef804:	f023 0308 	bic.w	r3, r3, #8
2ffef808:	6213      	str	r3, [r2, #32]
2ffef80a:	22ff      	movs	r2, #255	; 0xff
2ffef80c:	6823      	ldr	r3, [r4, #0]
2ffef80e:	625a      	str	r2, [r3, #36]	; 0x24
2ffef810:	6860      	ldr	r0, [r4, #4]
2ffef812:	f006 f846 	bl	2fff58a2 <stm32mp_clk_disable>
2ffef816:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffef81a:	f7ff be9b 	b.w	2ffef554 <stm32_rtc_regs_unlock>
2ffef81e:	bf00      	nop
2ffef820:	2fffe2d0 	.word	0x2fffe2d0

2ffef824 <stm32_rtc_is_timestamp_enable>:
2ffef824:	b538      	push	{r3, r4, r5, lr}
2ffef826:	4c06      	ldr	r4, [pc, #24]	; (2ffef840 <stm32_rtc_is_timestamp_enable+0x1c>)
2ffef828:	6860      	ldr	r0, [r4, #4]
2ffef82a:	f006 f837 	bl	2fff589c <stm32mp_clk_enable>
2ffef82e:	6823      	ldr	r3, [r4, #0]
2ffef830:	6860      	ldr	r0, [r4, #4]
2ffef832:	699d      	ldr	r5, [r3, #24]
2ffef834:	f006 f835 	bl	2fff58a2 <stm32mp_clk_disable>
2ffef838:	f3c5 6040 	ubfx	r0, r5, #25, #1
2ffef83c:	bd38      	pop	{r3, r4, r5, pc}
2ffef83e:	bf00      	nop
2ffef840:	2fffe2d0 	.word	0x2fffe2d0

2ffef844 <stm32_rtc_init>:
2ffef844:	b510      	push	{r4, lr}
2ffef846:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffef84a:	4c09      	ldr	r4, [pc, #36]	; (2ffef870 <stm32_rtc_init+0x2c>)
2ffef84c:	4a09      	ldr	r2, [pc, #36]	; (2ffef874 <stm32_rtc_init+0x30>)
2ffef84e:	4620      	mov	r0, r4
2ffef850:	f008 ffba 	bl	2fff87c8 <dt_get_node>
2ffef854:	2800      	cmp	r0, #0
2ffef856:	db06      	blt.n	2ffef866 <stm32_rtc_init+0x22>
2ffef858:	68e3      	ldr	r3, [r4, #12]
2ffef85a:	6820      	ldr	r0, [r4, #0]
2ffef85c:	2b02      	cmp	r3, #2
2ffef85e:	d103      	bne.n	2ffef868 <stm32_rtc_init+0x24>
2ffef860:	f001 f8f7 	bl	2fff0a52 <stm32mp_register_secure_periph_iomem>
2ffef864:	2000      	movs	r0, #0
2ffef866:	bd10      	pop	{r4, pc}
2ffef868:	f001 f8f6 	bl	2fff0a58 <stm32mp_register_non_secure_periph_iomem>
2ffef86c:	e7fa      	b.n	2ffef864 <stm32_rtc_init+0x20>
2ffef86e:	bf00      	nop
2ffef870:	2fffe2d0 	.word	0x2fffe2d0
2ffef874:	2fffa999 	.word	0x2fffa999

2ffef878 <stm32_tamp_configure_internal>:
2ffef878:	290f      	cmp	r1, #15
2ffef87a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffef87c:	d80e      	bhi.n	2ffef89c <stm32_tamp_configure_internal+0x24>
2ffef87e:	4c12      	ldr	r4, [pc, #72]	; (2ffef8c8 <stm32_tamp_configure_internal+0x50>)
2ffef880:	2500      	movs	r5, #0
2ffef882:	f04f 0e01 	mov.w	lr, #1
2ffef886:	6826      	ldr	r6, [r4, #0]
2ffef888:	f8d4 c008 	ldr.w	ip, [r4, #8]
2ffef88c:	f106 072c 	add.w	r7, r6, #44	; 0x2c
2ffef890:	b2ab      	uxth	r3, r5
2ffef892:	4299      	cmp	r1, r3
2ffef894:	d806      	bhi.n	2ffef8a4 <stm32_tamp_configure_internal+0x2c>
2ffef896:	6160      	str	r0, [r4, #20]
2ffef898:	8221      	strh	r1, [r4, #16]
2ffef89a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffef89c:	480b      	ldr	r0, [pc, #44]	; (2ffef8cc <stm32_tamp_configure_internal+0x54>)
2ffef89e:	21aa      	movs	r1, #170	; 0xaa
2ffef8a0:	f00a fc3a 	bl	2fffa118 <__assert>
2ffef8a4:	f850 3035 	ldr.w	r3, [r0, r5, lsl #3]
2ffef8a8:	1c5a      	adds	r2, r3, #1
2ffef8aa:	d00b      	beq.n	2ffef8c4 <stm32_tamp_configure_internal+0x4c>
2ffef8ac:	3310      	adds	r3, #16
2ffef8ae:	fa0e f303 	lsl.w	r3, lr, r3
2ffef8b2:	ea1c 0f03 	tst.w	ip, r3
2ffef8b6:	d005      	beq.n	2ffef8c4 <stm32_tamp_configure_internal+0x4c>
2ffef8b8:	6832      	ldr	r2, [r6, #0]
2ffef8ba:	431a      	orrs	r2, r3
2ffef8bc:	6032      	str	r2, [r6, #0]
2ffef8be:	683a      	ldr	r2, [r7, #0]
2ffef8c0:	4313      	orrs	r3, r2
2ffef8c2:	603b      	str	r3, [r7, #0]
2ffef8c4:	3501      	adds	r5, #1
2ffef8c6:	e7e3      	b.n	2ffef890 <stm32_tamp_configure_internal+0x18>
2ffef8c8:	2fffe2e0 	.word	0x2fffe2e0
2ffef8cc:	2fffa9b5 	.word	0x2fffa9b5

2ffef8d0 <stm32_tamp_configure_external>:
2ffef8d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2ffef8d4:	2907      	cmp	r1, #7
2ffef8d6:	b085      	sub	sp, #20
2ffef8d8:	4680      	mov	r8, r0
2ffef8da:	460f      	mov	r7, r1
2ffef8dc:	e9cd 2300 	strd	r2, r3, [sp]
2ffef8e0:	d82e      	bhi.n	2ffef940 <stm32_tamp_configure_external+0x70>
2ffef8e2:	4b38      	ldr	r3, [pc, #224]	; (2ffef9c4 <stm32_tamp_configure_external+0xf4>)
2ffef8e4:	4606      	mov	r6, r0
2ffef8e6:	2000      	movs	r0, #0
2ffef8e8:	f04f 0a01 	mov.w	sl, #1
2ffef8ec:	681c      	ldr	r4, [r3, #0]
2ffef8ee:	4602      	mov	r2, r0
2ffef8f0:	4699      	mov	r9, r3
2ffef8f2:	f104 0c2c 	add.w	ip, r4, #44	; 0x2c
2ffef8f6:	f104 0e04 	add.w	lr, r4, #4
2ffef8fa:	b2c3      	uxtb	r3, r0
2ffef8fc:	429f      	cmp	r7, r3
2ffef8fe:	d823      	bhi.n	2ffef948 <stm32_tamp_configure_external+0x78>
2ffef900:	9b00      	ldr	r3, [sp, #0]
2ffef902:	60e3      	str	r3, [r4, #12]
2ffef904:	2a00      	cmp	r2, #0
2ffef906:	d056      	beq.n	2ffef9b6 <stm32_tamp_configure_external+0xe6>
2ffef908:	9b01      	ldr	r3, [sp, #4]
2ffef90a:	2504      	movs	r5, #4
2ffef90c:	431a      	orrs	r2, r3
2ffef90e:	6122      	str	r2, [r4, #16]
2ffef910:	2104      	movs	r1, #4
2ffef912:	a803      	add	r0, sp, #12
2ffef914:	f7ff fcd6 	bl	2ffef2c4 <stm32_rng_read>
2ffef918:	b958      	cbnz	r0, 2ffef932 <stm32_tamp_configure_external+0x62>
2ffef91a:	9b03      	ldr	r3, [sp, #12]
2ffef91c:	3d01      	subs	r5, #1
2ffef91e:	f015 05ff 	ands.w	r5, r5, #255	; 0xff
2ffef922:	6163      	str	r3, [r4, #20]
2ffef924:	d1f4      	bne.n	2ffef910 <stm32_tamp_configure_external+0x40>
2ffef926:	2364      	movs	r3, #100	; 0x64
2ffef928:	69a2      	ldr	r2, [r4, #24]
2ffef92a:	0452      	lsls	r2, r2, #17
2ffef92c:	d541      	bpl.n	2ffef9b2 <stm32_tamp_configure_external+0xe2>
2ffef92e:	2b00      	cmp	r3, #0
2ffef930:	d13d      	bne.n	2ffef9ae <stm32_tamp_configure_external+0xde>
2ffef932:	4825      	ldr	r0, [pc, #148]	; (2ffef9c8 <stm32_tamp_configure_external+0xf8>)
2ffef934:	f003 f9f2 	bl	2fff2d1c <tf_log>
2ffef938:	f003 fa94 	bl	2fff2e64 <console_flush>
2ffef93c:	f009 ebb2 	blx	2fff90a4 <do_panic>
2ffef940:	4822      	ldr	r0, [pc, #136]	; (2ffef9cc <stm32_tamp_configure_external+0xfc>)
2ffef942:	21c9      	movs	r1, #201	; 0xc9
2ffef944:	f00a fbe8 	bl	2fffa118 <__assert>
2ffef948:	6835      	ldr	r5, [r6, #0]
2ffef94a:	1c69      	adds	r1, r5, #1
2ffef94c:	d01f      	beq.n	2ffef98e <stm32_tamp_configure_external+0xbe>
2ffef94e:	6823      	ldr	r3, [r4, #0]
2ffef950:	fa0a f105 	lsl.w	r1, sl, r5
2ffef954:	430b      	orrs	r3, r1
2ffef956:	6023      	str	r3, [r4, #0]
2ffef958:	7933      	ldrb	r3, [r6, #4]
2ffef95a:	2b01      	cmp	r3, #1
2ffef95c:	d11a      	bne.n	2ffef994 <stm32_tamp_configure_external+0xc4>
2ffef95e:	f105 0b18 	add.w	fp, r5, #24
2ffef962:	fa03 f30b 	lsl.w	r3, r3, fp
2ffef966:	f896 b005 	ldrb.w	fp, [r6, #5]
2ffef96a:	f1bb 0f00 	cmp.w	fp, #0
2ffef96e:	d000      	beq.n	2ffef972 <stm32_tamp_configure_external+0xa2>
2ffef970:	430b      	orrs	r3, r1
2ffef972:	f896 b006 	ldrb.w	fp, [r6, #6]
2ffef976:	f1bb 0f00 	cmp.w	fp, #0
2ffef97a:	d012      	beq.n	2ffef9a2 <stm32_tamp_configure_external+0xd2>
2ffef97c:	3510      	adds	r5, #16
2ffef97e:	fa0a f505 	lsl.w	r5, sl, r5
2ffef982:	432b      	orrs	r3, r5
2ffef984:	f8de 1000 	ldr.w	r1, [lr]
2ffef988:	430b      	orrs	r3, r1
2ffef98a:	f8ce 3000 	str.w	r3, [lr]
2ffef98e:	3001      	adds	r0, #1
2ffef990:	360c      	adds	r6, #12
2ffef992:	e7b2      	b.n	2ffef8fa <stm32_tamp_configure_external+0x2a>
2ffef994:	2b02      	cmp	r3, #2
2ffef996:	f04f 0300 	mov.w	r3, #0
2ffef99a:	bf04      	itt	eq
2ffef99c:	430a      	orreq	r2, r1
2ffef99e:	b2d2      	uxtbeq	r2, r2
2ffef9a0:	e7e1      	b.n	2ffef966 <stm32_tamp_configure_external+0x96>
2ffef9a2:	f8dc 5000 	ldr.w	r5, [ip]
2ffef9a6:	4329      	orrs	r1, r5
2ffef9a8:	f8cc 1000 	str.w	r1, [ip]
2ffef9ac:	e7ea      	b.n	2ffef984 <stm32_tamp_configure_external+0xb4>
2ffef9ae:	3b01      	subs	r3, #1
2ffef9b0:	e7ba      	b.n	2ffef928 <stm32_tamp_configure_external+0x58>
2ffef9b2:	2b00      	cmp	r3, #0
2ffef9b4:	d0bd      	beq.n	2ffef932 <stm32_tamp_configure_external+0x62>
2ffef9b6:	f8c9 8018 	str.w	r8, [r9, #24]
2ffef9ba:	f889 7012 	strb.w	r7, [r9, #18]
2ffef9be:	b005      	add	sp, #20
2ffef9c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2ffef9c4:	2fffe2e0 	.word	0x2fffe2e0
2ffef9c8:	2fffa9d4 	.word	0x2fffa9d4
2ffef9cc:	2fffa9b5 	.word	0x2fffa9b5

2ffef9d0 <stm32_tamp_it_handler>:
2ffef9d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2ffef9d4:	b08a      	sub	sp, #40	; 0x28
2ffef9d6:	4d32      	ldr	r5, [pc, #200]	; (2ffefaa0 <stm32_tamp_it_handler+0xd0>)
2ffef9d8:	682b      	ldr	r3, [r5, #0]
2ffef9da:	f8d5 9014 	ldr.w	r9, [r5, #20]
2ffef9de:	6b1c      	ldr	r4, [r3, #48]	; 0x30
2ffef9e0:	f8d5 8018 	ldr.w	r8, [r5, #24]
2ffef9e4:	f7ff ff1e 	bl	2ffef824 <stm32_rtc_is_timestamp_enable>
2ffef9e8:	b178      	cbz	r0, 2ffefa0a <stm32_tamp_it_handler+0x3a>
2ffef9ea:	a803      	add	r0, sp, #12
2ffef9ec:	f7ff fec0 	bl	2ffef770 <stm32_rtc_get_timestamp>
2ffef9f0:	482c      	ldr	r0, [pc, #176]	; (2ffefaa4 <stm32_tamp_it_handler+0xd4>)
2ffef9f2:	f003 f993 	bl	2fff2d1c <tf_log>
2ffef9f6:	9b05      	ldr	r3, [sp, #20]
2ffef9f8:	9a08      	ldr	r2, [sp, #32]
2ffef9fa:	9301      	str	r3, [sp, #4]
2ffef9fc:	9b04      	ldr	r3, [sp, #16]
2ffef9fe:	9907      	ldr	r1, [sp, #28]
2ffefa00:	9300      	str	r3, [sp, #0]
2ffefa02:	4829      	ldr	r0, [pc, #164]	; (2ffefaa8 <stm32_tamp_it_handler+0xd8>)
2ffefa04:	9b03      	ldr	r3, [sp, #12]
2ffefa06:	f003 f989 	bl	2fff2d1c <tf_log>
2ffefa0a:	0c23      	lsrs	r3, r4, #16
2ffefa0c:	041b      	lsls	r3, r3, #16
2ffefa0e:	b343      	cbz	r3, 2ffefa62 <stm32_tamp_it_handler+0x92>
2ffefa10:	2700      	movs	r7, #0
2ffefa12:	f04f 0a01 	mov.w	sl, #1
2ffefa16:	8a29      	ldrh	r1, [r5, #16]
2ffefa18:	b2fa      	uxtb	r2, r7
2ffefa1a:	428a      	cmp	r2, r1
2ffefa1c:	d308      	bcc.n	2ffefa30 <stm32_tamp_it_handler+0x60>
2ffefa1e:	f014 0fff 	tst.w	r4, #255	; 0xff
2ffefa22:	d01b      	beq.n	2ffefa5c <stm32_tamp_it_handler+0x8c>
2ffefa24:	2600      	movs	r6, #0
2ffefa26:	f04f 090c 	mov.w	r9, #12
2ffefa2a:	f04f 0a01 	mov.w	sl, #1
2ffefa2e:	e031      	b.n	2ffefa94 <stm32_tamp_it_handler+0xc4>
2ffefa30:	f859 0032 	ldr.w	r0, [r9, r2, lsl #3]
2ffefa34:	eb09 03c2 	add.w	r3, r9, r2, lsl #3
2ffefa38:	f100 0610 	add.w	r6, r0, #16
2ffefa3c:	fa0a f606 	lsl.w	r6, sl, r6
2ffefa40:	4226      	tst	r6, r4
2ffefa42:	d008      	beq.n	2ffefa56 <stm32_tamp_it_handler+0x86>
2ffefa44:	685b      	ldr	r3, [r3, #4]
2ffefa46:	b103      	cbz	r3, 2ffefa4a <stm32_tamp_it_handler+0x7a>
2ffefa48:	4798      	blx	r3
2ffefa4a:	682a      	ldr	r2, [r5, #0]
2ffefa4c:	ea24 0406 	bic.w	r4, r4, r6
2ffefa50:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
2ffefa52:	4333      	orrs	r3, r6
2ffefa54:	63d3      	str	r3, [r2, #60]	; 0x3c
2ffefa56:	3701      	adds	r7, #1
2ffefa58:	2c00      	cmp	r4, #0
2ffefa5a:	d1dc      	bne.n	2ffefa16 <stm32_tamp_it_handler+0x46>
2ffefa5c:	b00a      	add	sp, #40	; 0x28
2ffefa5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2ffefa62:	2c00      	cmp	r4, #0
2ffefa64:	d1db      	bne.n	2ffefa1e <stm32_tamp_it_handler+0x4e>
2ffefa66:	e7f9      	b.n	2ffefa5c <stm32_tamp_it_handler+0x8c>
2ffefa68:	fb09 f303 	mul.w	r3, r9, r3
2ffefa6c:	f858 0003 	ldr.w	r0, [r8, r3]
2ffefa70:	eb08 0203 	add.w	r2, r8, r3
2ffefa74:	fa0a f700 	lsl.w	r7, sl, r0
2ffefa78:	4227      	tst	r7, r4
2ffefa7a:	d008      	beq.n	2ffefa8e <stm32_tamp_it_handler+0xbe>
2ffefa7c:	6893      	ldr	r3, [r2, #8]
2ffefa7e:	b103      	cbz	r3, 2ffefa82 <stm32_tamp_it_handler+0xb2>
2ffefa80:	4798      	blx	r3
2ffefa82:	682a      	ldr	r2, [r5, #0]
2ffefa84:	ea24 0407 	bic.w	r4, r4, r7
2ffefa88:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
2ffefa8a:	433b      	orrs	r3, r7
2ffefa8c:	63d3      	str	r3, [r2, #60]	; 0x3c
2ffefa8e:	3601      	adds	r6, #1
2ffefa90:	2c00      	cmp	r4, #0
2ffefa92:	d0e3      	beq.n	2ffefa5c <stm32_tamp_it_handler+0x8c>
2ffefa94:	7caa      	ldrb	r2, [r5, #18]
2ffefa96:	b2f3      	uxtb	r3, r6
2ffefa98:	429a      	cmp	r2, r3
2ffefa9a:	d8e5      	bhi.n	2ffefa68 <stm32_tamp_it_handler+0x98>
2ffefa9c:	e7de      	b.n	2ffefa5c <stm32_tamp_it_handler+0x8c>
2ffefa9e:	bf00      	nop
2ffefaa0:	2fffe2e0 	.word	0x2fffe2e0
2ffefaa4:	2fffa9fa 	.word	0x2fffa9fa
2ffefaa8:	2fffaa12 	.word	0x2fffaa12

2ffefaac <stm32_tamp_init>:
2ffefaac:	b570      	push	{r4, r5, r6, lr}
2ffefaae:	b086      	sub	sp, #24
2ffefab0:	a801      	add	r0, sp, #4
2ffefab2:	f008 fd9d 	bl	2fff85f0 <fdt_get_address>
2ffefab6:	b918      	cbnz	r0, 2ffefac0 <stm32_tamp_init+0x14>
2ffefab8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffefabc:	b006      	add	sp, #24
2ffefabe:	bd70      	pop	{r4, r5, r6, pc}
2ffefac0:	4a35      	ldr	r2, [pc, #212]	; (2ffefb98 <stm32_tamp_init+0xec>)
2ffefac2:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffefac6:	a802      	add	r0, sp, #8
2ffefac8:	f008 fe7e 	bl	2fff87c8 <dt_get_node>
2ffefacc:	1e04      	subs	r4, r0, #0
2ffeface:	dbf3      	blt.n	2ffefab8 <stm32_tamp_init+0xc>
2ffefad0:	9b02      	ldr	r3, [sp, #8]
2ffefad2:	b923      	cbnz	r3, 2ffefade <stm32_tamp_init+0x32>
2ffefad4:	f240 114b 	movw	r1, #331	; 0x14b
2ffefad8:	4830      	ldr	r0, [pc, #192]	; (2ffefb9c <stm32_tamp_init+0xf0>)
2ffefada:	f00a fb1d 	bl	2fffa118 <__assert>
2ffefade:	9803      	ldr	r0, [sp, #12]
2ffefae0:	1c42      	adds	r2, r0, #1
2ffefae2:	d102      	bne.n	2ffefaea <stm32_tamp_init+0x3e>
2ffefae4:	f44f 71a6 	mov.w	r1, #332	; 0x14c
2ffefae8:	e7f6      	b.n	2ffefad8 <stm32_tamp_init+0x2c>
2ffefaea:	4d2d      	ldr	r5, [pc, #180]	; (2ffefba0 <stm32_tamp_init+0xf4>)
2ffefaec:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
2ffefaf0:	602b      	str	r3, [r5, #0]
2ffefaf2:	6068      	str	r0, [r5, #4]
2ffefaf4:	f005 fed2 	bl	2fff589c <stm32mp_clk_enable>
2ffefaf8:	682a      	ldr	r2, [r5, #0]
2ffefafa:	2300      	movs	r3, #0
2ffefafc:	6013      	str	r3, [r2, #0]
2ffefafe:	6053      	str	r3, [r2, #4]
2ffefb00:	60d3      	str	r3, [r2, #12]
2ffefb02:	6113      	str	r3, [r2, #16]
2ffefb04:	6a11      	ldr	r1, [r2, #32]
2ffefb06:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
2ffefb0a:	6211      	str	r1, [r2, #32]
2ffefb0c:	62d3      	str	r3, [r2, #44]	; 0x2c
2ffefb0e:	63d6      	str	r6, [r2, #60]	; 0x3c
2ffefb10:	6d11      	ldr	r1, [r2, #80]	; 0x50
2ffefb12:	f021 0101 	bic.w	r1, r1, #1
2ffefb16:	6511      	str	r1, [r2, #80]	; 0x50
2ffefb18:	9905      	ldr	r1, [sp, #20]
2ffefb1a:	3902      	subs	r1, #2
2ffefb1c:	2901      	cmp	r1, #1
2ffefb1e:	d839      	bhi.n	2ffefb94 <stm32_tamp_init+0xe8>
2ffefb20:	f8d2 13f0 	ldr.w	r1, [r2, #1008]	; 0x3f0
2ffefb24:	60a9      	str	r1, [r5, #8]
2ffefb26:	f8d2 13ec 	ldr.w	r1, [r2, #1004]	; 0x3ec
2ffefb2a:	f8d2 03f4 	ldr.w	r0, [r2, #1012]	; 0x3f4
2ffefb2e:	60e9      	str	r1, [r5, #12]
2ffefb30:	f411 6f70 	tst.w	r1, #3840	; 0xf00
2ffefb34:	d103      	bne.n	2ffefb3e <stm32_tamp_init+0x92>
2ffefb36:	481b      	ldr	r0, [pc, #108]	; (2ffefba4 <stm32_tamp_init+0xf8>)
2ffefb38:	f003 f8f0 	bl	2fff2d1c <tf_log>
2ffefb3c:	e7bc      	b.n	2ffefab8 <stm32_tamp_init+0xc>
2ffefb3e:	6a11      	ldr	r1, [r2, #32]
2ffefb40:	9801      	ldr	r0, [sp, #4]
2ffefb42:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
2ffefb46:	6211      	str	r1, [r2, #32]
2ffefb48:	4621      	mov	r1, r4
2ffefb4a:	4a17      	ldr	r2, [pc, #92]	; (2ffefba8 <stm32_tamp_init+0xfc>)
2ffefb4c:	f00a f947 	bl	2fff9dde <fdt_getprop>
2ffefb50:	b120      	cbz	r0, 2ffefb5c <stm32_tamp_init+0xb0>
2ffefb52:	682a      	ldr	r2, [r5, #0]
2ffefb54:	6d13      	ldr	r3, [r2, #80]	; 0x50
2ffefb56:	f043 0301 	orr.w	r3, r3, #1
2ffefb5a:	6513      	str	r3, [r2, #80]	; 0x50
2ffefb5c:	2100      	movs	r1, #0
2ffefb5e:	4620      	mov	r0, r4
2ffefb60:	f001 fd92 	bl	2fff1688 <stm32_gic_enable_spi>
2ffefb64:	2800      	cmp	r0, #0
2ffefb66:	da03      	bge.n	2ffefb70 <stm32_tamp_init+0xc4>
2ffefb68:	f003 f97c 	bl	2fff2e64 <console_flush>
2ffefb6c:	f009 ea9a 	blx	2fff90a4 <do_panic>
2ffefb70:	4a0e      	ldr	r2, [pc, #56]	; (2ffefbac <stm32_tamp_init+0x100>)
2ffefb72:	2300      	movs	r3, #0
2ffefb74:	9801      	ldr	r0, [sp, #4]
2ffefb76:	4621      	mov	r1, r4
2ffefb78:	f00a f931 	bl	2fff9dde <fdt_getprop>
2ffefb7c:	b140      	cbz	r0, 2ffefb90 <stm32_tamp_init+0xe4>
2ffefb7e:	4a0c      	ldr	r2, [pc, #48]	; (2ffefbb0 <stm32_tamp_init+0x104>)
2ffefb80:	6813      	ldr	r3, [r2, #0]
2ffefb82:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
2ffefb86:	6013      	str	r3, [r2, #0]
2ffefb88:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
2ffefb8a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
2ffefb8e:	66d3      	str	r3, [r2, #108]	; 0x6c
2ffefb90:	2001      	movs	r0, #1
2ffefb92:	e793      	b.n	2ffefabc <stm32_tamp_init+0x10>
2ffefb94:	4618      	mov	r0, r3
2ffefb96:	e791      	b.n	2ffefabc <stm32_tamp_init+0x10>
2ffefb98:	2fffaa34 	.word	0x2fffaa34
2ffefb9c:	2fffa9b5 	.word	0x2fffa9b5
2ffefba0:	2fffe2e0 	.word	0x2fffe2e0
2ffefba4:	2fffaa42 	.word	0x2fffaa42
2ffefba8:	2fffaa67 	.word	0x2fffaa67
2ffefbac:	2fffaa74 	.word	0x2fffaa74
2ffefbb0:	5000d014 	.word	0x5000d014

2ffefbb4 <stm32_timer_config>:
2ffefbb4:	b510      	push	{r4, lr}
2ffefbb6:	4604      	mov	r4, r0
2ffefbb8:	6840      	ldr	r0, [r0, #4]
2ffefbba:	f005 fe6f 	bl	2fff589c <stm32mp_clk_enable>
2ffefbbe:	6860      	ldr	r0, [r4, #4]
2ffefbc0:	f005 ffb4 	bl	2fff5b2c <stm32mp_clk_timer_get_rate>
2ffefbc4:	4b18      	ldr	r3, [pc, #96]	; (2ffefc28 <stm32_timer_config+0x74>)
2ffefbc6:	60a0      	str	r0, [r4, #8]
2ffefbc8:	4298      	cmp	r0, r3
2ffefbca:	d808      	bhi.n	2ffefbde <stm32_timer_config+0x2a>
2ffefbcc:	4817      	ldr	r0, [pc, #92]	; (2ffefc2c <stm32_timer_config+0x78>)
2ffefbce:	f003 f8a5 	bl	2fff2d1c <tf_log>
2ffefbd2:	6860      	ldr	r0, [r4, #4]
2ffefbd4:	f005 fe65 	bl	2fff58a2 <stm32mp_clk_disable>
2ffefbd8:	f06f 0015 	mvn.w	r0, #21
2ffefbdc:	bd10      	pop	{r4, pc}
2ffefbde:	6823      	ldr	r3, [r4, #0]
2ffefbe0:	7b21      	ldrb	r1, [r4, #12]
2ffefbe2:	6e9a      	ldr	r2, [r3, #104]	; 0x68
2ffefbe4:	f002 020f 	and.w	r2, r2, #15
2ffefbe8:	428a      	cmp	r2, r1
2ffefbea:	d018      	beq.n	2ffefc1e <stm32_timer_config+0x6a>
2ffefbec:	699a      	ldr	r2, [r3, #24]
2ffefbee:	f022 0203 	bic.w	r2, r2, #3
2ffefbf2:	f042 0201 	orr.w	r2, r2, #1
2ffefbf6:	619a      	str	r2, [r3, #24]
2ffefbf8:	6a1a      	ldr	r2, [r3, #32]
2ffefbfa:	f022 020a 	bic.w	r2, r2, #10
2ffefbfe:	621a      	str	r2, [r3, #32]
2ffefc00:	689a      	ldr	r2, [r3, #8]
2ffefc02:	f022 0277 	bic.w	r2, r2, #119	; 0x77
2ffefc06:	f042 0254 	orr.w	r2, r2, #84	; 0x54
2ffefc0a:	609a      	str	r2, [r3, #8]
2ffefc0c:	6699      	str	r1, [r3, #104]	; 0x68
2ffefc0e:	681a      	ldr	r2, [r3, #0]
2ffefc10:	f042 0201 	orr.w	r2, r2, #1
2ffefc14:	601a      	str	r2, [r3, #0]
2ffefc16:	6a1a      	ldr	r2, [r3, #32]
2ffefc18:	f042 0201 	orr.w	r2, r2, #1
2ffefc1c:	621a      	str	r2, [r3, #32]
2ffefc1e:	6860      	ldr	r0, [r4, #4]
2ffefc20:	f005 fe3f 	bl	2fff58a2 <stm32mp_clk_disable>
2ffefc24:	2000      	movs	r0, #0
2ffefc26:	e7d9      	b.n	2ffefbdc <stm32_timer_config+0x28>
2ffefc28:	02faf07f 	.word	0x02faf07f
2ffefc2c:	2fffaa82 	.word	0x2fffaa82

2ffefc30 <stm32_timer_start_capture.part.0>:
2ffefc30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2ffefc32:	4606      	mov	r6, r0
2ffefc34:	6840      	ldr	r0, [r0, #4]
2ffefc36:	f242 7410 	movw	r4, #10000	; 0x2710
2ffefc3a:	f005 fe2f 	bl	2fff589c <stm32mp_clk_enable>
2ffefc3e:	6833      	ldr	r3, [r6, #0]
2ffefc40:	2200      	movs	r2, #0
2ffefc42:	611a      	str	r2, [r3, #16]
2ffefc44:	6833      	ldr	r3, [r6, #0]
2ffefc46:	f103 0210 	add.w	r2, r3, #16
2ffefc4a:	691b      	ldr	r3, [r3, #16]
2ffefc4c:	07d9      	lsls	r1, r3, #31
2ffefc4e:	d407      	bmi.n	2ffefc60 <stm32_timer_start_capture.part.0+0x30>
2ffefc50:	b90c      	cbnz	r4, 2ffefc56 <stm32_timer_start_capture.part.0+0x26>
2ffefc52:	4625      	mov	r5, r4
2ffefc54:	e016      	b.n	2ffefc84 <stm32_timer_start_capture.part.0+0x54>
2ffefc56:	200a      	movs	r0, #10
2ffefc58:	3c01      	subs	r4, #1
2ffefc5a:	f004 fbf9 	bl	2fff4450 <udelay>
2ffefc5e:	e7f1      	b.n	2ffefc44 <stm32_timer_start_capture.part.0+0x14>
2ffefc60:	2500      	movs	r5, #0
2ffefc62:	2c00      	cmp	r4, #0
2ffefc64:	d0f5      	beq.n	2ffefc52 <stm32_timer_start_capture.part.0+0x22>
2ffefc66:	6015      	str	r5, [r2, #0]
2ffefc68:	462f      	mov	r7, r5
2ffefc6a:	f242 7410 	movw	r4, #10000	; 0x2710
2ffefc6e:	e003      	b.n	2ffefc78 <stm32_timer_start_capture.part.0+0x48>
2ffefc70:	200a      	movs	r0, #10
2ffefc72:	3c01      	subs	r4, #1
2ffefc74:	f004 fbec 	bl	2fff4450 <udelay>
2ffefc78:	6833      	ldr	r3, [r6, #0]
2ffefc7a:	691a      	ldr	r2, [r3, #16]
2ffefc7c:	0792      	lsls	r2, r2, #30
2ffefc7e:	d409      	bmi.n	2ffefc94 <stm32_timer_start_capture.part.0+0x64>
2ffefc80:	2c00      	cmp	r4, #0
2ffefc82:	d1f5      	bne.n	2ffefc70 <stm32_timer_start_capture.part.0+0x40>
2ffefc84:	6870      	ldr	r0, [r6, #4]
2ffefc86:	f005 fe0c 	bl	2fff58a2 <stm32mp_clk_disable>
2ffefc8a:	2c00      	cmp	r4, #0
2ffefc8c:	bf14      	ite	ne
2ffefc8e:	4628      	movne	r0, r5
2ffefc90:	2000      	moveq	r0, #0
2ffefc92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2ffefc94:	2c00      	cmp	r4, #0
2ffefc96:	d0f5      	beq.n	2ffefc84 <stm32_timer_start_capture.part.0+0x54>
2ffefc98:	6b5b      	ldr	r3, [r3, #52]	; 0x34
2ffefc9a:	3701      	adds	r7, #1
2ffefc9c:	2f01      	cmp	r7, #1
2ffefc9e:	d101      	bne.n	2ffefca4 <stm32_timer_start_capture.part.0+0x74>
2ffefca0:	461d      	mov	r5, r3
2ffefca2:	e7e2      	b.n	2ffefc6a <stm32_timer_start_capture.part.0+0x3a>
2ffefca4:	42ab      	cmp	r3, r5
2ffefca6:	d1fb      	bne.n	2ffefca0 <stm32_timer_start_capture.part.0+0x70>
2ffefca8:	e7ec      	b.n	2ffefc84 <stm32_timer_start_capture.part.0+0x54>
	...

2ffefcac <stm32_timer_csi_freq>:
2ffefcac:	b510      	push	{r4, lr}
2ffefcae:	4c0b      	ldr	r4, [pc, #44]	; (2ffefcdc <stm32_timer_csi_freq+0x30>)
2ffefcb0:	6923      	ldr	r3, [r4, #16]
2ffefcb2:	b90b      	cbnz	r3, 2ffefcb8 <stm32_timer_csi_freq+0xc>
2ffefcb4:	2000      	movs	r0, #0
2ffefcb6:	bd10      	pop	{r4, pc}
2ffefcb8:	f104 0010 	add.w	r0, r4, #16
2ffefcbc:	f7ff ff7a 	bl	2ffefbb4 <stm32_timer_config>
2ffefcc0:	2800      	cmp	r0, #0
2ffefcc2:	dbf7      	blt.n	2ffefcb4 <stm32_timer_csi_freq+0x8>
2ffefcc4:	f104 0010 	add.w	r0, r4, #16
2ffefcc8:	f7ff ffb2 	bl	2ffefc30 <stm32_timer_start_capture.part.0>
2ffefccc:	2800      	cmp	r0, #0
2ffefcce:	d0f1      	beq.n	2ffefcb4 <stm32_timer_csi_freq+0x8>
2ffefcd0:	69a3      	ldr	r3, [r4, #24]
2ffefcd2:	fbb3 f0f0 	udiv	r0, r3, r0
2ffefcd6:	01c0      	lsls	r0, r0, #7
2ffefcd8:	e7ed      	b.n	2ffefcb6 <stm32_timer_csi_freq+0xa>
2ffefcda:	bf00      	nop
2ffefcdc:	2fffe2fc 	.word	0x2fffe2fc

2ffefce0 <stm32_timer_hsi_freq>:
2ffefce0:	b510      	push	{r4, lr}
2ffefce2:	4c0a      	ldr	r4, [pc, #40]	; (2ffefd0c <stm32_timer_hsi_freq+0x2c>)
2ffefce4:	6823      	ldr	r3, [r4, #0]
2ffefce6:	b90b      	cbnz	r3, 2ffefcec <stm32_timer_hsi_freq+0xc>
2ffefce8:	2000      	movs	r0, #0
2ffefcea:	bd10      	pop	{r4, pc}
2ffefcec:	4620      	mov	r0, r4
2ffefcee:	f7ff ff61 	bl	2ffefbb4 <stm32_timer_config>
2ffefcf2:	2800      	cmp	r0, #0
2ffefcf4:	dbf8      	blt.n	2ffefce8 <stm32_timer_hsi_freq+0x8>
2ffefcf6:	4620      	mov	r0, r4
2ffefcf8:	f7ff ff9a 	bl	2ffefc30 <stm32_timer_start_capture.part.0>
2ffefcfc:	2800      	cmp	r0, #0
2ffefcfe:	d0f3      	beq.n	2ffefce8 <stm32_timer_hsi_freq+0x8>
2ffefd00:	68a3      	ldr	r3, [r4, #8]
2ffefd02:	fbb3 f0f0 	udiv	r0, r3, r0
2ffefd06:	0280      	lsls	r0, r0, #10
2ffefd08:	e7ef      	b.n	2ffefcea <stm32_timer_hsi_freq+0xa>
2ffefd0a:	bf00      	nop
2ffefd0c:	2fffe2fc 	.word	0x2fffe2fc

2ffefd10 <stm32_timer_freq_func>:
2ffefd10:	b508      	push	{r3, lr}
2ffefd12:	4b09      	ldr	r3, [pc, #36]	; (2ffefd38 <stm32_timer_freq_func+0x28>)
2ffefd14:	b129      	cbz	r1, 2ffefd22 <stm32_timer_freq_func+0x12>
2ffefd16:	2901      	cmp	r1, #1
2ffefd18:	d008      	beq.n	2ffefd2c <stm32_timer_freq_func+0x1c>
2ffefd1a:	f003 f8a3 	bl	2fff2e64 <console_flush>
2ffefd1e:	f009 e9c2 	blx	2fff90a4 <do_panic>
2ffefd22:	681b      	ldr	r3, [r3, #0]
2ffefd24:	b10b      	cbz	r3, 2ffefd2a <stm32_timer_freq_func+0x1a>
2ffefd26:	4b05      	ldr	r3, [pc, #20]	; (2ffefd3c <stm32_timer_freq_func+0x2c>)
2ffefd28:	6003      	str	r3, [r0, #0]
2ffefd2a:	bd08      	pop	{r3, pc}
2ffefd2c:	691b      	ldr	r3, [r3, #16]
2ffefd2e:	2b00      	cmp	r3, #0
2ffefd30:	d0fb      	beq.n	2ffefd2a <stm32_timer_freq_func+0x1a>
2ffefd32:	4b03      	ldr	r3, [pc, #12]	; (2ffefd40 <stm32_timer_freq_func+0x30>)
2ffefd34:	e7f8      	b.n	2ffefd28 <stm32_timer_freq_func+0x18>
2ffefd36:	bf00      	nop
2ffefd38:	2fffe2fc 	.word	0x2fffe2fc
2ffefd3c:	2ffefce1 	.word	0x2ffefce1
2ffefd40:	2ffefcad 	.word	0x2ffefcad

2ffefd44 <stm32_timer_init>:
2ffefd44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2ffefd48:	b087      	sub	sp, #28
2ffefd4a:	a801      	add	r0, sp, #4
2ffefd4c:	f008 fc50 	bl	2fff85f0 <fdt_get_address>
2ffefd50:	2800      	cmp	r0, #0
2ffefd52:	d058      	beq.n	2ffefe06 <stm32_timer_init+0xc2>
2ffefd54:	4a2d      	ldr	r2, [pc, #180]	; (2ffefe0c <stm32_timer_init+0xc8>)
2ffefd56:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2ffefd5a:	a802      	add	r0, sp, #8
2ffefd5c:	f008 fd34 	bl	2fff87c8 <dt_get_node>
2ffefd60:	1e06      	subs	r6, r0, #0
2ffefd62:	da0b      	bge.n	2ffefd7c <stm32_timer_init+0x38>
2ffefd64:	492a      	ldr	r1, [pc, #168]	; (2ffefe10 <stm32_timer_init+0xcc>)
2ffefd66:	2400      	movs	r4, #0
2ffefd68:	482a      	ldr	r0, [pc, #168]	; (2ffefe14 <stm32_timer_init+0xd0>)
2ffefd6a:	f002 ffd7 	bl	2fff2d1c <tf_log>
2ffefd6e:	fab4 f484 	clz	r4, r4
2ffefd72:	0964      	lsrs	r4, r4, #5
2ffefd74:	4260      	negs	r0, r4
2ffefd76:	b007      	add	sp, #28
2ffefd78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2ffefd7c:	4d26      	ldr	r5, [pc, #152]	; (2ffefe18 <stm32_timer_init+0xd4>)
2ffefd7e:	2400      	movs	r4, #0
2ffefd80:	f8df 809c 	ldr.w	r8, [pc, #156]	; 2ffefe20 <stm32_timer_init+0xdc>
2ffefd84:	f105 0910 	add.w	r9, r5, #16
2ffefd88:	9b05      	ldr	r3, [sp, #20]
2ffefd8a:	2b02      	cmp	r3, #2
2ffefd8c:	d119      	bne.n	2ffefdc2 <stm32_timer_init+0x7e>
2ffefd8e:	9801      	ldr	r0, [sp, #4]
2ffefd90:	2300      	movs	r3, #0
2ffefd92:	4642      	mov	r2, r8
2ffefd94:	4631      	mov	r1, r6
2ffefd96:	3401      	adds	r4, #1
2ffefd98:	f00a f821 	bl	2fff9dde <fdt_getprop>
2ffefd9c:	b2e4      	uxtb	r4, r4
2ffefd9e:	4607      	mov	r7, r0
2ffefda0:	b1b8      	cbz	r0, 2ffefdd2 <stm32_timer_init+0x8e>
2ffefda2:	9b02      	ldr	r3, [sp, #8]
2ffefda4:	9803      	ldr	r0, [sp, #12]
2ffefda6:	602b      	str	r3, [r5, #0]
2ffefda8:	6068      	str	r0, [r5, #4]
2ffefdaa:	f005 febf 	bl	2fff5b2c <stm32mp_clk_timer_get_rate>
2ffefdae:	78fb      	ldrb	r3, [r7, #3]
2ffefdb0:	60a8      	str	r0, [r5, #8]
2ffefdb2:	4819      	ldr	r0, [pc, #100]	; (2ffefe18 <stm32_timer_init+0xd4>)
2ffefdb4:	732b      	strb	r3, [r5, #12]
2ffefdb6:	f7ff fefd 	bl	2ffefbb4 <stm32_timer_config>
2ffefdba:	2800      	cmp	r0, #0
2ffefdbc:	da09      	bge.n	2ffefdd2 <stm32_timer_init+0x8e>
2ffefdbe:	2300      	movs	r3, #0
2ffefdc0:	602b      	str	r3, [r5, #0]
2ffefdc2:	4a12      	ldr	r2, [pc, #72]	; (2ffefe0c <stm32_timer_init+0xc8>)
2ffefdc4:	4631      	mov	r1, r6
2ffefdc6:	a802      	add	r0, sp, #8
2ffefdc8:	f008 fcfe 	bl	2fff87c8 <dt_get_node>
2ffefdcc:	1e06      	subs	r6, r0, #0
2ffefdce:	dadb      	bge.n	2ffefd88 <stm32_timer_init+0x44>
2ffefdd0:	e7cd      	b.n	2ffefd6e <stm32_timer_init+0x2a>
2ffefdd2:	4a12      	ldr	r2, [pc, #72]	; (2ffefe1c <stm32_timer_init+0xd8>)
2ffefdd4:	2300      	movs	r3, #0
2ffefdd6:	9801      	ldr	r0, [sp, #4]
2ffefdd8:	4631      	mov	r1, r6
2ffefdda:	f00a f800 	bl	2fff9dde <fdt_getprop>
2ffefdde:	4607      	mov	r7, r0
2ffefde0:	2800      	cmp	r0, #0
2ffefde2:	d0ee      	beq.n	2ffefdc2 <stm32_timer_init+0x7e>
2ffefde4:	9b02      	ldr	r3, [sp, #8]
2ffefde6:	9803      	ldr	r0, [sp, #12]
2ffefde8:	612b      	str	r3, [r5, #16]
2ffefdea:	6168      	str	r0, [r5, #20]
2ffefdec:	f005 fe9e 	bl	2fff5b2c <stm32mp_clk_timer_get_rate>
2ffefdf0:	78fb      	ldrb	r3, [r7, #3]
2ffefdf2:	61a8      	str	r0, [r5, #24]
2ffefdf4:	4648      	mov	r0, r9
2ffefdf6:	772b      	strb	r3, [r5, #28]
2ffefdf8:	f7ff fedc 	bl	2ffefbb4 <stm32_timer_config>
2ffefdfc:	2800      	cmp	r0, #0
2ffefdfe:	bfbc      	itt	lt
2ffefe00:	2300      	movlt	r3, #0
2ffefe02:	612b      	strlt	r3, [r5, #16]
2ffefe04:	e7dd      	b.n	2ffefdc2 <stm32_timer_init+0x7e>
2ffefe06:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2ffefe0a:	e7b4      	b.n	2ffefd76 <stm32_timer_init+0x32>
2ffefe0c:	2fffaab1 	.word	0x2fffaab1
2ffefe10:	2fffaaf8 	.word	0x2fffaaf8
2ffefe14:	2fffaac1 	.word	0x2fffaac1
2ffefe18:	2fffe2fc 	.word	0x2fffe2fc
2ffefe1c:	2fffaae7 	.word	0x2fffaae7
2ffefe20:	2fffaad6 	.word	0x2fffaad6

2ffefe24 <stm32mp1_tamper_action>:
2ffefe24:	b508      	push	{r3, lr}
2ffefe26:	4b05      	ldr	r3, [pc, #20]	; (2ffefe3c <stm32mp1_tamper_action+0x18>)
2ffefe28:	f853 1020 	ldr.w	r1, [r3, r0, lsl #2]
2ffefe2c:	4804      	ldr	r0, [pc, #16]	; (2ffefe40 <stm32mp1_tamper_action+0x1c>)
2ffefe2e:	f002 ff75 	bl	2fff2d1c <tf_log>
2ffefe32:	f009 ecbc 	blx	2fff97ac <plat_my_core_pos>
2ffefe36:	f003 fa99 	bl	2fff336c <stm32mp_plat_reset>
2ffefe3a:	bf00      	nop
2ffefe3c:	2fffacd0 	.word	0x2fffacd0
2ffefe40:	2fffab10 	.word	0x2fffab10

2ffefe44 <sp_min_plat_fiq_handler>:
2ffefe44:	b510      	push	{r4, lr}
2ffefe46:	4601      	mov	r1, r0
2ffefe48:	f3c0 0409 	ubfx	r4, r0, #0, #10
2ffefe4c:	2cb1      	cmp	r4, #177	; 0xb1
2ffefe4e:	d818      	bhi.n	2ffefe82 <sp_min_plat_fiq_handler+0x3e>
2ffefe50:	2caf      	cmp	r4, #175	; 0xaf
2ffefe52:	d833      	bhi.n	2ffefebc <sp_min_plat_fiq_handler+0x78>
2ffefe54:	2c1d      	cmp	r4, #29
2ffefe56:	d031      	beq.n	2ffefebc <sp_min_plat_fiq_handler+0x78>
2ffefe58:	2c24      	cmp	r4, #36	; 0x24
2ffefe5a:	d034      	beq.n	2ffefec6 <sp_min_plat_fiq_handler+0x82>
2ffefe5c:	2c09      	cmp	r4, #9
2ffefe5e:	d145      	bne.n	2ffefeec <sp_min_plat_fiq_handler+0xa8>
2ffefe60:	f003 f99a 	bl	2fff3198 <stm32mp_mask_timer>
2ffefe64:	4620      	mov	r0, r4
2ffefe66:	f001 fa07 	bl	2fff1278 <gicv2_end_of_interrupt>
2ffefe6a:	f001 fb73 	bl	2fff1554 <plat_ic_get_pending_interrupt_id>
2ffefe6e:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2ffefe72:	4604      	mov	r4, r0
2ffefe74:	d23f      	bcs.n	2ffefef6 <sp_min_plat_fiq_handler+0xb2>
2ffefe76:	f001 f9ff 	bl	2fff1278 <gicv2_end_of_interrupt>
2ffefe7a:	4620      	mov	r0, r4
2ffefe7c:	f001 fb78 	bl	2fff1570 <plat_ic_disable_interrupt>
2ffefe80:	e7f3      	b.n	2ffefe6a <sp_min_plat_fiq_handler+0x26>
2ffefe82:	2ce5      	cmp	r4, #229	; 0xe5
2ffefe84:	d028      	beq.n	2ffefed8 <sp_min_plat_fiq_handler+0x94>
2ffefe86:	d804      	bhi.n	2ffefe92 <sp_min_plat_fiq_handler+0x4e>
2ffefe88:	3cb6      	subs	r4, #182	; 0xb6
2ffefe8a:	2c01      	cmp	r4, #1
2ffefe8c:	d82e      	bhi.n	2ffefeec <sp_min_plat_fiq_handler+0xa8>
2ffefe8e:	f007 fd51 	bl	2fff7934 <stm32_iwdg_it_handler>
2ffefe92:	2cf4      	cmp	r4, #244	; 0xf4
2ffefe94:	d12a      	bne.n	2ffefeec <sp_min_plat_fiq_handler+0xa8>
2ffefe96:	4819      	ldr	r0, [pc, #100]	; (2ffefefc <sp_min_plat_fiq_handler+0xb8>)
2ffefe98:	f002 ff40 	bl	2fff2d1c <tf_log>
2ffefe9c:	4818      	ldr	r0, [pc, #96]	; (2ffeff00 <sp_min_plat_fiq_handler+0xbc>)
2ffefe9e:	f004 f975 	bl	2fff418c <tzc400_init>
2ffefea2:	ee39 3f70 	mrc	15, 1, r3, cr9, cr0, {3}
2ffefea6:	b1db      	cbz	r3, 2ffefee0 <sp_min_plat_fiq_handler+0x9c>
2ffefea8:	2300      	movs	r3, #0
2ffefeaa:	ee29 3f70 	mcr	15, 1, r3, cr9, cr0, {3}
2ffefeae:	f004 fa53 	bl	2fff4358 <tzc400_is_pending_interrupt>
2ffefeb2:	b1c8      	cbz	r0, 2ffefee8 <sp_min_plat_fiq_handler+0xa4>
2ffefeb4:	4813      	ldr	r0, [pc, #76]	; (2ffeff04 <sp_min_plat_fiq_handler+0xc0>)
2ffefeb6:	f002 ff31 	bl	2fff2d1c <tf_log>
2ffefeba:	e009      	b.n	2ffefed0 <sp_min_plat_fiq_handler+0x8c>
2ffefebc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffefec0:	4608      	mov	r0, r1
2ffefec2:	f7ff b85b 	b.w	2ffeef7c <stm32mp1_calib_it_handler>
2ffefec6:	480e      	ldr	r0, [pc, #56]	; (2ffeff00 <sp_min_plat_fiq_handler+0xbc>)
2ffefec8:	f004 f960 	bl	2fff418c <tzc400_init>
2ffefecc:	f004 fa62 	bl	2fff4394 <tzc400_it_handler>
2ffefed0:	f002 ffc8 	bl	2fff2e64 <console_flush>
2ffefed4:	f009 e8e6 	blx	2fff90a4 <do_panic>
2ffefed8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffefedc:	f7ff bd78 	b.w	2ffef9d0 <stm32_tamp_it_handler>
2ffefee0:	4809      	ldr	r0, [pc, #36]	; (2ffeff08 <sp_min_plat_fiq_handler+0xc4>)
2ffefee2:	f002 ff1b 	bl	2fff2d1c <tf_log>
2ffefee6:	e7e2      	b.n	2ffefeae <sp_min_plat_fiq_handler+0x6a>
2ffefee8:	4808      	ldr	r0, [pc, #32]	; (2ffeff0c <sp_min_plat_fiq_handler+0xc8>)
2ffefeea:	e7e4      	b.n	2ffefeb6 <sp_min_plat_fiq_handler+0x72>
2ffefeec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2ffefef0:	4807      	ldr	r0, [pc, #28]	; (2ffeff10 <sp_min_plat_fiq_handler+0xcc>)
2ffefef2:	f002 bf13 	b.w	2fff2d1c <tf_log>
2ffefef6:	f003 f95c 	bl	2fff31b2 <stm32mp_wait_cpu_reset>
2ffefefa:	bf00      	nop
2ffefefc:	2fffab23 	.word	0x2fffab23
2ffeff00:	5c006000 	.word	0x5c006000
2ffeff04:	2fffab75 	.word	0x2fffab75
2ffeff08:	2fffab46 	.word	0x2fffab46
2ffeff0c:	2fffab9a 	.word	0x2fffab9a
2ffeff10:	2fffabc1 	.word	0x2fffabc1

2ffeff14 <sp_min_plat_get_bl33_ep_info>:
2ffeff14:	b570      	push	{r4, r5, r6, lr}
2ffeff16:	4c15      	ldr	r4, [pc, #84]	; (2ffeff6c <sp_min_plat_get_bl33_ep_info+0x58>)
2ffeff18:	68a3      	ldr	r3, [r4, #8]
2ffeff1a:	bb13      	cbnz	r3, 2ffeff62 <sp_min_plat_get_bl33_ep_info+0x4e>
2ffeff1c:	2041      	movs	r0, #65	; 0x41
2ffeff1e:	f005 fcbd 	bl	2fff589c <stm32mp_clk_enable>
2ffeff22:	4b13      	ldr	r3, [pc, #76]	; (2ffeff70 <sp_min_plat_get_bl33_ep_info+0x5c>)
2ffeff24:	2041      	movs	r0, #65	; 0x41
2ffeff26:	681e      	ldr	r6, [r3, #0]
2ffeff28:	685d      	ldr	r5, [r3, #4]
2ffeff2a:	f005 fcba 	bl	2fff58a2 <stm32mp_clk_disable>
2ffeff2e:	f008 fe31 	bl	2fff8b94 <stm32_restore_context>
2ffeff32:	b118      	cbz	r0, 2ffeff3c <sp_min_plat_get_bl33_ep_info+0x28>
2ffeff34:	f002 ff96 	bl	2fff2e64 <console_flush>
2ffeff38:	f009 e8b4 	blx	2fff90a4 <do_panic>
2ffeff3c:	2001      	movs	r0, #1
2ffeff3e:	f7fd fa9d 	bl	2ffed47c <cm_get_context>
2ffeff42:	6983      	ldr	r3, [r0, #24]
2ffeff44:	60e3      	str	r3, [r4, #12]
2ffeff46:	4b0b      	ldr	r3, [pc, #44]	; (2ffeff74 <sp_min_plat_get_bl33_ep_info+0x60>)
2ffeff48:	429e      	cmp	r6, r3
2ffeff4a:	d10c      	bne.n	2ffeff66 <sp_min_plat_get_bl33_ep_info+0x52>
2ffeff4c:	f1b5 4f40 	cmp.w	r5, #3221225472	; 0xc0000000
2ffeff50:	d3f0      	bcc.n	2ffeff34 <sp_min_plat_get_bl33_ep_info+0x20>
2ffeff52:	f008 fc6f 	bl	2fff8834 <dt_get_ddr_size>
2ffeff56:	f100 4040 	add.w	r0, r0, #3221225472	; 0xc0000000
2ffeff5a:	3801      	subs	r0, #1
2ffeff5c:	42a8      	cmp	r0, r5
2ffeff5e:	d3e9      	bcc.n	2ffeff34 <sp_min_plat_get_bl33_ep_info+0x20>
2ffeff60:	60a5      	str	r5, [r4, #8]
2ffeff62:	4802      	ldr	r0, [pc, #8]	; (2ffeff6c <sp_min_plat_get_bl33_ep_info+0x58>)
2ffeff64:	bd70      	pop	{r4, r5, r6, pc}
2ffeff66:	6903      	ldr	r3, [r0, #16]
2ffeff68:	60a3      	str	r3, [r4, #8]
2ffeff6a:	e7fa      	b.n	2ffeff62 <sp_min_plat_get_bl33_ep_info+0x4e>
2ffeff6c:	2fffe31c 	.word	0x2fffe31c
2ffeff70:	5c00a110 	.word	0x5c00a110
2ffeff74:	ca7face0 	.word	0xca7face0

2ffeff78 <sp_min_early_platform_setup2>:
2ffeff78:	b530      	push	{r4, r5, lr}
2ffeff7a:	4604      	mov	r4, r0
2ffeff7c:	b089      	sub	sp, #36	; 0x24
2ffeff7e:	ee11 3f11 	mrc	15, 0, r3, cr1, cr1, {0}
2ffeff82:	f043 0320 	orr.w	r3, r3, #32
2ffeff86:	ee01 3f11 	mcr	15, 0, r3, cr1, cr1, {0}
2ffeff8a:	4a47      	ldr	r2, [pc, #284]	; (2fff00a8 <sp_min_early_platform_setup2+0x130>)
2ffeff8c:	2302      	movs	r3, #2
2ffeff8e:	9300      	str	r3, [sp, #0]
2ffeff90:	2100      	movs	r1, #0
2ffeff92:	4b46      	ldr	r3, [pc, #280]	; (2fff00ac <sp_min_early_platform_setup2+0x134>)
2ffeff94:	4610      	mov	r0, r2
2ffeff96:	1a9b      	subs	r3, r3, r2
2ffeff98:	f003 fb60 	bl	2fff365c <mmap_add_region>
2ffeff9c:	f003 f8e4 	bl	2fff3168 <configure_mmu>
2ffeffa0:	b924      	cbnz	r4, 2ffeffac <sp_min_early_platform_setup2+0x34>
2ffeffa2:	f44f 71a5 	mov.w	r1, #330	; 0x14a
2ffeffa6:	4842      	ldr	r0, [pc, #264]	; (2fff00b0 <sp_min_early_platform_setup2+0x138>)
2ffeffa8:	f00a f8b6 	bl	2fffa118 <__assert>
2ffeffac:	7823      	ldrb	r3, [r4, #0]
2ffeffae:	2b05      	cmp	r3, #5
2ffeffb0:	d002      	beq.n	2ffeffb8 <sp_min_early_platform_setup2+0x40>
2ffeffb2:	f240 114b 	movw	r1, #331	; 0x14b
2ffeffb6:	e7f6      	b.n	2ffeffa6 <sp_min_early_platform_setup2+0x2e>
2ffeffb8:	7863      	ldrb	r3, [r4, #1]
2ffeffba:	2b01      	cmp	r3, #1
2ffeffbc:	d802      	bhi.n	2ffeffc4 <sp_min_early_platform_setup2+0x4c>
2ffeffbe:	f44f 71a6 	mov.w	r1, #332	; 0x14c
2ffeffc2:	e7f0      	b.n	2ffeffa6 <sp_min_early_platform_setup2+0x2e>
2ffeffc4:	68a3      	ldr	r3, [r4, #8]
2ffeffc6:	b153      	cbz	r3, 2ffeffde <sp_min_early_platform_setup2+0x66>
2ffeffc8:	681a      	ldr	r2, [r3, #0]
2ffeffca:	2a05      	cmp	r2, #5
2ffeffcc:	d10f      	bne.n	2ffeffee <sp_min_early_platform_setup2+0x76>
2ffeffce:	689d      	ldr	r5, [r3, #8]
2ffeffd0:	4c38      	ldr	r4, [pc, #224]	; (2fff00b4 <sp_min_early_platform_setup2+0x13c>)
2ffeffd2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2ffeffd4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2ffeffd6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2ffeffd8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2ffeffda:	682b      	ldr	r3, [r5, #0]
2ffeffdc:	6023      	str	r3, [r4, #0]
2ffeffde:	f008 faf9 	bl	2fff85d4 <dt_open_and_check>
2ffeffe2:	2800      	cmp	r0, #0
2ffeffe4:	da05      	bge.n	2ffefff2 <sp_min_early_platform_setup2+0x7a>
2ffeffe6:	f002 ff3d 	bl	2fff2e64 <console_flush>
2ffeffea:	f009 e85c 	blx	2fff90a4 <do_panic>
2ffeffee:	68db      	ldr	r3, [r3, #12]
2ffefff0:	e7e9      	b.n	2ffeffc6 <sp_min_early_platform_setup2+0x4e>
2ffefff2:	f004 fcdb 	bl	2fff49ac <bsec_probe>
2ffefff6:	4604      	mov	r4, r0
2ffefff8:	2800      	cmp	r0, #0
2ffefffa:	d1f4      	bne.n	2ffeffe6 <sp_min_early_platform_setup2+0x6e>
2ffefffc:	f006 f90a 	bl	2fff6214 <stm32mp1_clk_probe>
2fff0000:	2800      	cmp	r0, #0
2fff0002:	dbf0      	blt.n	2ffeffe6 <sp_min_early_platform_setup2+0x6e>
2fff0004:	f7ff f8e4 	bl	2ffef1d0 <etzpc_init>
2fff0008:	2800      	cmp	r0, #0
2fff000a:	d1ec      	bne.n	2ffeffe6 <sp_min_early_platform_setup2+0x6e>
2fff000c:	f7ff f8e0 	bl	2ffef1d0 <etzpc_init>
2fff0010:	f240 31ff 	movw	r1, #1023	; 0x3ff
2fff0014:	4620      	mov	r0, r4
2fff0016:	f7ff f8c9 	bl	2ffef1ac <etzpc_configure_tzma>
2fff001a:	213e      	movs	r1, #62	; 0x3e
2fff001c:	2001      	movs	r0, #1
2fff001e:	f7ff f8c5 	bl	2ffef1ac <etzpc_configure_tzma>
2fff0022:	a804      	add	r0, sp, #16
2fff0024:	f008 fbe2 	bl	2fff87ec <dt_get_stdout_uart_info>
2fff0028:	4605      	mov	r5, r0
2fff002a:	a903      	add	r1, sp, #12
2fff002c:	a802      	add	r0, sp, #8
2fff002e:	f008 fe17 	bl	2fff8c60 <stm32_get_boot_interface>
2fff0032:	2d00      	cmp	r5, #0
2fff0034:	dd19      	ble.n	2fff006a <sp_min_early_platform_setup2+0xf2>
2fff0036:	9b07      	ldr	r3, [sp, #28]
2fff0038:	b1bb      	cbz	r3, 2fff006a <sp_min_early_platform_setup2+0xf2>
2fff003a:	9b02      	ldr	r3, [sp, #8]
2fff003c:	2b05      	cmp	r3, #5
2fff003e:	d00e      	beq.n	2fff005e <sp_min_early_platform_setup2+0xe6>
2fff0040:	4b1d      	ldr	r3, [pc, #116]	; (2fff00b8 <sp_min_early_platform_setup2+0x140>)
2fff0042:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
2fff0046:	9804      	ldr	r0, [sp, #16]
2fff0048:	2100      	movs	r1, #0
2fff004a:	f009 e9e8 	blx	2fff941c <console_stm32_register>
2fff004e:	2800      	cmp	r0, #0
2fff0050:	d0c9      	beq.n	2ffeffe6 <sp_min_early_platform_setup2+0x6e>
2fff0052:	4819      	ldr	r0, [pc, #100]	; (2fff00b8 <sp_min_early_platform_setup2+0x140>)
2fff0054:	f240 1107 	movw	r1, #263	; 0x107
2fff0058:	f002 feca 	bl	2fff2df0 <console_set_scope>
2fff005c:	e005      	b.n	2fff006a <sp_min_early_platform_setup2+0xf2>
2fff005e:	9803      	ldr	r0, [sp, #12]
2fff0060:	f003 f890 	bl	2fff3184 <get_uart_address>
2fff0064:	9b04      	ldr	r3, [sp, #16]
2fff0066:	4298      	cmp	r0, r3
2fff0068:	d1ea      	bne.n	2fff0040 <sp_min_early_platform_setup2+0xc8>
2fff006a:	f007 fef1 	bl	2fff7e50 <dt_pmic_status>
2fff006e:	2800      	cmp	r0, #0
2fff0070:	dd01      	ble.n	2fff0076 <sp_min_early_platform_setup2+0xfe>
2fff0072:	f007 ffcd 	bl	2fff8010 <initialize_pmic>
2fff0076:	f008 fddd 	bl	2fff8c34 <stm32_are_pll1_settings_valid_in_context>
2fff007a:	b980      	cbnz	r0, 2fff009e <sp_min_early_platform_setup2+0x126>
2fff007c:	f007 fee8 	bl	2fff7e50 <dt_pmic_status>
2fff0080:	2800      	cmp	r0, #0
2fff0082:	dd07      	ble.n	2fff0094 <sp_min_early_platform_setup2+0x11c>
2fff0084:	f003 f858 	bl	2fff3138 <stm32mp_get_cpu_supply_name>
2fff0088:	2800      	cmp	r0, #0
2fff008a:	d0ac      	beq.n	2ffeffe6 <sp_min_early_platform_setup2+0x6e>
2fff008c:	f008 f836 	bl	2fff80fc <stpmic1_regulator_voltage_get>
2fff0090:	1e04      	subs	r4, r0, #0
2fff0092:	dba8      	blt.n	2ffeffe6 <sp_min_early_platform_setup2+0x6e>
2fff0094:	4620      	mov	r0, r4
2fff0096:	f005 fdeb 	bl	2fff5c70 <stm32mp1_clk_compute_all_pll1_settings>
2fff009a:	2800      	cmp	r0, #0
2fff009c:	d1a3      	bne.n	2ffeffe6 <sp_min_early_platform_setup2+0x6e>
2fff009e:	f000 faa7 	bl	2fff05f0 <stm32mp1_init_lp_states>
2fff00a2:	b009      	add	sp, #36	; 0x24
2fff00a4:	bd30      	pop	{r4, r5, pc}
2fff00a6:	bf00      	nop
2fff00a8:	2ffed000 	.word	0x2ffed000
2fff00ac:	2fffd000 	.word	0x2fffd000
2fff00b0:	2fffabec 	.word	0x2fffabec
2fff00b4:	2fffe31c 	.word	0x2fffe31c
2fff00b8:	2fffe340 	.word	0x2fffe340

2fff00bc <sp_min_platform_setup>:
2fff00bc:	b508      	push	{r3, lr}
2fff00be:	f006 fc59 	bl	2fff6974 <ddr_save_sr_mode>
2fff00c2:	f008 fe43 	bl	2fff8d4c <stm32mp1_security_setup>
2fff00c6:	f004 fa1b 	bl	2fff4500 <generic_delay_timer_init>
2fff00ca:	f001 fa95 	bl	2fff15f8 <stm32_gic_init>
2fff00ce:	f7ff fbb9 	bl	2ffef844 <stm32_rtc_init>
2fff00d2:	1e01      	subs	r1, r0, #0
2fff00d4:	da02      	bge.n	2fff00dc <sp_min_platform_setup+0x20>
2fff00d6:	481c      	ldr	r0, [pc, #112]	; (2fff0148 <sp_min_platform_setup+0x8c>)
2fff00d8:	f002 fe20 	bl	2fff2d1c <tf_log>
2fff00dc:	f7ff f962 	bl	2ffef3a4 <stm32_rng_init>
2fff00e0:	1e01      	subs	r1, r0, #0
2fff00e2:	da02      	bge.n	2fff00ea <sp_min_platform_setup+0x2e>
2fff00e4:	4819      	ldr	r0, [pc, #100]	; (2fff014c <sp_min_platform_setup+0x90>)
2fff00e6:	f002 fe19 	bl	2fff2d1c <tf_log>
2fff00ea:	f7ff fcdf 	bl	2ffefaac <stm32_tamp_init>
2fff00ee:	2800      	cmp	r0, #0
2fff00f0:	dd0b      	ble.n	2fff010a <sp_min_platform_setup+0x4e>
2fff00f2:	4817      	ldr	r0, [pc, #92]	; (2fff0150 <sp_min_platform_setup+0x94>)
2fff00f4:	2106      	movs	r1, #6
2fff00f6:	f7ff fbbf 	bl	2ffef878 <stm32_tamp_configure_internal>
2fff00fa:	4816      	ldr	r0, [pc, #88]	; (2fff0154 <sp_min_platform_setup+0x98>)
2fff00fc:	2300      	movs	r3, #0
2fff00fe:	461a      	mov	r2, r3
2fff0100:	2103      	movs	r1, #3
2fff0102:	f7ff fbe5 	bl	2ffef8d0 <stm32_tamp_configure_external>
2fff0106:	f7ff fb69 	bl	2ffef7dc <stm32_rtc_set_tamper_timestamp>
2fff010a:	f7ff fe1b 	bl	2ffefd44 <stm32_timer_init>
2fff010e:	b908      	cbnz	r0, 2fff0114 <sp_min_platform_setup+0x58>
2fff0110:	f7fe ff96 	bl	2ffef040 <stm32mp1_calib_init>
2fff0114:	f007 fc3c 	bl	2fff7990 <stm32_iwdg_init>
2fff0118:	2800      	cmp	r0, #0
2fff011a:	da03      	bge.n	2fff0124 <sp_min_platform_setup+0x68>
2fff011c:	f002 fea2 	bl	2fff2e64 <console_flush>
2fff0120:	f008 efc0 	blx	2fff90a4 <do_panic>
2fff0124:	480c      	ldr	r0, [pc, #48]	; (2fff0158 <sp_min_platform_setup+0x9c>)
2fff0126:	f004 fe84 	bl	2fff4e32 <fdt_rcc_enable_it>
2fff012a:	1e01      	subs	r1, r0, #0
2fff012c:	da03      	bge.n	2fff0136 <sp_min_platform_setup+0x7a>
2fff012e:	480b      	ldr	r0, [pc, #44]	; (2fff015c <sp_min_platform_setup+0xa0>)
2fff0130:	f002 fdf4 	bl	2fff2d1c <tf_log>
2fff0134:	e7f2      	b.n	2fff011c <sp_min_platform_setup+0x60>
2fff0136:	2106      	movs	r1, #6
2fff0138:	f001 fa1c 	bl	2fff1574 <plat_ic_set_interrupt_priority>
2fff013c:	f000 fdae 	bl	2fff0c9c <stm32mp_lock_periph_registering>
2fff0140:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0144:	f002 bd1e 	b.w	2fff2b84 <stm32mp1_init_scmi_server>
2fff0148:	2fffac13 	.word	0x2fffac13
2fff014c:	2fffac2e 	.word	0x2fffac2e
2fff0150:	2fffd1b8 	.word	0x2fffd1b8
2fff0154:	2fffd194 	.word	0x2fffd194
2fff0158:	2fffac49 	.word	0x2fffac49
2fff015c:	2fffac50 	.word	0x2fffac50

2fff0160 <sp_min_plat_arch_setup>:
2fff0160:	4770      	bx	lr
	...

2fff0164 <stm32_apply_pmic_suspend_config>:
2fff0164:	4a0e      	ldr	r2, [pc, #56]	; (2fff01a0 <stm32_apply_pmic_suspend_config+0x3c>)
2fff0166:	230c      	movs	r3, #12
2fff0168:	2806      	cmp	r0, #6
2fff016a:	fb03 2300 	mla	r3, r3, r0, r2
2fff016e:	b510      	push	{r4, lr}
2fff0170:	689c      	ldr	r4, [r3, #8]
2fff0172:	d903      	bls.n	2fff017c <stm32_apply_pmic_suspend_config+0x18>
2fff0174:	480b      	ldr	r0, [pc, #44]	; (2fff01a4 <stm32_apply_pmic_suspend_config+0x40>)
2fff0176:	2162      	movs	r1, #98	; 0x62
2fff0178:	f009 ffce 	bl	2fffa118 <__assert>
2fff017c:	b17c      	cbz	r4, 2fff019e <stm32_apply_pmic_suspend_config+0x3a>
2fff017e:	f007 fec3 	bl	2fff7f08 <initialize_pmic_i2c>
2fff0182:	b918      	cbnz	r0, 2fff018c <stm32_apply_pmic_suspend_config+0x28>
2fff0184:	f002 fe6e 	bl	2fff2e64 <console_flush>
2fff0188:	f008 ef8c 	blx	2fff90a4 <do_panic>
2fff018c:	4620      	mov	r0, r4
2fff018e:	f007 fe78 	bl	2fff7e82 <pmic_set_lp_config>
2fff0192:	2800      	cmp	r0, #0
2fff0194:	dbf6      	blt.n	2fff0184 <stm32_apply_pmic_suspend_config+0x20>
2fff0196:	f007 fe6f 	bl	2fff7e78 <pmic_configure_boot_on_regulators>
2fff019a:	2800      	cmp	r0, #0
2fff019c:	dbf2      	blt.n	2fff0184 <stm32_apply_pmic_suspend_config+0x20>
2fff019e:	bd10      	pop	{r4, pc}
2fff01a0:	2fffad68 	.word	0x2fffad68
2fff01a4:	2ffface8 	.word	0x2ffface8

2fff01a8 <stm32_exit_cstop>:
2fff01a8:	b530      	push	{r4, r5, lr}
2fff01aa:	b085      	sub	sp, #20
2fff01ac:	f002 ff78 	bl	2fff30a0 <stm32mp_pwr_base>
2fff01b0:	4605      	mov	r5, r0
2fff01b2:	f002 ff79 	bl	2fff30a8 <stm32mp_rcc_base>
2fff01b6:	4b1f      	ldr	r3, [pc, #124]	; (2fff0234 <stm32_exit_cstop+0x8c>)
2fff01b8:	4604      	mov	r4, r0
2fff01ba:	781a      	ldrb	r2, [r3, #0]
2fff01bc:	2a00      	cmp	r2, #0
2fff01be:	d037      	beq.n	2fff0230 <stm32_exit_cstop+0x88>
2fff01c0:	2200      	movs	r2, #0
2fff01c2:	701a      	strb	r2, [r3, #0]
2fff01c4:	f006 f8ce 	bl	2fff6364 <ddr_sw_self_refresh_exit>
2fff01c8:	b118      	cbz	r0, 2fff01d2 <stm32_exit_cstop+0x2a>
2fff01ca:	f002 fe4b 	bl	2fff2e64 <console_flush>
2fff01ce:	f008 ef6a 	blx	2fff90a4 <do_panic>
2fff01d2:	f006 fbd7 	bl	2fff6984 <ddr_restore_sr_mode>
2fff01d6:	4b18      	ldr	r3, [pc, #96]	; (2fff0238 <stm32_exit_cstop+0x90>)
2fff01d8:	6818      	ldr	r0, [r3, #0]
2fff01da:	f001 f9cd 	bl	2fff1578 <plat_ic_set_priority_mask>
2fff01de:	f8d4 3414 	ldr.w	r3, [r4, #1044]	; 0x414
2fff01e2:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
2fff01e6:	f8c4 3414 	str.w	r3, [r4, #1044]	; 0x414
2fff01ea:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
2fff01ee:	f043 0303 	orr.w	r3, r3, #3
2fff01f2:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
2fff01f6:	f3bf 8f4f 	dsb	sy
2fff01fa:	f3bf 8f6f 	isb	sy
2fff01fe:	68ab      	ldr	r3, [r5, #8]
2fff0200:	a801      	add	r0, sp, #4
2fff0202:	f023 0303 	bic.w	r3, r3, #3
2fff0206:	60ab      	str	r3, [r5, #8]
2fff0208:	f7ff f9b0 	bl	2ffef56c <stm32_rtc_get_calendar>
2fff020c:	490b      	ldr	r1, [pc, #44]	; (2fff023c <stm32_exit_cstop+0x94>)
2fff020e:	a801      	add	r0, sp, #4
2fff0210:	f7ff f9cc 	bl	2ffef5ac <stm32_rtc_diff_calendar>
2fff0214:	4605      	mov	r5, r0
2fff0216:	460c      	mov	r4, r1
2fff0218:	f008 fcfe 	bl	2fff8c18 <stm32_get_stgen_from_context>
2fff021c:	462a      	mov	r2, r5
2fff021e:	4623      	mov	r3, r4
2fff0220:	f004 fe7a 	bl	2fff4f18 <stm32mp_stgen_restore_counter>
2fff0224:	f008 fdbe 	bl	2fff8da4 <stm32mp1_syscfg_enable_io_compensation>
2fff0228:	f005 ffa6 	bl	2fff6178 <stm32mp1_clock_stopmode_resume>
2fff022c:	2800      	cmp	r0, #0
2fff022e:	d1cc      	bne.n	2fff01ca <stm32_exit_cstop+0x22>
2fff0230:	b005      	add	sp, #20
2fff0232:	bd30      	pop	{r4, r5, pc}
2fff0234:	2fffe358 	.word	0x2fffe358
2fff0238:	2fffe35c 	.word	0x2fffe35c
2fff023c:	2fffe760 	.word	0x2fffe760

2fff0240 <stm32_pwr_down_wfi>:
2fff0240:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff0242:	f240 35ff 	movw	r5, #1023	; 0x3ff
2fff0246:	4e0b      	ldr	r6, [pc, #44]	; (2fff0274 <stm32_pwr_down_wfi+0x34>)
2fff0248:	2000      	movs	r0, #0
2fff024a:	462f      	mov	r7, r5
2fff024c:	f7fe fe90 	bl	2ffeef70 <stm32mp1_calib_set_wakeup>
2fff0250:	f7fe fe88 	bl	2ffeef64 <stm32mp1_calib_get_wakeup>
2fff0254:	b968      	cbnz	r0, 2fff0272 <stm32_pwr_down_wfi+0x32>
2fff0256:	4630      	mov	r0, r6
2fff0258:	f009 eb18 	blx	2fff988c <wfi_svc_int_enable>
2fff025c:	f000 fffa 	bl	2fff1254 <gicv2_acknowledge_interrupt>
2fff0260:	42a8      	cmp	r0, r5
2fff0262:	4604      	mov	r4, r0
2fff0264:	d001      	beq.n	2fff026a <stm32_pwr_down_wfi+0x2a>
2fff0266:	f001 f807 	bl	2fff1278 <gicv2_end_of_interrupt>
2fff026a:	f007 fb43 	bl	2fff78f4 <stm32_iwdg_refresh>
2fff026e:	42bc      	cmp	r4, r7
2fff0270:	d0ee      	beq.n	2fff0250 <stm32_pwr_down_wfi+0x10>
2fff0272:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff0274:	2fffe360 	.word	0x2fffe360

2fff0278 <stm32_enter_low_power>:
2fff0278:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2fff027c:	460f      	mov	r7, r1
2fff027e:	4604      	mov	r4, r0
2fff0280:	b1c8      	cbz	r0, 2fff02b6 <stm32_enter_low_power+0x3e>
2fff0282:	2806      	cmp	r0, #6
2fff0284:	d12a      	bne.n	2fff02dc <stm32_enter_low_power+0x64>
2fff0286:	2000      	movs	r0, #0
2fff0288:	f006 f966 	bl	2fff6558 <ddr_standby_sr_entry>
2fff028c:	b110      	cbz	r0, 2fff0294 <stm32_enter_low_power+0x1c>
2fff028e:	4857      	ldr	r0, [pc, #348]	; (2fff03ec <stm32_enter_low_power+0x174>)
2fff0290:	f002 fd44 	bl	2fff2d1c <tf_log>
2fff0294:	f007 fddc 	bl	2fff7e50 <dt_pmic_status>
2fff0298:	2800      	cmp	r0, #0
2fff029a:	dd1c      	ble.n	2fff02d6 <stm32_enter_low_power+0x5e>
2fff029c:	f007 fe34 	bl	2fff7f08 <initialize_pmic_i2c>
2fff02a0:	b918      	cbnz	r0, 2fff02aa <stm32_enter_low_power+0x32>
2fff02a2:	f002 fddf 	bl	2fff2e64 <console_flush>
2fff02a6:	f008 eefe 	blx	2fff90a4 <do_panic>
2fff02aa:	f007 ffbc 	bl	2fff8226 <stpmic1_switch_off>
2fff02ae:	2064      	movs	r0, #100	; 0x64
2fff02b0:	f004 f8ce 	bl	2fff4450 <udelay>
2fff02b4:	e7f5      	b.n	2fff02a2 <stm32_enter_low_power+0x2a>
2fff02b6:	f002 fef3 	bl	2fff30a0 <stm32mp_pwr_base>
2fff02ba:	6903      	ldr	r3, [r0, #16]
2fff02bc:	f423 7302 	bic.w	r3, r3, #520	; 0x208
2fff02c0:	f023 0301 	bic.w	r3, r3, #1
2fff02c4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
2fff02c8:	6103      	str	r3, [r0, #16]
2fff02ca:	6803      	ldr	r3, [r0, #0]
2fff02cc:	f023 0307 	bic.w	r3, r3, #7
2fff02d0:	6003      	str	r3, [r0, #0]
2fff02d2:	f7ff ffb5 	bl	2fff0240 <stm32_pwr_down_wfi>
2fff02d6:	b003      	add	sp, #12
2fff02d8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff02dc:	f8df 9124 	ldr.w	r9, [pc, #292]	; 2fff0404 <stm32_enter_low_power+0x18c>
2fff02e0:	230c      	movs	r3, #12
2fff02e2:	4343      	muls	r3, r0
2fff02e4:	f859 8003 	ldr.w	r8, [r9, r3]
2fff02e8:	f002 feda 	bl	2fff30a0 <stm32mp_pwr_base>
2fff02ec:	4605      	mov	r5, r0
2fff02ee:	f002 fedb 	bl	2fff30a8 <stm32mp_rcc_base>
2fff02f2:	4606      	mov	r6, r0
2fff02f4:	f008 fd8a 	bl	2fff8e0c <stm32mp1_syscfg_disable_io_compensation>
2fff02f8:	2001      	movs	r0, #1
2fff02fa:	f006 fa55 	bl	2fff67a8 <ddr_set_sr_mode>
2fff02fe:	2001      	movs	r0, #1
2fff0300:	f009 e814 	blx	2fff932c <dcsw_op_all>
2fff0304:	f008 fbc0 	bl	2fff8a88 <stm32_clean_context>
2fff0308:	2c04      	cmp	r4, #4
2fff030a:	d101      	bne.n	2fff0310 <stm32_enter_low_power+0x98>
2fff030c:	f008 fcbe 	bl	2fff8c8c <stm32_save_ddr_training_area>
2fff0310:	f007 fd9e 	bl	2fff7e50 <dt_pmic_status>
2fff0314:	2800      	cmp	r0, #0
2fff0316:	dd06      	ble.n	2fff0326 <stm32_enter_low_power+0xae>
2fff0318:	4620      	mov	r0, r4
2fff031a:	f7ff ff23 	bl	2fff0164 <stm32_apply_pmic_suspend_config>
2fff031e:	2c02      	cmp	r4, #2
2fff0320:	bf08      	it	eq
2fff0322:	f048 0802 	orreq.w	r8, r8, #2
2fff0326:	f8d6 3418 	ldr.w	r3, [r6, #1048]	; 0x418
2fff032a:	220c      	movs	r2, #12
2fff032c:	fb02 9904 	mla	r9, r2, r4, r9
2fff0330:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2fff0334:	f8c6 3418 	str.w	r3, [r6, #1048]	; 0x418
2fff0338:	f8d6 3414 	ldr.w	r3, [r6, #1044]	; 0x414
2fff033c:	f8d9 2004 	ldr.w	r2, [r9, #4]
2fff0340:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2fff0344:	f8c6 3414 	str.w	r3, [r6, #1044]	; 0x414
2fff0348:	692b      	ldr	r3, [r5, #16]
2fff034a:	f423 7302 	bic.w	r3, r3, #520	; 0x208
2fff034e:	f023 0301 	bic.w	r3, r3, #1
2fff0352:	4313      	orrs	r3, r2
2fff0354:	612b      	str	r3, [r5, #16]
2fff0356:	682b      	ldr	r3, [r5, #0]
2fff0358:	f023 0307 	bic.w	r3, r3, #7
2fff035c:	ea43 0308 	orr.w	r3, r3, r8
2fff0360:	602b      	str	r3, [r5, #0]
2fff0362:	4b23      	ldr	r3, [pc, #140]	; (2fff03f0 <stm32_enter_low_power+0x178>)
2fff0364:	f8c6 3418 	str.w	r3, [r6, #1048]	; 0x418
2fff0368:	f8d6 3104 	ldr.w	r3, [r6, #260]	; 0x104
2fff036c:	f043 0303 	orr.w	r3, r3, #3
2fff0370:	f8c6 3104 	str.w	r3, [r6, #260]	; 0x104
2fff0374:	f007 fabe 	bl	2fff78f4 <stm32_iwdg_refresh>
2fff0378:	2008      	movs	r0, #8
2fff037a:	f001 f8fd 	bl	2fff1578 <plat_ic_set_priority_mask>
2fff037e:	4b1d      	ldr	r3, [pc, #116]	; (2fff03f4 <stm32_enter_low_power+0x17c>)
2fff0380:	6018      	str	r0, [r3, #0]
2fff0382:	a801      	add	r0, sp, #4
2fff0384:	f006 f8e8 	bl	2fff6558 <ddr_standby_sr_entry>
2fff0388:	4606      	mov	r6, r0
2fff038a:	2800      	cmp	r0, #0
2fff038c:	d189      	bne.n	2fff02a2 <stm32_enter_low_power+0x2a>
2fff038e:	f8df 9078 	ldr.w	r9, [pc, #120]	; 2fff0408 <stm32_enter_low_power+0x190>
2fff0392:	2041      	movs	r0, #65	; 0x41
2fff0394:	f8df 8074 	ldr.w	r8, [pc, #116]	; 2fff040c <stm32_enter_low_power+0x194>
2fff0398:	f005 fa80 	bl	2fff589c <stm32mp_clk_enable>
2fff039c:	f8c9 6000 	str.w	r6, [r9]
2fff03a0:	f8c8 6000 	str.w	r6, [r8]
2fff03a4:	f005 fec2 	bl	2fff612c <stm32mp1_clock_stopmode_save>
2fff03a8:	2c04      	cmp	r4, #4
2fff03aa:	d114      	bne.n	2fff03d6 <stm32_enter_low_power+0x15e>
2fff03ac:	4b12      	ldr	r3, [pc, #72]	; (2fff03f8 <stm32_enter_low_power+0x180>)
2fff03ae:	f8c9 7000 	str.w	r7, [r9]
2fff03b2:	f8c8 3000 	str.w	r3, [r8]
2fff03b6:	9801      	ldr	r0, [sp, #4]
2fff03b8:	f008 fbae 	bl	2fff8b18 <stm32_save_context>
2fff03bc:	2800      	cmp	r0, #0
2fff03be:	f47f af70 	bne.w	2fff02a2 <stm32_enter_low_power+0x2a>
2fff03c2:	68ab      	ldr	r3, [r5, #8]
2fff03c4:	f105 0208 	add.w	r2, r5, #8
2fff03c8:	f043 0303 	orr.w	r3, r3, #3
2fff03cc:	60ab      	str	r3, [r5, #8]
2fff03ce:	6813      	ldr	r3, [r2, #0]
2fff03d0:	f413 3f40 	tst.w	r3, #196608	; 0x30000
2fff03d4:	d0fb      	beq.n	2fff03ce <stm32_enter_low_power+0x156>
2fff03d6:	2041      	movs	r0, #65	; 0x41
2fff03d8:	f005 fa63 	bl	2fff58a2 <stm32mp_clk_disable>
2fff03dc:	4807      	ldr	r0, [pc, #28]	; (2fff03fc <stm32_enter_low_power+0x184>)
2fff03de:	f7ff f8c5 	bl	2ffef56c <stm32_rtc_get_calendar>
2fff03e2:	4b07      	ldr	r3, [pc, #28]	; (2fff0400 <stm32_enter_low_power+0x188>)
2fff03e4:	2201      	movs	r2, #1
2fff03e6:	701a      	strb	r2, [r3, #0]
2fff03e8:	e775      	b.n	2fff02d6 <stm32_enter_low_power+0x5e>
2fff03ea:	bf00      	nop
2fff03ec:	2fffad0e 	.word	0x2fffad0e
2fff03f0:	00110f1f 	.word	0x00110f1f
2fff03f4:	2fffe35c 	.word	0x2fffe35c
2fff03f8:	ca7face0 	.word	0xca7face0
2fff03fc:	2fffe760 	.word	0x2fffe760
2fff0400:	2fffe358 	.word	0x2fffe358
2fff0404:	2fffad68 	.word	0x2fffad68
2fff0408:	5c00a114 	.word	0x5c00a114
2fff040c:	5c00a110 	.word	0x5c00a110

2fff0410 <stm32_pwr_domain_off>:
2fff0410:	4770      	bx	lr

2fff0412 <stm32_validate_power_state>:
2fff0412:	f3c0 4200 	ubfx	r2, r0, #16, #1
2fff0416:	f3c0 6301 	ubfx	r3, r0, #24, #2
2fff041a:	b280      	uxth	r0, r0
2fff041c:	4313      	orrs	r3, r2
2fff041e:	4318      	orrs	r0, r3
2fff0420:	bf03      	ittte	eq
2fff0422:	7048      	strbeq	r0, [r1, #1]
2fff0424:	2301      	moveq	r3, #1
2fff0426:	700b      	strbeq	r3, [r1, #0]
2fff0428:	f06f 0001 	mvnne.w	r0, #1
2fff042c:	4770      	bx	lr
	...

2fff0430 <stm32_validate_ns_entrypoint>:
2fff0430:	f1b0 4f40 	cmp.w	r0, #3221225472	; 0xc0000000
2fff0434:	bf23      	ittte	cs
2fff0436:	4b03      	ldrcs	r3, [pc, #12]	; (2fff0444 <stm32_validate_ns_entrypoint+0x14>)
2fff0438:	6018      	strcs	r0, [r3, #0]
2fff043a:	2000      	movcs	r0, #0
2fff043c:	f06f 0008 	mvncc.w	r0, #8
2fff0440:	4770      	bx	lr
2fff0442:	bf00      	nop
2fff0444:	2fffe770 	.word	0x2fffe770

2fff0448 <stm32_node_hw_state>:
2fff0448:	2900      	cmp	r1, #0
2fff044a:	bf14      	ite	ne
2fff044c:	f06f 0001 	mvnne.w	r0, #1
2fff0450:	2000      	moveq	r0, #0
2fff0452:	4770      	bx	lr

2fff0454 <stm32_get_sys_suspend_power_state>:
2fff0454:	2302      	movs	r3, #2
2fff0456:	7003      	strb	r3, [r0, #0]
2fff0458:	7043      	strb	r3, [r0, #1]
2fff045a:	4770      	bx	lr

2fff045c <stm32_system_reset>:
2fff045c:	b508      	push	{r3, lr}
2fff045e:	f002 fe23 	bl	2fff30a8 <stm32mp_rcc_base>
2fff0462:	f8d0 3404 	ldr.w	r3, [r0, #1028]	; 0x404
2fff0466:	f043 0301 	orr.w	r3, r3, #1
2fff046a:	f8c0 3404 	str.w	r3, [r0, #1028]	; 0x404
2fff046e:	e7fe      	b.n	2fff046e <stm32_system_reset+0x12>

2fff0470 <stm32_pwr_domain_suspend>:
2fff0470:	b508      	push	{r3, lr}
2fff0472:	2000      	movs	r0, #0
2fff0474:	f000 f934 	bl	2fff06e0 <stm32mp1_get_lp_soc_mode>
2fff0478:	4b02      	ldr	r3, [pc, #8]	; (2fff0484 <stm32_pwr_domain_suspend+0x14>)
2fff047a:	6819      	ldr	r1, [r3, #0]
2fff047c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0480:	f7ff befa 	b.w	2fff0278 <stm32_enter_low_power>
2fff0484:	2fffe770 	.word	0x2fffe770

2fff0488 <stm32_system_off>:
2fff0488:	b508      	push	{r3, lr}
2fff048a:	2001      	movs	r0, #1
2fff048c:	f000 f928 	bl	2fff06e0 <stm32mp1_get_lp_soc_mode>
2fff0490:	4604      	mov	r4, r0
2fff0492:	f002 ff55 	bl	2fff3340 <stm32mp_is_single_core>
2fff0496:	b958      	cbnz	r0, 2fff04b0 <stm32_system_off+0x28>
2fff0498:	f002 fe06 	bl	2fff30a8 <stm32mp_rcc_base>
2fff049c:	f8d0 3404 	ldr.w	r3, [r0, #1028]	; 0x404
2fff04a0:	2101      	movs	r1, #1
2fff04a2:	f043 0320 	orr.w	r3, r3, #32
2fff04a6:	f8c0 3404 	str.w	r3, [r0, #1028]	; 0x404
2fff04aa:	2009      	movs	r0, #9
2fff04ac:	f000 ffc0 	bl	2fff1430 <gicv2_raise_sgi>
2fff04b0:	2100      	movs	r1, #0
2fff04b2:	4620      	mov	r0, r4
2fff04b4:	f7ff fee0 	bl	2fff0278 <stm32_enter_low_power>
2fff04b8:	f7ff fec2 	bl	2fff0240 <stm32_pwr_down_wfi>
2fff04bc:	f002 fcd2 	bl	2fff2e64 <console_flush>
2fff04c0:	f008 edf0 	blx	2fff90a4 <do_panic>

2fff04c4 <stm32_pwr_domain_pwr_down_wfi>:
2fff04c4:	b508      	push	{r3, lr}
2fff04c6:	ee10 3fb0 	mrc	15, 0, r3, cr0, cr0, {5}
2fff04ca:	f013 0fff 	tst.w	r3, #255	; 0xff
2fff04ce:	d108      	bne.n	2fff04e2 <stm32_pwr_domain_pwr_down_wfi+0x1e>
2fff04d0:	4b0b      	ldr	r3, [pc, #44]	; (2fff0500 <stm32_pwr_domain_pwr_down_wfi+0x3c>)
2fff04d2:	681c      	ldr	r4, [r3, #0]
2fff04d4:	f7ff feb4 	bl	2fff0240 <stm32_pwr_down_wfi>
2fff04d8:	f7ff fe66 	bl	2fff01a8 <stm32_exit_cstop>
2fff04dc:	f008 ef78 	blx	2fff93d0 <disable_mmu_icache_secure>
2fff04e0:	47a0      	blx	r4
2fff04e2:	f002 fde1 	bl	2fff30a8 <stm32mp_rcc_base>
2fff04e6:	2320      	movs	r3, #32
2fff04e8:	f8c0 3404 	str.w	r3, [r0, #1028]	; 0x404
2fff04ec:	f3bf 8f4f 	dsb	sy
2fff04f0:	f3bf 8f6f 	isb	sy
2fff04f4:	bf30      	wfi
2fff04f6:	f002 fcb5 	bl	2fff2e64 <console_flush>
2fff04fa:	f008 edd4 	blx	2fff90a4 <do_panic>
2fff04fe:	bf00      	nop
2fff0500:	2fffe774 	.word	0x2fffe774

2fff0504 <stm32_pwr_domain_on_finish>:
2fff0504:	b508      	push	{r3, lr}
2fff0506:	f001 f86c 	bl	2fff15e2 <stm32_gic_pcpu_init>
2fff050a:	4b02      	ldr	r3, [pc, #8]	; (2fff0514 <stm32_pwr_domain_on_finish+0x10>)
2fff050c:	681b      	ldr	r3, [r3, #0]
2fff050e:	ee0e 3f10 	mcr	15, 0, r3, cr14, cr0, {0}
2fff0512:	bd08      	pop	{r3, pc}
2fff0514:	2fffe76c 	.word	0x2fffe76c

2fff0518 <stm32_pwr_domain_on>:
2fff0518:	b570      	push	{r4, r5, r6, lr}
2fff051a:	4605      	mov	r5, r0
2fff051c:	ee10 6fb0 	mrc	15, 0, r6, cr0, cr0, {5}
2fff0520:	f002 ff0e 	bl	2fff3340 <stm32mp_is_single_core>
2fff0524:	4604      	mov	r4, r0
2fff0526:	bb18      	cbnz	r0, 2fff0570 <stm32_pwr_domain_on+0x58>
2fff0528:	42b5      	cmp	r5, r6
2fff052a:	d024      	beq.n	2fff0576 <stm32_pwr_domain_on+0x5e>
2fff052c:	4d15      	ldr	r5, [pc, #84]	; (2fff0584 <stm32_pwr_domain_on+0x6c>)
2fff052e:	2101      	movs	r1, #1
2fff0530:	4e15      	ldr	r6, [pc, #84]	; (2fff0588 <stm32_pwr_domain_on+0x70>)
2fff0532:	6028      	str	r0, [r5, #0]
2fff0534:	f000 ff7c 	bl	2fff1430 <gicv2_raise_sgi>
2fff0538:	200a      	movs	r0, #10
2fff053a:	f003 ff89 	bl	2fff4450 <udelay>
2fff053e:	6832      	ldr	r2, [r6, #0]
2fff0540:	4b12      	ldr	r3, [pc, #72]	; (2fff058c <stm32_pwr_domain_on+0x74>)
2fff0542:	429a      	cmp	r2, r3
2fff0544:	d11a      	bne.n	2fff057c <stm32_pwr_domain_on+0x64>
2fff0546:	2041      	movs	r0, #65	; 0x41
2fff0548:	f005 f9a8 	bl	2fff589c <stm32mp_clk_enable>
2fff054c:	ee1e 2f10 	mrc	15, 0, r2, cr14, cr0, {0}
2fff0550:	4b0f      	ldr	r3, [pc, #60]	; (2fff0590 <stm32_pwr_domain_on+0x78>)
2fff0552:	2041      	movs	r0, #65	; 0x41
2fff0554:	601a      	str	r2, [r3, #0]
2fff0556:	6832      	ldr	r2, [r6, #0]
2fff0558:	4b0e      	ldr	r3, [pc, #56]	; (2fff0594 <stm32_pwr_domain_on+0x7c>)
2fff055a:	601a      	str	r2, [r3, #0]
2fff055c:	4b0e      	ldr	r3, [pc, #56]	; (2fff0598 <stm32_pwr_domain_on+0x80>)
2fff055e:	602b      	str	r3, [r5, #0]
2fff0560:	f005 f99f 	bl	2fff58a2 <stm32mp_clk_disable>
2fff0564:	2008      	movs	r0, #8
2fff0566:	2101      	movs	r1, #1
2fff0568:	f000 ff62 	bl	2fff1430 <gicv2_raise_sgi>
2fff056c:	4620      	mov	r0, r4
2fff056e:	bd70      	pop	{r4, r5, r6, pc}
2fff0570:	f06f 0005 	mvn.w	r0, #5
2fff0574:	e7fb      	b.n	2fff056e <stm32_pwr_domain_on+0x56>
2fff0576:	f06f 0001 	mvn.w	r0, #1
2fff057a:	e7f8      	b.n	2fff056e <stm32_pwr_domain_on+0x56>
2fff057c:	f06f 0008 	mvn.w	r0, #8
2fff0580:	e7f5      	b.n	2fff056e <stm32_pwr_domain_on+0x56>
2fff0582:	bf00      	nop
2fff0584:	5c00a110 	.word	0x5c00a110
2fff0588:	2fffe774 	.word	0x2fffe774
2fff058c:	2ffed2e0 	.word	0x2ffed2e0
2fff0590:	2fffe76c 	.word	0x2fffe76c
2fff0594:	5c00a114 	.word	0x5c00a114
2fff0598:	ca7face1 	.word	0xca7face1

2fff059c <stm32_cpu_standby>:
2fff059c:	2801      	cmp	r0, #1
2fff059e:	b510      	push	{r4, lr}
2fff05a0:	d003      	beq.n	2fff05aa <stm32_cpu_standby+0xe>
2fff05a2:	480c      	ldr	r0, [pc, #48]	; (2fff05d4 <stm32_cpu_standby+0x38>)
2fff05a4:	2128      	movs	r1, #40	; 0x28
2fff05a6:	f009 fdb7 	bl	2fffa118 <__assert>
2fff05aa:	f3bf 8f4f 	dsb	sy
2fff05ae:	f3bf 8f6f 	isb	sy
2fff05b2:	f240 34ff 	movw	r4, #1023	; 0x3ff
2fff05b6:	bf30      	wfi
2fff05b8:	f000 fe4c 	bl	2fff1254 <gicv2_acknowledge_interrupt>
2fff05bc:	f2a0 32fe 	subw	r2, r0, #1022	; 0x3fe
2fff05c0:	2a01      	cmp	r2, #1
2fff05c2:	d903      	bls.n	2fff05cc <stm32_cpu_standby+0x30>
2fff05c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff05c8:	f000 be56 	b.w	2fff1278 <gicv2_end_of_interrupt>
2fff05cc:	42a0      	cmp	r0, r4
2fff05ce:	d0f2      	beq.n	2fff05b6 <stm32_cpu_standby+0x1a>
2fff05d0:	bd10      	pop	{r4, pc}
2fff05d2:	bf00      	nop
2fff05d4:	2fffadbc 	.word	0x2fffadbc

2fff05d8 <stm32_pwr_domain_suspend_finish>:
2fff05d8:	4770      	bx	lr
	...

2fff05dc <plat_setup_psci_ops>:
2fff05dc:	4b02      	ldr	r3, [pc, #8]	; (2fff05e8 <plat_setup_psci_ops+0xc>)
2fff05de:	6018      	str	r0, [r3, #0]
2fff05e0:	2000      	movs	r0, #0
2fff05e2:	4b02      	ldr	r3, [pc, #8]	; (2fff05ec <plat_setup_psci_ops+0x10>)
2fff05e4:	600b      	str	r3, [r1, #0]
2fff05e6:	4770      	bx	lr
2fff05e8:	2fffe774 	.word	0x2fffe774
2fff05ec:	2fffaddc 	.word	0x2fffaddc

2fff05f0 <stm32mp1_init_lp_states>:
2fff05f0:	b530      	push	{r4, r5, lr}
2fff05f2:	b08b      	sub	sp, #44	; 0x2c
2fff05f4:	a801      	add	r0, sp, #4
2fff05f6:	f007 fffb 	bl	2fff85f0 <fdt_get_address>
2fff05fa:	b938      	cbnz	r0, 2fff060c <stm32mp1_init_lp_states+0x1c>
2fff05fc:	492a      	ldr	r1, [pc, #168]	; (2fff06a8 <stm32mp1_init_lp_states+0xb8>)
2fff05fe:	482b      	ldr	r0, [pc, #172]	; (2fff06ac <stm32mp1_init_lp_states+0xbc>)
2fff0600:	f002 fb8c 	bl	2fff2d1c <tf_log>
2fff0604:	f002 fc2e 	bl	2fff2e64 <console_flush>
2fff0608:	f008 ed4c 	blx	2fff90a4 <do_panic>
2fff060c:	4828      	ldr	r0, [pc, #160]	; (2fff06b0 <stm32mp1_init_lp_states+0xc0>)
2fff060e:	f008 f8fd 	bl	2fff880c <dt_get_node_by_compatible>
2fff0612:	1e04      	subs	r4, r0, #0
2fff0614:	dbf2      	blt.n	2fff05fc <stm32mp1_init_lp_states+0xc>
2fff0616:	4a24      	ldr	r2, [pc, #144]	; (2fff06a8 <stm32mp1_init_lp_states+0xb8>)
2fff0618:	2300      	movs	r3, #0
2fff061a:	9801      	ldr	r0, [sp, #4]
2fff061c:	4621      	mov	r1, r4
2fff061e:	f009 fbde 	bl	2fff9dde <fdt_getprop>
2fff0622:	2800      	cmp	r0, #0
2fff0624:	d0ea      	beq.n	2fff05fc <stm32mp1_init_lp_states+0xc>
2fff0626:	6802      	ldr	r2, [r0, #0]
2fff0628:	9801      	ldr	r0, [sp, #4]
2fff062a:	f3c2 2107 	ubfx	r1, r2, #8, #8
2fff062e:	0e13      	lsrs	r3, r2, #24
2fff0630:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2fff0634:	f3c2 4207 	ubfx	r2, r2, #16, #8
2fff0638:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2fff063c:	4621      	mov	r1, r4
2fff063e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2fff0642:	4a1c      	ldr	r2, [pc, #112]	; (2fff06b4 <stm32mp1_init_lp_states+0xc4>)
2fff0644:	6013      	str	r3, [r2, #0]
2fff0646:	ab02      	add	r3, sp, #8
2fff0648:	4a1b      	ldr	r2, [pc, #108]	; (2fff06b8 <stm32mp1_init_lp_states+0xc8>)
2fff064a:	f009 fbc8 	bl	2fff9dde <fdt_getprop>
2fff064e:	2800      	cmp	r0, #0
2fff0650:	d0d8      	beq.n	2fff0604 <stm32mp1_init_lp_states+0x14>
2fff0652:	9b02      	ldr	r3, [sp, #8]
2fff0654:	089d      	lsrs	r5, r3, #2
2fff0656:	2b1f      	cmp	r3, #31
2fff0658:	d8d4      	bhi.n	2fff0604 <stm32mp1_init_lp_states+0x14>
2fff065a:	4917      	ldr	r1, [pc, #92]	; (2fff06b8 <stm32mp1_init_lp_states+0xc8>)
2fff065c:	462b      	mov	r3, r5
2fff065e:	aa03      	add	r2, sp, #12
2fff0660:	4620      	mov	r0, r4
2fff0662:	f008 f845 	bl	2fff86f0 <fdt_read_uint32_array>
2fff0666:	2800      	cmp	r0, #0
2fff0668:	db0d      	blt.n	2fff0686 <stm32mp1_init_lp_states+0x96>
2fff066a:	4814      	ldr	r0, [pc, #80]	; (2fff06bc <stm32mp1_init_lp_states+0xcc>)
2fff066c:	aa03      	add	r2, sp, #12
2fff066e:	2100      	movs	r1, #0
2fff0670:	2401      	movs	r4, #1
2fff0672:	428d      	cmp	r5, r1
2fff0674:	d10b      	bne.n	2fff068e <stm32mp1_init_lp_states+0x9e>
2fff0676:	2306      	movs	r3, #6
2fff0678:	5cc2      	ldrb	r2, [r0, r3]
2fff067a:	2a01      	cmp	r2, #1
2fff067c:	d110      	bne.n	2fff06a0 <stm32mp1_init_lp_states+0xb0>
2fff067e:	4a10      	ldr	r2, [pc, #64]	; (2fff06c0 <stm32mp1_init_lp_states+0xd0>)
2fff0680:	6013      	str	r3, [r2, #0]
2fff0682:	b00b      	add	sp, #44	; 0x2c
2fff0684:	bd30      	pop	{r4, r5, pc}
2fff0686:	480f      	ldr	r0, [pc, #60]	; (2fff06c4 <stm32mp1_init_lp_states+0xd4>)
2fff0688:	f002 fb48 	bl	2fff2d1c <tf_log>
2fff068c:	e7ba      	b.n	2fff0604 <stm32mp1_init_lp_states+0x14>
2fff068e:	f852 3b04 	ldr.w	r3, [r2], #4
2fff0692:	2b06      	cmp	r3, #6
2fff0694:	d901      	bls.n	2fff069a <stm32mp1_init_lp_states+0xaa>
2fff0696:	480c      	ldr	r0, [pc, #48]	; (2fff06c8 <stm32mp1_init_lp_states+0xd8>)
2fff0698:	e7f6      	b.n	2fff0688 <stm32mp1_init_lp_states+0x98>
2fff069a:	54c4      	strb	r4, [r0, r3]
2fff069c:	3101      	adds	r1, #1
2fff069e:	e7e8      	b.n	2fff0672 <stm32mp1_init_lp_states+0x82>
2fff06a0:	3b01      	subs	r3, #1
2fff06a2:	d1e9      	bne.n	2fff0678 <stm32mp1_init_lp_states+0x88>
2fff06a4:	e7ed      	b.n	2fff0682 <stm32mp1_init_lp_states+0x92>
2fff06a6:	bf00      	nop
2fff06a8:	2fffae30 	.word	0x2fffae30
2fff06ac:	2fffae44 	.word	0x2fffae44
2fff06b0:	2fffae58 	.word	0x2fffae58
2fff06b4:	2fffe788 	.word	0x2fffe788
2fff06b8:	2fffae6c 	.word	0x2fffae6c
2fff06bc:	2fffe77f 	.word	0x2fffe77f
2fff06c0:	2fffe778 	.word	0x2fffe778
2fff06c4:	2fffae8f 	.word	0x2fffae8f
2fff06c8:	2fffae98 	.word	0x2fffae98

2fff06cc <stm32mp1_set_pm_domain_state>:
2fff06cc:	2802      	cmp	r0, #2
2fff06ce:	bf9d      	ittte	ls
2fff06d0:	4b02      	ldrls	r3, [pc, #8]	; (2fff06dc <stm32mp1_set_pm_domain_state+0x10>)
2fff06d2:	5419      	strbls	r1, [r3, r0]
2fff06d4:	2000      	movls	r0, #0
2fff06d6:	f06f 0015 	mvnhi.w	r0, #21
2fff06da:	4770      	bx	lr
2fff06dc:	2fffe77c 	.word	0x2fffe77c

2fff06e0 <stm32mp1_get_lp_soc_mode>:
2fff06e0:	2801      	cmp	r0, #1
2fff06e2:	b510      	push	{r4, lr}
2fff06e4:	d102      	bne.n	2fff06ec <stm32mp1_get_lp_soc_mode+0xc>
2fff06e6:	4b0f      	ldr	r3, [pc, #60]	; (2fff0724 <stm32mp1_get_lp_soc_mode+0x44>)
2fff06e8:	6818      	ldr	r0, [r3, #0]
2fff06ea:	bd10      	pop	{r4, pc}
2fff06ec:	4b0e      	ldr	r3, [pc, #56]	; (2fff0728 <stm32mp1_get_lp_soc_mode+0x48>)
2fff06ee:	4a0f      	ldr	r2, [pc, #60]	; (2fff072c <stm32mp1_get_lp_soc_mode+0x4c>)
2fff06f0:	6818      	ldr	r0, [r3, #0]
2fff06f2:	7854      	ldrb	r4, [r2, #1]
2fff06f4:	7893      	ldrb	r3, [r2, #2]
2fff06f6:	490e      	ldr	r1, [pc, #56]	; (2fff0730 <stm32mp1_get_lp_soc_mode+0x50>)
2fff06f8:	2800      	cmp	r0, #0
2fff06fa:	d0f6      	beq.n	2fff06ea <stm32mp1_get_lp_soc_mode+0xa>
2fff06fc:	2806      	cmp	r0, #6
2fff06fe:	d903      	bls.n	2fff0708 <stm32mp1_get_lp_soc_mode+0x28>
2fff0700:	480c      	ldr	r0, [pc, #48]	; (2fff0734 <stm32mp1_get_lp_soc_mode+0x54>)
2fff0702:	218c      	movs	r1, #140	; 0x8c
2fff0704:	f009 fd08 	bl	2fffa118 <__assert>
2fff0708:	2804      	cmp	r0, #4
2fff070a:	d103      	bne.n	2fff0714 <stm32mp1_get_lp_soc_mode+0x34>
2fff070c:	b103      	cbz	r3, 2fff0710 <stm32mp1_get_lp_soc_mode+0x30>
2fff070e:	b92c      	cbnz	r4, 2fff071c <stm32mp1_get_lp_soc_mode+0x3c>
2fff0710:	3801      	subs	r0, #1
2fff0712:	e7f1      	b.n	2fff06f8 <stm32mp1_get_lp_soc_mode+0x18>
2fff0714:	2803      	cmp	r0, #3
2fff0716:	d101      	bne.n	2fff071c <stm32mp1_get_lp_soc_mode+0x3c>
2fff0718:	2b00      	cmp	r3, #0
2fff071a:	d0f9      	beq.n	2fff0710 <stm32mp1_get_lp_soc_mode+0x30>
2fff071c:	5c42      	ldrb	r2, [r0, r1]
2fff071e:	2a01      	cmp	r2, #1
2fff0720:	d1f6      	bne.n	2fff0710 <stm32mp1_get_lp_soc_mode+0x30>
2fff0722:	e7e2      	b.n	2fff06ea <stm32mp1_get_lp_soc_mode+0xa>
2fff0724:	2fffe788 	.word	0x2fffe788
2fff0728:	2fffe778 	.word	0x2fffe778
2fff072c:	2fffe77c 	.word	0x2fffe77c
2fff0730:	2fffe77f 	.word	0x2fffe77f
2fff0734:	2fffaea7 	.word	0x2fffaea7

2fff0738 <decprot2str>:
2fff0738:	4a0b      	ldr	r2, [pc, #44]	; (2fff0768 <decprot2str+0x30>)
2fff073a:	4601      	mov	r1, r0
2fff073c:	2300      	movs	r3, #0
2fff073e:	4610      	mov	r0, r2
2fff0740:	b510      	push	{r4, lr}
2fff0742:	6854      	ldr	r4, [r2, #4]
2fff0744:	428c      	cmp	r4, r1
2fff0746:	d104      	bne.n	2fff0752 <decprot2str+0x1a>
2fff0748:	220c      	movs	r2, #12
2fff074a:	fb02 0303 	mla	r3, r2, r3, r0
2fff074e:	6898      	ldr	r0, [r3, #8]
2fff0750:	bd10      	pop	{r4, pc}
2fff0752:	3301      	adds	r3, #1
2fff0754:	320c      	adds	r2, #12
2fff0756:	2b0c      	cmp	r3, #12
2fff0758:	d1f3      	bne.n	2fff0742 <decprot2str+0xa>
2fff075a:	4804      	ldr	r0, [pc, #16]	; (2fff076c <decprot2str+0x34>)
2fff075c:	f002 fade 	bl	2fff2d1c <tf_log>
2fff0760:	f002 fb80 	bl	2fff2e64 <console_flush>
2fff0764:	f008 ec9e 	blx	2fff90a4 <do_panic>
2fff0768:	2fffb0a0 	.word	0x2fffb0a0
2fff076c:	2fffaed0 	.word	0x2fffaed0

2fff0770 <get_gpioz_nbpin>:
2fff0770:	b538      	push	{r3, r4, r5, lr}
2fff0772:	4c0a      	ldr	r4, [pc, #40]	; (2fff079c <get_gpioz_nbpin+0x2c>)
2fff0774:	f994 3000 	ldrsb.w	r3, [r4]
2fff0778:	4625      	mov	r5, r4
2fff077a:	2b00      	cmp	r3, #0
2fff077c:	da0a      	bge.n	2fff0794 <get_gpioz_nbpin+0x24>
2fff077e:	f008 f8f5 	bl	2fff896c <fdt_get_gpioz_nbpins_from_dt>
2fff0782:	b240      	sxtb	r0, r0
2fff0784:	7020      	strb	r0, [r4, #0]
2fff0786:	f030 0308 	bics.w	r3, r0, #8
2fff078a:	d003      	beq.n	2fff0794 <get_gpioz_nbpin+0x24>
2fff078c:	4804      	ldr	r0, [pc, #16]	; (2fff07a0 <get_gpioz_nbpin+0x30>)
2fff078e:	218e      	movs	r1, #142	; 0x8e
2fff0790:	f009 fcc2 	bl	2fffa118 <__assert>
2fff0794:	f995 0000 	ldrsb.w	r0, [r5]
2fff0798:	bd38      	pop	{r3, r4, r5, pc}
2fff079a:	bf00      	nop
2fff079c:	2fffd1e8 	.word	0x2fffd1e8
2fff07a0:	2fffaedf 	.word	0x2fffaedf

2fff07a4 <register_periph>:
2fff07a4:	2813      	cmp	r0, #19
2fff07a6:	b538      	push	{r3, r4, r5, lr}
2fff07a8:	460c      	mov	r4, r1
2fff07aa:	d817      	bhi.n	2fff07dc <register_periph+0x38>
2fff07ac:	4925      	ldr	r1, [pc, #148]	; (2fff0844 <register_periph+0xa0>)
2fff07ae:	4b26      	ldr	r3, [pc, #152]	; (2fff0848 <register_periph+0xa4>)
2fff07b0:	7809      	ldrb	r1, [r1, #0]
2fff07b2:	5c1a      	ldrb	r2, [r3, r0]
2fff07b4:	b9b1      	cbnz	r1, 2fff07e4 <register_periph+0x40>
2fff07b6:	b10a      	cbz	r2, 2fff07bc <register_periph+0x18>
2fff07b8:	42a2      	cmp	r2, r4
2fff07ba:	d115      	bne.n	2fff07e8 <register_periph+0x44>
2fff07bc:	541c      	strb	r4, [r3, r0]
2fff07be:	1e45      	subs	r5, r0, #1
2fff07c0:	2d07      	cmp	r5, #7
2fff07c2:	d815      	bhi.n	2fff07f0 <register_periph+0x4c>
2fff07c4:	f7ff ffd4 	bl	2fff0770 <get_gpioz_nbpin>
2fff07c8:	4285      	cmp	r5, r0
2fff07ca:	d338      	bcc.n	2fff083e <register_periph+0x9a>
2fff07cc:	f7ff ffd0 	bl	2fff0770 <get_gpioz_nbpin>
2fff07d0:	4602      	mov	r2, r0
2fff07d2:	4629      	mov	r1, r5
2fff07d4:	481d      	ldr	r0, [pc, #116]	; (2fff084c <register_periph+0xa8>)
2fff07d6:	f002 faa1 	bl	2fff2d1c <tf_log>
2fff07da:	e005      	b.n	2fff07e8 <register_periph+0x44>
2fff07dc:	481c      	ldr	r0, [pc, #112]	; (2fff0850 <register_periph+0xac>)
2fff07de:	2197      	movs	r1, #151	; 0x97
2fff07e0:	f009 fc9a 	bl	2fffa118 <__assert>
2fff07e4:	42a2      	cmp	r2, r4
2fff07e6:	d02c      	beq.n	2fff0842 <register_periph+0x9e>
2fff07e8:	f002 fb3c 	bl	2fff2e64 <console_flush>
2fff07ec:	f008 ec5a 	blx	2fff90a4 <do_panic>
2fff07f0:	2c01      	cmp	r4, #1
2fff07f2:	d126      	bne.n	2fff0842 <register_periph+0x9e>
2fff07f4:	2812      	cmp	r0, #18
2fff07f6:	d824      	bhi.n	2fff0842 <register_periph+0x9e>
2fff07f8:	e8df f000 	tbb	[pc, r0]
2fff07fc:	0a0a0a1b 	.word	0x0a0a0a1b
2fff0800:	0a0a0a0a 	.word	0x0a0a0a0a
2fff0804:	1d15190a 	.word	0x1d15190a
2fff0808:	1723230f 	.word	0x1723230f
2fff080c:	131f      	.short	0x131f
2fff080e:	11          	.byte	0x11
2fff080f:	00          	.byte	0x00
2fff0810:	205f      	movs	r0, #95	; 0x5f
2fff0812:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff0816:	f005 bae9 	b.w	2fff5dec <stm32mp1_register_clock_parents_secure>
2fff081a:	2044      	movs	r0, #68	; 0x44
2fff081c:	e7f9      	b.n	2fff0812 <register_periph+0x6e>
2fff081e:	2094      	movs	r0, #148	; 0x94
2fff0820:	e7f7      	b.n	2fff0812 <register_periph+0x6e>
2fff0822:	2087      	movs	r0, #135	; 0x87
2fff0824:	e7f5      	b.n	2fff0812 <register_periph+0x6e>
2fff0826:	208c      	movs	r0, #140	; 0x8c
2fff0828:	e7f3      	b.n	2fff0812 <register_periph+0x6e>
2fff082a:	207c      	movs	r0, #124	; 0x7c
2fff082c:	e7f1      	b.n	2fff0812 <register_periph+0x6e>
2fff082e:	2061      	movs	r0, #97	; 0x61
2fff0830:	e7ef      	b.n	2fff0812 <register_periph+0x6e>
2fff0832:	2060      	movs	r0, #96	; 0x60
2fff0834:	e7ed      	b.n	2fff0812 <register_periph+0x6e>
2fff0836:	208e      	movs	r0, #142	; 0x8e
2fff0838:	e7eb      	b.n	2fff0812 <register_periph+0x6e>
2fff083a:	20c0      	movs	r0, #192	; 0xc0
2fff083c:	e7e9      	b.n	2fff0812 <register_periph+0x6e>
2fff083e:	2c01      	cmp	r4, #1
2fff0840:	d0e6      	beq.n	2fff0810 <register_periph+0x6c>
2fff0842:	bd38      	pop	{r3, r4, r5, pc}
2fff0844:	2fffe78c 	.word	0x2fffe78c
2fff0848:	2fffe78d 	.word	0x2fffe78d
2fff084c:	2fffaf0c 	.word	0x2fffaf0c
2fff0850:	2fffaedf 	.word	0x2fffaedf

2fff0854 <register_periph_iomem>:
2fff0854:	f1b0 4fb8 	cmp.w	r0, #1543503872	; 0x5c000000
2fff0858:	b508      	push	{r3, lr}
2fff085a:	d060      	beq.n	2fff091e <register_periph_iomem+0xca>
2fff085c:	d848      	bhi.n	2fff08f0 <register_periph_iomem+0x9c>
2fff085e:	4b38      	ldr	r3, [pc, #224]	; (2fff0940 <register_periph_iomem+0xec>)
2fff0860:	4298      	cmp	r0, r3
2fff0862:	d061      	beq.n	2fff0928 <register_periph_iomem+0xd4>
2fff0864:	d83f      	bhi.n	2fff08e6 <register_periph_iomem+0x92>
2fff0866:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
2fff086a:	4298      	cmp	r0, r3
2fff086c:	d05e      	beq.n	2fff092c <register_periph_iomem+0xd8>
2fff086e:	d814      	bhi.n	2fff089a <register_periph_iomem+0x46>
2fff0870:	4b34      	ldr	r3, [pc, #208]	; (2fff0944 <register_periph_iomem+0xf0>)
2fff0872:	4298      	cmp	r0, r3
2fff0874:	d034      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff0876:	d81f      	bhi.n	2fff08b8 <register_periph_iomem+0x64>
2fff0878:	4b33      	ldr	r3, [pc, #204]	; (2fff0948 <register_periph_iomem+0xf4>)
2fff087a:	4298      	cmp	r0, r3
2fff087c:	d030      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff087e:	d810      	bhi.n	2fff08a2 <register_periph_iomem+0x4e>
2fff0880:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
2fff0884:	4298      	cmp	r0, r3
2fff0886:	d02b      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff0888:	d804      	bhi.n	2fff0894 <register_periph_iomem+0x40>
2fff088a:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
2fff088e:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
2fff0892:	e000      	b.n	2fff0896 <register_periph_iomem+0x42>
2fff0894:	4b2d      	ldr	r3, [pc, #180]	; (2fff094c <register_periph_iomem+0xf8>)
2fff0896:	4298      	cmp	r0, r3
2fff0898:	d022      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff089a:	f002 fae3 	bl	2fff2e64 <console_flush>
2fff089e:	f008 ec02 	blx	2fff90a4 <do_panic>
2fff08a2:	4b2b      	ldr	r3, [pc, #172]	; (2fff0950 <register_periph_iomem+0xfc>)
2fff08a4:	4298      	cmp	r0, r3
2fff08a6:	d01b      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff08a8:	d804      	bhi.n	2fff08b4 <register_periph_iomem+0x60>
2fff08aa:	4b2a      	ldr	r3, [pc, #168]	; (2fff0954 <register_periph_iomem+0x100>)
2fff08ac:	4298      	cmp	r0, r3
2fff08ae:	d017      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff08b0:	4b29      	ldr	r3, [pc, #164]	; (2fff0958 <register_periph_iomem+0x104>)
2fff08b2:	e7f0      	b.n	2fff0896 <register_periph_iomem+0x42>
2fff08b4:	4b29      	ldr	r3, [pc, #164]	; (2fff095c <register_periph_iomem+0x108>)
2fff08b6:	e7ee      	b.n	2fff0896 <register_periph_iomem+0x42>
2fff08b8:	4b29      	ldr	r3, [pc, #164]	; (2fff0960 <register_periph_iomem+0x10c>)
2fff08ba:	4298      	cmp	r0, r3
2fff08bc:	d010      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff08be:	d80c      	bhi.n	2fff08da <register_periph_iomem+0x86>
2fff08c0:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
2fff08c4:	4298      	cmp	r0, r3
2fff08c6:	d00b      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff08c8:	d805      	bhi.n	2fff08d6 <register_periph_iomem+0x82>
2fff08ca:	f1b0 2f50 	cmp.w	r0, #1342197760	; 0x50005000
2fff08ce:	d007      	beq.n	2fff08e0 <register_periph_iomem+0x8c>
2fff08d0:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
2fff08d4:	e7df      	b.n	2fff0896 <register_periph_iomem+0x42>
2fff08d6:	4b23      	ldr	r3, [pc, #140]	; (2fff0964 <register_periph_iomem+0x110>)
2fff08d8:	e7dd      	b.n	2fff0896 <register_periph_iomem+0x42>
2fff08da:	4b23      	ldr	r3, [pc, #140]	; (2fff0968 <register_periph_iomem+0x114>)
2fff08dc:	4298      	cmp	r0, r3
2fff08de:	d1d4      	bne.n	2fff088a <register_periph_iomem+0x36>
2fff08e0:	2902      	cmp	r1, #2
2fff08e2:	d1da      	bne.n	2fff089a <register_periph_iomem+0x46>
2fff08e4:	bd08      	pop	{r3, pc}
2fff08e6:	4b21      	ldr	r3, [pc, #132]	; (2fff096c <register_periph_iomem+0x118>)
2fff08e8:	4298      	cmp	r0, r3
2fff08ea:	d021      	beq.n	2fff0930 <register_periph_iomem+0xdc>
2fff08ec:	4b20      	ldr	r3, [pc, #128]	; (2fff0970 <register_periph_iomem+0x11c>)
2fff08ee:	e7d2      	b.n	2fff0896 <register_periph_iomem+0x42>
2fff08f0:	4b20      	ldr	r3, [pc, #128]	; (2fff0974 <register_periph_iomem+0x120>)
2fff08f2:	4298      	cmp	r0, r3
2fff08f4:	d01e      	beq.n	2fff0934 <register_periph_iomem+0xe0>
2fff08f6:	d809      	bhi.n	2fff090c <register_periph_iomem+0xb8>
2fff08f8:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
2fff08fc:	4298      	cmp	r0, r3
2fff08fe:	d01b      	beq.n	2fff0938 <register_periph_iomem+0xe4>
2fff0900:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
2fff0904:	4298      	cmp	r0, r3
2fff0906:	d1c8      	bne.n	2fff089a <register_periph_iomem+0x46>
2fff0908:	200a      	movs	r0, #10
2fff090a:	e009      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff090c:	4b1a      	ldr	r3, [pc, #104]	; (2fff0978 <register_periph_iomem+0x124>)
2fff090e:	4298      	cmp	r0, r3
2fff0910:	d014      	beq.n	2fff093c <register_periph_iomem+0xe8>
2fff0912:	f503 43a0 	add.w	r3, r3, #20480	; 0x5000
2fff0916:	4298      	cmp	r0, r3
2fff0918:	d1bf      	bne.n	2fff089a <register_periph_iomem+0x46>
2fff091a:	200b      	movs	r0, #11
2fff091c:	e000      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff091e:	2012      	movs	r0, #18
2fff0920:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0924:	f7ff bf3e 	b.w	2fff07a4 <register_periph>
2fff0928:	2009      	movs	r0, #9
2fff092a:	e7f9      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff092c:	2000      	movs	r0, #0
2fff092e:	e7f7      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff0930:	200f      	movs	r0, #15
2fff0932:	e7f5      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff0934:	200c      	movs	r0, #12
2fff0936:	e7f3      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff0938:	2011      	movs	r0, #17
2fff093a:	e7f1      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff093c:	2010      	movs	r0, #16
2fff093e:	e7ef      	b.n	2fff0920 <register_periph_iomem+0xcc>
2fff0940:	54002000 	.word	0x54002000
2fff0944:	50004000 	.word	0x50004000
2fff0948:	40018000 	.word	0x40018000
2fff094c:	40011000 	.word	0x40011000
2fff0950:	50002000 	.word	0x50002000
2fff0954:	40019000 	.word	0x40019000
2fff0958:	44003000 	.word	0x44003000
2fff095c:	50003000 	.word	0x50003000
2fff0960:	50009000 	.word	0x50009000
2fff0964:	50008000 	.word	0x50008000
2fff0968:	5000c000 	.word	0x5000c000
2fff096c:	54003000 	.word	0x54003000
2fff0970:	5a002000 	.word	0x5a002000
2fff0974:	5c003000 	.word	0x5c003000
2fff0978:	5c004000 	.word	0x5c004000

2fff097c <check_decprot>:
2fff097c:	b570      	push	{r4, r5, r6, lr}
2fff097e:	460c      	mov	r4, r1
2fff0980:	4605      	mov	r5, r0
2fff0982:	f7fe fbe1 	bl	2ffef148 <etzpc_get_decprot>
2fff0986:	42a0      	cmp	r0, r4
2fff0988:	4606      	mov	r6, r0
2fff098a:	d00b      	beq.n	2fff09a4 <check_decprot+0x28>
2fff098c:	b164      	cbz	r4, 2fff09a8 <check_decprot+0x2c>
2fff098e:	2c03      	cmp	r4, #3
2fff0990:	d115      	bne.n	2fff09be <check_decprot+0x42>
2fff0992:	b938      	cbnz	r0, 2fff09a4 <check_decprot+0x28>
2fff0994:	4628      	mov	r0, r5
2fff0996:	f7ff fecf 	bl	2fff0738 <decprot2str>
2fff099a:	4601      	mov	r1, r0
2fff099c:	462a      	mov	r2, r5
2fff099e:	480a      	ldr	r0, [pc, #40]	; (2fff09c8 <check_decprot+0x4c>)
2fff09a0:	f002 f9bc 	bl	2fff2d1c <tf_log>
2fff09a4:	2001      	movs	r0, #1
2fff09a6:	e009      	b.n	2fff09bc <check_decprot+0x40>
2fff09a8:	4628      	mov	r0, r5
2fff09aa:	f7ff fec5 	bl	2fff0738 <decprot2str>
2fff09ae:	4601      	mov	r1, r0
2fff09b0:	4633      	mov	r3, r6
2fff09b2:	4806      	ldr	r0, [pc, #24]	; (2fff09cc <check_decprot+0x50>)
2fff09b4:	462a      	mov	r2, r5
2fff09b6:	f002 f9b1 	bl	2fff2d1c <tf_log>
2fff09ba:	4620      	mov	r0, r4
2fff09bc:	bd70      	pop	{r4, r5, r6, pc}
2fff09be:	f002 fa51 	bl	2fff2e64 <console_flush>
2fff09c2:	f008 eb70 	blx	2fff90a4 <do_panic>
2fff09c6:	bf00      	nop
2fff09c8:	2fffaf37 	.word	0x2fffaf37
2fff09cc:	2fffaf5c 	.word	0x2fffaf5c

2fff09d0 <decprot_periph_attr>:
2fff09d0:	b510      	push	{r4, lr}
2fff09d2:	1e44      	subs	r4, r0, #1
2fff09d4:	2c07      	cmp	r4, #7
2fff09d6:	d808      	bhi.n	2fff09ea <decprot_periph_attr+0x1a>
2fff09d8:	f7ff feca 	bl	2fff0770 <get_gpioz_nbpin>
2fff09dc:	42a0      	cmp	r0, r4
2fff09de:	d80b      	bhi.n	2fff09f8 <decprot_periph_attr+0x28>
2fff09e0:	4807      	ldr	r0, [pc, #28]	; (2fff0a00 <decprot_periph_attr+0x30>)
2fff09e2:	f240 2155 	movw	r1, #597	; 0x255
2fff09e6:	f009 fb97 	bl	2fffa118 <__assert>
2fff09ea:	4b06      	ldr	r3, [pc, #24]	; (2fff0a04 <decprot_periph_attr+0x34>)
2fff09ec:	2201      	movs	r2, #1
2fff09ee:	701a      	strb	r2, [r3, #0]
2fff09f0:	4b05      	ldr	r3, [pc, #20]	; (2fff0a08 <decprot_periph_attr+0x38>)
2fff09f2:	5c1b      	ldrb	r3, [r3, r0]
2fff09f4:	4293      	cmp	r3, r2
2fff09f6:	d001      	beq.n	2fff09fc <decprot_periph_attr+0x2c>
2fff09f8:	2003      	movs	r0, #3
2fff09fa:	bd10      	pop	{r4, pc}
2fff09fc:	2000      	movs	r0, #0
2fff09fe:	e7fc      	b.n	2fff09fa <decprot_periph_attr+0x2a>
2fff0a00:	2fffaedf 	.word	0x2fffaedf
2fff0a04:	2fffe78c 	.word	0x2fffe78c
2fff0a08:	2fffe78d 	.word	0x2fffe78d

2fff0a0c <stm32mp_gpio_bank_is_non_secure.part.0>:
2fff0a0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff0a10:	2400      	movs	r4, #0
2fff0a12:	4e0c      	ldr	r6, [pc, #48]	; (2fff0a44 <stm32mp_gpio_bank_is_non_secure.part.0+0x38>)
2fff0a14:	4625      	mov	r5, r4
2fff0a16:	f8df 8030 	ldr.w	r8, [pc, #48]	; 2fff0a48 <stm32mp_gpio_bank_is_non_secure.part.0+0x3c>
2fff0a1a:	2701      	movs	r7, #1
2fff0a1c:	f7ff fea8 	bl	2fff0770 <get_gpioz_nbpin>
2fff0a20:	4284      	cmp	r4, r0
2fff0a22:	d306      	bcc.n	2fff0a32 <stm32mp_gpio_bank_is_non_secure.part.0+0x26>
2fff0a24:	f7ff fea4 	bl	2fff0770 <get_gpioz_nbpin>
2fff0a28:	1a2b      	subs	r3, r5, r0
2fff0a2a:	4258      	negs	r0, r3
2fff0a2c:	4158      	adcs	r0, r3
2fff0a2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff0a32:	7037      	strb	r7, [r6, #0]
2fff0a34:	3401      	adds	r4, #1
2fff0a36:	f814 3008 	ldrb.w	r3, [r4, r8]
2fff0a3a:	2b01      	cmp	r3, #1
2fff0a3c:	bf18      	it	ne
2fff0a3e:	3501      	addne	r5, #1
2fff0a40:	e7ec      	b.n	2fff0a1c <stm32mp_gpio_bank_is_non_secure.part.0+0x10>
2fff0a42:	bf00      	nop
2fff0a44:	2fffe78c 	.word	0x2fffe78c
2fff0a48:	2fffe78d 	.word	0x2fffe78d

2fff0a4c <stm32mp_register_secure_periph>:
2fff0a4c:	2101      	movs	r1, #1
2fff0a4e:	f7ff bea9 	b.w	2fff07a4 <register_periph>

2fff0a52 <stm32mp_register_secure_periph_iomem>:
2fff0a52:	2101      	movs	r1, #1
2fff0a54:	f7ff befe 	b.w	2fff0854 <register_periph_iomem>

2fff0a58 <stm32mp_register_non_secure_periph_iomem>:
2fff0a58:	2102      	movs	r1, #2
2fff0a5a:	f7ff befb 	b.w	2fff0854 <register_periph_iomem>
	...

2fff0a60 <stm32mp_register_secure_gpio>:
2fff0a60:	2819      	cmp	r0, #25
2fff0a62:	b508      	push	{r3, lr}
2fff0a64:	460b      	mov	r3, r1
2fff0a66:	d105      	bne.n	2fff0a74 <stm32mp_register_secure_gpio+0x14>
2fff0a68:	2101      	movs	r1, #1
2fff0a6a:	1858      	adds	r0, r3, r1
2fff0a6c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff0a70:	f7ff be98 	b.w	2fff07a4 <register_periph>
2fff0a74:	4601      	mov	r1, r0
2fff0a76:	4803      	ldr	r0, [pc, #12]	; (2fff0a84 <stm32mp_register_secure_gpio+0x24>)
2fff0a78:	f002 f950 	bl	2fff2d1c <tf_log>
2fff0a7c:	f002 f9f2 	bl	2fff2e64 <console_flush>
2fff0a80:	f008 eb10 	blx	2fff90a4 <do_panic>
2fff0a84:	2fffaf8e 	.word	0x2fffaf8e

2fff0a88 <stm32mp_register_non_secure_gpio>:
2fff0a88:	2819      	cmp	r0, #25
2fff0a8a:	460b      	mov	r3, r1
2fff0a8c:	d103      	bne.n	2fff0a96 <stm32mp_register_non_secure_gpio+0xe>
2fff0a8e:	2102      	movs	r1, #2
2fff0a90:	1c58      	adds	r0, r3, #1
2fff0a92:	f7ff be87 	b.w	2fff07a4 <register_periph>
2fff0a96:	4770      	bx	lr

2fff0a98 <stm32mp1_register_etzpc_decprot>:
2fff0a98:	b538      	push	{r3, r4, r5, lr}
2fff0a9a:	b131      	cbz	r1, 2fff0aaa <stm32mp1_register_etzpc_decprot+0x12>
2fff0a9c:	3901      	subs	r1, #1
2fff0a9e:	2902      	cmp	r1, #2
2fff0aa0:	d921      	bls.n	2fff0ae6 <stm32mp1_register_etzpc_decprot+0x4e>
2fff0aa2:	f002 f9df 	bl	2fff2e64 <console_flush>
2fff0aa6:	f008 eafe 	blx	2fff90a4 <do_panic>
2fff0aaa:	2801      	cmp	r0, #1
2fff0aac:	d911      	bls.n	2fff0ad2 <stm32mp1_register_etzpc_decprot+0x3a>
2fff0aae:	f1a0 030a 	sub.w	r3, r0, #10
2fff0ab2:	2b01      	cmp	r3, #1
2fff0ab4:	d90d      	bls.n	2fff0ad2 <stm32mp1_register_etzpc_decprot+0x3a>
2fff0ab6:	2101      	movs	r1, #1
2fff0ab8:	4a0f      	ldr	r2, [pc, #60]	; (2fff0af8 <stm32mp1_register_etzpc_decprot+0x60>)
2fff0aba:	2300      	movs	r3, #0
2fff0abc:	4614      	mov	r4, r2
2fff0abe:	6855      	ldr	r5, [r2, #4]
2fff0ac0:	42a8      	cmp	r0, r5
2fff0ac2:	d107      	bne.n	2fff0ad4 <stm32mp1_register_etzpc_decprot+0x3c>
2fff0ac4:	220c      	movs	r2, #12
2fff0ac6:	4353      	muls	r3, r2
2fff0ac8:	58e0      	ldr	r0, [r4, r3]
2fff0aca:	1c43      	adds	r3, r0, #1
2fff0acc:	d107      	bne.n	2fff0ade <stm32mp1_register_etzpc_decprot+0x46>
2fff0ace:	2901      	cmp	r1, #1
2fff0ad0:	d0e7      	beq.n	2fff0aa2 <stm32mp1_register_etzpc_decprot+0xa>
2fff0ad2:	bd38      	pop	{r3, r4, r5, pc}
2fff0ad4:	3301      	adds	r3, #1
2fff0ad6:	320c      	adds	r2, #12
2fff0ad8:	2b0c      	cmp	r3, #12
2fff0ada:	d1f0      	bne.n	2fff0abe <stm32mp1_register_etzpc_decprot+0x26>
2fff0adc:	e7f7      	b.n	2fff0ace <stm32mp1_register_etzpc_decprot+0x36>
2fff0ade:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff0ae2:	f7ff be5f 	b.w	2fff07a4 <register_periph>
2fff0ae6:	2801      	cmp	r0, #1
2fff0ae8:	d9db      	bls.n	2fff0aa2 <stm32mp1_register_etzpc_decprot+0xa>
2fff0aea:	f1a0 030a 	sub.w	r3, r0, #10
2fff0aee:	2b01      	cmp	r3, #1
2fff0af0:	d9d7      	bls.n	2fff0aa2 <stm32mp1_register_etzpc_decprot+0xa>
2fff0af2:	2102      	movs	r1, #2
2fff0af4:	e7e0      	b.n	2fff0ab8 <stm32mp1_register_etzpc_decprot+0x20>
2fff0af6:	bf00      	nop
2fff0af8:	2fffb0a0 	.word	0x2fffb0a0

2fff0afc <stm32mp_gpio_bank_is_non_secure>:
2fff0afc:	4a04      	ldr	r2, [pc, #16]	; (2fff0b10 <stm32mp_gpio_bank_is_non_secure+0x14>)
2fff0afe:	2819      	cmp	r0, #25
2fff0b00:	f04f 0301 	mov.w	r3, #1
2fff0b04:	7013      	strb	r3, [r2, #0]
2fff0b06:	d101      	bne.n	2fff0b0c <stm32mp_gpio_bank_is_non_secure+0x10>
2fff0b08:	f7ff bf80 	b.w	2fff0a0c <stm32mp_gpio_bank_is_non_secure.part.0>
2fff0b0c:	4618      	mov	r0, r3
2fff0b0e:	4770      	bx	lr
2fff0b10:	2fffe78c 	.word	0x2fffe78c

2fff0b14 <stm32mp_nsec_can_access_clock>:
2fff0b14:	2805      	cmp	r0, #5
2fff0b16:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff0b1a:	d95c      	bls.n	2fff0bd6 <stm32mp_nsec_can_access_clock+0xc2>
2fff0b1c:	f1a0 03b4 	sub.w	r3, r0, #180	; 0xb4
2fff0b20:	2b08      	cmp	r3, #8
2fff0b22:	d958      	bls.n	2fff0bd6 <stm32mp_nsec_can_access_clock+0xc2>
2fff0b24:	2887      	cmp	r0, #135	; 0x87
2fff0b26:	d044      	beq.n	2fff0bb2 <stm32mp_nsec_can_access_clock+0x9e>
2fff0b28:	d826      	bhi.n	2fff0b78 <stm32mp_nsec_can_access_clock+0x64>
2fff0b2a:	2860      	cmp	r0, #96	; 0x60
2fff0b2c:	d049      	beq.n	2fff0bc2 <stm32mp_nsec_can_access_clock+0xae>
2fff0b2e:	d81d      	bhi.n	2fff0b6c <stm32mp_nsec_can_access_clock+0x58>
2fff0b30:	2845      	cmp	r0, #69	; 0x45
2fff0b32:	d050      	beq.n	2fff0bd6 <stm32mp_nsec_can_access_clock+0xc2>
2fff0b34:	d806      	bhi.n	2fff0b44 <stm32mp_nsec_can_access_clock+0x30>
2fff0b36:	2841      	cmp	r0, #65	; 0x41
2fff0b38:	d04d      	beq.n	2fff0bd6 <stm32mp_nsec_can_access_clock+0xc2>
2fff0b3a:	2844      	cmp	r0, #68	; 0x44
2fff0b3c:	d043      	beq.n	2fff0bc6 <stm32mp_nsec_can_access_clock+0xb2>
2fff0b3e:	2000      	movs	r0, #0
2fff0b40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff0b44:	285f      	cmp	r0, #95	; 0x5f
2fff0b46:	d1fa      	bne.n	2fff0b3e <stm32mp_nsec_can_access_clock+0x2a>
2fff0b48:	4e24      	ldr	r6, [pc, #144]	; (2fff0bdc <stm32mp_nsec_can_access_clock+0xc8>)
2fff0b4a:	2201      	movs	r2, #1
2fff0b4c:	f8df 8090 	ldr.w	r8, [pc, #144]	; 2fff0be0 <stm32mp_nsec_can_access_clock+0xcc>
2fff0b50:	2500      	movs	r5, #0
2fff0b52:	7032      	strb	r2, [r6, #0]
2fff0b54:	462c      	mov	r4, r5
2fff0b56:	4617      	mov	r7, r2
2fff0b58:	f7ff fe0a 	bl	2fff0770 <get_gpioz_nbpin>
2fff0b5c:	4285      	cmp	r5, r0
2fff0b5e:	d320      	bcc.n	2fff0ba2 <stm32mp_nsec_can_access_clock+0x8e>
2fff0b60:	f7ff fe06 	bl	2fff0770 <get_gpioz_nbpin>
2fff0b64:	1a20      	subs	r0, r4, r0
2fff0b66:	bf18      	it	ne
2fff0b68:	2001      	movne	r0, #1
2fff0b6a:	e7e9      	b.n	2fff0b40 <stm32mp_nsec_can_access_clock+0x2c>
2fff0b6c:	2861      	cmp	r0, #97	; 0x61
2fff0b6e:	d02c      	beq.n	2fff0bca <stm32mp_nsec_can_access_clock+0xb6>
2fff0b70:	287c      	cmp	r0, #124	; 0x7c
2fff0b72:	d1e4      	bne.n	2fff0b3e <stm32mp_nsec_can_access_clock+0x2a>
2fff0b74:	230f      	movs	r3, #15
2fff0b76:	e01d      	b.n	2fff0bb4 <stm32mp_nsec_can_access_clock+0xa0>
2fff0b78:	2894      	cmp	r0, #148	; 0x94
2fff0b7a:	d028      	beq.n	2fff0bce <stm32mp_nsec_can_access_clock+0xba>
2fff0b7c:	d805      	bhi.n	2fff0b8a <stm32mp_nsec_can_access_clock+0x76>
2fff0b7e:	288c      	cmp	r0, #140	; 0x8c
2fff0b80:	d027      	beq.n	2fff0bd2 <stm32mp_nsec_can_access_clock+0xbe>
2fff0b82:	288e      	cmp	r0, #142	; 0x8e
2fff0b84:	d1db      	bne.n	2fff0b3e <stm32mp_nsec_can_access_clock+0x2a>
2fff0b86:	230b      	movs	r3, #11
2fff0b88:	e014      	b.n	2fff0bb4 <stm32mp_nsec_can_access_clock+0xa0>
2fff0b8a:	28c3      	cmp	r0, #195	; 0xc3
2fff0b8c:	d805      	bhi.n	2fff0b9a <stm32mp_nsec_can_access_clock+0x86>
2fff0b8e:	28c1      	cmp	r0, #193	; 0xc1
2fff0b90:	d821      	bhi.n	2fff0bd6 <stm32mp_nsec_can_access_clock+0xc2>
2fff0b92:	28c0      	cmp	r0, #192	; 0xc0
2fff0b94:	d1d3      	bne.n	2fff0b3e <stm32mp_nsec_can_access_clock+0x2a>
2fff0b96:	2310      	movs	r3, #16
2fff0b98:	e00c      	b.n	2fff0bb4 <stm32mp_nsec_can_access_clock+0xa0>
2fff0b9a:	28c4      	cmp	r0, #196	; 0xc4
2fff0b9c:	d1cf      	bne.n	2fff0b3e <stm32mp_nsec_can_access_clock+0x2a>
2fff0b9e:	230d      	movs	r3, #13
2fff0ba0:	e008      	b.n	2fff0bb4 <stm32mp_nsec_can_access_clock+0xa0>
2fff0ba2:	7037      	strb	r7, [r6, #0]
2fff0ba4:	3501      	adds	r5, #1
2fff0ba6:	f815 3008 	ldrb.w	r3, [r5, r8]
2fff0baa:	2b01      	cmp	r3, #1
2fff0bac:	bf08      	it	eq
2fff0bae:	3401      	addeq	r4, #1
2fff0bb0:	e7d2      	b.n	2fff0b58 <stm32mp_nsec_can_access_clock+0x44>
2fff0bb2:	2311      	movs	r3, #17
2fff0bb4:	4a09      	ldr	r2, [pc, #36]	; (2fff0bdc <stm32mp_nsec_can_access_clock+0xc8>)
2fff0bb6:	2101      	movs	r1, #1
2fff0bb8:	7011      	strb	r1, [r2, #0]
2fff0bba:	4a09      	ldr	r2, [pc, #36]	; (2fff0be0 <stm32mp_nsec_can_access_clock+0xcc>)
2fff0bbc:	5cd0      	ldrb	r0, [r2, r3]
2fff0bbe:	1a40      	subs	r0, r0, r1
2fff0bc0:	e7d1      	b.n	2fff0b66 <stm32mp_nsec_can_access_clock+0x52>
2fff0bc2:	2300      	movs	r3, #0
2fff0bc4:	e7f6      	b.n	2fff0bb4 <stm32mp_nsec_can_access_clock+0xa0>
2fff0bc6:	230c      	movs	r3, #12
2fff0bc8:	e7f4      	b.n	2fff0bb4 <stm32mp_nsec_can_access_clock+0xa0>
2fff0bca:	2309      	movs	r3, #9
2fff0bcc:	e7f2      	b.n	2fff0bb4 <stm32mp_nsec_can_access_clock+0xa0>
2fff0bce:	2312      	movs	r3, #18
2fff0bd0:	e7f0      	b.n	2fff0bb4 <stm32mp_nsec_can_access_clock+0xa0>
2fff0bd2:	230a      	movs	r3, #10
2fff0bd4:	e7ee      	b.n	2fff0bb4 <stm32mp_nsec_can_access_clock+0xa0>
2fff0bd6:	2001      	movs	r0, #1
2fff0bd8:	e7b2      	b.n	2fff0b40 <stm32mp_nsec_can_access_clock+0x2c>
2fff0bda:	bf00      	nop
2fff0bdc:	2fffe78c 	.word	0x2fffe78c
2fff0be0:	2fffe78d 	.word	0x2fffe78d

2fff0be4 <stm32mp_nsec_can_access_reset>:
2fff0be4:	f640 4386 	movw	r3, #3206	; 0xc86
2fff0be8:	4298      	cmp	r0, r3
2fff0bea:	d839      	bhi.n	2fff0c60 <stm32mp_nsec_can_access_reset+0x7c>
2fff0bec:	f5b0 6f48 	cmp.w	r0, #3200	; 0xc80
2fff0bf0:	d205      	bcs.n	2fff0bfe <stm32mp_nsec_can_access_reset+0x1a>
2fff0bf2:	f5a0 6044 	sub.w	r0, r0, #3136	; 0xc40
2fff0bf6:	2804      	cmp	r0, #4
2fff0bf8:	d920      	bls.n	2fff0c3c <stm32mp_nsec_can_access_reset+0x58>
2fff0bfa:	2000      	movs	r0, #0
2fff0bfc:	4770      	bx	lr
2fff0bfe:	f5a0 6048 	sub.w	r0, r0, #3200	; 0xc80
2fff0c02:	2806      	cmp	r0, #6
2fff0c04:	d8f9      	bhi.n	2fff0bfa <stm32mp_nsec_can_access_reset+0x16>
2fff0c06:	a301      	add	r3, pc, #4	; (adr r3, 2fff0c0c <stm32mp_nsec_can_access_reset+0x28>)
2fff0c08:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
2fff0c0c:	2fff0c73 	.word	0x2fff0c73
2fff0c10:	2fff0bfb 	.word	0x2fff0bfb
2fff0c14:	2fff0bfb 	.word	0x2fff0bfb
2fff0c18:	2fff0bfb 	.word	0x2fff0bfb
2fff0c1c:	2fff0c29 	.word	0x2fff0c29
2fff0c20:	2fff0c89 	.word	0x2fff0c89
2fff0c24:	2fff0c85 	.word	0x2fff0c85
2fff0c28:	2300      	movs	r3, #0
2fff0c2a:	4a1a      	ldr	r2, [pc, #104]	; (2fff0c94 <stm32mp_nsec_can_access_reset+0xb0>)
2fff0c2c:	2101      	movs	r1, #1
2fff0c2e:	7011      	strb	r1, [r2, #0]
2fff0c30:	4a19      	ldr	r2, [pc, #100]	; (2fff0c98 <stm32mp_nsec_can_access_reset+0xb4>)
2fff0c32:	5cd0      	ldrb	r0, [r2, r3]
2fff0c34:	1a40      	subs	r0, r0, r1
2fff0c36:	bf18      	it	ne
2fff0c38:	2001      	movne	r0, #1
2fff0c3a:	4770      	bx	lr
2fff0c3c:	2804      	cmp	r0, #4
2fff0c3e:	d8dc      	bhi.n	2fff0bfa <stm32mp_nsec_can_access_reset+0x16>
2fff0c40:	a301      	add	r3, pc, #4	; (adr r3, 2fff0c48 <stm32mp_nsec_can_access_reset+0x64>)
2fff0c42:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
2fff0c46:	bf00      	nop
2fff0c48:	2fff0c8d 	.word	0x2fff0c8d
2fff0c4c:	2fff0bfb 	.word	0x2fff0bfb
2fff0c50:	2fff0c5d 	.word	0x2fff0c5d
2fff0c54:	2fff0c7d 	.word	0x2fff0c7d
2fff0c58:	2fff0c81 	.word	0x2fff0c81
2fff0c5c:	230a      	movs	r3, #10
2fff0c5e:	e7e4      	b.n	2fff0c2a <stm32mp_nsec_can_access_reset+0x46>
2fff0c60:	f5b0 6f50 	cmp.w	r0, #3328	; 0xd00
2fff0c64:	d014      	beq.n	2fff0c90 <stm32mp_nsec_can_access_reset+0xac>
2fff0c66:	f242 0321 	movw	r3, #8225	; 0x2021
2fff0c6a:	4298      	cmp	r0, r3
2fff0c6c:	d1c5      	bne.n	2fff0bfa <stm32mp_nsec_can_access_reset+0x16>
2fff0c6e:	230d      	movs	r3, #13
2fff0c70:	e7db      	b.n	2fff0c2a <stm32mp_nsec_can_access_reset+0x46>
2fff0c72:	4b08      	ldr	r3, [pc, #32]	; (2fff0c94 <stm32mp_nsec_can_access_reset+0xb0>)
2fff0c74:	2201      	movs	r2, #1
2fff0c76:	701a      	strb	r2, [r3, #0]
2fff0c78:	f7ff bec8 	b.w	2fff0a0c <stm32mp_gpio_bank_is_non_secure.part.0>
2fff0c7c:	230b      	movs	r3, #11
2fff0c7e:	e7d4      	b.n	2fff0c2a <stm32mp_nsec_can_access_reset+0x46>
2fff0c80:	2312      	movs	r3, #18
2fff0c82:	e7d2      	b.n	2fff0c2a <stm32mp_nsec_can_access_reset+0x46>
2fff0c84:	230f      	movs	r3, #15
2fff0c86:	e7d0      	b.n	2fff0c2a <stm32mp_nsec_can_access_reset+0x46>
2fff0c88:	2309      	movs	r3, #9
2fff0c8a:	e7ce      	b.n	2fff0c2a <stm32mp_nsec_can_access_reset+0x46>
2fff0c8c:	2311      	movs	r3, #17
2fff0c8e:	e7cc      	b.n	2fff0c2a <stm32mp_nsec_can_access_reset+0x46>
2fff0c90:	230e      	movs	r3, #14
2fff0c92:	e7ca      	b.n	2fff0c2a <stm32mp_nsec_can_access_reset+0x46>
2fff0c94:	2fffe78c 	.word	0x2fffe78c
2fff0c98:	2fffe78d 	.word	0x2fffe78d

2fff0c9c <stm32mp_lock_periph_registering>:
2fff0c9c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff0ca0:	2400      	movs	r4, #0
2fff0ca2:	f8df 91a8 	ldr.w	r9, [pc, #424]	; 2fff0e4c <stm32mp_lock_periph_registering+0x1b0>
2fff0ca6:	2301      	movs	r3, #1
2fff0ca8:	4f61      	ldr	r7, [pc, #388]	; (2fff0e30 <stm32mp_lock_periph_registering+0x194>)
2fff0caa:	4e62      	ldr	r6, [pc, #392]	; (2fff0e34 <stm32mp_lock_periph_registering+0x198>)
2fff0cac:	464d      	mov	r5, r9
2fff0cae:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 2fff0e50 <stm32mp_lock_periph_registering+0x1b4>
2fff0cb2:	46cb      	mov	fp, r9
2fff0cb4:	f8df a19c 	ldr.w	sl, [pc, #412]	; 2fff0e54 <stm32mp_lock_periph_registering+0x1b8>
2fff0cb8:	703b      	strb	r3, [r7, #0]
2fff0cba:	f815 2b01 	ldrb.w	r2, [r5], #1
2fff0cbe:	2a02      	cmp	r2, #2
2fff0cc0:	d904      	bls.n	2fff0ccc <stm32mp_lock_periph_registering+0x30>
2fff0cc2:	f44f 7135 	mov.w	r1, #724	; 0x2d4
2fff0cc6:	485c      	ldr	r0, [pc, #368]	; (2fff0e38 <stm32mp_lock_periph_registering+0x19c>)
2fff0cc8:	f009 fa26 	bl	2fffa118 <__assert>
2fff0ccc:	2a01      	cmp	r2, #1
2fff0cce:	d106      	bne.n	2fff0cde <stm32mp_lock_periph_registering+0x42>
2fff0cd0:	f856 1024 	ldr.w	r1, [r6, r4, lsl #2]
2fff0cd4:	4643      	mov	r3, r8
2fff0cd6:	4622      	mov	r2, r4
2fff0cd8:	4650      	mov	r0, sl
2fff0cda:	f002 f81f 	bl	2fff2d1c <tf_log>
2fff0cde:	3401      	adds	r4, #1
2fff0ce0:	2c14      	cmp	r4, #20
2fff0ce2:	d1ea      	bne.n	2fff0cba <stm32mp_lock_periph_registering+0x1e>
2fff0ce4:	f8df a170 	ldr.w	sl, [pc, #368]	; 2fff0e58 <stm32mp_lock_periph_registering+0x1bc>
2fff0ce8:	f005 fa92 	bl	2fff6210 <stm32mp1_dump_clocks_state>
2fff0cec:	2400      	movs	r4, #0
2fff0cee:	f004 fdbe 	bl	2fff586e <stm32mp1_rcc_is_mckprot>
2fff0cf2:	4680      	mov	r8, r0
2fff0cf4:	f004 fdb4 	bl	2fff5860 <stm32mp1_rcc_is_secure>
2fff0cf8:	4606      	mov	r6, r0
2fff0cfa:	4625      	mov	r5, r4
2fff0cfc:	484f      	ldr	r0, [pc, #316]	; (2fff0e3c <stm32mp_lock_periph_registering+0x1a0>)
2fff0cfe:	f819 3b01 	ldrb.w	r3, [r9], #1
2fff0d02:	2b01      	cmp	r3, #1
2fff0d04:	d11d      	bne.n	2fff0d42 <stm32mp_lock_periph_registering+0xa6>
2fff0d06:	2d0d      	cmp	r5, #13
2fff0d08:	d001      	beq.n	2fff0d0e <stm32mp_lock_periph_registering+0x72>
2fff0d0a:	2d13      	cmp	r5, #19
2fff0d0c:	d109      	bne.n	2fff0d22 <stm32mp_lock_periph_registering+0x86>
2fff0d0e:	f1b8 0f00 	cmp.w	r8, #0
2fff0d12:	f040 8088 	bne.w	2fff0e26 <stm32mp_lock_periph_registering+0x18a>
2fff0d16:	494a      	ldr	r1, [pc, #296]	; (2fff0e40 <stm32mp_lock_periph_registering+0x1a4>)
2fff0d18:	4a4a      	ldr	r2, [pc, #296]	; (2fff0e44 <stm32mp_lock_periph_registering+0x1a8>)
2fff0d1a:	2e00      	cmp	r6, #0
2fff0d1c:	bf08      	it	eq
2fff0d1e:	4651      	moveq	r1, sl
2fff0d20:	e007      	b.n	2fff0d32 <stm32mp_lock_periph_registering+0x96>
2fff0d22:	b976      	cbnz	r6, 2fff0d42 <stm32mp_lock_periph_registering+0xa6>
2fff0d24:	4a47      	ldr	r2, [pc, #284]	; (2fff0e44 <stm32mp_lock_periph_registering+0x1a8>)
2fff0d26:	4651      	mov	r1, sl
2fff0d28:	4b47      	ldr	r3, [pc, #284]	; (2fff0e48 <stm32mp_lock_periph_registering+0x1ac>)
2fff0d2a:	f1b8 0f00 	cmp.w	r8, #0
2fff0d2e:	bf18      	it	ne
2fff0d30:	461a      	movne	r2, r3
2fff0d32:	4b40      	ldr	r3, [pc, #256]	; (2fff0e34 <stm32mp_lock_periph_registering+0x198>)
2fff0d34:	3401      	adds	r4, #1
2fff0d36:	9500      	str	r5, [sp, #0]
2fff0d38:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
2fff0d3c:	f001 ffee 	bl	2fff2d1c <tf_log>
2fff0d40:	483e      	ldr	r0, [pc, #248]	; (2fff0e3c <stm32mp_lock_periph_registering+0x1a0>)
2fff0d42:	3501      	adds	r5, #1
2fff0d44:	2d14      	cmp	r5, #20
2fff0d46:	d1da      	bne.n	2fff0cfe <stm32mp_lock_periph_registering+0x62>
2fff0d48:	b11c      	cbz	r4, 2fff0d52 <stm32mp_lock_periph_registering+0xb6>
2fff0d4a:	f002 f88b 	bl	2fff2e64 <console_flush>
2fff0d4e:	f008 e9aa 	blx	2fff90a4 <do_panic>
2fff0d52:	783b      	ldrb	r3, [r7, #0]
2fff0d54:	b913      	cbnz	r3, 2fff0d5c <stm32mp_lock_periph_registering+0xc0>
2fff0d56:	f240 2182 	movw	r1, #642	; 0x282
2fff0d5a:	e7b4      	b.n	2fff0cc6 <stm32mp_lock_periph_registering+0x2a>
2fff0d5c:	4621      	mov	r1, r4
2fff0d5e:	4620      	mov	r0, r4
2fff0d60:	f7ff fe0c 	bl	2fff097c <check_decprot>
2fff0d64:	4605      	mov	r5, r0
2fff0d66:	4621      	mov	r1, r4
2fff0d68:	2001      	movs	r0, #1
2fff0d6a:	f7ff fe07 	bl	2fff097c <check_decprot>
2fff0d6e:	4005      	ands	r5, r0
2fff0d70:	2012      	movs	r0, #18
2fff0d72:	b2ed      	uxtb	r5, r5
2fff0d74:	f7ff fe2c 	bl	2fff09d0 <decprot_periph_attr>
2fff0d78:	4601      	mov	r1, r0
2fff0d7a:	2003      	movs	r0, #3
2fff0d7c:	f7ff fdfe 	bl	2fff097c <check_decprot>
2fff0d80:	4005      	ands	r5, r0
2fff0d82:	2011      	movs	r0, #17
2fff0d84:	f7ff fe24 	bl	2fff09d0 <decprot_periph_attr>
2fff0d88:	4601      	mov	r1, r0
2fff0d8a:	2004      	movs	r0, #4
2fff0d8c:	f7ff fdf6 	bl	2fff097c <check_decprot>
2fff0d90:	4005      	ands	r5, r0
2fff0d92:	200a      	movs	r0, #10
2fff0d94:	f7ff fe1c 	bl	2fff09d0 <decprot_periph_attr>
2fff0d98:	4601      	mov	r1, r0
2fff0d9a:	2005      	movs	r0, #5
2fff0d9c:	f7ff fdee 	bl	2fff097c <check_decprot>
2fff0da0:	4005      	ands	r5, r0
2fff0da2:	200f      	movs	r0, #15
2fff0da4:	f7ff fe14 	bl	2fff09d0 <decprot_periph_attr>
2fff0da8:	4601      	mov	r1, r0
2fff0daa:	2007      	movs	r0, #7
2fff0dac:	f7ff fde6 	bl	2fff097c <check_decprot>
2fff0db0:	4005      	ands	r5, r0
2fff0db2:	2009      	movs	r0, #9
2fff0db4:	f7ff fe0c 	bl	2fff09d0 <decprot_periph_attr>
2fff0db8:	4601      	mov	r1, r0
2fff0dba:	2008      	movs	r0, #8
2fff0dbc:	f7ff fdde 	bl	2fff097c <check_decprot>
2fff0dc0:	4005      	ands	r5, r0
2fff0dc2:	4620      	mov	r0, r4
2fff0dc4:	f7ff fe04 	bl	2fff09d0 <decprot_periph_attr>
2fff0dc8:	4601      	mov	r1, r0
2fff0dca:	2009      	movs	r0, #9
2fff0dcc:	f7ff fdd6 	bl	2fff097c <check_decprot>
2fff0dd0:	4005      	ands	r5, r0
2fff0dd2:	4621      	mov	r1, r4
2fff0dd4:	200a      	movs	r0, #10
2fff0dd6:	f7ff fdd1 	bl	2fff097c <check_decprot>
2fff0dda:	4005      	ands	r5, r0
2fff0ddc:	4621      	mov	r1, r4
2fff0dde:	200b      	movs	r0, #11
2fff0de0:	f7ff fdcc 	bl	2fff097c <check_decprot>
2fff0de4:	4005      	ands	r5, r0
2fff0de6:	200b      	movs	r0, #11
2fff0de8:	f7ff fdf2 	bl	2fff09d0 <decprot_periph_attr>
2fff0dec:	4601      	mov	r1, r0
2fff0dee:	200c      	movs	r0, #12
2fff0df0:	f7ff fdc4 	bl	2fff097c <check_decprot>
2fff0df4:	2d00      	cmp	r5, #0
2fff0df6:	d0a8      	beq.n	2fff0d4a <stm32mp_lock_periph_registering+0xae>
2fff0df8:	2800      	cmp	r0, #0
2fff0dfa:	d0a6      	beq.n	2fff0d4a <stm32mp_lock_periph_registering+0xae>
2fff0dfc:	2601      	movs	r6, #1
2fff0dfe:	f7ff fcb7 	bl	2fff0770 <get_gpioz_nbpin>
2fff0e02:	4284      	cmp	r4, r0
2fff0e04:	d302      	bcc.n	2fff0e0c <stm32mp_lock_periph_registering+0x170>
2fff0e06:	b003      	add	sp, #12
2fff0e08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff0e0c:	703e      	strb	r6, [r7, #0]
2fff0e0e:	1c65      	adds	r5, r4, #1
2fff0e10:	4621      	mov	r1, r4
2fff0e12:	2019      	movs	r0, #25
2fff0e14:	f81b 2005 	ldrb.w	r2, [fp, r5]
2fff0e18:	462c      	mov	r4, r5
2fff0e1a:	1e53      	subs	r3, r2, #1
2fff0e1c:	425a      	negs	r2, r3
2fff0e1e:	415a      	adcs	r2, r3
2fff0e20:	f005 ff60 	bl	2fff6ce4 <set_gpio_secure_cfg>
2fff0e24:	e7eb      	b.n	2fff0dfe <stm32mp_lock_periph_registering+0x162>
2fff0e26:	2e00      	cmp	r6, #0
2fff0e28:	d18b      	bne.n	2fff0d42 <stm32mp_lock_periph_registering+0xa6>
2fff0e2a:	4a07      	ldr	r2, [pc, #28]	; (2fff0e48 <stm32mp_lock_periph_registering+0x1ac>)
2fff0e2c:	4651      	mov	r1, sl
2fff0e2e:	e780      	b.n	2fff0d32 <stm32mp_lock_periph_registering+0x96>
2fff0e30:	2fffe78c 	.word	0x2fffe78c
2fff0e34:	2fffb130 	.word	0x2fffb130
2fff0e38:	2fffaedf 	.word	0x2fffaedf
2fff0e3c:	2fffafdf 	.word	0x2fffafdf
2fff0e40:	2fffafb3 	.word	0x2fffafb3
2fff0e44:	2fffafba 	.word	0x2fffafba
2fff0e48:	2fffafbe 	.word	0x2fffafbe
2fff0e4c:	2fffe78d 	.word	0x2fffe78d
2fff0e50:	2fffafc2 	.word	0x2fffafc2
2fff0e54:	2fffafc9 	.word	0x2fffafc9
2fff0e58:	2fffafaf 	.word	0x2fffafaf

2fff0e5c <plat_get_power_domain_tree_desc>:
2fff0e5c:	4800      	ldr	r0, [pc, #0]	; (2fff0e60 <plat_get_power_domain_tree_desc+0x4>)
2fff0e5e:	4770      	bx	lr
2fff0e60:	2fffb180 	.word	0x2fffb180

2fff0e64 <plat_core_pos_by_mpidr>:
2fff0e64:	f410 0f7f 	tst.w	r0, #16711680	; 0xff0000
2fff0e68:	d10a      	bne.n	2fff0e80 <plat_core_pos_by_mpidr+0x1c>
2fff0e6a:	f3c0 2207 	ubfx	r2, r0, #8, #8
2fff0e6e:	b2c3      	uxtb	r3, r0
2fff0e70:	f000 00fe 	and.w	r0, r0, #254	; 0xfe
2fff0e74:	4302      	orrs	r2, r0
2fff0e76:	bf0c      	ite	eq
2fff0e78:	4618      	moveq	r0, r3
2fff0e7a:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
2fff0e7e:	4770      	bx	lr
2fff0e80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff0e84:	4770      	bx	lr

2fff0e86 <gicd_read_igroupr>:
2fff0e86:	0949      	lsrs	r1, r1, #5
2fff0e88:	3080      	adds	r0, #128	; 0x80
2fff0e8a:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
2fff0e8e:	4770      	bx	lr

2fff0e90 <gicd_read_icfgr>:
2fff0e90:	0909      	lsrs	r1, r1, #4
2fff0e92:	f500 6040 	add.w	r0, r0, #3072	; 0xc00
2fff0e96:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
2fff0e9a:	4770      	bx	lr

2fff0e9c <gicd_write_igroupr>:
2fff0e9c:	0949      	lsrs	r1, r1, #5
2fff0e9e:	3080      	adds	r0, #128	; 0x80
2fff0ea0:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2fff0ea4:	4770      	bx	lr

2fff0ea6 <gicd_write_isenabler>:
2fff0ea6:	0949      	lsrs	r1, r1, #5
2fff0ea8:	f500 7080 	add.w	r0, r0, #256	; 0x100
2fff0eac:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2fff0eb0:	4770      	bx	lr

2fff0eb2 <gicd_write_icenabler>:
2fff0eb2:	0949      	lsrs	r1, r1, #5
2fff0eb4:	f500 70c0 	add.w	r0, r0, #384	; 0x180
2fff0eb8:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2fff0ebc:	4770      	bx	lr

2fff0ebe <gicd_write_ipriorityr>:
2fff0ebe:	f021 0103 	bic.w	r1, r1, #3
2fff0ec2:	f500 6080 	add.w	r0, r0, #1024	; 0x400
2fff0ec6:	500a      	str	r2, [r1, r0]
2fff0ec8:	4770      	bx	lr

2fff0eca <gicd_write_icfgr>:
2fff0eca:	0909      	lsrs	r1, r1, #4
2fff0ecc:	f500 6040 	add.w	r0, r0, #3072	; 0xc00
2fff0ed0:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
2fff0ed4:	4770      	bx	lr

2fff0ed6 <gicd_set_igroupr>:
2fff0ed6:	b510      	push	{r4, lr}
2fff0ed8:	460b      	mov	r3, r1
2fff0eda:	4604      	mov	r4, r0
2fff0edc:	f7ff ffd3 	bl	2fff0e86 <gicd_read_igroupr>
2fff0ee0:	f003 021f 	and.w	r2, r3, #31
2fff0ee4:	2101      	movs	r1, #1
2fff0ee6:	fa01 f202 	lsl.w	r2, r1, r2
2fff0eea:	4619      	mov	r1, r3
2fff0eec:	4302      	orrs	r2, r0
2fff0eee:	4620      	mov	r0, r4
2fff0ef0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff0ef4:	f7ff bfd2 	b.w	2fff0e9c <gicd_write_igroupr>

2fff0ef8 <gicd_clr_igroupr>:
2fff0ef8:	b510      	push	{r4, lr}
2fff0efa:	460b      	mov	r3, r1
2fff0efc:	4604      	mov	r4, r0
2fff0efe:	f7ff ffc2 	bl	2fff0e86 <gicd_read_igroupr>
2fff0f02:	f003 021f 	and.w	r2, r3, #31
2fff0f06:	2101      	movs	r1, #1
2fff0f08:	fa01 f202 	lsl.w	r2, r1, r2
2fff0f0c:	4619      	mov	r1, r3
2fff0f0e:	ea20 0202 	bic.w	r2, r0, r2
2fff0f12:	4620      	mov	r0, r4
2fff0f14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff0f18:	f7ff bfc0 	b.w	2fff0e9c <gicd_write_igroupr>

2fff0f1c <gicd_set_isenabler>:
2fff0f1c:	f001 031f 	and.w	r3, r1, #31
2fff0f20:	2201      	movs	r2, #1
2fff0f22:	409a      	lsls	r2, r3
2fff0f24:	f7ff bfbf 	b.w	2fff0ea6 <gicd_write_isenabler>

2fff0f28 <gicd_set_icenabler>:
2fff0f28:	f001 031f 	and.w	r3, r1, #31
2fff0f2c:	2201      	movs	r2, #1
2fff0f2e:	409a      	lsls	r2, r3
2fff0f30:	f7ff bfbf 	b.w	2fff0eb2 <gicd_write_icenabler>

2fff0f34 <gicd_set_ipriorityr>:
2fff0f34:	f501 6180 	add.w	r1, r1, #1024	; 0x400
2fff0f38:	b2d2      	uxtb	r2, r2
2fff0f3a:	540a      	strb	r2, [r1, r0]
2fff0f3c:	4770      	bx	lr

2fff0f3e <gicd_set_icfgr>:
2fff0f3e:	b538      	push	{r3, r4, r5, lr}
2fff0f40:	460b      	mov	r3, r1
2fff0f42:	004c      	lsls	r4, r1, #1
2fff0f44:	4605      	mov	r5, r0
2fff0f46:	f004 041e 	and.w	r4, r4, #30
2fff0f4a:	f7ff ffa1 	bl	2fff0e90 <gicd_read_icfgr>
2fff0f4e:	2103      	movs	r1, #3
2fff0f50:	f002 0203 	and.w	r2, r2, #3
2fff0f54:	40a1      	lsls	r1, r4
2fff0f56:	ea20 0001 	bic.w	r0, r0, r1
2fff0f5a:	4619      	mov	r1, r3
2fff0f5c:	40a2      	lsls	r2, r4
2fff0f5e:	4302      	orrs	r2, r0
2fff0f60:	4628      	mov	r0, r5
2fff0f62:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff0f66:	f7ff bfb0 	b.w	2fff0eca <gicd_write_icfgr>

2fff0f6a <gicv2_get_cpuif_id>:
2fff0f6a:	f8d0 0800 	ldr.w	r0, [r0, #2048]	; 0x800
2fff0f6e:	b2c0      	uxtb	r0, r0
2fff0f70:	4770      	bx	lr

2fff0f72 <gicv2_spis_configure_defaults>:
2fff0f72:	b570      	push	{r4, r5, r6, lr}
2fff0f74:	4605      	mov	r5, r0
2fff0f76:	6844      	ldr	r4, [r0, #4]
2fff0f78:	2620      	movs	r6, #32
2fff0f7a:	f004 041f 	and.w	r4, r4, #31
2fff0f7e:	3401      	adds	r4, #1
2fff0f80:	0164      	lsls	r4, r4, #5
2fff0f82:	42a6      	cmp	r6, r4
2fff0f84:	d306      	bcc.n	2fff0f94 <gicv2_spis_configure_defaults+0x22>
2fff0f86:	2620      	movs	r6, #32
2fff0f88:	42a6      	cmp	r6, r4
2fff0f8a:	d30b      	bcc.n	2fff0fa4 <gicv2_spis_configure_defaults+0x32>
2fff0f8c:	2620      	movs	r6, #32
2fff0f8e:	42a6      	cmp	r6, r4
2fff0f90:	d310      	bcc.n	2fff0fb4 <gicv2_spis_configure_defaults+0x42>
2fff0f92:	bd70      	pop	{r4, r5, r6, pc}
2fff0f94:	4631      	mov	r1, r6
2fff0f96:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
2fff0f9a:	4628      	mov	r0, r5
2fff0f9c:	3620      	adds	r6, #32
2fff0f9e:	f7ff ff7d 	bl	2fff0e9c <gicd_write_igroupr>
2fff0fa2:	e7ee      	b.n	2fff0f82 <gicv2_spis_configure_defaults+0x10>
2fff0fa4:	4631      	mov	r1, r6
2fff0fa6:	f04f 3280 	mov.w	r2, #2155905152	; 0x80808080
2fff0faa:	4628      	mov	r0, r5
2fff0fac:	3604      	adds	r6, #4
2fff0fae:	f7ff ff86 	bl	2fff0ebe <gicd_write_ipriorityr>
2fff0fb2:	e7e9      	b.n	2fff0f88 <gicv2_spis_configure_defaults+0x16>
2fff0fb4:	4631      	mov	r1, r6
2fff0fb6:	2200      	movs	r2, #0
2fff0fb8:	4628      	mov	r0, r5
2fff0fba:	3610      	adds	r6, #16
2fff0fbc:	f7ff ff85 	bl	2fff0eca <gicd_write_icfgr>
2fff0fc0:	e7e5      	b.n	2fff0f8e <gicv2_spis_configure_defaults+0x1c>
	...

2fff0fc4 <gicv2_secure_spis_configure_props>:
2fff0fc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff0fc8:	4605      	mov	r5, r0
2fff0fca:	460c      	mov	r4, r1
2fff0fcc:	4690      	mov	r8, r2
2fff0fce:	2a00      	cmp	r2, #0
2fff0fd0:	d03e      	beq.n	2fff1050 <gicv2_secure_spis_configure_props+0x8c>
2fff0fd2:	b919      	cbnz	r1, 2fff0fdc <gicv2_secure_spis_configure_props+0x18>
2fff0fd4:	2183      	movs	r1, #131	; 0x83
2fff0fd6:	481f      	ldr	r0, [pc, #124]	; (2fff1054 <gicv2_secure_spis_configure_props+0x90>)
2fff0fd8:	f009 f89e 	bl	2fffa118 <__assert>
2fff0fdc:	2600      	movs	r6, #0
2fff0fde:	f500 6900 	add.w	r9, r0, #2048	; 0x800
2fff0fe2:	f834 1026 	ldrh.w	r1, [r4, r6, lsl #2]
2fff0fe6:	00b7      	lsls	r7, r6, #2
2fff0fe8:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff0fec:	eb04 0a86 	add.w	sl, r4, r6, lsl #2
2fff0ff0:	291f      	cmp	r1, #31
2fff0ff2:	d92a      	bls.n	2fff104a <gicv2_secure_spis_configure_props+0x86>
2fff0ff4:	f89a 3002 	ldrb.w	r3, [sl, #2]
2fff0ff8:	f013 0f0c 	tst.w	r3, #12
2fff0ffc:	d001      	beq.n	2fff1002 <gicv2_secure_spis_configure_props+0x3e>
2fff0ffe:	218c      	movs	r1, #140	; 0x8c
2fff1000:	e7e9      	b.n	2fff0fd6 <gicv2_secure_spis_configure_props+0x12>
2fff1002:	4628      	mov	r0, r5
2fff1004:	f7ff ff78 	bl	2fff0ef8 <gicd_clr_igroupr>
2fff1008:	59e2      	ldr	r2, [r4, r7]
2fff100a:	4628      	mov	r0, r5
2fff100c:	5be1      	ldrh	r1, [r4, r7]
2fff100e:	f3c2 2287 	ubfx	r2, r2, #10, #8
2fff1012:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff1016:	f7ff ff8d 	bl	2fff0f34 <gicd_set_ipriorityr>
2fff101a:	5be3      	ldrh	r3, [r4, r7]
2fff101c:	4628      	mov	r0, r5
2fff101e:	f8d9 2000 	ldr.w	r2, [r9]
2fff1022:	f3c3 0309 	ubfx	r3, r3, #0, #10
2fff1026:	b2d2      	uxtb	r2, r2
2fff1028:	f803 2009 	strb.w	r2, [r3, r9]
2fff102c:	f89a 2002 	ldrb.w	r2, [sl, #2]
2fff1030:	5be1      	ldrh	r1, [r4, r7]
2fff1032:	f3c2 1201 	ubfx	r2, r2, #4, #2
2fff1036:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff103a:	f7ff ff80 	bl	2fff0f3e <gicd_set_icfgr>
2fff103e:	5be1      	ldrh	r1, [r4, r7]
2fff1040:	4628      	mov	r0, r5
2fff1042:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff1046:	f7ff ff69 	bl	2fff0f1c <gicd_set_isenabler>
2fff104a:	3601      	adds	r6, #1
2fff104c:	45b0      	cmp	r8, r6
2fff104e:	d1c8      	bne.n	2fff0fe2 <gicv2_secure_spis_configure_props+0x1e>
2fff1050:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff1054:	2fffb182 	.word	0x2fffb182

2fff1058 <gicv2_secure_ppi_sgi_setup_props>:
2fff1058:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff105c:	4604      	mov	r4, r0
2fff105e:	460d      	mov	r5, r1
2fff1060:	4690      	mov	r8, r2
2fff1062:	b122      	cbz	r2, 2fff106e <gicv2_secure_ppi_sgi_setup_props+0x16>
2fff1064:	b919      	cbnz	r1, 2fff106e <gicv2_secure_ppi_sgi_setup_props+0x16>
2fff1066:	21ad      	movs	r1, #173	; 0xad
2fff1068:	4827      	ldr	r0, [pc, #156]	; (2fff1108 <gicv2_secure_ppi_sgi_setup_props+0xb0>)
2fff106a:	f009 f855 	bl	2fffa118 <__assert>
2fff106e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
2fff1072:	2100      	movs	r1, #0
2fff1074:	4620      	mov	r0, r4
2fff1076:	2600      	movs	r6, #0
2fff1078:	f7ff ff1b 	bl	2fff0eb2 <gicd_write_icenabler>
2fff107c:	4631      	mov	r1, r6
2fff107e:	f04f 3280 	mov.w	r2, #2155905152	; 0x80808080
2fff1082:	4620      	mov	r0, r4
2fff1084:	3604      	adds	r6, #4
2fff1086:	f7ff ff1a 	bl	2fff0ebe <gicd_write_ipriorityr>
2fff108a:	2e20      	cmp	r6, #32
2fff108c:	d1f6      	bne.n	2fff107c <gicv2_secure_ppi_sgi_setup_props+0x24>
2fff108e:	2700      	movs	r7, #0
2fff1090:	f04f 0901 	mov.w	r9, #1
2fff1094:	463e      	mov	r6, r7
2fff1096:	4546      	cmp	r6, r8
2fff1098:	d10b      	bne.n	2fff10b2 <gicv2_secure_ppi_sgi_setup_props+0x5a>
2fff109a:	43fa      	mvns	r2, r7
2fff109c:	4620      	mov	r0, r4
2fff109e:	2100      	movs	r1, #0
2fff10a0:	f7ff fefc 	bl	2fff0e9c <gicd_write_igroupr>
2fff10a4:	463a      	mov	r2, r7
2fff10a6:	4620      	mov	r0, r4
2fff10a8:	2100      	movs	r1, #0
2fff10aa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff10ae:	f7ff befa 	b.w	2fff0ea6 <gicd_write_isenabler>
2fff10b2:	f835 1026 	ldrh.w	r1, [r5, r6, lsl #2]
2fff10b6:	ea4f 0a86 	mov.w	sl, r6, lsl #2
2fff10ba:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff10be:	eb05 0386 	add.w	r3, r5, r6, lsl #2
2fff10c2:	291f      	cmp	r1, #31
2fff10c4:	d81e      	bhi.n	2fff1104 <gicv2_secure_ppi_sgi_setup_props+0xac>
2fff10c6:	789a      	ldrb	r2, [r3, #2]
2fff10c8:	f012 0f0c 	tst.w	r2, #12
2fff10cc:	d001      	beq.n	2fff10d2 <gicv2_secure_ppi_sgi_setup_props+0x7a>
2fff10ce:	21c1      	movs	r1, #193	; 0xc1
2fff10d0:	e7ca      	b.n	2fff1068 <gicv2_secure_ppi_sgi_setup_props+0x10>
2fff10d2:	f501 737c 	add.w	r3, r1, #1008	; 0x3f0
2fff10d6:	f3c3 0309 	ubfx	r3, r3, #0, #10
2fff10da:	2b0f      	cmp	r3, #15
2fff10dc:	d804      	bhi.n	2fff10e8 <gicv2_secure_ppi_sgi_setup_props+0x90>
2fff10de:	f3c2 1201 	ubfx	r2, r2, #4, #2
2fff10e2:	4620      	mov	r0, r4
2fff10e4:	f7ff ff2b 	bl	2fff0f3e <gicd_set_icfgr>
2fff10e8:	f835 100a 	ldrh.w	r1, [r5, sl]
2fff10ec:	4620      	mov	r0, r4
2fff10ee:	f855 200a 	ldr.w	r2, [r5, sl]
2fff10f2:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff10f6:	f3c2 2287 	ubfx	r2, r2, #10, #8
2fff10fa:	fa09 f301 	lsl.w	r3, r9, r1
2fff10fe:	431f      	orrs	r7, r3
2fff1100:	f7ff ff18 	bl	2fff0f34 <gicd_set_ipriorityr>
2fff1104:	3601      	adds	r6, #1
2fff1106:	e7c6      	b.n	2fff1096 <gicv2_secure_ppi_sgi_setup_props+0x3e>
2fff1108:	2fffb182 	.word	0x2fffb182

2fff110c <gicv2_cpuif_enable>:
2fff110c:	b508      	push	{r3, lr}
2fff110e:	4b08      	ldr	r3, [pc, #32]	; (2fff1130 <gicv2_cpuif_enable+0x24>)
2fff1110:	681b      	ldr	r3, [r3, #0]
2fff1112:	b91b      	cbnz	r3, 2fff111c <gicv2_cpuif_enable+0x10>
2fff1114:	2126      	movs	r1, #38	; 0x26
2fff1116:	4807      	ldr	r0, [pc, #28]	; (2fff1134 <gicv2_cpuif_enable+0x28>)
2fff1118:	f008 fffe 	bl	2fffa118 <__assert>
2fff111c:	685b      	ldr	r3, [r3, #4]
2fff111e:	b90b      	cbnz	r3, 2fff1124 <gicv2_cpuif_enable+0x18>
2fff1120:	2127      	movs	r1, #39	; 0x27
2fff1122:	e7f8      	b.n	2fff1116 <gicv2_cpuif_enable+0xa>
2fff1124:	22ff      	movs	r2, #255	; 0xff
2fff1126:	605a      	str	r2, [r3, #4]
2fff1128:	f240 12e9 	movw	r2, #489	; 0x1e9
2fff112c:	601a      	str	r2, [r3, #0]
2fff112e:	bd08      	pop	{r3, pc}
2fff1130:	2fffe7a4 	.word	0x2fffe7a4
2fff1134:	2fffb1a5 	.word	0x2fffb1a5

2fff1138 <gicv2_pcpu_distif_init>:
2fff1138:	b510      	push	{r4, lr}
2fff113a:	4c0c      	ldr	r4, [pc, #48]	; (2fff116c <gicv2_pcpu_distif_init+0x34>)
2fff113c:	6823      	ldr	r3, [r4, #0]
2fff113e:	b91b      	cbnz	r3, 2fff1148 <gicv2_pcpu_distif_init+0x10>
2fff1140:	2150      	movs	r1, #80	; 0x50
2fff1142:	480b      	ldr	r0, [pc, #44]	; (2fff1170 <gicv2_pcpu_distif_init+0x38>)
2fff1144:	f008 ffe8 	bl	2fffa118 <__assert>
2fff1148:	6818      	ldr	r0, [r3, #0]
2fff114a:	b908      	cbnz	r0, 2fff1150 <gicv2_pcpu_distif_init+0x18>
2fff114c:	2151      	movs	r1, #81	; 0x51
2fff114e:	e7f8      	b.n	2fff1142 <gicv2_pcpu_distif_init+0xa>
2fff1150:	695a      	ldr	r2, [r3, #20]
2fff1152:	6919      	ldr	r1, [r3, #16]
2fff1154:	f7ff ff80 	bl	2fff1058 <gicv2_secure_ppi_sgi_setup_props>
2fff1158:	6823      	ldr	r3, [r4, #0]
2fff115a:	681a      	ldr	r2, [r3, #0]
2fff115c:	6813      	ldr	r3, [r2, #0]
2fff115e:	07d9      	lsls	r1, r3, #31
2fff1160:	bf5c      	itt	pl
2fff1162:	f043 0301 	orrpl.w	r3, r3, #1
2fff1166:	6013      	strpl	r3, [r2, #0]
2fff1168:	bd10      	pop	{r4, pc}
2fff116a:	bf00      	nop
2fff116c:	2fffe7a4 	.word	0x2fffe7a4
2fff1170:	2fffb1a5 	.word	0x2fffb1a5

2fff1174 <gicv2_distif_init>:
2fff1174:	b538      	push	{r3, r4, r5, lr}
2fff1176:	4d0e      	ldr	r5, [pc, #56]	; (2fff11b0 <gicv2_distif_init+0x3c>)
2fff1178:	682b      	ldr	r3, [r5, #0]
2fff117a:	b91b      	cbnz	r3, 2fff1184 <gicv2_distif_init+0x10>
2fff117c:	2168      	movs	r1, #104	; 0x68
2fff117e:	480d      	ldr	r0, [pc, #52]	; (2fff11b4 <gicv2_distif_init+0x40>)
2fff1180:	f008 ffca 	bl	2fffa118 <__assert>
2fff1184:	6818      	ldr	r0, [r3, #0]
2fff1186:	b908      	cbnz	r0, 2fff118c <gicv2_distif_init+0x18>
2fff1188:	2169      	movs	r1, #105	; 0x69
2fff118a:	e7f8      	b.n	2fff117e <gicv2_distif_init+0xa>
2fff118c:	6804      	ldr	r4, [r0, #0]
2fff118e:	f024 0303 	bic.w	r3, r4, #3
2fff1192:	f044 0401 	orr.w	r4, r4, #1
2fff1196:	6003      	str	r3, [r0, #0]
2fff1198:	f7ff feeb 	bl	2fff0f72 <gicv2_spis_configure_defaults>
2fff119c:	682b      	ldr	r3, [r5, #0]
2fff119e:	695a      	ldr	r2, [r3, #20]
2fff11a0:	6919      	ldr	r1, [r3, #16]
2fff11a2:	6818      	ldr	r0, [r3, #0]
2fff11a4:	f7ff ff0e 	bl	2fff0fc4 <gicv2_secure_spis_configure_props>
2fff11a8:	682b      	ldr	r3, [r5, #0]
2fff11aa:	681b      	ldr	r3, [r3, #0]
2fff11ac:	601c      	str	r4, [r3, #0]
2fff11ae:	bd38      	pop	{r3, r4, r5, pc}
2fff11b0:	2fffe7a4 	.word	0x2fffe7a4
2fff11b4:	2fffb1a5 	.word	0x2fffb1a5

2fff11b8 <gicv2_driver_init>:
2fff11b8:	b510      	push	{r4, lr}
2fff11ba:	b918      	cbnz	r0, 2fff11c4 <gicv2_driver_init+0xc>
2fff11bc:	2183      	movs	r1, #131	; 0x83
2fff11be:	4814      	ldr	r0, [pc, #80]	; (2fff1210 <gicv2_driver_init+0x58>)
2fff11c0:	f008 ffaa 	bl	2fffa118 <__assert>
2fff11c4:	6802      	ldr	r2, [r0, #0]
2fff11c6:	b90a      	cbnz	r2, 2fff11cc <gicv2_driver_init+0x14>
2fff11c8:	2184      	movs	r1, #132	; 0x84
2fff11ca:	e7f8      	b.n	2fff11be <gicv2_driver_init+0x6>
2fff11cc:	6841      	ldr	r1, [r0, #4]
2fff11ce:	b909      	cbnz	r1, 2fff11d4 <gicv2_driver_init+0x1c>
2fff11d0:	2185      	movs	r1, #133	; 0x85
2fff11d2:	e7f4      	b.n	2fff11be <gicv2_driver_init+0x6>
2fff11d4:	6941      	ldr	r1, [r0, #20]
2fff11d6:	b119      	cbz	r1, 2fff11e0 <gicv2_driver_init+0x28>
2fff11d8:	6901      	ldr	r1, [r0, #16]
2fff11da:	b909      	cbnz	r1, 2fff11e0 <gicv2_driver_init+0x28>
2fff11dc:	2187      	movs	r1, #135	; 0x87
2fff11de:	e7ee      	b.n	2fff11be <gicv2_driver_init+0x6>
2fff11e0:	f8d2 2fe8 	ldr.w	r2, [r2, #4072]	; 0xfe8
2fff11e4:	f3c2 1203 	ubfx	r2, r2, #4, #4
2fff11e8:	3a01      	subs	r2, #1
2fff11ea:	2a01      	cmp	r2, #1
2fff11ec:	d901      	bls.n	2fff11f2 <gicv2_driver_init+0x3a>
2fff11ee:	219a      	movs	r1, #154	; 0x9a
2fff11f0:	e7e5      	b.n	2fff11be <gicv2_driver_init+0x6>
2fff11f2:	4c08      	ldr	r4, [pc, #32]	; (2fff1214 <gicv2_driver_init+0x5c>)
2fff11f4:	2104      	movs	r1, #4
2fff11f6:	6020      	str	r0, [r4, #0]
2fff11f8:	4620      	mov	r0, r4
2fff11fa:	f007 eff0 	blx	2fff91dc <flush_dcache_range>
2fff11fe:	6820      	ldr	r0, [r4, #0]
2fff1200:	2118      	movs	r1, #24
2fff1202:	f007 efec 	blx	2fff91dc <flush_dcache_range>
2fff1206:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff120a:	4803      	ldr	r0, [pc, #12]	; (2fff1218 <gicv2_driver_init+0x60>)
2fff120c:	f001 bd86 	b.w	2fff2d1c <tf_log>
2fff1210:	2fffb1a5 	.word	0x2fffb1a5
2fff1214:	2fffe7a4 	.word	0x2fffe7a4
2fff1218:	2fffb1c5 	.word	0x2fffb1c5

2fff121c <gicv2_get_pending_interrupt_id>:
2fff121c:	b508      	push	{r3, lr}
2fff121e:	4b0b      	ldr	r3, [pc, #44]	; (2fff124c <gicv2_get_pending_interrupt_id+0x30>)
2fff1220:	681b      	ldr	r3, [r3, #0]
2fff1222:	b91b      	cbnz	r3, 2fff122c <gicv2_get_pending_interrupt_id+0x10>
2fff1224:	21d5      	movs	r1, #213	; 0xd5
2fff1226:	480a      	ldr	r0, [pc, #40]	; (2fff1250 <gicv2_get_pending_interrupt_id+0x34>)
2fff1228:	f008 ff76 	bl	2fffa118 <__assert>
2fff122c:	685b      	ldr	r3, [r3, #4]
2fff122e:	b90b      	cbnz	r3, 2fff1234 <gicv2_get_pending_interrupt_id+0x18>
2fff1230:	21d6      	movs	r1, #214	; 0xd6
2fff1232:	e7f8      	b.n	2fff1226 <gicv2_get_pending_interrupt_id+0xa>
2fff1234:	6998      	ldr	r0, [r3, #24]
2fff1236:	f240 32fe 	movw	r2, #1022	; 0x3fe
2fff123a:	f3c0 0009 	ubfx	r0, r0, #0, #10
2fff123e:	4290      	cmp	r0, r2
2fff1240:	bf04      	itt	eq
2fff1242:	6a98      	ldreq	r0, [r3, #40]	; 0x28
2fff1244:	f3c0 0009 	ubfxeq	r0, r0, #0, #10
2fff1248:	bd08      	pop	{r3, pc}
2fff124a:	bf00      	nop
2fff124c:	2fffe7a4 	.word	0x2fffe7a4
2fff1250:	2fffb1a5 	.word	0x2fffb1a5

2fff1254 <gicv2_acknowledge_interrupt>:
2fff1254:	b508      	push	{r3, lr}
2fff1256:	4b06      	ldr	r3, [pc, #24]	; (2fff1270 <gicv2_acknowledge_interrupt+0x1c>)
2fff1258:	681b      	ldr	r3, [r3, #0]
2fff125a:	b91b      	cbnz	r3, 2fff1264 <gicv2_acknowledge_interrupt+0x10>
2fff125c:	21eb      	movs	r1, #235	; 0xeb
2fff125e:	4805      	ldr	r0, [pc, #20]	; (2fff1274 <gicv2_acknowledge_interrupt+0x20>)
2fff1260:	f008 ff5a 	bl	2fffa118 <__assert>
2fff1264:	685b      	ldr	r3, [r3, #4]
2fff1266:	b90b      	cbnz	r3, 2fff126c <gicv2_acknowledge_interrupt+0x18>
2fff1268:	21ec      	movs	r1, #236	; 0xec
2fff126a:	e7f8      	b.n	2fff125e <gicv2_acknowledge_interrupt+0xa>
2fff126c:	68d8      	ldr	r0, [r3, #12]
2fff126e:	bd08      	pop	{r3, pc}
2fff1270:	2fffe7a4 	.word	0x2fffe7a4
2fff1274:	2fffb1a5 	.word	0x2fffb1a5

2fff1278 <gicv2_end_of_interrupt>:
2fff1278:	b508      	push	{r3, lr}
2fff127a:	4b06      	ldr	r3, [pc, #24]	; (2fff1294 <gicv2_end_of_interrupt+0x1c>)
2fff127c:	681b      	ldr	r3, [r3, #0]
2fff127e:	b91b      	cbnz	r3, 2fff1288 <gicv2_end_of_interrupt+0x10>
2fff1280:	21f7      	movs	r1, #247	; 0xf7
2fff1282:	4805      	ldr	r0, [pc, #20]	; (2fff1298 <gicv2_end_of_interrupt+0x20>)
2fff1284:	f008 ff48 	bl	2fffa118 <__assert>
2fff1288:	685b      	ldr	r3, [r3, #4]
2fff128a:	b90b      	cbnz	r3, 2fff1290 <gicv2_end_of_interrupt+0x18>
2fff128c:	21f8      	movs	r1, #248	; 0xf8
2fff128e:	e7f8      	b.n	2fff1282 <gicv2_end_of_interrupt+0xa>
2fff1290:	6118      	str	r0, [r3, #16]
2fff1292:	bd08      	pop	{r3, pc}
2fff1294:	2fffe7a4 	.word	0x2fffe7a4
2fff1298:	2fffb1a5 	.word	0x2fffb1a5

2fff129c <gicv2_set_pe_target_mask>:
2fff129c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff129e:	4604      	mov	r4, r0
2fff12a0:	4e16      	ldr	r6, [pc, #88]	; (2fff12fc <gicv2_set_pe_target_mask+0x60>)
2fff12a2:	6833      	ldr	r3, [r6, #0]
2fff12a4:	b923      	cbnz	r3, 2fff12b0 <gicv2_set_pe_target_mask+0x14>
2fff12a6:	f240 111f 	movw	r1, #287	; 0x11f
2fff12aa:	4815      	ldr	r0, [pc, #84]	; (2fff1300 <gicv2_set_pe_target_mask+0x64>)
2fff12ac:	f008 ff34 	bl	2fffa118 <__assert>
2fff12b0:	6818      	ldr	r0, [r3, #0]
2fff12b2:	b910      	cbnz	r0, 2fff12ba <gicv2_set_pe_target_mask+0x1e>
2fff12b4:	f44f 7190 	mov.w	r1, #288	; 0x120
2fff12b8:	e7f7      	b.n	2fff12aa <gicv2_set_pe_target_mask+0xe>
2fff12ba:	689d      	ldr	r5, [r3, #8]
2fff12bc:	b915      	cbnz	r5, 2fff12c4 <gicv2_set_pe_target_mask+0x28>
2fff12be:	f240 1121 	movw	r1, #289	; 0x121
2fff12c2:	e7f2      	b.n	2fff12aa <gicv2_set_pe_target_mask+0xe>
2fff12c4:	2c07      	cmp	r4, #7
2fff12c6:	d902      	bls.n	2fff12ce <gicv2_set_pe_target_mask+0x32>
2fff12c8:	f44f 7191 	mov.w	r1, #290	; 0x122
2fff12cc:	e7ed      	b.n	2fff12aa <gicv2_set_pe_target_mask+0xe>
2fff12ce:	68db      	ldr	r3, [r3, #12]
2fff12d0:	42a3      	cmp	r3, r4
2fff12d2:	d802      	bhi.n	2fff12da <gicv2_set_pe_target_mask+0x3e>
2fff12d4:	f240 1123 	movw	r1, #291	; 0x123
2fff12d8:	e7e7      	b.n	2fff12aa <gicv2_set_pe_target_mask+0xe>
2fff12da:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
2fff12de:	00a7      	lsls	r7, r4, #2
2fff12e0:	b95b      	cbnz	r3, 2fff12fa <gicv2_set_pe_target_mask+0x5e>
2fff12e2:	f7ff fe42 	bl	2fff0f6a <gicv2_get_cpuif_id>
2fff12e6:	6833      	ldr	r3, [r6, #0]
2fff12e8:	2104      	movs	r1, #4
2fff12ea:	f845 0024 	str.w	r0, [r5, r4, lsl #2]
2fff12ee:	6898      	ldr	r0, [r3, #8]
2fff12f0:	4438      	add	r0, r7
2fff12f2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2fff12f6:	f00b bda7 	b.w	2fffce48 <__flush_dcache_range_from_thumb>
2fff12fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff12fc:	2fffe7a4 	.word	0x2fffe7a4
2fff1300:	2fffb1a5 	.word	0x2fffb1a5

2fff1304 <gicv2_enable_interrupt>:
2fff1304:	b508      	push	{r3, lr}
2fff1306:	4601      	mov	r1, r0
2fff1308:	4b0d      	ldr	r3, [pc, #52]	; (2fff1340 <gicv2_enable_interrupt+0x3c>)
2fff130a:	681a      	ldr	r2, [r3, #0]
2fff130c:	b922      	cbnz	r2, 2fff1318 <gicv2_enable_interrupt+0x14>
2fff130e:	f240 1151 	movw	r1, #337	; 0x151
2fff1312:	480c      	ldr	r0, [pc, #48]	; (2fff1344 <gicv2_enable_interrupt+0x40>)
2fff1314:	f008 ff00 	bl	2fffa118 <__assert>
2fff1318:	6812      	ldr	r2, [r2, #0]
2fff131a:	b912      	cbnz	r2, 2fff1322 <gicv2_enable_interrupt+0x1e>
2fff131c:	f44f 71a9 	mov.w	r1, #338	; 0x152
2fff1320:	e7f7      	b.n	2fff1312 <gicv2_enable_interrupt+0xe>
2fff1322:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2fff1326:	d302      	bcc.n	2fff132e <gicv2_enable_interrupt+0x2a>
2fff1328:	f240 1153 	movw	r1, #339	; 0x153
2fff132c:	e7f1      	b.n	2fff1312 <gicv2_enable_interrupt+0xe>
2fff132e:	f3bf 8f4a 	dsb	ishst
2fff1332:	681b      	ldr	r3, [r3, #0]
2fff1334:	6818      	ldr	r0, [r3, #0]
2fff1336:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff133a:	f7ff bdef 	b.w	2fff0f1c <gicd_set_isenabler>
2fff133e:	bf00      	nop
2fff1340:	2fffe7a4 	.word	0x2fffe7a4
2fff1344:	2fffb1a5 	.word	0x2fffb1a5

2fff1348 <gicv2_disable_interrupt>:
2fff1348:	b508      	push	{r3, lr}
2fff134a:	4601      	mov	r1, r0
2fff134c:	4b0b      	ldr	r3, [pc, #44]	; (2fff137c <gicv2_disable_interrupt+0x34>)
2fff134e:	681b      	ldr	r3, [r3, #0]
2fff1350:	b923      	cbnz	r3, 2fff135c <gicv2_disable_interrupt+0x14>
2fff1352:	f44f 71b1 	mov.w	r1, #354	; 0x162
2fff1356:	480a      	ldr	r0, [pc, #40]	; (2fff1380 <gicv2_disable_interrupt+0x38>)
2fff1358:	f008 fede 	bl	2fffa118 <__assert>
2fff135c:	6818      	ldr	r0, [r3, #0]
2fff135e:	b910      	cbnz	r0, 2fff1366 <gicv2_disable_interrupt+0x1e>
2fff1360:	f240 1163 	movw	r1, #355	; 0x163
2fff1364:	e7f7      	b.n	2fff1356 <gicv2_disable_interrupt+0xe>
2fff1366:	f5b1 7f7f 	cmp.w	r1, #1020	; 0x3fc
2fff136a:	d302      	bcc.n	2fff1372 <gicv2_disable_interrupt+0x2a>
2fff136c:	f44f 71b2 	mov.w	r1, #356	; 0x164
2fff1370:	e7f1      	b.n	2fff1356 <gicv2_disable_interrupt+0xe>
2fff1372:	f7ff fdd9 	bl	2fff0f28 <gicd_set_icenabler>
2fff1376:	f3bf 8f4a 	dsb	ishst
2fff137a:	bd08      	pop	{r3, pc}
2fff137c:	2fffe7a4 	.word	0x2fffe7a4
2fff1380:	2fffb1a5 	.word	0x2fffb1a5

2fff1384 <gicv2_set_interrupt_priority>:
2fff1384:	460a      	mov	r2, r1
2fff1386:	490d      	ldr	r1, [pc, #52]	; (2fff13bc <gicv2_set_interrupt_priority+0x38>)
2fff1388:	b508      	push	{r3, lr}
2fff138a:	4603      	mov	r3, r0
2fff138c:	6809      	ldr	r1, [r1, #0]
2fff138e:	b921      	cbnz	r1, 2fff139a <gicv2_set_interrupt_priority+0x16>
2fff1390:	f44f 71ba 	mov.w	r1, #372	; 0x174
2fff1394:	480a      	ldr	r0, [pc, #40]	; (2fff13c0 <gicv2_set_interrupt_priority+0x3c>)
2fff1396:	f008 febf 	bl	2fffa118 <__assert>
2fff139a:	6808      	ldr	r0, [r1, #0]
2fff139c:	b910      	cbnz	r0, 2fff13a4 <gicv2_set_interrupt_priority+0x20>
2fff139e:	f240 1175 	movw	r1, #373	; 0x175
2fff13a2:	e7f7      	b.n	2fff1394 <gicv2_set_interrupt_priority+0x10>
2fff13a4:	f5b3 7f7f 	cmp.w	r3, #1020	; 0x3fc
2fff13a8:	d302      	bcc.n	2fff13b0 <gicv2_set_interrupt_priority+0x2c>
2fff13aa:	f44f 71bb 	mov.w	r1, #374	; 0x176
2fff13ae:	e7f1      	b.n	2fff1394 <gicv2_set_interrupt_priority+0x10>
2fff13b0:	4619      	mov	r1, r3
2fff13b2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff13b6:	f7ff bdbd 	b.w	2fff0f34 <gicd_set_ipriorityr>
2fff13ba:	bf00      	nop
2fff13bc:	2fffe7a4 	.word	0x2fffe7a4
2fff13c0:	2fffb1a5 	.word	0x2fffb1a5

2fff13c4 <gicv2_set_interrupt_type>:
2fff13c4:	b570      	push	{r4, r5, r6, lr}
2fff13c6:	4604      	mov	r4, r0
2fff13c8:	4e16      	ldr	r6, [pc, #88]	; (2fff1424 <gicv2_set_interrupt_type+0x60>)
2fff13ca:	460d      	mov	r5, r1
2fff13cc:	6833      	ldr	r3, [r6, #0]
2fff13ce:	b923      	cbnz	r3, 2fff13da <gicv2_set_interrupt_type+0x16>
2fff13d0:	f240 1181 	movw	r1, #385	; 0x181
2fff13d4:	4814      	ldr	r0, [pc, #80]	; (2fff1428 <gicv2_set_interrupt_type+0x64>)
2fff13d6:	f008 fe9f 	bl	2fffa118 <__assert>
2fff13da:	681b      	ldr	r3, [r3, #0]
2fff13dc:	b913      	cbnz	r3, 2fff13e4 <gicv2_set_interrupt_type+0x20>
2fff13de:	f44f 71c1 	mov.w	r1, #386	; 0x182
2fff13e2:	e7f7      	b.n	2fff13d4 <gicv2_set_interrupt_type+0x10>
2fff13e4:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2fff13e8:	d302      	bcc.n	2fff13f0 <gicv2_set_interrupt_type+0x2c>
2fff13ea:	f240 1183 	movw	r1, #387	; 0x183
2fff13ee:	e7f1      	b.n	2fff13d4 <gicv2_set_interrupt_type+0x10>
2fff13f0:	480e      	ldr	r0, [pc, #56]	; (2fff142c <gicv2_set_interrupt_type+0x68>)
2fff13f2:	f007 edd2 	blx	2fff8f98 <spin_lock>
2fff13f6:	b15d      	cbz	r5, 2fff1410 <gicv2_set_interrupt_type+0x4c>
2fff13f8:	2d01      	cmp	r5, #1
2fff13fa:	d10f      	bne.n	2fff141c <gicv2_set_interrupt_type+0x58>
2fff13fc:	6833      	ldr	r3, [r6, #0]
2fff13fe:	4621      	mov	r1, r4
2fff1400:	6818      	ldr	r0, [r3, #0]
2fff1402:	f7ff fd68 	bl	2fff0ed6 <gicd_set_igroupr>
2fff1406:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff140a:	4808      	ldr	r0, [pc, #32]	; (2fff142c <gicv2_set_interrupt_type+0x68>)
2fff140c:	f00b bd14 	b.w	2fffce38 <__spin_unlock_from_thumb>
2fff1410:	6833      	ldr	r3, [r6, #0]
2fff1412:	4621      	mov	r1, r4
2fff1414:	6818      	ldr	r0, [r3, #0]
2fff1416:	f7ff fd6f 	bl	2fff0ef8 <gicd_clr_igroupr>
2fff141a:	e7f4      	b.n	2fff1406 <gicv2_set_interrupt_type+0x42>
2fff141c:	f240 118f 	movw	r1, #399	; 0x18f
2fff1420:	e7d8      	b.n	2fff13d4 <gicv2_set_interrupt_type+0x10>
2fff1422:	bf00      	nop
2fff1424:	2fffe7a4 	.word	0x2fffe7a4
2fff1428:	2fffb1a5 	.word	0x2fffb1a5
2fff142c:	2fffe7a8 	.word	0x2fffe7a8

2fff1430 <gicv2_raise_sgi>:
2fff1430:	4a18      	ldr	r2, [pc, #96]	; (2fff1494 <gicv2_raise_sgi+0x64>)
2fff1432:	b510      	push	{r4, lr}
2fff1434:	6813      	ldr	r3, [r2, #0]
2fff1436:	b923      	cbnz	r3, 2fff1442 <gicv2_raise_sgi+0x12>
2fff1438:	f240 119f 	movw	r1, #415	; 0x19f
2fff143c:	4816      	ldr	r0, [pc, #88]	; (2fff1498 <gicv2_raise_sgi+0x68>)
2fff143e:	f008 fe6b 	bl	2fffa118 <__assert>
2fff1442:	2907      	cmp	r1, #7
2fff1444:	d902      	bls.n	2fff144c <gicv2_raise_sgi+0x1c>
2fff1446:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
2fff144a:	e7f7      	b.n	2fff143c <gicv2_raise_sgi+0xc>
2fff144c:	681c      	ldr	r4, [r3, #0]
2fff144e:	b914      	cbnz	r4, 2fff1456 <gicv2_raise_sgi+0x26>
2fff1450:	f240 11a1 	movw	r1, #417	; 0x1a1
2fff1454:	e7f2      	b.n	2fff143c <gicv2_raise_sgi+0xc>
2fff1456:	689c      	ldr	r4, [r3, #8]
2fff1458:	b914      	cbnz	r4, 2fff1460 <gicv2_raise_sgi+0x30>
2fff145a:	f240 11a7 	movw	r1, #423	; 0x1a7
2fff145e:	e7ed      	b.n	2fff143c <gicv2_raise_sgi+0xc>
2fff1460:	68db      	ldr	r3, [r3, #12]
2fff1462:	4299      	cmp	r1, r3
2fff1464:	d302      	bcc.n	2fff146c <gicv2_raise_sgi+0x3c>
2fff1466:	f44f 71d4 	mov.w	r1, #424	; 0x1a8
2fff146a:	e7e7      	b.n	2fff143c <gicv2_raise_sgi+0xc>
2fff146c:	f854 3021 	ldr.w	r3, [r4, r1, lsl #2]
2fff1470:	b913      	cbnz	r3, 2fff1478 <gicv2_raise_sgi+0x48>
2fff1472:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
2fff1476:	e7e1      	b.n	2fff143c <gicv2_raise_sgi+0xc>
2fff1478:	041b      	lsls	r3, r3, #16
2fff147a:	f000 000f 	and.w	r0, r0, #15
2fff147e:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
2fff1482:	4303      	orrs	r3, r0
2fff1484:	f3bf 8f4a 	dsb	ishst
2fff1488:	6812      	ldr	r2, [r2, #0]
2fff148a:	6812      	ldr	r2, [r2, #0]
2fff148c:	f8c2 3f00 	str.w	r3, [r2, #3840]	; 0xf00
2fff1490:	bd10      	pop	{r4, pc}
2fff1492:	bf00      	nop
2fff1494:	2fffe7a4 	.word	0x2fffe7a4
2fff1498:	2fffb1a5 	.word	0x2fffb1a5

2fff149c <gicv2_set_spi_routing>:
2fff149c:	4b18      	ldr	r3, [pc, #96]	; (2fff1500 <gicv2_set_spi_routing+0x64>)
2fff149e:	b510      	push	{r4, lr}
2fff14a0:	681a      	ldr	r2, [r3, #0]
2fff14a2:	b922      	cbnz	r2, 2fff14ae <gicv2_set_spi_routing+0x12>
2fff14a4:	f44f 71e1 	mov.w	r1, #450	; 0x1c2
2fff14a8:	4816      	ldr	r0, [pc, #88]	; (2fff1504 <gicv2_set_spi_routing+0x68>)
2fff14aa:	f008 fe35 	bl	2fffa118 <__assert>
2fff14ae:	6813      	ldr	r3, [r2, #0]
2fff14b0:	b913      	cbnz	r3, 2fff14b8 <gicv2_set_spi_routing+0x1c>
2fff14b2:	f240 11c3 	movw	r1, #451	; 0x1c3
2fff14b6:	e7f7      	b.n	2fff14a8 <gicv2_set_spi_routing+0xc>
2fff14b8:	f1a0 0420 	sub.w	r4, r0, #32
2fff14bc:	f5b4 7f77 	cmp.w	r4, #988	; 0x3dc
2fff14c0:	d302      	bcc.n	2fff14c8 <gicv2_set_spi_routing+0x2c>
2fff14c2:	f240 11c5 	movw	r1, #453	; 0x1c5
2fff14c6:	e7ef      	b.n	2fff14a8 <gicv2_set_spi_routing+0xc>
2fff14c8:	6894      	ldr	r4, [r2, #8]
2fff14ca:	b914      	cbnz	r4, 2fff14d2 <gicv2_set_spi_routing+0x36>
2fff14cc:	f240 11cb 	movw	r1, #459	; 0x1cb
2fff14d0:	e7ea      	b.n	2fff14a8 <gicv2_set_spi_routing+0xc>
2fff14d2:	2907      	cmp	r1, #7
2fff14d4:	d902      	bls.n	2fff14dc <gicv2_set_spi_routing+0x40>
2fff14d6:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
2fff14da:	e7e5      	b.n	2fff14a8 <gicv2_set_spi_routing+0xc>
2fff14dc:	68d2      	ldr	r2, [r2, #12]
2fff14de:	4291      	cmp	r1, r2
2fff14e0:	d302      	bcc.n	2fff14e8 <gicv2_set_spi_routing+0x4c>
2fff14e2:	f240 11cd 	movw	r1, #461	; 0x1cd
2fff14e6:	e7df      	b.n	2fff14a8 <gicv2_set_spi_routing+0xc>
2fff14e8:	f854 2021 	ldr.w	r2, [r4, r1, lsl #2]
2fff14ec:	b912      	cbnz	r2, 2fff14f4 <gicv2_set_spi_routing+0x58>
2fff14ee:	f240 11d5 	movw	r1, #469	; 0x1d5
2fff14f2:	e7d9      	b.n	2fff14a8 <gicv2_set_spi_routing+0xc>
2fff14f4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
2fff14f8:	b2d2      	uxtb	r2, r2
2fff14fa:	541a      	strb	r2, [r3, r0]
2fff14fc:	bd10      	pop	{r4, pc}
2fff14fe:	bf00      	nop
2fff1500:	2fffe7a4 	.word	0x2fffe7a4
2fff1504:	2fffb1a5 	.word	0x2fffb1a5

2fff1508 <gicv2_set_pmr>:
2fff1508:	4a0b      	ldr	r2, [pc, #44]	; (2fff1538 <gicv2_set_pmr+0x30>)
2fff150a:	b508      	push	{r3, lr}
2fff150c:	4603      	mov	r3, r0
2fff150e:	6811      	ldr	r1, [r2, #0]
2fff1510:	b921      	cbnz	r1, 2fff151c <gicv2_set_pmr+0x14>
2fff1512:	f240 2109 	movw	r1, #521	; 0x209
2fff1516:	4809      	ldr	r0, [pc, #36]	; (2fff153c <gicv2_set_pmr+0x34>)
2fff1518:	f008 fdfe 	bl	2fffa118 <__assert>
2fff151c:	6849      	ldr	r1, [r1, #4]
2fff151e:	b911      	cbnz	r1, 2fff1526 <gicv2_set_pmr+0x1e>
2fff1520:	f240 210a 	movw	r1, #522	; 0x20a
2fff1524:	e7f7      	b.n	2fff1516 <gicv2_set_pmr+0xe>
2fff1526:	6848      	ldr	r0, [r1, #4]
2fff1528:	f3bf 8f5a 	dmb	ishst
2fff152c:	6812      	ldr	r2, [r2, #0]
2fff152e:	6852      	ldr	r2, [r2, #4]
2fff1530:	6053      	str	r3, [r2, #4]
2fff1532:	f3bf 8f4a 	dsb	ishst
2fff1536:	bd08      	pop	{r3, pc}
2fff1538:	2fffe7a4 	.word	0x2fffe7a4
2fff153c:	2fffb1a5 	.word	0x2fffb1a5

2fff1540 <gicv2_interrupt_set_cfg>:
2fff1540:	4b03      	ldr	r3, [pc, #12]	; (2fff1550 <gicv2_interrupt_set_cfg+0x10>)
2fff1542:	460a      	mov	r2, r1
2fff1544:	4601      	mov	r1, r0
2fff1546:	681b      	ldr	r3, [r3, #0]
2fff1548:	6818      	ldr	r0, [r3, #0]
2fff154a:	f7ff bcf8 	b.w	2fff0f3e <gicd_set_icfgr>
2fff154e:	bf00      	nop
2fff1550:	2fffe7a4 	.word	0x2fffe7a4

2fff1554 <plat_ic_get_pending_interrupt_id>:
2fff1554:	b508      	push	{r3, lr}
2fff1556:	f7ff fe61 	bl	2fff121c <gicv2_get_pending_interrupt_id>
2fff155a:	f240 33ff 	movw	r3, #1023	; 0x3ff
2fff155e:	4298      	cmp	r0, r3
2fff1560:	bf08      	it	eq
2fff1562:	f04f 30ff 	moveq.w	r0, #4294967295	; 0xffffffff
2fff1566:	bd08      	pop	{r3, pc}

2fff1568 <plat_ic_acknowledge_interrupt>:
2fff1568:	f7ff be74 	b.w	2fff1254 <gicv2_acknowledge_interrupt>

2fff156c <plat_ic_end_of_interrupt>:
2fff156c:	f7ff be84 	b.w	2fff1278 <gicv2_end_of_interrupt>

2fff1570 <plat_ic_disable_interrupt>:
2fff1570:	f7ff beea 	b.w	2fff1348 <gicv2_disable_interrupt>

2fff1574 <plat_ic_set_interrupt_priority>:
2fff1574:	f7ff bf06 	b.w	2fff1384 <gicv2_set_interrupt_priority>

2fff1578 <plat_ic_set_priority_mask>:
2fff1578:	f7ff bfc6 	b.w	2fff1508 <gicv2_set_pmr>

2fff157c <fdt32_to_cpu>:
2fff157c:	ba00      	rev	r0, r0
2fff157e:	4770      	bx	lr

2fff1580 <enable_gic_interrupt>:
2fff1580:	b538      	push	{r3, r4, r5, lr}
2fff1582:	4603      	mov	r3, r0
2fff1584:	6800      	ldr	r0, [r0, #0]
2fff1586:	f7ff fff9 	bl	2fff157c <fdt32_to_cpu>
2fff158a:	b340      	cbz	r0, 2fff15de <enable_gic_interrupt+0x5e>
2fff158c:	2801      	cmp	r0, #1
2fff158e:	bf14      	ite	ne
2fff1590:	2400      	movne	r4, #0
2fff1592:	2410      	moveq	r4, #16
2fff1594:	6858      	ldr	r0, [r3, #4]
2fff1596:	f7ff fff1 	bl	2fff157c <fdt32_to_cpu>
2fff159a:	4404      	add	r4, r0
2fff159c:	6898      	ldr	r0, [r3, #8]
2fff159e:	f7ff ffed 	bl	2fff157c <fdt32_to_cpu>
2fff15a2:	2803      	cmp	r0, #3
2fff15a4:	f1a4 0320 	sub.w	r3, r4, #32
2fff15a8:	bf94      	ite	ls
2fff15aa:	2502      	movls	r5, #2
2fff15ac:	2500      	movhi	r5, #0
2fff15ae:	f5b3 7f77 	cmp.w	r3, #988	; 0x3dc
2fff15b2:	d212      	bcs.n	2fff15da <enable_gic_interrupt+0x5a>
2fff15b4:	2100      	movs	r1, #0
2fff15b6:	4620      	mov	r0, r4
2fff15b8:	f7ff ff04 	bl	2fff13c4 <gicv2_set_interrupt_type>
2fff15bc:	2110      	movs	r1, #16
2fff15be:	4620      	mov	r0, r4
2fff15c0:	f7ff fee0 	bl	2fff1384 <gicv2_set_interrupt_priority>
2fff15c4:	2100      	movs	r1, #0
2fff15c6:	4620      	mov	r0, r4
2fff15c8:	f7ff ff68 	bl	2fff149c <gicv2_set_spi_routing>
2fff15cc:	4620      	mov	r0, r4
2fff15ce:	4629      	mov	r1, r5
2fff15d0:	f7ff ffb6 	bl	2fff1540 <gicv2_interrupt_set_cfg>
2fff15d4:	4620      	mov	r0, r4
2fff15d6:	f7ff fe95 	bl	2fff1304 <gicv2_enable_interrupt>
2fff15da:	4620      	mov	r0, r4
2fff15dc:	bd38      	pop	{r3, r4, r5, pc}
2fff15de:	2420      	movs	r4, #32
2fff15e0:	e7d8      	b.n	2fff1594 <enable_gic_interrupt+0x14>

2fff15e2 <stm32_gic_pcpu_init>:
2fff15e2:	b508      	push	{r3, lr}
2fff15e4:	f7ff fda8 	bl	2fff1138 <gicv2_pcpu_distif_init>
2fff15e8:	f008 e8e0 	blx	2fff97ac <plat_my_core_pos>
2fff15ec:	f7ff fe56 	bl	2fff129c <gicv2_set_pe_target_mask>
2fff15f0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff15f4:	f7ff bd8a 	b.w	2fff110c <gicv2_cpuif_enable>

2fff15f8 <stm32_gic_init>:
2fff15f8:	b570      	push	{r4, r5, r6, lr}
2fff15fa:	b086      	sub	sp, #24
2fff15fc:	a801      	add	r0, sp, #4
2fff15fe:	f006 fff7 	bl	2fff85f0 <fdt_get_address>
2fff1602:	b918      	cbnz	r0, 2fff160c <stm32_gic_init+0x14>
2fff1604:	f001 fc2e 	bl	2fff2e64 <console_flush>
2fff1608:	f007 ed4c 	blx	2fff90a4 <do_panic>
2fff160c:	4a19      	ldr	r2, [pc, #100]	; (2fff1674 <stm32_gic_init+0x7c>)
2fff160e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff1612:	a802      	add	r0, sp, #8
2fff1614:	f007 f8d8 	bl	2fff87c8 <dt_get_node>
2fff1618:	1e04      	subs	r4, r0, #0
2fff161a:	dbf3      	blt.n	2fff1604 <stm32_gic_init+0xc>
2fff161c:	9b02      	ldr	r3, [sp, #8]
2fff161e:	4621      	mov	r1, r4
2fff1620:	4d15      	ldr	r5, [pc, #84]	; (2fff1678 <stm32_gic_init+0x80>)
2fff1622:	4a16      	ldr	r2, [pc, #88]	; (2fff167c <stm32_gic_init+0x84>)
2fff1624:	602b      	str	r3, [r5, #0]
2fff1626:	2300      	movs	r3, #0
2fff1628:	9801      	ldr	r0, [sp, #4]
2fff162a:	f008 fbd8 	bl	2fff9dde <fdt_getprop>
2fff162e:	2800      	cmp	r0, #0
2fff1630:	d0e8      	beq.n	2fff1604 <stm32_gic_init+0xc>
2fff1632:	6880      	ldr	r0, [r0, #8]
2fff1634:	f7ff ffa2 	bl	2fff157c <fdt32_to_cpu>
2fff1638:	6068      	str	r0, [r5, #4]
2fff163a:	2300      	movs	r3, #0
2fff163c:	4a10      	ldr	r2, [pc, #64]	; (2fff1680 <stm32_gic_init+0x88>)
2fff163e:	4621      	mov	r1, r4
2fff1640:	9801      	ldr	r0, [sp, #4]
2fff1642:	f008 fbcc 	bl	2fff9dde <fdt_getprop>
2fff1646:	2800      	cmp	r0, #0
2fff1648:	d0dc      	beq.n	2fff1604 <stm32_gic_init+0xc>
2fff164a:	6800      	ldr	r0, [r0, #0]
2fff164c:	4e0d      	ldr	r6, [pc, #52]	; (2fff1684 <stm32_gic_init+0x8c>)
2fff164e:	f7ff ff95 	bl	2fff157c <fdt32_to_cpu>
2fff1652:	4621      	mov	r1, r4
2fff1654:	6030      	str	r0, [r6, #0]
2fff1656:	9801      	ldr	r0, [sp, #4]
2fff1658:	f008 fbd2 	bl	2fff9e00 <fdt_get_phandle>
2fff165c:	6070      	str	r0, [r6, #4]
2fff165e:	2800      	cmp	r0, #0
2fff1660:	d0d0      	beq.n	2fff1604 <stm32_gic_init+0xc>
2fff1662:	4628      	mov	r0, r5
2fff1664:	f7ff fda8 	bl	2fff11b8 <gicv2_driver_init>
2fff1668:	f7ff fd84 	bl	2fff1174 <gicv2_distif_init>
2fff166c:	f7ff ffb9 	bl	2fff15e2 <stm32_gic_pcpu_init>
2fff1670:	b006      	add	sp, #24
2fff1672:	bd70      	pop	{r4, r5, r6, pc}
2fff1674:	2fffb1e4 	.word	0x2fffb1e4
2fff1678:	2fffd1ec 	.word	0x2fffd1ec
2fff167c:	2fffae68 	.word	0x2fffae68
2fff1680:	2fffb1f6 	.word	0x2fffb1f6
2fff1684:	2fffe7ac 	.word	0x2fffe7ac

2fff1688 <stm32_gic_enable_spi>:
2fff1688:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2fff168c:	b087      	sub	sp, #28
2fff168e:	4606      	mov	r6, r0
2fff1690:	a802      	add	r0, sp, #8
2fff1692:	460c      	mov	r4, r1
2fff1694:	f006 ffac 	bl	2fff85f0 <fdt_get_address>
2fff1698:	b918      	cbnz	r0, 2fff16a2 <stm32_gic_enable_spi+0x1a>
2fff169a:	f001 fbe3 	bl	2fff2e64 <console_flush>
2fff169e:	f007 ed02 	blx	2fff90a4 <do_panic>
2fff16a2:	4a42      	ldr	r2, [pc, #264]	; (2fff17ac <stm32_gic_enable_spi+0x124>)
2fff16a4:	2300      	movs	r3, #0
2fff16a6:	9802      	ldr	r0, [sp, #8]
2fff16a8:	4631      	mov	r1, r6
2fff16aa:	f008 fb98 	bl	2fff9dde <fdt_getprop>
2fff16ae:	b130      	cbz	r0, 2fff16be <stm32_gic_enable_spi+0x36>
2fff16b0:	4b3f      	ldr	r3, [pc, #252]	; (2fff17b0 <stm32_gic_enable_spi+0x128>)
2fff16b2:	6800      	ldr	r0, [r0, #0]
2fff16b4:	685b      	ldr	r3, [r3, #4]
2fff16b6:	f7ff ff61 	bl	2fff157c <fdt32_to_cpu>
2fff16ba:	4283      	cmp	r3, r0
2fff16bc:	d173      	bne.n	2fff17a6 <stm32_gic_enable_spi+0x11e>
2fff16be:	b37c      	cbz	r4, 2fff1720 <stm32_gic_enable_spi+0x98>
2fff16c0:	4630      	mov	r0, r6
2fff16c2:	f006 ffa1 	bl	2fff8608 <fdt_get_status>
2fff16c6:	2802      	cmp	r0, #2
2fff16c8:	4623      	mov	r3, r4
2fff16ca:	9802      	ldr	r0, [sp, #8]
2fff16cc:	4631      	mov	r1, r6
2fff16ce:	bf0c      	ite	eq
2fff16d0:	4a38      	ldreq	r2, [pc, #224]	; (2fff17b4 <stm32_gic_enable_spi+0x12c>)
2fff16d2:	4a39      	ldrne	r2, [pc, #228]	; (2fff17b8 <stm32_gic_enable_spi+0x130>)
2fff16d4:	f008 fcb9 	bl	2fffa04a <fdt_stringlist_search>
2fff16d8:	2800      	cmp	r0, #0
2fff16da:	4604      	mov	r4, r0
2fff16dc:	db1c      	blt.n	2fff1718 <stm32_gic_enable_spi+0x90>
2fff16de:	4605      	mov	r5, r0
2fff16e0:	f10d 0307 	add.w	r3, sp, #7
2fff16e4:	aa03      	add	r2, sp, #12
2fff16e6:	a904      	add	r1, sp, #16
2fff16e8:	4630      	mov	r0, r6
2fff16ea:	f006 ffbf 	bl	2fff866c <fdt_get_interrupt>
2fff16ee:	1e04      	subs	r4, r0, #0
2fff16f0:	db12      	blt.n	2fff1718 <stm32_gic_enable_spi+0x90>
2fff16f2:	9f03      	ldr	r7, [sp, #12]
2fff16f4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff16f8:	9b04      	ldr	r3, [sp, #16]
2fff16fa:	2600      	movs	r6, #0
2fff16fc:	f027 0703 	bic.w	r7, r7, #3
2fff1700:	441f      	add	r7, r3
2fff1702:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 2fff17b0 <stm32_gic_enable_spi+0x128>
2fff1706:	f8df 90b4 	ldr.w	r9, [pc, #180]	; 2fff17bc <stm32_gic_enable_spi+0x134>
2fff170a:	9b04      	ldr	r3, [sp, #16]
2fff170c:	42bb      	cmp	r3, r7
2fff170e:	d203      	bcs.n	2fff1718 <stm32_gic_enable_spi+0x90>
2fff1710:	42b5      	cmp	r5, r6
2fff1712:	da08      	bge.n	2fff1726 <stm32_gic_enable_spi+0x9e>
2fff1714:	1c6a      	adds	r2, r5, #1
2fff1716:	d006      	beq.n	2fff1726 <stm32_gic_enable_spi+0x9e>
2fff1718:	4620      	mov	r0, r4
2fff171a:	b007      	add	sp, #28
2fff171c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff1720:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff1724:	e7dc      	b.n	2fff16e0 <stm32_gic_enable_spi+0x58>
2fff1726:	f89d 2007 	ldrb.w	r2, [sp, #7]
2fff172a:	b942      	cbnz	r2, 2fff173e <stm32_gic_enable_spi+0xb6>
2fff172c:	1c68      	adds	r0, r5, #1
2fff172e:	d001      	beq.n	2fff1734 <stm32_gic_enable_spi+0xac>
2fff1730:	42b5      	cmp	r5, r6
2fff1732:	d112      	bne.n	2fff175a <stm32_gic_enable_spi+0xd2>
2fff1734:	4618      	mov	r0, r3
2fff1736:	f7ff ff23 	bl	2fff1580 <enable_gic_interrupt>
2fff173a:	4604      	mov	r4, r0
2fff173c:	e00d      	b.n	2fff175a <stm32_gic_enable_spi+0xd2>
2fff173e:	6818      	ldr	r0, [r3, #0]
2fff1740:	f7ff ff1c 	bl	2fff157c <fdt32_to_cpu>
2fff1744:	f8d8 2004 	ldr.w	r2, [r8, #4]
2fff1748:	4290      	cmp	r0, r2
2fff174a:	d10e      	bne.n	2fff176a <stm32_gic_enable_spi+0xe2>
2fff174c:	1c69      	adds	r1, r5, #1
2fff174e:	f103 0004 	add.w	r0, r3, #4
2fff1752:	9004      	str	r0, [sp, #16]
2fff1754:	d0ef      	beq.n	2fff1736 <stm32_gic_enable_spi+0xae>
2fff1756:	42b5      	cmp	r5, r6
2fff1758:	d0ed      	beq.n	2fff1736 <stm32_gic_enable_spi+0xae>
2fff175a:	f8d8 2000 	ldr.w	r2, [r8]
2fff175e:	9b04      	ldr	r3, [sp, #16]
2fff1760:	eb03 0382 	add.w	r3, r3, r2, lsl #2
2fff1764:	9304      	str	r3, [sp, #16]
2fff1766:	3601      	adds	r6, #1
2fff1768:	e7cf      	b.n	2fff170a <stm32_gic_enable_spi+0x82>
2fff176a:	a805      	add	r0, sp, #20
2fff176c:	f006 ff40 	bl	2fff85f0 <fdt_get_address>
2fff1770:	2800      	cmp	r0, #0
2fff1772:	d092      	beq.n	2fff169a <stm32_gic_enable_spi+0x12>
2fff1774:	9b04      	ldr	r3, [sp, #16]
2fff1776:	6818      	ldr	r0, [r3, #0]
2fff1778:	f7ff ff00 	bl	2fff157c <fdt32_to_cpu>
2fff177c:	4601      	mov	r1, r0
2fff177e:	9805      	ldr	r0, [sp, #20]
2fff1780:	f008 fc1f 	bl	2fff9fc2 <fdt_node_offset_by_phandle>
2fff1784:	1e01      	subs	r1, r0, #0
2fff1786:	db88      	blt.n	2fff169a <stm32_gic_enable_spi+0x12>
2fff1788:	9805      	ldr	r0, [sp, #20]
2fff178a:	2300      	movs	r3, #0
2fff178c:	464a      	mov	r2, r9
2fff178e:	f008 fb26 	bl	2fff9dde <fdt_getprop>
2fff1792:	2800      	cmp	r0, #0
2fff1794:	d081      	beq.n	2fff169a <stm32_gic_enable_spi+0x12>
2fff1796:	6800      	ldr	r0, [r0, #0]
2fff1798:	f7ff fef0 	bl	2fff157c <fdt32_to_cpu>
2fff179c:	9b04      	ldr	r3, [sp, #16]
2fff179e:	3001      	adds	r0, #1
2fff17a0:	eb03 0380 	add.w	r3, r3, r0, lsl #2
2fff17a4:	e7de      	b.n	2fff1764 <stm32_gic_enable_spi+0xdc>
2fff17a6:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff17aa:	e7b5      	b.n	2fff1718 <stm32_gic_enable_spi+0x90>
2fff17ac:	2fffb207 	.word	0x2fffb207
2fff17b0:	2fffe7ac 	.word	0x2fffe7ac
2fff17b4:	2fffb21f 	.word	0x2fffb21f
2fff17b8:	2fffb218 	.word	0x2fffb218
2fff17bc:	2fffb1f6 	.word	0x2fffb1f6

2fff17c0 <plat_get_target_pwr_state>:
2fff17c0:	b508      	push	{r3, lr}
2fff17c2:	b91a      	cbnz	r2, 2fff17cc <plat_get_target_pwr_state+0xc>
2fff17c4:	4806      	ldr	r0, [pc, #24]	; (2fff17e0 <plat_get_target_pwr_state+0x20>)
2fff17c6:	219d      	movs	r1, #157	; 0x9d
2fff17c8:	f008 fca6 	bl	2fffa118 <__assert>
2fff17cc:	440a      	add	r2, r1
2fff17ce:	2002      	movs	r0, #2
2fff17d0:	f811 3b01 	ldrb.w	r3, [r1], #1
2fff17d4:	4298      	cmp	r0, r3
2fff17d6:	bf28      	it	cs
2fff17d8:	4618      	movcs	r0, r3
2fff17da:	428a      	cmp	r2, r1
2fff17dc:	d1f8      	bne.n	2fff17d0 <plat_get_target_pwr_state+0x10>
2fff17de:	bd08      	pop	{r3, pc}
2fff17e0:	2fffb25c 	.word	0x2fffb25c

2fff17e4 <bsec_check_ssp>:
2fff17e4:	f410 7040 	ands.w	r0, r0, #768	; 0x300
2fff17e8:	b508      	push	{r3, lr}
2fff17ea:	f401 7340 	and.w	r3, r1, #768	; 0x300
2fff17ee:	d105      	bne.n	2fff17fc <bsec_check_ssp+0x18>
2fff17f0:	b113      	cbz	r3, 2fff17f8 <bsec_check_ssp+0x14>
2fff17f2:	058b      	lsls	r3, r1, #22
2fff17f4:	d50a      	bpl.n	2fff180c <bsec_check_ssp+0x28>
2fff17f6:	2302      	movs	r3, #2
2fff17f8:	4618      	mov	r0, r3
2fff17fa:	bd08      	pop	{r3, pc}
2fff17fc:	f5b0 7f40 	cmp.w	r0, #768	; 0x300
2fff1800:	d1f6      	bne.n	2fff17f0 <bsec_check_ssp+0xc>
2fff1802:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
2fff1806:	d1f3      	bne.n	2fff17f0 <bsec_check_ssp+0xc>
2fff1808:	2300      	movs	r3, #0
2fff180a:	e7f5      	b.n	2fff17f8 <bsec_check_ssp+0x14>
2fff180c:	4b0d      	ldr	r3, [pc, #52]	; (2fff1844 <bsec_check_ssp+0x60>)
2fff180e:	2118      	movs	r1, #24
2fff1810:	f8d3 0094 	ldr.w	r0, [r3, #148]	; 0x94
2fff1814:	f103 53da 	add.w	r3, r3, #457179136	; 0x1b400000
2fff1818:	f503 23ca 	add.w	r3, r3, #413696	; 0x65000
2fff181c:	f503 639b 	add.w	r3, r3, #1240	; 0x4d8
2fff1820:	6003      	str	r3, [r0, #0]
2fff1822:	f007 ecdc 	blx	2fff91dc <flush_dcache_range>
2fff1826:	f006 fb13 	bl	2fff7e50 <dt_pmic_status>
2fff182a:	2800      	cmp	r0, #0
2fff182c:	dd07      	ble.n	2fff183e <bsec_check_ssp+0x5a>
2fff182e:	f006 fbef 	bl	2fff8010 <initialize_pmic>
2fff1832:	f001 fc81 	bl	2fff3138 <stm32mp_get_cpu_supply_name>
2fff1836:	2800      	cmp	r0, #0
2fff1838:	d0dd      	beq.n	2fff17f6 <bsec_check_ssp+0x12>
2fff183a:	f006 fd43 	bl	2fff82c4 <stpmic1_regulator_mask_reset_set>
2fff183e:	2301      	movs	r3, #1
2fff1840:	e7da      	b.n	2fff17f8 <bsec_check_ssp+0x14>
2fff1842:	bf00      	nop
2fff1844:	2ffc0078 	.word	0x2ffc0078

2fff1848 <bsec_main>:
2fff1848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff184c:	4698      	mov	r8, r3
2fff184e:	1f43      	subs	r3, r0, #5
2fff1850:	b087      	sub	sp, #28
2fff1852:	2b01      	cmp	r3, #1
2fff1854:	460c      	mov	r4, r1
2fff1856:	f04f 0100 	mov.w	r1, #0
2fff185a:	4606      	mov	r6, r0
2fff185c:	9102      	str	r1, [sp, #8]
2fff185e:	4692      	mov	sl, r2
2fff1860:	f240 8244 	bls.w	2fff1cec <bsec_main+0x4a4>
2fff1864:	4620      	mov	r0, r4
2fff1866:	f003 fa4d 	bl	2fff4d04 <bsec_check_nsec_access_rights>
2fff186a:	4607      	mov	r7, r0
2fff186c:	b1e8      	cbz	r0, 2fff18aa <bsec_main+0x62>
2fff186e:	f06f 0002 	mvn.w	r0, #2
2fff1872:	e041      	b.n	2fff18f8 <bsec_main+0xb0>
2fff1874:	4649      	mov	r1, r9
2fff1876:	4638      	mov	r0, r7
2fff1878:	f005 f88a 	bl	2fff6990 <ddr_is_nonsecured_area>
2fff187c:	b940      	cbnz	r0, 2fff1890 <bsec_main+0x48>
2fff187e:	4649      	mov	r1, r9
2fff1880:	4638      	mov	r0, r7
2fff1882:	f001 ff19 	bl	2fff36b8 <mmap_remove_dynamic_region>
2fff1886:	2800      	cmp	r0, #0
2fff1888:	d0f1      	beq.n	2fff186e <bsec_main+0x26>
2fff188a:	f240 11b9 	movw	r1, #441	; 0x1b9
2fff188e:	e246      	b.n	2fff1d1e <bsec_main+0x4d6>
2fff1890:	4625      	mov	r5, r4
2fff1892:	3e01      	subs	r6, #1
2fff1894:	2e06      	cmp	r6, #6
2fff1896:	d8ea      	bhi.n	2fff186e <bsec_main+0x26>
2fff1898:	e8df f016 	tbh	[pc, r6, lsl #1]
2fff189c:	0014000b 	.word	0x0014000b
2fff18a0:	00390031 	.word	0x00390031
2fff18a4:	00f50050 	.word	0x00f50050
2fff18a8:	0224      	.short	0x0224
2fff18aa:	f44f 5980 	mov.w	r9, #4096	; 0x1000
2fff18ae:	4605      	mov	r5, r0
2fff18b0:	e7ef      	b.n	2fff1892 <bsec_main+0x4a>
2fff18b2:	4621      	mov	r1, r4
2fff18b4:	4640      	mov	r0, r8
2fff18b6:	f002 ff15 	bl	2fff46e4 <bsec_read_otp>
2fff18ba:	4604      	mov	r4, r0
2fff18bc:	b1dc      	cbz	r4, 2fff18f6 <bsec_main+0xae>
2fff18be:	f06f 0001 	mvn.w	r0, #1
2fff18c2:	e019      	b.n	2fff18f8 <bsec_main+0xb0>
2fff18c4:	2c08      	cmp	r4, #8
2fff18c6:	f04f 0300 	mov.w	r3, #0
2fff18ca:	f8c8 3000 	str.w	r3, [r8]
2fff18ce:	d004      	beq.n	2fff18da <bsec_main+0x92>
2fff18d0:	4621      	mov	r1, r4
2fff18d2:	4650      	mov	r0, sl
2fff18d4:	f003 f9a6 	bl	2fff4c24 <bsec_program_otp>
2fff18d8:	e7ef      	b.n	2fff18ba <bsec_main+0x72>
2fff18da:	4621      	mov	r1, r4
2fff18dc:	a802      	add	r0, sp, #8
2fff18de:	f002 ff01 	bl	2fff46e4 <bsec_read_otp>
2fff18e2:	2800      	cmp	r0, #0
2fff18e4:	d1eb      	bne.n	2fff18be <bsec_main+0x76>
2fff18e6:	9802      	ldr	r0, [sp, #8]
2fff18e8:	4651      	mov	r1, sl
2fff18ea:	f7ff ff7b 	bl	2fff17e4 <bsec_check_ssp>
2fff18ee:	f8c8 0000 	str.w	r0, [r8]
2fff18f2:	2802      	cmp	r0, #2
2fff18f4:	d1ec      	bne.n	2fff18d0 <bsec_main+0x88>
2fff18f6:	2000      	movs	r0, #0
2fff18f8:	b007      	add	sp, #28
2fff18fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff18fe:	4621      	mov	r1, r4
2fff1900:	4650      	mov	r0, sl
2fff1902:	2300      	movs	r3, #0
2fff1904:	f8c8 3000 	str.w	r3, [r8]
2fff1908:	f003 f916 	bl	2fff4b38 <bsec_write_otp>
2fff190c:	e7d5      	b.n	2fff18ba <bsec_main+0x72>
2fff190e:	2300      	movs	r3, #0
2fff1910:	4621      	mov	r1, r4
2fff1912:	f8c8 3000 	str.w	r3, [r8]
2fff1916:	a802      	add	r0, sp, #8
2fff1918:	f002 fee4 	bl	2fff46e4 <bsec_read_otp>
2fff191c:	2800      	cmp	r0, #0
2fff191e:	d1ce      	bne.n	2fff18be <bsec_main+0x76>
2fff1920:	4620      	mov	r0, r4
2fff1922:	f003 f805 	bl	2fff4930 <bsec_shadow_register>
2fff1926:	2800      	cmp	r0, #0
2fff1928:	d1c9      	bne.n	2fff18be <bsec_main+0x76>
2fff192a:	4621      	mov	r1, r4
2fff192c:	4640      	mov	r0, r8
2fff192e:	f002 fed9 	bl	2fff46e4 <bsec_read_otp>
2fff1932:	2800      	cmp	r0, #0
2fff1934:	d1c3      	bne.n	2fff18be <bsec_main+0x76>
2fff1936:	9802      	ldr	r0, [sp, #8]
2fff1938:	4621      	mov	r1, r4
2fff193a:	e7e5      	b.n	2fff1908 <bsec_main+0xc0>
2fff193c:	2d00      	cmp	r5, #0
2fff193e:	f000 80a7 	beq.w	2fff1a90 <bsec_main+0x248>
2fff1942:	46a8      	mov	r8, r5
2fff1944:	2600      	movs	r6, #0
2fff1946:	2301      	movs	r3, #1
2fff1948:	f848 3bb0 	str.w	r3, [r8], #176
2fff194c:	4630      	mov	r0, r6
2fff194e:	f003 f9d9 	bl	2fff4d04 <bsec_check_nsec_access_rights>
2fff1952:	2800      	cmp	r0, #0
2fff1954:	d07f      	beq.n	2fff1a56 <bsec_main+0x20e>
2fff1956:	3601      	adds	r6, #1
2fff1958:	2e60      	cmp	r6, #96	; 0x60
2fff195a:	d1f7      	bne.n	2fff194c <bsec_main+0x104>
2fff195c:	2400      	movs	r4, #0
2fff195e:	f002 fe31 	bl	2fff45c4 <bsec_get_base>
2fff1962:	6803      	ldr	r3, [r0, #0]
2fff1964:	606b      	str	r3, [r5, #4]
2fff1966:	f002 fe2d 	bl	2fff45c4 <bsec_get_base>
2fff196a:	68c3      	ldr	r3, [r0, #12]
2fff196c:	60eb      	str	r3, [r5, #12]
2fff196e:	f002 fe29 	bl	2fff45c4 <bsec_get_base>
2fff1972:	6903      	ldr	r3, [r0, #16]
2fff1974:	612b      	str	r3, [r5, #16]
2fff1976:	f002 fe25 	bl	2fff45c4 <bsec_get_base>
2fff197a:	6943      	ldr	r3, [r0, #20]
2fff197c:	616b      	str	r3, [r5, #20]
2fff197e:	f002 fe21 	bl	2fff45c4 <bsec_get_base>
2fff1982:	69c3      	ldr	r3, [r0, #28]
2fff1984:	622b      	str	r3, [r5, #32]
2fff1986:	f002 fe1d 	bl	2fff45c4 <bsec_get_base>
2fff198a:	6a03      	ldr	r3, [r0, #32]
2fff198c:	626b      	str	r3, [r5, #36]	; 0x24
2fff198e:	f002 fe19 	bl	2fff45c4 <bsec_get_base>
2fff1992:	6a43      	ldr	r3, [r0, #36]	; 0x24
2fff1994:	62ab      	str	r3, [r5, #40]	; 0x28
2fff1996:	f002 fe15 	bl	2fff45c4 <bsec_get_base>
2fff199a:	6b43      	ldr	r3, [r0, #52]	; 0x34
2fff199c:	63ab      	str	r3, [r5, #56]	; 0x38
2fff199e:	f002 fe11 	bl	2fff45c4 <bsec_get_base>
2fff19a2:	6b83      	ldr	r3, [r0, #56]	; 0x38
2fff19a4:	63eb      	str	r3, [r5, #60]	; 0x3c
2fff19a6:	f002 fe0d 	bl	2fff45c4 <bsec_get_base>
2fff19aa:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
2fff19ac:	642b      	str	r3, [r5, #64]	; 0x40
2fff19ae:	f002 fe09 	bl	2fff45c4 <bsec_get_base>
2fff19b2:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
2fff19b4:	652b      	str	r3, [r5, #80]	; 0x50
2fff19b6:	f002 fe05 	bl	2fff45c4 <bsec_get_base>
2fff19ba:	6d03      	ldr	r3, [r0, #80]	; 0x50
2fff19bc:	656b      	str	r3, [r5, #84]	; 0x54
2fff19be:	f002 fe01 	bl	2fff45c4 <bsec_get_base>
2fff19c2:	6d43      	ldr	r3, [r0, #84]	; 0x54
2fff19c4:	65ab      	str	r3, [r5, #88]	; 0x58
2fff19c6:	f002 fdfd 	bl	2fff45c4 <bsec_get_base>
2fff19ca:	6e43      	ldr	r3, [r0, #100]	; 0x64
2fff19cc:	66ab      	str	r3, [r5, #104]	; 0x68
2fff19ce:	f002 fdf9 	bl	2fff45c4 <bsec_get_base>
2fff19d2:	6e83      	ldr	r3, [r0, #104]	; 0x68
2fff19d4:	66eb      	str	r3, [r5, #108]	; 0x6c
2fff19d6:	f002 fdf5 	bl	2fff45c4 <bsec_get_base>
2fff19da:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
2fff19dc:	672b      	str	r3, [r5, #112]	; 0x70
2fff19de:	f002 fdf1 	bl	2fff45c4 <bsec_get_base>
2fff19e2:	6fc3      	ldr	r3, [r0, #124]	; 0x7c
2fff19e4:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
2fff19e8:	f002 fdec 	bl	2fff45c4 <bsec_get_base>
2fff19ec:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
2fff19f0:	f8c5 3084 	str.w	r3, [r5, #132]	; 0x84
2fff19f4:	f002 fde6 	bl	2fff45c4 <bsec_get_base>
2fff19f8:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
2fff19fc:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
2fff1a00:	f002 fde0 	bl	2fff45c4 <bsec_get_base>
2fff1a04:	f8d0 3094 	ldr.w	r3, [r0, #148]	; 0x94
2fff1a08:	f8c5 3098 	str.w	r3, [r5, #152]	; 0x98
2fff1a0c:	f002 fdda 	bl	2fff45c4 <bsec_get_base>
2fff1a10:	f8d0 3098 	ldr.w	r3, [r0, #152]	; 0x98
2fff1a14:	f8c5 309c 	str.w	r3, [r5, #156]	; 0x9c
2fff1a18:	f002 fdd4 	bl	2fff45c4 <bsec_get_base>
2fff1a1c:	f8d0 309c 	ldr.w	r3, [r0, #156]	; 0x9c
2fff1a20:	f8c5 30a0 	str.w	r3, [r5, #160]	; 0xa0
2fff1a24:	f002 fdce 	bl	2fff45c4 <bsec_get_base>
2fff1a28:	f8d0 3ff0 	ldr.w	r3, [r0, #4080]	; 0xff0
2fff1a2c:	f8c5 33f0 	str.w	r3, [r5, #1008]	; 0x3f0
2fff1a30:	f002 fdc8 	bl	2fff45c4 <bsec_get_base>
2fff1a34:	f8d0 3ff4 	ldr.w	r3, [r0, #4084]	; 0xff4
2fff1a38:	f8c5 33f4 	str.w	r3, [r5, #1012]	; 0x3f4
2fff1a3c:	f002 fdc2 	bl	2fff45c4 <bsec_get_base>
2fff1a40:	f8d0 3ff8 	ldr.w	r3, [r0, #4088]	; 0xff8
2fff1a44:	f8c5 33f8 	str.w	r3, [r5, #1016]	; 0x3f8
2fff1a48:	f002 fdbc 	bl	2fff45c4 <bsec_get_base>
2fff1a4c:	f8d0 3ffc 	ldr.w	r3, [r0, #4092]	; 0xffc
2fff1a50:	f8c5 33fc 	str.w	r3, [r5, #1020]	; 0x3fc
2fff1a54:	e00d      	b.n	2fff1a72 <bsec_main+0x22a>
2fff1a56:	4630      	mov	r0, r6
2fff1a58:	f002 ff6a 	bl	2fff4930 <bsec_shadow_register>
2fff1a5c:	4604      	mov	r4, r0
2fff1a5e:	b940      	cbnz	r0, 2fff1a72 <bsec_main+0x22a>
2fff1a60:	eb08 0086 	add.w	r0, r8, r6, lsl #2
2fff1a64:	4631      	mov	r1, r6
2fff1a66:	f002 fe3d 	bl	2fff46e4 <bsec_read_otp>
2fff1a6a:	4604      	mov	r4, r0
2fff1a6c:	2800      	cmp	r0, #0
2fff1a6e:	f43f af72 	beq.w	2fff1956 <bsec_main+0x10e>
2fff1a72:	4649      	mov	r1, r9
2fff1a74:	4638      	mov	r0, r7
2fff1a76:	f001 fe1f 	bl	2fff36b8 <mmap_remove_dynamic_region>
2fff1a7a:	2800      	cmp	r0, #0
2fff1a7c:	f43f af1e 	beq.w	2fff18bc <bsec_main+0x74>
2fff1a80:	f240 11ff 	movw	r1, #511	; 0x1ff
2fff1a84:	e14b      	b.n	2fff1d1e <bsec_main+0x4d6>
2fff1a86:	2600      	movs	r6, #0
2fff1a88:	9603      	str	r6, [sp, #12]
2fff1a8a:	f8c8 6000 	str.w	r6, [r8]
2fff1a8e:	b915      	cbnz	r5, 2fff1a96 <bsec_main+0x24e>
2fff1a90:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff1a94:	e7ed      	b.n	2fff1a72 <bsec_main+0x22a>
2fff1a96:	682b      	ldr	r3, [r5, #0]
2fff1a98:	2b01      	cmp	r3, #1
2fff1a9a:	d1f9      	bne.n	2fff1a90 <bsec_main+0x248>
2fff1a9c:	f105 0ab0 	add.w	sl, r5, #176	; 0xb0
2fff1aa0:	4630      	mov	r0, r6
2fff1aa2:	f003 f92f 	bl	2fff4d04 <bsec_check_nsec_access_rights>
2fff1aa6:	2800      	cmp	r0, #0
2fff1aa8:	f000 80a5 	beq.w	2fff1bf6 <bsec_main+0x3ae>
2fff1aac:	3601      	adds	r6, #1
2fff1aae:	f10a 0a04 	add.w	sl, sl, #4
2fff1ab2:	2e60      	cmp	r6, #96	; 0x60
2fff1ab4:	d1f4      	bne.n	2fff1aa0 <bsec_main+0x258>
2fff1ab6:	6968      	ldr	r0, [r5, #20]
2fff1ab8:	f002 fe24 	bl	2fff4704 <bsec_write_debug_conf>
2fff1abc:	2800      	cmp	r0, #0
2fff1abe:	f040 810f 	bne.w	2fff1ce0 <bsec_main+0x498>
2fff1ac2:	f105 0a50 	add.w	sl, r5, #80	; 0x50
2fff1ac6:	4680      	mov	r8, r0
2fff1ac8:	f85a 3b04 	ldr.w	r3, [sl], #4
2fff1acc:	b183      	cbz	r3, 2fff1af0 <bsec_main+0x2a8>
2fff1ace:	ea4f 1648 	mov.w	r6, r8, lsl #5
2fff1ad2:	f04f 0b00 	mov.w	fp, #0
2fff1ad6:	eb06 040b 	add.w	r4, r6, fp
2fff1ada:	4620      	mov	r0, r4
2fff1adc:	f003 f912 	bl	2fff4d04 <bsec_check_nsec_access_rights>
2fff1ae0:	2800      	cmp	r0, #0
2fff1ae2:	f000 80bb 	beq.w	2fff1c5c <bsec_main+0x414>
2fff1ae6:	f10b 0b01 	add.w	fp, fp, #1
2fff1aea:	f1bb 0f20 	cmp.w	fp, #32
2fff1aee:	d1f2      	bne.n	2fff1ad6 <bsec_main+0x28e>
2fff1af0:	f108 0801 	add.w	r8, r8, #1
2fff1af4:	f1b8 0f03 	cmp.w	r8, #3
2fff1af8:	d1e6      	bne.n	2fff1ac8 <bsec_main+0x280>
2fff1afa:	f105 0a68 	add.w	sl, r5, #104	; 0x68
2fff1afe:	f04f 0800 	mov.w	r8, #0
2fff1b02:	f85a 3b04 	ldr.w	r3, [sl], #4
2fff1b06:	b16b      	cbz	r3, 2fff1b24 <bsec_main+0x2dc>
2fff1b08:	ea4f 1648 	mov.w	r6, r8, lsl #5
2fff1b0c:	2400      	movs	r4, #0
2fff1b0e:	eb06 0b04 	add.w	fp, r6, r4
2fff1b12:	4658      	mov	r0, fp
2fff1b14:	f003 f8f6 	bl	2fff4d04 <bsec_check_nsec_access_rights>
2fff1b18:	2800      	cmp	r0, #0
2fff1b1a:	f000 80b1 	beq.w	2fff1c80 <bsec_main+0x438>
2fff1b1e:	3401      	adds	r4, #1
2fff1b20:	2c20      	cmp	r4, #32
2fff1b22:	d1f4      	bne.n	2fff1b0e <bsec_main+0x2c6>
2fff1b24:	f108 0801 	add.w	r8, r8, #1
2fff1b28:	f1b8 0f03 	cmp.w	r8, #3
2fff1b2c:	d1e9      	bne.n	2fff1b02 <bsec_main+0x2ba>
2fff1b2e:	f105 0a80 	add.w	sl, r5, #128	; 0x80
2fff1b32:	f04f 0800 	mov.w	r8, #0
2fff1b36:	f85a 3b04 	ldr.w	r3, [sl], #4
2fff1b3a:	b16b      	cbz	r3, 2fff1b58 <bsec_main+0x310>
2fff1b3c:	ea4f 1648 	mov.w	r6, r8, lsl #5
2fff1b40:	2400      	movs	r4, #0
2fff1b42:	eb06 0b04 	add.w	fp, r6, r4
2fff1b46:	4658      	mov	r0, fp
2fff1b48:	f003 f8dc 	bl	2fff4d04 <bsec_check_nsec_access_rights>
2fff1b4c:	2800      	cmp	r0, #0
2fff1b4e:	f000 80a7 	beq.w	2fff1ca0 <bsec_main+0x458>
2fff1b52:	3401      	adds	r4, #1
2fff1b54:	2c20      	cmp	r4, #32
2fff1b56:	d1f4      	bne.n	2fff1b42 <bsec_main+0x2fa>
2fff1b58:	f108 0801 	add.w	r8, r8, #1
2fff1b5c:	f1b8 0f03 	cmp.w	r8, #3
2fff1b60:	d1e9      	bne.n	2fff1b36 <bsec_main+0x2ee>
2fff1b62:	f105 0a98 	add.w	sl, r5, #152	; 0x98
2fff1b66:	f04f 0800 	mov.w	r8, #0
2fff1b6a:	f85a 3b04 	ldr.w	r3, [sl], #4
2fff1b6e:	b16b      	cbz	r3, 2fff1b8c <bsec_main+0x344>
2fff1b70:	ea4f 1648 	mov.w	r6, r8, lsl #5
2fff1b74:	2400      	movs	r4, #0
2fff1b76:	eb06 0b04 	add.w	fp, r6, r4
2fff1b7a:	4658      	mov	r0, fp
2fff1b7c:	f003 f8c2 	bl	2fff4d04 <bsec_check_nsec_access_rights>
2fff1b80:	2800      	cmp	r0, #0
2fff1b82:	f000 809d 	beq.w	2fff1cc0 <bsec_main+0x478>
2fff1b86:	3401      	adds	r4, #1
2fff1b88:	2c20      	cmp	r4, #32
2fff1b8a:	d1f4      	bne.n	2fff1b76 <bsec_main+0x32e>
2fff1b8c:	f108 0801 	add.w	r8, r8, #1
2fff1b90:	f1b8 0f03 	cmp.w	r8, #3
2fff1b94:	d1e9      	bne.n	2fff1b6a <bsec_main+0x322>
2fff1b96:	a804      	add	r0, sp, #16
2fff1b98:	f002 fd1a 	bl	2fff45d0 <bsec_get_config>
2fff1b9c:	4604      	mov	r4, r0
2fff1b9e:	2800      	cmp	r0, #0
2fff1ba0:	f47f af67 	bne.w	2fff1a72 <bsec_main+0x22a>
2fff1ba4:	686b      	ldr	r3, [r5, #4]
2fff1ba6:	a804      	add	r0, sp, #16
2fff1ba8:	f003 0201 	and.w	r2, r3, #1
2fff1bac:	f88d 2014 	strb.w	r2, [sp, #20]
2fff1bb0:	f3c3 0241 	ubfx	r2, r3, #1, #2
2fff1bb4:	f88d 2013 	strb.w	r2, [sp, #19]
2fff1bb8:	f3c3 02c3 	ubfx	r2, r3, #3, #4
2fff1bbc:	f3c3 13c1 	ubfx	r3, r3, #7, #2
2fff1bc0:	f88d 3011 	strb.w	r3, [sp, #17]
2fff1bc4:	692b      	ldr	r3, [r5, #16]
2fff1bc6:	f88d 2012 	strb.w	r2, [sp, #18]
2fff1bca:	f3c3 0280 	ubfx	r2, r3, #2, #1
2fff1bce:	f88d 2010 	strb.w	r2, [sp, #16]
2fff1bd2:	f3c3 1200 	ubfx	r2, r3, #4, #1
2fff1bd6:	f003 0301 	and.w	r3, r3, #1
2fff1bda:	f88d 2015 	strb.w	r2, [sp, #21]
2fff1bde:	f88d 3016 	strb.w	r3, [sp, #22]
2fff1be2:	f002 fddf 	bl	2fff47a4 <bsec_set_config>
2fff1be6:	4604      	mov	r4, r0
2fff1be8:	2800      	cmp	r0, #0
2fff1bea:	f47f af42 	bne.w	2fff1a72 <bsec_main+0x22a>
2fff1bee:	484d      	ldr	r0, [pc, #308]	; (2fff1d24 <bsec_main+0x4dc>)
2fff1bf0:	f001 f894 	bl	2fff2d1c <tf_log>
2fff1bf4:	e73d      	b.n	2fff1a72 <bsec_main+0x22a>
2fff1bf6:	4630      	mov	r0, r6
2fff1bf8:	f002 fe9a 	bl	2fff4930 <bsec_shadow_register>
2fff1bfc:	4604      	mov	r4, r0
2fff1bfe:	2800      	cmp	r0, #0
2fff1c00:	f47f af37 	bne.w	2fff1a72 <bsec_main+0x22a>
2fff1c04:	4631      	mov	r1, r6
2fff1c06:	a803      	add	r0, sp, #12
2fff1c08:	f002 fd6c 	bl	2fff46e4 <bsec_read_otp>
2fff1c0c:	4604      	mov	r4, r0
2fff1c0e:	2800      	cmp	r0, #0
2fff1c10:	f47f af2f 	bne.w	2fff1a72 <bsec_main+0x22a>
2fff1c14:	f8da 1000 	ldr.w	r1, [sl]
2fff1c18:	9803      	ldr	r0, [sp, #12]
2fff1c1a:	4281      	cmp	r1, r0
2fff1c1c:	d109      	bne.n	2fff1c32 <bsec_main+0x3ea>
2fff1c1e:	2e08      	cmp	r6, #8
2fff1c20:	f47f af44 	bne.w	2fff1aac <bsec_main+0x264>
2fff1c24:	f7ff fdde 	bl	2fff17e4 <bsec_check_ssp>
2fff1c28:	f8c8 0000 	str.w	r0, [r8]
2fff1c2c:	2802      	cmp	r0, #2
2fff1c2e:	d102      	bne.n	2fff1c36 <bsec_main+0x3ee>
2fff1c30:	e73c      	b.n	2fff1aac <bsec_main+0x264>
2fff1c32:	2e08      	cmp	r6, #8
2fff1c34:	d0f6      	beq.n	2fff1c24 <bsec_main+0x3dc>
2fff1c36:	f8da 0000 	ldr.w	r0, [sl]
2fff1c3a:	4631      	mov	r1, r6
2fff1c3c:	f002 fff2 	bl	2fff4c24 <bsec_program_otp>
2fff1c40:	4604      	mov	r4, r0
2fff1c42:	2800      	cmp	r0, #0
2fff1c44:	f47f af15 	bne.w	2fff1a72 <bsec_main+0x22a>
2fff1c48:	f8da 0000 	ldr.w	r0, [sl]
2fff1c4c:	4631      	mov	r1, r6
2fff1c4e:	f002 ff73 	bl	2fff4b38 <bsec_write_otp>
2fff1c52:	4604      	mov	r4, r0
2fff1c54:	2800      	cmp	r0, #0
2fff1c56:	f43f af29 	beq.w	2fff1aac <bsec_main+0x264>
2fff1c5a:	e70a      	b.n	2fff1a72 <bsec_main+0x22a>
2fff1c5c:	f85a 3c04 	ldr.w	r3, [sl, #-4]
2fff1c60:	fa23 f30b 	lsr.w	r3, r3, fp
2fff1c64:	f003 0301 	and.w	r3, r3, #1
2fff1c68:	9303      	str	r3, [sp, #12]
2fff1c6a:	2b00      	cmp	r3, #0
2fff1c6c:	f43f af3b 	beq.w	2fff1ae6 <bsec_main+0x29e>
2fff1c70:	4620      	mov	r0, r4
2fff1c72:	f002 fdcd 	bl	2fff4810 <bsec_permanent_lock_otp>
2fff1c76:	4604      	mov	r4, r0
2fff1c78:	2800      	cmp	r0, #0
2fff1c7a:	f43f af34 	beq.w	2fff1ae6 <bsec_main+0x29e>
2fff1c7e:	e6f8      	b.n	2fff1a72 <bsec_main+0x22a>
2fff1c80:	f85a 3c04 	ldr.w	r3, [sl, #-4]
2fff1c84:	40e3      	lsrs	r3, r4
2fff1c86:	f003 0301 	and.w	r3, r3, #1
2fff1c8a:	9303      	str	r3, [sp, #12]
2fff1c8c:	2b00      	cmp	r3, #0
2fff1c8e:	f43f af46 	beq.w	2fff1b1e <bsec_main+0x2d6>
2fff1c92:	4658      	mov	r0, fp
2fff1c94:	f002 ff72 	bl	2fff4b7c <bsec_set_sp_lock>
2fff1c98:	2800      	cmp	r0, #0
2fff1c9a:	f43f af40 	beq.w	2fff1b1e <bsec_main+0x2d6>
2fff1c9e:	e6f7      	b.n	2fff1a90 <bsec_main+0x248>
2fff1ca0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
2fff1ca4:	40e3      	lsrs	r3, r4
2fff1ca6:	f003 0301 	and.w	r3, r3, #1
2fff1caa:	9303      	str	r3, [sp, #12]
2fff1cac:	2b00      	cmp	r3, #0
2fff1cae:	f43f af50 	beq.w	2fff1b52 <bsec_main+0x30a>
2fff1cb2:	4658      	mov	r0, fp
2fff1cb4:	f002 ff08 	bl	2fff4ac8 <bsec_set_sw_lock>
2fff1cb8:	2800      	cmp	r0, #0
2fff1cba:	f43f af4a 	beq.w	2fff1b52 <bsec_main+0x30a>
2fff1cbe:	e6e7      	b.n	2fff1a90 <bsec_main+0x248>
2fff1cc0:	f85a 3c04 	ldr.w	r3, [sl, #-4]
2fff1cc4:	40e3      	lsrs	r3, r4
2fff1cc6:	f003 0301 	and.w	r3, r3, #1
2fff1cca:	9303      	str	r3, [sp, #12]
2fff1ccc:	2b00      	cmp	r3, #0
2fff1cce:	f43f af5a 	beq.w	2fff1b86 <bsec_main+0x33e>
2fff1cd2:	4658      	mov	r0, fp
2fff1cd4:	f002 fdf4 	bl	2fff48c0 <bsec_set_sr_lock>
2fff1cd8:	2800      	cmp	r0, #0
2fff1cda:	f43f af54 	beq.w	2fff1b86 <bsec_main+0x33e>
2fff1cde:	e6d7      	b.n	2fff1a90 <bsec_main+0x248>
2fff1ce0:	4604      	mov	r4, r0
2fff1ce2:	e6c6      	b.n	2fff1a72 <bsec_main+0x22a>
2fff1ce4:	4620      	mov	r0, r4
2fff1ce6:	f002 fd93 	bl	2fff4810 <bsec_permanent_lock_otp>
2fff1cea:	e5e6      	b.n	2fff18ba <bsec_main+0x72>
2fff1cec:	4b0e      	ldr	r3, [pc, #56]	; (2fff1d28 <bsec_main+0x4e0>)
2fff1cee:	f504 6980 	add.w	r9, r4, #1024	; 0x400
2fff1cf2:	ea04 0703 	and.w	r7, r4, r3
2fff1cf6:	ea09 0903 	and.w	r9, r9, r3
2fff1cfa:	231a      	movs	r3, #26
2fff1cfc:	9300      	str	r3, [sp, #0]
2fff1cfe:	463a      	mov	r2, r7
2fff1d00:	45b9      	cmp	r9, r7
2fff1d02:	bf0c      	ite	eq
2fff1d04:	f44f 5980 	moveq.w	r9, #4096	; 0x1000
2fff1d08:	f44f 5900 	movne.w	r9, #8192	; 0x2000
2fff1d0c:	4638      	mov	r0, r7
2fff1d0e:	464b      	mov	r3, r9
2fff1d10:	f001 fcbe 	bl	2fff3690 <mmap_add_dynamic_region>
2fff1d14:	2800      	cmp	r0, #0
2fff1d16:	f43f adad 	beq.w	2fff1874 <bsec_main+0x2c>
2fff1d1a:	f240 11b5 	movw	r1, #437	; 0x1b5
2fff1d1e:	4803      	ldr	r0, [pc, #12]	; (2fff1d2c <bsec_main+0x4e4>)
2fff1d20:	f008 f9fa 	bl	2fffa118 <__assert>
2fff1d24:	2fffb2a0 	.word	0x2fffb2a0
2fff1d28:	fffff000 	.word	0xfffff000
2fff1d2c:	2fffb27b 	.word	0x2fffb27b

2fff1d30 <pm_domain_scv_handler>:
2fff1d30:	3900      	subs	r1, #0
2fff1d32:	bf18      	it	ne
2fff1d34:	2101      	movne	r1, #1
2fff1d36:	b508      	push	{r3, lr}
2fff1d38:	f7fe fcc8 	bl	2fff06cc <stm32mp1_set_pm_domain_state>
2fff1d3c:	2800      	cmp	r0, #0
2fff1d3e:	bfb4      	ite	lt
2fff1d40:	f06f 0001 	mvnlt.w	r0, #1
2fff1d44:	2000      	movge	r0, #0
2fff1d46:	bd08      	pop	{r3, pc}

2fff1d48 <pwr_scv_handler>:
2fff1d48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff1d4c:	4607      	mov	r7, r0
2fff1d4e:	f421 767f 	bic.w	r6, r1, #1020	; 0x3fc
2fff1d52:	460c      	mov	r4, r1
2fff1d54:	f026 0603 	bic.w	r6, r6, #3
2fff1d58:	4615      	mov	r5, r2
2fff1d5a:	b12e      	cbz	r6, 2fff1d68 <pwr_scv_handler+0x20>
2fff1d5c:	f001 f9a0 	bl	2fff30a0 <stm32mp_pwr_base>
2fff1d60:	4286      	cmp	r6, r0
2fff1d62:	d132      	bne.n	2fff1dca <pwr_scv_handler+0x82>
2fff1d64:	f3c4 0409 	ubfx	r4, r4, #0, #10
2fff1d68:	2c20      	cmp	r4, #32
2fff1d6a:	d01c      	beq.n	2fff1da6 <pwr_scv_handler+0x5e>
2fff1d6c:	2c28      	cmp	r4, #40	; 0x28
2fff1d6e:	d01d      	beq.n	2fff1dac <pwr_scv_handler+0x64>
2fff1d70:	2c0c      	cmp	r4, #12
2fff1d72:	d123      	bne.n	2fff1dbc <pwr_scv_handler+0x74>
2fff1d74:	f8df 905c 	ldr.w	r9, [pc, #92]	; 2fff1dd4 <pwr_scv_handler+0x8c>
2fff1d78:	ea05 0509 	and.w	r5, r5, r9
2fff1d7c:	f001 f990 	bl	2fff30a0 <stm32mp_pwr_base>
2fff1d80:	eb04 0800 	add.w	r8, r4, r0
2fff1d84:	4606      	mov	r6, r0
2fff1d86:	f001 f99b 	bl	2fff30c0 <stm32mp_pwr_regs_lock>
2fff1d8a:	2f02      	cmp	r7, #2
2fff1d8c:	d011      	beq.n	2fff1db2 <pwr_scv_handler+0x6a>
2fff1d8e:	2f03      	cmp	r7, #3
2fff1d90:	d016      	beq.n	2fff1dc0 <pwr_scv_handler+0x78>
2fff1d92:	2f01      	cmp	r7, #1
2fff1d94:	d110      	bne.n	2fff1db8 <pwr_scv_handler+0x70>
2fff1d96:	f8d8 2000 	ldr.w	r2, [r8]
2fff1d9a:	ea22 0209 	bic.w	r2, r2, r9
2fff1d9e:	4315      	orrs	r5, r2
2fff1da0:	f8c8 5000 	str.w	r5, [r8]
2fff1da4:	e008      	b.n	2fff1db8 <pwr_scv_handler+0x70>
2fff1da6:	f8df 9030 	ldr.w	r9, [pc, #48]	; 2fff1dd8 <pwr_scv_handler+0x90>
2fff1daa:	e7e5      	b.n	2fff1d78 <pwr_scv_handler+0x30>
2fff1dac:	f04f 093f 	mov.w	r9, #63	; 0x3f
2fff1db0:	e7e2      	b.n	2fff1d78 <pwr_scv_handler+0x30>
2fff1db2:	59a2      	ldr	r2, [r4, r6]
2fff1db4:	4315      	orrs	r5, r2
2fff1db6:	51a5      	str	r5, [r4, r6]
2fff1db8:	f001 f98e 	bl	2fff30d8 <stm32mp_pwr_regs_unlock>
2fff1dbc:	2000      	movs	r0, #0
2fff1dbe:	e006      	b.n	2fff1dce <pwr_scv_handler+0x86>
2fff1dc0:	f8d8 2000 	ldr.w	r2, [r8]
2fff1dc4:	ea22 0505 	bic.w	r5, r2, r5
2fff1dc8:	e7ea      	b.n	2fff1da0 <pwr_scv_handler+0x58>
2fff1dca:	f06f 0002 	mvn.w	r0, #2
2fff1dce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff1dd2:	bf00      	nop
2fff1dd4:	51000300 	.word	0x51000300
2fff1dd8:	0fff3f3f 	.word	0x0fff3f3f

2fff1ddc <rcc_scv_handler>:
2fff1ddc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff1dde:	4606      	mov	r6, r0
2fff1de0:	f421 677f 	bic.w	r7, r1, #4080	; 0xff0
2fff1de4:	460c      	mov	r4, r1
2fff1de6:	f027 070f 	bic.w	r7, r7, #15
2fff1dea:	4615      	mov	r5, r2
2fff1dec:	b12f      	cbz	r7, 2fff1dfa <rcc_scv_handler+0x1e>
2fff1dee:	f001 f95b 	bl	2fff30a8 <stm32mp_rcc_base>
2fff1df2:	4287      	cmp	r7, r0
2fff1df4:	d12a      	bne.n	2fff1e4c <rcc_scv_handler+0x70>
2fff1df6:	f3c4 040b 	ubfx	r4, r4, #0, #12
2fff1dfa:	f240 4314 	movw	r3, #1044	; 0x414
2fff1dfe:	429c      	cmp	r4, r3
2fff1e00:	d009      	beq.n	2fff1e16 <rcc_scv_handler+0x3a>
2fff1e02:	f5b4 6f83 	cmp.w	r4, #1048	; 0x418
2fff1e06:	d006      	beq.n	2fff1e16 <rcc_scv_handler+0x3a>
2fff1e08:	f5b4 7f86 	cmp.w	r4, #268	; 0x10c
2fff1e0c:	d016      	beq.n	2fff1e3c <rcc_scv_handler+0x60>
2fff1e0e:	f001 f829 	bl	2fff2e64 <console_flush>
2fff1e12:	f007 e948 	blx	2fff90a4 <do_panic>
2fff1e16:	f44f 1780 	mov.w	r7, #1048576	; 0x100000
2fff1e1a:	f001 f945 	bl	2fff30a8 <stm32mp_rcc_base>
2fff1e1e:	4420      	add	r0, r4
2fff1e20:	2e02      	cmp	r6, #2
2fff1e22:	ea05 0107 	and.w	r1, r5, r7
2fff1e26:	d00b      	beq.n	2fff1e40 <rcc_scv_handler+0x64>
2fff1e28:	2e03      	cmp	r6, #3
2fff1e2a:	d00c      	beq.n	2fff1e46 <rcc_scv_handler+0x6a>
2fff1e2c:	2e01      	cmp	r6, #1
2fff1e2e:	d103      	bne.n	2fff1e38 <rcc_scv_handler+0x5c>
2fff1e30:	460a      	mov	r2, r1
2fff1e32:	4639      	mov	r1, r7
2fff1e34:	f006 fe00 	bl	2fff8a38 <stm32mp_mmio_clrsetbits_32_shregs>
2fff1e38:	2000      	movs	r0, #0
2fff1e3a:	e009      	b.n	2fff1e50 <rcc_scv_handler+0x74>
2fff1e3c:	2701      	movs	r7, #1
2fff1e3e:	e7ec      	b.n	2fff1e1a <rcc_scv_handler+0x3e>
2fff1e40:	f006 fe16 	bl	2fff8a70 <stm32mp_mmio_setbits_32_shregs>
2fff1e44:	e7f8      	b.n	2fff1e38 <rcc_scv_handler+0x5c>
2fff1e46:	f006 fe06 	bl	2fff8a56 <stm32mp_mmio_clrbits_32_shregs>
2fff1e4a:	e7f5      	b.n	2fff1e38 <rcc_scv_handler+0x5c>
2fff1e4c:	f06f 0002 	mvn.w	r0, #2
2fff1e50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

2fff1e52 <rcc_cal_scv_handler>:
2fff1e52:	2801      	cmp	r0, #1
2fff1e54:	b508      	push	{r3, lr}
2fff1e56:	d004      	beq.n	2fff1e62 <rcc_cal_scv_handler+0x10>
2fff1e58:	2804      	cmp	r0, #4
2fff1e5a:	d00a      	beq.n	2fff1e72 <rcc_cal_scv_handler+0x20>
2fff1e5c:	f06f 0002 	mvn.w	r0, #2
2fff1e60:	bd08      	pop	{r3, pc}
2fff1e62:	f7fd f8df 	bl	2ffef024 <stm32mp1_calib_start_csi_cal>
2fff1e66:	b110      	cbz	r0, 2fff1e6e <rcc_cal_scv_handler+0x1c>
2fff1e68:	f06f 0001 	mvn.w	r0, #1
2fff1e6c:	e7f8      	b.n	2fff1e60 <rcc_cal_scv_handler+0xe>
2fff1e6e:	2000      	movs	r0, #0
2fff1e70:	e7f6      	b.n	2fff1e60 <rcc_cal_scv_handler+0xe>
2fff1e72:	f7fd f8c9 	bl	2ffef008 <stm32mp1_calib_start_hsi_cal>
2fff1e76:	e7f6      	b.n	2fff1e66 <rcc_cal_scv_handler+0x14>

2fff1e78 <rcc_opp_scv_handler>:
2fff1e78:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff1e7a:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
2fff1e7e:	4604      	mov	r4, r0
2fff1e80:	4616      	mov	r6, r2
2fff1e82:	fbb1 f0f5 	udiv	r0, r1, r5
2fff1e86:	9001      	str	r0, [sp, #4]
2fff1e88:	b134      	cbz	r4, 2fff1e98 <rcc_opp_scv_handler+0x20>
2fff1e8a:	2c01      	cmp	r4, #1
2fff1e8c:	d00b      	beq.n	2fff1ea6 <rcc_opp_scv_handler+0x2e>
2fff1e8e:	f06f 0402 	mvn.w	r4, #2
2fff1e92:	4620      	mov	r0, r4
2fff1e94:	b002      	add	sp, #8
2fff1e96:	bd70      	pop	{r4, r5, r6, pc}
2fff1e98:	f003 feb2 	bl	2fff5c00 <stm32mp1_set_opp_khz>
2fff1e9c:	2800      	cmp	r0, #0
2fff1e9e:	d0f8      	beq.n	2fff1e92 <rcc_opp_scv_handler+0x1a>
2fff1ea0:	f06f 0401 	mvn.w	r4, #1
2fff1ea4:	e7f5      	b.n	2fff1e92 <rcc_opp_scv_handler+0x1a>
2fff1ea6:	a801      	add	r0, sp, #4
2fff1ea8:	f003 fe8e 	bl	2fff5bc8 <stm32mp1_round_opp_khz>
2fff1eac:	4604      	mov	r4, r0
2fff1eae:	2800      	cmp	r0, #0
2fff1eb0:	d1f6      	bne.n	2fff1ea0 <rcc_opp_scv_handler+0x28>
2fff1eb2:	9b01      	ldr	r3, [sp, #4]
2fff1eb4:	4a02      	ldr	r2, [pc, #8]	; (2fff1ec0 <rcc_opp_scv_handler+0x48>)
2fff1eb6:	4293      	cmp	r3, r2
2fff1eb8:	d8f2      	bhi.n	2fff1ea0 <rcc_opp_scv_handler+0x28>
2fff1eba:	435d      	muls	r5, r3
2fff1ebc:	6035      	str	r5, [r6, #0]
2fff1ebe:	e7e8      	b.n	2fff1e92 <rcc_opp_scv_handler+0x1a>
2fff1ec0:	00418937 	.word	0x00418937

2fff1ec4 <stm32mp1_svc_setup>:
2fff1ec4:	2000      	movs	r0, #0
2fff1ec6:	4770      	bx	lr

2fff1ec8 <stm32mp1_svc_smc_handler>:
2fff1ec8:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff1eca:	4606      	mov	r6, r0
2fff1ecc:	9d08      	ldr	r5, [sp, #32]
2fff1ece:	4608      	mov	r0, r1
2fff1ed0:	4611      	mov	r1, r2
2fff1ed2:	461a      	mov	r2, r3
2fff1ed4:	4b32      	ldr	r3, [pc, #200]	; (2fff1fa0 <stm32mp1_svc_smc_handler+0xd8>)
2fff1ed6:	2400      	movs	r4, #0
2fff1ed8:	9401      	str	r4, [sp, #4]
2fff1eda:	429e      	cmp	r6, r3
2fff1edc:	d80f      	bhi.n	2fff1efe <stm32mp1_svc_smc_handler+0x36>
2fff1ede:	3b0a      	subs	r3, #10
2fff1ee0:	429e      	cmp	r6, r3
2fff1ee2:	d917      	bls.n	2fff1f14 <stm32mp1_svc_smc_handler+0x4c>
2fff1ee4:	f106 43fc 	add.w	r3, r6, #2113929216	; 0x7e000000
2fff1ee8:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
2fff1eec:	2b09      	cmp	r3, #9
2fff1eee:	d811      	bhi.n	2fff1f14 <stm32mp1_svc_smc_handler+0x4c>
2fff1ef0:	e8df f003 	tbb	[pc, r3]
2fff1ef4:	232b3227 	.word	0x232b3227
2fff1ef8:	10101010 	.word	0x10101010
2fff1efc:	2e35      	.short	0x2e35
2fff1efe:	4b29      	ldr	r3, [pc, #164]	; (2fff1fa4 <stm32mp1_svc_smc_handler+0xdc>)
2fff1f00:	429e      	cmp	r6, r3
2fff1f02:	d04a      	beq.n	2fff1f9a <stm32mp1_svc_smc_handler+0xd2>
2fff1f04:	d80d      	bhi.n	2fff1f22 <stm32mp1_svc_smc_handler+0x5a>
2fff1f06:	f5a3 435f 	sub.w	r3, r3, #57088	; 0xdf00
2fff1f0a:	429e      	cmp	r6, r3
2fff1f0c:	d02a      	beq.n	2fff1f64 <stm32mp1_svc_smc_handler+0x9c>
2fff1f0e:	3301      	adds	r3, #1
2fff1f10:	429e      	cmp	r6, r3
2fff1f12:	d02c      	beq.n	2fff1f6e <stm32mp1_svc_smc_handler+0xa6>
2fff1f14:	4824      	ldr	r0, [pc, #144]	; (2fff1fa8 <stm32mp1_svc_smc_handler+0xe0>)
2fff1f16:	4631      	mov	r1, r6
2fff1f18:	f000 ff00 	bl	2fff2d1c <tf_log>
2fff1f1c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff1f20:	e011      	b.n	2fff1f46 <stm32mp1_svc_smc_handler+0x7e>
2fff1f22:	4b22      	ldr	r3, [pc, #136]	; (2fff1fac <stm32mp1_svc_smc_handler+0xe4>)
2fff1f24:	429e      	cmp	r6, r3
2fff1f26:	d024      	beq.n	2fff1f72 <stm32mp1_svc_smc_handler+0xaa>
2fff1f28:	3302      	adds	r3, #2
2fff1f2a:	429e      	cmp	r6, r3
2fff1f2c:	d1f2      	bne.n	2fff1f14 <stm32mp1_svc_smc_handler+0x4c>
2fff1f2e:	4620      	mov	r0, r4
2fff1f30:	2301      	movs	r3, #1
2fff1f32:	9301      	str	r3, [sp, #4]
2fff1f34:	9b01      	ldr	r3, [sp, #4]
2fff1f36:	606b      	str	r3, [r5, #4]
2fff1f38:	e005      	b.n	2fff1f46 <stm32mp1_svc_smc_handler+0x7e>
2fff1f3a:	ab01      	add	r3, sp, #4
2fff1f3c:	f7ff fc84 	bl	2fff1848 <bsec_main>
2fff1f40:	e7f8      	b.n	2fff1f34 <stm32mp1_svc_smc_handler+0x6c>
2fff1f42:	f7ff ff4b 	bl	2fff1ddc <rcc_scv_handler>
2fff1f46:	6028      	str	r0, [r5, #0]
2fff1f48:	e024      	b.n	2fff1f94 <stm32mp1_svc_smc_handler+0xcc>
2fff1f4a:	f7ff ff82 	bl	2fff1e52 <rcc_cal_scv_handler>
2fff1f4e:	e7fa      	b.n	2fff1f46 <stm32mp1_svc_smc_handler+0x7e>
2fff1f50:	aa01      	add	r2, sp, #4
2fff1f52:	f7ff ff91 	bl	2fff1e78 <rcc_opp_scv_handler>
2fff1f56:	e7ed      	b.n	2fff1f34 <stm32mp1_svc_smc_handler+0x6c>
2fff1f58:	f7ff fef6 	bl	2fff1d48 <pwr_scv_handler>
2fff1f5c:	e7f3      	b.n	2fff1f46 <stm32mp1_svc_smc_handler+0x7e>
2fff1f5e:	f7ff fee7 	bl	2fff1d30 <pm_domain_scv_handler>
2fff1f62:	e7f0      	b.n	2fff1f46 <stm32mp1_svc_smc_handler+0x7e>
2fff1f64:	4620      	mov	r0, r4
2fff1f66:	f000 fc87 	bl	2fff2878 <scmi_smt_fastcall_smc_entry>
2fff1f6a:	4620      	mov	r0, r4
2fff1f6c:	e7eb      	b.n	2fff1f46 <stm32mp1_svc_smc_handler+0x7e>
2fff1f6e:	2001      	movs	r0, #1
2fff1f70:	e7f9      	b.n	2fff1f66 <stm32mp1_svc_smc_handler+0x9e>
2fff1f72:	4b0f      	ldr	r3, [pc, #60]	; (2fff1fb0 <stm32mp1_svc_smc_handler+0xe8>)
2fff1f74:	60eb      	str	r3, [r5, #12]
2fff1f76:	f103 5361 	add.w	r3, r3, #943718400	; 0x38400000
2fff1f7a:	f503 130f 	add.w	r3, r3, #2342912	; 0x23c000
2fff1f7e:	f603 2331 	addw	r3, r3, #2609	; 0xa31
2fff1f82:	60ab      	str	r3, [r5, #8]
2fff1f84:	f1a3 7344 	sub.w	r3, r3, #51380224	; 0x3100000
2fff1f88:	f5a3 33e1 	sub.w	r3, r3, #115200	; 0x1c200
2fff1f8c:	3b96      	subs	r3, #150	; 0x96
2fff1f8e:	606b      	str	r3, [r5, #4]
2fff1f90:	4b08      	ldr	r3, [pc, #32]	; (2fff1fb4 <stm32mp1_svc_smc_handler+0xec>)
2fff1f92:	602b      	str	r3, [r5, #0]
2fff1f94:	4628      	mov	r0, r5
2fff1f96:	b002      	add	sp, #8
2fff1f98:	bd70      	pop	{r4, r5, r6, pc}
2fff1f9a:	200d      	movs	r0, #13
2fff1f9c:	e7d3      	b.n	2fff1f46 <stm32mp1_svc_smc_handler+0x7e>
2fff1f9e:	bf00      	nop
2fff1fa0:	82001009 	.word	0x82001009
2fff1fa4:	8200ff00 	.word	0x8200ff00
2fff1fa8:	2fffb2b8 	.word	0x2fffb2b8
2fff1fac:	8200ff01 	.word	0x8200ff01
2fff1fb0:	14c29459 	.word	0x14c29459
2fff1fb4:	50aa78a7 	.word	0x50aa78a7

2fff1fb8 <discover_list_protocols>:
2fff1fb8:	6903      	ldr	r3, [r0, #16]
2fff1fba:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff1fbc:	2b04      	cmp	r3, #4
2fff1fbe:	b087      	sub	sp, #28
2fff1fc0:	f04f 0400 	mov.w	r4, #0
2fff1fc4:	4605      	mov	r5, r0
2fff1fc6:	e9cd 4400 	strd	r4, r4, [sp]
2fff1fca:	e9cd 4402 	strd	r4, r4, [sp, #8]
2fff1fce:	9404      	str	r4, [sp, #16]
2fff1fd0:	9405      	str	r4, [sp, #20]
2fff1fd2:	d005      	beq.n	2fff1fe0 <discover_list_protocols+0x28>
2fff1fd4:	f06f 0109 	mvn.w	r1, #9
2fff1fd8:	f000 fabc 	bl	2fff2554 <scmi_status_response>
2fff1fdc:	b007      	add	sp, #28
2fff1fde:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff1fe0:	6983      	ldr	r3, [r0, #24]
2fff1fe2:	2b10      	cmp	r3, #16
2fff1fe4:	d803      	bhi.n	2fff1fee <discover_list_protocols+0x36>
2fff1fe6:	4816      	ldr	r0, [pc, #88]	; (2fff2040 <discover_list_protocols+0x88>)
2fff1fe8:	2198      	movs	r1, #152	; 0x98
2fff1fea:	f008 f895 	bl	2fffa118 <__assert>
2fff1fee:	68c7      	ldr	r7, [r0, #12]
2fff1ff0:	6800      	ldr	r0, [r0, #0]
2fff1ff2:	f000 fcb7 	bl	2fff2964 <plat_scmi_protocol_list>
2fff1ff6:	4606      	mov	r6, r0
2fff1ff8:	b9d8      	cbnz	r0, 2fff2032 <discover_list_protocols+0x7a>
2fff1ffa:	4604      	mov	r4, r0
2fff1ffc:	683b      	ldr	r3, [r7, #0]
2fff1ffe:	42a3      	cmp	r3, r4
2fff2000:	d21b      	bcs.n	2fff203a <discover_list_protocols+0x82>
2fff2002:	1ae4      	subs	r4, r4, r3
2fff2004:	2c08      	cmp	r4, #8
2fff2006:	bf28      	it	cs
2fff2008:	2408      	movcs	r4, #8
2fff200a:	9401      	str	r4, [sp, #4]
2fff200c:	2208      	movs	r2, #8
2fff200e:	eb0d 0002 	add.w	r0, sp, r2
2fff2012:	4669      	mov	r1, sp
2fff2014:	f008 f8a8 	bl	2fffa168 <memcpy>
2fff2018:	6839      	ldr	r1, [r7, #0]
2fff201a:	4622      	mov	r2, r4
2fff201c:	a804      	add	r0, sp, #16
2fff201e:	4431      	add	r1, r6
2fff2020:	f008 f8a2 	bl	2fffa168 <memcpy>
2fff2024:	2210      	movs	r2, #16
2fff2026:	a902      	add	r1, sp, #8
2fff2028:	4628      	mov	r0, r5
2fff202a:	f000 faab 	bl	2fff2584 <scmi_write_response>
2fff202e:	e7d5      	b.n	2fff1fdc <discover_list_protocols+0x24>
2fff2030:	3401      	adds	r4, #1
2fff2032:	5d33      	ldrb	r3, [r6, r4]
2fff2034:	2b00      	cmp	r3, #0
2fff2036:	d1fb      	bne.n	2fff2030 <discover_list_protocols+0x78>
2fff2038:	e7e0      	b.n	2fff1ffc <discover_list_protocols+0x44>
2fff203a:	2400      	movs	r4, #0
2fff203c:	e7e5      	b.n	2fff200a <discover_list_protocols+0x52>
2fff203e:	bf00      	nop
2fff2040:	2fffb2f5 	.word	0x2fffb2f5

2fff2044 <discover_implementation_version>:
2fff2044:	2300      	movs	r3, #0
2fff2046:	b507      	push	{r0, r1, r2, lr}
2fff2048:	e9cd 3300 	strd	r3, r3, [sp]
2fff204c:	6903      	ldr	r3, [r0, #16]
2fff204e:	b133      	cbz	r3, 2fff205e <discover_implementation_version+0x1a>
2fff2050:	f06f 0109 	mvn.w	r1, #9
2fff2054:	f000 fa7e 	bl	2fff2554 <scmi_status_response>
2fff2058:	b003      	add	sp, #12
2fff205a:	f85d fb04 	ldr.w	pc, [sp], #4
2fff205e:	2208      	movs	r2, #8
2fff2060:	4669      	mov	r1, sp
2fff2062:	f000 fa8f 	bl	2fff2584 <scmi_write_response>
2fff2066:	e7f7      	b.n	2fff2058 <discover_implementation_version+0x14>

2fff2068 <report_message_attributes>:
2fff2068:	b507      	push	{r0, r1, r2, lr}
2fff206a:	2200      	movs	r2, #0
2fff206c:	e9cd 2200 	strd	r2, r2, [sp]
2fff2070:	6902      	ldr	r2, [r0, #16]
2fff2072:	4603      	mov	r3, r0
2fff2074:	68c1      	ldr	r1, [r0, #12]
2fff2076:	2a04      	cmp	r2, #4
2fff2078:	d004      	beq.n	2fff2084 <report_message_attributes+0x1c>
2fff207a:	f06f 0109 	mvn.w	r1, #9
2fff207e:	f000 fa69 	bl	2fff2554 <scmi_status_response>
2fff2082:	e00a      	b.n	2fff209a <report_message_attributes+0x32>
2fff2084:	680a      	ldr	r2, [r1, #0]
2fff2086:	2a06      	cmp	r2, #6
2fff2088:	d80a      	bhi.n	2fff20a0 <report_message_attributes+0x38>
2fff208a:	4907      	ldr	r1, [pc, #28]	; (2fff20a8 <report_message_attributes+0x40>)
2fff208c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
2fff2090:	b132      	cbz	r2, 2fff20a0 <report_message_attributes+0x38>
2fff2092:	2208      	movs	r2, #8
2fff2094:	4669      	mov	r1, sp
2fff2096:	f000 fa75 	bl	2fff2584 <scmi_write_response>
2fff209a:	b003      	add	sp, #12
2fff209c:	f85d fb04 	ldr.w	pc, [sp], #4
2fff20a0:	f06f 0103 	mvn.w	r1, #3
2fff20a4:	4618      	mov	r0, r3
2fff20a6:	e7ea      	b.n	2fff207e <report_message_attributes+0x16>
2fff20a8:	2fffb310 	.word	0x2fffb310

2fff20ac <report_version>:
2fff20ac:	f44f 3300 	mov.w	r3, #131072	; 0x20000
2fff20b0:	b507      	push	{r0, r1, r2, lr}
2fff20b2:	2200      	movs	r2, #0
2fff20b4:	e9cd 2300 	strd	r2, r3, [sp]
2fff20b8:	6903      	ldr	r3, [r0, #16]
2fff20ba:	b133      	cbz	r3, 2fff20ca <report_version+0x1e>
2fff20bc:	f06f 0109 	mvn.w	r1, #9
2fff20c0:	f000 fa48 	bl	2fff2554 <scmi_status_response>
2fff20c4:	b003      	add	sp, #12
2fff20c6:	f85d fb04 	ldr.w	pc, [sp], #4
2fff20ca:	2208      	movs	r2, #8
2fff20cc:	4669      	mov	r1, sp
2fff20ce:	f000 fa59 	bl	2fff2584 <scmi_write_response>
2fff20d2:	e7f7      	b.n	2fff20c4 <report_version+0x18>

2fff20d4 <report_attributes>:
2fff20d4:	b513      	push	{r0, r1, r4, lr}
2fff20d6:	4604      	mov	r4, r0
2fff20d8:	f000 fc42 	bl	2fff2960 <plat_scmi_protocol_count>
2fff20dc:	2300      	movs	r3, #0
2fff20de:	b2c0      	uxtb	r0, r0
2fff20e0:	9300      	str	r3, [sp, #0]
2fff20e2:	6923      	ldr	r3, [r4, #16]
2fff20e4:	9001      	str	r0, [sp, #4]
2fff20e6:	b133      	cbz	r3, 2fff20f6 <report_attributes+0x22>
2fff20e8:	f06f 0109 	mvn.w	r1, #9
2fff20ec:	4620      	mov	r0, r4
2fff20ee:	f000 fa31 	bl	2fff2554 <scmi_status_response>
2fff20f2:	b002      	add	sp, #8
2fff20f4:	bd10      	pop	{r4, pc}
2fff20f6:	2208      	movs	r2, #8
2fff20f8:	4669      	mov	r1, sp
2fff20fa:	4620      	mov	r0, r4
2fff20fc:	f000 fa42 	bl	2fff2584 <scmi_write_response>
2fff2100:	e7f7      	b.n	2fff20f2 <report_attributes+0x1e>
	...

2fff2104 <discover_sub_vendor>:
2fff2104:	b530      	push	{r4, r5, lr}
2fff2106:	b087      	sub	sp, #28
2fff2108:	4604      	mov	r4, r0
2fff210a:	f000 fc25 	bl	2fff2958 <plat_scmi_sub_vendor_name>
2fff210e:	4605      	mov	r5, r0
2fff2110:	2214      	movs	r2, #20
2fff2112:	2100      	movs	r1, #0
2fff2114:	a801      	add	r0, sp, #4
2fff2116:	f008 f848 	bl	2fffa1aa <memset>
2fff211a:	6923      	ldr	r3, [r4, #16]
2fff211c:	b133      	cbz	r3, 2fff212c <discover_sub_vendor+0x28>
2fff211e:	f06f 0109 	mvn.w	r1, #9
2fff2122:	4620      	mov	r0, r4
2fff2124:	f000 fa16 	bl	2fff2554 <scmi_status_response>
2fff2128:	b007      	add	sp, #28
2fff212a:	bd30      	pop	{r4, r5, pc}
2fff212c:	4628      	mov	r0, r5
2fff212e:	f008 f9a0 	bl	2fffa472 <strlen>
2fff2132:	280f      	cmp	r0, #15
2fff2134:	d903      	bls.n	2fff213e <discover_sub_vendor+0x3a>
2fff2136:	4807      	ldr	r0, [pc, #28]	; (2fff2154 <discover_sub_vendor+0x50>)
2fff2138:	2166      	movs	r1, #102	; 0x66
2fff213a:	f007 ffed 	bl	2fffa118 <__assert>
2fff213e:	4629      	mov	r1, r5
2fff2140:	2210      	movs	r2, #16
2fff2142:	a802      	add	r0, sp, #8
2fff2144:	f008 f979 	bl	2fffa43a <strlcpy>
2fff2148:	2214      	movs	r2, #20
2fff214a:	a901      	add	r1, sp, #4
2fff214c:	4620      	mov	r0, r4
2fff214e:	f000 fa19 	bl	2fff2584 <scmi_write_response>
2fff2152:	e7e9      	b.n	2fff2128 <discover_sub_vendor+0x24>
2fff2154:	2fffb2f5 	.word	0x2fffb2f5

2fff2158 <discover_vendor>:
2fff2158:	b530      	push	{r4, r5, lr}
2fff215a:	b087      	sub	sp, #28
2fff215c:	4604      	mov	r4, r0
2fff215e:	f000 fbf7 	bl	2fff2950 <plat_scmi_vendor_name>
2fff2162:	4605      	mov	r5, r0
2fff2164:	2214      	movs	r2, #20
2fff2166:	2100      	movs	r1, #0
2fff2168:	a801      	add	r0, sp, #4
2fff216a:	f008 f81e 	bl	2fffa1aa <memset>
2fff216e:	6923      	ldr	r3, [r4, #16]
2fff2170:	b133      	cbz	r3, 2fff2180 <discover_vendor+0x28>
2fff2172:	f06f 0109 	mvn.w	r1, #9
2fff2176:	4620      	mov	r0, r4
2fff2178:	f000 f9ec 	bl	2fff2554 <scmi_status_response>
2fff217c:	b007      	add	sp, #28
2fff217e:	bd30      	pop	{r4, r5, pc}
2fff2180:	4628      	mov	r0, r5
2fff2182:	f008 f976 	bl	2fffa472 <strlen>
2fff2186:	280f      	cmp	r0, #15
2fff2188:	d903      	bls.n	2fff2192 <discover_vendor+0x3a>
2fff218a:	4807      	ldr	r0, [pc, #28]	; (2fff21a8 <discover_vendor+0x50>)
2fff218c:	2155      	movs	r1, #85	; 0x55
2fff218e:	f007 ffc3 	bl	2fffa118 <__assert>
2fff2192:	4629      	mov	r1, r5
2fff2194:	2210      	movs	r2, #16
2fff2196:	a802      	add	r0, sp, #8
2fff2198:	f008 f94f 	bl	2fffa43a <strlcpy>
2fff219c:	2214      	movs	r2, #20
2fff219e:	a901      	add	r1, sp, #4
2fff21a0:	4620      	mov	r0, r4
2fff21a2:	f000 f9ef 	bl	2fff2584 <scmi_write_response>
2fff21a6:	e7e9      	b.n	2fff217c <discover_vendor+0x24>
2fff21a8:	2fffb2f5 	.word	0x2fffb2f5

2fff21ac <scmi_msg_get_base_handler>:
2fff21ac:	6883      	ldr	r3, [r0, #8]
2fff21ae:	2b06      	cmp	r3, #6
2fff21b0:	d809      	bhi.n	2fff21c6 <scmi_msg_get_base_handler+0x1a>
2fff21b2:	2207      	movs	r2, #7
2fff21b4:	4293      	cmp	r3, r2
2fff21b6:	bf28      	it	cs
2fff21b8:	2300      	movcs	r3, #0
2fff21ba:	f3af 8014 	csdb
2fff21be:	4a03      	ldr	r2, [pc, #12]	; (2fff21cc <scmi_msg_get_base_handler+0x20>)
2fff21c0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
2fff21c4:	4770      	bx	lr
2fff21c6:	2000      	movs	r0, #0
2fff21c8:	4770      	bx	lr
2fff21ca:	bf00      	nop
2fff21cc:	2fffb310 	.word	0x2fffb310

2fff21d0 <confine_array_index>:
2fff21d0:	4288      	cmp	r0, r1
2fff21d2:	bf28      	it	cs
2fff21d4:	2000      	movcs	r0, #0
2fff21d6:	f3af 8014 	csdb
2fff21da:	4770      	bx	lr

2fff21dc <report_message_attributes>:
2fff21dc:	b507      	push	{r0, r1, r2, lr}
2fff21de:	2200      	movs	r2, #0
2fff21e0:	e9cd 2200 	strd	r2, r2, [sp]
2fff21e4:	6902      	ldr	r2, [r0, #16]
2fff21e6:	4603      	mov	r3, r0
2fff21e8:	68c1      	ldr	r1, [r0, #12]
2fff21ea:	2a04      	cmp	r2, #4
2fff21ec:	d004      	beq.n	2fff21f8 <report_message_attributes+0x1c>
2fff21ee:	f06f 0109 	mvn.w	r1, #9
2fff21f2:	f000 f9af 	bl	2fff2554 <scmi_status_response>
2fff21f6:	e00a      	b.n	2fff220e <report_message_attributes+0x32>
2fff21f8:	680a      	ldr	r2, [r1, #0]
2fff21fa:	2a07      	cmp	r2, #7
2fff21fc:	d80a      	bhi.n	2fff2214 <report_message_attributes+0x38>
2fff21fe:	4907      	ldr	r1, [pc, #28]	; (2fff221c <report_message_attributes+0x40>)
2fff2200:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
2fff2204:	b132      	cbz	r2, 2fff2214 <report_message_attributes+0x38>
2fff2206:	2208      	movs	r2, #8
2fff2208:	4669      	mov	r1, sp
2fff220a:	f000 f9bb 	bl	2fff2584 <scmi_write_response>
2fff220e:	b003      	add	sp, #12
2fff2210:	f85d fb04 	ldr.w	pc, [sp], #4
2fff2214:	f06f 0103 	mvn.w	r1, #3
2fff2218:	4618      	mov	r0, r3
2fff221a:	e7ea      	b.n	2fff21f2 <report_message_attributes+0x16>
2fff221c:	2fffb348 	.word	0x2fffb348

2fff2220 <report_version>:
2fff2220:	f44f 3300 	mov.w	r3, #131072	; 0x20000
2fff2224:	b507      	push	{r0, r1, r2, lr}
2fff2226:	2200      	movs	r2, #0
2fff2228:	e9cd 2300 	strd	r2, r3, [sp]
2fff222c:	6903      	ldr	r3, [r0, #16]
2fff222e:	b133      	cbz	r3, 2fff223e <report_version+0x1e>
2fff2230:	f06f 0109 	mvn.w	r1, #9
2fff2234:	f000 f98e 	bl	2fff2554 <scmi_status_response>
2fff2238:	b003      	add	sp, #12
2fff223a:	f85d fb04 	ldr.w	pc, [sp], #4
2fff223e:	2208      	movs	r2, #8
2fff2240:	4669      	mov	r1, sp
2fff2242:	f000 f99f 	bl	2fff2584 <scmi_write_response>
2fff2246:	e7f7      	b.n	2fff2238 <report_version+0x18>

2fff2248 <write_rate_desc_array_in_buffer>:
2fff2248:	f010 0303 	ands.w	r3, r0, #3
2fff224c:	b570      	push	{r4, r5, r6, lr}
2fff224e:	d104      	bne.n	2fff225a <write_rate_desc_array_in_buffer+0x12>
2fff2250:	1d04      	adds	r4, r0, #4
2fff2252:	461d      	mov	r5, r3
2fff2254:	4293      	cmp	r3, r2
2fff2256:	d105      	bne.n	2fff2264 <write_rate_desc_array_in_buffer+0x1c>
2fff2258:	bd70      	pop	{r4, r5, r6, pc}
2fff225a:	4806      	ldr	r0, [pc, #24]	; (2fff2274 <write_rate_desc_array_in_buffer+0x2c>)
2fff225c:	f240 1111 	movw	r1, #273	; 0x111
2fff2260:	f007 ff5a 	bl	2fffa118 <__assert>
2fff2264:	f851 6023 	ldr.w	r6, [r1, r3, lsl #2]
2fff2268:	f840 6033 	str.w	r6, [r0, r3, lsl #3]
2fff226c:	f844 5033 	str.w	r5, [r4, r3, lsl #3]
2fff2270:	3301      	adds	r3, #1
2fff2272:	e7ef      	b.n	2fff2254 <write_rate_desc_array_in_buffer+0xc>
2fff2274:	2fffb32c 	.word	0x2fffb32c

2fff2278 <report_attributes>:
2fff2278:	b513      	push	{r0, r1, r4, lr}
2fff227a:	4604      	mov	r4, r0
2fff227c:	6800      	ldr	r0, [r0, #0]
2fff227e:	f000 fb75 	bl	2fff296c <plat_scmi_clock_count>
2fff2282:	2300      	movs	r3, #0
2fff2284:	b280      	uxth	r0, r0
2fff2286:	9300      	str	r3, [sp, #0]
2fff2288:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
2fff228c:	6923      	ldr	r3, [r4, #16]
2fff228e:	9001      	str	r0, [sp, #4]
2fff2290:	b133      	cbz	r3, 2fff22a0 <report_attributes+0x28>
2fff2292:	f06f 0109 	mvn.w	r1, #9
2fff2296:	4620      	mov	r0, r4
2fff2298:	f000 f95c 	bl	2fff2554 <scmi_status_response>
2fff229c:	b002      	add	sp, #8
2fff229e:	bd10      	pop	{r4, pc}
2fff22a0:	2208      	movs	r2, #8
2fff22a2:	4669      	mov	r1, sp
2fff22a4:	4620      	mov	r0, r4
2fff22a6:	f000 f96d 	bl	2fff2584 <scmi_write_response>
2fff22aa:	e7f7      	b.n	2fff229c <report_attributes+0x24>

2fff22ac <scmi_clock_describe_rates>:
2fff22ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
2fff22b0:	b08f      	sub	sp, #60	; 0x3c
2fff22b2:	f8d0 8010 	ldr.w	r8, [r0, #16]
2fff22b6:	2600      	movs	r6, #0
2fff22b8:	f8d0 900c 	ldr.w	r9, [r0, #12]
2fff22bc:	4604      	mov	r4, r0
2fff22be:	f1b8 0f08 	cmp.w	r8, #8
2fff22c2:	e9cd 6602 	strd	r6, r6, [sp, #8]
2fff22c6:	d004      	beq.n	2fff22d2 <scmi_clock_describe_rates+0x26>
2fff22c8:	f06f 0109 	mvn.w	r1, #9
2fff22cc:	f000 f942 	bl	2fff2554 <scmi_status_response>
2fff22d0:	e048      	b.n	2fff2364 <scmi_clock_describe_rates+0xb8>
2fff22d2:	f8d9 5000 	ldr.w	r5, [r9]
2fff22d6:	6800      	ldr	r0, [r0, #0]
2fff22d8:	f000 fb48 	bl	2fff296c <plat_scmi_clock_count>
2fff22dc:	4285      	cmp	r5, r0
2fff22de:	d303      	bcc.n	2fff22e8 <scmi_clock_describe_rates+0x3c>
2fff22e0:	f06f 0101 	mvn.w	r1, #1
2fff22e4:	4620      	mov	r0, r4
2fff22e6:	e7f1      	b.n	2fff22cc <scmi_clock_describe_rates+0x20>
2fff22e8:	f8d9 5000 	ldr.w	r5, [r9]
2fff22ec:	6820      	ldr	r0, [r4, #0]
2fff22ee:	f000 fb3d 	bl	2fff296c <plat_scmi_clock_count>
2fff22f2:	4601      	mov	r1, r0
2fff22f4:	4628      	mov	r0, r5
2fff22f6:	f7ff ff6b 	bl	2fff21d0 <confine_array_index>
2fff22fa:	4601      	mov	r1, r0
2fff22fc:	4607      	mov	r7, r0
2fff22fe:	6820      	ldr	r0, [r4, #0]
2fff2300:	466b      	mov	r3, sp
2fff2302:	4632      	mov	r2, r6
2fff2304:	f000 fb4c 	bl	2fff29a0 <plat_scmi_clock_rates_array>
2fff2308:	4605      	mov	r5, r0
2fff230a:	bb70      	cbnz	r0, 2fff236a <scmi_clock_describe_rates+0xbe>
2fff230c:	f8d9 3004 	ldr.w	r3, [r9, #4]
2fff2310:	aa04      	add	r2, sp, #16
2fff2312:	9e00      	ldr	r6, [sp, #0]
2fff2314:	4639      	mov	r1, r7
2fff2316:	6820      	ldr	r0, [r4, #0]
2fff2318:	1af6      	subs	r6, r6, r3
2fff231a:	ab01      	add	r3, sp, #4
2fff231c:	2e0a      	cmp	r6, #10
2fff231e:	46b1      	mov	r9, r6
2fff2320:	bf28      	it	cs
2fff2322:	f04f 090a 	movcs.w	r9, #10
2fff2326:	f8cd 9004 	str.w	r9, [sp, #4]
2fff232a:	f000 fb39 	bl	2fff29a0 <plat_scmi_clock_rates_array>
2fff232e:	4605      	mov	r5, r0
2fff2330:	2800      	cmp	r0, #0
2fff2332:	d137      	bne.n	2fff23a4 <scmi_clock_describe_rates+0xf8>
2fff2334:	6960      	ldr	r0, [r4, #20]
2fff2336:	a904      	add	r1, sp, #16
2fff2338:	9a01      	ldr	r2, [sp, #4]
2fff233a:	eba6 0609 	sub.w	r6, r6, r9
2fff233e:	3008      	adds	r0, #8
2fff2340:	f7ff ff82 	bl	2fff2248 <write_rate_desc_array_in_buffer>
2fff2344:	9b01      	ldr	r3, [sp, #4]
2fff2346:	4642      	mov	r2, r8
2fff2348:	6960      	ldr	r0, [r4, #20]
2fff234a:	a902      	add	r1, sp, #8
2fff234c:	f3c3 030b 	ubfx	r3, r3, #0, #12
2fff2350:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
2fff2354:	e9cd 5302 	strd	r5, r3, [sp, #8]
2fff2358:	f007 ff06 	bl	2fffa168 <memcpy>
2fff235c:	9b01      	ldr	r3, [sp, #4]
2fff235e:	3301      	adds	r3, #1
2fff2360:	00db      	lsls	r3, r3, #3
2fff2362:	61e3      	str	r3, [r4, #28]
2fff2364:	b00f      	add	sp, #60	; 0x3c
2fff2366:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff236a:	1c43      	adds	r3, r0, #1
2fff236c:	d11a      	bne.n	2fff23a4 <scmi_clock_describe_rates+0xf8>
2fff236e:	6820      	ldr	r0, [r4, #0]
2fff2370:	aa04      	add	r2, sp, #16
2fff2372:	9606      	str	r6, [sp, #24]
2fff2374:	4639      	mov	r1, r7
2fff2376:	e9cd 6604 	strd	r6, r6, [sp, #16]
2fff237a:	f000 fb14 	bl	2fff29a6 <plat_scmi_clock_rates_by_step>
2fff237e:	4605      	mov	r5, r0
2fff2380:	b980      	cbnz	r0, 2fff23a4 <scmi_clock_describe_rates+0xf8>
2fff2382:	6960      	ldr	r0, [r4, #20]
2fff2384:	2203      	movs	r2, #3
2fff2386:	a904      	add	r1, sp, #16
2fff2388:	3008      	adds	r0, #8
2fff238a:	f7ff ff5d 	bl	2fff2248 <write_rate_desc_array_in_buffer>
2fff238e:	6960      	ldr	r0, [r4, #20]
2fff2390:	f241 0303 	movw	r3, #4099	; 0x1003
2fff2394:	4642      	mov	r2, r8
2fff2396:	a902      	add	r1, sp, #8
2fff2398:	e9cd 5302 	strd	r5, r3, [sp, #8]
2fff239c:	f007 fee4 	bl	2fffa168 <memcpy>
2fff23a0:	2320      	movs	r3, #32
2fff23a2:	e7de      	b.n	2fff2362 <scmi_clock_describe_rates+0xb6>
2fff23a4:	4629      	mov	r1, r5
2fff23a6:	e79d      	b.n	2fff22e4 <scmi_clock_describe_rates+0x38>

2fff23a8 <scmi_clock_rate_get>:
2fff23a8:	6903      	ldr	r3, [r0, #16]
2fff23aa:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff23ac:	2b04      	cmp	r3, #4
2fff23ae:	68c6      	ldr	r6, [r0, #12]
2fff23b0:	b085      	sub	sp, #20
2fff23b2:	f04f 0500 	mov.w	r5, #0
2fff23b6:	4604      	mov	r4, r0
2fff23b8:	9501      	str	r5, [sp, #4]
2fff23ba:	9502      	str	r5, [sp, #8]
2fff23bc:	9503      	str	r5, [sp, #12]
2fff23be:	d005      	beq.n	2fff23cc <scmi_clock_rate_get+0x24>
2fff23c0:	f06f 0109 	mvn.w	r1, #9
2fff23c4:	f000 f8c6 	bl	2fff2554 <scmi_status_response>
2fff23c8:	b005      	add	sp, #20
2fff23ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff23cc:	6837      	ldr	r7, [r6, #0]
2fff23ce:	6800      	ldr	r0, [r0, #0]
2fff23d0:	f000 facc 	bl	2fff296c <plat_scmi_clock_count>
2fff23d4:	4287      	cmp	r7, r0
2fff23d6:	d303      	bcc.n	2fff23e0 <scmi_clock_rate_get+0x38>
2fff23d8:	f06f 0101 	mvn.w	r1, #1
2fff23dc:	4620      	mov	r0, r4
2fff23de:	e7f1      	b.n	2fff23c4 <scmi_clock_rate_get+0x1c>
2fff23e0:	6836      	ldr	r6, [r6, #0]
2fff23e2:	6820      	ldr	r0, [r4, #0]
2fff23e4:	f000 fac2 	bl	2fff296c <plat_scmi_clock_count>
2fff23e8:	4601      	mov	r1, r0
2fff23ea:	4630      	mov	r0, r6
2fff23ec:	f7ff fef0 	bl	2fff21d0 <confine_array_index>
2fff23f0:	4601      	mov	r1, r0
2fff23f2:	6820      	ldr	r0, [r4, #0]
2fff23f4:	f000 fb1d 	bl	2fff2a32 <plat_scmi_clock_get_rate>
2fff23f8:	9002      	str	r0, [sp, #8]
2fff23fa:	220c      	movs	r2, #12
2fff23fc:	9503      	str	r5, [sp, #12]
2fff23fe:	a901      	add	r1, sp, #4
2fff2400:	4620      	mov	r0, r4
2fff2402:	f000 f8bf 	bl	2fff2584 <scmi_write_response>
2fff2406:	e7df      	b.n	2fff23c8 <scmi_clock_rate_get+0x20>

2fff2408 <scmi_clock_rate_set>:
2fff2408:	6903      	ldr	r3, [r0, #16]
2fff240a:	b570      	push	{r4, r5, r6, lr}
2fff240c:	2b10      	cmp	r3, #16
2fff240e:	4604      	mov	r4, r0
2fff2410:	d005      	beq.n	2fff241e <scmi_clock_rate_set+0x16>
2fff2412:	f06f 0109 	mvn.w	r1, #9
2fff2416:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff241a:	f000 b89b 	b.w	2fff2554 <scmi_status_response>
2fff241e:	68c5      	ldr	r5, [r0, #12]
2fff2420:	6800      	ldr	r0, [r0, #0]
2fff2422:	686e      	ldr	r6, [r5, #4]
2fff2424:	f000 faa2 	bl	2fff296c <plat_scmi_clock_count>
2fff2428:	4286      	cmp	r6, r0
2fff242a:	d303      	bcc.n	2fff2434 <scmi_clock_rate_set+0x2c>
2fff242c:	f06f 0101 	mvn.w	r1, #1
2fff2430:	4620      	mov	r0, r4
2fff2432:	e7f0      	b.n	2fff2416 <scmi_clock_rate_set+0xe>
2fff2434:	686e      	ldr	r6, [r5, #4]
2fff2436:	6820      	ldr	r0, [r4, #0]
2fff2438:	f000 fa98 	bl	2fff296c <plat_scmi_clock_count>
2fff243c:	4601      	mov	r1, r0
2fff243e:	4630      	mov	r0, r6
2fff2440:	f7ff fec6 	bl	2fff21d0 <confine_array_index>
2fff2444:	68aa      	ldr	r2, [r5, #8]
2fff2446:	4601      	mov	r1, r0
2fff2448:	6820      	ldr	r0, [r4, #0]
2fff244a:	f000 face 	bl	2fff29ea <plat_scmi_clock_set_rate>
2fff244e:	4601      	mov	r1, r0
2fff2450:	e7ee      	b.n	2fff2430 <scmi_clock_rate_set+0x28>
	...

2fff2454 <scmi_clock_attributes>:
2fff2454:	b570      	push	{r4, r5, r6, lr}
2fff2456:	4604      	mov	r4, r0
2fff2458:	68c5      	ldr	r5, [r0, #12]
2fff245a:	b086      	sub	sp, #24
2fff245c:	2218      	movs	r2, #24
2fff245e:	2100      	movs	r1, #0
2fff2460:	4668      	mov	r0, sp
2fff2462:	f007 fea2 	bl	2fffa1aa <memset>
2fff2466:	6923      	ldr	r3, [r4, #16]
2fff2468:	2b04      	cmp	r3, #4
2fff246a:	d006      	beq.n	2fff247a <scmi_clock_attributes+0x26>
2fff246c:	f06f 0109 	mvn.w	r1, #9
2fff2470:	4620      	mov	r0, r4
2fff2472:	f000 f86f 	bl	2fff2554 <scmi_status_response>
2fff2476:	b006      	add	sp, #24
2fff2478:	bd70      	pop	{r4, r5, r6, pc}
2fff247a:	682e      	ldr	r6, [r5, #0]
2fff247c:	6820      	ldr	r0, [r4, #0]
2fff247e:	f000 fa75 	bl	2fff296c <plat_scmi_clock_count>
2fff2482:	4286      	cmp	r6, r0
2fff2484:	d302      	bcc.n	2fff248c <scmi_clock_attributes+0x38>
2fff2486:	f06f 0101 	mvn.w	r1, #1
2fff248a:	e7f1      	b.n	2fff2470 <scmi_clock_attributes+0x1c>
2fff248c:	682d      	ldr	r5, [r5, #0]
2fff248e:	6820      	ldr	r0, [r4, #0]
2fff2490:	f000 fa6c 	bl	2fff296c <plat_scmi_clock_count>
2fff2494:	4601      	mov	r1, r0
2fff2496:	4628      	mov	r0, r5
2fff2498:	f7ff fe9a 	bl	2fff21d0 <confine_array_index>
2fff249c:	4601      	mov	r1, r0
2fff249e:	4605      	mov	r5, r0
2fff24a0:	6820      	ldr	r0, [r4, #0]
2fff24a2:	f000 fa6f 	bl	2fff2984 <plat_scmi_clock_get_name>
2fff24a6:	4606      	mov	r6, r0
2fff24a8:	b910      	cbnz	r0, 2fff24b0 <scmi_clock_attributes+0x5c>
2fff24aa:	f06f 0103 	mvn.w	r1, #3
2fff24ae:	e7df      	b.n	2fff2470 <scmi_clock_attributes+0x1c>
2fff24b0:	f007 ffdf 	bl	2fffa472 <strlen>
2fff24b4:	280f      	cmp	r0, #15
2fff24b6:	d903      	bls.n	2fff24c0 <scmi_clock_attributes+0x6c>
2fff24b8:	4809      	ldr	r0, [pc, #36]	; (2fff24e0 <scmi_clock_attributes+0x8c>)
2fff24ba:	21a0      	movs	r1, #160	; 0xa0
2fff24bc:	f007 fe2c 	bl	2fffa118 <__assert>
2fff24c0:	2210      	movs	r2, #16
2fff24c2:	4631      	mov	r1, r6
2fff24c4:	a802      	add	r0, sp, #8
2fff24c6:	f007 ffb8 	bl	2fffa43a <strlcpy>
2fff24ca:	6820      	ldr	r0, [r4, #0]
2fff24cc:	4629      	mov	r1, r5
2fff24ce:	f000 fac0 	bl	2fff2a52 <plat_scmi_clock_get_state>
2fff24d2:	9001      	str	r0, [sp, #4]
2fff24d4:	2218      	movs	r2, #24
2fff24d6:	4669      	mov	r1, sp
2fff24d8:	4620      	mov	r0, r4
2fff24da:	f000 f853 	bl	2fff2584 <scmi_write_response>
2fff24de:	e7ca      	b.n	2fff2476 <scmi_clock_attributes+0x22>
2fff24e0:	2fffb32c 	.word	0x2fffb32c

2fff24e4 <scmi_clock_config_set>:
2fff24e4:	6903      	ldr	r3, [r0, #16]
2fff24e6:	b570      	push	{r4, r5, r6, lr}
2fff24e8:	2b08      	cmp	r3, #8
2fff24ea:	4604      	mov	r4, r0
2fff24ec:	d005      	beq.n	2fff24fa <scmi_clock_config_set+0x16>
2fff24ee:	f06f 0109 	mvn.w	r1, #9
2fff24f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff24f6:	f000 b82d 	b.w	2fff2554 <scmi_status_response>
2fff24fa:	68c5      	ldr	r5, [r0, #12]
2fff24fc:	6800      	ldr	r0, [r0, #0]
2fff24fe:	682e      	ldr	r6, [r5, #0]
2fff2500:	f000 fa34 	bl	2fff296c <plat_scmi_clock_count>
2fff2504:	4286      	cmp	r6, r0
2fff2506:	d303      	bcc.n	2fff2510 <scmi_clock_config_set+0x2c>
2fff2508:	f06f 0101 	mvn.w	r1, #1
2fff250c:	4620      	mov	r0, r4
2fff250e:	e7f0      	b.n	2fff24f2 <scmi_clock_config_set+0xe>
2fff2510:	682e      	ldr	r6, [r5, #0]
2fff2512:	6820      	ldr	r0, [r4, #0]
2fff2514:	f000 fa2a 	bl	2fff296c <plat_scmi_clock_count>
2fff2518:	4601      	mov	r1, r0
2fff251a:	4630      	mov	r0, r6
2fff251c:	f7ff fe58 	bl	2fff21d0 <confine_array_index>
2fff2520:	686a      	ldr	r2, [r5, #4]
2fff2522:	4601      	mov	r1, r0
2fff2524:	6820      	ldr	r0, [r4, #0]
2fff2526:	f002 0201 	and.w	r2, r2, #1
2fff252a:	f000 faa0 	bl	2fff2a6e <plat_scmi_clock_set_state>
2fff252e:	4601      	mov	r1, r0
2fff2530:	e7ec      	b.n	2fff250c <scmi_clock_config_set+0x28>
	...

2fff2534 <scmi_msg_get_clock_handler>:
2fff2534:	6880      	ldr	r0, [r0, #8]
2fff2536:	b508      	push	{r3, lr}
2fff2538:	2807      	cmp	r0, #7
2fff253a:	d806      	bhi.n	2fff254a <scmi_msg_get_clock_handler+0x16>
2fff253c:	2108      	movs	r1, #8
2fff253e:	f7ff fe47 	bl	2fff21d0 <confine_array_index>
2fff2542:	4b03      	ldr	r3, [pc, #12]	; (2fff2550 <scmi_msg_get_clock_handler+0x1c>)
2fff2544:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2fff2548:	bd08      	pop	{r3, pc}
2fff254a:	2000      	movs	r0, #0
2fff254c:	e7fc      	b.n	2fff2548 <scmi_msg_get_clock_handler+0x14>
2fff254e:	bf00      	nop
2fff2550:	2fffb348 	.word	0x2fffb348

2fff2554 <scmi_status_response>:
2fff2554:	b513      	push	{r0, r1, r4, lr}
2fff2556:	4604      	mov	r4, r0
2fff2558:	6940      	ldr	r0, [r0, #20]
2fff255a:	9101      	str	r1, [sp, #4]
2fff255c:	b110      	cbz	r0, 2fff2564 <scmi_status_response+0x10>
2fff255e:	69a3      	ldr	r3, [r4, #24]
2fff2560:	2b03      	cmp	r3, #3
2fff2562:	d803      	bhi.n	2fff256c <scmi_status_response+0x18>
2fff2564:	4806      	ldr	r0, [pc, #24]	; (2fff2580 <scmi_status_response+0x2c>)
2fff2566:	2110      	movs	r1, #16
2fff2568:	f007 fdd6 	bl	2fffa118 <__assert>
2fff256c:	2204      	movs	r2, #4
2fff256e:	eb0d 0102 	add.w	r1, sp, r2
2fff2572:	f007 fdf9 	bl	2fffa168 <memcpy>
2fff2576:	2304      	movs	r3, #4
2fff2578:	61e3      	str	r3, [r4, #28]
2fff257a:	b002      	add	sp, #8
2fff257c:	bd10      	pop	{r4, pc}
2fff257e:	bf00      	nop
2fff2580:	2fffb368 	.word	0x2fffb368

2fff2584 <scmi_write_response>:
2fff2584:	b538      	push	{r3, r4, r5, lr}
2fff2586:	4604      	mov	r4, r0
2fff2588:	4615      	mov	r5, r2
2fff258a:	b131      	cbz	r1, 2fff259a <scmi_write_response+0x16>
2fff258c:	2a03      	cmp	r2, #3
2fff258e:	d904      	bls.n	2fff259a <scmi_write_response+0x16>
2fff2590:	6983      	ldr	r3, [r0, #24]
2fff2592:	4293      	cmp	r3, r2
2fff2594:	d301      	bcc.n	2fff259a <scmi_write_response+0x16>
2fff2596:	6940      	ldr	r0, [r0, #20]
2fff2598:	b918      	cbnz	r0, 2fff25a2 <scmi_write_response+0x1e>
2fff259a:	4804      	ldr	r0, [pc, #16]	; (2fff25ac <scmi_write_response+0x28>)
2fff259c:	211d      	movs	r1, #29
2fff259e:	f007 fdbb 	bl	2fffa118 <__assert>
2fff25a2:	f007 fde1 	bl	2fffa168 <memcpy>
2fff25a6:	61e5      	str	r5, [r4, #28]
2fff25a8:	bd38      	pop	{r3, r4, r5, pc}
2fff25aa:	bf00      	nop
2fff25ac:	2fffb368 	.word	0x2fffb368

2fff25b0 <scmi_process_message>:
2fff25b0:	6843      	ldr	r3, [r0, #4]
2fff25b2:	b510      	push	{r4, lr}
2fff25b4:	2b14      	cmp	r3, #20
2fff25b6:	4604      	mov	r4, r0
2fff25b8:	d00b      	beq.n	2fff25d2 <scmi_process_message+0x22>
2fff25ba:	2b16      	cmp	r3, #22
2fff25bc:	d00c      	beq.n	2fff25d8 <scmi_process_message+0x28>
2fff25be:	2b10      	cmp	r3, #16
2fff25c0:	d10d      	bne.n	2fff25de <scmi_process_message+0x2e>
2fff25c2:	f7ff fdf3 	bl	2fff21ac <scmi_msg_get_base_handler>
2fff25c6:	4603      	mov	r3, r0
2fff25c8:	b148      	cbz	r0, 2fff25de <scmi_process_message+0x2e>
2fff25ca:	4620      	mov	r0, r4
2fff25cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff25d0:	4718      	bx	r3
2fff25d2:	f7ff ffaf 	bl	2fff2534 <scmi_msg_get_clock_handler>
2fff25d6:	e7f6      	b.n	2fff25c6 <scmi_process_message+0x16>
2fff25d8:	f000 f8e4 	bl	2fff27a4 <scmi_msg_get_rd_handler>
2fff25dc:	e7f3      	b.n	2fff25c6 <scmi_process_message+0x16>
2fff25de:	e894 000e 	ldmia.w	r4, {r1, r2, r3}
2fff25e2:	4805      	ldr	r0, [pc, #20]	; (2fff25f8 <scmi_process_message+0x48>)
2fff25e4:	f000 fb9a 	bl	2fff2d1c <tf_log>
2fff25e8:	4620      	mov	r0, r4
2fff25ea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff25ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff25f2:	f7ff bfaf 	b.w	2fff2554 <scmi_status_response>
2fff25f6:	bf00      	nop
2fff25f8:	2fffb384 	.word	0x2fffb384

2fff25fc <report_message_attributes>:
2fff25fc:	b507      	push	{r0, r1, r2, lr}
2fff25fe:	2200      	movs	r2, #0
2fff2600:	e9cd 2200 	strd	r2, r2, [sp]
2fff2604:	6902      	ldr	r2, [r0, #16]
2fff2606:	4603      	mov	r3, r0
2fff2608:	68c1      	ldr	r1, [r0, #12]
2fff260a:	2a04      	cmp	r2, #4
2fff260c:	d004      	beq.n	2fff2618 <report_message_attributes+0x1c>
2fff260e:	f06f 0109 	mvn.w	r1, #9
2fff2612:	f7ff ff9f 	bl	2fff2554 <scmi_status_response>
2fff2616:	e00a      	b.n	2fff262e <report_message_attributes+0x32>
2fff2618:	680a      	ldr	r2, [r1, #0]
2fff261a:	2a04      	cmp	r2, #4
2fff261c:	d80a      	bhi.n	2fff2634 <report_message_attributes+0x38>
2fff261e:	4907      	ldr	r1, [pc, #28]	; (2fff263c <report_message_attributes+0x40>)
2fff2620:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
2fff2624:	b132      	cbz	r2, 2fff2634 <report_message_attributes+0x38>
2fff2626:	2208      	movs	r2, #8
2fff2628:	4669      	mov	r1, sp
2fff262a:	f7ff ffab 	bl	2fff2584 <scmi_write_response>
2fff262e:	b003      	add	sp, #12
2fff2630:	f85d fb04 	ldr.w	pc, [sp], #4
2fff2634:	f06f 0103 	mvn.w	r1, #3
2fff2638:	4618      	mov	r0, r3
2fff263a:	e7ea      	b.n	2fff2612 <report_message_attributes+0x16>
2fff263c:	2fffb3dc 	.word	0x2fffb3dc

2fff2640 <report_version>:
2fff2640:	f44f 3380 	mov.w	r3, #65536	; 0x10000
2fff2644:	b507      	push	{r0, r1, r2, lr}
2fff2646:	2200      	movs	r2, #0
2fff2648:	e9cd 2300 	strd	r2, r3, [sp]
2fff264c:	6903      	ldr	r3, [r0, #16]
2fff264e:	b133      	cbz	r3, 2fff265e <report_version+0x1e>
2fff2650:	f06f 0109 	mvn.w	r1, #9
2fff2654:	f7ff ff7e 	bl	2fff2554 <scmi_status_response>
2fff2658:	b003      	add	sp, #12
2fff265a:	f85d fb04 	ldr.w	pc, [sp], #4
2fff265e:	2208      	movs	r2, #8
2fff2660:	4669      	mov	r1, sp
2fff2662:	f7ff ff8f 	bl	2fff2584 <scmi_write_response>
2fff2666:	e7f7      	b.n	2fff2658 <report_version+0x18>

2fff2668 <report_attributes>:
2fff2668:	b513      	push	{r0, r1, r4, lr}
2fff266a:	4604      	mov	r4, r0
2fff266c:	6800      	ldr	r0, [r0, #0]
2fff266e:	2300      	movs	r3, #0
2fff2670:	9300      	str	r3, [sp, #0]
2fff2672:	f000 fa3d 	bl	2fff2af0 <plat_scmi_rd_count>
2fff2676:	6923      	ldr	r3, [r4, #16]
2fff2678:	9001      	str	r0, [sp, #4]
2fff267a:	b133      	cbz	r3, 2fff268a <report_attributes+0x22>
2fff267c:	f06f 0109 	mvn.w	r1, #9
2fff2680:	4620      	mov	r0, r4
2fff2682:	f7ff ff67 	bl	2fff2554 <scmi_status_response>
2fff2686:	b002      	add	sp, #8
2fff2688:	bd10      	pop	{r4, pc}
2fff268a:	2208      	movs	r2, #8
2fff268c:	4669      	mov	r1, sp
2fff268e:	4620      	mov	r0, r4
2fff2690:	f7ff ff78 	bl	2fff2584 <scmi_write_response>
2fff2694:	e7f7      	b.n	2fff2686 <report_attributes+0x1e>
	...

2fff2698 <reset_domain_attributes>:
2fff2698:	6903      	ldr	r3, [r0, #16]
2fff269a:	b570      	push	{r4, r5, r6, lr}
2fff269c:	2b04      	cmp	r3, #4
2fff269e:	b088      	sub	sp, #32
2fff26a0:	4604      	mov	r4, r0
2fff26a2:	d005      	beq.n	2fff26b0 <reset_domain_attributes+0x18>
2fff26a4:	f06f 0109 	mvn.w	r1, #9
2fff26a8:	f7ff ff54 	bl	2fff2554 <scmi_status_response>
2fff26ac:	b008      	add	sp, #32
2fff26ae:	bd70      	pop	{r4, r5, r6, pc}
2fff26b0:	68c5      	ldr	r5, [r0, #12]
2fff26b2:	6800      	ldr	r0, [r0, #0]
2fff26b4:	682e      	ldr	r6, [r5, #0]
2fff26b6:	f000 fa1b 	bl	2fff2af0 <plat_scmi_rd_count>
2fff26ba:	4286      	cmp	r6, r0
2fff26bc:	d303      	bcc.n	2fff26c6 <reset_domain_attributes+0x2e>
2fff26be:	f06f 0101 	mvn.w	r1, #1
2fff26c2:	4620      	mov	r0, r4
2fff26c4:	e7f0      	b.n	2fff26a8 <reset_domain_attributes+0x10>
2fff26c6:	682d      	ldr	r5, [r5, #0]
2fff26c8:	6820      	ldr	r0, [r4, #0]
2fff26ca:	f000 fa11 	bl	2fff2af0 <plat_scmi_rd_count>
2fff26ce:	4629      	mov	r1, r5
2fff26d0:	4281      	cmp	r1, r0
2fff26d2:	bf28      	it	cs
2fff26d4:	2100      	movcs	r1, #0
2fff26d6:	f3af 8014 	csdb
2fff26da:	6820      	ldr	r0, [r4, #0]
2fff26dc:	f000 f9ea 	bl	2fff2ab4 <plat_scmi_rd_get_name>
2fff26e0:	4605      	mov	r5, r0
2fff26e2:	b910      	cbnz	r0, 2fff26ea <reset_domain_attributes+0x52>
2fff26e4:	f06f 0103 	mvn.w	r1, #3
2fff26e8:	e7eb      	b.n	2fff26c2 <reset_domain_attributes+0x2a>
2fff26ea:	211c      	movs	r1, #28
2fff26ec:	a801      	add	r0, sp, #4
2fff26ee:	f006 ee30 	blx	2fff9350 <zero_normalmem>
2fff26f2:	2300      	movs	r3, #0
2fff26f4:	4628      	mov	r0, r5
2fff26f6:	9301      	str	r3, [sp, #4]
2fff26f8:	9302      	str	r3, [sp, #8]
2fff26fa:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
2fff26fe:	9303      	str	r3, [sp, #12]
2fff2700:	f007 feb7 	bl	2fffa472 <strlen>
2fff2704:	280f      	cmp	r0, #15
2fff2706:	d903      	bls.n	2fff2710 <reset_domain_attributes+0x78>
2fff2708:	4807      	ldr	r0, [pc, #28]	; (2fff2728 <reset_domain_attributes+0x90>)
2fff270a:	2182      	movs	r1, #130	; 0x82
2fff270c:	f007 fd04 	bl	2fffa118 <__assert>
2fff2710:	2210      	movs	r2, #16
2fff2712:	4629      	mov	r1, r5
2fff2714:	eb0d 0002 	add.w	r0, sp, r2
2fff2718:	f007 fe8f 	bl	2fffa43a <strlcpy>
2fff271c:	221c      	movs	r2, #28
2fff271e:	a901      	add	r1, sp, #4
2fff2720:	4620      	mov	r0, r4
2fff2722:	f7ff ff2f 	bl	2fff2584 <scmi_write_response>
2fff2726:	e7c1      	b.n	2fff26ac <reset_domain_attributes+0x14>
2fff2728:	2fffb3b8 	.word	0x2fffb3b8

2fff272c <reset_request>:
2fff272c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff272e:	2300      	movs	r3, #0
2fff2730:	68c6      	ldr	r6, [r0, #12]
2fff2732:	4604      	mov	r4, r0
2fff2734:	6800      	ldr	r0, [r0, #0]
2fff2736:	6835      	ldr	r5, [r6, #0]
2fff2738:	9301      	str	r3, [sp, #4]
2fff273a:	f000 f9d9 	bl	2fff2af0 <plat_scmi_rd_count>
2fff273e:	4285      	cmp	r5, r0
2fff2740:	bf28      	it	cs
2fff2742:	2500      	movcs	r5, #0
2fff2744:	f3af 8014 	csdb
2fff2748:	6923      	ldr	r3, [r4, #16]
2fff274a:	2b0c      	cmp	r3, #12
2fff274c:	d006      	beq.n	2fff275c <reset_request+0x30>
2fff274e:	f06f 0109 	mvn.w	r1, #9
2fff2752:	4620      	mov	r0, r4
2fff2754:	f7ff fefe 	bl	2fff2554 <scmi_status_response>
2fff2758:	b003      	add	sp, #12
2fff275a:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff275c:	6837      	ldr	r7, [r6, #0]
2fff275e:	6820      	ldr	r0, [r4, #0]
2fff2760:	f000 f9c6 	bl	2fff2af0 <plat_scmi_rd_count>
2fff2764:	4287      	cmp	r7, r0
2fff2766:	d302      	bcc.n	2fff276e <reset_request+0x42>
2fff2768:	f06f 0103 	mvn.w	r1, #3
2fff276c:	e7f1      	b.n	2fff2752 <reset_request+0x26>
2fff276e:	6872      	ldr	r2, [r6, #4]
2fff2770:	6820      	ldr	r0, [r4, #0]
2fff2772:	07d3      	lsls	r3, r2, #31
2fff2774:	d50e      	bpl.n	2fff2794 <reset_request+0x68>
2fff2776:	68b2      	ldr	r2, [r6, #8]
2fff2778:	4629      	mov	r1, r5
2fff277a:	f000 f9c5 	bl	2fff2b08 <plat_scmi_rd_autonomous>
2fff277e:	9001      	str	r0, [sp, #4]
2fff2780:	9901      	ldr	r1, [sp, #4]
2fff2782:	2900      	cmp	r1, #0
2fff2784:	d1e5      	bne.n	2fff2752 <reset_request+0x26>
2fff2786:	2204      	movs	r2, #4
2fff2788:	4620      	mov	r0, r4
2fff278a:	eb0d 0102 	add.w	r1, sp, r2
2fff278e:	f7ff fef9 	bl	2fff2584 <scmi_write_response>
2fff2792:	e7e1      	b.n	2fff2758 <reset_request+0x2c>
2fff2794:	f012 0202 	ands.w	r2, r2, #2
2fff2798:	4629      	mov	r1, r5
2fff279a:	bf18      	it	ne
2fff279c:	2201      	movne	r2, #1
2fff279e:	f000 f9d6 	bl	2fff2b4e <plat_scmi_rd_set_state>
2fff27a2:	e7ec      	b.n	2fff277e <reset_request+0x52>

2fff27a4 <scmi_msg_get_rd_handler>:
2fff27a4:	6883      	ldr	r3, [r0, #8]
2fff27a6:	2b04      	cmp	r3, #4
2fff27a8:	d809      	bhi.n	2fff27be <scmi_msg_get_rd_handler+0x1a>
2fff27aa:	2205      	movs	r2, #5
2fff27ac:	4293      	cmp	r3, r2
2fff27ae:	bf28      	it	cs
2fff27b0:	2300      	movcs	r3, #0
2fff27b2:	f3af 8014 	csdb
2fff27b6:	4a03      	ldr	r2, [pc, #12]	; (2fff27c4 <scmi_msg_get_rd_handler+0x20>)
2fff27b8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
2fff27bc:	4770      	bx	lr
2fff27be:	2000      	movs	r0, #0
2fff27c0:	4770      	bx	lr
2fff27c2:	bf00      	nop
2fff27c4:	2fffb3dc 	.word	0x2fffb3dc

2fff27c8 <scmi_proccess_smt>:
2fff27c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff27cc:	b088      	sub	sp, #32
2fff27ce:	4680      	mov	r8, r0
2fff27d0:	4689      	mov	r9, r1
2fff27d2:	f000 f8ad 	bl	2fff2930 <plat_scmi_get_channel>
2fff27d6:	4605      	mov	r5, r0
2fff27d8:	2800      	cmp	r0, #0
2fff27da:	d041      	beq.n	2fff2860 <scmi_proccess_smt+0x98>
2fff27dc:	6804      	ldr	r4, [r0, #0]
2fff27de:	b91c      	cbnz	r4, 2fff27e8 <scmi_proccess_smt+0x20>
2fff27e0:	217b      	movs	r1, #123	; 0x7b
2fff27e2:	4823      	ldr	r0, [pc, #140]	; (2fff2870 <scmi_proccess_smt+0xa8>)
2fff27e4:	f007 fc98 	bl	2fffa118 <__assert>
2fff27e8:	4822      	ldr	r0, [pc, #136]	; (2fff2874 <scmi_proccess_smt+0xac>)
2fff27ea:	f8d4 a004 	ldr.w	sl, [r4, #4]
2fff27ee:	f006 ebd4 	blx	2fff8f98 <spin_lock>
2fff27f2:	7a2f      	ldrb	r7, [r5, #8]
2fff27f4:	b90f      	cbnz	r7, 2fff27fa <scmi_proccess_smt+0x32>
2fff27f6:	2301      	movs	r3, #1
2fff27f8:	722b      	strb	r3, [r5, #8]
2fff27fa:	481e      	ldr	r0, [pc, #120]	; (2fff2874 <scmi_proccess_smt+0xac>)
2fff27fc:	f006 ebde 	blx	2fff8fbc <spin_unlock>
2fff2800:	bb8f      	cbnz	r7, 2fff2866 <scmi_proccess_smt+0x9e>
2fff2802:	6966      	ldr	r6, [r4, #20]
2fff2804:	3e04      	subs	r6, #4
2fff2806:	2e5c      	cmp	r6, #92	; 0x5c
2fff2808:	d82d      	bhi.n	2fff2866 <scmi_proccess_smt+0x9e>
2fff280a:	f01a 0f03 	tst.w	sl, #3
2fff280e:	d12a      	bne.n	2fff2866 <scmi_proccess_smt+0x9e>
2fff2810:	2120      	movs	r1, #32
2fff2812:	4668      	mov	r0, sp
2fff2814:	f006 ed9c 	blx	2fff9350 <zero_normalmem>
2fff2818:	686b      	ldr	r3, [r5, #4]
2fff281a:	f104 011c 	add.w	r1, r4, #28
2fff281e:	f8cd 900c 	str.w	r9, [sp, #12]
2fff2822:	9604      	str	r6, [sp, #16]
2fff2824:	3b20      	subs	r3, #32
2fff2826:	9105      	str	r1, [sp, #20]
2fff2828:	2b03      	cmp	r3, #3
2fff282a:	9306      	str	r3, [sp, #24]
2fff282c:	d801      	bhi.n	2fff2832 <scmi_proccess_smt+0x6a>
2fff282e:	2199      	movs	r1, #153	; 0x99
2fff2830:	e7d7      	b.n	2fff27e2 <scmi_proccess_smt+0x1a>
2fff2832:	4632      	mov	r2, r6
2fff2834:	4648      	mov	r0, r9
2fff2836:	f007 fc97 	bl	2fffa168 <memcpy>
2fff283a:	69a3      	ldr	r3, [r4, #24]
2fff283c:	4668      	mov	r0, sp
2fff283e:	f8cd 8000 	str.w	r8, [sp]
2fff2842:	f3c3 2287 	ubfx	r2, r3, #10, #8
2fff2846:	b2db      	uxtb	r3, r3
2fff2848:	9302      	str	r3, [sp, #8]
2fff284a:	9201      	str	r2, [sp, #4]
2fff284c:	f7ff feb0 	bl	2fff25b0 <scmi_process_message>
2fff2850:	9b07      	ldr	r3, [sp, #28]
2fff2852:	3304      	adds	r3, #4
2fff2854:	6163      	str	r3, [r4, #20]
2fff2856:	6863      	ldr	r3, [r4, #4]
2fff2858:	722f      	strb	r7, [r5, #8]
2fff285a:	f043 0301 	orr.w	r3, r3, #1
2fff285e:	6063      	str	r3, [r4, #4]
2fff2860:	b008      	add	sp, #32
2fff2862:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff2866:	6863      	ldr	r3, [r4, #4]
2fff2868:	f043 0303 	orr.w	r3, r3, #3
2fff286c:	e7f7      	b.n	2fff285e <scmi_proccess_smt+0x96>
2fff286e:	bf00      	nop
2fff2870:	2fffb3f0 	.word	0x2fffb3f0
2fff2874:	2fffe86c 	.word	0x2fffe86c

2fff2878 <scmi_smt_fastcall_smc_entry>:
2fff2878:	b510      	push	{r4, lr}
2fff287a:	4604      	mov	r4, r0
2fff287c:	f006 ef96 	blx	2fff97ac <plat_my_core_pos>
2fff2880:	4b04      	ldr	r3, [pc, #16]	; (2fff2894 <scmi_smt_fastcall_smc_entry+0x1c>)
2fff2882:	215c      	movs	r1, #92	; 0x5c
2fff2884:	fb01 3100 	mla	r1, r1, r0, r3
2fff2888:	4620      	mov	r0, r4
2fff288a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff288e:	f7ff bf9b 	b.w	2fff27c8 <scmi_proccess_smt>
2fff2892:	bf00      	nop
2fff2894:	2fffe7b4 	.word	0x2fffe7b4

2fff2898 <scmi_smt_init_agent_channel>:
2fff2898:	b510      	push	{r4, lr}
2fff289a:	b148      	cbz	r0, 2fff28b0 <scmi_smt_init_agent_channel+0x18>
2fff289c:	6804      	ldr	r4, [r0, #0]
2fff289e:	b13c      	cbz	r4, 2fff28b0 <scmi_smt_init_agent_channel+0x18>
2fff28a0:	2220      	movs	r2, #32
2fff28a2:	2100      	movs	r1, #0
2fff28a4:	4620      	mov	r0, r4
2fff28a6:	f007 fc80 	bl	2fffa1aa <memset>
2fff28aa:	2301      	movs	r3, #1
2fff28ac:	6063      	str	r3, [r4, #4]
2fff28ae:	bd10      	pop	{r4, pc}
2fff28b0:	f000 fad8 	bl	2fff2e64 <console_flush>
2fff28b4:	f006 ebf6 	blx	2fff90a4 <do_panic>

2fff28b8 <find_resource.part.0>:
2fff28b8:	4802      	ldr	r0, [pc, #8]	; (2fff28c4 <find_resource.part.0+0xc>)
2fff28ba:	219b      	movs	r1, #155	; 0x9b
2fff28bc:	b508      	push	{r3, lr}
2fff28be:	f007 fc2b 	bl	2fffa118 <__assert>
2fff28c2:	bf00      	nop
2fff28c4:	2fffb40a 	.word	0x2fffb40a

2fff28c8 <find_clock>:
2fff28c8:	2801      	cmp	r0, #1
2fff28ca:	b510      	push	{r4, lr}
2fff28cc:	d809      	bhi.n	2fff28e2 <find_clock+0x1a>
2fff28ce:	4a0a      	ldr	r2, [pc, #40]	; (2fff28f8 <find_clock+0x30>)
2fff28d0:	2300      	movs	r3, #0
2fff28d2:	0104      	lsls	r4, r0, #4
2fff28d4:	eb02 1000 	add.w	r0, r2, r0, lsl #4
2fff28d8:	6840      	ldr	r0, [r0, #4]
2fff28da:	4283      	cmp	r3, r0
2fff28dc:	d103      	bne.n	2fff28e6 <find_clock+0x1e>
2fff28de:	2000      	movs	r0, #0
2fff28e0:	e007      	b.n	2fff28f2 <find_clock+0x2a>
2fff28e2:	f7ff ffe9 	bl	2fff28b8 <find_resource.part.0>
2fff28e6:	4299      	cmp	r1, r3
2fff28e8:	d104      	bne.n	2fff28f4 <find_clock+0x2c>
2fff28ea:	5910      	ldr	r0, [r2, r4]
2fff28ec:	230c      	movs	r3, #12
2fff28ee:	fb03 0001 	mla	r0, r3, r1, r0
2fff28f2:	bd10      	pop	{r4, pc}
2fff28f4:	3301      	adds	r3, #1
2fff28f6:	e7f0      	b.n	2fff28da <find_clock+0x12>
2fff28f8:	2fffb52c 	.word	0x2fffb52c

2fff28fc <find_rd>:
2fff28fc:	2801      	cmp	r0, #1
2fff28fe:	b510      	push	{r4, lr}
2fff2900:	d809      	bhi.n	2fff2916 <find_rd+0x1a>
2fff2902:	4b0a      	ldr	r3, [pc, #40]	; (2fff292c <find_rd+0x30>)
2fff2904:	2200      	movs	r2, #0
2fff2906:	0104      	lsls	r4, r0, #4
2fff2908:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff290c:	68c0      	ldr	r0, [r0, #12]
2fff290e:	4282      	cmp	r2, r0
2fff2910:	d103      	bne.n	2fff291a <find_rd+0x1e>
2fff2912:	2000      	movs	r0, #0
2fff2914:	e007      	b.n	2fff2926 <find_rd+0x2a>
2fff2916:	f7ff ffcf 	bl	2fff28b8 <find_resource.part.0>
2fff291a:	4291      	cmp	r1, r2
2fff291c:	d104      	bne.n	2fff2928 <find_rd+0x2c>
2fff291e:	4423      	add	r3, r4
2fff2920:	6898      	ldr	r0, [r3, #8]
2fff2922:	eb00 00c1 	add.w	r0, r0, r1, lsl #3
2fff2926:	bd10      	pop	{r4, pc}
2fff2928:	3201      	adds	r2, #1
2fff292a:	e7f0      	b.n	2fff290e <find_rd+0x12>
2fff292c:	2fffb52c 	.word	0x2fffb52c

2fff2930 <plat_scmi_get_channel>:
2fff2930:	2801      	cmp	r0, #1
2fff2932:	b508      	push	{r3, lr}
2fff2934:	d903      	bls.n	2fff293e <plat_scmi_get_channel+0xe>
2fff2936:	4804      	ldr	r0, [pc, #16]	; (2fff2948 <plat_scmi_get_channel+0x18>)
2fff2938:	2147      	movs	r1, #71	; 0x47
2fff293a:	f007 fbed 	bl	2fffa118 <__assert>
2fff293e:	4b03      	ldr	r3, [pc, #12]	; (2fff294c <plat_scmi_get_channel+0x1c>)
2fff2940:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff2944:	bd08      	pop	{r3, pc}
2fff2946:	bf00      	nop
2fff2948:	2fffb40a 	.word	0x2fffb40a
2fff294c:	2fffd20c 	.word	0x2fffd20c

2fff2950 <plat_scmi_vendor_name>:
2fff2950:	4800      	ldr	r0, [pc, #0]	; (2fff2954 <plat_scmi_vendor_name+0x4>)
2fff2952:	4770      	bx	lr
2fff2954:	2fffb550 	.word	0x2fffb550

2fff2958 <plat_scmi_sub_vendor_name>:
2fff2958:	4800      	ldr	r0, [pc, #0]	; (2fff295c <plat_scmi_sub_vendor_name+0x4>)
2fff295a:	4770      	bx	lr
2fff295c:	2fffb54f 	.word	0x2fffb54f

2fff2960 <plat_scmi_protocol_count>:
2fff2960:	2002      	movs	r0, #2
2fff2962:	4770      	bx	lr

2fff2964 <plat_scmi_protocol_list>:
2fff2964:	4800      	ldr	r0, [pc, #0]	; (2fff2968 <plat_scmi_protocol_list+0x4>)
2fff2966:	4770      	bx	lr
2fff2968:	2fffb54c 	.word	0x2fffb54c

2fff296c <plat_scmi_clock_count>:
2fff296c:	2801      	cmp	r0, #1
2fff296e:	b508      	push	{r3, lr}
2fff2970:	d901      	bls.n	2fff2976 <plat_scmi_clock_count+0xa>
2fff2972:	f7ff ffa1 	bl	2fff28b8 <find_resource.part.0>
2fff2976:	4b02      	ldr	r3, [pc, #8]	; (2fff2980 <plat_scmi_clock_count+0x14>)
2fff2978:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff297c:	6840      	ldr	r0, [r0, #4]
2fff297e:	bd08      	pop	{r3, pc}
2fff2980:	2fffb52c 	.word	0x2fffb52c

2fff2984 <plat_scmi_clock_get_name>:
2fff2984:	b510      	push	{r4, lr}
2fff2986:	f7ff ff9f 	bl	2fff28c8 <find_clock>
2fff298a:	4604      	mov	r4, r0
2fff298c:	b908      	cbnz	r0, 2fff2992 <plat_scmi_clock_get_name+0xe>
2fff298e:	2000      	movs	r0, #0
2fff2990:	bd10      	pop	{r4, pc}
2fff2992:	6800      	ldr	r0, [r0, #0]
2fff2994:	f7fe f8be 	bl	2fff0b14 <stm32mp_nsec_can_access_clock>
2fff2998:	2800      	cmp	r0, #0
2fff299a:	d0f8      	beq.n	2fff298e <plat_scmi_clock_get_name+0xa>
2fff299c:	6860      	ldr	r0, [r4, #4]
2fff299e:	e7f7      	b.n	2fff2990 <plat_scmi_clock_get_name+0xc>

2fff29a0 <plat_scmi_clock_rates_array>:
2fff29a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff29a4:	4770      	bx	lr

2fff29a6 <plat_scmi_clock_rates_by_step>:
2fff29a6:	b570      	push	{r4, r5, r6, lr}
2fff29a8:	460e      	mov	r6, r1
2fff29aa:	4614      	mov	r4, r2
2fff29ac:	f7ff ff8c 	bl	2fff28c8 <find_clock>
2fff29b0:	4605      	mov	r5, r0
2fff29b2:	b1a0      	cbz	r0, 2fff29de <plat_scmi_clock_rates_by_step+0x38>
2fff29b4:	6800      	ldr	r0, [r0, #0]
2fff29b6:	f7fe f8ad 	bl	2fff0b14 <stm32mp_nsec_can_access_clock>
2fff29ba:	b198      	cbz	r0, 2fff29e4 <plat_scmi_clock_rates_by_step+0x3e>
2fff29bc:	2e07      	cmp	r6, #7
2fff29be:	d106      	bne.n	2fff29ce <plat_scmi_clock_rates_by_step+0x28>
2fff29c0:	2000      	movs	r0, #0
2fff29c2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
2fff29c6:	2301      	movs	r3, #1
2fff29c8:	e884 000d 	stmia.w	r4, {r0, r2, r3}
2fff29cc:	bd70      	pop	{r4, r5, r6, pc}
2fff29ce:	6828      	ldr	r0, [r5, #0]
2fff29d0:	f002 ff90 	bl	2fff58f4 <stm32mp_clk_get_rate>
2fff29d4:	6020      	str	r0, [r4, #0]
2fff29d6:	6060      	str	r0, [r4, #4]
2fff29d8:	2000      	movs	r0, #0
2fff29da:	60a0      	str	r0, [r4, #8]
2fff29dc:	e7f6      	b.n	2fff29cc <plat_scmi_clock_rates_by_step+0x26>
2fff29de:	f06f 0003 	mvn.w	r0, #3
2fff29e2:	e7f3      	b.n	2fff29cc <plat_scmi_clock_rates_by_step+0x26>
2fff29e4:	f06f 0002 	mvn.w	r0, #2
2fff29e8:	e7f0      	b.n	2fff29cc <plat_scmi_clock_rates_by_step+0x26>

2fff29ea <plat_scmi_clock_set_rate>:
2fff29ea:	b570      	push	{r4, r5, r6, lr}
2fff29ec:	460e      	mov	r6, r1
2fff29ee:	4615      	mov	r5, r2
2fff29f0:	f7ff ff6a 	bl	2fff28c8 <find_clock>
2fff29f4:	4604      	mov	r4, r0
2fff29f6:	b1b0      	cbz	r0, 2fff2a26 <plat_scmi_clock_set_rate+0x3c>
2fff29f8:	6800      	ldr	r0, [r0, #0]
2fff29fa:	f7fe f88b 	bl	2fff0b14 <stm32mp_nsec_can_access_clock>
2fff29fe:	b1a8      	cbz	r0, 2fff2a2c <plat_scmi_clock_set_rate+0x42>
2fff2a00:	2e07      	cmp	r6, #7
2fff2a02:	d108      	bne.n	2fff2a16 <plat_scmi_clock_set_rate+0x2c>
2fff2a04:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
2fff2a08:	fbb5 f0f0 	udiv	r0, r5, r0
2fff2a0c:	f003 f8f8 	bl	2fff5c00 <stm32mp1_set_opp_khz>
2fff2a10:	b930      	cbnz	r0, 2fff2a20 <plat_scmi_clock_set_rate+0x36>
2fff2a12:	2000      	movs	r0, #0
2fff2a14:	bd70      	pop	{r4, r5, r6, pc}
2fff2a16:	6820      	ldr	r0, [r4, #0]
2fff2a18:	f002 ff6c 	bl	2fff58f4 <stm32mp_clk_get_rate>
2fff2a1c:	42a8      	cmp	r0, r5
2fff2a1e:	d0f8      	beq.n	2fff2a12 <plat_scmi_clock_set_rate+0x28>
2fff2a20:	f06f 0001 	mvn.w	r0, #1
2fff2a24:	e7f6      	b.n	2fff2a14 <plat_scmi_clock_set_rate+0x2a>
2fff2a26:	f06f 0003 	mvn.w	r0, #3
2fff2a2a:	e7f3      	b.n	2fff2a14 <plat_scmi_clock_set_rate+0x2a>
2fff2a2c:	f06f 0002 	mvn.w	r0, #2
2fff2a30:	e7f0      	b.n	2fff2a14 <plat_scmi_clock_set_rate+0x2a>

2fff2a32 <plat_scmi_clock_get_rate>:
2fff2a32:	b510      	push	{r4, lr}
2fff2a34:	f7ff ff48 	bl	2fff28c8 <find_clock>
2fff2a38:	4604      	mov	r4, r0
2fff2a3a:	b140      	cbz	r0, 2fff2a4e <plat_scmi_clock_get_rate+0x1c>
2fff2a3c:	6800      	ldr	r0, [r0, #0]
2fff2a3e:	f7fe f869 	bl	2fff0b14 <stm32mp_nsec_can_access_clock>
2fff2a42:	b120      	cbz	r0, 2fff2a4e <plat_scmi_clock_get_rate+0x1c>
2fff2a44:	6820      	ldr	r0, [r4, #0]
2fff2a46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff2a4a:	f002 bf53 	b.w	2fff58f4 <stm32mp_clk_get_rate>
2fff2a4e:	2000      	movs	r0, #0
2fff2a50:	bd10      	pop	{r4, pc}

2fff2a52 <plat_scmi_clock_get_state>:
2fff2a52:	b510      	push	{r4, lr}
2fff2a54:	f7ff ff38 	bl	2fff28c8 <find_clock>
2fff2a58:	4604      	mov	r4, r0
2fff2a5a:	b908      	cbnz	r0, 2fff2a60 <plat_scmi_clock_get_state+0xe>
2fff2a5c:	2000      	movs	r0, #0
2fff2a5e:	bd10      	pop	{r4, pc}
2fff2a60:	6800      	ldr	r0, [r0, #0]
2fff2a62:	f7fe f857 	bl	2fff0b14 <stm32mp_nsec_can_access_clock>
2fff2a66:	2800      	cmp	r0, #0
2fff2a68:	d0f8      	beq.n	2fff2a5c <plat_scmi_clock_get_state+0xa>
2fff2a6a:	7a20      	ldrb	r0, [r4, #8]
2fff2a6c:	e7f7      	b.n	2fff2a5e <plat_scmi_clock_get_state+0xc>

2fff2a6e <plat_scmi_clock_set_state>:
2fff2a6e:	b570      	push	{r4, r5, r6, lr}
2fff2a70:	4616      	mov	r6, r2
2fff2a72:	f7ff ff29 	bl	2fff28c8 <find_clock>
2fff2a76:	4605      	mov	r5, r0
2fff2a78:	b1a8      	cbz	r0, 2fff2aa6 <plat_scmi_clock_set_state+0x38>
2fff2a7a:	6800      	ldr	r0, [r0, #0]
2fff2a7c:	f7fe f84a 	bl	2fff0b14 <stm32mp_nsec_can_access_clock>
2fff2a80:	b1a0      	cbz	r0, 2fff2aac <plat_scmi_clock_set_state+0x3e>
2fff2a82:	7a2c      	ldrb	r4, [r5, #8]
2fff2a84:	b13e      	cbz	r6, 2fff2a96 <plat_scmi_clock_set_state+0x28>
2fff2a86:	b964      	cbnz	r4, 2fff2aa2 <plat_scmi_clock_set_state+0x34>
2fff2a88:	6828      	ldr	r0, [r5, #0]
2fff2a8a:	f002 ff07 	bl	2fff589c <stm32mp_clk_enable>
2fff2a8e:	2301      	movs	r3, #1
2fff2a90:	722b      	strb	r3, [r5, #8]
2fff2a92:	4620      	mov	r0, r4
2fff2a94:	e009      	b.n	2fff2aaa <plat_scmi_clock_set_state+0x3c>
2fff2a96:	2c00      	cmp	r4, #0
2fff2a98:	d0fb      	beq.n	2fff2a92 <plat_scmi_clock_set_state+0x24>
2fff2a9a:	6828      	ldr	r0, [r5, #0]
2fff2a9c:	f002 ff01 	bl	2fff58a2 <stm32mp_clk_disable>
2fff2aa0:	722e      	strb	r6, [r5, #8]
2fff2aa2:	2000      	movs	r0, #0
2fff2aa4:	e001      	b.n	2fff2aaa <plat_scmi_clock_set_state+0x3c>
2fff2aa6:	f06f 0003 	mvn.w	r0, #3
2fff2aaa:	bd70      	pop	{r4, r5, r6, pc}
2fff2aac:	f06f 0002 	mvn.w	r0, #2
2fff2ab0:	e7fb      	b.n	2fff2aaa <plat_scmi_clock_set_state+0x3c>
	...

2fff2ab4 <plat_scmi_rd_get_name>:
2fff2ab4:	2801      	cmp	r0, #1
2fff2ab6:	b510      	push	{r4, lr}
2fff2ab8:	d809      	bhi.n	2fff2ace <plat_scmi_rd_get_name+0x1a>
2fff2aba:	4b0c      	ldr	r3, [pc, #48]	; (2fff2aec <plat_scmi_rd_get_name+0x38>)
2fff2abc:	2200      	movs	r2, #0
2fff2abe:	0104      	lsls	r4, r0, #4
2fff2ac0:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff2ac4:	68c0      	ldr	r0, [r0, #12]
2fff2ac6:	4282      	cmp	r2, r0
2fff2ac8:	d103      	bne.n	2fff2ad2 <plat_scmi_rd_get_name+0x1e>
2fff2aca:	2000      	movs	r0, #0
2fff2acc:	e008      	b.n	2fff2ae0 <plat_scmi_rd_get_name+0x2c>
2fff2ace:	f7ff fef3 	bl	2fff28b8 <find_resource.part.0>
2fff2ad2:	4291      	cmp	r1, r2
2fff2ad4:	d105      	bne.n	2fff2ae2 <plat_scmi_rd_get_name+0x2e>
2fff2ad6:	4423      	add	r3, r4
2fff2ad8:	6898      	ldr	r0, [r3, #8]
2fff2ada:	eb10 00c1 	adds.w	r0, r0, r1, lsl #3
2fff2ade:	d102      	bne.n	2fff2ae6 <plat_scmi_rd_get_name+0x32>
2fff2ae0:	bd10      	pop	{r4, pc}
2fff2ae2:	3201      	adds	r2, #1
2fff2ae4:	e7ef      	b.n	2fff2ac6 <plat_scmi_rd_get_name+0x12>
2fff2ae6:	6840      	ldr	r0, [r0, #4]
2fff2ae8:	e7fa      	b.n	2fff2ae0 <plat_scmi_rd_get_name+0x2c>
2fff2aea:	bf00      	nop
2fff2aec:	2fffb52c 	.word	0x2fffb52c

2fff2af0 <plat_scmi_rd_count>:
2fff2af0:	2801      	cmp	r0, #1
2fff2af2:	b508      	push	{r3, lr}
2fff2af4:	d901      	bls.n	2fff2afa <plat_scmi_rd_count+0xa>
2fff2af6:	f7ff fedf 	bl	2fff28b8 <find_resource.part.0>
2fff2afa:	4b02      	ldr	r3, [pc, #8]	; (2fff2b04 <plat_scmi_rd_count+0x14>)
2fff2afc:	eb03 1000 	add.w	r0, r3, r0, lsl #4
2fff2b00:	68c0      	ldr	r0, [r0, #12]
2fff2b02:	bd08      	pop	{r3, pc}
2fff2b04:	2fffb52c 	.word	0x2fffb52c

2fff2b08 <plat_scmi_rd_autonomous>:
2fff2b08:	b538      	push	{r3, r4, r5, lr}
2fff2b0a:	4615      	mov	r5, r2
2fff2b0c:	f7ff fef6 	bl	2fff28fc <find_rd>
2fff2b10:	4604      	mov	r4, r0
2fff2b12:	b198      	cbz	r0, 2fff2b3c <plat_scmi_rd_autonomous+0x34>
2fff2b14:	6800      	ldr	r0, [r0, #0]
2fff2b16:	f7fe f865 	bl	2fff0be4 <stm32mp_nsec_can_access_reset>
2fff2b1a:	b190      	cbz	r0, 2fff2b42 <plat_scmi_rd_autonomous+0x3a>
2fff2b1c:	b9a5      	cbnz	r5, 2fff2b48 <plat_scmi_rd_autonomous+0x40>
2fff2b1e:	6820      	ldr	r0, [r4, #0]
2fff2b20:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff2b24:	f005 fc2c 	bl	2fff8380 <stm32mp_reset_assert_to>
2fff2b28:	b928      	cbnz	r0, 2fff2b36 <plat_scmi_rd_autonomous+0x2e>
2fff2b2a:	6820      	ldr	r0, [r4, #0]
2fff2b2c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff2b30:	f005 fc5e 	bl	2fff83f0 <stm32mp_reset_deassert_to>
2fff2b34:	b108      	cbz	r0, 2fff2b3a <plat_scmi_rd_autonomous+0x32>
2fff2b36:	f06f 0008 	mvn.w	r0, #8
2fff2b3a:	bd38      	pop	{r3, r4, r5, pc}
2fff2b3c:	f06f 0003 	mvn.w	r0, #3
2fff2b40:	e7fb      	b.n	2fff2b3a <plat_scmi_rd_autonomous+0x32>
2fff2b42:	f06f 0002 	mvn.w	r0, #2
2fff2b46:	e7f8      	b.n	2fff2b3a <plat_scmi_rd_autonomous+0x32>
2fff2b48:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff2b4c:	e7f5      	b.n	2fff2b3a <plat_scmi_rd_autonomous+0x32>

2fff2b4e <plat_scmi_rd_set_state>:
2fff2b4e:	b538      	push	{r3, r4, r5, lr}
2fff2b50:	4614      	mov	r4, r2
2fff2b52:	f7ff fed3 	bl	2fff28fc <find_rd>
2fff2b56:	4605      	mov	r5, r0
2fff2b58:	b170      	cbz	r0, 2fff2b78 <plat_scmi_rd_set_state+0x2a>
2fff2b5a:	6800      	ldr	r0, [r0, #0]
2fff2b5c:	f7fe f842 	bl	2fff0be4 <stm32mp_nsec_can_access_reset>
2fff2b60:	b168      	cbz	r0, 2fff2b7e <plat_scmi_rd_set_state+0x30>
2fff2b62:	6828      	ldr	r0, [r5, #0]
2fff2b64:	b124      	cbz	r4, 2fff2b70 <plat_scmi_rd_set_state+0x22>
2fff2b66:	2100      	movs	r1, #0
2fff2b68:	f005 fc0a 	bl	2fff8380 <stm32mp_reset_assert_to>
2fff2b6c:	2000      	movs	r0, #0
2fff2b6e:	bd38      	pop	{r3, r4, r5, pc}
2fff2b70:	4621      	mov	r1, r4
2fff2b72:	f005 fc3d 	bl	2fff83f0 <stm32mp_reset_deassert_to>
2fff2b76:	e7f9      	b.n	2fff2b6c <plat_scmi_rd_set_state+0x1e>
2fff2b78:	f06f 0003 	mvn.w	r0, #3
2fff2b7c:	e7f7      	b.n	2fff2b6e <plat_scmi_rd_set_state+0x20>
2fff2b7e:	f06f 0002 	mvn.w	r0, #2
2fff2b82:	e7f4      	b.n	2fff2b6e <plat_scmi_rd_set_state+0x20>

2fff2b84 <stm32mp1_init_scmi_server>:
2fff2b84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff2b88:	2700      	movs	r7, #0
2fff2b8a:	4823      	ldr	r0, [pc, #140]	; (2fff2c18 <stm32mp1_init_scmi_server+0x94>)
2fff2b8c:	f04f 080c 	mov.w	r8, #12
2fff2b90:	4c22      	ldr	r4, [pc, #136]	; (2fff2c1c <stm32mp1_init_scmi_server+0x98>)
2fff2b92:	f7ff fe81 	bl	2fff2898 <scmi_smt_init_agent_channel>
2fff2b96:	4822      	ldr	r0, [pc, #136]	; (2fff2c20 <stm32mp1_init_scmi_server+0x9c>)
2fff2b98:	f7ff fe7e 	bl	2fff2898 <scmi_smt_init_agent_channel>
2fff2b9c:	2500      	movs	r5, #0
2fff2b9e:	e020      	b.n	2fff2be2 <stm32mp1_init_scmi_server+0x5e>
2fff2ba0:	fb08 f605 	mul.w	r6, r8, r5
2fff2ba4:	f8d4 9000 	ldr.w	r9, [r4]
2fff2ba8:	eb09 0a06 	add.w	sl, r9, r6
2fff2bac:	f8da 0004 	ldr.w	r0, [sl, #4]
2fff2bb0:	b930      	cbnz	r0, 2fff2bc0 <stm32mp1_init_scmi_server+0x3c>
2fff2bb2:	481c      	ldr	r0, [pc, #112]	; (2fff2c24 <stm32mp1_init_scmi_server+0xa0>)
2fff2bb4:	f000 f8b2 	bl	2fff2d1c <tf_log>
2fff2bb8:	f000 f954 	bl	2fff2e64 <console_flush>
2fff2bbc:	f006 ea72 	blx	2fff90a4 <do_panic>
2fff2bc0:	f007 fc57 	bl	2fffa472 <strlen>
2fff2bc4:	280f      	cmp	r0, #15
2fff2bc6:	d8f4      	bhi.n	2fff2bb2 <stm32mp1_init_scmi_server+0x2e>
2fff2bc8:	f89a 3008 	ldrb.w	r3, [sl, #8]
2fff2bcc:	b143      	cbz	r3, 2fff2be0 <stm32mp1_init_scmi_server+0x5c>
2fff2bce:	f859 0006 	ldr.w	r0, [r9, r6]
2fff2bd2:	f7fd ff9f 	bl	2fff0b14 <stm32mp_nsec_can_access_clock>
2fff2bd6:	b118      	cbz	r0, 2fff2be0 <stm32mp1_init_scmi_server+0x5c>
2fff2bd8:	f859 0006 	ldr.w	r0, [r9, r6]
2fff2bdc:	f002 fe5e 	bl	2fff589c <stm32mp_clk_enable>
2fff2be0:	3501      	adds	r5, #1
2fff2be2:	6863      	ldr	r3, [r4, #4]
2fff2be4:	42ab      	cmp	r3, r5
2fff2be6:	d8db      	bhi.n	2fff2ba0 <stm32mp1_init_scmi_server+0x1c>
2fff2be8:	2500      	movs	r5, #0
2fff2bea:	68e3      	ldr	r3, [r4, #12]
2fff2bec:	42ab      	cmp	r3, r5
2fff2bee:	d803      	bhi.n	2fff2bf8 <stm32mp1_init_scmi_server+0x74>
2fff2bf0:	3410      	adds	r4, #16
2fff2bf2:	b977      	cbnz	r7, 2fff2c12 <stm32mp1_init_scmi_server+0x8e>
2fff2bf4:	2701      	movs	r7, #1
2fff2bf6:	e7d1      	b.n	2fff2b9c <stm32mp1_init_scmi_server+0x18>
2fff2bf8:	68a3      	ldr	r3, [r4, #8]
2fff2bfa:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
2fff2bfe:	6858      	ldr	r0, [r3, #4]
2fff2c00:	b908      	cbnz	r0, 2fff2c06 <stm32mp1_init_scmi_server+0x82>
2fff2c02:	4809      	ldr	r0, [pc, #36]	; (2fff2c28 <stm32mp1_init_scmi_server+0xa4>)
2fff2c04:	e7d6      	b.n	2fff2bb4 <stm32mp1_init_scmi_server+0x30>
2fff2c06:	f007 fc34 	bl	2fffa472 <strlen>
2fff2c0a:	280f      	cmp	r0, #15
2fff2c0c:	d8f9      	bhi.n	2fff2c02 <stm32mp1_init_scmi_server+0x7e>
2fff2c0e:	3501      	adds	r5, #1
2fff2c10:	e7eb      	b.n	2fff2bea <stm32mp1_init_scmi_server+0x66>
2fff2c12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff2c16:	bf00      	nop
2fff2c18:	2fffd20c 	.word	0x2fffd20c
2fff2c1c:	2fffb52c 	.word	0x2fffb52c
2fff2c20:	2fffd21c 	.word	0x2fffd21c
2fff2c24:	2fffb42b 	.word	0x2fffb42b
2fff2c28:	2fffb445 	.word	0x2fffb445

2fff2c2c <stm32mp1_pm_save_scmi_state>:
2fff2c2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff2c2e:	460d      	mov	r5, r1
2fff2c30:	4604      	mov	r4, r0
2fff2c32:	2701      	movs	r7, #1
2fff2c34:	f006 eb8c 	blx	2fff9350 <zero_normalmem>
2fff2c38:	4918      	ldr	r1, [pc, #96]	; (2fff2c9c <stm32mp1_pm_save_scmi_state+0x70>)
2fff2c3a:	2300      	movs	r3, #0
2fff2c3c:	ebb5 0fd3 	cmp.w	r5, r3, lsr #3
2fff2c40:	ea4f 00d3 	mov.w	r0, r3, lsr #3
2fff2c44:	d318      	bcc.n	2fff2c78 <stm32mp1_pm_save_scmi_state+0x4c>
2fff2c46:	7a0a      	ldrb	r2, [r1, #8]
2fff2c48:	b962      	cbnz	r2, 2fff2c64 <stm32mp1_pm_save_scmi_state+0x38>
2fff2c4a:	3301      	adds	r3, #1
2fff2c4c:	310c      	adds	r1, #12
2fff2c4e:	2b15      	cmp	r3, #21
2fff2c50:	d1f4      	bne.n	2fff2c3c <stm32mp1_pm_save_scmi_state+0x10>
2fff2c52:	4913      	ldr	r1, [pc, #76]	; (2fff2ca0 <stm32mp1_pm_save_scmi_state+0x74>)
2fff2c54:	2200      	movs	r2, #0
2fff2c56:	200c      	movs	r0, #12
2fff2c58:	2601      	movs	r6, #1
2fff2c5a:	2a03      	cmp	r2, #3
2fff2c5c:	f102 0315 	add.w	r3, r2, #21
2fff2c60:	d108      	bne.n	2fff2c74 <stm32mp1_pm_save_scmi_state+0x48>
2fff2c62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff2c64:	5c26      	ldrb	r6, [r4, r0]
2fff2c66:	f003 0207 	and.w	r2, r3, #7
2fff2c6a:	fa07 f202 	lsl.w	r2, r7, r2
2fff2c6e:	4332      	orrs	r2, r6
2fff2c70:	5422      	strb	r2, [r4, r0]
2fff2c72:	e7ea      	b.n	2fff2c4a <stm32mp1_pm_save_scmi_state+0x1e>
2fff2c74:	2d01      	cmp	r5, #1
2fff2c76:	d803      	bhi.n	2fff2c80 <stm32mp1_pm_save_scmi_state+0x54>
2fff2c78:	f000 f8f4 	bl	2fff2e64 <console_flush>
2fff2c7c:	f006 ea12 	blx	2fff90a4 <do_panic>
2fff2c80:	fb00 1702 	mla	r7, r0, r2, r1
2fff2c84:	7a3f      	ldrb	r7, [r7, #8]
2fff2c86:	b137      	cbz	r7, 2fff2c96 <stm32mp1_pm_save_scmi_state+0x6a>
2fff2c88:	78a7      	ldrb	r7, [r4, #2]
2fff2c8a:	f003 0307 	and.w	r3, r3, #7
2fff2c8e:	fa06 f303 	lsl.w	r3, r6, r3
2fff2c92:	433b      	orrs	r3, r7
2fff2c94:	70a3      	strb	r3, [r4, #2]
2fff2c96:	3201      	adds	r2, #1
2fff2c98:	e7df      	b.n	2fff2c5a <stm32mp1_pm_save_scmi_state+0x2e>
2fff2c9a:	bf00      	nop
2fff2c9c:	2fffd22c 	.word	0x2fffd22c
2fff2ca0:	2fffd380 	.word	0x2fffd380

2fff2ca4 <stm32mp1_pm_restore_scmi_state>:
2fff2ca4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff2ca6:	2200      	movs	r2, #0
2fff2ca8:	4c19      	ldr	r4, [pc, #100]	; (2fff2d10 <stm32mp1_pm_restore_scmi_state+0x6c>)
2fff2caa:	2601      	movs	r6, #1
2fff2cac:	08d5      	lsrs	r5, r2, #3
2fff2cae:	f002 0707 	and.w	r7, r2, #7
2fff2cb2:	5d43      	ldrb	r3, [r0, r5]
2fff2cb4:	40fb      	lsrs	r3, r7
2fff2cb6:	f013 0301 	ands.w	r3, r3, #1
2fff2cba:	d011      	beq.n	2fff2ce0 <stm32mp1_pm_restore_scmi_state+0x3c>
2fff2cbc:	7226      	strb	r6, [r4, #8]
2fff2cbe:	42a9      	cmp	r1, r5
2fff2cc0:	f104 040c 	add.w	r4, r4, #12
2fff2cc4:	d31c      	bcc.n	2fff2d00 <stm32mp1_pm_restore_scmi_state+0x5c>
2fff2cc6:	3201      	adds	r2, #1
2fff2cc8:	2a15      	cmp	r2, #21
2fff2cca:	d1ef      	bne.n	2fff2cac <stm32mp1_pm_restore_scmi_state+0x8>
2fff2ccc:	4e11      	ldr	r6, [pc, #68]	; (2fff2d14 <stm32mp1_pm_restore_scmi_state+0x70>)
2fff2cce:	2200      	movs	r2, #0
2fff2cd0:	270c      	movs	r7, #12
2fff2cd2:	f04f 0c01 	mov.w	ip, #1
2fff2cd6:	2a03      	cmp	r2, #3
2fff2cd8:	f102 0415 	add.w	r4, r2, #21
2fff2cdc:	d102      	bne.n	2fff2ce4 <stm32mp1_pm_restore_scmi_state+0x40>
2fff2cde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff2ce0:	7223      	strb	r3, [r4, #8]
2fff2ce2:	e7ec      	b.n	2fff2cbe <stm32mp1_pm_restore_scmi_state+0x1a>
2fff2ce4:	7883      	ldrb	r3, [r0, #2]
2fff2ce6:	f004 0407 	and.w	r4, r4, #7
2fff2cea:	fb07 6502 	mla	r5, r7, r2, r6
2fff2cee:	40e3      	lsrs	r3, r4
2fff2cf0:	f013 0301 	ands.w	r3, r3, #1
2fff2cf4:	bf0c      	ite	eq
2fff2cf6:	722b      	strbeq	r3, [r5, #8]
2fff2cf8:	f885 c008 	strbne.w	ip, [r5, #8]
2fff2cfc:	2901      	cmp	r1, #1
2fff2cfe:	d804      	bhi.n	2fff2d0a <stm32mp1_pm_restore_scmi_state+0x66>
2fff2d00:	4805      	ldr	r0, [pc, #20]	; (2fff2d18 <stm32mp1_pm_restore_scmi_state+0x74>)
2fff2d02:	f240 2142 	movw	r1, #578	; 0x242
2fff2d06:	f007 fa07 	bl	2fffa118 <__assert>
2fff2d0a:	3201      	adds	r2, #1
2fff2d0c:	e7e3      	b.n	2fff2cd6 <stm32mp1_pm_restore_scmi_state+0x32>
2fff2d0e:	bf00      	nop
2fff2d10:	2fffd22c 	.word	0x2fffd22c
2fff2d14:	2fffd380 	.word	0x2fffd380
2fff2d18:	2fffb40a 	.word	0x2fffb40a

2fff2d1c <tf_log>:
2fff2d1c:	b40f      	push	{r0, r1, r2, r3}
2fff2d1e:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff2d20:	9d06      	ldr	r5, [sp, #24]
2fff2d22:	7828      	ldrb	r0, [r5, #0]
2fff2d24:	1e43      	subs	r3, r0, #1
2fff2d26:	2b31      	cmp	r3, #49	; 0x31
2fff2d28:	d903      	bls.n	2fff2d32 <tf_log+0x16>
2fff2d2a:	2122      	movs	r1, #34	; 0x22
2fff2d2c:	4810      	ldr	r0, [pc, #64]	; (2fff2d70 <tf_log+0x54>)
2fff2d2e:	f007 f9f3 	bl	2fffa118 <__assert>
2fff2d32:	220a      	movs	r2, #10
2fff2d34:	fbb0 f3f2 	udiv	r3, r0, r2
2fff2d38:	fb02 0313 	mls	r3, r2, r3, r0
2fff2d3c:	b10b      	cbz	r3, 2fff2d42 <tf_log+0x26>
2fff2d3e:	2123      	movs	r1, #35	; 0x23
2fff2d40:	e7f4      	b.n	2fff2d2c <tf_log+0x10>
2fff2d42:	4b0c      	ldr	r3, [pc, #48]	; (2fff2d74 <tf_log+0x58>)
2fff2d44:	681b      	ldr	r3, [r3, #0]
2fff2d46:	4283      	cmp	r3, r0
2fff2d48:	d30a      	bcc.n	2fff2d60 <tf_log+0x44>
2fff2d4a:	f000 f8ab 	bl	2fff2ea4 <plat_log_get_prefix>
2fff2d4e:	1e44      	subs	r4, r0, #1
2fff2d50:	f814 0f01 	ldrb.w	r0, [r4, #1]!
2fff2d54:	b948      	cbnz	r0, 2fff2d6a <tf_log+0x4e>
2fff2d56:	a907      	add	r1, sp, #28
2fff2d58:	1c68      	adds	r0, r5, #1
2fff2d5a:	9101      	str	r1, [sp, #4]
2fff2d5c:	f007 fa6e 	bl	2fffa23c <vprintf>
2fff2d60:	b003      	add	sp, #12
2fff2d62:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2fff2d66:	b004      	add	sp, #16
2fff2d68:	4770      	bx	lr
2fff2d6a:	f007 fb44 	bl	2fffa3f6 <putchar>
2fff2d6e:	e7ef      	b.n	2fff2d50 <tf_log+0x34>
2fff2d70:	2fffb553 	.word	0x2fffb553
2fff2d74:	2fffd3a4 	.word	0x2fffd3a4

2fff2d78 <console_is_registered>:
2fff2d78:	b508      	push	{r3, lr}
2fff2d7a:	4603      	mov	r3, r0
2fff2d7c:	b918      	cbnz	r0, 2fff2d86 <console_is_registered+0xe>
2fff2d7e:	4807      	ldr	r0, [pc, #28]	; (2fff2d9c <console_is_registered+0x24>)
2fff2d80:	2134      	movs	r1, #52	; 0x34
2fff2d82:	f007 f9c9 	bl	2fffa118 <__assert>
2fff2d86:	4a06      	ldr	r2, [pc, #24]	; (2fff2da0 <console_is_registered+0x28>)
2fff2d88:	6810      	ldr	r0, [r2, #0]
2fff2d8a:	b900      	cbnz	r0, 2fff2d8e <console_is_registered+0x16>
2fff2d8c:	bd08      	pop	{r3, pc}
2fff2d8e:	4298      	cmp	r0, r3
2fff2d90:	d001      	beq.n	2fff2d96 <console_is_registered+0x1e>
2fff2d92:	6800      	ldr	r0, [r0, #0]
2fff2d94:	e7f9      	b.n	2fff2d8a <console_is_registered+0x12>
2fff2d96:	2001      	movs	r0, #1
2fff2d98:	e7f8      	b.n	2fff2d8c <console_is_registered+0x14>
2fff2d9a:	bf00      	nop
2fff2d9c:	2fffb563 	.word	0x2fffb563
2fff2da0:	2fffec84 	.word	0x2fffec84

2fff2da4 <console_register>:
2fff2da4:	4b0b      	ldr	r3, [pc, #44]	; (2fff2dd4 <console_register+0x30>)
2fff2da6:	b510      	push	{r4, lr}
2fff2da8:	4604      	mov	r4, r0
2fff2daa:	4298      	cmp	r0, r3
2fff2dac:	d306      	bcc.n	2fff2dbc <console_register+0x18>
2fff2dae:	4b0a      	ldr	r3, [pc, #40]	; (2fff2dd8 <console_register+0x34>)
2fff2db0:	4298      	cmp	r0, r3
2fff2db2:	d203      	bcs.n	2fff2dbc <console_register+0x18>
2fff2db4:	4809      	ldr	r0, [pc, #36]	; (2fff2ddc <console_register+0x38>)
2fff2db6:	2114      	movs	r1, #20
2fff2db8:	f007 f9ae 	bl	2fffa118 <__assert>
2fff2dbc:	4620      	mov	r0, r4
2fff2dbe:	f7ff ffdb 	bl	2fff2d78 <console_is_registered>
2fff2dc2:	2801      	cmp	r0, #1
2fff2dc4:	f04f 0001 	mov.w	r0, #1
2fff2dc8:	bf1f      	itttt	ne
2fff2dca:	4b05      	ldrne	r3, [pc, #20]	; (2fff2de0 <console_register+0x3c>)
2fff2dcc:	681a      	ldrne	r2, [r3, #0]
2fff2dce:	6022      	strne	r2, [r4, #0]
2fff2dd0:	601c      	strne	r4, [r3, #0]
2fff2dd2:	bd10      	pop	{r4, pc}
2fff2dd4:	2fffd540 	.word	0x2fffd540
2fff2dd8:	2fffe140 	.word	0x2fffe140
2fff2ddc:	2fffb563 	.word	0x2fffb563
2fff2de0:	2fffec84 	.word	0x2fffec84

2fff2de4 <console_switch_state>:
2fff2de4:	4b01      	ldr	r3, [pc, #4]	; (2fff2dec <console_switch_state+0x8>)
2fff2de6:	7018      	strb	r0, [r3, #0]
2fff2de8:	4770      	bx	lr
2fff2dea:	bf00      	nop
2fff2dec:	2fffd3a8 	.word	0x2fffd3a8

2fff2df0 <console_set_scope>:
2fff2df0:	b508      	push	{r3, lr}
2fff2df2:	b918      	cbnz	r0, 2fff2dfc <console_set_scope+0xc>
2fff2df4:	4804      	ldr	r0, [pc, #16]	; (2fff2e08 <console_set_scope+0x18>)
2fff2df6:	2144      	movs	r1, #68	; 0x44
2fff2df8:	f007 f98e 	bl	2fffa118 <__assert>
2fff2dfc:	6843      	ldr	r3, [r0, #4]
2fff2dfe:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
2fff2e02:	4319      	orrs	r1, r3
2fff2e04:	6041      	str	r1, [r0, #4]
2fff2e06:	bd08      	pop	{r3, pc}
2fff2e08:	2fffb563 	.word	0x2fffb563

2fff2e0c <console_putc>:
2fff2e0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff2e0e:	4606      	mov	r6, r0
2fff2e10:	4b12      	ldr	r3, [pc, #72]	; (2fff2e5c <console_putc+0x50>)
2fff2e12:	f06f 057f 	mvn.w	r5, #127	; 0x7f
2fff2e16:	4f12      	ldr	r7, [pc, #72]	; (2fff2e60 <console_putc+0x54>)
2fff2e18:	681c      	ldr	r4, [r3, #0]
2fff2e1a:	b90c      	cbnz	r4, 2fff2e20 <console_putc+0x14>
2fff2e1c:	4628      	mov	r0, r5
2fff2e1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff2e20:	6862      	ldr	r2, [r4, #4]
2fff2e22:	783b      	ldrb	r3, [r7, #0]
2fff2e24:	4213      	tst	r3, r2
2fff2e26:	d00d      	beq.n	2fff2e44 <console_putc+0x38>
2fff2e28:	68a3      	ldr	r3, [r4, #8]
2fff2e2a:	b15b      	cbz	r3, 2fff2e44 <console_putc+0x38>
2fff2e2c:	2e0a      	cmp	r6, #10
2fff2e2e:	d00b      	beq.n	2fff2e48 <console_putc+0x3c>
2fff2e30:	68a3      	ldr	r3, [r4, #8]
2fff2e32:	4621      	mov	r1, r4
2fff2e34:	4630      	mov	r0, r6
2fff2e36:	4798      	blx	r3
2fff2e38:	f115 0f80 	cmn.w	r5, #128	; 0x80
2fff2e3c:	d00c      	beq.n	2fff2e58 <console_putc+0x4c>
2fff2e3e:	4285      	cmp	r5, r0
2fff2e40:	bfa8      	it	ge
2fff2e42:	4605      	movge	r5, r0
2fff2e44:	6824      	ldr	r4, [r4, #0]
2fff2e46:	e7e8      	b.n	2fff2e1a <console_putc+0xe>
2fff2e48:	05d2      	lsls	r2, r2, #23
2fff2e4a:	d5f1      	bpl.n	2fff2e30 <console_putc+0x24>
2fff2e4c:	4621      	mov	r1, r4
2fff2e4e:	200d      	movs	r0, #13
2fff2e50:	4798      	blx	r3
2fff2e52:	2800      	cmp	r0, #0
2fff2e54:	daec      	bge.n	2fff2e30 <console_putc+0x24>
2fff2e56:	e7ef      	b.n	2fff2e38 <console_putc+0x2c>
2fff2e58:	4605      	mov	r5, r0
2fff2e5a:	e7f3      	b.n	2fff2e44 <console_putc+0x38>
2fff2e5c:	2fffec84 	.word	0x2fffec84
2fff2e60:	2fffd3a8 	.word	0x2fffd3a8

2fff2e64 <console_flush>:
2fff2e64:	4b0d      	ldr	r3, [pc, #52]	; (2fff2e9c <console_flush+0x38>)
2fff2e66:	b570      	push	{r4, r5, r6, lr}
2fff2e68:	f06f 057f 	mvn.w	r5, #127	; 0x7f
2fff2e6c:	681c      	ldr	r4, [r3, #0]
2fff2e6e:	4e0c      	ldr	r6, [pc, #48]	; (2fff2ea0 <console_flush+0x3c>)
2fff2e70:	b90c      	cbnz	r4, 2fff2e76 <console_flush+0x12>
2fff2e72:	4628      	mov	r0, r5
2fff2e74:	bd70      	pop	{r4, r5, r6, pc}
2fff2e76:	7832      	ldrb	r2, [r6, #0]
2fff2e78:	6863      	ldr	r3, [r4, #4]
2fff2e7a:	421a      	tst	r2, r3
2fff2e7c:	d009      	beq.n	2fff2e92 <console_flush+0x2e>
2fff2e7e:	6923      	ldr	r3, [r4, #16]
2fff2e80:	b13b      	cbz	r3, 2fff2e92 <console_flush+0x2e>
2fff2e82:	4620      	mov	r0, r4
2fff2e84:	4798      	blx	r3
2fff2e86:	f115 0f80 	cmn.w	r5, #128	; 0x80
2fff2e8a:	d004      	beq.n	2fff2e96 <console_flush+0x32>
2fff2e8c:	4285      	cmp	r5, r0
2fff2e8e:	bfa8      	it	ge
2fff2e90:	4605      	movge	r5, r0
2fff2e92:	6824      	ldr	r4, [r4, #0]
2fff2e94:	e7ec      	b.n	2fff2e70 <console_flush+0xc>
2fff2e96:	4605      	mov	r5, r0
2fff2e98:	e7fb      	b.n	2fff2e92 <console_flush+0x2e>
2fff2e9a:	bf00      	nop
2fff2e9c:	2fffec84 	.word	0x2fffec84
2fff2ea0:	2fffd3a8 	.word	0x2fffd3a8

2fff2ea4 <plat_log_get_prefix>:
2fff2ea4:	2832      	cmp	r0, #50	; 0x32
2fff2ea6:	f04f 030a 	mov.w	r3, #10
2fff2eaa:	bf28      	it	cs
2fff2eac:	2032      	movcs	r0, #50	; 0x32
2fff2eae:	280a      	cmp	r0, #10
2fff2eb0:	bf38      	it	cc
2fff2eb2:	200a      	movcc	r0, #10
2fff2eb4:	fbb0 f0f3 	udiv	r0, r0, r3
2fff2eb8:	4b02      	ldr	r3, [pc, #8]	; (2fff2ec4 <plat_log_get_prefix+0x20>)
2fff2eba:	3801      	subs	r0, #1
2fff2ebc:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
2fff2ec0:	4770      	bx	lr
2fff2ec2:	bf00      	nop
2fff2ec4:	2fffb5b8 	.word	0x2fffb5b8

2fff2ec8 <bl32_plat_enable_mmu>:
2fff2ec8:	f000 bc1c 	b.w	2fff3704 <enable_mmu_svc_mon>

2fff2ecc <__ctzdi2>:
2fff2ecc:	fab0 f380 	clz	r3, r0
2fff2ed0:	095b      	lsrs	r3, r3, #5
2fff2ed2:	425a      	negs	r2, r3
2fff2ed4:	3b01      	subs	r3, #1
2fff2ed6:	4003      	ands	r3, r0
2fff2ed8:	4011      	ands	r1, r2
2fff2eda:	430b      	orrs	r3, r1
2fff2edc:	f002 0020 	and.w	r0, r2, #32
2fff2ee0:	fa93 f3a3 	rbit	r3, r3
2fff2ee4:	fab3 f383 	clz	r3, r3
2fff2ee8:	4418      	add	r0, r3
2fff2eea:	4770      	bx	lr

2fff2eec <__udivmoddi4>:
2fff2eec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff2ef0:	9e08      	ldr	r6, [sp, #32]
2fff2ef2:	b981      	cbnz	r1, 2fff2f16 <__udivmoddi4+0x2a>
2fff2ef4:	b953      	cbnz	r3, 2fff2f0c <__udivmoddi4+0x20>
2fff2ef6:	fbb0 f1f2 	udiv	r1, r0, r2
2fff2efa:	b11e      	cbz	r6, 2fff2f04 <__udivmoddi4+0x18>
2fff2efc:	fb01 0012 	mls	r0, r1, r2, r0
2fff2f00:	e9c6 0300 	strd	r0, r3, [r6]
2fff2f04:	4608      	mov	r0, r1
2fff2f06:	2100      	movs	r1, #0
2fff2f08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff2f0c:	b10e      	cbz	r6, 2fff2f12 <__udivmoddi4+0x26>
2fff2f0e:	e9c6 0100 	strd	r0, r1, [r6]
2fff2f12:	4608      	mov	r0, r1
2fff2f14:	e7f8      	b.n	2fff2f08 <__udivmoddi4+0x1c>
2fff2f16:	2a00      	cmp	r2, #0
2fff2f18:	d164      	bne.n	2fff2fe4 <__udivmoddi4+0xf8>
2fff2f1a:	b903      	cbnz	r3, 2fff2f1e <__udivmoddi4+0x32>
2fff2f1c:	deff      	udf	#255	; 0xff
2fff2f1e:	b940      	cbnz	r0, 2fff2f32 <__udivmoddi4+0x46>
2fff2f20:	fbb1 f2f3 	udiv	r2, r1, r3
2fff2f24:	b11e      	cbz	r6, 2fff2f2e <__udivmoddi4+0x42>
2fff2f26:	fb02 1113 	mls	r1, r2, r3, r1
2fff2f2a:	e9c6 0100 	strd	r0, r1, [r6]
2fff2f2e:	4610      	mov	r0, r2
2fff2f30:	e7e9      	b.n	2fff2f06 <__udivmoddi4+0x1a>
2fff2f32:	1e5c      	subs	r4, r3, #1
2fff2f34:	421c      	tst	r4, r3
2fff2f36:	d10a      	bne.n	2fff2f4e <__udivmoddi4+0x62>
2fff2f38:	b116      	cbz	r6, 2fff2f40 <__udivmoddi4+0x54>
2fff2f3a:	400c      	ands	r4, r1
2fff2f3c:	e9c6 0400 	strd	r0, r4, [r6]
2fff2f40:	fa93 f0a3 	rbit	r0, r3
2fff2f44:	fab0 f080 	clz	r0, r0
2fff2f48:	fa21 f000 	lsr.w	r0, r1, r0
2fff2f4c:	e7db      	b.n	2fff2f06 <__udivmoddi4+0x1a>
2fff2f4e:	fab3 f483 	clz	r4, r3
2fff2f52:	fab1 f581 	clz	r5, r1
2fff2f56:	1b64      	subs	r4, r4, r5
2fff2f58:	2c1e      	cmp	r4, #30
2fff2f5a:	d907      	bls.n	2fff2f6c <__udivmoddi4+0x80>
2fff2f5c:	2e00      	cmp	r6, #0
2fff2f5e:	f000 8092 	beq.w	2fff3086 <__udivmoddi4+0x19a>
2fff2f62:	e9c6 0100 	strd	r0, r1, [r6]
2fff2f66:	2000      	movs	r0, #0
2fff2f68:	4601      	mov	r1, r0
2fff2f6a:	e7cd      	b.n	2fff2f08 <__udivmoddi4+0x1c>
2fff2f6c:	f104 0e01 	add.w	lr, r4, #1
2fff2f70:	f1c4 041f 	rsb	r4, r4, #31
2fff2f74:	4694      	mov	ip, r2
2fff2f76:	fa00 f704 	lsl.w	r7, r0, r4
2fff2f7a:	fa01 f404 	lsl.w	r4, r1, r4
2fff2f7e:	fa20 f00e 	lsr.w	r0, r0, lr
2fff2f82:	fa21 f80e 	lsr.w	r8, r1, lr
2fff2f86:	ea44 0100 	orr.w	r1, r4, r0
2fff2f8a:	f04f 0900 	mov.w	r9, #0
2fff2f8e:	ea4f 7ad7 	mov.w	sl, r7, lsr #31
2fff2f92:	0fcd      	lsrs	r5, r1, #31
2fff2f94:	ea4f 70dc 	mov.w	r0, ip, lsr #31
2fff2f98:	ea4a 0441 	orr.w	r4, sl, r1, lsl #1
2fff2f9c:	ea40 0747 	orr.w	r7, r0, r7, lsl #1
2fff2fa0:	ea45 0048 	orr.w	r0, r5, r8, lsl #1
2fff2fa4:	43e5      	mvns	r5, r4
2fff2fa6:	43c1      	mvns	r1, r0
2fff2fa8:	18ad      	adds	r5, r5, r2
2fff2faa:	eb41 0503 	adc.w	r5, r1, r3
2fff2fae:	ea49 0c4c 	orr.w	ip, r9, ip, lsl #1
2fff2fb2:	ea02 71e5 	and.w	r1, r2, r5, asr #31
2fff2fb6:	1a64      	subs	r4, r4, r1
2fff2fb8:	ea4f 79d5 	mov.w	r9, r5, lsr #31
2fff2fbc:	4621      	mov	r1, r4
2fff2fbe:	ea03 75e5 	and.w	r5, r3, r5, asr #31
2fff2fc2:	eb60 0505 	sbc.w	r5, r0, r5
2fff2fc6:	f1be 0e01 	subs.w	lr, lr, #1
2fff2fca:	46a8      	mov	r8, r5
2fff2fcc:	d1df      	bne.n	2fff2f8e <__udivmoddi4+0xa2>
2fff2fce:	eb1c 030c 	adds.w	r3, ip, ip
2fff2fd2:	eb47 0107 	adc.w	r1, r7, r7
2fff2fd6:	ea49 004c 	orr.w	r0, r9, ip, lsl #1
2fff2fda:	2e00      	cmp	r6, #0
2fff2fdc:	d094      	beq.n	2fff2f08 <__udivmoddi4+0x1c>
2fff2fde:	e9c6 4500 	strd	r4, r5, [r6]
2fff2fe2:	e791      	b.n	2fff2f08 <__udivmoddi4+0x1c>
2fff2fe4:	2b00      	cmp	r3, #0
2fff2fe6:	d13e      	bne.n	2fff3066 <__udivmoddi4+0x17a>
2fff2fe8:	1e54      	subs	r4, r2, #1
2fff2fea:	ea14 0502 	ands.w	r5, r4, r2
2fff2fee:	d112      	bne.n	2fff3016 <__udivmoddi4+0x12a>
2fff2ff0:	b116      	cbz	r6, 2fff2ff8 <__udivmoddi4+0x10c>
2fff2ff2:	4004      	ands	r4, r0
2fff2ff4:	e9c6 4500 	strd	r4, r5, [r6]
2fff2ff8:	2a01      	cmp	r2, #1
2fff2ffa:	d085      	beq.n	2fff2f08 <__udivmoddi4+0x1c>
2fff2ffc:	fa92 f2a2 	rbit	r2, r2
2fff3000:	fab2 f282 	clz	r2, r2
2fff3004:	f1c2 0420 	rsb	r4, r2, #32
2fff3008:	fa21 f702 	lsr.w	r7, r1, r2
2fff300c:	40d0      	lsrs	r0, r2
2fff300e:	40a1      	lsls	r1, r4
2fff3010:	4308      	orrs	r0, r1
2fff3012:	4639      	mov	r1, r7
2fff3014:	e778      	b.n	2fff2f08 <__udivmoddi4+0x1c>
2fff3016:	fab1 f481 	clz	r4, r1
2fff301a:	fab2 f582 	clz	r5, r2
2fff301e:	1b2d      	subs	r5, r5, r4
2fff3020:	1c6c      	adds	r4, r5, #1
2fff3022:	f105 0e21 	add.w	lr, r5, #33	; 0x21
2fff3026:	d103      	bne.n	2fff3030 <__udivmoddi4+0x144>
2fff3028:	469c      	mov	ip, r3
2fff302a:	4607      	mov	r7, r0
2fff302c:	4698      	mov	r8, r3
2fff302e:	e7ac      	b.n	2fff2f8a <__udivmoddi4+0x9e>
2fff3030:	f1be 0f1f 	cmp.w	lr, #31
2fff3034:	d80b      	bhi.n	2fff304e <__udivmoddi4+0x162>
2fff3036:	469c      	mov	ip, r3
2fff3038:	fa21 f80e 	lsr.w	r8, r1, lr
2fff303c:	f1ce 0420 	rsb	r4, lr, #32
2fff3040:	fa00 f704 	lsl.w	r7, r0, r4
2fff3044:	40a1      	lsls	r1, r4
2fff3046:	fa20 f00e 	lsr.w	r0, r0, lr
2fff304a:	4301      	orrs	r1, r0
2fff304c:	e79d      	b.n	2fff2f8a <__udivmoddi4+0x9e>
2fff304e:	f1ce 0440 	rsb	r4, lr, #64	; 0x40
2fff3052:	3501      	adds	r5, #1
2fff3054:	4698      	mov	r8, r3
2fff3056:	fa01 f704 	lsl.w	r7, r1, r4
2fff305a:	fa00 fc04 	lsl.w	ip, r0, r4
2fff305e:	40e8      	lsrs	r0, r5
2fff3060:	4307      	orrs	r7, r0
2fff3062:	40e9      	lsrs	r1, r5
2fff3064:	e791      	b.n	2fff2f8a <__udivmoddi4+0x9e>
2fff3066:	fab3 f483 	clz	r4, r3
2fff306a:	fab1 f581 	clz	r5, r1
2fff306e:	1b64      	subs	r4, r4, r5
2fff3070:	2c1f      	cmp	r4, #31
2fff3072:	f63f af73 	bhi.w	2fff2f5c <__udivmoddi4+0x70>
2fff3076:	f104 0e01 	add.w	lr, r4, #1
2fff307a:	f04f 0c00 	mov.w	ip, #0
2fff307e:	d1db      	bne.n	2fff3038 <__udivmoddi4+0x14c>
2fff3080:	4607      	mov	r7, r0
2fff3082:	46e0      	mov	r8, ip
2fff3084:	e781      	b.n	2fff2f8a <__udivmoddi4+0x9e>
2fff3086:	4630      	mov	r0, r6
2fff3088:	e76e      	b.n	2fff2f68 <__udivmoddi4+0x7c>

2fff308a <plat_get_syscnt_freq2>:
2fff308a:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff308e:	4770      	bx	lr

2fff3090 <stm32mp_ddrctrl_base>:
2fff3090:	4800      	ldr	r0, [pc, #0]	; (2fff3094 <stm32mp_ddrctrl_base+0x4>)
2fff3092:	4770      	bx	lr
2fff3094:	5a003000 	.word	0x5a003000

2fff3098 <stm32mp_ddrphyc_base>:
2fff3098:	4800      	ldr	r0, [pc, #0]	; (2fff309c <stm32mp_ddrphyc_base+0x4>)
2fff309a:	4770      	bx	lr
2fff309c:	5a004000 	.word	0x5a004000

2fff30a0 <stm32mp_pwr_base>:
2fff30a0:	4800      	ldr	r0, [pc, #0]	; (2fff30a4 <stm32mp_pwr_base+0x4>)
2fff30a2:	4770      	bx	lr
2fff30a4:	50001000 	.word	0x50001000

2fff30a8 <stm32mp_rcc_base>:
2fff30a8:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
2fff30ac:	4770      	bx	lr

2fff30ae <stm32mp_lock_available>:
2fff30ae:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff30b2:	f000 0005 	and.w	r0, r0, #5
2fff30b6:	1f43      	subs	r3, r0, #5
2fff30b8:	4258      	negs	r0, r3
2fff30ba:	4158      	adcs	r0, r3
2fff30bc:	4770      	bx	lr
	...

2fff30c0 <stm32mp_pwr_regs_lock>:
2fff30c0:	b508      	push	{r3, lr}
2fff30c2:	f7ff fff4 	bl	2fff30ae <stm32mp_lock_available>
2fff30c6:	b120      	cbz	r0, 2fff30d2 <stm32mp_pwr_regs_lock+0x12>
2fff30c8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff30cc:	4801      	ldr	r0, [pc, #4]	; (2fff30d4 <stm32mp_pwr_regs_lock+0x14>)
2fff30ce:	f009 bea7 	b.w	2fffce20 <__spin_lock_from_thumb>
2fff30d2:	bd08      	pop	{r3, pc}
2fff30d4:	2fffe870 	.word	0x2fffe870

2fff30d8 <stm32mp_pwr_regs_unlock>:
2fff30d8:	b508      	push	{r3, lr}
2fff30da:	f7ff ffe8 	bl	2fff30ae <stm32mp_lock_available>
2fff30de:	b120      	cbz	r0, 2fff30ea <stm32mp_pwr_regs_unlock+0x12>
2fff30e0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff30e4:	4801      	ldr	r0, [pc, #4]	; (2fff30ec <stm32mp_pwr_regs_unlock+0x14>)
2fff30e6:	f009 bea7 	b.w	2fffce38 <__spin_unlock_from_thumb>
2fff30ea:	bd08      	pop	{r3, pc}
2fff30ec:	2fffe870 	.word	0x2fffe870

2fff30f0 <stm32_get_gpio_bank_base>:
2fff30f0:	2819      	cmp	r0, #25
2fff30f2:	b508      	push	{r3, lr}
2fff30f4:	d00a      	beq.n	2fff310c <stm32_get_gpio_bank_base+0x1c>
2fff30f6:	280a      	cmp	r0, #10
2fff30f8:	d903      	bls.n	2fff3102 <stm32_get_gpio_bank_base+0x12>
2fff30fa:	4805      	ldr	r0, [pc, #20]	; (2fff3110 <stm32_get_gpio_bank_base+0x20>)
2fff30fc:	2164      	movs	r1, #100	; 0x64
2fff30fe:	f007 f80b 	bl	2fffa118 <__assert>
2fff3102:	f500 20a0 	add.w	r0, r0, #327680	; 0x50000
2fff3106:	3002      	adds	r0, #2
2fff3108:	0300      	lsls	r0, r0, #12
2fff310a:	bd08      	pop	{r3, pc}
2fff310c:	4801      	ldr	r0, [pc, #4]	; (2fff3114 <stm32_get_gpio_bank_base+0x24>)
2fff310e:	e7fc      	b.n	2fff310a <stm32_get_gpio_bank_base+0x1a>
2fff3110:	2fffb5cc 	.word	0x2fffb5cc
2fff3114:	54004000 	.word	0x54004000

2fff3118 <stm32_get_gpio_bank_offset>:
2fff3118:	2819      	cmp	r0, #25
2fff311a:	b508      	push	{r3, lr}
2fff311c:	d007      	beq.n	2fff312e <stm32_get_gpio_bank_offset+0x16>
2fff311e:	280a      	cmp	r0, #10
2fff3120:	d903      	bls.n	2fff312a <stm32_get_gpio_bank_offset+0x12>
2fff3122:	4804      	ldr	r0, [pc, #16]	; (2fff3134 <stm32_get_gpio_bank_offset+0x1c>)
2fff3124:	216f      	movs	r1, #111	; 0x6f
2fff3126:	f006 fff7 	bl	2fffa118 <__assert>
2fff312a:	0300      	lsls	r0, r0, #12
2fff312c:	bd08      	pop	{r3, pc}
2fff312e:	2000      	movs	r0, #0
2fff3130:	e7fc      	b.n	2fff312c <stm32_get_gpio_bank_offset+0x14>
2fff3132:	bf00      	nop
2fff3134:	2fffb5cc 	.word	0x2fffb5cc

2fff3138 <stm32mp_get_cpu_supply_name>:
2fff3138:	b513      	push	{r0, r1, r4, lr}
2fff313a:	2300      	movs	r3, #0
2fff313c:	9301      	str	r3, [sp, #4]
2fff313e:	f005 fbd5 	bl	2fff88ec <dt_get_cpu_regulator_name>
2fff3142:	4604      	mov	r4, r0
2fff3144:	b910      	cbnz	r0, 2fff314c <stm32mp_get_cpu_supply_name+0x14>
2fff3146:	2000      	movs	r0, #0
2fff3148:	b002      	add	sp, #8
2fff314a:	bd10      	pop	{r4, pc}
2fff314c:	f004 fe80 	bl	2fff7e50 <dt_pmic_status>
2fff3150:	2800      	cmp	r0, #0
2fff3152:	dc01      	bgt.n	2fff3158 <stm32mp_get_cpu_supply_name+0x20>
2fff3154:	9801      	ldr	r0, [sp, #4]
2fff3156:	e7f7      	b.n	2fff3148 <stm32mp_get_cpu_supply_name+0x10>
2fff3158:	4621      	mov	r1, r4
2fff315a:	a801      	add	r0, sp, #4
2fff315c:	f004 fe96 	bl	2fff7e8c <dt_pmic_find_supply>
2fff3160:	2800      	cmp	r0, #0
2fff3162:	d0f7      	beq.n	2fff3154 <stm32mp_get_cpu_supply_name+0x1c>
2fff3164:	e7ef      	b.n	2fff3146 <stm32mp_get_cpu_supply_name+0xe>
	...

2fff3168 <configure_mmu>:
2fff3168:	4805      	ldr	r0, [pc, #20]	; (2fff3180 <configure_mmu+0x18>)
2fff316a:	b508      	push	{r3, lr}
2fff316c:	f000 fa8a 	bl	2fff3684 <mmap_add>
2fff3170:	f000 faaa 	bl	2fff36c8 <init_xlat_tables>
2fff3174:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff3178:	2000      	movs	r0, #0
2fff317a:	f000 bac3 	b.w	2fff3704 <enable_mmu_svc_mon>
2fff317e:	bf00      	nop
2fff3180:	2fffb680 	.word	0x2fffb680

2fff3184 <get_uart_address>:
2fff3184:	3801      	subs	r0, #1
2fff3186:	2807      	cmp	r0, #7
2fff3188:	bf9a      	itte	ls
2fff318a:	4b02      	ldrls	r3, [pc, #8]	; (2fff3194 <get_uart_address+0x10>)
2fff318c:	f853 0020 	ldrls.w	r0, [r3, r0, lsl #2]
2fff3190:	2000      	movhi	r0, #0
2fff3192:	4770      	bx	lr
2fff3194:	2fffb6f8 	.word	0x2fffb6f8

2fff3198 <stm32mp_mask_timer>:
2fff3198:	ee1e 3f32 	mrc	15, 0, r3, cr14, cr2, {1}
2fff319c:	f043 0302 	orr.w	r3, r3, #2
2fff31a0:	ee0e 3f32 	mcr	15, 0, r3, cr14, cr2, {1}
2fff31a4:	ee1e 3f33 	mrc	15, 0, r3, cr14, cr3, {1}
2fff31a8:	f043 0302 	orr.w	r3, r3, #2
2fff31ac:	ee0e 3f33 	mcr	15, 0, r3, cr14, cr3, {1}
2fff31b0:	4770      	bx	lr

2fff31b2 <stm32mp_wait_cpu_reset>:
2fff31b2:	2001      	movs	r0, #1
2fff31b4:	b508      	push	{r3, lr}
2fff31b6:	f006 e8ba 	blx	2fff932c <dcsw_op_all>
2fff31ba:	ee11 3f10 	mrc	15, 0, r3, cr1, cr0, {0}
2fff31be:	f023 0304 	bic.w	r3, r3, #4
2fff31c2:	ee01 3f10 	mcr	15, 0, r3, cr1, cr0, {0}
2fff31c6:	2001      	movs	r0, #1
2fff31c8:	f006 e8b0 	blx	2fff932c <dcsw_op_all>
2fff31cc:	f3bf 8f2f 	clrex
2fff31d0:	f3bf 8f4f 	dsb	sy
2fff31d4:	f3bf 8f6f 	isb	sy
2fff31d8:	f7fe f9bc 	bl	2fff1554 <plat_ic_get_pending_interrupt_id>
2fff31dc:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2fff31e0:	4604      	mov	r4, r0
2fff31e2:	d205      	bcs.n	2fff31f0 <stm32mp_wait_cpu_reset+0x3e>
2fff31e4:	f7fe f848 	bl	2fff1278 <gicv2_end_of_interrupt>
2fff31e8:	4620      	mov	r0, r4
2fff31ea:	f7fe f9c1 	bl	2fff1570 <plat_ic_disable_interrupt>
2fff31ee:	e7f3      	b.n	2fff31d8 <stm32mp_wait_cpu_reset+0x26>
2fff31f0:	bf30      	wfi
2fff31f2:	e7f1      	b.n	2fff31d8 <stm32mp_wait_cpu_reset+0x26>

2fff31f4 <stm32_get_gpio_bank_clock>:
2fff31f4:	2819      	cmp	r0, #25
2fff31f6:	b508      	push	{r3, lr}
2fff31f8:	d008      	beq.n	2fff320c <stm32_get_gpio_bank_clock+0x18>
2fff31fa:	280a      	cmp	r0, #10
2fff31fc:	d904      	bls.n	2fff3208 <stm32_get_gpio_bank_clock+0x14>
2fff31fe:	4804      	ldr	r0, [pc, #16]	; (2fff3210 <stm32_get_gpio_bank_clock+0x1c>)
2fff3200:	f240 112b 	movw	r1, #299	; 0x12b
2fff3204:	f006 ff88 	bl	2fffa118 <__assert>
2fff3208:	3054      	adds	r0, #84	; 0x54
2fff320a:	bd08      	pop	{r3, pc}
2fff320c:	205f      	movs	r0, #95	; 0x5f
2fff320e:	e7fc      	b.n	2fff320a <stm32_get_gpio_bank_clock+0x16>
2fff3210:	2fffb5ec 	.word	0x2fffb5ec

2fff3214 <stm32_get_otp_index>:
2fff3214:	b508      	push	{r3, lr}
2fff3216:	b920      	cbnz	r0, 2fff3222 <stm32_get_otp_index+0xe>
2fff3218:	f240 1133 	movw	r1, #307	; 0x133
2fff321c:	4806      	ldr	r0, [pc, #24]	; (2fff3238 <stm32_get_otp_index+0x24>)
2fff321e:	f006 ff7b 	bl	2fffa118 <__assert>
2fff3222:	b911      	cbnz	r1, 2fff322a <stm32_get_otp_index+0x16>
2fff3224:	f44f 719a 	mov.w	r1, #308	; 0x134
2fff3228:	e7f8      	b.n	2fff321c <stm32_get_otp_index+0x8>
2fff322a:	f001 f9f3 	bl	2fff4614 <bsec_find_otp_name_in_dt>
2fff322e:	3800      	subs	r0, #0
2fff3230:	bf18      	it	ne
2fff3232:	2001      	movne	r0, #1
2fff3234:	4240      	negs	r0, r0
2fff3236:	bd08      	pop	{r3, pc}
2fff3238:	2fffb5ec 	.word	0x2fffb5ec

2fff323c <stm32_get_otp_value_from_idx>:
2fff323c:	b510      	push	{r4, lr}
2fff323e:	4604      	mov	r4, r0
2fff3240:	4608      	mov	r0, r1
2fff3242:	b921      	cbnz	r1, 2fff324e <stm32_get_otp_value_from_idx+0x12>
2fff3244:	4807      	ldr	r0, [pc, #28]	; (2fff3264 <stm32_get_otp_value_from_idx+0x28>)
2fff3246:	f44f 71aa 	mov.w	r1, #340	; 0x154
2fff324a:	f006 ff65 	bl	2fffa118 <__assert>
2fff324e:	4621      	mov	r1, r4
2fff3250:	f001 fa48 	bl	2fff46e4 <bsec_read_otp>
2fff3254:	b128      	cbz	r0, 2fff3262 <stm32_get_otp_value_from_idx+0x26>
2fff3256:	4804      	ldr	r0, [pc, #16]	; (2fff3268 <stm32_get_otp_value_from_idx+0x2c>)
2fff3258:	4621      	mov	r1, r4
2fff325a:	f7ff fd5f 	bl	2fff2d1c <tf_log>
2fff325e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff3262:	bd10      	pop	{r4, pc}
2fff3264:	2fffb5ec 	.word	0x2fffb5ec
2fff3268:	2fffb610 	.word	0x2fffb610

2fff326c <stm32_get_otp_value>:
2fff326c:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff326e:	460d      	mov	r5, r1
2fff3270:	4604      	mov	r4, r0
2fff3272:	b920      	cbnz	r0, 2fff327e <stm32_get_otp_value+0x12>
2fff3274:	f240 1141 	movw	r1, #321	; 0x141
2fff3278:	480c      	ldr	r0, [pc, #48]	; (2fff32ac <stm32_get_otp_value+0x40>)
2fff327a:	f006 ff4d 	bl	2fffa118 <__assert>
2fff327e:	b911      	cbnz	r1, 2fff3286 <stm32_get_otp_value+0x1a>
2fff3280:	f44f 71a1 	mov.w	r1, #322	; 0x142
2fff3284:	e7f8      	b.n	2fff3278 <stm32_get_otp_value+0xc>
2fff3286:	2200      	movs	r2, #0
2fff3288:	a901      	add	r1, sp, #4
2fff328a:	f7ff ffc3 	bl	2fff3214 <stm32_get_otp_index>
2fff328e:	b940      	cbnz	r0, 2fff32a2 <stm32_get_otp_value+0x36>
2fff3290:	9801      	ldr	r0, [sp, #4]
2fff3292:	4629      	mov	r1, r5
2fff3294:	f7ff ffd2 	bl	2fff323c <stm32_get_otp_value_from_idx>
2fff3298:	b128      	cbz	r0, 2fff32a6 <stm32_get_otp_value+0x3a>
2fff329a:	4805      	ldr	r0, [pc, #20]	; (2fff32b0 <stm32_get_otp_value+0x44>)
2fff329c:	4621      	mov	r1, r4
2fff329e:	f7ff fd3d 	bl	2fff2d1c <tf_log>
2fff32a2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff32a6:	b003      	add	sp, #12
2fff32a8:	bd30      	pop	{r4, r5, pc}
2fff32aa:	bf00      	nop
2fff32ac:	2fffb5ec 	.word	0x2fffb5ec
2fff32b0:	2fffb62a 	.word	0x2fffb62a

2fff32b4 <get_part_number>:
2fff32b4:	b513      	push	{r0, r1, r4, lr}
2fff32b6:	4c0f      	ldr	r4, [pc, #60]	; (2fff32f4 <get_part_number+0x40>)
2fff32b8:	6820      	ldr	r0, [r4, #0]
2fff32ba:	b9c0      	cbnz	r0, 2fff32ee <get_part_number+0x3a>
2fff32bc:	a801      	add	r0, sp, #4
2fff32be:	f005 fd2d 	bl	2fff8d1c <stm32mp1_dbgmcu_get_chip_dev_id>
2fff32c2:	2800      	cmp	r0, #0
2fff32c4:	da05      	bge.n	2fff32d2 <get_part_number+0x1e>
2fff32c6:	480c      	ldr	r0, [pc, #48]	; (2fff32f8 <get_part_number+0x44>)
2fff32c8:	f7ff fd28 	bl	2fff2d1c <tf_log>
2fff32cc:	f44f 63a0 	mov.w	r3, #1280	; 0x500
2fff32d0:	9301      	str	r3, [sp, #4]
2fff32d2:	4908      	ldr	r1, [pc, #32]	; (2fff32f4 <get_part_number+0x40>)
2fff32d4:	4809      	ldr	r0, [pc, #36]	; (2fff32fc <get_part_number+0x48>)
2fff32d6:	f7ff ffc9 	bl	2fff326c <stm32_get_otp_value>
2fff32da:	b118      	cbz	r0, 2fff32e4 <get_part_number+0x30>
2fff32dc:	f7ff fdc2 	bl	2fff2e64 <console_flush>
2fff32e0:	f005 eee0 	blx	2fff90a4 <do_panic>
2fff32e4:	7820      	ldrb	r0, [r4, #0]
2fff32e6:	9b01      	ldr	r3, [sp, #4]
2fff32e8:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
2fff32ec:	6020      	str	r0, [r4, #0]
2fff32ee:	b002      	add	sp, #8
2fff32f0:	bd10      	pop	{r4, pc}
2fff32f2:	bf00      	nop
2fff32f4:	2fffe874 	.word	0x2fffe874
2fff32f8:	2fffb640 	.word	0x2fffb640
2fff32fc:	2fffb666 	.word	0x2fffb666

2fff3300 <stm32mp_supports_cpu_opp>:
2fff3300:	1e43      	subs	r3, r0, #1
2fff3302:	2b01      	cmp	r3, #1
2fff3304:	b510      	push	{r4, lr}
2fff3306:	4604      	mov	r4, r0
2fff3308:	d814      	bhi.n	2fff3334 <stm32mp_supports_cpu_opp+0x34>
2fff330a:	f7ff ffd3 	bl	2fff32b4 <get_part_number>
2fff330e:	4b0b      	ldr	r3, [pc, #44]	; (2fff333c <stm32mp_supports_cpu_opp+0x3c>)
2fff3310:	4298      	cmp	r0, r3
2fff3312:	d80b      	bhi.n	2fff332c <stm32mp_supports_cpu_opp+0x2c>
2fff3314:	3b02      	subs	r3, #2
2fff3316:	4298      	cmp	r0, r3
2fff3318:	d80e      	bhi.n	2fff3338 <stm32mp_supports_cpu_opp+0x38>
2fff331a:	f100 437b 	add.w	r3, r0, #4211081216	; 0xfb000000
2fff331e:	3b80      	subs	r3, #128	; 0x80
2fff3320:	2b01      	cmp	r3, #1
2fff3322:	d909      	bls.n	2fff3338 <stm32mp_supports_cpu_opp+0x38>
2fff3324:	1e63      	subs	r3, r4, #1
2fff3326:	4258      	negs	r0, r3
2fff3328:	4158      	adcs	r0, r3
2fff332a:	bd10      	pop	{r4, pc}
2fff332c:	f100 437b 	add.w	r3, r0, #4211081216	; 0xfb000000
2fff3330:	3bae      	subs	r3, #174	; 0xae
2fff3332:	e7f5      	b.n	2fff3320 <stm32mp_supports_cpu_opp+0x20>
2fff3334:	2000      	movs	r0, #0
2fff3336:	e7f8      	b.n	2fff332a <stm32mp_supports_cpu_opp+0x2a>
2fff3338:	2001      	movs	r0, #1
2fff333a:	e7f6      	b.n	2fff332a <stm32mp_supports_cpu_opp+0x2a>
2fff333c:	050000a5 	.word	0x050000a5

2fff3340 <stm32mp_is_single_core>:
2fff3340:	b508      	push	{r3, lr}
2fff3342:	f7ff ffb7 	bl	2fff32b4 <get_part_number>
2fff3346:	4b08      	ldr	r3, [pc, #32]	; (2fff3368 <stm32mp_is_single_core+0x28>)
2fff3348:	4298      	cmp	r0, r3
2fff334a:	d805      	bhi.n	2fff3358 <stm32mp_is_single_core+0x18>
2fff334c:	3b02      	subs	r3, #2
2fff334e:	4298      	cmp	r0, r3
2fff3350:	bf94      	ite	ls
2fff3352:	2000      	movls	r0, #0
2fff3354:	2001      	movhi	r0, #1
2fff3356:	bd08      	pop	{r3, pc}
2fff3358:	f100 407b 	add.w	r0, r0, #4211081216	; 0xfb000000
2fff335c:	38ae      	subs	r0, #174	; 0xae
2fff335e:	2801      	cmp	r0, #1
2fff3360:	bf8c      	ite	hi
2fff3362:	2000      	movhi	r0, #0
2fff3364:	2001      	movls	r0, #1
2fff3366:	e7f6      	b.n	2fff3356 <stm32mp_is_single_core+0x16>
2fff3368:	0500002f 	.word	0x0500002f

2fff336c <stm32mp_plat_reset>:
2fff336c:	b580      	push	{r7, lr}
2fff336e:	2600      	movs	r6, #0
2fff3370:	4c28      	ldr	r4, [pc, #160]	; (2fff3414 <stm32mp_plat_reset+0xa8>)
2fff3372:	f640 47c5 	movw	r7, #3269	; 0xcc5
2fff3376:	4605      	mov	r5, r0
2fff3378:	f7ff ff0e 	bl	2fff3198 <stm32mp_mask_timer>
2fff337c:	6860      	ldr	r0, [r4, #4]
2fff337e:	f002 fa99 	bl	2fff58b4 <stm32mp_clk_is_enabled>
2fff3382:	b198      	cbz	r0, 2fff33ac <stm32mp_plat_reset+0x40>
2fff3384:	68a0      	ldr	r0, [r4, #8]
2fff3386:	2860      	cmp	r0, #96	; 0x60
2fff3388:	d10c      	bne.n	2fff33a4 <stm32mp_plat_reset+0x38>
2fff338a:	f8d4 8000 	ldr.w	r8, [r4]
2fff338e:	45b8      	cmp	r8, r7
2fff3390:	d126      	bne.n	2fff33e0 <stm32mp_plat_reset+0x74>
2fff3392:	f7ff fe89 	bl	2fff30a8 <stm32mp_rcc_base>
2fff3396:	f8d0 3198 	ldr.w	r3, [r0, #408]	; 0x198
2fff339a:	f043 0320 	orr.w	r3, r3, #32
2fff339e:	f8c0 3198 	str.w	r3, [r0, #408]	; 0x198
2fff33a2:	e003      	b.n	2fff33ac <stm32mp_plat_reset+0x40>
2fff33a4:	f7fb fed0 	bl	2ffef148 <etzpc_get_decprot>
2fff33a8:	2802      	cmp	r0, #2
2fff33aa:	d1ee      	bne.n	2fff338a <stm32mp_plat_reset+0x1e>
2fff33ac:	3601      	adds	r6, #1
2fff33ae:	340c      	adds	r4, #12
2fff33b0:	2e0b      	cmp	r6, #11
2fff33b2:	d1e3      	bne.n	2fff337c <stm32mp_plat_reset+0x10>
2fff33b4:	f7ff ffc4 	bl	2fff3340 <stm32mp_is_single_core>
2fff33b8:	bb20      	cbnz	r0, 2fff3404 <stm32mp_plat_reset+0x98>
2fff33ba:	fab5 f185 	clz	r1, r5
2fff33be:	2009      	movs	r0, #9
2fff33c0:	2530      	movs	r5, #48	; 0x30
2fff33c2:	0949      	lsrs	r1, r1, #5
2fff33c4:	f7fe f834 	bl	2fff1430 <gicv2_raise_sgi>
2fff33c8:	f7fe f8c4 	bl	2fff1554 <plat_ic_get_pending_interrupt_id>
2fff33cc:	f5b0 7f7f 	cmp.w	r0, #1020	; 0x3fc
2fff33d0:	4604      	mov	r4, r0
2fff33d2:	d219      	bcs.n	2fff3408 <stm32mp_plat_reset+0x9c>
2fff33d4:	f7fd ff50 	bl	2fff1278 <gicv2_end_of_interrupt>
2fff33d8:	4620      	mov	r0, r4
2fff33da:	f7fe f8c9 	bl	2fff1570 <plat_ic_disable_interrupt>
2fff33de:	e7f3      	b.n	2fff33c8 <stm32mp_plat_reset+0x5c>
2fff33e0:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff33e4:	4640      	mov	r0, r8
2fff33e6:	f004 ffcb 	bl	2fff8380 <stm32mp_reset_assert_to>
2fff33ea:	b118      	cbz	r0, 2fff33f4 <stm32mp_plat_reset+0x88>
2fff33ec:	f7ff fd3a 	bl	2fff2e64 <console_flush>
2fff33f0:	f005 ee58 	blx	2fff90a4 <do_panic>
2fff33f4:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff33f8:	4640      	mov	r0, r8
2fff33fa:	f004 fff9 	bl	2fff83f0 <stm32mp_reset_deassert_to>
2fff33fe:	2800      	cmp	r0, #0
2fff3400:	d0d4      	beq.n	2fff33ac <stm32mp_plat_reset+0x40>
2fff3402:	e7f3      	b.n	2fff33ec <stm32mp_plat_reset+0x80>
2fff3404:	2510      	movs	r5, #16
2fff3406:	e7df      	b.n	2fff33c8 <stm32mp_plat_reset+0x5c>
2fff3408:	f7ff fe4e 	bl	2fff30a8 <stm32mp_rcc_base>
2fff340c:	f8c0 5404 	str.w	r5, [r0, #1028]	; 0x404
2fff3410:	f7ff fecf 	bl	2fff31b2 <stm32mp_wait_cpu_reset>
2fff3414:	2fffb718 	.word	0x2fffb718

2fff3418 <stm32_iwdg_get_instance>:
2fff3418:	b508      	push	{r3, lr}
2fff341a:	4b07      	ldr	r3, [pc, #28]	; (2fff3438 <stm32_iwdg_get_instance+0x20>)
2fff341c:	4298      	cmp	r0, r3
2fff341e:	d006      	beq.n	2fff342e <stm32_iwdg_get_instance+0x16>
2fff3420:	4b06      	ldr	r3, [pc, #24]	; (2fff343c <stm32_iwdg_get_instance+0x24>)
2fff3422:	4298      	cmp	r0, r3
2fff3424:	d005      	beq.n	2fff3432 <stm32_iwdg_get_instance+0x1a>
2fff3426:	f7ff fd1d 	bl	2fff2e64 <console_flush>
2fff342a:	f005 ee3c 	blx	2fff90a4 <do_panic>
2fff342e:	2001      	movs	r0, #1
2fff3430:	bd08      	pop	{r3, pc}
2fff3432:	2000      	movs	r0, #0
2fff3434:	e7fc      	b.n	2fff3430 <stm32_iwdg_get_instance+0x18>
2fff3436:	bf00      	nop
2fff3438:	5a002000 	.word	0x5a002000
2fff343c:	5c003000 	.word	0x5c003000

2fff3440 <stm32_iwdg_get_otp_config>:
2fff3440:	b513      	push	{r0, r1, r4, lr}
2fff3442:	4604      	mov	r4, r0
2fff3444:	4811      	ldr	r0, [pc, #68]	; (2fff348c <stm32_iwdg_get_otp_config+0x4c>)
2fff3446:	a901      	add	r1, sp, #4
2fff3448:	f7ff ff10 	bl	2fff326c <stm32_get_otp_value>
2fff344c:	b118      	cbz	r0, 2fff3456 <stm32_iwdg_get_otp_config+0x16>
2fff344e:	f7ff fd09 	bl	2fff2e64 <console_flush>
2fff3452:	f005 ee28 	blx	2fff90a4 <do_panic>
2fff3456:	9a01      	ldr	r2, [sp, #4]
2fff3458:	2301      	movs	r3, #1
2fff345a:	1ce1      	adds	r1, r4, #3
2fff345c:	fa03 f101 	lsl.w	r1, r3, r1
2fff3460:	4211      	tst	r1, r2
2fff3462:	f104 0105 	add.w	r1, r4, #5
2fff3466:	f104 0407 	add.w	r4, r4, #7
2fff346a:	bf18      	it	ne
2fff346c:	4618      	movne	r0, r3
2fff346e:	fa03 f101 	lsl.w	r1, r3, r1
2fff3472:	bf08      	it	eq
2fff3474:	2000      	moveq	r0, #0
2fff3476:	40a3      	lsls	r3, r4
2fff3478:	4211      	tst	r1, r2
2fff347a:	bf18      	it	ne
2fff347c:	f040 0002 	orrne.w	r0, r0, #2
2fff3480:	4213      	tst	r3, r2
2fff3482:	bf18      	it	ne
2fff3484:	f040 0004 	orrne.w	r0, r0, #4
2fff3488:	b002      	add	sp, #8
2fff348a:	bd10      	pop	{r4, pc}
2fff348c:	2fffb676 	.word	0x2fffb676

2fff3490 <stm32mp_etzpc_binding2decprot>:
2fff3490:	2803      	cmp	r0, #3
2fff3492:	b508      	push	{r3, lr}
2fff3494:	d903      	bls.n	2fff349e <stm32mp_etzpc_binding2decprot+0xe>
2fff3496:	f7ff fce5 	bl	2fff2e64 <console_flush>
2fff349a:	f005 ee04 	blx	2fff90a4 <do_panic>
2fff349e:	bd08      	pop	{r3, pc}

2fff34a0 <xlat_arch_get_max_supported_pa>:
2fff34a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff34a4:	21ff      	movs	r1, #255	; 0xff
2fff34a6:	4770      	bx	lr

2fff34a8 <xlat_get_min_virt_addr_space_size>:
2fff34a8:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
2fff34ac:	4770      	bx	lr

2fff34ae <is_dcache_enabled>:
2fff34ae:	f3ef 8300 	mrs	r3, CPSR
2fff34b2:	f003 031f 	and.w	r3, r3, #31
2fff34b6:	2b1a      	cmp	r3, #26
2fff34b8:	d104      	bne.n	2fff34c4 <is_dcache_enabled+0x16>
2fff34ba:	ee91 0f10 	mrc	15, 4, r0, cr1, cr0, {0}
2fff34be:	f3c0 0080 	ubfx	r0, r0, #2, #1
2fff34c2:	4770      	bx	lr
2fff34c4:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff34c8:	e7f9      	b.n	2fff34be <is_dcache_enabled+0x10>
	...

2fff34cc <xlat_arch_regime_get_xn_desc>:
2fff34cc:	2801      	cmp	r0, #1
2fff34ce:	b508      	push	{r3, lr}
2fff34d0:	d005      	beq.n	2fff34de <xlat_arch_regime_get_xn_desc+0x12>
2fff34d2:	2802      	cmp	r0, #2
2fff34d4:	d007      	beq.n	2fff34e6 <xlat_arch_regime_get_xn_desc+0x1a>
2fff34d6:	4806      	ldr	r0, [pc, #24]	; (2fff34f0 <xlat_arch_regime_get_xn_desc+0x24>)
2fff34d8:	2154      	movs	r1, #84	; 0x54
2fff34da:	f006 fe1d 	bl	2fffa118 <__assert>
2fff34de:	2000      	movs	r0, #0
2fff34e0:	f44f 01c0 	mov.w	r1, #6291456	; 0x600000
2fff34e4:	bd08      	pop	{r3, pc}
2fff34e6:	2000      	movs	r0, #0
2fff34e8:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
2fff34ec:	e7fa      	b.n	2fff34e4 <xlat_arch_regime_get_xn_desc+0x18>
2fff34ee:	bf00      	nop
2fff34f0:	2fffb79c 	.word	0x2fffb79c

2fff34f4 <xlat_arch_tlbi_va>:
2fff34f4:	b508      	push	{r3, lr}
2fff34f6:	f3bf 8f4a 	dsb	ishst
2fff34fa:	f420 607f 	bic.w	r0, r0, #4080	; 0xff0
2fff34fe:	2901      	cmp	r1, #1
2fff3500:	f020 000f 	bic.w	r0, r0, #15
2fff3504:	d102      	bne.n	2fff350c <xlat_arch_tlbi_va+0x18>
2fff3506:	ee08 0f73 	mcr	15, 0, r0, cr8, cr3, {3}
2fff350a:	bd08      	pop	{r3, pc}
2fff350c:	2902      	cmp	r1, #2
2fff350e:	d003      	beq.n	2fff3518 <xlat_arch_tlbi_va+0x24>
2fff3510:	4803      	ldr	r0, [pc, #12]	; (2fff3520 <xlat_arch_tlbi_va+0x2c>)
2fff3512:	2164      	movs	r1, #100	; 0x64
2fff3514:	f006 fe00 	bl	2fffa118 <__assert>
2fff3518:	ee88 0f33 	mcr	15, 4, r0, cr8, cr3, {1}
2fff351c:	e7f5      	b.n	2fff350a <xlat_arch_tlbi_va+0x16>
2fff351e:	bf00      	nop
2fff3520:	2fffb79c 	.word	0x2fffb79c

2fff3524 <xlat_arch_tlbi_va_sync>:
2fff3524:	2300      	movs	r3, #0
2fff3526:	ee07 3fd1 	mcr	15, 0, r3, cr7, cr1, {6}
2fff352a:	f3bf 8f4b 	dsb	ish
2fff352e:	f3bf 8f6f 	isb	sy
2fff3532:	4770      	bx	lr

2fff3534 <xlat_arch_current_el>:
2fff3534:	b508      	push	{r3, lr}
2fff3536:	f3ef 8300 	mrs	r3, CPSR
2fff353a:	f003 031f 	and.w	r3, r3, #31
2fff353e:	2b1a      	cmp	r3, #26
2fff3540:	d00f      	beq.n	2fff3562 <xlat_arch_current_el+0x2e>
2fff3542:	f3ef 8300 	mrs	r3, CPSR
2fff3546:	f003 031f 	and.w	r3, r3, #31
2fff354a:	2b13      	cmp	r3, #19
2fff354c:	d00b      	beq.n	2fff3566 <xlat_arch_current_el+0x32>
2fff354e:	f3ef 8300 	mrs	r3, CPSR
2fff3552:	f003 031f 	and.w	r3, r3, #31
2fff3556:	2b16      	cmp	r3, #22
2fff3558:	d005      	beq.n	2fff3566 <xlat_arch_current_el+0x32>
2fff355a:	4804      	ldr	r0, [pc, #16]	; (2fff356c <xlat_arch_current_el+0x38>)
2fff355c:	2188      	movs	r1, #136	; 0x88
2fff355e:	f006 fddb 	bl	2fffa118 <__assert>
2fff3562:	2002      	movs	r0, #2
2fff3564:	bd08      	pop	{r3, pc}
2fff3566:	2001      	movs	r0, #1
2fff3568:	e7fc      	b.n	2fff3564 <xlat_arch_current_el+0x30>
2fff356a:	bf00      	nop
2fff356c:	2fffb79c 	.word	0x2fffb79c

2fff3570 <is_mmu_enabled_ctx>:
2fff3570:	b508      	push	{r3, lr}
2fff3572:	6c43      	ldr	r3, [r0, #68]	; 0x44
2fff3574:	2b01      	cmp	r3, #1
2fff3576:	d10c      	bne.n	2fff3592 <is_mmu_enabled_ctx+0x22>
2fff3578:	f7ff ffdc 	bl	2fff3534 <xlat_arch_current_el>
2fff357c:	2801      	cmp	r0, #1
2fff357e:	d003      	beq.n	2fff3588 <is_mmu_enabled_ctx+0x18>
2fff3580:	213d      	movs	r1, #61	; 0x3d
2fff3582:	480a      	ldr	r0, [pc, #40]	; (2fff35ac <is_mmu_enabled_ctx+0x3c>)
2fff3584:	f006 fdc8 	bl	2fffa118 <__assert>
2fff3588:	ee11 0f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff358c:	f000 0001 	and.w	r0, r0, #1
2fff3590:	bd08      	pop	{r3, pc}
2fff3592:	2b02      	cmp	r3, #2
2fff3594:	d001      	beq.n	2fff359a <is_mmu_enabled_ctx+0x2a>
2fff3596:	2140      	movs	r1, #64	; 0x40
2fff3598:	e7f3      	b.n	2fff3582 <is_mmu_enabled_ctx+0x12>
2fff359a:	f7ff ffcb 	bl	2fff3534 <xlat_arch_current_el>
2fff359e:	2802      	cmp	r0, #2
2fff35a0:	d001      	beq.n	2fff35a6 <is_mmu_enabled_ctx+0x36>
2fff35a2:	2141      	movs	r1, #65	; 0x41
2fff35a4:	e7ed      	b.n	2fff3582 <is_mmu_enabled_ctx+0x12>
2fff35a6:	ee91 0f10 	mrc	15, 4, r0, cr1, cr0, {0}
2fff35aa:	e7ef      	b.n	2fff358c <is_mmu_enabled_ctx+0x1c>
2fff35ac:	2fffb79c 	.word	0x2fffb79c

2fff35b0 <setup_mmu_cfg>:
2fff35b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff35b2:	4616      	mov	r6, r2
2fff35b4:	9a09      	ldr	r2, [sp, #36]	; 0x24
2fff35b6:	460f      	mov	r7, r1
2fff35b8:	9908      	ldr	r1, [sp, #32]
2fff35ba:	4604      	mov	r4, r0
2fff35bc:	2a01      	cmp	r2, #1
2fff35be:	d10f      	bne.n	2fff35e0 <setup_mmu_cfg+0x30>
2fff35c0:	f3ef 8200 	mrs	r2, CPSR
2fff35c4:	f002 021f 	and.w	r2, r2, #31
2fff35c8:	2a13      	cmp	r2, #19
2fff35ca:	d015      	beq.n	2fff35f8 <setup_mmu_cfg+0x48>
2fff35cc:	f3ef 8200 	mrs	r2, CPSR
2fff35d0:	f002 021f 	and.w	r2, r2, #31
2fff35d4:	2a16      	cmp	r2, #22
2fff35d6:	d00f      	beq.n	2fff35f8 <setup_mmu_cfg+0x48>
2fff35d8:	21b1      	movs	r1, #177	; 0xb1
2fff35da:	481c      	ldr	r0, [pc, #112]	; (2fff364c <setup_mmu_cfg+0x9c>)
2fff35dc:	f006 fd9c 	bl	2fffa118 <__assert>
2fff35e0:	2a02      	cmp	r2, #2
2fff35e2:	d001      	beq.n	2fff35e8 <setup_mmu_cfg+0x38>
2fff35e4:	21b8      	movs	r1, #184	; 0xb8
2fff35e6:	e7f8      	b.n	2fff35da <setup_mmu_cfg+0x2a>
2fff35e8:	f3ef 8200 	mrs	r2, CPSR
2fff35ec:	f002 021f 	and.w	r2, r2, #31
2fff35f0:	2a1a      	cmp	r2, #26
2fff35f2:	d00a      	beq.n	2fff360a <setup_mmu_cfg+0x5a>
2fff35f4:	21b9      	movs	r1, #185	; 0xb9
2fff35f6:	e7f0      	b.n	2fff35da <setup_mmu_cfg+0x2a>
2fff35f8:	4d15      	ldr	r5, [pc, #84]	; (2fff3650 <setup_mmu_cfg+0xa0>)
2fff35fa:	1c4a      	adds	r2, r1, #1
2fff35fc:	d010      	beq.n	2fff3620 <setup_mmu_cfg+0x70>
2fff35fe:	1c48      	adds	r0, r1, #1
2fff3600:	f1b0 7f00 	cmp.w	r0, #33554432	; 0x2000000
2fff3604:	d203      	bcs.n	2fff360e <setup_mmu_cfg+0x5e>
2fff3606:	21cc      	movs	r1, #204	; 0xcc
2fff3608:	e7e7      	b.n	2fff35da <setup_mmu_cfg+0x2a>
2fff360a:	4d12      	ldr	r5, [pc, #72]	; (2fff3654 <setup_mmu_cfg+0xa4>)
2fff360c:	e7f5      	b.n	2fff35fa <setup_mmu_cfg+0x4a>
2fff360e:	4001      	ands	r1, r0
2fff3610:	d001      	beq.n	2fff3616 <setup_mmu_cfg+0x66>
2fff3612:	21d0      	movs	r1, #208	; 0xd0
2fff3614:	e7e1      	b.n	2fff35da <setup_mmu_cfg+0x2a>
2fff3616:	f7ff fc59 	bl	2fff2ecc <__ctzdi2>
2fff361a:	f1c0 0020 	rsb	r0, r0, #32
2fff361e:	4305      	orrs	r5, r0
2fff3620:	07bb      	lsls	r3, r7, #30
2fff3622:	bf58      	it	pl
2fff3624:	f445 5554 	orrpl.w	r5, r5, #13568	; 0x3500
2fff3628:	ee10 3fd2 	mrc	15, 0, r3, cr0, cr2, {6}
2fff362c:	480a      	ldr	r0, [pc, #40]	; (2fff3658 <setup_mmu_cfg+0xa8>)
2fff362e:	f413 4f70 	tst.w	r3, #61440	; 0xf000
2fff3632:	bf18      	it	ne
2fff3634:	f046 0601 	orrne.w	r6, r6, #1
2fff3638:	2300      	movs	r3, #0
2fff363a:	2100      	movs	r1, #0
2fff363c:	e9c4 0100 	strd	r0, r1, [r4]
2fff3640:	e9c4 5302 	strd	r5, r3, [r4, #8]
2fff3644:	e9c4 6304 	strd	r6, r3, [r4, #16]
2fff3648:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff364a:	bf00      	nop
2fff364c:	2fffb79c 	.word	0x2fffb79c
2fff3650:	80800000 	.word	0x80800000
2fff3654:	80803500 	.word	0x80803500
2fff3658:	004404ff 	.word	0x004404ff

2fff365c <mmap_add_region>:
2fff365c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2fff365e:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff3662:	9b08      	ldr	r3, [sp, #32]
2fff3664:	e9cd 0100 	strd	r0, r1, [sp]
2fff3668:	9304      	str	r3, [sp, #16]
2fff366a:	4669      	mov	r1, sp
2fff366c:	4804      	ldr	r0, [pc, #16]	; (2fff3680 <mmap_add_region+0x24>)
2fff366e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
2fff3672:	9305      	str	r3, [sp, #20]
2fff3674:	f000 fb0e 	bl	2fff3c94 <mmap_add_region_ctx>
2fff3678:	b007      	add	sp, #28
2fff367a:	f85d fb04 	ldr.w	pc, [sp], #4
2fff367e:	bf00      	nop
2fff3680:	2fffd3b0 	.word	0x2fffd3b0

2fff3684 <mmap_add>:
2fff3684:	4601      	mov	r1, r0
2fff3686:	4801      	ldr	r0, [pc, #4]	; (2fff368c <mmap_add+0x8>)
2fff3688:	f000 bb7c 	b.w	2fff3d84 <mmap_add_ctx>
2fff368c:	2fffd3b0 	.word	0x2fffd3b0

2fff3690 <mmap_add_dynamic_region>:
2fff3690:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
2fff3692:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff3696:	9b08      	ldr	r3, [sp, #32]
2fff3698:	e9cd 0100 	strd	r0, r1, [sp]
2fff369c:	9304      	str	r3, [sp, #16]
2fff369e:	4669      	mov	r1, sp
2fff36a0:	4804      	ldr	r0, [pc, #16]	; (2fff36b4 <mmap_add_dynamic_region+0x24>)
2fff36a2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
2fff36a6:	9305      	str	r3, [sp, #20]
2fff36a8:	f000 fb78 	bl	2fff3d9c <mmap_add_dynamic_region_ctx>
2fff36ac:	b007      	add	sp, #28
2fff36ae:	f85d fb04 	ldr.w	pc, [sp], #4
2fff36b2:	bf00      	nop
2fff36b4:	2fffd3b0 	.word	0x2fffd3b0

2fff36b8 <mmap_remove_dynamic_region>:
2fff36b8:	460a      	mov	r2, r1
2fff36ba:	4601      	mov	r1, r0
2fff36bc:	4801      	ldr	r0, [pc, #4]	; (2fff36c4 <mmap_remove_dynamic_region+0xc>)
2fff36be:	f000 bc21 	b.w	2fff3f04 <mmap_remove_dynamic_region_ctx>
2fff36c2:	bf00      	nop
2fff36c4:	2fffd3b0 	.word	0x2fffd3b0

2fff36c8 <init_xlat_tables>:
2fff36c8:	b510      	push	{r4, lr}
2fff36ca:	4c0c      	ldr	r4, [pc, #48]	; (2fff36fc <init_xlat_tables+0x34>)
2fff36cc:	6c63      	ldr	r3, [r4, #68]	; 0x44
2fff36ce:	3301      	adds	r3, #1
2fff36d0:	d003      	beq.n	2fff36da <init_xlat_tables+0x12>
2fff36d2:	2160      	movs	r1, #96	; 0x60
2fff36d4:	480a      	ldr	r0, [pc, #40]	; (2fff3700 <init_xlat_tables+0x38>)
2fff36d6:	f006 fd1f 	bl	2fffa118 <__assert>
2fff36da:	f7ff ff2b 	bl	2fff3534 <xlat_arch_current_el>
2fff36de:	2801      	cmp	r0, #1
2fff36e0:	d105      	bne.n	2fff36ee <init_xlat_tables+0x26>
2fff36e2:	6460      	str	r0, [r4, #68]	; 0x44
2fff36e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff36e8:	4804      	ldr	r0, [pc, #16]	; (2fff36fc <init_xlat_tables+0x34>)
2fff36ea:	f000 bc91 	b.w	2fff4010 <init_xlat_tables_ctx>
2fff36ee:	2802      	cmp	r0, #2
2fff36f0:	d0f7      	beq.n	2fff36e2 <init_xlat_tables+0x1a>
2fff36f2:	2803      	cmp	r0, #3
2fff36f4:	d0f5      	beq.n	2fff36e2 <init_xlat_tables+0x1a>
2fff36f6:	2169      	movs	r1, #105	; 0x69
2fff36f8:	e7ec      	b.n	2fff36d4 <init_xlat_tables+0xc>
2fff36fa:	bf00      	nop
2fff36fc:	2fffd3b0 	.word	0x2fffd3b0
2fff3700:	2fffb7ca 	.word	0x2fffb7ca

2fff3704 <enable_mmu_svc_mon>:
2fff3704:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff3706:	2201      	movs	r2, #1
2fff3708:	4b09      	ldr	r3, [pc, #36]	; (2fff3730 <enable_mmu_svc_mon+0x2c>)
2fff370a:	4604      	mov	r4, r0
2fff370c:	9203      	str	r2, [sp, #12]
2fff370e:	689a      	ldr	r2, [r3, #8]
2fff3710:	9202      	str	r2, [sp, #8]
2fff3712:	e9d3 0100 	ldrd	r0, r1, [r3]
2fff3716:	e9cd 0100 	strd	r0, r1, [sp]
2fff371a:	4806      	ldr	r0, [pc, #24]	; (2fff3734 <enable_mmu_svc_mon+0x30>)
2fff371c:	4621      	mov	r1, r4
2fff371e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
2fff3720:	f7ff ff46 	bl	2fff35b0 <setup_mmu_cfg>
2fff3724:	4620      	mov	r0, r4
2fff3726:	b004      	add	sp, #16
2fff3728:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff372c:	f009 bb90 	b.w	2fffce50 <__enable_mmu_direct_svc_mon_from_thumb>
2fff3730:	2fffd3b0 	.word	0x2fffd3b0
2fff3734:	2fffec88 	.word	0x2fffec88

2fff3738 <mmap_add_region_check>:
2fff3738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff373c:	2700      	movs	r7, #0
2fff373e:	e9d1 8900 	ldrd	r8, r9, [r1]
2fff3742:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
2fff3746:	f3c8 060b 	ubfx	r6, r8, #0, #12
2fff374a:	f118 3aff 	adds.w	sl, r8, #4294967295	; 0xffffffff
2fff374e:	f149 3bff 	adc.w	fp, r9, #4294967295	; 0xffffffff
2fff3752:	b089      	sub	sp, #36	; 0x24
2fff3754:	eb1a 0a05 	adds.w	sl, sl, r5
2fff3758:	f14b 0b00 	adc.w	fp, fp, #0
2fff375c:	433e      	orrs	r6, r7
2fff375e:	eb02 0405 	add.w	r4, r2, r5
2fff3762:	694b      	ldr	r3, [r1, #20]
2fff3764:	f104 34ff 	add.w	r4, r4, #4294967295	; 0xffffffff
2fff3768:	e9cd ab00 	strd	sl, fp, [sp]
2fff376c:	f040 8082 	bne.w	2fff3874 <mmap_add_region_check+0x13c>
2fff3770:	ea42 0605 	orr.w	r6, r2, r5
2fff3774:	f3c6 060b 	ubfx	r6, r6, #0, #12
2fff3778:	2e00      	cmp	r6, #0
2fff377a:	d17b      	bne.n	2fff3874 <mmap_add_region_check+0x13c>
2fff377c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
2fff3780:	d005      	beq.n	2fff378e <mmap_add_region_check+0x56>
2fff3782:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
2fff3786:	d002      	beq.n	2fff378e <mmap_add_region_check+0x56>
2fff3788:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
2fff378c:	d172      	bne.n	2fff3874 <mmap_add_region_check+0x13c>
2fff378e:	e9dd 6700 	ldrd	r6, r7, [sp]
2fff3792:	454f      	cmp	r7, r9
2fff3794:	bf08      	it	eq
2fff3796:	4546      	cmpeq	r6, r8
2fff3798:	d36f      	bcc.n	2fff387a <mmap_add_region_check+0x142>
2fff379a:	42a2      	cmp	r2, r4
2fff379c:	d86d      	bhi.n	2fff387a <mmap_add_region_check+0x142>
2fff379e:	6883      	ldr	r3, [r0, #8]
2fff37a0:	42a3      	cmp	r3, r4
2fff37a2:	d36a      	bcc.n	2fff387a <mmap_add_region_check+0x142>
2fff37a4:	e9d0 6700 	ldrd	r6, r7, [r0]
2fff37a8:	e9dd ab00 	ldrd	sl, fp, [sp]
2fff37ac:	455f      	cmp	r7, fp
2fff37ae:	bf08      	it	eq
2fff37b0:	4556      	cmpeq	r6, sl
2fff37b2:	d362      	bcc.n	2fff387a <mmap_add_region_check+0x142>
2fff37b4:	68c3      	ldr	r3, [r0, #12]
2fff37b6:	2618      	movs	r6, #24
2fff37b8:	6900      	ldr	r0, [r0, #16]
2fff37ba:	fb06 3000 	mla	r0, r6, r0, r3
2fff37be:	f850 0c0c 	ldr.w	r0, [r0, #-12]
2fff37c2:	2800      	cmp	r0, #0
2fff37c4:	d15c      	bne.n	2fff3880 <mmap_add_region_check+0x148>
2fff37c6:	ebb2 0008 	subs.w	r0, r2, r8
2fff37ca:	4433      	add	r3, r6
2fff37cc:	9006      	str	r0, [sp, #24]
2fff37ce:	eb69 0049 	sbc.w	r0, r9, r9, lsl #1
2fff37d2:	9007      	str	r0, [sp, #28]
2fff37d4:	f853 0c0c 	ldr.w	r0, [r3, #-12]
2fff37d8:	b910      	cbnz	r0, 2fff37e0 <mmap_add_region_check+0xa8>
2fff37da:	b009      	add	sp, #36	; 0x24
2fff37dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff37e0:	f853 cc10 	ldr.w	ip, [r3, #-16]
2fff37e4:	4594      	cmp	ip, r2
2fff37e6:	eb0c 0e00 	add.w	lr, ip, r0
2fff37ea:	f10e 3eff 	add.w	lr, lr, #4294967295	; 0xffffffff
2fff37ee:	d820      	bhi.n	2fff3832 <mmap_add_region_check+0xfa>
2fff37f0:	4574      	cmp	r4, lr
2fff37f2:	d920      	bls.n	2fff3836 <mmap_add_region_check+0xfe>
2fff37f4:	4594      	cmp	ip, r2
2fff37f6:	d01e      	beq.n	2fff3836 <mmap_add_region_check+0xfe>
2fff37f8:	e953 ab06 	ldrd	sl, fp, [r3, #-24]
2fff37fc:	e9dd 6700 	ldrd	r6, r7, [sp]
2fff3800:	455f      	cmp	r7, fp
2fff3802:	bf08      	it	eq
2fff3804:	4556      	cmpeq	r6, sl
2fff3806:	d33e      	bcc.n	2fff3886 <mmap_add_region_check+0x14e>
2fff3808:	f11a 36ff 	adds.w	r6, sl, #4294967295	; 0xffffffff
2fff380c:	9604      	str	r6, [sp, #16]
2fff380e:	f14b 36ff 	adc.w	r6, fp, #4294967295	; 0xffffffff
2fff3812:	9605      	str	r6, [sp, #20]
2fff3814:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
2fff3818:	1836      	adds	r6, r6, r0
2fff381a:	f147 0700 	adc.w	r7, r7, #0
2fff381e:	45a4      	cmp	ip, r4
2fff3820:	d801      	bhi.n	2fff3826 <mmap_add_region_check+0xee>
2fff3822:	4572      	cmp	r2, lr
2fff3824:	d923      	bls.n	2fff386e <mmap_add_region_check+0x136>
2fff3826:	454f      	cmp	r7, r9
2fff3828:	bf08      	it	eq
2fff382a:	4546      	cmpeq	r6, r8
2fff382c:	d21f      	bcs.n	2fff386e <mmap_add_region_check+0x136>
2fff382e:	3318      	adds	r3, #24
2fff3830:	e7d0      	b.n	2fff37d4 <mmap_add_region_check+0x9c>
2fff3832:	4574      	cmp	r4, lr
2fff3834:	d3e0      	bcc.n	2fff37f8 <mmap_add_region_check+0xc0>
2fff3836:	690e      	ldr	r6, [r1, #16]
2fff3838:	2e00      	cmp	r6, #0
2fff383a:	db18      	blt.n	2fff386e <mmap_add_region_check+0x136>
2fff383c:	f853 6c08 	ldr.w	r6, [r3, #-8]
2fff3840:	2e00      	cmp	r6, #0
2fff3842:	db14      	blt.n	2fff386e <mmap_add_region_check+0x136>
2fff3844:	e953 6706 	ldrd	r6, r7, [r3, #-24]
2fff3848:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
2fff384c:	ebbc 0606 	subs.w	r6, ip, r6
2fff3850:	46e6      	mov	lr, ip
2fff3852:	9602      	str	r6, [sp, #8]
2fff3854:	eb67 0647 	sbc.w	r6, r7, r7, lsl #1
2fff3858:	9603      	str	r6, [sp, #12]
2fff385a:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
2fff385e:	455f      	cmp	r7, fp
2fff3860:	bf08      	it	eq
2fff3862:	4556      	cmpeq	r6, sl
2fff3864:	d103      	bne.n	2fff386e <mmap_add_region_check+0x136>
2fff3866:	4594      	cmp	ip, r2
2fff3868:	d1e1      	bne.n	2fff382e <mmap_add_region_check+0xf6>
2fff386a:	42a8      	cmp	r0, r5
2fff386c:	d1df      	bne.n	2fff382e <mmap_add_region_check+0xf6>
2fff386e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff3872:	e7b2      	b.n	2fff37da <mmap_add_region_check+0xa2>
2fff3874:	f06f 0015 	mvn.w	r0, #21
2fff3878:	e7af      	b.n	2fff37da <mmap_add_region_check+0xa2>
2fff387a:	f06f 0021 	mvn.w	r0, #33	; 0x21
2fff387e:	e7ac      	b.n	2fff37da <mmap_add_region_check+0xa2>
2fff3880:	f06f 000b 	mvn.w	r0, #11
2fff3884:	e7a9      	b.n	2fff37da <mmap_add_region_check+0xa2>
2fff3886:	45a4      	cmp	ip, r4
2fff3888:	d8d1      	bhi.n	2fff382e <mmap_add_region_check+0xf6>
2fff388a:	4572      	cmp	r2, lr
2fff388c:	d8cf      	bhi.n	2fff382e <mmap_add_region_check+0xf6>
2fff388e:	e7ee      	b.n	2fff386e <mmap_add_region_check+0x136>

2fff3890 <xlat_clean_dcache_range>:
2fff3890:	b538      	push	{r3, r4, r5, lr}
2fff3892:	4604      	mov	r4, r0
2fff3894:	460d      	mov	r5, r1
2fff3896:	f7ff fe0a 	bl	2fff34ae <is_dcache_enabled>
2fff389a:	b128      	cbz	r0, 2fff38a8 <xlat_clean_dcache_range+0x18>
2fff389c:	4629      	mov	r1, r5
2fff389e:	4620      	mov	r0, r4
2fff38a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff38a4:	f009 bacc 	b.w	2fffce40 <__clean_dcache_range_from_thumb>
2fff38a8:	bd38      	pop	{r3, r4, r5, pc}
	...

2fff38ac <xlat_table_get_index>:
2fff38ac:	4603      	mov	r3, r0
2fff38ae:	b510      	push	{r4, lr}
2fff38b0:	6984      	ldr	r4, [r0, #24]
2fff38b2:	2000      	movs	r0, #0
2fff38b4:	4284      	cmp	r4, r0
2fff38b6:	dc03      	bgt.n	2fff38c0 <xlat_table_get_index+0x14>
2fff38b8:	4805      	ldr	r0, [pc, #20]	; (2fff38d0 <xlat_table_get_index+0x24>)
2fff38ba:	2135      	movs	r1, #53	; 0x35
2fff38bc:	f006 fc2c 	bl	2fffa118 <__assert>
2fff38c0:	695a      	ldr	r2, [r3, #20]
2fff38c2:	eb02 3200 	add.w	r2, r2, r0, lsl #12
2fff38c6:	4291      	cmp	r1, r2
2fff38c8:	d001      	beq.n	2fff38ce <xlat_table_get_index+0x22>
2fff38ca:	3001      	adds	r0, #1
2fff38cc:	e7f2      	b.n	2fff38b4 <xlat_table_get_index+0x8>
2fff38ce:	bd10      	pop	{r4, pc}
2fff38d0:	2fffb7f3 	.word	0x2fffb7f3

2fff38d4 <xlat_tables_unmap_region>:
2fff38d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff38d8:	b089      	sub	sp, #36	; 0x24
2fff38da:	469a      	mov	sl, r3
2fff38dc:	460e      	mov	r6, r1
2fff38de:	9f13      	ldr	r7, [sp, #76]	; 0x4c
2fff38e0:	4605      	mov	r5, r0
2fff38e2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
2fff38e4:	4611      	mov	r1, r2
2fff38e6:	42bb      	cmp	r3, r7
2fff38e8:	d801      	bhi.n	2fff38ee <xlat_tables_unmap_region+0x1a>
2fff38ea:	2f03      	cmp	r7, #3
2fff38ec:	d904      	bls.n	2fff38f8 <xlat_tables_unmap_region+0x24>
2fff38ee:	f240 115f 	movw	r1, #351	; 0x15f
2fff38f2:	484d      	ldr	r0, [pc, #308]	; (2fff3a28 <xlat_tables_unmap_region+0x154>)
2fff38f4:	f006 fc10 	bl	2fffa118 <__assert>
2fff38f8:	e9d6 2302 	ldrd	r2, r3, [r6, #8]
2fff38fc:	f06f 0408 	mvn.w	r4, #8
2fff3900:	f04f 0901 	mov.w	r9, #1
2fff3904:	4413      	add	r3, r2
2fff3906:	437c      	muls	r4, r7
2fff3908:	428a      	cmp	r2, r1
2fff390a:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
2fff390e:	9306      	str	r3, [sp, #24]
2fff3910:	f104 0327 	add.w	r3, r4, #39	; 0x27
2fff3914:	bf98      	it	ls
2fff3916:	460a      	movls	r2, r1
2fff3918:	fa09 f003 	lsl.w	r0, r9, r3
2fff391c:	9005      	str	r0, [sp, #20]
2fff391e:	bf84      	itt	hi
2fff3920:	4240      	neghi	r0, r0
2fff3922:	4002      	andhi	r2, r0
2fff3924:	1a54      	subs	r4, r2, r1
2fff3926:	40dc      	lsrs	r4, r3
2fff3928:	eb0a 08c4 	add.w	r8, sl, r4, lsl #3
2fff392c:	9b12      	ldr	r3, [sp, #72]	; 0x48
2fff392e:	429c      	cmp	r4, r3
2fff3930:	d26a      	bcs.n	2fff3a08 <xlat_tables_unmap_region+0x134>
2fff3932:	9b05      	ldr	r3, [sp, #20]
2fff3934:	eb02 0b03 	add.w	fp, r2, r3
2fff3938:	f8d8 3000 	ldr.w	r3, [r8]
2fff393c:	f003 0103 	and.w	r1, r3, #3
2fff3940:	9102      	str	r1, [sp, #8]
2fff3942:	2100      	movs	r1, #0
2fff3944:	9103      	str	r1, [sp, #12]
2fff3946:	e9d6 1002 	ldrd	r1, r0, [r6, #8]
2fff394a:	428a      	cmp	r2, r1
2fff394c:	eb01 0c00 	add.w	ip, r1, r0
2fff3950:	f10b 30ff 	add.w	r0, fp, #4294967295	; 0xffffffff
2fff3954:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
2fff3958:	d317      	bcc.n	2fff398a <xlat_tables_unmap_region+0xb6>
2fff395a:	4584      	cmp	ip, r0
2fff395c:	d315      	bcc.n	2fff398a <xlat_tables_unmap_region+0xb6>
2fff395e:	2f03      	cmp	r7, #3
2fff3960:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
2fff3964:	d106      	bne.n	2fff3974 <xlat_tables_unmap_region+0xa0>
2fff3966:	2900      	cmp	r1, #0
2fff3968:	bf08      	it	eq
2fff396a:	2803      	cmpeq	r0, #3
2fff396c:	d03e      	beq.n	2fff39ec <xlat_tables_unmap_region+0x118>
2fff396e:	f44f 7196 	mov.w	r1, #300	; 0x12c
2fff3972:	e7be      	b.n	2fff38f2 <xlat_tables_unmap_region+0x1e>
2fff3974:	2900      	cmp	r1, #0
2fff3976:	bf08      	it	eq
2fff3978:	2803      	cmpeq	r0, #3
2fff397a:	d01a      	beq.n	2fff39b2 <xlat_tables_unmap_region+0xde>
2fff397c:	2900      	cmp	r1, #0
2fff397e:	bf08      	it	eq
2fff3980:	2801      	cmpeq	r0, #1
2fff3982:	d033      	beq.n	2fff39ec <xlat_tables_unmap_region+0x118>
2fff3984:	f240 113b 	movw	r1, #315	; 0x13b
2fff3988:	e7b3      	b.n	2fff38f2 <xlat_tables_unmap_region+0x1e>
2fff398a:	4281      	cmp	r1, r0
2fff398c:	d901      	bls.n	2fff3992 <xlat_tables_unmap_region+0xbe>
2fff398e:	4562      	cmp	r2, ip
2fff3990:	d834      	bhi.n	2fff39fc <xlat_tables_unmap_region+0x128>
2fff3992:	2f03      	cmp	r7, #3
2fff3994:	d102      	bne.n	2fff399c <xlat_tables_unmap_region+0xc8>
2fff3996:	f44f 71a5 	mov.w	r1, #330	; 0x14a
2fff399a:	e7aa      	b.n	2fff38f2 <xlat_tables_unmap_region+0x1e>
2fff399c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
2fff39a0:	2900      	cmp	r1, #0
2fff39a2:	bf08      	it	eq
2fff39a4:	2803      	cmpeq	r0, #3
2fff39a6:	d004      	beq.n	2fff39b2 <xlat_tables_unmap_region+0xde>
2fff39a8:	f240 114b 	movw	r1, #331	; 0x14b
2fff39ac:	e7a1      	b.n	2fff38f2 <xlat_tables_unmap_region+0x1e>
2fff39ae:	465a      	mov	r2, fp
2fff39b0:	e7bc      	b.n	2fff392c <xlat_tables_unmap_region+0x58>
2fff39b2:	f423 697f 	bic.w	r9, r3, #4080	; 0xff0
2fff39b6:	1c79      	adds	r1, r7, #1
2fff39b8:	f029 090f 	bic.w	r9, r9, #15
2fff39bc:	4628      	mov	r0, r5
2fff39be:	9101      	str	r1, [sp, #4]
2fff39c0:	f44f 7100 	mov.w	r1, #512	; 0x200
2fff39c4:	9100      	str	r1, [sp, #0]
2fff39c6:	464b      	mov	r3, r9
2fff39c8:	9207      	str	r2, [sp, #28]
2fff39ca:	4631      	mov	r1, r6
2fff39cc:	f7ff ff82 	bl	2fff38d4 <xlat_tables_unmap_region>
2fff39d0:	f44f 5180 	mov.w	r1, #4096	; 0x1000
2fff39d4:	4648      	mov	r0, r9
2fff39d6:	f7ff ff5b 	bl	2fff3890 <xlat_clean_dcache_range>
2fff39da:	4649      	mov	r1, r9
2fff39dc:	4628      	mov	r0, r5
2fff39de:	f7ff ff65 	bl	2fff38ac <xlat_table_get_index>
2fff39e2:	69eb      	ldr	r3, [r5, #28]
2fff39e4:	9a07      	ldr	r2, [sp, #28]
2fff39e6:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
2fff39ea:	b93b      	cbnz	r3, 2fff39fc <xlat_tables_unmap_region+0x128>
2fff39ec:	2000      	movs	r0, #0
2fff39ee:	2100      	movs	r1, #0
2fff39f0:	e9c8 0100 	strd	r0, r1, [r8]
2fff39f4:	6c69      	ldr	r1, [r5, #68]	; 0x44
2fff39f6:	4610      	mov	r0, r2
2fff39f8:	f7ff fd7c 	bl	2fff34f4 <xlat_arch_tlbi_va>
2fff39fc:	9b06      	ldr	r3, [sp, #24]
2fff39fe:	3401      	adds	r4, #1
2fff3a00:	f108 0808 	add.w	r8, r8, #8
2fff3a04:	459b      	cmp	fp, r3
2fff3a06:	d3d2      	bcc.n	2fff39ae <xlat_tables_unmap_region+0xda>
2fff3a08:	6beb      	ldr	r3, [r5, #60]	; 0x3c
2fff3a0a:	42bb      	cmp	r3, r7
2fff3a0c:	d209      	bcs.n	2fff3a22 <xlat_tables_unmap_region+0x14e>
2fff3a0e:	4651      	mov	r1, sl
2fff3a10:	4628      	mov	r0, r5
2fff3a12:	f7ff ff4b 	bl	2fff38ac <xlat_table_get_index>
2fff3a16:	69ea      	ldr	r2, [r5, #28]
2fff3a18:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
2fff3a1c:	3b01      	subs	r3, #1
2fff3a1e:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
2fff3a22:	b009      	add	sp, #36	; 0x24
2fff3a24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff3a28:	2fffb7f3 	.word	0x2fffb7f3

2fff3a2c <xlat_desc>:
2fff3a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff3a2e:	468c      	mov	ip, r1
2fff3a30:	9c06      	ldr	r4, [sp, #24]
2fff3a32:	f06f 0108 	mvn.w	r1, #8
2fff3a36:	2700      	movs	r7, #0
2fff3a38:	4361      	muls	r1, r4
2fff3a3a:	f101 0527 	add.w	r5, r1, #39	; 0x27
2fff3a3e:	2101      	movs	r1, #1
2fff3a40:	40a9      	lsls	r1, r5
2fff3a42:	3901      	subs	r1, #1
2fff3a44:	ea01 0602 	and.w	r6, r1, r2
2fff3a48:	ea56 0107 	orrs.w	r1, r6, r7
2fff3a4c:	d003      	beq.n	2fff3a56 <xlat_desc+0x2a>
2fff3a4e:	2172      	movs	r1, #114	; 0x72
2fff3a50:	4822      	ldr	r0, [pc, #136]	; (2fff3adc <xlat_desc+0xb0>)
2fff3a52:	f006 fb61 	bl	2fffa118 <__assert>
2fff3a56:	6c40      	ldr	r0, [r0, #68]	; 0x44
2fff3a58:	2c03      	cmp	r4, #3
2fff3a5a:	ea4f 044c 	mov.w	r4, ip, lsl #1
2fff3a5e:	bf0c      	ite	eq
2fff3a60:	2103      	moveq	r1, #3
2fff3a62:	2101      	movne	r1, #1
2fff3a64:	f004 0420 	and.w	r4, r4, #32
2fff3a68:	4314      	orrs	r4, r2
2fff3a6a:	f01c 0f08 	tst.w	ip, #8
2fff3a6e:	ea44 0401 	orr.w	r4, r4, r1
2fff3a72:	bf08      	it	eq
2fff3a74:	2680      	moveq	r6, #128	; 0x80
2fff3a76:	ea44 0406 	orr.w	r4, r4, r6
2fff3a7a:	bf08      	it	eq
2fff3a7c:	2700      	moveq	r7, #0
2fff3a7e:	ea43 0507 	orr.w	r5, r3, r7
2fff3a82:	2801      	cmp	r0, #1
2fff3a84:	d10f      	bne.n	2fff3aa6 <xlat_desc+0x7a>
2fff3a86:	f01c 0f40 	tst.w	ip, #64	; 0x40
2fff3a8a:	d111      	bne.n	2fff3ab0 <xlat_desc+0x84>
2fff3a8c:	f444 6480 	orr.w	r4, r4, #1024	; 0x400
2fff3a90:	f01c 0607 	ands.w	r6, ip, #7
2fff3a94:	4629      	mov	r1, r5
2fff3a96:	d10e      	bne.n	2fff3ab6 <xlat_desc+0x8a>
2fff3a98:	f7ff fd18 	bl	2fff34cc <xlat_arch_regime_get_xn_desc>
2fff3a9c:	4304      	orrs	r4, r0
2fff3a9e:	4329      	orrs	r1, r5
2fff3aa0:	f444 7001 	orr.w	r0, r4, #516	; 0x204
2fff3aa4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff3aa6:	1e83      	subs	r3, r0, #2
2fff3aa8:	2b01      	cmp	r3, #1
2fff3aaa:	d901      	bls.n	2fff3ab0 <xlat_desc+0x84>
2fff3aac:	2194      	movs	r1, #148	; 0x94
2fff3aae:	e7cf      	b.n	2fff3a50 <xlat_desc+0x24>
2fff3ab0:	f444 6488 	orr.w	r4, r4, #1088	; 0x440
2fff3ab4:	e7ec      	b.n	2fff3a90 <xlat_desc+0x64>
2fff3ab6:	f01c 0f28 	tst.w	ip, #40	; 0x28
2fff3aba:	d003      	beq.n	2fff3ac4 <xlat_desc+0x98>
2fff3abc:	f7ff fd06 	bl	2fff34cc <xlat_arch_regime_get_xn_desc>
2fff3ac0:	4304      	orrs	r4, r0
2fff3ac2:	4329      	orrs	r1, r5
2fff3ac4:	2e02      	cmp	r6, #2
2fff3ac6:	d102      	bne.n	2fff3ace <xlat_desc+0xa2>
2fff3ac8:	f444 7040 	orr.w	r0, r4, #768	; 0x300
2fff3acc:	e7ea      	b.n	2fff3aa4 <xlat_desc+0x78>
2fff3ace:	2e01      	cmp	r6, #1
2fff3ad0:	d001      	beq.n	2fff3ad6 <xlat_desc+0xaa>
2fff3ad2:	21d4      	movs	r1, #212	; 0xd4
2fff3ad4:	e7bc      	b.n	2fff3a50 <xlat_desc+0x24>
2fff3ad6:	f444 7002 	orr.w	r0, r4, #520	; 0x208
2fff3ada:	e7e3      	b.n	2fff3aa4 <xlat_desc+0x78>
2fff3adc:	2fffb7f3 	.word	0x2fffb7f3

2fff3ae0 <xlat_tables_map_region>:
2fff3ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff3ae4:	b08b      	sub	sp, #44	; 0x2c
2fff3ae6:	460f      	mov	r7, r1
2fff3ae8:	4606      	mov	r6, r0
2fff3aea:	f8dd 8054 	ldr.w	r8, [sp, #84]	; 0x54
2fff3aee:	461d      	mov	r5, r3
2fff3af0:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
2fff3af2:	4541      	cmp	r1, r8
2fff3af4:	d802      	bhi.n	2fff3afc <xlat_tables_map_region+0x1c>
2fff3af6:	f1b8 0f03 	cmp.w	r8, #3
2fff3afa:	d904      	bls.n	2fff3b06 <xlat_tables_map_region+0x26>
2fff3afc:	f44f 710d 	mov.w	r1, #564	; 0x234
2fff3b00:	4863      	ldr	r0, [pc, #396]	; (2fff3c90 <xlat_tables_map_region+0x1b0>)
2fff3b02:	f006 fb09 	bl	2fffa118 <__assert>
2fff3b06:	e9d7 0302 	ldrd	r0, r3, [r7, #8]
2fff3b0a:	f04f 0b01 	mov.w	fp, #1
2fff3b0e:	4403      	add	r3, r0
2fff3b10:	4290      	cmp	r0, r2
2fff3b12:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
2fff3b16:	9307      	str	r3, [sp, #28]
2fff3b18:	f06f 0308 	mvn.w	r3, #8
2fff3b1c:	fb03 f308 	mul.w	r3, r3, r8
2fff3b20:	bf98      	it	ls
2fff3b22:	4614      	movls	r4, r2
2fff3b24:	f103 0327 	add.w	r3, r3, #39	; 0x27
2fff3b28:	9303      	str	r3, [sp, #12]
2fff3b2a:	fa0b fb03 	lsl.w	fp, fp, r3
2fff3b2e:	bf88      	it	hi
2fff3b30:	f1cb 0400 	rsbhi	r4, fp, #0
2fff3b34:	9b03      	ldr	r3, [sp, #12]
2fff3b36:	bf88      	it	hi
2fff3b38:	4004      	andhi	r4, r0
2fff3b3a:	1aa2      	subs	r2, r4, r2
2fff3b3c:	4541      	cmp	r1, r8
2fff3b3e:	fa22 fa03 	lsr.w	sl, r2, r3
2fff3b42:	d209      	bcs.n	2fff3b58 <xlat_tables_map_region+0x78>
2fff3b44:	4629      	mov	r1, r5
2fff3b46:	4630      	mov	r0, r6
2fff3b48:	f7ff feb0 	bl	2fff38ac <xlat_table_get_index>
2fff3b4c:	69f2      	ldr	r2, [r6, #28]
2fff3b4e:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
2fff3b52:	3301      	adds	r3, #1
2fff3b54:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
2fff3b58:	eb05 05ca 	add.w	r5, r5, sl, lsl #3
2fff3b5c:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
2fff3b60:	9308      	str	r3, [sp, #32]
2fff3b62:	f108 0301 	add.w	r3, r8, #1
2fff3b66:	9306      	str	r3, [sp, #24]
2fff3b68:	e055      	b.n	2fff3c16 <xlat_tables_map_region+0x136>
2fff3b6a:	f8d7 c008 	ldr.w	ip, [r7, #8]
2fff3b6e:	68fb      	ldr	r3, [r7, #12]
2fff3b70:	6828      	ldr	r0, [r5, #0]
2fff3b72:	45a4      	cmp	ip, r4
2fff3b74:	4463      	add	r3, ip
2fff3b76:	f000 0103 	and.w	r1, r0, #3
2fff3b7a:	eb04 090b 	add.w	r9, r4, fp
2fff3b7e:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
2fff3b82:	f109 32ff 	add.w	r2, r9, #4294967295	; 0xffffffff
2fff3b86:	d850      	bhi.n	2fff3c2a <xlat_tables_map_region+0x14a>
2fff3b88:	4293      	cmp	r3, r2
2fff3b8a:	d34e      	bcc.n	2fff3c2a <xlat_tables_map_region+0x14a>
2fff3b8c:	e9d7 2300 	ldrd	r2, r3, [r7]
2fff3b90:	ebb2 020c 	subs.w	r2, r2, ip
2fff3b94:	f163 0300 	sbc.w	r3, r3, #0
2fff3b98:	1912      	adds	r2, r2, r4
2fff3b9a:	f143 0300 	adc.w	r3, r3, #0
2fff3b9e:	f1b8 0f03 	cmp.w	r8, #3
2fff3ba2:	d105      	bne.n	2fff3bb0 <xlat_tables_map_region+0xd0>
2fff3ba4:	2903      	cmp	r1, #3
2fff3ba6:	d02f      	beq.n	2fff3c08 <xlat_tables_map_region+0x128>
2fff3ba8:	b331      	cbz	r1, 2fff3bf8 <xlat_tables_map_region+0x118>
2fff3baa:	f240 11cb 	movw	r1, #459	; 0x1cb
2fff3bae:	e7a7      	b.n	2fff3b00 <xlat_tables_map_region+0x20>
2fff3bb0:	2903      	cmp	r1, #3
2fff3bb2:	d068      	beq.n	2fff3c86 <xlat_tables_map_region+0x1a6>
2fff3bb4:	2900      	cmp	r1, #0
2fff3bb6:	d133      	bne.n	2fff3c20 <xlat_tables_map_region+0x140>
2fff3bb8:	9808      	ldr	r0, [sp, #32]
2fff3bba:	4010      	ands	r0, r2
2fff3bbc:	e9cd 0104 	strd	r0, r1, [sp, #16]
2fff3bc0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
2fff3bc4:	4301      	orrs	r1, r0
2fff3bc6:	d010      	beq.n	2fff3bea <xlat_tables_map_region+0x10a>
2fff3bc8:	69b1      	ldr	r1, [r6, #24]
2fff3bca:	2300      	movs	r3, #0
2fff3bcc:	428b      	cmp	r3, r1
2fff3bce:	da08      	bge.n	2fff3be2 <xlat_tables_map_region+0x102>
2fff3bd0:	69f2      	ldr	r2, [r6, #28]
2fff3bd2:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
2fff3bd6:	2a00      	cmp	r2, #0
2fff3bd8:	d138      	bne.n	2fff3c4c <xlat_tables_map_region+0x16c>
2fff3bda:	6971      	ldr	r1, [r6, #20]
2fff3bdc:	eb11 3303 	adds.w	r3, r1, r3, lsl #12
2fff3be0:	d136      	bne.n	2fff3c50 <xlat_tables_map_region+0x170>
2fff3be2:	4620      	mov	r0, r4
2fff3be4:	b00b      	add	sp, #44	; 0x2c
2fff3be6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff3bea:	f1b8 0f00 	cmp.w	r8, #0
2fff3bee:	d0eb      	beq.n	2fff3bc8 <xlat_tables_map_region+0xe8>
2fff3bf0:	6979      	ldr	r1, [r7, #20]
2fff3bf2:	9803      	ldr	r0, [sp, #12]
2fff3bf4:	40c1      	lsrs	r1, r0
2fff3bf6:	d0e7      	beq.n	2fff3bc8 <xlat_tables_map_region+0xe8>
2fff3bf8:	6939      	ldr	r1, [r7, #16]
2fff3bfa:	4630      	mov	r0, r6
2fff3bfc:	f8cd 8000 	str.w	r8, [sp]
2fff3c00:	f7ff ff14 	bl	2fff3a2c <xlat_desc>
2fff3c04:	e9c5 0100 	strd	r0, r1, [r5]
2fff3c08:	9b07      	ldr	r3, [sp, #28]
2fff3c0a:	f10a 0a01 	add.w	sl, sl, #1
2fff3c0e:	3508      	adds	r5, #8
2fff3c10:	464c      	mov	r4, r9
2fff3c12:	454b      	cmp	r3, r9
2fff3c14:	d902      	bls.n	2fff3c1c <xlat_tables_map_region+0x13c>
2fff3c16:	9b14      	ldr	r3, [sp, #80]	; 0x50
2fff3c18:	459a      	cmp	sl, r3
2fff3c1a:	d3a6      	bcc.n	2fff3b6a <xlat_tables_map_region+0x8a>
2fff3c1c:	3c01      	subs	r4, #1
2fff3c1e:	e7e0      	b.n	2fff3be2 <xlat_tables_map_region+0x102>
2fff3c20:	2901      	cmp	r1, #1
2fff3c22:	d0f1      	beq.n	2fff3c08 <xlat_tables_map_region+0x128>
2fff3c24:	f44f 71f9 	mov.w	r1, #498	; 0x1f2
2fff3c28:	e76a      	b.n	2fff3b00 <xlat_tables_map_region+0x20>
2fff3c2a:	4594      	cmp	ip, r2
2fff3c2c:	d901      	bls.n	2fff3c32 <xlat_tables_map_region+0x152>
2fff3c2e:	429c      	cmp	r4, r3
2fff3c30:	d8ea      	bhi.n	2fff3c08 <xlat_tables_map_region+0x128>
2fff3c32:	f1b8 0f03 	cmp.w	r8, #3
2fff3c36:	d102      	bne.n	2fff3c3e <xlat_tables_map_region+0x15e>
2fff3c38:	f240 2107 	movw	r1, #519	; 0x207
2fff3c3c:	e760      	b.n	2fff3b00 <xlat_tables_map_region+0x20>
2fff3c3e:	2900      	cmp	r1, #0
2fff3c40:	d0c2      	beq.n	2fff3bc8 <xlat_tables_map_region+0xe8>
2fff3c42:	2903      	cmp	r1, #3
2fff3c44:	d01f      	beq.n	2fff3c86 <xlat_tables_map_region+0x1a6>
2fff3c46:	f240 2112 	movw	r1, #530	; 0x212
2fff3c4a:	e759      	b.n	2fff3b00 <xlat_tables_map_region+0x20>
2fff3c4c:	3301      	adds	r3, #1
2fff3c4e:	e7bd      	b.n	2fff3bcc <xlat_tables_map_region+0xec>
2fff3c50:	f043 0103 	orr.w	r1, r3, #3
2fff3c54:	e9c5 1200 	strd	r1, r2, [r5]
2fff3c58:	9a06      	ldr	r2, [sp, #24]
2fff3c5a:	4639      	mov	r1, r7
2fff3c5c:	9309      	str	r3, [sp, #36]	; 0x24
2fff3c5e:	4630      	mov	r0, r6
2fff3c60:	9201      	str	r2, [sp, #4]
2fff3c62:	f44f 7200 	mov.w	r2, #512	; 0x200
2fff3c66:	9200      	str	r2, [sp, #0]
2fff3c68:	4622      	mov	r2, r4
2fff3c6a:	f7ff ff39 	bl	2fff3ae0 <xlat_tables_map_region>
2fff3c6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
2fff3c70:	4604      	mov	r4, r0
2fff3c72:	f44f 5180 	mov.w	r1, #4096	; 0x1000
2fff3c76:	4618      	mov	r0, r3
2fff3c78:	f7ff fe0a 	bl	2fff3890 <xlat_clean_dcache_range>
2fff3c7c:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
2fff3c80:	429c      	cmp	r4, r3
2fff3c82:	d0c1      	beq.n	2fff3c08 <xlat_tables_map_region+0x128>
2fff3c84:	e7ad      	b.n	2fff3be2 <xlat_tables_map_region+0x102>
2fff3c86:	f420 637f 	bic.w	r3, r0, #4080	; 0xff0
2fff3c8a:	f023 030f 	bic.w	r3, r3, #15
2fff3c8e:	e7e3      	b.n	2fff3c58 <xlat_tables_map_region+0x178>
2fff3c90:	2fffb7f3 	.word	0x2fffb7f3

2fff3c94 <mmap_add_region_ctx>:
2fff3c94:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff3c98:	4606      	mov	r6, r0
2fff3c9a:	f8d1 a00c 	ldr.w	sl, [r1, #12]
2fff3c9e:	460d      	mov	r5, r1
2fff3ca0:	f1ba 0f00 	cmp.w	sl, #0
2fff3ca4:	d057      	beq.n	2fff3d56 <mmap_add_region_ctx+0xc2>
2fff3ca6:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
2fff3caa:	b123      	cbz	r3, 2fff3cb6 <mmap_add_region_ctx+0x22>
2fff3cac:	f240 3107 	movw	r1, #775	; 0x307
2fff3cb0:	4832      	ldr	r0, [pc, #200]	; (2fff3d7c <mmap_add_region_ctx+0xe8>)
2fff3cb2:	f006 fa31 	bl	2fffa118 <__assert>
2fff3cb6:	f7ff fd3f 	bl	2fff3738 <mmap_add_region_check>
2fff3cba:	4601      	mov	r1, r0
2fff3cbc:	b9e8      	cbnz	r0, 2fff3cfa <mmap_add_region_ctx+0x66>
2fff3cbe:	68a9      	ldr	r1, [r5, #8]
2fff3cc0:	68f2      	ldr	r2, [r6, #12]
2fff3cc2:	4451      	add	r1, sl
2fff3cc4:	1e4f      	subs	r7, r1, #1
2fff3cc6:	4614      	mov	r4, r2
2fff3cc8:	e9d4 3002 	ldrd	r3, r0, [r4, #8]
2fff3ccc:	4403      	add	r3, r0
2fff3cce:	3b01      	subs	r3, #1
2fff3cd0:	42bb      	cmp	r3, r7
2fff3cd2:	d200      	bcs.n	2fff3cd6 <mmap_add_region_ctx+0x42>
2fff3cd4:	b9b8      	cbnz	r0, 2fff3d06 <mmap_add_region_ctx+0x72>
2fff3cd6:	e9d4 3002 	ldrd	r3, r0, [r4, #8]
2fff3cda:	4403      	add	r3, r0
2fff3cdc:	4299      	cmp	r1, r3
2fff3cde:	d014      	beq.n	2fff3d0a <mmap_add_region_ctx+0x76>
2fff3ce0:	6933      	ldr	r3, [r6, #16]
2fff3ce2:	f04f 0818 	mov.w	r8, #24
2fff3ce6:	fb08 2803 	mla	r8, r8, r3, r2
2fff3cea:	68d3      	ldr	r3, [r2, #12]
2fff3cec:	2b00      	cmp	r3, #0
2fff3cee:	d035      	beq.n	2fff3d5c <mmap_add_region_ctx+0xc8>
2fff3cf0:	4542      	cmp	r2, r8
2fff3cf2:	d310      	bcc.n	2fff3d16 <mmap_add_region_ctx+0x82>
2fff3cf4:	f240 313f 	movw	r1, #831	; 0x33f
2fff3cf8:	e7da      	b.n	2fff3cb0 <mmap_add_region_ctx+0x1c>
2fff3cfa:	4821      	ldr	r0, [pc, #132]	; (2fff3d80 <mmap_add_region_ctx+0xec>)
2fff3cfc:	f7ff f80e 	bl	2fff2d1c <tf_log>
2fff3d00:	f44f 7143 	mov.w	r1, #780	; 0x30c
2fff3d04:	e7d4      	b.n	2fff3cb0 <mmap_add_region_ctx+0x1c>
2fff3d06:	3418      	adds	r4, #24
2fff3d08:	e7de      	b.n	2fff3cc8 <mmap_add_region_ctx+0x34>
2fff3d0a:	2800      	cmp	r0, #0
2fff3d0c:	d0e8      	beq.n	2fff3ce0 <mmap_add_region_ctx+0x4c>
2fff3d0e:	4582      	cmp	sl, r0
2fff3d10:	d9e6      	bls.n	2fff3ce0 <mmap_add_region_ctx+0x4c>
2fff3d12:	3418      	adds	r4, #24
2fff3d14:	e7df      	b.n	2fff3cd6 <mmap_add_region_ctx+0x42>
2fff3d16:	3218      	adds	r2, #24
2fff3d18:	e7e7      	b.n	2fff3cea <mmap_add_region_ctx+0x56>
2fff3d1a:	f119 33ff 	adds.w	r3, r9, #4294967295	; 0xffffffff
2fff3d1e:	9300      	str	r3, [sp, #0]
2fff3d20:	f14b 33ff 	adc.w	r3, fp, #4294967295	; 0xffffffff
2fff3d24:	9301      	str	r3, [sp, #4]
2fff3d26:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
2fff3d28:	e9dd 8900 	ldrd	r8, r9, [sp]
2fff3d2c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
2fff3d2e:	eb18 080a 	adds.w	r8, r8, sl
2fff3d32:	e9d6 230c 	ldrd	r2, r3, [r6, #48]	; 0x30
2fff3d36:	f149 0900 	adc.w	r9, r9, #0
2fff3d3a:	454b      	cmp	r3, r9
2fff3d3c:	e895 0003 	ldmia.w	r5, {r0, r1}
2fff3d40:	bf08      	it	eq
2fff3d42:	4542      	cmpeq	r2, r8
2fff3d44:	e884 0003 	stmia.w	r4, {r0, r1}
2fff3d48:	d201      	bcs.n	2fff3d4e <mmap_add_region_ctx+0xba>
2fff3d4a:	e9c6 890c 	strd	r8, r9, [r6, #48]	; 0x30
2fff3d4e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
2fff3d50:	42bb      	cmp	r3, r7
2fff3d52:	d200      	bcs.n	2fff3d56 <mmap_add_region_ctx+0xc2>
2fff3d54:	63b7      	str	r7, [r6, #56]	; 0x38
2fff3d56:	b003      	add	sp, #12
2fff3d58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff3d5c:	1b12      	subs	r2, r2, r4
2fff3d5e:	4621      	mov	r1, r4
2fff3d60:	f104 0018 	add.w	r0, r4, #24
2fff3d64:	e9d5 9b00 	ldrd	r9, fp, [r5]
2fff3d68:	f006 fa09 	bl	2fffa17e <memmove>
2fff3d6c:	f8d8 300c 	ldr.w	r3, [r8, #12]
2fff3d70:	2b00      	cmp	r3, #0
2fff3d72:	d0d2      	beq.n	2fff3d1a <mmap_add_region_ctx+0x86>
2fff3d74:	f240 314b 	movw	r1, #843	; 0x34b
2fff3d78:	e79a      	b.n	2fff3cb0 <mmap_add_region_ctx+0x1c>
2fff3d7a:	bf00      	nop
2fff3d7c:	2fffb7f3 	.word	0x2fffb7f3
2fff3d80:	2fffb819 	.word	0x2fffb819

2fff3d84 <mmap_add_ctx>:
2fff3d84:	b538      	push	{r3, r4, r5, lr}
2fff3d86:	4605      	mov	r5, r0
2fff3d88:	460c      	mov	r4, r1
2fff3d8a:	6963      	ldr	r3, [r4, #20]
2fff3d8c:	b903      	cbnz	r3, 2fff3d90 <mmap_add_ctx+0xc>
2fff3d8e:	bd38      	pop	{r3, r4, r5, pc}
2fff3d90:	4621      	mov	r1, r4
2fff3d92:	4628      	mov	r0, r5
2fff3d94:	3418      	adds	r4, #24
2fff3d96:	f7ff ff7d 	bl	2fff3c94 <mmap_add_region_ctx>
2fff3d9a:	e7f6      	b.n	2fff3d8a <mmap_add_ctx+0x6>

2fff3d9c <mmap_add_dynamic_region_ctx>:
2fff3d9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff3da0:	b08f      	sub	sp, #60	; 0x3c
2fff3da2:	68cb      	ldr	r3, [r1, #12]
2fff3da4:	4604      	mov	r4, r0
2fff3da6:	460d      	mov	r5, r1
2fff3da8:	9303      	str	r3, [sp, #12]
2fff3daa:	b92b      	cbnz	r3, 2fff3db8 <mmap_add_dynamic_region_ctx+0x1c>
2fff3dac:	f04f 0a00 	mov.w	sl, #0
2fff3db0:	4650      	mov	r0, sl
2fff3db2:	b00f      	add	sp, #60	; 0x3c
2fff3db4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff3db8:	680b      	ldr	r3, [r1, #0]
2fff3dba:	f8d0 b00c 	ldr.w	fp, [r0, #12]
2fff3dbe:	9306      	str	r3, [sp, #24]
2fff3dc0:	684b      	ldr	r3, [r1, #4]
2fff3dc2:	f8d0 9010 	ldr.w	r9, [r0, #16]
2fff3dc6:	9307      	str	r3, [sp, #28]
2fff3dc8:	690b      	ldr	r3, [r1, #16]
2fff3dca:	688e      	ldr	r6, [r1, #8]
2fff3dcc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff3dd0:	610b      	str	r3, [r1, #16]
2fff3dd2:	f7ff fcb1 	bl	2fff3738 <mmap_add_region_check>
2fff3dd6:	4682      	mov	sl, r0
2fff3dd8:	2800      	cmp	r0, #0
2fff3dda:	d1e9      	bne.n	2fff3db0 <mmap_add_dynamic_region_ctx+0x14>
2fff3ddc:	9b03      	ldr	r3, [sp, #12]
2fff3dde:	1999      	adds	r1, r3, r6
2fff3de0:	465b      	mov	r3, fp
2fff3de2:	1e4e      	subs	r6, r1, #1
2fff3de4:	e9d3 2002 	ldrd	r2, r0, [r3, #8]
2fff3de8:	4698      	mov	r8, r3
2fff3dea:	3318      	adds	r3, #24
2fff3dec:	4402      	add	r2, r0
2fff3dee:	3a01      	subs	r2, #1
2fff3df0:	42b2      	cmp	r2, r6
2fff3df2:	d201      	bcs.n	2fff3df8 <mmap_add_dynamic_region_ctx+0x5c>
2fff3df4:	2800      	cmp	r0, #0
2fff3df6:	d1f5      	bne.n	2fff3de4 <mmap_add_dynamic_region_ctx+0x48>
2fff3df8:	e9d8 3202 	ldrd	r3, r2, [r8, #8]
2fff3dfc:	4647      	mov	r7, r8
2fff3dfe:	f108 0818 	add.w	r8, r8, #24
2fff3e02:	4413      	add	r3, r2
2fff3e04:	4299      	cmp	r1, r3
2fff3e06:	d103      	bne.n	2fff3e10 <mmap_add_dynamic_region_ctx+0x74>
2fff3e08:	b112      	cbz	r2, 2fff3e10 <mmap_add_dynamic_region_ctx+0x74>
2fff3e0a:	9b03      	ldr	r3, [sp, #12]
2fff3e0c:	4293      	cmp	r3, r2
2fff3e0e:	d8f3      	bhi.n	2fff3df8 <mmap_add_dynamic_region_ctx+0x5c>
2fff3e10:	2318      	movs	r3, #24
2fff3e12:	4639      	mov	r1, r7
2fff3e14:	fb03 b909 	mla	r9, r3, r9, fp
2fff3e18:	4640      	mov	r0, r8
2fff3e1a:	eba9 0b07 	sub.w	fp, r9, r7
2fff3e1e:	465a      	mov	r2, fp
2fff3e20:	f006 f9ad 	bl	2fffa17e <memmove>
2fff3e24:	f8d9 900c 	ldr.w	r9, [r9, #12]
2fff3e28:	f1b9 0f00 	cmp.w	r9, #0
2fff3e2c:	d004      	beq.n	2fff3e38 <mmap_add_dynamic_region_ctx+0x9c>
2fff3e2e:	4834      	ldr	r0, [pc, #208]	; (2fff3f00 <mmap_add_dynamic_region_ctx+0x164>)
2fff3e30:	f240 31d6 	movw	r1, #982	; 0x3d6
2fff3e34:	f006 f970 	bl	2fffa118 <__assert>
2fff3e38:	46ae      	mov	lr, r5
2fff3e3a:	46bc      	mov	ip, r7
2fff3e3c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
2fff3e40:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
2fff3e44:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
2fff3e48:	e89e 0003 	ldmia.w	lr, {r0, r1}
2fff3e4c:	e88c 0003 	stmia.w	ip, {r0, r1}
2fff3e50:	2b00      	cmp	r3, #0
2fff3e52:	d039      	beq.n	2fff3ec8 <mmap_add_dynamic_region_ctx+0x12c>
2fff3e54:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff3e56:	464a      	mov	r2, r9
2fff3e58:	4639      	mov	r1, r7
2fff3e5a:	4620      	mov	r0, r4
2fff3e5c:	9301      	str	r3, [sp, #4]
2fff3e5e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff3e60:	9300      	str	r3, [sp, #0]
2fff3e62:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff3e64:	f7ff fe3c 	bl	2fff3ae0 <xlat_tables_map_region>
2fff3e68:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff3e6a:	4606      	mov	r6, r0
2fff3e6c:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff3e6e:	00c9      	lsls	r1, r1, #3
2fff3e70:	f7ff fd0e 	bl	2fff3890 <xlat_clean_dcache_range>
2fff3e74:	e9d7 3202 	ldrd	r3, r2, [r7, #8]
2fff3e78:	4413      	add	r3, r2
2fff3e7a:	3b01      	subs	r3, #1
2fff3e7c:	42b3      	cmp	r3, r6
2fff3e7e:	d021      	beq.n	2fff3ec4 <mmap_add_dynamic_region_ctx+0x128>
2fff3e80:	465a      	mov	r2, fp
2fff3e82:	4641      	mov	r1, r8
2fff3e84:	4638      	mov	r0, r7
2fff3e86:	f006 f97a 	bl	2fffa17e <memmove>
2fff3e8a:	68ad      	ldr	r5, [r5, #8]
2fff3e8c:	42b5      	cmp	r5, r6
2fff3e8e:	d216      	bcs.n	2fff3ebe <mmap_add_dynamic_region_ctx+0x122>
2fff3e90:	1b76      	subs	r6, r6, r5
2fff3e92:	2218      	movs	r2, #24
2fff3e94:	4649      	mov	r1, r9
2fff3e96:	a808      	add	r0, sp, #32
2fff3e98:	f006 f987 	bl	2fffa1aa <memset>
2fff3e9c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff3e9e:	a908      	add	r1, sp, #32
2fff3ea0:	950a      	str	r5, [sp, #40]	; 0x28
2fff3ea2:	4620      	mov	r0, r4
2fff3ea4:	9301      	str	r3, [sp, #4]
2fff3ea6:	464a      	mov	r2, r9
2fff3ea8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff3eaa:	960b      	str	r6, [sp, #44]	; 0x2c
2fff3eac:	9300      	str	r3, [sp, #0]
2fff3eae:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff3eb0:	f7ff fd10 	bl	2fff38d4 <xlat_tables_unmap_region>
2fff3eb4:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff3eb6:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff3eb8:	00c9      	lsls	r1, r1, #3
2fff3eba:	f7ff fce9 	bl	2fff3890 <xlat_clean_dcache_range>
2fff3ebe:	f06f 0a0b 	mvn.w	sl, #11
2fff3ec2:	e775      	b.n	2fff3db0 <mmap_add_dynamic_region_ctx+0x14>
2fff3ec4:	f3bf 8f4a 	dsb	ishst
2fff3ec8:	9b06      	ldr	r3, [sp, #24]
2fff3eca:	f113 33ff 	adds.w	r3, r3, #4294967295	; 0xffffffff
2fff3ece:	9304      	str	r3, [sp, #16]
2fff3ed0:	9b07      	ldr	r3, [sp, #28]
2fff3ed2:	f143 33ff 	adc.w	r3, r3, #4294967295	; 0xffffffff
2fff3ed6:	9305      	str	r3, [sp, #20]
2fff3ed8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
2fff3edc:	9b03      	ldr	r3, [sp, #12]
2fff3ede:	18c0      	adds	r0, r0, r3
2fff3ee0:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2fff3ee4:	f141 0100 	adc.w	r1, r1, #0
2fff3ee8:	428b      	cmp	r3, r1
2fff3eea:	bf08      	it	eq
2fff3eec:	4282      	cmpeq	r2, r0
2fff3eee:	d201      	bcs.n	2fff3ef4 <mmap_add_dynamic_region_ctx+0x158>
2fff3ef0:	e9c4 010c 	strd	r0, r1, [r4, #48]	; 0x30
2fff3ef4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
2fff3ef6:	42b3      	cmp	r3, r6
2fff3ef8:	f4bf af58 	bcs.w	2fff3dac <mmap_add_dynamic_region_ctx+0x10>
2fff3efc:	63a6      	str	r6, [r4, #56]	; 0x38
2fff3efe:	e757      	b.n	2fff3db0 <mmap_add_dynamic_region_ctx+0x14>
2fff3f00:	2fffb7f3 	.word	0x2fffb7f3

2fff3f04 <mmap_remove_dynamic_region_ctx>:
2fff3f04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff3f08:	2318      	movs	r3, #24
2fff3f0a:	68c5      	ldr	r5, [r0, #12]
2fff3f0c:	b087      	sub	sp, #28
2fff3f0e:	6907      	ldr	r7, [r0, #16]
2fff3f10:	4604      	mov	r4, r0
2fff3f12:	fb03 5707 	mla	r7, r3, r7, r5
2fff3f16:	68fb      	ldr	r3, [r7, #12]
2fff3f18:	b153      	cbz	r3, 2fff3f30 <mmap_remove_dynamic_region_ctx+0x2c>
2fff3f1a:	483c      	ldr	r0, [pc, #240]	; (2fff400c <mmap_remove_dynamic_region_ctx+0x108>)
2fff3f1c:	f240 413a 	movw	r1, #1082	; 0x43a
2fff3f20:	f006 f8fa 	bl	2fffa118 <__assert>
2fff3f24:	68a8      	ldr	r0, [r5, #8]
2fff3f26:	4288      	cmp	r0, r1
2fff3f28:	d101      	bne.n	2fff3f2e <mmap_remove_dynamic_region_ctx+0x2a>
2fff3f2a:	4293      	cmp	r3, r2
2fff3f2c:	d068      	beq.n	2fff4000 <mmap_remove_dynamic_region_ctx+0xfc>
2fff3f2e:	3518      	adds	r5, #24
2fff3f30:	68eb      	ldr	r3, [r5, #12]
2fff3f32:	2b00      	cmp	r3, #0
2fff3f34:	d1f6      	bne.n	2fff3f24 <mmap_remove_dynamic_region_ctx+0x20>
2fff3f36:	f06f 0015 	mvn.w	r0, #21
2fff3f3a:	b007      	add	sp, #28
2fff3f3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff3f40:	6ba3      	ldr	r3, [r4, #56]	; 0x38
2fff3f42:	3901      	subs	r1, #1
2fff3f44:	188e      	adds	r6, r1, r2
2fff3f46:	e9d5 0100 	ldrd	r0, r1, [r5]
2fff3f4a:	9303      	str	r3, [sp, #12]
2fff3f4c:	1880      	adds	r0, r0, r2
2fff3f4e:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2fff3f52:	f141 0100 	adc.w	r1, r1, #0
2fff3f56:	f110 3aff 	adds.w	sl, r0, #4294967295	; 0xffffffff
2fff3f5a:	e9cd 2304 	strd	r2, r3, [sp, #16]
2fff3f5e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
2fff3f62:	f141 3bff 	adc.w	fp, r1, #4294967295	; 0xffffffff
2fff3f66:	b183      	cbz	r3, 2fff3f8a <mmap_remove_dynamic_region_ctx+0x86>
2fff3f68:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff3f6a:	2200      	movs	r2, #0
2fff3f6c:	4629      	mov	r1, r5
2fff3f6e:	4620      	mov	r0, r4
2fff3f70:	9301      	str	r3, [sp, #4]
2fff3f72:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff3f74:	9300      	str	r3, [sp, #0]
2fff3f76:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff3f78:	f7ff fcac 	bl	2fff38d4 <xlat_tables_unmap_region>
2fff3f7c:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff3f7e:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff3f80:	00c9      	lsls	r1, r1, #3
2fff3f82:	f7ff fc85 	bl	2fff3890 <xlat_clean_dcache_range>
2fff3f86:	f7ff facd 	bl	2fff3524 <xlat_arch_tlbi_va_sync>
2fff3f8a:	1b7a      	subs	r2, r7, r5
2fff3f8c:	f105 0118 	add.w	r1, r5, #24
2fff3f90:	4628      	mov	r0, r5
2fff3f92:	f006 f8f4 	bl	2fffa17e <memmove>
2fff3f96:	9b03      	ldr	r3, [sp, #12]
2fff3f98:	429e      	cmp	r6, r3
2fff3f9a:	d00f      	beq.n	2fff3fbc <mmap_remove_dynamic_region_ctx+0xb8>
2fff3f9c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
2fff3fa0:	459b      	cmp	fp, r3
2fff3fa2:	bf08      	it	eq
2fff3fa4:	4592      	cmpeq	sl, r2
2fff3fa6:	d107      	bne.n	2fff3fb8 <mmap_remove_dynamic_region_ctx+0xb4>
2fff3fa8:	68e1      	ldr	r1, [r4, #12]
2fff3faa:	2200      	movs	r2, #0
2fff3fac:	2300      	movs	r3, #0
2fff3fae:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
2fff3fb2:	68ca      	ldr	r2, [r1, #12]
2fff3fb4:	3118      	adds	r1, #24
2fff3fb6:	b982      	cbnz	r2, 2fff3fda <mmap_remove_dynamic_region_ctx+0xd6>
2fff3fb8:	2000      	movs	r0, #0
2fff3fba:	e7be      	b.n	2fff3f3a <mmap_remove_dynamic_region_ctx+0x36>
2fff3fbc:	68e2      	ldr	r2, [r4, #12]
2fff3fbe:	2300      	movs	r3, #0
2fff3fc0:	63a3      	str	r3, [r4, #56]	; 0x38
2fff3fc2:	68d3      	ldr	r3, [r2, #12]
2fff3fc4:	2b00      	cmp	r3, #0
2fff3fc6:	d0e9      	beq.n	2fff3f9c <mmap_remove_dynamic_region_ctx+0x98>
2fff3fc8:	6891      	ldr	r1, [r2, #8]
2fff3fca:	3218      	adds	r2, #24
2fff3fcc:	440b      	add	r3, r1
2fff3fce:	6ba1      	ldr	r1, [r4, #56]	; 0x38
2fff3fd0:	3b01      	subs	r3, #1
2fff3fd2:	428b      	cmp	r3, r1
2fff3fd4:	bf88      	it	hi
2fff3fd6:	63a3      	strhi	r3, [r4, #56]	; 0x38
2fff3fd8:	e7f3      	b.n	2fff3fc2 <mmap_remove_dynamic_region_ctx+0xbe>
2fff3fda:	e951 3006 	ldrd	r3, r0, [r1, #-24]
2fff3fde:	f113 38ff 	adds.w	r8, r3, #4294967295	; 0xffffffff
2fff3fe2:	f140 39ff 	adc.w	r9, r0, #4294967295	; 0xffffffff
2fff3fe6:	eb18 0602 	adds.w	r6, r8, r2
2fff3fea:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2fff3fee:	f149 0700 	adc.w	r7, r9, #0
2fff3ff2:	42bb      	cmp	r3, r7
2fff3ff4:	bf08      	it	eq
2fff3ff6:	42b2      	cmpeq	r2, r6
2fff3ff8:	d2db      	bcs.n	2fff3fb2 <mmap_remove_dynamic_region_ctx+0xae>
2fff3ffa:	e9c4 670c 	strd	r6, r7, [r4, #48]	; 0x30
2fff3ffe:	e7d8      	b.n	2fff3fb2 <mmap_remove_dynamic_region_ctx+0xae>
2fff4000:	692b      	ldr	r3, [r5, #16]
2fff4002:	2b00      	cmp	r3, #0
2fff4004:	db9c      	blt.n	2fff3f40 <mmap_remove_dynamic_region_ctx+0x3c>
2fff4006:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff400a:	e796      	b.n	2fff3f3a <mmap_remove_dynamic_region_ctx+0x36>
2fff400c:	2fffb7f3 	.word	0x2fffb7f3

2fff4010 <init_xlat_tables_ctx>:
2fff4010:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff4012:	4604      	mov	r4, r0
2fff4014:	b920      	cbnz	r0, 2fff4020 <init_xlat_tables_ctx+0x10>
2fff4016:	f240 4199 	movw	r1, #1177	; 0x499
2fff401a:	484f      	ldr	r0, [pc, #316]	; (2fff4158 <init_xlat_tables_ctx+0x148>)
2fff401c:	f006 f87c 	bl	2fffa118 <__assert>
2fff4020:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
2fff4024:	b113      	cbz	r3, 2fff402c <init_xlat_tables_ctx+0x1c>
2fff4026:	f240 419a 	movw	r1, #1178	; 0x49a
2fff402a:	e7f6      	b.n	2fff401a <init_xlat_tables_ctx+0xa>
2fff402c:	6c43      	ldr	r3, [r0, #68]	; 0x44
2fff402e:	3b01      	subs	r3, #1
2fff4030:	2b02      	cmp	r3, #2
2fff4032:	d902      	bls.n	2fff403a <init_xlat_tables_ctx+0x2a>
2fff4034:	f240 419b 	movw	r1, #1179	; 0x49b
2fff4038:	e7ef      	b.n	2fff401a <init_xlat_tables_ctx+0xa>
2fff403a:	f7ff fa99 	bl	2fff3570 <is_mmu_enabled_ctx>
2fff403e:	b110      	cbz	r0, 2fff4046 <init_xlat_tables_ctx+0x36>
2fff4040:	f240 419e 	movw	r1, #1182	; 0x49e
2fff4044:	e7e9      	b.n	2fff401a <init_xlat_tables_ctx+0xa>
2fff4046:	e9d4 6502 	ldrd	r6, r5, [r4, #8]
2fff404a:	f7ff fa2d 	bl	2fff34a8 <xlat_get_min_virt_addr_space_size>
2fff404e:	3801      	subs	r0, #1
2fff4050:	4286      	cmp	r6, r0
2fff4052:	d202      	bcs.n	2fff405a <init_xlat_tables_ctx+0x4a>
2fff4054:	f240 41a2 	movw	r1, #1186	; 0x4a2
2fff4058:	e7df      	b.n	2fff401a <init_xlat_tables_ctx+0xa>
2fff405a:	68a3      	ldr	r3, [r4, #8]
2fff405c:	1c5e      	adds	r6, r3, #1
2fff405e:	401e      	ands	r6, r3
2fff4060:	d002      	beq.n	2fff4068 <init_xlat_tables_ctx+0x58>
2fff4062:	f240 41a5 	movw	r1, #1189	; 0x4a5
2fff4066:	e7d8      	b.n	2fff401a <init_xlat_tables_ctx+0xa>
2fff4068:	4628      	mov	r0, r5
2fff406a:	f000 f87b 	bl	2fff4164 <xlat_mmap_print>
2fff406e:	483b      	ldr	r0, [pc, #236]	; (2fff415c <init_xlat_tables_ctx+0x14c>)
2fff4070:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
2fff4074:	f005 e8ee 	blx	2fff9254 <inv_dcache_range>
2fff4078:	6aa2      	ldr	r2, [r4, #40]	; 0x28
2fff407a:	2000      	movs	r0, #0
2fff407c:	2100      	movs	r1, #0
2fff407e:	42b2      	cmp	r2, r6
2fff4080:	d113      	bne.n	2fff40aa <init_xlat_tables_ctx+0x9a>
2fff4082:	2300      	movs	r3, #0
2fff4084:	2000      	movs	r0, #0
2fff4086:	461f      	mov	r7, r3
2fff4088:	2100      	movs	r1, #0
2fff408a:	69a2      	ldr	r2, [r4, #24]
2fff408c:	429a      	cmp	r2, r3
2fff408e:	dc13      	bgt.n	2fff40b8 <init_xlat_tables_ctx+0xa8>
2fff4090:	68eb      	ldr	r3, [r5, #12]
2fff4092:	bb0b      	cbnz	r3, 2fff40d8 <init_xlat_tables_ctx+0xc8>
2fff4094:	e9d4 6700 	ldrd	r6, r7, [r4]
2fff4098:	f7ff fa02 	bl	2fff34a0 <xlat_arch_get_max_supported_pa>
2fff409c:	42b9      	cmp	r1, r7
2fff409e:	bf08      	it	eq
2fff40a0:	42b0      	cmpeq	r0, r6
2fff40a2:	d23d      	bcs.n	2fff4120 <init_xlat_tables_ctx+0x110>
2fff40a4:	f240 41cd 	movw	r1, #1229	; 0x4cd
2fff40a8:	e7b7      	b.n	2fff401a <init_xlat_tables_ctx+0xa>
2fff40aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff40ac:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
2fff40b0:	3601      	adds	r6, #1
2fff40b2:	e9c3 0100 	strd	r0, r1, [r3]
2fff40b6:	e7e2      	b.n	2fff407e <init_xlat_tables_ctx+0x6e>
2fff40b8:	69e2      	ldr	r2, [r4, #28]
2fff40ba:	f842 7023 	str.w	r7, [r2, r3, lsl #2]
2fff40be:	6962      	ldr	r2, [r4, #20]
2fff40c0:	eb02 3203 	add.w	r2, r2, r3, lsl #12
2fff40c4:	f1a2 0608 	sub.w	r6, r2, #8
2fff40c8:	f602 72f8 	addw	r2, r2, #4088	; 0xff8
2fff40cc:	e9e6 0102 	strd	r0, r1, [r6, #8]!
2fff40d0:	42b2      	cmp	r2, r6
2fff40d2:	d1fb      	bne.n	2fff40cc <init_xlat_tables_ctx+0xbc>
2fff40d4:	3301      	adds	r3, #1
2fff40d6:	e7d8      	b.n	2fff408a <init_xlat_tables_ctx+0x7a>
2fff40d8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff40da:	2200      	movs	r2, #0
2fff40dc:	4629      	mov	r1, r5
2fff40de:	4620      	mov	r0, r4
2fff40e0:	9301      	str	r3, [sp, #4]
2fff40e2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff40e4:	9300      	str	r3, [sp, #0]
2fff40e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff40e8:	f7ff fcfa 	bl	2fff3ae0 <xlat_tables_map_region>
2fff40ec:	6aa1      	ldr	r1, [r4, #40]	; 0x28
2fff40ee:	4606      	mov	r6, r0
2fff40f0:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff40f2:	00c9      	lsls	r1, r1, #3
2fff40f4:	f7ff fbcc 	bl	2fff3890 <xlat_clean_dcache_range>
2fff40f8:	e9d5 1202 	ldrd	r1, r2, [r5, #8]
2fff40fc:	188b      	adds	r3, r1, r2
2fff40fe:	3b01      	subs	r3, #1
2fff4100:	42b3      	cmp	r3, r6
2fff4102:	d00b      	beq.n	2fff411c <init_xlat_tables_ctx+0x10c>
2fff4104:	692b      	ldr	r3, [r5, #16]
2fff4106:	4816      	ldr	r0, [pc, #88]	; (2fff4160 <init_xlat_tables_ctx+0x150>)
2fff4108:	e9cd 2300 	strd	r2, r3, [sp]
2fff410c:	e9d5 2300 	ldrd	r2, r3, [r5]
2fff4110:	f7fe fe04 	bl	2fff2d1c <tf_log>
2fff4114:	f7fe fea6 	bl	2fff2e64 <console_flush>
2fff4118:	f004 efc4 	blx	2fff90a4 <do_panic>
2fff411c:	3518      	adds	r5, #24
2fff411e:	e7b7      	b.n	2fff4090 <init_xlat_tables_ctx+0x80>
2fff4120:	6ba2      	ldr	r2, [r4, #56]	; 0x38
2fff4122:	68a3      	ldr	r3, [r4, #8]
2fff4124:	429a      	cmp	r2, r3
2fff4126:	d902      	bls.n	2fff412e <init_xlat_tables_ctx+0x11e>
2fff4128:	f240 41ce 	movw	r1, #1230	; 0x4ce
2fff412c:	e775      	b.n	2fff401a <init_xlat_tables_ctx+0xa>
2fff412e:	e9d4 230c 	ldrd	r2, r3, [r4, #48]	; 0x30
2fff4132:	e9d4 0100 	ldrd	r0, r1, [r4]
2fff4136:	4299      	cmp	r1, r3
2fff4138:	bf08      	it	eq
2fff413a:	4290      	cmpeq	r0, r2
2fff413c:	d202      	bcs.n	2fff4144 <init_xlat_tables_ctx+0x134>
2fff413e:	f240 41cf 	movw	r1, #1231	; 0x4cf
2fff4142:	e76a      	b.n	2fff401a <init_xlat_tables_ctx+0xa>
2fff4144:	2301      	movs	r3, #1
2fff4146:	4620      	mov	r0, r4
2fff4148:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
2fff414c:	b003      	add	sp, #12
2fff414e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
2fff4152:	f000 b808 	b.w	2fff4166 <xlat_tables_print>
2fff4156:	bf00      	nop
2fff4158:	2fffb7f3 	.word	0x2fffb7f3
2fff415c:	2ffd1000 	.word	0x2ffd1000
2fff4160:	2fffb844 	.word	0x2fffb844

2fff4164 <xlat_mmap_print>:
2fff4164:	4770      	bx	lr

2fff4166 <xlat_tables_print>:
2fff4166:	4770      	bx	lr

2fff4168 <tzc400_set_action>:
2fff4168:	b508      	push	{r3, lr}
2fff416a:	4b06      	ldr	r3, [pc, #24]	; (2fff4184 <tzc400_set_action+0x1c>)
2fff416c:	681b      	ldr	r3, [r3, #0]
2fff416e:	b91b      	cbnz	r3, 2fff4178 <tzc400_set_action+0x10>
2fff4170:	2194      	movs	r1, #148	; 0x94
2fff4172:	4805      	ldr	r0, [pc, #20]	; (2fff4188 <tzc400_set_action+0x20>)
2fff4174:	f005 ffd0 	bl	2fffa118 <__assert>
2fff4178:	2803      	cmp	r0, #3
2fff417a:	d901      	bls.n	2fff4180 <tzc400_set_action+0x18>
2fff417c:	2195      	movs	r1, #149	; 0x95
2fff417e:	e7f8      	b.n	2fff4172 <tzc400_set_action+0xa>
2fff4180:	6058      	str	r0, [r3, #4]
2fff4182:	bd08      	pop	{r3, pc}
2fff4184:	2fffe960 	.word	0x2fffe960
2fff4188:	2fffb893 	.word	0x2fffb893

2fff418c <tzc400_init>:
2fff418c:	b508      	push	{r3, lr}
2fff418e:	b918      	cbnz	r0, 2fff4198 <tzc400_init+0xc>
2fff4190:	4812      	ldr	r0, [pc, #72]	; (2fff41dc <tzc400_init+0x50>)
2fff4192:	21a6      	movs	r1, #166	; 0xa6
2fff4194:	f005 ffc0 	bl	2fffa118 <__assert>
2fff4198:	f8d0 3fe0 	ldr.w	r3, [r0, #4064]	; 0xfe0
2fff419c:	f8d0 1fe4 	ldr.w	r1, [r0, #4068]	; 0xfe4
2fff41a0:	4a0f      	ldr	r2, [pc, #60]	; (2fff41e0 <tzc400_init+0x54>)
2fff41a2:	0209      	lsls	r1, r1, #8
2fff41a4:	6010      	str	r0, [r2, #0]
2fff41a6:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
2fff41aa:	4319      	orrs	r1, r3
2fff41ac:	f5b1 6f8c 	cmp.w	r1, #1120	; 0x460
2fff41b0:	d006      	beq.n	2fff41c0 <tzc400_init+0x34>
2fff41b2:	480c      	ldr	r0, [pc, #48]	; (2fff41e4 <tzc400_init+0x58>)
2fff41b4:	f7fe fdb2 	bl	2fff2d1c <tf_log>
2fff41b8:	f7fe fe54 	bl	2fff2e64 <console_flush>
2fff41bc:	f004 ef72 	blx	2fff90a4 <do_panic>
2fff41c0:	6803      	ldr	r3, [r0, #0]
2fff41c2:	f3c3 6101 	ubfx	r1, r3, #24, #2
2fff41c6:	3101      	adds	r1, #1
2fff41c8:	7151      	strb	r1, [r2, #5]
2fff41ca:	f3c3 2105 	ubfx	r1, r3, #8, #6
2fff41ce:	f003 031f 	and.w	r3, r3, #31
2fff41d2:	3101      	adds	r1, #1
2fff41d4:	3301      	adds	r3, #1
2fff41d6:	7111      	strb	r1, [r2, #4]
2fff41d8:	7193      	strb	r3, [r2, #6]
2fff41da:	bd08      	pop	{r3, pc}
2fff41dc:	2fffb893 	.word	0x2fffb893
2fff41e0:	2fffe960 	.word	0x2fffe960
2fff41e4:	2fffb8ac 	.word	0x2fffb8ac

2fff41e8 <tzc400_configure_region>:
2fff41e8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff41ec:	4690      	mov	r8, r2
2fff41ee:	4a2b      	ldr	r2, [pc, #172]	; (2fff429c <tzc400_configure_region+0xb4>)
2fff41f0:	4699      	mov	r9, r3
2fff41f2:	e9dd 450a 	ldrd	r4, r5, [sp, #40]	; 0x28
2fff41f6:	6813      	ldr	r3, [r2, #0]
2fff41f8:	b91b      	cbnz	r3, 2fff4202 <tzc400_configure_region+0x1a>
2fff41fa:	21d9      	movs	r1, #217	; 0xd9
2fff41fc:	4828      	ldr	r0, [pc, #160]	; (2fff42a0 <tzc400_configure_region+0xb8>)
2fff41fe:	f005 ff8b 	bl	2fffa118 <__assert>
2fff4202:	f892 c005 	ldrb.w	ip, [r2, #5]
2fff4206:	fa30 fc0c 	lsrs.w	ip, r0, ip
2fff420a:	d102      	bne.n	2fff4212 <tzc400_configure_region+0x2a>
2fff420c:	7996      	ldrb	r6, [r2, #6]
2fff420e:	428e      	cmp	r6, r1
2fff4210:	d801      	bhi.n	2fff4216 <tzc400_configure_region+0x2e>
2fff4212:	21dc      	movs	r1, #220	; 0xdc
2fff4214:	e7f2      	b.n	2fff41fc <tzc400_configure_region+0x14>
2fff4216:	7912      	ldrb	r2, [r2, #4]
2fff4218:	f04f 3eff 	mov.w	lr, #4294967295	; 0xffffffff
2fff421c:	f1c2 0b40 	rsb	fp, r2, #64	; 0x40
2fff4220:	f1a2 0a20 	sub.w	sl, r2, #32
2fff4224:	f1c2 0220 	rsb	r2, r2, #32
2fff4228:	fa2e f60b 	lsr.w	r6, lr, fp
2fff422c:	fa0e fa0a 	lsl.w	sl, lr, sl
2fff4230:	ea46 060a 	orr.w	r6, r6, sl
2fff4234:	fa2e f202 	lsr.w	r2, lr, r2
2fff4238:	fa2e f70b 	lsr.w	r7, lr, fp
2fff423c:	4316      	orrs	r6, r2
2fff423e:	42af      	cmp	r7, r5
2fff4240:	bf08      	it	eq
2fff4242:	42a6      	cmpeq	r6, r4
2fff4244:	d303      	bcc.n	2fff424e <tzc400_configure_region+0x66>
2fff4246:	45a9      	cmp	r9, r5
2fff4248:	bf08      	it	eq
2fff424a:	45a0      	cmpeq	r8, r4
2fff424c:	d301      	bcc.n	2fff4252 <tzc400_configure_region+0x6a>
2fff424e:	21e3      	movs	r1, #227	; 0xe3
2fff4250:	e7d4      	b.n	2fff41fc <tzc400_configure_region+0x14>
2fff4252:	1c62      	adds	r2, r4, #1
2fff4254:	4667      	mov	r7, ip
2fff4256:	ea42 0208 	orr.w	r2, r2, r8
2fff425a:	f3c2 060b 	ubfx	r6, r2, #0, #12
2fff425e:	ea56 0207 	orrs.w	r2, r6, r7
2fff4262:	d001      	beq.n	2fff4268 <tzc400_configure_region+0x80>
2fff4264:	21e7      	movs	r1, #231	; 0xe7
2fff4266:	e7c9      	b.n	2fff41fc <tzc400_configure_region+0x14>
2fff4268:	9a0c      	ldr	r2, [sp, #48]	; 0x30
2fff426a:	2a03      	cmp	r2, #3
2fff426c:	d901      	bls.n	2fff4272 <tzc400_configure_region+0x8a>
2fff426e:	21e9      	movs	r1, #233	; 0xe9
2fff4270:	e7c4      	b.n	2fff41fc <tzc400_configure_region+0x14>
2fff4272:	eb03 1141 	add.w	r1, r3, r1, lsl #5
2fff4276:	9b0c      	ldr	r3, [sp, #48]	; 0x30
2fff4278:	f8c1 8100 	str.w	r8, [r1, #256]	; 0x100
2fff427c:	ea40 7083 	orr.w	r0, r0, r3, lsl #30
2fff4280:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2fff4282:	f8c1 9104 	str.w	r9, [r1, #260]	; 0x104
2fff4286:	f8c1 4108 	str.w	r4, [r1, #264]	; 0x108
2fff428a:	f8c1 510c 	str.w	r5, [r1, #268]	; 0x10c
2fff428e:	f8c1 0110 	str.w	r0, [r1, #272]	; 0x110
2fff4292:	f8c1 3114 	str.w	r3, [r1, #276]	; 0x114
2fff4296:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff429a:	bf00      	nop
2fff429c:	2fffe960 	.word	0x2fffe960
2fff42a0:	2fffb893 	.word	0x2fffb893

2fff42a4 <tzc400_enable_filters>:
2fff42a4:	4a16      	ldr	r2, [pc, #88]	; (2fff4300 <tzc400_enable_filters+0x5c>)
2fff42a6:	b570      	push	{r4, r5, r6, lr}
2fff42a8:	6813      	ldr	r3, [r2, #0]
2fff42aa:	b12b      	cbz	r3, 2fff42b8 <tzc400_enable_filters+0x14>
2fff42ac:	7954      	ldrb	r4, [r2, #5]
2fff42ae:	2100      	movs	r1, #0
2fff42b0:	2501      	movs	r5, #1
2fff42b2:	428c      	cmp	r4, r1
2fff42b4:	d804      	bhi.n	2fff42c0 <tzc400_enable_filters+0x1c>
2fff42b6:	bd70      	pop	{r4, r5, r6, pc}
2fff42b8:	4812      	ldr	r0, [pc, #72]	; (2fff4304 <tzc400_enable_filters+0x60>)
2fff42ba:	21f4      	movs	r1, #244	; 0xf4
2fff42bc:	f005 ff2c 	bl	2fffa118 <__assert>
2fff42c0:	689a      	ldr	r2, [r3, #8]
2fff42c2:	f103 0608 	add.w	r6, r3, #8
2fff42c6:	f3c2 4203 	ubfx	r2, r2, #16, #4
2fff42ca:	40ca      	lsrs	r2, r1
2fff42cc:	07d2      	lsls	r2, r2, #31
2fff42ce:	d506      	bpl.n	2fff42de <tzc400_enable_filters+0x3a>
2fff42d0:	480d      	ldr	r0, [pc, #52]	; (2fff4308 <tzc400_enable_filters+0x64>)
2fff42d2:	f7fe fd23 	bl	2fff2d1c <tf_log>
2fff42d6:	f7fe fdc5 	bl	2fff2e64 <console_flush>
2fff42da:	f004 eee4 	blx	2fff90a4 <do_panic>
2fff42de:	6898      	ldr	r0, [r3, #8]
2fff42e0:	fa05 f201 	lsl.w	r2, r5, r1
2fff42e4:	f3c0 4003 	ubfx	r0, r0, #16, #4
2fff42e8:	4302      	orrs	r2, r0
2fff42ea:	f002 000f 	and.w	r0, r2, #15
2fff42ee:	6098      	str	r0, [r3, #8]
2fff42f0:	6830      	ldr	r0, [r6, #0]
2fff42f2:	f3c0 4003 	ubfx	r0, r0, #16, #4
2fff42f6:	4282      	cmp	r2, r0
2fff42f8:	d1fa      	bne.n	2fff42f0 <tzc400_enable_filters+0x4c>
2fff42fa:	3101      	adds	r1, #1
2fff42fc:	e7d9      	b.n	2fff42b2 <tzc400_enable_filters+0xe>
2fff42fe:	bf00      	nop
2fff4300:	2fffe960 	.word	0x2fffe960
2fff4304:	2fffb893 	.word	0x2fffb893
2fff4308:	2fffb8d0 	.word	0x2fffb8d0

2fff430c <tzc400_disable_filters>:
2fff430c:	4b10      	ldr	r3, [pc, #64]	; (2fff4350 <tzc400_disable_filters+0x44>)
2fff430e:	b570      	push	{r4, r5, r6, lr}
2fff4310:	6818      	ldr	r0, [r3, #0]
2fff4312:	b128      	cbz	r0, 2fff4320 <tzc400_disable_filters+0x14>
2fff4314:	795c      	ldrb	r4, [r3, #5]
2fff4316:	2100      	movs	r1, #0
2fff4318:	2501      	movs	r5, #1
2fff431a:	428c      	cmp	r4, r1
2fff431c:	d805      	bhi.n	2fff432a <tzc400_disable_filters+0x1e>
2fff431e:	bd70      	pop	{r4, r5, r6, pc}
2fff4320:	480c      	ldr	r0, [pc, #48]	; (2fff4354 <tzc400_disable_filters+0x48>)
2fff4322:	f240 110f 	movw	r1, #271	; 0x10f
2fff4326:	f005 fef7 	bl	2fffa118 <__assert>
2fff432a:	6882      	ldr	r2, [r0, #8]
2fff432c:	f100 0608 	add.w	r6, r0, #8
2fff4330:	fa05 f301 	lsl.w	r3, r5, r1
2fff4334:	0c12      	lsrs	r2, r2, #16
2fff4336:	ea22 0303 	bic.w	r3, r2, r3
2fff433a:	f003 030f 	and.w	r3, r3, #15
2fff433e:	6083      	str	r3, [r0, #8]
2fff4340:	6832      	ldr	r2, [r6, #0]
2fff4342:	f3c2 4203 	ubfx	r2, r2, #16, #4
2fff4346:	4293      	cmp	r3, r2
2fff4348:	d1fa      	bne.n	2fff4340 <tzc400_disable_filters+0x34>
2fff434a:	3101      	adds	r1, #1
2fff434c:	e7e5      	b.n	2fff431a <tzc400_disable_filters+0xe>
2fff434e:	bf00      	nop
2fff4350:	2fffe960 	.word	0x2fffe960
2fff4354:	2fffb893 	.word	0x2fffb893

2fff4358 <tzc400_is_pending_interrupt>:
2fff4358:	b538      	push	{r3, r4, r5, lr}
2fff435a:	4b0c      	ldr	r3, [pc, #48]	; (2fff438c <tzc400_is_pending_interrupt+0x34>)
2fff435c:	681a      	ldr	r2, [r3, #0]
2fff435e:	b132      	cbz	r2, 2fff436e <tzc400_is_pending_interrupt+0x16>
2fff4360:	7959      	ldrb	r1, [r3, #5]
2fff4362:	2001      	movs	r0, #1
2fff4364:	2300      	movs	r3, #0
2fff4366:	4299      	cmp	r1, r3
2fff4368:	d806      	bhi.n	2fff4378 <tzc400_is_pending_interrupt+0x20>
2fff436a:	2000      	movs	r0, #0
2fff436c:	bd38      	pop	{r3, r4, r5, pc}
2fff436e:	4808      	ldr	r0, [pc, #32]	; (2fff4390 <tzc400_is_pending_interrupt+0x38>)
2fff4370:	f240 1127 	movw	r1, #295	; 0x127
2fff4374:	f005 fed0 	bl	2fffa118 <__assert>
2fff4378:	6914      	ldr	r4, [r2, #16]
2fff437a:	fa00 f503 	lsl.w	r5, r0, r3
2fff437e:	4225      	tst	r5, r4
2fff4380:	d101      	bne.n	2fff4386 <tzc400_is_pending_interrupt+0x2e>
2fff4382:	3301      	adds	r3, #1
2fff4384:	e7ef      	b.n	2fff4366 <tzc400_is_pending_interrupt+0xe>
2fff4386:	2001      	movs	r0, #1
2fff4388:	e7f0      	b.n	2fff436c <tzc400_is_pending_interrupt+0x14>
2fff438a:	bf00      	nop
2fff438c:	2fffe960 	.word	0x2fffe960
2fff4390:	2fffb893 	.word	0x2fffb893

2fff4394 <tzc400_it_handler>:
2fff4394:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff4396:	4e24      	ldr	r6, [pc, #144]	; (2fff4428 <tzc400_it_handler+0x94>)
2fff4398:	6832      	ldr	r2, [r6, #0]
2fff439a:	7971      	ldrb	r1, [r6, #5]
2fff439c:	2a00      	cmp	r2, #0
2fff439e:	d132      	bne.n	2fff4406 <tzc400_it_handler+0x72>
2fff43a0:	4822      	ldr	r0, [pc, #136]	; (2fff442c <tzc400_it_handler+0x98>)
2fff43a2:	f240 1139 	movw	r1, #313	; 0x139
2fff43a6:	f005 feb7 	bl	2fffa118 <__assert>
2fff43aa:	6915      	ldr	r5, [r2, #16]
2fff43ac:	fa00 f703 	lsl.w	r7, r0, r3
2fff43b0:	422f      	tst	r7, r5
2fff43b2:	bf18      	it	ne
2fff43b4:	461c      	movne	r4, r3
2fff43b6:	3301      	adds	r3, #1
2fff43b8:	428b      	cmp	r3, r1
2fff43ba:	d228      	bcs.n	2fff440e <tzc400_it_handler+0x7a>
2fff43bc:	428c      	cmp	r4, r1
2fff43be:	d0f4      	beq.n	2fff43aa <tzc400_it_handler+0x16>
2fff43c0:	b374      	cbz	r4, 2fff4420 <tzc400_it_handler+0x8c>
2fff43c2:	6b11      	ldr	r1, [r2, #48]	; 0x30
2fff43c4:	481a      	ldr	r0, [pc, #104]	; (2fff4430 <tzc400_it_handler+0x9c>)
2fff43c6:	f7fe fca9 	bl	2fff2d1c <tf_log>
2fff43ca:	6833      	ldr	r3, [r6, #0]
2fff43cc:	b354      	cbz	r4, 2fff4424 <tzc400_it_handler+0x90>
2fff43ce:	6b9d      	ldr	r5, [r3, #56]	; 0x38
2fff43d0:	f015 0f15 	tst.w	r5, #21
2fff43d4:	bf0c      	ite	eq
2fff43d6:	4817      	ldreq	r0, [pc, #92]	; (2fff4434 <tzc400_it_handler+0xa0>)
2fff43d8:	4817      	ldrne	r0, [pc, #92]	; (2fff4438 <tzc400_it_handler+0xa4>)
2fff43da:	f7fe fc9f 	bl	2fff2d1c <tf_log>
2fff43de:	f015 0f14 	tst.w	r5, #20
2fff43e2:	bf0c      	ite	eq
2fff43e4:	4815      	ldreq	r0, [pc, #84]	; (2fff443c <tzc400_it_handler+0xa8>)
2fff43e6:	4816      	ldrne	r0, [pc, #88]	; (2fff4440 <tzc400_it_handler+0xac>)
2fff43e8:	f7fe fc98 	bl	2fff2d1c <tf_log>
2fff43ec:	f015 0f18 	tst.w	r5, #24
2fff43f0:	bf0c      	ite	eq
2fff43f2:	4814      	ldreq	r0, [pc, #80]	; (2fff4444 <tzc400_it_handler+0xb0>)
2fff43f4:	4814      	ldrne	r0, [pc, #80]	; (2fff4448 <tzc400_it_handler+0xb4>)
2fff43f6:	f7fe fc91 	bl	2fff2d1c <tf_log>
2fff43fa:	2301      	movs	r3, #1
2fff43fc:	fa03 f404 	lsl.w	r4, r3, r4
2fff4400:	6833      	ldr	r3, [r6, #0]
2fff4402:	615c      	str	r4, [r3, #20]
2fff4404:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff4406:	460c      	mov	r4, r1
2fff4408:	2300      	movs	r3, #0
2fff440a:	2001      	movs	r0, #1
2fff440c:	e7d4      	b.n	2fff43b8 <tzc400_it_handler+0x24>
2fff440e:	428c      	cmp	r4, r1
2fff4410:	d1d6      	bne.n	2fff43c0 <tzc400_it_handler+0x2c>
2fff4412:	480e      	ldr	r0, [pc, #56]	; (2fff444c <tzc400_it_handler+0xb8>)
2fff4414:	f7fe fc82 	bl	2fff2d1c <tf_log>
2fff4418:	f7fe fd24 	bl	2fff2e64 <console_flush>
2fff441c:	f004 ee42 	blx	2fff90a4 <do_panic>
2fff4420:	6a11      	ldr	r1, [r2, #32]
2fff4422:	e7cf      	b.n	2fff43c4 <tzc400_it_handler+0x30>
2fff4424:	6a9d      	ldr	r5, [r3, #40]	; 0x28
2fff4426:	e7d3      	b.n	2fff43d0 <tzc400_it_handler+0x3c>
2fff4428:	2fffe960 	.word	0x2fffe960
2fff442c:	2fffb893 	.word	0x2fffb893
2fff4430:	2fffb916 	.word	0x2fffb916
2fff4434:	2fffb935 	.word	0x2fffb935
2fff4438:	2fffb943 	.word	0x2fffb943
2fff443c:	2fffb94d 	.word	0x2fffb94d
2fff4440:	2fffb95a 	.word	0x2fffb95a
2fff4444:	2fffb969 	.word	0x2fffb969
2fff4448:	2fffb971 	.word	0x2fffb971
2fff444c:	2fffb900 	.word	0x2fffb900

2fff4450 <udelay>:
2fff4450:	b570      	push	{r4, r5, r6, lr}
2fff4452:	4604      	mov	r4, r0
2fff4454:	4d13      	ldr	r5, [pc, #76]	; (2fff44a4 <udelay+0x54>)
2fff4456:	682b      	ldr	r3, [r5, #0]
2fff4458:	b12b      	cbz	r3, 2fff4466 <udelay+0x16>
2fff445a:	685a      	ldr	r2, [r3, #4]
2fff445c:	b11a      	cbz	r2, 2fff4466 <udelay+0x16>
2fff445e:	6899      	ldr	r1, [r3, #8]
2fff4460:	b109      	cbz	r1, 2fff4466 <udelay+0x16>
2fff4462:	681a      	ldr	r2, [r3, #0]
2fff4464:	b91a      	cbnz	r2, 2fff446e <udelay+0x1e>
2fff4466:	2119      	movs	r1, #25
2fff4468:	480f      	ldr	r0, [pc, #60]	; (2fff44a8 <udelay+0x58>)
2fff446a:	f005 fe55 	bl	2fffa118 <__assert>
2fff446e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff4472:	fbb3 f3f1 	udiv	r3, r3, r1
2fff4476:	4283      	cmp	r3, r0
2fff4478:	d801      	bhi.n	2fff447e <udelay+0x2e>
2fff447a:	2120      	movs	r1, #32
2fff447c:	e7f4      	b.n	2fff4468 <udelay+0x18>
2fff447e:	4790      	blx	r2
2fff4480:	682a      	ldr	r2, [r5, #0]
2fff4482:	4606      	mov	r6, r0
2fff4484:	6853      	ldr	r3, [r2, #4]
2fff4486:	6892      	ldr	r2, [r2, #8]
2fff4488:	1e58      	subs	r0, r3, #1
2fff448a:	fb02 0404 	mla	r4, r2, r4, r0
2fff448e:	fbb4 f4f3 	udiv	r4, r4, r3
2fff4492:	3401      	adds	r4, #1
2fff4494:	682b      	ldr	r3, [r5, #0]
2fff4496:	681b      	ldr	r3, [r3, #0]
2fff4498:	4798      	blx	r3
2fff449a:	1a33      	subs	r3, r6, r0
2fff449c:	429c      	cmp	r4, r3
2fff449e:	d8f9      	bhi.n	2fff4494 <udelay+0x44>
2fff44a0:	bd70      	pop	{r4, r5, r6, pc}
2fff44a2:	bf00      	nop
2fff44a4:	2fffe968 	.word	0x2fffe968
2fff44a8:	2fffb97a 	.word	0x2fffb97a

2fff44ac <mdelay>:
2fff44ac:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff44b0:	4358      	muls	r0, r3
2fff44b2:	f7ff bfcd 	b.w	2fff4450 <udelay>
	...

2fff44b8 <timer_init>:
2fff44b8:	b508      	push	{r3, lr}
2fff44ba:	b128      	cbz	r0, 2fff44c8 <timer_init+0x10>
2fff44bc:	6843      	ldr	r3, [r0, #4]
2fff44be:	b11b      	cbz	r3, 2fff44c8 <timer_init+0x10>
2fff44c0:	6883      	ldr	r3, [r0, #8]
2fff44c2:	b10b      	cbz	r3, 2fff44c8 <timer_init+0x10>
2fff44c4:	6803      	ldr	r3, [r0, #0]
2fff44c6:	b91b      	cbnz	r3, 2fff44d0 <timer_init+0x18>
2fff44c8:	4803      	ldr	r0, [pc, #12]	; (2fff44d8 <timer_init+0x20>)
2fff44ca:	2142      	movs	r1, #66	; 0x42
2fff44cc:	f005 fe24 	bl	2fffa118 <__assert>
2fff44d0:	4b02      	ldr	r3, [pc, #8]	; (2fff44dc <timer_init+0x24>)
2fff44d2:	6018      	str	r0, [r3, #0]
2fff44d4:	bd08      	pop	{r3, pc}
2fff44d6:	bf00      	nop
2fff44d8:	2fffb97a 	.word	0x2fffb97a
2fff44dc:	2fffe968 	.word	0x2fffe968

2fff44e0 <get_timer_value>:
2fff44e0:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff44e4:	43c0      	mvns	r0, r0
2fff44e6:	4770      	bx	lr

2fff44e8 <generic_delay_timer_init_args>:
2fff44e8:	4b03      	ldr	r3, [pc, #12]	; (2fff44f8 <generic_delay_timer_init_args+0x10>)
2fff44ea:	4a04      	ldr	r2, [pc, #16]	; (2fff44fc <generic_delay_timer_init_args+0x14>)
2fff44ec:	6058      	str	r0, [r3, #4]
2fff44ee:	4618      	mov	r0, r3
2fff44f0:	601a      	str	r2, [r3, #0]
2fff44f2:	6099      	str	r1, [r3, #8]
2fff44f4:	f7ff bfe0 	b.w	2fff44b8 <timer_init>
2fff44f8:	2fffe96c 	.word	0x2fffe96c
2fff44fc:	2fff44e1 	.word	0x2fff44e1

2fff4500 <generic_delay_timer_init>:
2fff4500:	b538      	push	{r3, r4, r5, lr}
2fff4502:	ee10 3f31 	mrc	15, 0, r3, cr0, cr1, {1}
2fff4506:	f413 2f70 	tst.w	r3, #983040	; 0xf0000
2fff450a:	d103      	bne.n	2fff4514 <generic_delay_timer_init+0x14>
2fff450c:	480b      	ldr	r0, [pc, #44]	; (2fff453c <generic_delay_timer_init+0x3c>)
2fff450e:	212f      	movs	r1, #47	; 0x2f
2fff4510:	f005 fe02 	bl	2fffa118 <__assert>
2fff4514:	f7fe fdb9 	bl	2fff308a <plat_get_syscnt_freq2>
2fff4518:	4601      	mov	r1, r0
2fff451a:	2206      	movs	r2, #6
2fff451c:	4808      	ldr	r0, [pc, #32]	; (2fff4540 <generic_delay_timer_init+0x40>)
2fff451e:	230a      	movs	r3, #10
2fff4520:	fbb1 f4f3 	udiv	r4, r1, r3
2fff4524:	fb03 1514 	mls	r5, r3, r4, r1
2fff4528:	b925      	cbnz	r5, 2fff4534 <generic_delay_timer_init+0x34>
2fff452a:	3a01      	subs	r2, #1
2fff452c:	4621      	mov	r1, r4
2fff452e:	fbb0 f0f3 	udiv	r0, r0, r3
2fff4532:	d1f5      	bne.n	2fff4520 <generic_delay_timer_init+0x20>
2fff4534:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff4538:	f7ff bfd6 	b.w	2fff44e8 <generic_delay_timer_init_args>
2fff453c:	2fffb99c 	.word	0x2fffb99c
2fff4540:	000f4240 	.word	0x000f4240

2fff4544 <fdt32_to_cpu>:
2fff4544:	ba00      	rev	r0, r0
2fff4546:	4770      	bx	lr

2fff4548 <bsec_lock>:
2fff4548:	b508      	push	{r3, lr}
2fff454a:	f7fe fdb0 	bl	2fff30ae <stm32mp_lock_available>
2fff454e:	b120      	cbz	r0, 2fff455a <bsec_lock+0x12>
2fff4550:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff4554:	4801      	ldr	r0, [pc, #4]	; (2fff455c <bsec_lock+0x14>)
2fff4556:	f008 bc63 	b.w	2fffce20 <__spin_lock_from_thumb>
2fff455a:	bd08      	pop	{r3, pc}
2fff455c:	2fffe97c 	.word	0x2fffe97c

2fff4560 <bsec_unlock>:
2fff4560:	b508      	push	{r3, lr}
2fff4562:	f7fe fda4 	bl	2fff30ae <stm32mp_lock_available>
2fff4566:	b120      	cbz	r0, 2fff4572 <bsec_unlock+0x12>
2fff4568:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff456c:	4801      	ldr	r0, [pc, #4]	; (2fff4574 <bsec_unlock+0x14>)
2fff456e:	f008 bc63 	b.w	2fffce38 <__spin_unlock_from_thumb>
2fff4572:	bd08      	pop	{r3, pc}
2fff4574:	2fffe97c 	.word	0x2fffe97c

2fff4578 <otp_bank_offset>:
2fff4578:	285f      	cmp	r0, #95	; 0x5f
2fff457a:	b508      	push	{r3, lr}
2fff457c:	d903      	bls.n	2fff4586 <otp_bank_offset+0xe>
2fff457e:	4803      	ldr	r0, [pc, #12]	; (2fff458c <otp_bank_offset+0x14>)
2fff4580:	2191      	movs	r1, #145	; 0x91
2fff4582:	f005 fdc9 	bl	2fffa118 <__assert>
2fff4586:	0940      	lsrs	r0, r0, #5
2fff4588:	0080      	lsls	r0, r0, #2
2fff458a:	bd08      	pop	{r3, pc}
2fff458c:	2fffb9c6 	.word	0x2fffb9c6

2fff4590 <bsec_check_error>:
2fff4590:	b538      	push	{r3, r4, r5, lr}
2fff4592:	f000 031f 	and.w	r3, r0, #31
2fff4596:	2401      	movs	r4, #1
2fff4598:	460d      	mov	r5, r1
2fff459a:	409c      	lsls	r4, r3
2fff459c:	f7ff ffec 	bl	2fff4578 <otp_bank_offset>
2fff45a0:	4b07      	ldr	r3, [pc, #28]	; (2fff45c0 <bsec_check_error+0x30>)
2fff45a2:	681b      	ldr	r3, [r3, #0]
2fff45a4:	4403      	add	r3, r0
2fff45a6:	6b58      	ldr	r0, [r3, #52]	; 0x34
2fff45a8:	4020      	ands	r0, r4
2fff45aa:	d106      	bne.n	2fff45ba <bsec_check_error+0x2a>
2fff45ac:	b125      	cbz	r5, 2fff45b8 <bsec_check_error+0x28>
2fff45ae:	69d8      	ldr	r0, [r3, #28]
2fff45b0:	4020      	ands	r0, r4
2fff45b2:	bf18      	it	ne
2fff45b4:	f06f 0001 	mvnne.w	r0, #1
2fff45b8:	bd38      	pop	{r3, r4, r5, pc}
2fff45ba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff45be:	e7fb      	b.n	2fff45b8 <bsec_check_error+0x28>
2fff45c0:	2fffe978 	.word	0x2fffe978

2fff45c4 <bsec_get_base>:
2fff45c4:	4b01      	ldr	r3, [pc, #4]	; (2fff45cc <bsec_get_base+0x8>)
2fff45c6:	6818      	ldr	r0, [r3, #0]
2fff45c8:	4770      	bx	lr
2fff45ca:	bf00      	nop
2fff45cc:	2fffe978 	.word	0x2fffe978

2fff45d0 <bsec_get_config>:
2fff45d0:	b1d0      	cbz	r0, 2fff4608 <bsec_get_config+0x38>
2fff45d2:	4b0f      	ldr	r3, [pc, #60]	; (2fff4610 <bsec_get_config+0x40>)
2fff45d4:	681a      	ldr	r2, [r3, #0]
2fff45d6:	6813      	ldr	r3, [r2, #0]
2fff45d8:	f003 0101 	and.w	r1, r3, #1
2fff45dc:	7101      	strb	r1, [r0, #4]
2fff45de:	f3c3 0141 	ubfx	r1, r3, #1, #2
2fff45e2:	70c1      	strb	r1, [r0, #3]
2fff45e4:	f3c3 01c3 	ubfx	r1, r3, #3, #4
2fff45e8:	f3c3 13c1 	ubfx	r3, r3, #7, #2
2fff45ec:	7081      	strb	r1, [r0, #2]
2fff45ee:	7043      	strb	r3, [r0, #1]
2fff45f0:	6913      	ldr	r3, [r2, #16]
2fff45f2:	f003 0201 	and.w	r2, r3, #1
2fff45f6:	7182      	strb	r2, [r0, #6]
2fff45f8:	f3c3 0280 	ubfx	r2, r3, #2, #1
2fff45fc:	f3c3 1300 	ubfx	r3, r3, #4, #1
2fff4600:	7002      	strb	r2, [r0, #0]
2fff4602:	7143      	strb	r3, [r0, #5]
2fff4604:	2000      	movs	r0, #0
2fff4606:	4770      	bx	lr
2fff4608:	f06f 0003 	mvn.w	r0, #3
2fff460c:	4770      	bx	lr
2fff460e:	bf00      	nop
2fff4610:	2fffe978 	.word	0x2fffe978

2fff4614 <bsec_find_otp_name_in_dt>:
2fff4614:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff4616:	460f      	mov	r7, r1
2fff4618:	4616      	mov	r6, r2
2fff461a:	4604      	mov	r4, r0
2fff461c:	2800      	cmp	r0, #0
2fff461e:	d052      	beq.n	2fff46c6 <bsec_find_otp_name_in_dt+0xb2>
2fff4620:	2900      	cmp	r1, #0
2fff4622:	d050      	beq.n	2fff46c6 <bsec_find_otp_name_in_dt+0xb2>
2fff4624:	4668      	mov	r0, sp
2fff4626:	f003 ffe3 	bl	2fff85f0 <fdt_get_address>
2fff462a:	b918      	cbnz	r0, 2fff4634 <bsec_find_otp_name_in_dt+0x20>
2fff462c:	f7fe fc1a 	bl	2fff2e64 <console_flush>
2fff4630:	f004 ed38 	blx	2fff90a4 <do_panic>
2fff4634:	4825      	ldr	r0, [pc, #148]	; (2fff46cc <bsec_find_otp_name_in_dt+0xb8>)
2fff4636:	f004 f8e9 	bl	2fff880c <dt_get_node_by_compatible>
2fff463a:	1e05      	subs	r5, r0, #0
2fff463c:	da04      	bge.n	2fff4648 <bsec_find_otp_name_in_dt+0x34>
2fff463e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff4642:	4620      	mov	r0, r4
2fff4644:	b003      	add	sp, #12
2fff4646:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff4648:	4a21      	ldr	r2, [pc, #132]	; (2fff46d0 <bsec_find_otp_name_in_dt+0xbc>)
2fff464a:	4623      	mov	r3, r4
2fff464c:	9800      	ldr	r0, [sp, #0]
2fff464e:	4629      	mov	r1, r5
2fff4650:	f005 fcfb 	bl	2fffa04a <fdt_stringlist_search>
2fff4654:	1e04      	subs	r4, r0, #0
2fff4656:	dbf2      	blt.n	2fff463e <bsec_find_otp_name_in_dt+0x2a>
2fff4658:	4a1e      	ldr	r2, [pc, #120]	; (2fff46d4 <bsec_find_otp_name_in_dt+0xc0>)
2fff465a:	ab01      	add	r3, sp, #4
2fff465c:	9800      	ldr	r0, [sp, #0]
2fff465e:	4629      	mov	r1, r5
2fff4660:	f005 fbbd 	bl	2fff9dde <fdt_getprop>
2fff4664:	2800      	cmp	r0, #0
2fff4666:	d0ea      	beq.n	2fff463e <bsec_find_otp_name_in_dt+0x2a>
2fff4668:	9b01      	ldr	r3, [sp, #4]
2fff466a:	ebb3 0f84 	cmp.w	r3, r4, lsl #2
2fff466e:	dbe6      	blt.n	2fff463e <bsec_find_otp_name_in_dt+0x2a>
2fff4670:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
2fff4674:	f7ff ff66 	bl	2fff4544 <fdt32_to_cpu>
2fff4678:	4601      	mov	r1, r0
2fff467a:	9800      	ldr	r0, [sp, #0]
2fff467c:	f005 fca1 	bl	2fff9fc2 <fdt_node_offset_by_phandle>
2fff4680:	1e01      	subs	r1, r0, #0
2fff4682:	da03      	bge.n	2fff468c <bsec_find_otp_name_in_dt+0x78>
2fff4684:	4814      	ldr	r0, [pc, #80]	; (2fff46d8 <bsec_find_otp_name_in_dt+0xc4>)
2fff4686:	f7fe fb49 	bl	2fff2d1c <tf_log>
2fff468a:	e7d8      	b.n	2fff463e <bsec_find_otp_name_in_dt+0x2a>
2fff468c:	4a13      	ldr	r2, [pc, #76]	; (2fff46dc <bsec_find_otp_name_in_dt+0xc8>)
2fff468e:	ab01      	add	r3, sp, #4
2fff4690:	9800      	ldr	r0, [sp, #0]
2fff4692:	f005 fba4 	bl	2fff9dde <fdt_getprop>
2fff4696:	4605      	mov	r5, r0
2fff4698:	2800      	cmp	r0, #0
2fff469a:	d0f3      	beq.n	2fff4684 <bsec_find_otp_name_in_dt+0x70>
2fff469c:	9b01      	ldr	r3, [sp, #4]
2fff469e:	2b08      	cmp	r3, #8
2fff46a0:	d1f0      	bne.n	2fff4684 <bsec_find_otp_name_in_dt+0x70>
2fff46a2:	6800      	ldr	r0, [r0, #0]
2fff46a4:	f7ff ff4e 	bl	2fff4544 <fdt32_to_cpu>
2fff46a8:	f010 0403 	ands.w	r4, r0, #3
2fff46ac:	d001      	beq.n	2fff46b2 <bsec_find_otp_name_in_dt+0x9e>
2fff46ae:	480c      	ldr	r0, [pc, #48]	; (2fff46e0 <bsec_find_otp_name_in_dt+0xcc>)
2fff46b0:	e7e9      	b.n	2fff4686 <bsec_find_otp_name_in_dt+0x72>
2fff46b2:	0880      	lsrs	r0, r0, #2
2fff46b4:	6038      	str	r0, [r7, #0]
2fff46b6:	2e00      	cmp	r6, #0
2fff46b8:	d0c3      	beq.n	2fff4642 <bsec_find_otp_name_in_dt+0x2e>
2fff46ba:	6868      	ldr	r0, [r5, #4]
2fff46bc:	f7ff ff42 	bl	2fff4544 <fdt32_to_cpu>
2fff46c0:	00c0      	lsls	r0, r0, #3
2fff46c2:	6030      	str	r0, [r6, #0]
2fff46c4:	e7bd      	b.n	2fff4642 <bsec_find_otp_name_in_dt+0x2e>
2fff46c6:	f06f 0403 	mvn.w	r4, #3
2fff46ca:	e7ba      	b.n	2fff4642 <bsec_find_otp_name_in_dt+0x2e>
2fff46cc:	2fffb9de 	.word	0x2fffb9de
2fff46d0:	2fffb9f4 	.word	0x2fffb9f4
2fff46d4:	2fffba05 	.word	0x2fffba05
2fff46d8:	2fffba11 	.word	0x2fffba11
2fff46dc:	2fffae68 	.word	0x2fffae68
2fff46e0:	2fffba38 	.word	0x2fffba38

2fff46e4 <bsec_read_otp>:
2fff46e4:	295f      	cmp	r1, #95	; 0x5f
2fff46e6:	bf9f      	itttt	ls
2fff46e8:	4b05      	ldrls	r3, [pc, #20]	; (2fff4700 <bsec_read_otp+0x1c>)
2fff46ea:	681b      	ldrls	r3, [r3, #0]
2fff46ec:	f503 7300 	addls.w	r3, r3, #512	; 0x200
2fff46f0:	f853 3021 	ldrls.w	r3, [r3, r1, lsl #2]
2fff46f4:	bf9a      	itte	ls
2fff46f6:	6003      	strls	r3, [r0, #0]
2fff46f8:	2000      	movls	r0, #0
2fff46fa:	f06f 0003 	mvnhi.w	r0, #3
2fff46fe:	4770      	bx	lr
2fff4700:	2fffe978 	.word	0x2fffe978

2fff4704 <bsec_write_debug_conf>:
2fff4704:	b538      	push	{r3, r4, r5, lr}
2fff4706:	f3c0 040a 	ubfx	r4, r0, #0, #11
2fff470a:	f7ff ff1d 	bl	2fff4548 <bsec_lock>
2fff470e:	4b05      	ldr	r3, [pc, #20]	; (2fff4724 <bsec_write_debug_conf+0x20>)
2fff4710:	681b      	ldr	r3, [r3, #0]
2fff4712:	615c      	str	r4, [r3, #20]
2fff4714:	695d      	ldr	r5, [r3, #20]
2fff4716:	f7ff ff23 	bl	2fff4560 <bsec_unlock>
2fff471a:	1b60      	subs	r0, r4, r5
2fff471c:	bf18      	it	ne
2fff471e:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
2fff4722:	bd38      	pop	{r3, r4, r5, pc}
2fff4724:	2fffe978 	.word	0x2fffe978

2fff4728 <bsec_read_debug_conf>:
2fff4728:	4b01      	ldr	r3, [pc, #4]	; (2fff4730 <bsec_read_debug_conf+0x8>)
2fff472a:	681b      	ldr	r3, [r3, #0]
2fff472c:	6958      	ldr	r0, [r3, #20]
2fff472e:	4770      	bx	lr
2fff4730:	2fffe978 	.word	0x2fffe978

2fff4734 <bsec_get_status>:
2fff4734:	4b01      	ldr	r3, [pc, #4]	; (2fff473c <bsec_get_status+0x8>)
2fff4736:	681b      	ldr	r3, [r3, #0]
2fff4738:	68d8      	ldr	r0, [r3, #12]
2fff473a:	4770      	bx	lr
2fff473c:	2fffe978 	.word	0x2fffe978

2fff4740 <bsec_power_safmem>:
2fff4740:	b510      	push	{r4, lr}
2fff4742:	4604      	mov	r4, r0
2fff4744:	f7ff ff00 	bl	2fff4548 <bsec_lock>
2fff4748:	4b15      	ldr	r3, [pc, #84]	; (2fff47a0 <bsec_power_safmem+0x60>)
2fff474a:	681a      	ldr	r2, [r3, #0]
2fff474c:	6813      	ldr	r3, [r2, #0]
2fff474e:	b164      	cbz	r4, 2fff476a <bsec_power_safmem+0x2a>
2fff4750:	f043 0301 	orr.w	r3, r3, #1
2fff4754:	6013      	str	r3, [r2, #0]
2fff4756:	b9bc      	cbnz	r4, 2fff4788 <bsec_power_safmem+0x48>
2fff4758:	f64f 74ff 	movw	r4, #65535	; 0xffff
2fff475c:	f7ff ffea 	bl	2fff4734 <bsec_get_status>
2fff4760:	0683      	lsls	r3, r0, #26
2fff4762:	d514      	bpl.n	2fff478e <bsec_power_safmem+0x4e>
2fff4764:	b15c      	cbz	r4, 2fff477e <bsec_power_safmem+0x3e>
2fff4766:	3c01      	subs	r4, #1
2fff4768:	e7f8      	b.n	2fff475c <bsec_power_safmem+0x1c>
2fff476a:	f023 0301 	bic.w	r3, r3, #1
2fff476e:	e7f1      	b.n	2fff4754 <bsec_power_safmem+0x14>
2fff4770:	3c01      	subs	r4, #1
2fff4772:	f7ff ffdf 	bl	2fff4734 <bsec_get_status>
2fff4776:	0682      	lsls	r2, r0, #26
2fff4778:	d409      	bmi.n	2fff478e <bsec_power_safmem+0x4e>
2fff477a:	2c00      	cmp	r4, #0
2fff477c:	d1f8      	bne.n	2fff4770 <bsec_power_safmem+0x30>
2fff477e:	f7ff feef 	bl	2fff4560 <bsec_unlock>
2fff4782:	f06f 0006 	mvn.w	r0, #6
2fff4786:	bd10      	pop	{r4, pc}
2fff4788:	f64f 74ff 	movw	r4, #65535	; 0xffff
2fff478c:	e7f1      	b.n	2fff4772 <bsec_power_safmem+0x32>
2fff478e:	f7ff fee7 	bl	2fff4560 <bsec_unlock>
2fff4792:	2c00      	cmp	r4, #0
2fff4794:	bf14      	ite	ne
2fff4796:	2000      	movne	r0, #0
2fff4798:	f06f 0006 	mvneq.w	r0, #6
2fff479c:	e7f3      	b.n	2fff4786 <bsec_power_safmem+0x46>
2fff479e:	bf00      	nop
2fff47a0:	2fffe978 	.word	0x2fffe978

2fff47a4 <bsec_set_config>:
2fff47a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff47a6:	4605      	mov	r5, r0
2fff47a8:	78c4      	ldrb	r4, [r0, #3]
2fff47aa:	7883      	ldrb	r3, [r0, #2]
2fff47ac:	0064      	lsls	r4, r4, #1
2fff47ae:	00db      	lsls	r3, r3, #3
2fff47b0:	f004 0406 	and.w	r4, r4, #6
2fff47b4:	4e15      	ldr	r6, [pc, #84]	; (2fff480c <bsec_set_config+0x68>)
2fff47b6:	f003 0378 	and.w	r3, r3, #120	; 0x78
2fff47ba:	431c      	orrs	r4, r3
2fff47bc:	7843      	ldrb	r3, [r0, #1]
2fff47be:	01db      	lsls	r3, r3, #7
2fff47c0:	f403 73c0 	and.w	r3, r3, #384	; 0x180
2fff47c4:	431c      	orrs	r4, r3
2fff47c6:	f7ff febf 	bl	2fff4548 <bsec_lock>
2fff47ca:	6833      	ldr	r3, [r6, #0]
2fff47cc:	601c      	str	r4, [r3, #0]
2fff47ce:	f7ff fec7 	bl	2fff4560 <bsec_unlock>
2fff47d2:	7928      	ldrb	r0, [r5, #4]
2fff47d4:	3800      	subs	r0, #0
2fff47d6:	bf18      	it	ne
2fff47d8:	2001      	movne	r0, #1
2fff47da:	f7ff ffb1 	bl	2fff4740 <bsec_power_safmem>
2fff47de:	4607      	mov	r7, r0
2fff47e0:	b990      	cbnz	r0, 2fff4808 <bsec_set_config+0x64>
2fff47e2:	782c      	ldrb	r4, [r5, #0]
2fff47e4:	796b      	ldrb	r3, [r5, #5]
2fff47e6:	00a4      	lsls	r4, r4, #2
2fff47e8:	011b      	lsls	r3, r3, #4
2fff47ea:	f004 0404 	and.w	r4, r4, #4
2fff47ee:	f003 0310 	and.w	r3, r3, #16
2fff47f2:	431c      	orrs	r4, r3
2fff47f4:	79ab      	ldrb	r3, [r5, #6]
2fff47f6:	f003 0301 	and.w	r3, r3, #1
2fff47fa:	431c      	orrs	r4, r3
2fff47fc:	f7ff fea4 	bl	2fff4548 <bsec_lock>
2fff4800:	6833      	ldr	r3, [r6, #0]
2fff4802:	611c      	str	r4, [r3, #16]
2fff4804:	f7ff feac 	bl	2fff4560 <bsec_unlock>
2fff4808:	4638      	mov	r0, r7
2fff480a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff480c:	2fffe978 	.word	0x2fffe978

2fff4810 <bsec_permanent_lock_otp>:
2fff4810:	285f      	cmp	r0, #95	; 0x5f
2fff4812:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff4814:	4605      	mov	r5, r0
2fff4816:	d83d      	bhi.n	2fff4894 <bsec_permanent_lock_otp+0x84>
2fff4818:	f7ff ff8c 	bl	2fff4734 <bsec_get_status>
2fff481c:	0682      	lsls	r2, r0, #26
2fff481e:	d434      	bmi.n	2fff488a <bsec_permanent_lock_otp+0x7a>
2fff4820:	2001      	movs	r0, #1
2fff4822:	f7ff ff8d 	bl	2fff4740 <bsec_power_safmem>
2fff4826:	4604      	mov	r4, r0
2fff4828:	2800      	cmp	r0, #0
2fff482a:	d135      	bne.n	2fff4898 <bsec_permanent_lock_otp+0x88>
2fff482c:	2701      	movs	r7, #1
2fff482e:	2d1f      	cmp	r5, #31
2fff4830:	bf95      	itete	ls
2fff4832:	006e      	lslls	r6, r5, #1
2fff4834:	f005 030f 	andhi.w	r3, r5, #15
2fff4838:	f006 030e 	andls.w	r3, r6, #14
2fff483c:	2601      	movhi	r6, #1
2fff483e:	bf8d      	iteet	hi
2fff4840:	092c      	lsrhi	r4, r5, #4
2fff4842:	2603      	movls	r6, #3
2fff4844:	08ec      	lsrls	r4, r5, #3
2fff4846:	3402      	addhi	r4, #2
2fff4848:	409e      	lsls	r6, r3
2fff484a:	f7ff fe7d 	bl	2fff4548 <bsec_lock>
2fff484e:	4b13      	ldr	r3, [pc, #76]	; (2fff489c <bsec_permanent_lock_otp+0x8c>)
2fff4850:	f444 7440 	orr.w	r4, r4, #768	; 0x300
2fff4854:	681b      	ldr	r3, [r3, #0]
2fff4856:	609e      	str	r6, [r3, #8]
2fff4858:	605c      	str	r4, [r3, #4]
2fff485a:	f7ff ff6b 	bl	2fff4734 <bsec_get_status>
2fff485e:	0703      	lsls	r3, r0, #28
2fff4860:	d4fb      	bmi.n	2fff485a <bsec_permanent_lock_otp+0x4a>
2fff4862:	f7ff ff67 	bl	2fff4734 <bsec_get_status>
2fff4866:	f010 0110 	ands.w	r1, r0, #16
2fff486a:	d110      	bne.n	2fff488e <bsec_permanent_lock_otp+0x7e>
2fff486c:	4628      	mov	r0, r5
2fff486e:	f7ff fe8f 	bl	2fff4590 <bsec_check_error>
2fff4872:	4604      	mov	r4, r0
2fff4874:	f7ff fe74 	bl	2fff4560 <bsec_unlock>
2fff4878:	b177      	cbz	r7, 2fff4898 <bsec_permanent_lock_otp+0x88>
2fff487a:	2000      	movs	r0, #0
2fff487c:	f7ff ff60 	bl	2fff4740 <bsec_power_safmem>
2fff4880:	b150      	cbz	r0, 2fff4898 <bsec_permanent_lock_otp+0x88>
2fff4882:	f7fe faef 	bl	2fff2e64 <console_flush>
2fff4886:	f004 ec0e 	blx	2fff90a4 <do_panic>
2fff488a:	2700      	movs	r7, #0
2fff488c:	e7cf      	b.n	2fff482e <bsec_permanent_lock_otp+0x1e>
2fff488e:	f06f 0404 	mvn.w	r4, #4
2fff4892:	e7ef      	b.n	2fff4874 <bsec_permanent_lock_otp+0x64>
2fff4894:	f06f 0403 	mvn.w	r4, #3
2fff4898:	4620      	mov	r0, r4
2fff489a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff489c:	2fffe978 	.word	0x2fffe978

2fff48a0 <bsec_get_version>:
2fff48a0:	4b02      	ldr	r3, [pc, #8]	; (2fff48ac <bsec_get_version+0xc>)
2fff48a2:	681b      	ldr	r3, [r3, #0]
2fff48a4:	f8d3 0ff4 	ldr.w	r0, [r3, #4084]	; 0xff4
2fff48a8:	4770      	bx	lr
2fff48aa:	bf00      	nop
2fff48ac:	2fffe978 	.word	0x2fffe978

2fff48b0 <bsec_get_id>:
2fff48b0:	4b02      	ldr	r3, [pc, #8]	; (2fff48bc <bsec_get_id+0xc>)
2fff48b2:	681b      	ldr	r3, [r3, #0]
2fff48b4:	f8d3 0ff8 	ldr.w	r0, [r3, #4088]	; 0xff8
2fff48b8:	4770      	bx	lr
2fff48ba:	bf00      	nop
2fff48bc:	2fffe978 	.word	0x2fffe978

2fff48c0 <bsec_set_sr_lock>:
2fff48c0:	b538      	push	{r3, r4, r5, lr}
2fff48c2:	4604      	mov	r4, r0
2fff48c4:	f7ff fe58 	bl	2fff4578 <otp_bank_offset>
2fff48c8:	2c5f      	cmp	r4, #95	; 0x5f
2fff48ca:	4605      	mov	r5, r0
2fff48cc:	d80e      	bhi.n	2fff48ec <bsec_set_sr_lock+0x2c>
2fff48ce:	f004 041f 	and.w	r4, r4, #31
2fff48d2:	f7ff fe39 	bl	2fff4548 <bsec_lock>
2fff48d6:	4b07      	ldr	r3, [pc, #28]	; (2fff48f4 <bsec_set_sr_lock+0x34>)
2fff48d8:	2001      	movs	r0, #1
2fff48da:	681b      	ldr	r3, [r3, #0]
2fff48dc:	fa00 f404 	lsl.w	r4, r0, r4
2fff48e0:	3394      	adds	r3, #148	; 0x94
2fff48e2:	515c      	str	r4, [r3, r5]
2fff48e4:	f7ff fe3c 	bl	2fff4560 <bsec_unlock>
2fff48e8:	2000      	movs	r0, #0
2fff48ea:	bd38      	pop	{r3, r4, r5, pc}
2fff48ec:	f06f 0003 	mvn.w	r0, #3
2fff48f0:	e7fb      	b.n	2fff48ea <bsec_set_sr_lock+0x2a>
2fff48f2:	bf00      	nop
2fff48f4:	2fffe978 	.word	0x2fffe978

2fff48f8 <bsec_read_sr_lock>:
2fff48f8:	b538      	push	{r3, r4, r5, lr}
2fff48fa:	4604      	mov	r4, r0
2fff48fc:	460d      	mov	r5, r1
2fff48fe:	f7ff fe3b 	bl	2fff4578 <otp_bank_offset>
2fff4902:	f004 021f 	and.w	r2, r4, #31
2fff4906:	2301      	movs	r3, #1
2fff4908:	2c5f      	cmp	r4, #95	; 0x5f
2fff490a:	fa03 f302 	lsl.w	r3, r3, r2
2fff490e:	d80a      	bhi.n	2fff4926 <bsec_read_sr_lock+0x2e>
2fff4910:	4a06      	ldr	r2, [pc, #24]	; (2fff492c <bsec_read_sr_lock+0x34>)
2fff4912:	6812      	ldr	r2, [r2, #0]
2fff4914:	3294      	adds	r2, #148	; 0x94
2fff4916:	5812      	ldr	r2, [r2, r0]
2fff4918:	2000      	movs	r0, #0
2fff491a:	4213      	tst	r3, r2
2fff491c:	bf14      	ite	ne
2fff491e:	2301      	movne	r3, #1
2fff4920:	2300      	moveq	r3, #0
2fff4922:	702b      	strb	r3, [r5, #0]
2fff4924:	bd38      	pop	{r3, r4, r5, pc}
2fff4926:	f06f 0003 	mvn.w	r0, #3
2fff492a:	e7fb      	b.n	2fff4924 <bsec_read_sr_lock+0x2c>
2fff492c:	2fffe978 	.word	0x2fffe978

2fff4930 <bsec_shadow_register>:
2fff4930:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff4932:	f10d 0107 	add.w	r1, sp, #7
2fff4936:	4605      	mov	r5, r0
2fff4938:	f7ff ffde 	bl	2fff48f8 <bsec_read_sr_lock>
2fff493c:	4604      	mov	r4, r0
2fff493e:	b138      	cbz	r0, 2fff4950 <bsec_shadow_register+0x20>
2fff4940:	4602      	mov	r2, r0
2fff4942:	4629      	mov	r1, r5
2fff4944:	4817      	ldr	r0, [pc, #92]	; (2fff49a4 <bsec_shadow_register+0x74>)
2fff4946:	f7fe f9e9 	bl	2fff2d1c <tf_log>
2fff494a:	4620      	mov	r0, r4
2fff494c:	b003      	add	sp, #12
2fff494e:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff4950:	f7ff fef0 	bl	2fff4734 <bsec_get_status>
2fff4954:	0683      	lsls	r3, r0, #26
2fff4956:	d422      	bmi.n	2fff499e <bsec_shadow_register+0x6e>
2fff4958:	2001      	movs	r0, #1
2fff495a:	f7ff fef1 	bl	2fff4740 <bsec_power_safmem>
2fff495e:	4604      	mov	r4, r0
2fff4960:	2800      	cmp	r0, #0
2fff4962:	d1f2      	bne.n	2fff494a <bsec_shadow_register+0x1a>
2fff4964:	2701      	movs	r7, #1
2fff4966:	f7ff fdef 	bl	2fff4548 <bsec_lock>
2fff496a:	4b0f      	ldr	r3, [pc, #60]	; (2fff49a8 <bsec_shadow_register+0x78>)
2fff496c:	681b      	ldr	r3, [r3, #0]
2fff496e:	605d      	str	r5, [r3, #4]
2fff4970:	f7ff fee0 	bl	2fff4734 <bsec_get_status>
2fff4974:	f010 0608 	ands.w	r6, r0, #8
2fff4978:	d1fa      	bne.n	2fff4970 <bsec_shadow_register+0x40>
2fff497a:	2101      	movs	r1, #1
2fff497c:	4628      	mov	r0, r5
2fff497e:	f7ff fe07 	bl	2fff4590 <bsec_check_error>
2fff4982:	4604      	mov	r4, r0
2fff4984:	f7ff fdec 	bl	2fff4560 <bsec_unlock>
2fff4988:	2f00      	cmp	r7, #0
2fff498a:	d0de      	beq.n	2fff494a <bsec_shadow_register+0x1a>
2fff498c:	4630      	mov	r0, r6
2fff498e:	f7ff fed7 	bl	2fff4740 <bsec_power_safmem>
2fff4992:	2800      	cmp	r0, #0
2fff4994:	d0d9      	beq.n	2fff494a <bsec_shadow_register+0x1a>
2fff4996:	f7fe fa65 	bl	2fff2e64 <console_flush>
2fff499a:	f004 eb84 	blx	2fff90a4 <do_panic>
2fff499e:	4627      	mov	r7, r4
2fff49a0:	e7e1      	b.n	2fff4966 <bsec_shadow_register+0x36>
2fff49a2:	bf00      	nop
2fff49a4:	2fffba63 	.word	0x2fffba63
2fff49a8:	2fffe978 	.word	0x2fffe978

2fff49ac <bsec_probe>:
2fff49ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
2fff49b0:	b086      	sub	sp, #24
2fff49b2:	a801      	add	r0, sp, #4
2fff49b4:	f003 fe1c 	bl	2fff85f0 <fdt_get_address>
2fff49b8:	b918      	cbnz	r0, 2fff49c2 <bsec_probe+0x16>
2fff49ba:	f7fe fa53 	bl	2fff2e64 <console_flush>
2fff49be:	f004 eb72 	blx	2fff90a4 <do_panic>
2fff49c2:	4a39      	ldr	r2, [pc, #228]	; (2fff4aa8 <bsec_probe+0xfc>)
2fff49c4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff49c8:	a802      	add	r0, sp, #8
2fff49ca:	f003 fefd 	bl	2fff87c8 <dt_get_node>
2fff49ce:	ea40 71e0 	orr.w	r1, r0, r0, asr #31
2fff49d2:	2800      	cmp	r0, #0
2fff49d4:	dbf1      	blt.n	2fff49ba <bsec_probe+0xe>
2fff49d6:	4b35      	ldr	r3, [pc, #212]	; (2fff4aac <bsec_probe+0x100>)
2fff49d8:	9a02      	ldr	r2, [sp, #8]
2fff49da:	601a      	str	r2, [r3, #0]
2fff49dc:	f7ff ff60 	bl	2fff48a0 <bsec_get_version>
2fff49e0:	b2c0      	uxtb	r0, r0
2fff49e2:	2811      	cmp	r0, #17
2fff49e4:	d1e9      	bne.n	2fff49ba <bsec_probe+0xe>
2fff49e6:	f7ff ff63 	bl	2fff48b0 <bsec_get_id>
2fff49ea:	4b31      	ldr	r3, [pc, #196]	; (2fff4ab0 <bsec_probe+0x104>)
2fff49ec:	4298      	cmp	r0, r3
2fff49ee:	d1e4      	bne.n	2fff49ba <bsec_probe+0xe>
2fff49f0:	f8dd 8004 	ldr.w	r8, [sp, #4]
2fff49f4:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 2fff4ac0 <bsec_probe+0x114>
2fff49f8:	f8df 90c8 	ldr.w	r9, [pc, #200]	; 2fff4ac4 <bsec_probe+0x118>
2fff49fc:	4640      	mov	r0, r8
2fff49fe:	f005 f872 	bl	2fff9ae6 <fdt_first_subnode>
2fff4a02:	4606      	mov	r6, r0
2fff4a04:	2e00      	cmp	r6, #0
2fff4a06:	da03      	bge.n	2fff4a10 <bsec_probe+0x64>
2fff4a08:	2000      	movs	r0, #0
2fff4a0a:	b006      	add	sp, #24
2fff4a0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff4a10:	2300      	movs	r3, #0
2fff4a12:	4652      	mov	r2, sl
2fff4a14:	4631      	mov	r1, r6
2fff4a16:	4640      	mov	r0, r8
2fff4a18:	f005 f9e1 	bl	2fff9dde <fdt_getprop>
2fff4a1c:	4603      	mov	r3, r0
2fff4a1e:	2800      	cmp	r0, #0
2fff4a20:	d0cb      	beq.n	2fff49ba <bsec_probe+0xe>
2fff4a22:	6800      	ldr	r0, [r0, #0]
2fff4a24:	f7ff fd8e 	bl	2fff4544 <fdt32_to_cpu>
2fff4a28:	4604      	mov	r4, r0
2fff4a2a:	6858      	ldr	r0, [r3, #4]
2fff4a2c:	f7ff fd8a 	bl	2fff4544 <fdt32_to_cpu>
2fff4a30:	2c7f      	cmp	r4, #127	; 0x7f
2fff4a32:	4607      	mov	r7, r0
2fff4a34:	d90e      	bls.n	2fff4a54 <bsec_probe+0xa8>
2fff4a36:	08a5      	lsrs	r5, r4, #2
2fff4a38:	4a1e      	ldr	r2, [pc, #120]	; (2fff4ab4 <bsec_probe+0x108>)
2fff4a3a:	2300      	movs	r3, #0
2fff4a3c:	4631      	mov	r1, r6
2fff4a3e:	4640      	mov	r0, r8
2fff4a40:	f005 f9cd 	bl	2fff9dde <fdt_getprop>
2fff4a44:	b168      	cbz	r0, 2fff4a62 <bsec_probe+0xb6>
2fff4a46:	433c      	orrs	r4, r7
2fff4a48:	07a3      	lsls	r3, r4, #30
2fff4a4a:	d017      	beq.n	2fff4a7c <bsec_probe+0xd0>
2fff4a4c:	481a      	ldr	r0, [pc, #104]	; (2fff4ab8 <bsec_probe+0x10c>)
2fff4a4e:	f7fe f965 	bl	2fff2d1c <tf_log>
2fff4a52:	e7b2      	b.n	2fff49ba <bsec_probe+0xe>
2fff4a54:	4427      	add	r7, r4
2fff4a56:	1e7b      	subs	r3, r7, #1
2fff4a58:	f043 0303 	orr.w	r3, r3, #3
2fff4a5c:	3301      	adds	r3, #1
2fff4a5e:	2b83      	cmp	r3, #131	; 0x83
2fff4a60:	d805      	bhi.n	2fff4a6e <bsec_probe+0xc2>
2fff4a62:	4631      	mov	r1, r6
2fff4a64:	4640      	mov	r0, r8
2fff4a66:	f005 f851 	bl	2fff9b0c <fdt_next_subnode>
2fff4a6a:	4606      	mov	r6, r0
2fff4a6c:	e7ca      	b.n	2fff4a04 <bsec_probe+0x58>
2fff4a6e:	4813      	ldr	r0, [pc, #76]	; (2fff4abc <bsec_probe+0x110>)
2fff4a70:	3f80      	subs	r7, #128	; 0x80
2fff4a72:	2480      	movs	r4, #128	; 0x80
2fff4a74:	2520      	movs	r5, #32
2fff4a76:	f7fe f951 	bl	2fff2d1c <tf_log>
2fff4a7a:	e7dd      	b.n	2fff4a38 <bsec_probe+0x8c>
2fff4a7c:	eb05 0797 	add.w	r7, r5, r7, lsr #2
2fff4a80:	2401      	movs	r4, #1
2fff4a82:	42bd      	cmp	r5, r7
2fff4a84:	d2ed      	bcs.n	2fff4a62 <bsec_probe+0xb6>
2fff4a86:	0969      	lsrs	r1, r5, #5
2fff4a88:	f005 031f 	and.w	r3, r5, #31
2fff4a8c:	4628      	mov	r0, r5
2fff4a8e:	f859 2021 	ldr.w	r2, [r9, r1, lsl #2]
2fff4a92:	fa04 f303 	lsl.w	r3, r4, r3
2fff4a96:	4313      	orrs	r3, r2
2fff4a98:	f849 3021 	str.w	r3, [r9, r1, lsl #2]
2fff4a9c:	f7ff ff48 	bl	2fff4930 <bsec_shadow_register>
2fff4aa0:	2800      	cmp	r0, #0
2fff4aa2:	d18a      	bne.n	2fff49ba <bsec_probe+0xe>
2fff4aa4:	3501      	adds	r5, #1
2fff4aa6:	e7ec      	b.n	2fff4a82 <bsec_probe+0xd6>
2fff4aa8:	2fffba8c 	.word	0x2fffba8c
2fff4aac:	2fffe978 	.word	0x2fffe978
2fff4ab0:	00100032 	.word	0x00100032
2fff4ab4:	2fffbac1 	.word	0x2fffbac1
2fff4ab8:	2fffbad3 	.word	0x2fffbad3
2fff4abc:	2fffba9e 	.word	0x2fffba9e
2fff4ac0:	2fffae68 	.word	0x2fffae68
2fff4ac4:	2fffe980 	.word	0x2fffe980

2fff4ac8 <bsec_set_sw_lock>:
2fff4ac8:	b538      	push	{r3, r4, r5, lr}
2fff4aca:	4604      	mov	r4, r0
2fff4acc:	f7ff fd54 	bl	2fff4578 <otp_bank_offset>
2fff4ad0:	2c5f      	cmp	r4, #95	; 0x5f
2fff4ad2:	4605      	mov	r5, r0
2fff4ad4:	d80e      	bhi.n	2fff4af4 <bsec_set_sw_lock+0x2c>
2fff4ad6:	f004 041f 	and.w	r4, r4, #31
2fff4ada:	f7ff fd35 	bl	2fff4548 <bsec_lock>
2fff4ade:	4b07      	ldr	r3, [pc, #28]	; (2fff4afc <bsec_set_sw_lock+0x34>)
2fff4ae0:	2001      	movs	r0, #1
2fff4ae2:	681b      	ldr	r3, [r3, #0]
2fff4ae4:	fa00 f404 	lsl.w	r4, r0, r4
2fff4ae8:	337c      	adds	r3, #124	; 0x7c
2fff4aea:	515c      	str	r4, [r3, r5]
2fff4aec:	f7ff fd38 	bl	2fff4560 <bsec_unlock>
2fff4af0:	2000      	movs	r0, #0
2fff4af2:	bd38      	pop	{r3, r4, r5, pc}
2fff4af4:	f06f 0003 	mvn.w	r0, #3
2fff4af8:	e7fb      	b.n	2fff4af2 <bsec_set_sw_lock+0x2a>
2fff4afa:	bf00      	nop
2fff4afc:	2fffe978 	.word	0x2fffe978

2fff4b00 <bsec_read_sw_lock>:
2fff4b00:	b538      	push	{r3, r4, r5, lr}
2fff4b02:	4604      	mov	r4, r0
2fff4b04:	460d      	mov	r5, r1
2fff4b06:	f7ff fd37 	bl	2fff4578 <otp_bank_offset>
2fff4b0a:	f004 021f 	and.w	r2, r4, #31
2fff4b0e:	2301      	movs	r3, #1
2fff4b10:	2c5f      	cmp	r4, #95	; 0x5f
2fff4b12:	fa03 f302 	lsl.w	r3, r3, r2
2fff4b16:	d80a      	bhi.n	2fff4b2e <bsec_read_sw_lock+0x2e>
2fff4b18:	4a06      	ldr	r2, [pc, #24]	; (2fff4b34 <bsec_read_sw_lock+0x34>)
2fff4b1a:	6812      	ldr	r2, [r2, #0]
2fff4b1c:	327c      	adds	r2, #124	; 0x7c
2fff4b1e:	5812      	ldr	r2, [r2, r0]
2fff4b20:	2000      	movs	r0, #0
2fff4b22:	4213      	tst	r3, r2
2fff4b24:	bf14      	ite	ne
2fff4b26:	2301      	movne	r3, #1
2fff4b28:	2300      	moveq	r3, #0
2fff4b2a:	702b      	strb	r3, [r5, #0]
2fff4b2c:	bd38      	pop	{r3, r4, r5, pc}
2fff4b2e:	f06f 0003 	mvn.w	r0, #3
2fff4b32:	e7fb      	b.n	2fff4b2c <bsec_read_sw_lock+0x2c>
2fff4b34:	2fffe978 	.word	0x2fffe978

2fff4b38 <bsec_write_otp>:
2fff4b38:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff4b3a:	460d      	mov	r5, r1
2fff4b3c:	4606      	mov	r6, r0
2fff4b3e:	f10d 0107 	add.w	r1, sp, #7
2fff4b42:	4628      	mov	r0, r5
2fff4b44:	f7ff ffdc 	bl	2fff4b00 <bsec_read_sw_lock>
2fff4b48:	4604      	mov	r4, r0
2fff4b4a:	b138      	cbz	r0, 2fff4b5c <bsec_write_otp+0x24>
2fff4b4c:	4602      	mov	r2, r0
2fff4b4e:	4629      	mov	r1, r5
2fff4b50:	4808      	ldr	r0, [pc, #32]	; (2fff4b74 <bsec_write_otp+0x3c>)
2fff4b52:	f7fe f8e3 	bl	2fff2d1c <tf_log>
2fff4b56:	4620      	mov	r0, r4
2fff4b58:	b002      	add	sp, #8
2fff4b5a:	bd70      	pop	{r4, r5, r6, pc}
2fff4b5c:	f7ff fcf4 	bl	2fff4548 <bsec_lock>
2fff4b60:	4b05      	ldr	r3, [pc, #20]	; (2fff4b78 <bsec_write_otp+0x40>)
2fff4b62:	681b      	ldr	r3, [r3, #0]
2fff4b64:	f503 7300 	add.w	r3, r3, #512	; 0x200
2fff4b68:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
2fff4b6c:	f7ff fcf8 	bl	2fff4560 <bsec_unlock>
2fff4b70:	e7f1      	b.n	2fff4b56 <bsec_write_otp+0x1e>
2fff4b72:	bf00      	nop
2fff4b74:	2fffbaee 	.word	0x2fffbaee
2fff4b78:	2fffe978 	.word	0x2fffe978

2fff4b7c <bsec_set_sp_lock>:
2fff4b7c:	b538      	push	{r3, r4, r5, lr}
2fff4b7e:	4604      	mov	r4, r0
2fff4b80:	f7ff fcfa 	bl	2fff4578 <otp_bank_offset>
2fff4b84:	2c5f      	cmp	r4, #95	; 0x5f
2fff4b86:	4605      	mov	r5, r0
2fff4b88:	d80e      	bhi.n	2fff4ba8 <bsec_set_sp_lock+0x2c>
2fff4b8a:	f004 041f 	and.w	r4, r4, #31
2fff4b8e:	f7ff fcdb 	bl	2fff4548 <bsec_lock>
2fff4b92:	4b07      	ldr	r3, [pc, #28]	; (2fff4bb0 <bsec_set_sp_lock+0x34>)
2fff4b94:	2001      	movs	r0, #1
2fff4b96:	681b      	ldr	r3, [r3, #0]
2fff4b98:	fa00 f404 	lsl.w	r4, r0, r4
2fff4b9c:	3364      	adds	r3, #100	; 0x64
2fff4b9e:	515c      	str	r4, [r3, r5]
2fff4ba0:	f7ff fcde 	bl	2fff4560 <bsec_unlock>
2fff4ba4:	2000      	movs	r0, #0
2fff4ba6:	bd38      	pop	{r3, r4, r5, pc}
2fff4ba8:	f06f 0003 	mvn.w	r0, #3
2fff4bac:	e7fb      	b.n	2fff4ba6 <bsec_set_sp_lock+0x2a>
2fff4bae:	bf00      	nop
2fff4bb0:	2fffe978 	.word	0x2fffe978

2fff4bb4 <bsec_read_sp_lock>:
2fff4bb4:	b538      	push	{r3, r4, r5, lr}
2fff4bb6:	4604      	mov	r4, r0
2fff4bb8:	460d      	mov	r5, r1
2fff4bba:	f7ff fcdd 	bl	2fff4578 <otp_bank_offset>
2fff4bbe:	f004 021f 	and.w	r2, r4, #31
2fff4bc2:	2301      	movs	r3, #1
2fff4bc4:	2c5f      	cmp	r4, #95	; 0x5f
2fff4bc6:	fa03 f302 	lsl.w	r3, r3, r2
2fff4bca:	d80a      	bhi.n	2fff4be2 <bsec_read_sp_lock+0x2e>
2fff4bcc:	4a06      	ldr	r2, [pc, #24]	; (2fff4be8 <bsec_read_sp_lock+0x34>)
2fff4bce:	6812      	ldr	r2, [r2, #0]
2fff4bd0:	3264      	adds	r2, #100	; 0x64
2fff4bd2:	5812      	ldr	r2, [r2, r0]
2fff4bd4:	2000      	movs	r0, #0
2fff4bd6:	4213      	tst	r3, r2
2fff4bd8:	bf14      	ite	ne
2fff4bda:	2301      	movne	r3, #1
2fff4bdc:	2300      	moveq	r3, #0
2fff4bde:	702b      	strb	r3, [r5, #0]
2fff4be0:	bd38      	pop	{r3, r4, r5, pc}
2fff4be2:	f06f 0003 	mvn.w	r0, #3
2fff4be6:	e7fb      	b.n	2fff4be0 <bsec_read_sp_lock+0x2c>
2fff4be8:	2fffe978 	.word	0x2fffe978

2fff4bec <bsec_read_permanent_lock>:
2fff4bec:	b538      	push	{r3, r4, r5, lr}
2fff4bee:	4604      	mov	r4, r0
2fff4bf0:	460d      	mov	r5, r1
2fff4bf2:	f7ff fcc1 	bl	2fff4578 <otp_bank_offset>
2fff4bf6:	f004 021f 	and.w	r2, r4, #31
2fff4bfa:	2301      	movs	r3, #1
2fff4bfc:	2c5f      	cmp	r4, #95	; 0x5f
2fff4bfe:	fa03 f302 	lsl.w	r3, r3, r2
2fff4c02:	d80a      	bhi.n	2fff4c1a <bsec_read_permanent_lock+0x2e>
2fff4c04:	4a06      	ldr	r2, [pc, #24]	; (2fff4c20 <bsec_read_permanent_lock+0x34>)
2fff4c06:	6812      	ldr	r2, [r2, #0]
2fff4c08:	324c      	adds	r2, #76	; 0x4c
2fff4c0a:	5812      	ldr	r2, [r2, r0]
2fff4c0c:	2000      	movs	r0, #0
2fff4c0e:	4213      	tst	r3, r2
2fff4c10:	bf14      	ite	ne
2fff4c12:	2301      	movne	r3, #1
2fff4c14:	2300      	moveq	r3, #0
2fff4c16:	702b      	strb	r3, [r5, #0]
2fff4c18:	bd38      	pop	{r3, r4, r5, pc}
2fff4c1a:	f06f 0003 	mvn.w	r0, #3
2fff4c1e:	e7fb      	b.n	2fff4c18 <bsec_read_permanent_lock+0x2c>
2fff4c20:	2fffe978 	.word	0x2fffe978

2fff4c24 <bsec_program_otp>:
2fff4c24:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff4c28:	460d      	mov	r5, r1
2fff4c2a:	4607      	mov	r7, r0
2fff4c2c:	f10d 0106 	add.w	r1, sp, #6
2fff4c30:	4628      	mov	r0, r5
2fff4c32:	f7ff ffbf 	bl	2fff4bb4 <bsec_read_sp_lock>
2fff4c36:	4604      	mov	r4, r0
2fff4c38:	b140      	cbz	r0, 2fff4c4c <bsec_program_otp+0x28>
2fff4c3a:	4602      	mov	r2, r0
2fff4c3c:	4629      	mov	r1, r5
2fff4c3e:	482c      	ldr	r0, [pc, #176]	; (2fff4cf0 <bsec_program_otp+0xcc>)
2fff4c40:	f7fe f86c 	bl	2fff2d1c <tf_log>
2fff4c44:	4620      	mov	r0, r4
2fff4c46:	b002      	add	sp, #8
2fff4c48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff4c4c:	f10d 0107 	add.w	r1, sp, #7
2fff4c50:	4628      	mov	r0, r5
2fff4c52:	f7ff ffcb 	bl	2fff4bec <bsec_read_permanent_lock>
2fff4c56:	4604      	mov	r4, r0
2fff4c58:	b118      	cbz	r0, 2fff4c62 <bsec_program_otp+0x3e>
2fff4c5a:	4602      	mov	r2, r0
2fff4c5c:	4629      	mov	r1, r5
2fff4c5e:	4825      	ldr	r0, [pc, #148]	; (2fff4cf4 <bsec_program_otp+0xd0>)
2fff4c60:	e7ee      	b.n	2fff4c40 <bsec_program_otp+0x1c>
2fff4c62:	f89d 3006 	ldrb.w	r3, [sp, #6]
2fff4c66:	b923      	cbnz	r3, 2fff4c72 <bsec_program_otp+0x4e>
2fff4c68:	f89d 8007 	ldrb.w	r8, [sp, #7]
2fff4c6c:	f1b8 0f00 	cmp.w	r8, #0
2fff4c70:	d005      	beq.n	2fff4c7e <bsec_program_otp+0x5a>
2fff4c72:	4821      	ldr	r0, [pc, #132]	; (2fff4cf8 <bsec_program_otp+0xd4>)
2fff4c74:	f06f 0404 	mvn.w	r4, #4
2fff4c78:	f7fe f850 	bl	2fff2d1c <tf_log>
2fff4c7c:	e7e2      	b.n	2fff4c44 <bsec_program_otp+0x20>
2fff4c7e:	4e1f      	ldr	r6, [pc, #124]	; (2fff4cfc <bsec_program_otp+0xd8>)
2fff4c80:	6832      	ldr	r2, [r6, #0]
2fff4c82:	6912      	ldr	r2, [r2, #16]
2fff4c84:	0710      	lsls	r0, r2, #28
2fff4c86:	d502      	bpl.n	2fff4c8e <bsec_program_otp+0x6a>
2fff4c88:	481d      	ldr	r0, [pc, #116]	; (2fff4d00 <bsec_program_otp+0xdc>)
2fff4c8a:	f7fe f847 	bl	2fff2d1c <tf_log>
2fff4c8e:	f7ff fd51 	bl	2fff4734 <bsec_get_status>
2fff4c92:	0681      	lsls	r1, r0, #26
2fff4c94:	d407      	bmi.n	2fff4ca6 <bsec_program_otp+0x82>
2fff4c96:	2001      	movs	r0, #1
2fff4c98:	f7ff fd52 	bl	2fff4740 <bsec_power_safmem>
2fff4c9c:	4604      	mov	r4, r0
2fff4c9e:	2800      	cmp	r0, #0
2fff4ca0:	d1d0      	bne.n	2fff4c44 <bsec_program_otp+0x20>
2fff4ca2:	f04f 0801 	mov.w	r8, #1
2fff4ca6:	f7ff fc4f 	bl	2fff4548 <bsec_lock>
2fff4caa:	6833      	ldr	r3, [r6, #0]
2fff4cac:	f445 7280 	orr.w	r2, r5, #256	; 0x100
2fff4cb0:	609f      	str	r7, [r3, #8]
2fff4cb2:	605a      	str	r2, [r3, #4]
2fff4cb4:	f7ff fd3e 	bl	2fff4734 <bsec_get_status>
2fff4cb8:	0702      	lsls	r2, r0, #28
2fff4cba:	d4fb      	bmi.n	2fff4cb4 <bsec_program_otp+0x90>
2fff4cbc:	f7ff fd3a 	bl	2fff4734 <bsec_get_status>
2fff4cc0:	06c3      	lsls	r3, r0, #27
2fff4cc2:	d412      	bmi.n	2fff4cea <bsec_program_otp+0xc6>
2fff4cc4:	2101      	movs	r1, #1
2fff4cc6:	4628      	mov	r0, r5
2fff4cc8:	f7ff fc62 	bl	2fff4590 <bsec_check_error>
2fff4ccc:	4604      	mov	r4, r0
2fff4cce:	f7ff fc47 	bl	2fff4560 <bsec_unlock>
2fff4cd2:	f1b8 0f00 	cmp.w	r8, #0
2fff4cd6:	d0b5      	beq.n	2fff4c44 <bsec_program_otp+0x20>
2fff4cd8:	2000      	movs	r0, #0
2fff4cda:	f7ff fd31 	bl	2fff4740 <bsec_power_safmem>
2fff4cde:	2800      	cmp	r0, #0
2fff4ce0:	d0b0      	beq.n	2fff4c44 <bsec_program_otp+0x20>
2fff4ce2:	f7fe f8bf 	bl	2fff2e64 <console_flush>
2fff4ce6:	f004 e9de 	blx	2fff90a4 <do_panic>
2fff4cea:	f06f 0404 	mvn.w	r4, #4
2fff4cee:	e7ee      	b.n	2fff4cce <bsec_program_otp+0xaa>
2fff4cf0:	2fffbb18 	.word	0x2fffbb18
2fff4cf4:	2fffbb41 	.word	0x2fffbb41
2fff4cf8:	2fffbb68 	.word	0x2fffbb68
2fff4cfc:	2fffe978 	.word	0x2fffe978
2fff4d00:	2fffbb91 	.word	0x2fffbb91

2fff4d04 <bsec_check_nsec_access_rights>:
2fff4d04:	285f      	cmp	r0, #95	; 0x5f
2fff4d06:	d810      	bhi.n	2fff4d2a <bsec_check_nsec_access_rights+0x26>
2fff4d08:	281f      	cmp	r0, #31
2fff4d0a:	d911      	bls.n	2fff4d30 <bsec_check_nsec_access_rights+0x2c>
2fff4d0c:	0942      	lsrs	r2, r0, #5
2fff4d0e:	2301      	movs	r3, #1
2fff4d10:	f000 001f 	and.w	r0, r0, #31
2fff4d14:	fa03 f000 	lsl.w	r0, r3, r0
2fff4d18:	4b06      	ldr	r3, [pc, #24]	; (2fff4d34 <bsec_check_nsec_access_rights+0x30>)
2fff4d1a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
2fff4d1e:	4218      	tst	r0, r3
2fff4d20:	bf0c      	ite	eq
2fff4d22:	f04f 30ff 	moveq.w	r0, #4294967295	; 0xffffffff
2fff4d26:	2000      	movne	r0, #0
2fff4d28:	4770      	bx	lr
2fff4d2a:	f06f 0003 	mvn.w	r0, #3
2fff4d2e:	4770      	bx	lr
2fff4d30:	2000      	movs	r0, #0
2fff4d32:	4770      	bx	lr
2fff4d34:	2fffe980 	.word	0x2fffe980

2fff4d38 <fdt_osc_read_freq>:
2fff4d38:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff4d3a:	4607      	mov	r7, r0
2fff4d3c:	4668      	mov	r0, sp
2fff4d3e:	460e      	mov	r6, r1
2fff4d40:	f003 fc56 	bl	2fff85f0 <fdt_get_address>
2fff4d44:	2800      	cmp	r0, #0
2fff4d46:	d03d      	beq.n	2fff4dc4 <fdt_osc_read_freq+0x8c>
2fff4d48:	4921      	ldr	r1, [pc, #132]	; (2fff4dd0 <fdt_osc_read_freq+0x98>)
2fff4d4a:	9800      	ldr	r0, [sp, #0]
2fff4d4c:	f005 f8d9 	bl	2fff9f02 <fdt_path_offset>
2fff4d50:	1e01      	subs	r1, r0, #0
2fff4d52:	db3a      	blt.n	2fff4dca <fdt_osc_read_freq+0x92>
2fff4d54:	9800      	ldr	r0, [sp, #0]
2fff4d56:	f004 fec6 	bl	2fff9ae6 <fdt_first_subnode>
2fff4d5a:	2800      	cmp	r0, #0
2fff4d5c:	4605      	mov	r5, r0
2fff4d5e:	da02      	bge.n	2fff4d66 <fdt_osc_read_freq+0x2e>
2fff4d60:	2400      	movs	r4, #0
2fff4d62:	6034      	str	r4, [r6, #0]
2fff4d64:	e006      	b.n	2fff4d74 <fdt_osc_read_freq+0x3c>
2fff4d66:	9800      	ldr	r0, [sp, #0]
2fff4d68:	aa01      	add	r2, sp, #4
2fff4d6a:	4629      	mov	r1, r5
2fff4d6c:	f004 ff46 	bl	2fff9bfc <fdt_get_name>
2fff4d70:	b918      	cbnz	r0, 2fff4d7a <fdt_osc_read_freq+0x42>
2fff4d72:	9c01      	ldr	r4, [sp, #4]
2fff4d74:	4620      	mov	r0, r4
2fff4d76:	b003      	add	sp, #12
2fff4d78:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff4d7a:	9a01      	ldr	r2, [sp, #4]
2fff4d7c:	4639      	mov	r1, r7
2fff4d7e:	f005 fb80 	bl	2fffa482 <strncmp>
2fff4d82:	4604      	mov	r4, r0
2fff4d84:	b9c8      	cbnz	r0, 2fff4dba <fdt_osc_read_freq+0x82>
2fff4d86:	4628      	mov	r0, r5
2fff4d88:	f003 fc3e 	bl	2fff8608 <fdt_get_status>
2fff4d8c:	b1a8      	cbz	r0, 2fff4dba <fdt_osc_read_freq+0x82>
2fff4d8e:	4a11      	ldr	r2, [pc, #68]	; (2fff4dd4 <fdt_osc_read_freq+0x9c>)
2fff4d90:	ab01      	add	r3, sp, #4
2fff4d92:	9800      	ldr	r0, [sp, #0]
2fff4d94:	4629      	mov	r1, r5
2fff4d96:	f005 f822 	bl	2fff9dde <fdt_getprop>
2fff4d9a:	2800      	cmp	r0, #0
2fff4d9c:	d0e9      	beq.n	2fff4d72 <fdt_osc_read_freq+0x3a>
2fff4d9e:	6802      	ldr	r2, [r0, #0]
2fff4da0:	0e13      	lsrs	r3, r2, #24
2fff4da2:	f3c2 2107 	ubfx	r1, r2, #8, #8
2fff4da6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
2fff4daa:	f3c2 4207 	ubfx	r2, r2, #16, #8
2fff4dae:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
2fff4db2:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2fff4db6:	6033      	str	r3, [r6, #0]
2fff4db8:	e7dc      	b.n	2fff4d74 <fdt_osc_read_freq+0x3c>
2fff4dba:	9800      	ldr	r0, [sp, #0]
2fff4dbc:	4629      	mov	r1, r5
2fff4dbe:	f004 fea5 	bl	2fff9b0c <fdt_next_subnode>
2fff4dc2:	e7ca      	b.n	2fff4d5a <fdt_osc_read_freq+0x22>
2fff4dc4:	f06f 0401 	mvn.w	r4, #1
2fff4dc8:	e7d4      	b.n	2fff4d74 <fdt_osc_read_freq+0x3c>
2fff4dca:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff4dce:	e7d1      	b.n	2fff4d74 <fdt_osc_read_freq+0x3c>
2fff4dd0:	2fffbbc0 	.word	0x2fffbbc0
2fff4dd4:	2fffbbc8 	.word	0x2fffbbc8

2fff4dd8 <fdt_get_rcc_node>:
2fff4dd8:	4801      	ldr	r0, [pc, #4]	; (2fff4de0 <fdt_get_rcc_node+0x8>)
2fff4dda:	f003 bd17 	b.w	2fff880c <dt_get_node_by_compatible>
2fff4dde:	bf00      	nop
2fff4de0:	2fffbbd8 	.word	0x2fffbbd8

2fff4de4 <fdt_rcc_read_uint32_default>:
2fff4de4:	b538      	push	{r3, r4, r5, lr}
2fff4de6:	4605      	mov	r5, r0
2fff4de8:	460c      	mov	r4, r1
2fff4dea:	f7ff fff5 	bl	2fff4dd8 <fdt_get_rcc_node>
2fff4dee:	2800      	cmp	r0, #0
2fff4df0:	db05      	blt.n	2fff4dfe <fdt_rcc_read_uint32_default+0x1a>
2fff4df2:	4622      	mov	r2, r4
2fff4df4:	4629      	mov	r1, r5
2fff4df6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff4dfa:	f003 bc65 	b.w	2fff86c8 <fdt_read_uint32_default>
2fff4dfe:	4620      	mov	r0, r4
2fff4e00:	bd38      	pop	{r3, r4, r5, pc}

2fff4e02 <fdt_rcc_read_prop>:
2fff4e02:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff4e04:	4605      	mov	r5, r0
2fff4e06:	a801      	add	r0, sp, #4
2fff4e08:	460c      	mov	r4, r1
2fff4e0a:	f003 fbf1 	bl	2fff85f0 <fdt_get_address>
2fff4e0e:	b910      	cbnz	r0, 2fff4e16 <fdt_rcc_read_prop+0x14>
2fff4e10:	2000      	movs	r0, #0
2fff4e12:	b003      	add	sp, #12
2fff4e14:	bd30      	pop	{r4, r5, pc}
2fff4e16:	f7ff ffdf 	bl	2fff4dd8 <fdt_get_rcc_node>
2fff4e1a:	1e01      	subs	r1, r0, #0
2fff4e1c:	dbf8      	blt.n	2fff4e10 <fdt_rcc_read_prop+0xe>
2fff4e1e:	9801      	ldr	r0, [sp, #4]
2fff4e20:	466b      	mov	r3, sp
2fff4e22:	462a      	mov	r2, r5
2fff4e24:	f004 ffdb 	bl	2fff9dde <fdt_getprop>
2fff4e28:	2800      	cmp	r0, #0
2fff4e2a:	d0f2      	beq.n	2fff4e12 <fdt_rcc_read_prop+0x10>
2fff4e2c:	9b00      	ldr	r3, [sp, #0]
2fff4e2e:	6023      	str	r3, [r4, #0]
2fff4e30:	e7ef      	b.n	2fff4e12 <fdt_rcc_read_prop+0x10>

2fff4e32 <fdt_rcc_enable_it>:
2fff4e32:	b510      	push	{r4, lr}
2fff4e34:	4604      	mov	r4, r0
2fff4e36:	f7ff ffcf 	bl	2fff4dd8 <fdt_get_rcc_node>
2fff4e3a:	2800      	cmp	r0, #0
2fff4e3c:	db04      	blt.n	2fff4e48 <fdt_rcc_enable_it+0x16>
2fff4e3e:	4621      	mov	r1, r4
2fff4e40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff4e44:	f7fc bc20 	b.w	2fff1688 <stm32_gic_enable_spi>
2fff4e48:	f06f 0012 	mvn.w	r0, #18
2fff4e4c:	bd10      	pop	{r4, pc}
	...

2fff4e50 <fdt_get_clock_id>:
2fff4e50:	b513      	push	{r0, r1, r4, lr}
2fff4e52:	4604      	mov	r4, r0
2fff4e54:	a801      	add	r0, sp, #4
2fff4e56:	f003 fbcb 	bl	2fff85f0 <fdt_get_address>
2fff4e5a:	b1a0      	cbz	r0, 2fff4e86 <fdt_get_clock_id+0x36>
2fff4e5c:	4a0d      	ldr	r2, [pc, #52]	; (2fff4e94 <fdt_get_clock_id+0x44>)
2fff4e5e:	2300      	movs	r3, #0
2fff4e60:	9801      	ldr	r0, [sp, #4]
2fff4e62:	4621      	mov	r1, r4
2fff4e64:	f004 ffbb 	bl	2fff9dde <fdt_getprop>
2fff4e68:	b180      	cbz	r0, 2fff4e8c <fdt_get_clock_id+0x3c>
2fff4e6a:	6843      	ldr	r3, [r0, #4]
2fff4e6c:	0e18      	lsrs	r0, r3, #24
2fff4e6e:	f3c3 2207 	ubfx	r2, r3, #8, #8
2fff4e72:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
2fff4e76:	f3c3 4307 	ubfx	r3, r3, #16, #8
2fff4e7a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
2fff4e7e:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
2fff4e82:	b002      	add	sp, #8
2fff4e84:	bd10      	pop	{r4, pc}
2fff4e86:	f06f 0001 	mvn.w	r0, #1
2fff4e8a:	e7fa      	b.n	2fff4e82 <fdt_get_clock_id+0x32>
2fff4e8c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff4e90:	e7f7      	b.n	2fff4e82 <fdt_get_clock_id+0x32>
2fff4e92:	bf00      	nop
2fff4e94:	2fffbbc1 	.word	0x2fffbbc1

2fff4e98 <fdt_get_clock_id_by_name>:
2fff4e98:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff4e9a:	4605      	mov	r5, r0
2fff4e9c:	4668      	mov	r0, sp
2fff4e9e:	460c      	mov	r4, r1
2fff4ea0:	f003 fba6 	bl	2fff85f0 <fdt_get_address>
2fff4ea4:	b318      	cbz	r0, 2fff4eee <fdt_get_clock_id_by_name+0x56>
2fff4ea6:	4a16      	ldr	r2, [pc, #88]	; (2fff4f00 <fdt_get_clock_id_by_name+0x68>)
2fff4ea8:	4623      	mov	r3, r4
2fff4eaa:	9800      	ldr	r0, [sp, #0]
2fff4eac:	4629      	mov	r1, r5
2fff4eae:	f005 f8cc 	bl	2fffa04a <fdt_stringlist_search>
2fff4eb2:	1e04      	subs	r4, r0, #0
2fff4eb4:	db18      	blt.n	2fff4ee8 <fdt_get_clock_id_by_name+0x50>
2fff4eb6:	4a13      	ldr	r2, [pc, #76]	; (2fff4f04 <fdt_get_clock_id_by_name+0x6c>)
2fff4eb8:	ab01      	add	r3, sp, #4
2fff4eba:	9800      	ldr	r0, [sp, #0]
2fff4ebc:	4629      	mov	r1, r5
2fff4ebe:	f004 ff8e 	bl	2fff9dde <fdt_getprop>
2fff4ec2:	b1b8      	cbz	r0, 2fff4ef4 <fdt_get_clock_id_by_name+0x5c>
2fff4ec4:	9b01      	ldr	r3, [sp, #4]
2fff4ec6:	ebb3 0f84 	cmp.w	r3, r4, lsl #2
2fff4eca:	db16      	blt.n	2fff4efa <fdt_get_clock_id_by_name+0x62>
2fff4ecc:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
2fff4ed0:	6840      	ldr	r0, [r0, #4]
2fff4ed2:	0e04      	lsrs	r4, r0, #24
2fff4ed4:	f3c0 2307 	ubfx	r3, r0, #8, #8
2fff4ed8:	ea44 6400 	orr.w	r4, r4, r0, lsl #24
2fff4edc:	f3c0 4007 	ubfx	r0, r0, #16, #8
2fff4ee0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
2fff4ee4:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
2fff4ee8:	4620      	mov	r0, r4
2fff4eea:	b003      	add	sp, #12
2fff4eec:	bd30      	pop	{r4, r5, pc}
2fff4eee:	f06f 0401 	mvn.w	r4, #1
2fff4ef2:	e7f9      	b.n	2fff4ee8 <fdt_get_clock_id_by_name+0x50>
2fff4ef4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff4ef8:	e7f6      	b.n	2fff4ee8 <fdt_get_clock_id_by_name+0x50>
2fff4efa:	f06f 040e 	mvn.w	r4, #14
2fff4efe:	e7f3      	b.n	2fff4ee8 <fdt_get_clock_id_by_name+0x50>
2fff4f00:	2fffbbe8 	.word	0x2fffbbe8
2fff4f04:	2fffbbc1 	.word	0x2fffbbc1

2fff4f08 <stm32mp_stgen_get_counter>:
2fff4f08:	4b02      	ldr	r3, [pc, #8]	; (2fff4f14 <stm32mp_stgen_get_counter+0xc>)
2fff4f0a:	6819      	ldr	r1, [r3, #0]
2fff4f0c:	f853 0c04 	ldr.w	r0, [r3, #-4]
2fff4f10:	4770      	bx	lr
2fff4f12:	bf00      	nop
2fff4f14:	5c00800c 	.word	0x5c00800c

2fff4f18 <stm32mp_stgen_restore_counter>:
2fff4f18:	b570      	push	{r4, r5, r6, lr}
2fff4f1a:	460d      	mov	r5, r1
2fff4f1c:	490d      	ldr	r1, [pc, #52]	; (2fff4f54 <stm32mp_stgen_restore_counter+0x3c>)
2fff4f1e:	4604      	mov	r4, r0
2fff4f20:	680e      	ldr	r6, [r1, #0]
2fff4f22:	fba6 0102 	umull	r0, r1, r6, r2
2fff4f26:	fb06 1103 	mla	r1, r6, r3, r1
2fff4f2a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2fff4f2e:	2300      	movs	r3, #0
2fff4f30:	f004 ea56 	blx	2fff93e0 <__aeabi_uldivmod>
2fff4f34:	4b08      	ldr	r3, [pc, #32]	; (2fff4f58 <stm32mp_stgen_restore_counter+0x40>)
2fff4f36:	1900      	adds	r0, r0, r4
2fff4f38:	681a      	ldr	r2, [r3, #0]
2fff4f3a:	eb45 0101 	adc.w	r1, r5, r1
2fff4f3e:	f022 0201 	bic.w	r2, r2, #1
2fff4f42:	601a      	str	r2, [r3, #0]
2fff4f44:	4a05      	ldr	r2, [pc, #20]	; (2fff4f5c <stm32mp_stgen_restore_counter+0x44>)
2fff4f46:	6010      	str	r0, [r2, #0]
2fff4f48:	6051      	str	r1, [r2, #4]
2fff4f4a:	681a      	ldr	r2, [r3, #0]
2fff4f4c:	f042 0201 	orr.w	r2, r2, #1
2fff4f50:	601a      	str	r2, [r3, #0]
2fff4f52:	bd70      	pop	{r4, r5, r6, pc}
2fff4f54:	5c008020 	.word	0x5c008020
2fff4f58:	5c008000 	.word	0x5c008000
2fff4f5c:	5c008008 	.word	0x5c008008

2fff4f60 <clock_is_always_on>:
2fff4f60:	2805      	cmp	r0, #5
2fff4f62:	d909      	bls.n	2fff4f78 <clock_is_always_on+0x18>
2fff4f64:	f1a0 03b4 	sub.w	r3, r0, #180	; 0xb4
2fff4f68:	2b08      	cmp	r3, #8
2fff4f6a:	d905      	bls.n	2fff4f78 <clock_is_always_on+0x18>
2fff4f6c:	38c2      	subs	r0, #194	; 0xc2
2fff4f6e:	2802      	cmp	r0, #2
2fff4f70:	bf8c      	ite	hi
2fff4f72:	2000      	movhi	r0, #0
2fff4f74:	2001      	movls	r0, #1
2fff4f76:	4770      	bx	lr
2fff4f78:	2001      	movs	r0, #1
2fff4f7a:	4770      	bx	lr

2fff4f7c <stm32mp1_read_pll_freq>:
2fff4f7c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff4f80:	4606      	mov	r6, r0
2fff4f82:	f8df 90ac 	ldr.w	r9, [pc, #172]	; 2fff5030 <stm32mp1_read_pll_freq+0xb4>
2fff4f86:	460c      	mov	r4, r1
2fff4f88:	f7fe f88e 	bl	2fff30a8 <stm32mp_rcc_base>
2fff4f8c:	eb09 1746 	add.w	r7, r9, r6, lsl #5
2fff4f90:	893b      	ldrh	r3, [r7, #8]
2fff4f92:	581d      	ldr	r5, [r3, r0]
2fff4f94:	4b24      	ldr	r3, [pc, #144]	; (2fff5028 <stm32mp1_read_pll_freq+0xac>)
2fff4f96:	5d18      	ldrb	r0, [r3, r4]
2fff4f98:	40c5      	lsrs	r5, r0
2fff4f9a:	f7fe f885 	bl	2fff30a8 <stm32mp_rcc_base>
2fff4f9e:	88fb      	ldrh	r3, [r7, #6]
2fff4fa0:	f005 057f 	and.w	r5, r5, #127	; 0x7f
2fff4fa4:	581c      	ldr	r4, [r3, r0]
2fff4fa6:	897b      	ldrh	r3, [r7, #10]
2fff4fa8:	f853 8000 	ldr.w	r8, [r3, r0]
2fff4fac:	f7fe f87c 	bl	2fff30a8 <stm32mp_rcc_base>
2fff4fb0:	88bb      	ldrh	r3, [r7, #4]
2fff4fb2:	581b      	ldr	r3, [r3, r0]
2fff4fb4:	f003 0303 	and.w	r3, r3, #3
2fff4fb8:	eb03 00c6 	add.w	r0, r3, r6, lsl #3
2fff4fbc:	3004      	adds	r0, #4
2fff4fbe:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
2fff4fc2:	f3c4 0008 	ubfx	r0, r4, #0, #9
2fff4fc6:	2b05      	cmp	r3, #5
2fff4fc8:	bf8e      	itee	hi
2fff4fca:	2300      	movhi	r3, #0
2fff4fcc:	4a17      	ldrls	r2, [pc, #92]	; (2fff502c <stm32mp1_read_pll_freq+0xb0>)
2fff4fce:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
2fff4fd2:	f418 3f80 	tst.w	r8, #65536	; 0x10000
2fff4fd6:	f3c4 4205 	ubfx	r2, r4, #16, #6
2fff4fda:	d01e      	beq.n	2fff501a <stm32mp1_read_pll_freq+0x9e>
2fff4fdc:	f3c8 08cc 	ubfx	r8, r8, #3, #13
2fff4fe0:	3001      	adds	r0, #1
2fff4fe2:	bf2c      	ite	cs
2fff4fe4:	2101      	movcs	r1, #1
2fff4fe6:	2100      	movcc	r1, #0
2fff4fe8:	0346      	lsls	r6, r0, #13
2fff4fea:	034f      	lsls	r7, r1, #13
2fff4fec:	eb16 0608 	adds.w	r6, r6, r8
2fff4ff0:	ea47 47d0 	orr.w	r7, r7, r0, lsr #19
2fff4ff4:	f147 0700 	adc.w	r7, r7, #0
2fff4ff8:	3201      	adds	r2, #1
2fff4ffa:	fba3 0106 	umull	r0, r1, r3, r6
2fff4ffe:	fb03 1107 	mla	r1, r3, r7, r1
2fff5002:	bf2c      	ite	cs
2fff5004:	2301      	movcs	r3, #1
2fff5006:	2300      	movcc	r3, #0
2fff5008:	0352      	lsls	r2, r2, #13
2fff500a:	035b      	lsls	r3, r3, #13
2fff500c:	f004 e9e8 	blx	2fff93e0 <__aeabi_uldivmod>
2fff5010:	3501      	adds	r5, #1
2fff5012:	fbb0 f0f5 	udiv	r0, r0, r5
2fff5016:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff501a:	fb00 3303 	mla	r3, r0, r3, r3
2fff501e:	1c50      	adds	r0, r2, #1
2fff5020:	fbb3 f0f0 	udiv	r0, r3, r0
2fff5024:	e7f4      	b.n	2fff5010 <stm32mp1_read_pll_freq+0x94>
2fff5026:	bf00      	nop
2fff5028:	2fffbdee 	.word	0x2fffbdee
2fff502c:	2fffeaac 	.word	0x2fffeaac
2fff5030:	2fffbf88 	.word	0x2fffbf88

2fff5034 <get_clock_rate>:
2fff5034:	b538      	push	{r3, r4, r5, lr}
2fff5036:	4605      	mov	r5, r0
2fff5038:	f7fe f836 	bl	2fff30a8 <stm32mp_rcc_base>
2fff503c:	4604      	mov	r4, r0
2fff503e:	2d21      	cmp	r5, #33	; 0x21
2fff5040:	f200 8091 	bhi.w	2fff5166 <get_clock_rate+0x132>
2fff5044:	e8df f005 	tbb	[pc, r5]
2fff5048:	98911f1c 	.word	0x98911f1c
2fff504c:	1f1c8f9b 	.word	0x1f1c8f9b
2fff5050:	9e229194 	.word	0x9e229194
2fff5054:	a8a5a2a0 	.word	0xa8a5a2a0
2fff5058:	b1afadaa 	.word	0xb1afadaa
2fff505c:	5633b6b4 	.word	0x5633b6b4
2fff5060:	33335656 	.word	0x33335656
2fff5064:	13853333 	.word	0x13853333
2fff5068:	1156      	.short	0x1156
2fff506a:	4853      	ldr	r0, [pc, #332]	; (2fff51b8 <get_clock_rate+0x184>)
2fff506c:	bd38      	pop	{r3, r4, r5, pc}
2fff506e:	6a03      	ldr	r3, [r0, #32]
2fff5070:	f003 0307 	and.w	r3, r3, #7
2fff5074:	2b03      	cmp	r3, #3
2fff5076:	d876      	bhi.n	2fff5166 <get_clock_rate+0x132>
2fff5078:	e8df f003 	tbb	[pc, r3]
2fff507c:	0e080502 	.word	0x0e080502
2fff5080:	4b4e      	ldr	r3, [pc, #312]	; (2fff51bc <get_clock_rate+0x188>)
2fff5082:	6818      	ldr	r0, [r3, #0]
2fff5084:	e7f2      	b.n	2fff506c <get_clock_rate+0x38>
2fff5086:	4b4d      	ldr	r3, [pc, #308]	; (2fff51bc <get_clock_rate+0x188>)
2fff5088:	6858      	ldr	r0, [r3, #4]
2fff508a:	e7ef      	b.n	2fff506c <get_clock_rate+0x38>
2fff508c:	2100      	movs	r1, #0
2fff508e:	2000      	movs	r0, #0
2fff5090:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff5094:	f7ff bf72 	b.w	2fff4f7c <stm32mp1_read_pll_freq>
2fff5098:	2100      	movs	r1, #0
2fff509a:	4608      	mov	r0, r1
2fff509c:	f7ff ff6e 	bl	2fff4f7c <stm32mp1_read_pll_freq>
2fff50a0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff50a2:	4a47      	ldr	r2, [pc, #284]	; (2fff51c0 <get_clock_rate+0x18c>)
2fff50a4:	f003 0307 	and.w	r3, r3, #7
2fff50a8:	5cd3      	ldrb	r3, [r2, r3]
2fff50aa:	40d8      	lsrs	r0, r3
2fff50ac:	e7de      	b.n	2fff506c <get_clock_rate+0x38>
2fff50ae:	6a43      	ldr	r3, [r0, #36]	; 0x24
2fff50b0:	f003 0307 	and.w	r3, r3, #7
2fff50b4:	2b01      	cmp	r3, #1
2fff50b6:	d011      	beq.n	2fff50dc <get_clock_rate+0xa8>
2fff50b8:	2b02      	cmp	r3, #2
2fff50ba:	d012      	beq.n	2fff50e2 <get_clock_rate+0xae>
2fff50bc:	b9b3      	cbnz	r3, 2fff50ec <get_clock_rate+0xb8>
2fff50be:	4b3f      	ldr	r3, [pc, #252]	; (2fff51bc <get_clock_rate+0x188>)
2fff50c0:	6818      	ldr	r0, [r3, #0]
2fff50c2:	6b23      	ldr	r3, [r4, #48]	; 0x30
2fff50c4:	2d1a      	cmp	r5, #26
2fff50c6:	4a3f      	ldr	r2, [pc, #252]	; (2fff51c4 <get_clock_rate+0x190>)
2fff50c8:	f003 0307 	and.w	r3, r3, #7
2fff50cc:	5cd3      	ldrb	r3, [r2, r3]
2fff50ce:	fbb0 f0f3 	udiv	r0, r0, r3
2fff50d2:	d00d      	beq.n	2fff50f0 <get_clock_rate+0xbc>
2fff50d4:	2d1b      	cmp	r5, #27
2fff50d6:	d1c9      	bne.n	2fff506c <get_clock_rate+0x38>
2fff50d8:	6c23      	ldr	r3, [r4, #64]	; 0x40
2fff50da:	e7e2      	b.n	2fff50a2 <get_clock_rate+0x6e>
2fff50dc:	4b37      	ldr	r3, [pc, #220]	; (2fff51bc <get_clock_rate+0x188>)
2fff50de:	6858      	ldr	r0, [r3, #4]
2fff50e0:	e7ef      	b.n	2fff50c2 <get_clock_rate+0x8e>
2fff50e2:	2100      	movs	r1, #0
2fff50e4:	2001      	movs	r0, #1
2fff50e6:	f7ff ff49 	bl	2fff4f7c <stm32mp1_read_pll_freq>
2fff50ea:	e7ea      	b.n	2fff50c2 <get_clock_rate+0x8e>
2fff50ec:	2000      	movs	r0, #0
2fff50ee:	e7e8      	b.n	2fff50c2 <get_clock_rate+0x8e>
2fff50f0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
2fff50f2:	e7d6      	b.n	2fff50a2 <get_clock_rate+0x6e>
2fff50f4:	6c83      	ldr	r3, [r0, #72]	; 0x48
2fff50f6:	f003 0307 	and.w	r3, r3, #7
2fff50fa:	2b03      	cmp	r3, #3
2fff50fc:	d821      	bhi.n	2fff5142 <get_clock_rate+0x10e>
2fff50fe:	e8df f003 	tbb	[pc, r3]
2fff5102:	1502      	.short	0x1502
2fff5104:	1b18      	.short	0x1b18
2fff5106:	4b2d      	ldr	r3, [pc, #180]	; (2fff51bc <get_clock_rate+0x188>)
2fff5108:	6818      	ldr	r0, [r3, #0]
2fff510a:	f8d4 3830 	ldr.w	r3, [r4, #2096]	; 0x830
2fff510e:	2d18      	cmp	r5, #24
2fff5110:	4a2d      	ldr	r2, [pc, #180]	; (2fff51c8 <get_clock_rate+0x194>)
2fff5112:	f003 030f 	and.w	r3, r3, #15
2fff5116:	5cd3      	ldrb	r3, [r2, r3]
2fff5118:	fa20 f003 	lsr.w	r0, r0, r3
2fff511c:	d013      	beq.n	2fff5146 <get_clock_rate+0x112>
2fff511e:	2d19      	cmp	r5, #25
2fff5120:	d014      	beq.n	2fff514c <get_clock_rate+0x118>
2fff5122:	2d17      	cmp	r5, #23
2fff5124:	d1a2      	bne.n	2fff506c <get_clock_rate+0x38>
2fff5126:	f8d4 3834 	ldr.w	r3, [r4, #2100]	; 0x834
2fff512a:	e7ba      	b.n	2fff50a2 <get_clock_rate+0x6e>
2fff512c:	4b23      	ldr	r3, [pc, #140]	; (2fff51bc <get_clock_rate+0x188>)
2fff512e:	6858      	ldr	r0, [r3, #4]
2fff5130:	e7eb      	b.n	2fff510a <get_clock_rate+0xd6>
2fff5132:	4b22      	ldr	r3, [pc, #136]	; (2fff51bc <get_clock_rate+0x188>)
2fff5134:	6898      	ldr	r0, [r3, #8]
2fff5136:	e7e8      	b.n	2fff510a <get_clock_rate+0xd6>
2fff5138:	2100      	movs	r1, #0
2fff513a:	2002      	movs	r0, #2
2fff513c:	f7ff ff1e 	bl	2fff4f7c <stm32mp1_read_pll_freq>
2fff5140:	e7e3      	b.n	2fff510a <get_clock_rate+0xd6>
2fff5142:	2000      	movs	r0, #0
2fff5144:	e7e1      	b.n	2fff510a <get_clock_rate+0xd6>
2fff5146:	f8d4 3838 	ldr.w	r3, [r4, #2104]	; 0x838
2fff514a:	e7aa      	b.n	2fff50a2 <get_clock_rate+0x6e>
2fff514c:	f8d4 383c 	ldr.w	r3, [r4, #2108]	; 0x83c
2fff5150:	e7a7      	b.n	2fff50a2 <get_clock_rate+0x6e>
2fff5152:	f8d0 30d0 	ldr.w	r3, [r0, #208]	; 0xd0
2fff5156:	f003 0307 	and.w	r3, r3, #7
2fff515a:	2b01      	cmp	r3, #1
2fff515c:	d005      	beq.n	2fff516a <get_clock_rate+0x136>
2fff515e:	2b02      	cmp	r3, #2
2fff5160:	d091      	beq.n	2fff5086 <get_clock_rate+0x52>
2fff5162:	2b00      	cmp	r3, #0
2fff5164:	d08c      	beq.n	2fff5080 <get_clock_rate+0x4c>
2fff5166:	2000      	movs	r0, #0
2fff5168:	e780      	b.n	2fff506c <get_clock_rate+0x38>
2fff516a:	4b14      	ldr	r3, [pc, #80]	; (2fff51bc <get_clock_rate+0x188>)
2fff516c:	6898      	ldr	r0, [r3, #8]
2fff516e:	e77d      	b.n	2fff506c <get_clock_rate+0x38>
2fff5170:	4b12      	ldr	r3, [pc, #72]	; (2fff51bc <get_clock_rate+0x188>)
2fff5172:	6858      	ldr	r0, [r3, #4]
2fff5174:	0840      	lsrs	r0, r0, #1
2fff5176:	e779      	b.n	2fff506c <get_clock_rate+0x38>
2fff5178:	4b10      	ldr	r3, [pc, #64]	; (2fff51bc <get_clock_rate+0x188>)
2fff517a:	68d8      	ldr	r0, [r3, #12]
2fff517c:	e776      	b.n	2fff506c <get_clock_rate+0x38>
2fff517e:	4b0f      	ldr	r3, [pc, #60]	; (2fff51bc <get_clock_rate+0x188>)
2fff5180:	6918      	ldr	r0, [r3, #16]
2fff5182:	e773      	b.n	2fff506c <get_clock_rate+0x38>
2fff5184:	2101      	movs	r1, #1
2fff5186:	e782      	b.n	2fff508e <get_clock_rate+0x5a>
2fff5188:	2102      	movs	r1, #2
2fff518a:	e780      	b.n	2fff508e <get_clock_rate+0x5a>
2fff518c:	2100      	movs	r1, #0
2fff518e:	2001      	movs	r0, #1
2fff5190:	e77e      	b.n	2fff5090 <get_clock_rate+0x5c>
2fff5192:	2101      	movs	r1, #1
2fff5194:	4608      	mov	r0, r1
2fff5196:	e77b      	b.n	2fff5090 <get_clock_rate+0x5c>
2fff5198:	2102      	movs	r1, #2
2fff519a:	e7f8      	b.n	2fff518e <get_clock_rate+0x15a>
2fff519c:	2100      	movs	r1, #0
2fff519e:	2002      	movs	r0, #2
2fff51a0:	e776      	b.n	2fff5090 <get_clock_rate+0x5c>
2fff51a2:	2101      	movs	r1, #1
2fff51a4:	e7fb      	b.n	2fff519e <get_clock_rate+0x16a>
2fff51a6:	2102      	movs	r1, #2
2fff51a8:	e7f4      	b.n	2fff5194 <get_clock_rate+0x160>
2fff51aa:	2100      	movs	r1, #0
2fff51ac:	2003      	movs	r0, #3
2fff51ae:	e76f      	b.n	2fff5090 <get_clock_rate+0x5c>
2fff51b0:	2101      	movs	r1, #1
2fff51b2:	e7fb      	b.n	2fff51ac <get_clock_rate+0x178>
2fff51b4:	2102      	movs	r1, #2
2fff51b6:	e7f9      	b.n	2fff51ac <get_clock_rate+0x178>
2fff51b8:	02dc6c00 	.word	0x02dc6c00
2fff51bc:	2fffeaac 	.word	0x2fffeaac
2fff51c0:	2fffc120 	.word	0x2fffc120
2fff51c4:	2fffbe0d 	.word	0x2fffbe0d
2fff51c8:	2fffc110 	.word	0x2fffc110

2fff51cc <stm32mp1_pll_compute_pllxcfgr1>:
2fff51cc:	b570      	push	{r4, r5, r6, lr}
2fff51ce:	4605      	mov	r5, r0
2fff51d0:	460c      	mov	r4, r1
2fff51d2:	4616      	mov	r6, r2
2fff51d4:	f7fd ff68 	bl	2fff30a8 <stm32mp_rcc_base>
2fff51d8:	88ab      	ldrh	r3, [r5, #4]
2fff51da:	6829      	ldr	r1, [r5, #0]
2fff51dc:	581b      	ldr	r3, [r3, r0]
2fff51de:	481a      	ldr	r0, [pc, #104]	; (2fff5248 <stm32mp1_pll_compute_pllxcfgr1+0x7c>)
2fff51e0:	f003 0303 	and.w	r3, r3, #3
2fff51e4:	3304      	adds	r3, #4
2fff51e6:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
2fff51ea:	2b05      	cmp	r3, #5
2fff51ec:	bf8e      	itee	hi
2fff51ee:	2300      	movhi	r3, #0
2fff51f0:	4a16      	ldrls	r2, [pc, #88]	; (2fff524c <stm32mp1_pll_compute_pllxcfgr1+0x80>)
2fff51f2:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
2fff51f6:	6822      	ldr	r2, [r4, #0]
2fff51f8:	3201      	adds	r2, #1
2fff51fa:	fbb3 f3f2 	udiv	r3, r3, r2
2fff51fe:	eb01 0241 	add.w	r2, r1, r1, lsl #1
2fff5202:	1885      	adds	r5, r0, r2
2fff5204:	5c80      	ldrb	r0, [r0, r2]
2fff5206:	4a12      	ldr	r2, [pc, #72]	; (2fff5250 <stm32mp1_pll_compute_pllxcfgr1+0x84>)
2fff5208:	4350      	muls	r0, r2
2fff520a:	4298      	cmp	r0, r3
2fff520c:	d819      	bhi.n	2fff5242 <stm32mp1_pll_compute_pllxcfgr1+0x76>
2fff520e:	7868      	ldrb	r0, [r5, #1]
2fff5210:	4342      	muls	r2, r0
2fff5212:	429a      	cmp	r2, r3
2fff5214:	d315      	bcc.n	2fff5242 <stm32mp1_pll_compute_pllxcfgr1+0x76>
2fff5216:	b991      	cbnz	r1, 2fff523e <stm32mp1_pll_compute_pllxcfgr1+0x72>
2fff5218:	480e      	ldr	r0, [pc, #56]	; (2fff5254 <stm32mp1_pll_compute_pllxcfgr1+0x88>)
2fff521a:	4283      	cmp	r3, r0
2fff521c:	bf34      	ite	cc
2fff521e:	2000      	movcc	r0, #0
2fff5220:	2001      	movcs	r0, #1
2fff5222:	6863      	ldr	r3, [r4, #4]
2fff5224:	f3c3 0208 	ubfx	r2, r3, #0, #9
2fff5228:	6032      	str	r2, [r6, #0]
2fff522a:	6823      	ldr	r3, [r4, #0]
2fff522c:	041b      	lsls	r3, r3, #16
2fff522e:	f403 137c 	and.w	r3, r3, #4128768	; 0x3f0000
2fff5232:	4313      	orrs	r3, r2
2fff5234:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
2fff5238:	2000      	movs	r0, #0
2fff523a:	6033      	str	r3, [r6, #0]
2fff523c:	bd70      	pop	{r4, r5, r6, pc}
2fff523e:	2000      	movs	r0, #0
2fff5240:	e7ef      	b.n	2fff5222 <stm32mp1_pll_compute_pllxcfgr1+0x56>
2fff5242:	f06f 0015 	mvn.w	r0, #21
2fff5246:	e7f9      	b.n	2fff523c <stm32mp1_pll_compute_pllxcfgr1+0x70>
2fff5248:	2fffc128 	.word	0x2fffc128
2fff524c:	2fffeaac 	.word	0x2fffeaac
2fff5250:	000f4240 	.word	0x000f4240
2fff5254:	007a1200 	.word	0x007a1200

2fff5258 <stm32mp1_pll_start>:
2fff5258:	b510      	push	{r4, lr}
2fff525a:	4604      	mov	r4, r0
2fff525c:	f7fd ff24 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5260:	4b05      	ldr	r3, [pc, #20]	; (2fff5278 <stm32mp1_pll_start+0x20>)
2fff5262:	eb03 1344 	add.w	r3, r3, r4, lsl #5
2fff5266:	899a      	ldrh	r2, [r3, #12]
2fff5268:	5813      	ldr	r3, [r2, r0]
2fff526a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
2fff526e:	f043 0301 	orr.w	r3, r3, #1
2fff5272:	5013      	str	r3, [r2, r0]
2fff5274:	bd10      	pop	{r4, pc}
2fff5276:	bf00      	nop
2fff5278:	2fffbf88 	.word	0x2fffbf88

2fff527c <stm32mp1_clk_lock>:
2fff527c:	b510      	push	{r4, lr}
2fff527e:	4604      	mov	r4, r0
2fff5280:	f7fd ff15 	bl	2fff30ae <stm32mp_lock_available>
2fff5284:	b120      	cbz	r0, 2fff5290 <stm32mp1_clk_lock+0x14>
2fff5286:	4620      	mov	r0, r4
2fff5288:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff528c:	f007 bdc8 	b.w	2fffce20 <__spin_lock_from_thumb>
2fff5290:	bd10      	pop	{r4, pc}

2fff5292 <stm32mp1_clk_unlock>:
2fff5292:	b510      	push	{r4, lr}
2fff5294:	4604      	mov	r4, r0
2fff5296:	f7fd ff0a 	bl	2fff30ae <stm32mp_lock_available>
2fff529a:	b120      	cbz	r0, 2fff52a6 <stm32mp1_clk_unlock+0x14>
2fff529c:	4620      	mov	r0, r4
2fff529e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff52a2:	f007 bdc9 	b.w	2fffce38 <__spin_unlock_from_thumb>
2fff52a6:	bd10      	pop	{r4, pc}

2fff52a8 <stm32mp1_pll_stop>:
2fff52a8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff52ac:	4682      	mov	sl, r0
2fff52ae:	f7fd fefb 	bl	2fff30a8 <stm32mp_rcc_base>
2fff52b2:	4b19      	ldr	r3, [pc, #100]	; (2fff5318 <stm32mp1_pll_stop+0x70>)
2fff52b4:	4604      	mov	r4, r0
2fff52b6:	eb03 134a 	add.w	r3, r3, sl, lsl #5
2fff52ba:	899d      	ldrh	r5, [r3, #12]
2fff52bc:	582b      	ldr	r3, [r5, r0]
2fff52be:	eb05 0b00 	add.w	fp, r5, r0
2fff52c2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
2fff52c6:	502b      	str	r3, [r5, r0]
2fff52c8:	582b      	ldr	r3, [r5, r0]
2fff52ca:	f023 0301 	bic.w	r3, r3, #1
2fff52ce:	502b      	str	r3, [r5, r0]
2fff52d0:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff52d4:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff52d8:	4910      	ldr	r1, [pc, #64]	; (2fff531c <stm32mp1_pll_stop+0x74>)
2fff52da:	2300      	movs	r3, #0
2fff52dc:	4a10      	ldr	r2, [pc, #64]	; (2fff5320 <stm32mp1_pll_stop+0x78>)
2fff52de:	fba0 0101 	umull	r0, r1, r0, r1
2fff52e2:	f004 e87e 	blx	2fff93e0 <__aeabi_uldivmod>
2fff52e6:	eb10 0806 	adds.w	r8, r0, r6
2fff52ea:	eb41 0907 	adc.w	r9, r1, r7
2fff52ee:	f8db 0000 	ldr.w	r0, [fp]
2fff52f2:	f010 0002 	ands.w	r0, r0, #2
2fff52f6:	d00d      	beq.n	2fff5314 <stm32mp1_pll_stop+0x6c>
2fff52f8:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff52fc:	4599      	cmp	r9, r3
2fff52fe:	bf08      	it	eq
2fff5300:	4590      	cmpeq	r8, r2
2fff5302:	d2f4      	bcs.n	2fff52ee <stm32mp1_pll_stop+0x46>
2fff5304:	4807      	ldr	r0, [pc, #28]	; (2fff5324 <stm32mp1_pll_stop+0x7c>)
2fff5306:	465a      	mov	r2, fp
2fff5308:	592b      	ldr	r3, [r5, r4]
2fff530a:	4651      	mov	r1, sl
2fff530c:	f7fd fd06 	bl	2fff2d1c <tf_log>
2fff5310:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff5314:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff5318:	2fffbf88 	.word	0x2fffbf88
2fff531c:	00030d40 	.word	0x00030d40
2fff5320:	000f4240 	.word	0x000f4240
2fff5324:	2fffbbf4 	.word	0x2fffbbf4

2fff5328 <__clk_enable>:
2fff5328:	b538      	push	{r3, r4, r5, lr}
2fff532a:	4604      	mov	r4, r0
2fff532c:	f7fd febc 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5330:	78a2      	ldrb	r2, [r4, #2]
2fff5332:	2101      	movs	r1, #1
2fff5334:	7925      	ldrb	r5, [r4, #4]
2fff5336:	8823      	ldrh	r3, [r4, #0]
2fff5338:	4091      	lsls	r1, r2
2fff533a:	b10d      	cbz	r5, 2fff5340 <__clk_enable+0x18>
2fff533c:	5019      	str	r1, [r3, r0]
2fff533e:	bd38      	pop	{r3, r4, r5, pc}
2fff5340:	4418      	add	r0, r3
2fff5342:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff5346:	f003 bb93 	b.w	2fff8a70 <stm32mp_mmio_setbits_32_shregs>

2fff534a <__clk_disable>:
2fff534a:	b538      	push	{r3, r4, r5, lr}
2fff534c:	4604      	mov	r4, r0
2fff534e:	f7fd feab 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5352:	78a2      	ldrb	r2, [r4, #2]
2fff5354:	2101      	movs	r1, #1
2fff5356:	7925      	ldrb	r5, [r4, #4]
2fff5358:	8823      	ldrh	r3, [r4, #0]
2fff535a:	4091      	lsls	r1, r2
2fff535c:	b115      	cbz	r5, 2fff5364 <__clk_disable+0x1a>
2fff535e:	3304      	adds	r3, #4
2fff5360:	5019      	str	r1, [r3, r0]
2fff5362:	bd38      	pop	{r3, r4, r5, pc}
2fff5364:	4418      	add	r0, r3
2fff5366:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff536a:	f003 bb74 	b.w	2fff8a56 <stm32mp_mmio_clrbits_32_shregs>
	...

2fff5370 <stm32mp1_clk_get_gated_id>:
2fff5370:	4602      	mov	r2, r0
2fff5372:	2000      	movs	r0, #0
2fff5374:	b508      	push	{r3, lr}
2fff5376:	4b08      	ldr	r3, [pc, #32]	; (2fff5398 <stm32mp1_clk_get_gated_id+0x28>)
2fff5378:	eb03 01c0 	add.w	r1, r3, r0, lsl #3
2fff537c:	78c9      	ldrb	r1, [r1, #3]
2fff537e:	4291      	cmp	r1, r2
2fff5380:	d008      	beq.n	2fff5394 <stm32mp1_clk_get_gated_id+0x24>
2fff5382:	3001      	adds	r0, #1
2fff5384:	282e      	cmp	r0, #46	; 0x2e
2fff5386:	d1f7      	bne.n	2fff5378 <stm32mp1_clk_get_gated_id+0x8>
2fff5388:	4804      	ldr	r0, [pc, #16]	; (2fff539c <stm32mp1_clk_get_gated_id+0x2c>)
2fff538a:	4905      	ldr	r1, [pc, #20]	; (2fff53a0 <stm32mp1_clk_get_gated_id+0x30>)
2fff538c:	f7fd fcc6 	bl	2fff2d1c <tf_log>
2fff5390:	f06f 0015 	mvn.w	r0, #21
2fff5394:	bd08      	pop	{r3, pc}
2fff5396:	bf00      	nop
2fff5398:	2fffbe16 	.word	0x2fffbe16
2fff539c:	2fffbc16 	.word	0x2fffbc16
2fff53a0:	2fffbd94 	.word	0x2fffbd94

2fff53a4 <stm32mp1_clk_get_parent>:
2fff53a4:	b538      	push	{r3, r4, r5, lr}
2fff53a6:	4604      	mov	r4, r0
2fff53a8:	f7fd fe7e 	bl	2fff30a8 <stm32mp_rcc_base>
2fff53ac:	4b18      	ldr	r3, [pc, #96]	; (2fff5410 <stm32mp1_clk_get_parent+0x6c>)
2fff53ae:	4605      	mov	r5, r0
2fff53b0:	2000      	movs	r0, #0
2fff53b2:	f813 2b01 	ldrb.w	r2, [r3], #1
2fff53b6:	4294      	cmp	r4, r2
2fff53b8:	d026      	beq.n	2fff5408 <stm32mp1_clk_get_parent+0x64>
2fff53ba:	3001      	adds	r0, #1
2fff53bc:	2822      	cmp	r0, #34	; 0x22
2fff53be:	d1f8      	bne.n	2fff53b2 <stm32mp1_clk_get_parent+0xe>
2fff53c0:	4620      	mov	r0, r4
2fff53c2:	f7ff ffd5 	bl	2fff5370 <stm32mp1_clk_get_gated_id>
2fff53c6:	1e03      	subs	r3, r0, #0
2fff53c8:	da03      	bge.n	2fff53d2 <stm32mp1_clk_get_parent+0x2e>
2fff53ca:	f7fd fd4b 	bl	2fff2e64 <console_flush>
2fff53ce:	f003 ee6a 	blx	2fff90a4 <do_panic>
2fff53d2:	4a10      	ldr	r2, [pc, #64]	; (2fff5414 <stm32mp1_clk_get_parent+0x70>)
2fff53d4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
2fff53d8:	79d8      	ldrb	r0, [r3, #7]
2fff53da:	2821      	cmp	r0, #33	; 0x21
2fff53dc:	d914      	bls.n	2fff5408 <stm32mp1_clk_get_parent+0x64>
2fff53de:	799a      	ldrb	r2, [r3, #6]
2fff53e0:	2aff      	cmp	r2, #255	; 0xff
2fff53e2:	d012      	beq.n	2fff540a <stm32mp1_clk_get_parent+0x66>
2fff53e4:	2a15      	cmp	r2, #21
2fff53e6:	d8f0      	bhi.n	2fff53ca <stm32mp1_clk_get_parent+0x26>
2fff53e8:	490b      	ldr	r1, [pc, #44]	; (2fff5418 <stm32mp1_clk_get_parent+0x74>)
2fff53ea:	230c      	movs	r3, #12
2fff53ec:	4353      	muls	r3, r2
2fff53ee:	18ca      	adds	r2, r1, r3
2fff53f0:	5acb      	ldrh	r3, [r1, r3]
2fff53f2:	7891      	ldrb	r1, [r2, #2]
2fff53f4:	5958      	ldr	r0, [r3, r5]
2fff53f6:	78d3      	ldrb	r3, [r2, #3]
2fff53f8:	408b      	lsls	r3, r1
2fff53fa:	4003      	ands	r3, r0
2fff53fc:	40cb      	lsrs	r3, r1
2fff53fe:	7911      	ldrb	r1, [r2, #4]
2fff5400:	4299      	cmp	r1, r3
2fff5402:	d902      	bls.n	2fff540a <stm32mp1_clk_get_parent+0x66>
2fff5404:	6892      	ldr	r2, [r2, #8]
2fff5406:	5cd0      	ldrb	r0, [r2, r3]
2fff5408:	bd38      	pop	{r3, r4, r5, pc}
2fff540a:	f06f 0015 	mvn.w	r0, #21
2fff540e:	e7fb      	b.n	2fff5408 <stm32mp1_clk_get_parent+0x64>
2fff5410:	2fffbdc9 	.word	0x2fffbdc9
2fff5414:	2fffbe16 	.word	0x2fffbe16
2fff5418:	2fffc008 	.word	0x2fffc008

2fff541c <__stm32mp1_clk_enable>:
2fff541c:	b570      	push	{r4, r5, r6, lr}
2fff541e:	4605      	mov	r5, r0
2fff5420:	460e      	mov	r6, r1
2fff5422:	f7ff fd9d 	bl	2fff4f60 <clock_is_always_on>
2fff5426:	bb70      	cbnz	r0, 2fff5486 <__stm32mp1_clk_enable+0x6a>
2fff5428:	4628      	mov	r0, r5
2fff542a:	f7ff ffa1 	bl	2fff5370 <stm32mp1_clk_get_gated_id>
2fff542e:	1e04      	subs	r4, r0, #0
2fff5430:	da07      	bge.n	2fff5442 <__stm32mp1_clk_enable+0x26>
2fff5432:	4815      	ldr	r0, [pc, #84]	; (2fff5488 <__stm32mp1_clk_enable+0x6c>)
2fff5434:	4629      	mov	r1, r5
2fff5436:	f7fd fc71 	bl	2fff2d1c <tf_log>
2fff543a:	f7fd fd13 	bl	2fff2e64 <console_flush>
2fff543e:	f003 ee32 	blx	2fff90a4 <do_panic>
2fff5442:	4d12      	ldr	r5, [pc, #72]	; (2fff548c <__stm32mp1_clk_enable+0x70>)
2fff5444:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
2fff5448:	b926      	cbnz	r6, 2fff5454 <__stm32mp1_clk_enable+0x38>
2fff544a:	4628      	mov	r0, r5
2fff544c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff5450:	f7ff bf6a 	b.w	2fff5328 <__clk_enable>
2fff5454:	796b      	ldrb	r3, [r5, #5]
2fff5456:	2b00      	cmp	r3, #0
2fff5458:	d0f7      	beq.n	2fff544a <__stm32mp1_clk_enable+0x2e>
2fff545a:	4e0d      	ldr	r6, [pc, #52]	; (2fff5490 <__stm32mp1_clk_enable+0x74>)
2fff545c:	480d      	ldr	r0, [pc, #52]	; (2fff5494 <__stm32mp1_clk_enable+0x78>)
2fff545e:	f7ff ff0d 	bl	2fff527c <stm32mp1_clk_lock>
2fff5462:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
2fff5466:	b913      	cbnz	r3, 2fff546e <__stm32mp1_clk_enable+0x52>
2fff5468:	4628      	mov	r0, r5
2fff546a:	f7ff ff5d 	bl	2fff5328 <__clk_enable>
2fff546e:	f856 3024 	ldr.w	r3, [r6, r4, lsl #2]
2fff5472:	3301      	adds	r3, #1
2fff5474:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
2fff5478:	3301      	adds	r3, #1
2fff547a:	d0de      	beq.n	2fff543a <__stm32mp1_clk_enable+0x1e>
2fff547c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff5480:	4804      	ldr	r0, [pc, #16]	; (2fff5494 <__stm32mp1_clk_enable+0x78>)
2fff5482:	f7ff bf06 	b.w	2fff5292 <stm32mp1_clk_unlock>
2fff5486:	bd70      	pop	{r4, r5, r6, pc}
2fff5488:	2fffbc30 	.word	0x2fffbc30
2fff548c:	2fffbe16 	.word	0x2fffbe16
2fff5490:	2fffe990 	.word	0x2fffe990
2fff5494:	2fffeaa4 	.word	0x2fffeaa4

2fff5498 <__stm32mp1_clk_disable>:
2fff5498:	b570      	push	{r4, r5, r6, lr}
2fff549a:	4605      	mov	r5, r0
2fff549c:	460e      	mov	r6, r1
2fff549e:	f7ff fd5f 	bl	2fff4f60 <clock_is_always_on>
2fff54a2:	bb58      	cbnz	r0, 2fff54fc <__stm32mp1_clk_disable+0x64>
2fff54a4:	4628      	mov	r0, r5
2fff54a6:	f7ff ff63 	bl	2fff5370 <stm32mp1_clk_get_gated_id>
2fff54aa:	1e04      	subs	r4, r0, #0
2fff54ac:	da07      	bge.n	2fff54be <__stm32mp1_clk_disable+0x26>
2fff54ae:	4814      	ldr	r0, [pc, #80]	; (2fff5500 <__stm32mp1_clk_disable+0x68>)
2fff54b0:	4629      	mov	r1, r5
2fff54b2:	f7fd fc33 	bl	2fff2d1c <tf_log>
2fff54b6:	f7fd fcd5 	bl	2fff2e64 <console_flush>
2fff54ba:	f003 edf4 	blx	2fff90a4 <do_panic>
2fff54be:	4d11      	ldr	r5, [pc, #68]	; (2fff5504 <__stm32mp1_clk_disable+0x6c>)
2fff54c0:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
2fff54c4:	b926      	cbnz	r6, 2fff54d0 <__stm32mp1_clk_disable+0x38>
2fff54c6:	4628      	mov	r0, r5
2fff54c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff54cc:	f7ff bf3d 	b.w	2fff534a <__clk_disable>
2fff54d0:	796b      	ldrb	r3, [r5, #5]
2fff54d2:	b19b      	cbz	r3, 2fff54fc <__stm32mp1_clk_disable+0x64>
2fff54d4:	480c      	ldr	r0, [pc, #48]	; (2fff5508 <__stm32mp1_clk_disable+0x70>)
2fff54d6:	f7ff fed1 	bl	2fff527c <stm32mp1_clk_lock>
2fff54da:	4a0c      	ldr	r2, [pc, #48]	; (2fff550c <__stm32mp1_clk_disable+0x74>)
2fff54dc:	f852 3024 	ldr.w	r3, [r2, r4, lsl #2]
2fff54e0:	2b00      	cmp	r3, #0
2fff54e2:	d0e8      	beq.n	2fff54b6 <__stm32mp1_clk_disable+0x1e>
2fff54e4:	3b01      	subs	r3, #1
2fff54e6:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
2fff54ea:	b913      	cbnz	r3, 2fff54f2 <__stm32mp1_clk_disable+0x5a>
2fff54ec:	4628      	mov	r0, r5
2fff54ee:	f7ff ff2c 	bl	2fff534a <__clk_disable>
2fff54f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff54f6:	4804      	ldr	r0, [pc, #16]	; (2fff5508 <__stm32mp1_clk_disable+0x70>)
2fff54f8:	f7ff becb 	b.w	2fff5292 <stm32mp1_clk_unlock>
2fff54fc:	bd70      	pop	{r4, r5, r6, pc}
2fff54fe:	bf00      	nop
2fff5500:	2fffbc4c 	.word	0x2fffbc4c
2fff5504:	2fffbe16 	.word	0x2fffbe16
2fff5508:	2fffeaa4 	.word	0x2fffeaa4
2fff550c:	2fffe990 	.word	0x2fffe990

2fff5510 <stm32mp1_set_clkdiv>:
2fff5510:	680a      	ldr	r2, [r1, #0]
2fff5512:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff5516:	f000 033f 	and.w	r3, r0, #63	; 0x3f
2fff551a:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
2fff551e:	4605      	mov	r5, r0
2fff5520:	4313      	orrs	r3, r2
2fff5522:	460c      	mov	r4, r1
2fff5524:	600b      	str	r3, [r1, #0]
2fff5526:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff552a:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff552e:	4910      	ldr	r1, [pc, #64]	; (2fff5570 <stm32mp1_set_clkdiv+0x60>)
2fff5530:	2300      	movs	r3, #0
2fff5532:	4a10      	ldr	r2, [pc, #64]	; (2fff5574 <stm32mp1_set_clkdiv+0x64>)
2fff5534:	fba0 0101 	umull	r0, r1, r0, r1
2fff5538:	f003 ef52 	blx	2fff93e0 <__aeabi_uldivmod>
2fff553c:	eb10 0806 	adds.w	r8, r0, r6
2fff5540:	eb41 0907 	adc.w	r9, r1, r7
2fff5544:	6823      	ldr	r3, [r4, #0]
2fff5546:	2b00      	cmp	r3, #0
2fff5548:	da01      	bge.n	2fff554e <stm32mp1_set_clkdiv+0x3e>
2fff554a:	2000      	movs	r0, #0
2fff554c:	e00d      	b.n	2fff556a <stm32mp1_set_clkdiv+0x5a>
2fff554e:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff5552:	4599      	cmp	r9, r3
2fff5554:	bf08      	it	eq
2fff5556:	4590      	cmpeq	r8, r2
2fff5558:	d2f4      	bcs.n	2fff5544 <stm32mp1_set_clkdiv+0x34>
2fff555a:	4807      	ldr	r0, [pc, #28]	; (2fff5578 <stm32mp1_set_clkdiv+0x68>)
2fff555c:	4622      	mov	r2, r4
2fff555e:	6823      	ldr	r3, [r4, #0]
2fff5560:	4629      	mov	r1, r5
2fff5562:	f7fd fbdb 	bl	2fff2d1c <tf_log>
2fff5566:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff556a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff556e:	bf00      	nop
2fff5570:	00030d40 	.word	0x00030d40
2fff5574:	000f4240 	.word	0x000f4240
2fff5578:	2fffbc69 	.word	0x2fffbc69

2fff557c <stm32mp1_set_clksrc>:
2fff557c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff5580:	4605      	mov	r5, r0
2fff5582:	f7fd fd91 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5586:	ea4f 1a15 	mov.w	sl, r5, lsr #4
2fff558a:	f005 0307 	and.w	r3, r5, #7
2fff558e:	eb00 1b15 	add.w	fp, r0, r5, lsr #4
2fff5592:	4604      	mov	r4, r0
2fff5594:	f85a 2000 	ldr.w	r2, [sl, r0]
2fff5598:	f022 0207 	bic.w	r2, r2, #7
2fff559c:	4313      	orrs	r3, r2
2fff559e:	f84a 3000 	str.w	r3, [sl, r0]
2fff55a2:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff55a6:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff55aa:	4911      	ldr	r1, [pc, #68]	; (2fff55f0 <stm32mp1_set_clksrc+0x74>)
2fff55ac:	2300      	movs	r3, #0
2fff55ae:	4a11      	ldr	r2, [pc, #68]	; (2fff55f4 <stm32mp1_set_clksrc+0x78>)
2fff55b0:	fba0 0101 	umull	r0, r1, r0, r1
2fff55b4:	f003 ef14 	blx	2fff93e0 <__aeabi_uldivmod>
2fff55b8:	eb10 0806 	adds.w	r8, r0, r6
2fff55bc:	eb41 0907 	adc.w	r9, r1, r7
2fff55c0:	f8db 3000 	ldr.w	r3, [fp]
2fff55c4:	2b00      	cmp	r3, #0
2fff55c6:	da01      	bge.n	2fff55cc <stm32mp1_set_clksrc+0x50>
2fff55c8:	2000      	movs	r0, #0
2fff55ca:	e00e      	b.n	2fff55ea <stm32mp1_set_clksrc+0x6e>
2fff55cc:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff55d0:	4599      	cmp	r9, r3
2fff55d2:	bf08      	it	eq
2fff55d4:	4590      	cmpeq	r8, r2
2fff55d6:	d2f3      	bcs.n	2fff55c0 <stm32mp1_set_clksrc+0x44>
2fff55d8:	4807      	ldr	r0, [pc, #28]	; (2fff55f8 <stm32mp1_set_clksrc+0x7c>)
2fff55da:	465a      	mov	r2, fp
2fff55dc:	f85a 3004 	ldr.w	r3, [sl, r4]
2fff55e0:	4629      	mov	r1, r5
2fff55e2:	f7fd fb9b 	bl	2fff2d1c <tf_log>
2fff55e6:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff55ea:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff55ee:	bf00      	nop
2fff55f0:	00030d40 	.word	0x00030d40
2fff55f4:	000f4240 	.word	0x000f4240
2fff55f8:	2fffbc90 	.word	0x2fffbc90

2fff55fc <stm32mp1_pll_output>:
2fff55fc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff5600:	4606      	mov	r6, r0
2fff5602:	460f      	mov	r7, r1
2fff5604:	f7fd fd50 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5608:	4b1a      	ldr	r3, [pc, #104]	; (2fff5674 <stm32mp1_pll_output+0x78>)
2fff560a:	4604      	mov	r4, r0
2fff560c:	eb03 1346 	add.w	r3, r3, r6, lsl #5
2fff5610:	899d      	ldrh	r5, [r3, #12]
2fff5612:	eb05 0a00 	add.w	sl, r5, r0
2fff5616:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff561a:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff561e:	4916      	ldr	r1, [pc, #88]	; (2fff5678 <stm32mp1_pll_output+0x7c>)
2fff5620:	2300      	movs	r3, #0
2fff5622:	4a16      	ldr	r2, [pc, #88]	; (2fff567c <stm32mp1_pll_output+0x80>)
2fff5624:	fba0 0101 	umull	r0, r1, r0, r1
2fff5628:	f003 eeda 	blx	2fff93e0 <__aeabi_uldivmod>
2fff562c:	eb10 0308 	adds.w	r3, r0, r8
2fff5630:	9300      	str	r3, [sp, #0]
2fff5632:	eb41 0309 	adc.w	r3, r1, r9
2fff5636:	9301      	str	r3, [sp, #4]
2fff5638:	f8da 3000 	ldr.w	r3, [sl]
2fff563c:	079b      	lsls	r3, r3, #30
2fff563e:	d505      	bpl.n	2fff564c <stm32mp1_pll_output+0x50>
2fff5640:	5929      	ldr	r1, [r5, r4]
2fff5642:	2000      	movs	r0, #0
2fff5644:	ea41 1707 	orr.w	r7, r1, r7, lsl #4
2fff5648:	512f      	str	r7, [r5, r4]
2fff564a:	e00f      	b.n	2fff566c <stm32mp1_pll_output+0x70>
2fff564c:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff5650:	e9dd 0100 	ldrd	r0, r1, [sp]
2fff5654:	4299      	cmp	r1, r3
2fff5656:	bf08      	it	eq
2fff5658:	4290      	cmpeq	r0, r2
2fff565a:	d2ed      	bcs.n	2fff5638 <stm32mp1_pll_output+0x3c>
2fff565c:	4808      	ldr	r0, [pc, #32]	; (2fff5680 <stm32mp1_pll_output+0x84>)
2fff565e:	4652      	mov	r2, sl
2fff5660:	592b      	ldr	r3, [r5, r4]
2fff5662:	4631      	mov	r1, r6
2fff5664:	f7fd fb5a 	bl	2fff2d1c <tf_log>
2fff5668:	f06f 003b 	mvn.w	r0, #59	; 0x3b
2fff566c:	b002      	add	sp, #8
2fff566e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff5672:	bf00      	nop
2fff5674:	2fffbf88 	.word	0x2fffbf88
2fff5678:	00030d40 	.word	0x00030d40
2fff567c:	000f4240 	.word	0x000f4240
2fff5680:	2fffbcb7 	.word	0x2fffbcb7

2fff5684 <stm32mp1_pll_config_output>:
2fff5684:	b538      	push	{r3, r4, r5, lr}
2fff5686:	460c      	mov	r4, r1
2fff5688:	4605      	mov	r5, r0
2fff568a:	f7fd fd0d 	bl	2fff30a8 <stm32mp_rcc_base>
2fff568e:	68a3      	ldr	r3, [r4, #8]
2fff5690:	6922      	ldr	r2, [r4, #16]
2fff5692:	f003 017f 	and.w	r1, r3, #127	; 0x7f
2fff5696:	68e3      	ldr	r3, [r4, #12]
2fff5698:	0412      	lsls	r2, r2, #16
2fff569a:	021b      	lsls	r3, r3, #8
2fff569c:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
2fff56a0:	f403 43fe 	and.w	r3, r3, #32512	; 0x7f00
2fff56a4:	4313      	orrs	r3, r2
2fff56a6:	4a03      	ldr	r2, [pc, #12]	; (2fff56b4 <stm32mp1_pll_config_output+0x30>)
2fff56a8:	430b      	orrs	r3, r1
2fff56aa:	eb02 1545 	add.w	r5, r2, r5, lsl #5
2fff56ae:	892a      	ldrh	r2, [r5, #8]
2fff56b0:	5013      	str	r3, [r2, r0]
2fff56b2:	bd38      	pop	{r3, r4, r5, pc}
2fff56b4:	2fffbf88 	.word	0x2fffbf88

2fff56b8 <stm32mp1_pll_config>:
2fff56b8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2fff56bc:	4680      	mov	r8, r0
2fff56be:	4d11      	ldr	r5, [pc, #68]	; (2fff5704 <stm32mp1_pll_config+0x4c>)
2fff56c0:	4689      	mov	r9, r1
2fff56c2:	4616      	mov	r6, r2
2fff56c4:	f7fd fcf0 	bl	2fff30a8 <stm32mp_rcc_base>
2fff56c8:	eb05 1548 	add.w	r5, r5, r8, lsl #5
2fff56cc:	4604      	mov	r4, r0
2fff56ce:	aa01      	add	r2, sp, #4
2fff56d0:	4649      	mov	r1, r9
2fff56d2:	4628      	mov	r0, r5
2fff56d4:	f7ff fd7a 	bl	2fff51cc <stm32mp1_pll_compute_pllxcfgr1>
2fff56d8:	4607      	mov	r7, r0
2fff56da:	b978      	cbnz	r0, 2fff56fc <stm32mp1_pll_config+0x44>
2fff56dc:	9a01      	ldr	r2, [sp, #4]
2fff56de:	4649      	mov	r1, r9
2fff56e0:	88eb      	ldrh	r3, [r5, #6]
2fff56e2:	00f6      	lsls	r6, r6, #3
2fff56e4:	511a      	str	r2, [r3, r4]
2fff56e6:	896b      	ldrh	r3, [r5, #10]
2fff56e8:	5118      	str	r0, [r3, r4]
2fff56ea:	4640      	mov	r0, r8
2fff56ec:	9601      	str	r6, [sp, #4]
2fff56ee:	511e      	str	r6, [r3, r4]
2fff56f0:	591a      	ldr	r2, [r3, r4]
2fff56f2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
2fff56f6:	511a      	str	r2, [r3, r4]
2fff56f8:	f7ff ffc4 	bl	2fff5684 <stm32mp1_pll_config_output>
2fff56fc:	4638      	mov	r0, r7
2fff56fe:	b003      	add	sp, #12
2fff5700:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff5704:	2fffbf88 	.word	0x2fffbf88

2fff5708 <stm32mp1_pll1_config_from_opp_khz>:
2fff5708:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff570c:	4604      	mov	r4, r0
2fff570e:	4d51      	ldr	r5, [pc, #324]	; (2fff5854 <stm32mp1_pll1_config_from_opp_khz+0x14c>)
2fff5710:	686b      	ldr	r3, [r5, #4]
2fff5712:	4298      	cmp	r0, r3
2fff5714:	d02e      	beq.n	2fff5774 <stm32mp1_pll1_config_from_opp_khz+0x6c>
2fff5716:	68ab      	ldr	r3, [r5, #8]
2fff5718:	4298      	cmp	r0, r3
2fff571a:	f040 8098 	bne.w	2fff584e <stm32mp1_pll1_config_from_opp_khz+0x146>
2fff571e:	2601      	movs	r6, #1
2fff5720:	200a      	movs	r0, #10
2fff5722:	f7ff fc87 	bl	2fff5034 <get_clock_rate>
2fff5726:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff572a:	fbb0 f0f3 	udiv	r0, r0, r3
2fff572e:	fbb0 f3f4 	udiv	r3, r0, r4
2fff5732:	fb04 0413 	mls	r4, r4, r3, r0
2fff5736:	bb24      	cbnz	r4, 2fff5782 <stm32mp1_pll1_config_from_opp_khz+0x7a>
2fff5738:	2b10      	cmp	r3, #16
2fff573a:	d822      	bhi.n	2fff5782 <stm32mp1_pll1_config_from_opp_khz+0x7a>
2fff573c:	4946      	ldr	r1, [pc, #280]	; (2fff5858 <stm32mp1_pll1_config_from_opp_khz+0x150>)
2fff573e:	2201      	movs	r2, #1
2fff5740:	409a      	lsls	r2, r3
2fff5742:	420a      	tst	r2, r1
2fff5744:	d01d      	beq.n	2fff5782 <stm32mp1_pll1_config_from_opp_khz+0x7a>
2fff5746:	fa93 f4a3 	rbit	r4, r3
2fff574a:	fab4 f484 	clz	r4, r4
2fff574e:	b99b      	cbnz	r3, 2fff5778 <stm32mp1_pll1_config_from_opp_khz+0x70>
2fff5750:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff5754:	f7fd fca8 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5758:	f100 012c 	add.w	r1, r0, #44	; 0x2c
2fff575c:	4620      	mov	r0, r4
2fff575e:	f7ff fed7 	bl	2fff5510 <stm32mp1_set_clkdiv>
2fff5762:	4604      	mov	r4, r0
2fff5764:	2800      	cmp	r0, #0
2fff5766:	d15f      	bne.n	2fff5828 <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff5768:	f240 2003 	movw	r0, #515	; 0x203
2fff576c:	f7ff ff06 	bl	2fff557c <stm32mp1_set_clksrc>
2fff5770:	4604      	mov	r4, r0
2fff5772:	e059      	b.n	2fff5828 <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff5774:	2600      	movs	r6, #0
2fff5776:	e7d3      	b.n	2fff5720 <stm32mp1_pll1_config_from_opp_khz+0x18>
2fff5778:	2c00      	cmp	r4, #0
2fff577a:	d1eb      	bne.n	2fff5754 <stm32mp1_pll1_config_from_opp_khz+0x4c>
2fff577c:	f240 2002 	movw	r0, #514	; 0x202
2fff5780:	e7f4      	b.n	2fff576c <stm32mp1_pll1_config_from_opp_khz+0x64>
2fff5782:	f106 0710 	add.w	r7, r6, #16
2fff5786:	f04f 0918 	mov.w	r9, #24
2fff578a:	fb09 5906 	mla	r9, r9, r6, r5
2fff578e:	eb05 0387 	add.w	r3, r5, r7, lsl #2
2fff5792:	f109 0914 	add.w	r9, r9, #20
2fff5796:	f8d3 a004 	ldr.w	sl, [r3, #4]
2fff579a:	f7fd fc85 	bl	2fff30a8 <stm32mp_rcc_base>
2fff579e:	4680      	mov	r8, r0
2fff57a0:	aa01      	add	r2, sp, #4
2fff57a2:	482e      	ldr	r0, [pc, #184]	; (2fff585c <stm32mp1_pll1_config_from_opp_khz+0x154>)
2fff57a4:	4649      	mov	r1, r9
2fff57a6:	f7ff fd11 	bl	2fff51cc <stm32mp1_pll_compute_pllxcfgr1>
2fff57aa:	4604      	mov	r4, r0
2fff57ac:	2800      	cmp	r0, #0
2fff57ae:	d13b      	bne.n	2fff5828 <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff57b0:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
2fff57b4:	9b01      	ldr	r3, [sp, #4]
2fff57b6:	429a      	cmp	r2, r3
2fff57b8:	d13a      	bne.n	2fff5830 <stm32mp1_pll1_config_from_opp_khz+0x128>
2fff57ba:	f8d9 3008 	ldr.w	r3, [r9, #8]
2fff57be:	f8d9 200c 	ldr.w	r2, [r9, #12]
2fff57c2:	ea4f 01ca 	mov.w	r1, sl, lsl #3
2fff57c6:	f003 007f 	and.w	r0, r3, #127	; 0x7f
2fff57ca:	0213      	lsls	r3, r2, #8
2fff57cc:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
2fff57d0:	f8d9 2010 	ldr.w	r2, [r9, #16]
2fff57d4:	f403 43fe 	and.w	r3, r3, #32512	; 0x7f00
2fff57d8:	0412      	lsls	r2, r2, #16
2fff57da:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
2fff57de:	4313      	orrs	r3, r2
2fff57e0:	4303      	orrs	r3, r0
2fff57e2:	9301      	str	r3, [sp, #4]
2fff57e4:	f8d8 208c 	ldr.w	r2, [r8, #140]	; 0x8c
2fff57e8:	4291      	cmp	r1, r2
2fff57ea:	d103      	bne.n	2fff57f4 <stm32mp1_pll1_config_from_opp_khz+0xec>
2fff57ec:	f8d8 2088 	ldr.w	r2, [r8, #136]	; 0x88
2fff57f0:	429a      	cmp	r2, r3
2fff57f2:	d019      	beq.n	2fff5828 <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff57f4:	f04f 0800 	mov.w	r8, #0
2fff57f8:	eb05 0787 	add.w	r7, r5, r7, lsl #2
2fff57fc:	4649      	mov	r1, r9
2fff57fe:	2000      	movs	r0, #0
2fff5800:	687a      	ldr	r2, [r7, #4]
2fff5802:	f7ff ff59 	bl	2fff56b8 <stm32mp1_pll_config>
2fff5806:	4604      	mov	r4, r0
2fff5808:	b970      	cbnz	r0, 2fff5828 <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff580a:	f1b8 0f00 	cmp.w	r8, #0
2fff580e:	d00b      	beq.n	2fff5828 <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff5810:	f7ff fd22 	bl	2fff5258 <stm32mp1_pll_start>
2fff5814:	2318      	movs	r3, #24
2fff5816:	4620      	mov	r0, r4
2fff5818:	fb03 5506 	mla	r5, r3, r6, r5
2fff581c:	6aa9      	ldr	r1, [r5, #40]	; 0x28
2fff581e:	f7ff feed 	bl	2fff55fc <stm32mp1_pll_output>
2fff5822:	4604      	mov	r4, r0
2fff5824:	2800      	cmp	r0, #0
2fff5826:	d0a9      	beq.n	2fff577c <stm32mp1_pll1_config_from_opp_khz+0x74>
2fff5828:	4620      	mov	r0, r4
2fff582a:	b002      	add	sp, #8
2fff582c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff5830:	f44f 7000 	mov.w	r0, #512	; 0x200
2fff5834:	f7ff fea2 	bl	2fff557c <stm32mp1_set_clksrc>
2fff5838:	4604      	mov	r4, r0
2fff583a:	2800      	cmp	r0, #0
2fff583c:	d1f4      	bne.n	2fff5828 <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff583e:	f7ff fd33 	bl	2fff52a8 <stm32mp1_pll_stop>
2fff5842:	4604      	mov	r4, r0
2fff5844:	2800      	cmp	r0, #0
2fff5846:	d1ef      	bne.n	2fff5828 <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff5848:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2fff584c:	e7d4      	b.n	2fff57f8 <stm32mp1_pll1_config_from_opp_khz+0xf0>
2fff584e:	f06f 0405 	mvn.w	r4, #5
2fff5852:	e7e9      	b.n	2fff5828 <stm32mp1_pll1_config_from_opp_khz+0x120>
2fff5854:	2fffea50 	.word	0x2fffea50
2fff5858:	00010116 	.word	0x00010116
2fff585c:	2fffbf88 	.word	0x2fffbf88

2fff5860 <stm32mp1_rcc_is_secure>:
2fff5860:	b508      	push	{r3, lr}
2fff5862:	f7fd fc21 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5866:	6800      	ldr	r0, [r0, #0]
2fff5868:	f000 0001 	and.w	r0, r0, #1
2fff586c:	bd08      	pop	{r3, pc}

2fff586e <stm32mp1_rcc_is_mckprot>:
2fff586e:	b508      	push	{r3, lr}
2fff5870:	f7fd fc1a 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5874:	6800      	ldr	r0, [r0, #0]
2fff5876:	f000 0003 	and.w	r0, r0, #3
2fff587a:	1ec3      	subs	r3, r0, #3
2fff587c:	4258      	negs	r0, r3
2fff587e:	4158      	adcs	r0, r3
2fff5880:	bd08      	pop	{r3, pc}
	...

2fff5884 <stm32mp1_clk_rcc_regs_lock>:
2fff5884:	4801      	ldr	r0, [pc, #4]	; (2fff588c <stm32mp1_clk_rcc_regs_lock+0x8>)
2fff5886:	f7ff bcf9 	b.w	2fff527c <stm32mp1_clk_lock>
2fff588a:	bf00      	nop
2fff588c:	2fffeaa8 	.word	0x2fffeaa8

2fff5890 <stm32mp1_clk_rcc_regs_unlock>:
2fff5890:	4801      	ldr	r0, [pc, #4]	; (2fff5898 <stm32mp1_clk_rcc_regs_unlock+0x8>)
2fff5892:	f7ff bcfe 	b.w	2fff5292 <stm32mp1_clk_unlock>
2fff5896:	bf00      	nop
2fff5898:	2fffeaa8 	.word	0x2fffeaa8

2fff589c <stm32mp_clk_enable>:
2fff589c:	2101      	movs	r1, #1
2fff589e:	f7ff bdbd 	b.w	2fff541c <__stm32mp1_clk_enable>

2fff58a2 <stm32mp_clk_disable>:
2fff58a2:	2101      	movs	r1, #1
2fff58a4:	f7ff bdf8 	b.w	2fff5498 <__stm32mp1_clk_disable>

2fff58a8 <stm32mp1_clk_force_enable>:
2fff58a8:	2100      	movs	r1, #0
2fff58aa:	f7ff bdb7 	b.w	2fff541c <__stm32mp1_clk_enable>

2fff58ae <stm32mp1_clk_force_disable>:
2fff58ae:	2100      	movs	r1, #0
2fff58b0:	f7ff bdf2 	b.w	2fff5498 <__stm32mp1_clk_disable>

2fff58b4 <stm32mp_clk_is_enabled>:
2fff58b4:	b510      	push	{r4, lr}
2fff58b6:	4602      	mov	r2, r0
2fff58b8:	f7ff fb52 	bl	2fff4f60 <clock_is_always_on>
2fff58bc:	b9b8      	cbnz	r0, 2fff58ee <stm32mp_clk_is_enabled+0x3a>
2fff58be:	4610      	mov	r0, r2
2fff58c0:	f7ff fd56 	bl	2fff5370 <stm32mp1_clk_get_gated_id>
2fff58c4:	1e04      	subs	r4, r0, #0
2fff58c6:	da03      	bge.n	2fff58d0 <stm32mp_clk_is_enabled+0x1c>
2fff58c8:	f7fd facc 	bl	2fff2e64 <console_flush>
2fff58cc:	f003 ebea 	blx	2fff90a4 <do_panic>
2fff58d0:	f7fd fbea 	bl	2fff30a8 <stm32mp_rcc_base>
2fff58d4:	4b06      	ldr	r3, [pc, #24]	; (2fff58f0 <stm32mp_clk_is_enabled+0x3c>)
2fff58d6:	f833 2034 	ldrh.w	r2, [r3, r4, lsl #3]
2fff58da:	eb03 04c4 	add.w	r4, r3, r4, lsl #3
2fff58de:	2301      	movs	r3, #1
2fff58e0:	5812      	ldr	r2, [r2, r0]
2fff58e2:	78a1      	ldrb	r1, [r4, #2]
2fff58e4:	408b      	lsls	r3, r1
2fff58e6:	4213      	tst	r3, r2
2fff58e8:	bf14      	ite	ne
2fff58ea:	2001      	movne	r0, #1
2fff58ec:	2000      	moveq	r0, #0
2fff58ee:	bd10      	pop	{r4, pc}
2fff58f0:	2fffbe16 	.word	0x2fffbe16

2fff58f4 <stm32mp_clk_get_rate>:
2fff58f4:	b508      	push	{r3, lr}
2fff58f6:	f7ff fd55 	bl	2fff53a4 <stm32mp1_clk_get_parent>
2fff58fa:	2800      	cmp	r0, #0
2fff58fc:	db03      	blt.n	2fff5906 <stm32mp_clk_get_rate+0x12>
2fff58fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff5902:	f7ff bb97 	b.w	2fff5034 <get_clock_rate>
2fff5906:	2000      	movs	r0, #0
2fff5908:	bd08      	pop	{r3, pc}
2fff590a:	0000      	movs	r0, r0
2fff590c:	0000      	movs	r0, r0
	...

2fff5910 <clk_get_pll1_settings.part.0>:
2fff5910:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff5914:	4615      	mov	r5, r2
2fff5916:	4a82      	ldr	r2, [pc, #520]	; (2fff5b20 <clk_get_pll1_settings.part.0+0x210>)
2fff5918:	b093      	sub	sp, #76	; 0x4c
2fff591a:	460f      	mov	r7, r1
2fff591c:	930c      	str	r3, [sp, #48]	; 0x30
2fff591e:	4616      	mov	r6, r2
2fff5920:	6853      	ldr	r3, [r2, #4]
2fff5922:	4299      	cmp	r1, r3
2fff5924:	f000 80df 	beq.w	2fff5ae6 <clk_get_pll1_settings.part.0+0x1d6>
2fff5928:	6893      	ldr	r3, [r2, #8]
2fff592a:	4299      	cmp	r1, r3
2fff592c:	f000 80f1 	beq.w	2fff5b12 <clk_get_pll1_settings.part.0+0x202>
2fff5930:	6813      	ldr	r3, [r2, #0]
2fff5932:	2b00      	cmp	r3, #0
2fff5934:	f040 80d4 	bne.w	2fff5ae0 <clk_get_pll1_settings.part.0+0x1d0>
2fff5938:	f5b0 7f20 	cmp.w	r0, #640	; 0x280
2fff593c:	d008      	beq.n	2fff5950 <clk_get_pll1_settings.part.0+0x40>
2fff593e:	f240 2381 	movw	r3, #641	; 0x281
2fff5942:	4298      	cmp	r0, r3
2fff5944:	f000 8097 	beq.w	2fff5a76 <clk_get_pll1_settings.part.0+0x166>
2fff5948:	f7fd fa8c 	bl	2fff2e64 <console_flush>
2fff594c:	f003 ebaa 	blx	2fff90a4 <do_panic>
2fff5950:	2004      	movs	r0, #4
2fff5952:	f7ff ffcf 	bl	2fff58f4 <stm32mp_clk_get_rate>
2fff5956:	9004      	str	r0, [sp, #16]
2fff5958:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff595c:	fb01 f307 	mul.w	r3, r1, r7
2fff5960:	2200      	movs	r2, #0
2fff5962:	9302      	str	r3, [sp, #8]
2fff5964:	4619      	mov	r1, r3
2fff5966:	2300      	movs	r3, #0
2fff5968:	60eb      	str	r3, [r5, #12]
2fff596a:	612b      	str	r3, [r5, #16]
2fff596c:	9b02      	ldr	r3, [sp, #8]
2fff596e:	e9cd 1208 	strd	r1, r2, [sp, #32]
2fff5972:	ea4f 6a93 	mov.w	sl, r3, lsr #26
2fff5976:	2201      	movs	r2, #1
2fff5978:	019b      	lsls	r3, r3, #6
2fff597a:	9307      	str	r3, [sp, #28]
2fff597c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff5980:	9305      	str	r3, [sp, #20]
2fff5982:	233f      	movs	r3, #63	; 0x3f
2fff5984:	616a      	str	r2, [r5, #20]
2fff5986:	9303      	str	r3, [sp, #12]
2fff5988:	9b03      	ldr	r3, [sp, #12]
2fff598a:	4a66      	ldr	r2, [pc, #408]	; (2fff5b24 <clk_get_pll1_settings.part.0+0x214>)
2fff598c:	f103 0901 	add.w	r9, r3, #1
2fff5990:	9b04      	ldr	r3, [sp, #16]
2fff5992:	fbb3 f9f9 	udiv	r9, r3, r9
2fff5996:	f5a9 03f4 	sub.w	r3, r9, #7995392	; 0x7a0000
2fff599a:	f5a3 5390 	sub.w	r3, r3, #4608	; 0x1200
2fff599e:	4293      	cmp	r3, r2
2fff59a0:	f200 8089 	bhi.w	2fff5ab6 <clk_get_pll1_settings.part.0+0x1a6>
2fff59a4:	f8dd 801c 	ldr.w	r8, [sp, #28]
2fff59a8:	2301      	movs	r3, #1
2fff59aa:	f8cd a018 	str.w	sl, [sp, #24]
2fff59ae:	2400      	movs	r4, #0
2fff59b0:	e9cd 3400 	strd	r3, r4, [sp]
2fff59b4:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
2fff59b8:	9a04      	ldr	r2, [sp, #16]
2fff59ba:	2300      	movs	r3, #0
2fff59bc:	9906      	ldr	r1, [sp, #24]
2fff59be:	4640      	mov	r0, r8
2fff59c0:	f003 ed0e 	blx	2fff93e0 <__aeabi_uldivmod>
2fff59c4:	f1a0 0319 	sub.w	r3, r0, #25
2fff59c8:	4607      	mov	r7, r0
2fff59ca:	2b4b      	cmp	r3, #75	; 0x4b
2fff59cc:	d85f      	bhi.n	2fff5a8e <clk_get_pll1_settings.part.0+0x17e>
2fff59ce:	9a04      	ldr	r2, [sp, #16]
2fff59d0:	1e43      	subs	r3, r0, #1
2fff59d2:	930d      	str	r3, [sp, #52]	; 0x34
2fff59d4:	9b06      	ldr	r3, [sp, #24]
2fff59d6:	ea4f 3048 	mov.w	r0, r8, lsl #13
2fff59da:	0359      	lsls	r1, r3, #13
2fff59dc:	2300      	movs	r3, #0
2fff59de:	ea41 41d8 	orr.w	r1, r1, r8, lsr #19
2fff59e2:	f003 ecfe 	blx	2fff93e0 <__aeabi_uldivmod>
2fff59e6:	eba0 3447 	sub.w	r4, r0, r7, lsl #13
2fff59ea:	fb09 f707 	mul.w	r7, r9, r7
2fff59ee:	17e3      	asrs	r3, r4, #31
2fff59f0:	9710      	str	r7, [sp, #64]	; 0x40
2fff59f2:	fba4 6709 	umull	r6, r7, r4, r9
2fff59f6:	fb09 7703 	mla	r7, r9, r3, r7
2fff59fa:	1ca3      	adds	r3, r4, #2
2fff59fc:	930e      	str	r3, [sp, #56]	; 0x38
2fff59fe:	9b00      	ldr	r3, [sp, #0]
2fff5a00:	3b01      	subs	r3, #1
2fff5a02:	930f      	str	r3, [sp, #60]	; 0x3c
2fff5a04:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
2fff5a08:	dc41      	bgt.n	2fff5a8e <clk_get_pll1_settings.part.0+0x17e>
2fff5a0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
2fff5a0c:	0b70      	lsrs	r0, r6, #13
2fff5a0e:	ea40 40c7 	orr.w	r0, r0, r7, lsl #19
2fff5a12:	18c0      	adds	r0, r0, r3
2fff5a14:	4b44      	ldr	r3, [pc, #272]	; (2fff5b28 <clk_get_pll1_settings.part.0+0x218>)
2fff5a16:	ea4f 3157 	mov.w	r1, r7, lsr #13
2fff5a1a:	f141 0100 	adc.w	r1, r1, #0
2fff5a1e:	18c3      	adds	r3, r0, r3
2fff5a20:	930a      	str	r3, [sp, #40]	; 0x28
2fff5a22:	f141 33ff 	adc.w	r3, r1, #4294967295	; 0xffffffff
2fff5a26:	930b      	str	r3, [sp, #44]	; 0x2c
2fff5a28:	e9dd bc0a 	ldrd	fp, ip, [sp, #40]	; 0x28
2fff5a2c:	a33a      	add	r3, pc, #232	; (adr r3, 2fff5b18 <clk_get_pll1_settings.part.0+0x208>)
2fff5a2e:	e9d3 2300 	ldrd	r2, r3, [r3]
2fff5a32:	4563      	cmp	r3, ip
2fff5a34:	bf08      	it	eq
2fff5a36:	455a      	cmpeq	r2, fp
2fff5a38:	d321      	bcc.n	2fff5a7e <clk_get_pll1_settings.part.0+0x16e>
2fff5a3a:	e9dd 2300 	ldrd	r2, r3, [sp]
2fff5a3e:	f003 ecd0 	blx	2fff93e0 <__aeabi_uldivmod>
2fff5a42:	4602      	mov	r2, r0
2fff5a44:	460b      	mov	r3, r1
2fff5a46:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
2fff5a4a:	4299      	cmp	r1, r3
2fff5a4c:	9902      	ldr	r1, [sp, #8]
2fff5a4e:	bf08      	it	eq
2fff5a50:	4290      	cmpeq	r0, r2
2fff5a52:	9b05      	ldr	r3, [sp, #20]
2fff5a54:	bf34      	ite	cc
2fff5a56:	1a50      	subcc	r0, r2, r1
2fff5a58:	1a88      	subcs	r0, r1, r2
2fff5a5a:	4298      	cmp	r0, r3
2fff5a5c:	d20d      	bcs.n	2fff5a7a <clk_get_pll1_settings.part.0+0x16a>
2fff5a5e:	9b03      	ldr	r3, [sp, #12]
2fff5a60:	602b      	str	r3, [r5, #0]
2fff5a62:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2fff5a64:	606b      	str	r3, [r5, #4]
2fff5a66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
2fff5a68:	60ab      	str	r3, [r5, #8]
2fff5a6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
2fff5a6c:	601c      	str	r4, [r3, #0]
2fff5a6e:	b928      	cbnz	r0, 2fff5a7c <clk_get_pll1_settings.part.0+0x16c>
2fff5a70:	b013      	add	sp, #76	; 0x4c
2fff5a72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff5a76:	2000      	movs	r0, #0
2fff5a78:	e76b      	b.n	2fff5952 <clk_get_pll1_settings.part.0+0x42>
2fff5a7a:	9805      	ldr	r0, [sp, #20]
2fff5a7c:	9005      	str	r0, [sp, #20]
2fff5a7e:	9b11      	ldr	r3, [sp, #68]	; 0x44
2fff5a80:	3401      	adds	r4, #1
2fff5a82:	18f6      	adds	r6, r6, r3
2fff5a84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff5a86:	f147 0700 	adc.w	r7, r7, #0
2fff5a8a:	42a3      	cmp	r3, r4
2fff5a8c:	d1ba      	bne.n	2fff5a04 <clk_get_pll1_settings.part.0+0xf4>
2fff5a8e:	9b07      	ldr	r3, [sp, #28]
2fff5a90:	eb18 0803 	adds.w	r8, r8, r3
2fff5a94:	9b06      	ldr	r3, [sp, #24]
2fff5a96:	eb43 030a 	adc.w	r3, r3, sl
2fff5a9a:	9306      	str	r3, [sp, #24]
2fff5a9c:	9b00      	ldr	r3, [sp, #0]
2fff5a9e:	3301      	adds	r3, #1
2fff5aa0:	9300      	str	r3, [sp, #0]
2fff5aa2:	9b01      	ldr	r3, [sp, #4]
2fff5aa4:	f143 0300 	adc.w	r3, r3, #0
2fff5aa8:	9301      	str	r3, [sp, #4]
2fff5aaa:	e9dd 3400 	ldrd	r3, r4, [sp]
2fff5aae:	2c00      	cmp	r4, #0
2fff5ab0:	bf08      	it	eq
2fff5ab2:	2b81      	cmpeq	r3, #129	; 0x81
2fff5ab4:	d180      	bne.n	2fff59b8 <clk_get_pll1_settings.part.0+0xa8>
2fff5ab6:	9b03      	ldr	r3, [sp, #12]
2fff5ab8:	9a07      	ldr	r2, [sp, #28]
2fff5aba:	3b01      	subs	r3, #1
2fff5abc:	9303      	str	r3, [sp, #12]
2fff5abe:	9b08      	ldr	r3, [sp, #32]
2fff5ac0:	1ad3      	subs	r3, r2, r3
2fff5ac2:	9307      	str	r3, [sp, #28]
2fff5ac4:	9b09      	ldr	r3, [sp, #36]	; 0x24
2fff5ac6:	eb6a 0a03 	sbc.w	sl, sl, r3
2fff5aca:	9b03      	ldr	r3, [sp, #12]
2fff5acc:	3301      	adds	r3, #1
2fff5ace:	f47f af5b 	bne.w	2fff5988 <clk_get_pll1_settings.part.0+0x78>
2fff5ad2:	9b05      	ldr	r3, [sp, #20]
2fff5ad4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff5ad8:	3301      	adds	r3, #1
2fff5ada:	bf18      	it	ne
2fff5adc:	2000      	movne	r0, #0
2fff5ade:	e7c7      	b.n	2fff5a70 <clk_get_pll1_settings.part.0+0x160>
2fff5ae0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff5ae4:	e7c4      	b.n	2fff5a70 <clk_get_pll1_settings.part.0+0x160>
2fff5ae6:	2400      	movs	r4, #0
2fff5ae8:	2218      	movs	r2, #24
2fff5aea:	fb02 f104 	mul.w	r1, r2, r4
2fff5aee:	1873      	adds	r3, r6, r1
2fff5af0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
2fff5af2:	2b00      	cmp	r3, #0
2fff5af4:	f43f af20 	beq.w	2fff5938 <clk_get_pll1_settings.part.0+0x28>
2fff5af8:	3410      	adds	r4, #16
2fff5afa:	3114      	adds	r1, #20
2fff5afc:	4431      	add	r1, r6
2fff5afe:	4628      	mov	r0, r5
2fff5b00:	eb06 0684 	add.w	r6, r6, r4, lsl #2
2fff5b04:	f004 fb30 	bl	2fffa168 <memcpy>
2fff5b08:	9a0c      	ldr	r2, [sp, #48]	; 0x30
2fff5b0a:	2000      	movs	r0, #0
2fff5b0c:	6873      	ldr	r3, [r6, #4]
2fff5b0e:	6013      	str	r3, [r2, #0]
2fff5b10:	e7ae      	b.n	2fff5a70 <clk_get_pll1_settings.part.0+0x160>
2fff5b12:	2401      	movs	r4, #1
2fff5b14:	e7e8      	b.n	2fff5ae8 <clk_get_pll1_settings.part.0+0x1d8>
2fff5b16:	bf00      	nop
2fff5b18:	17d78400 	.word	0x17d78400
2fff5b1c:	00000000 	.word	0x00000000
2fff5b20:	2fffea50 	.word	0x2fffea50
2fff5b24:	007a1200 	.word	0x007a1200
2fff5b28:	e8287c00 	.word	0xe8287c00

2fff5b2c <stm32mp_clk_timer_get_rate>:
2fff5b2c:	b538      	push	{r3, r4, r5, lr}
2fff5b2e:	4605      	mov	r5, r0
2fff5b30:	f7fd faba 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5b34:	4604      	mov	r4, r0
2fff5b36:	4628      	mov	r0, r5
2fff5b38:	f7ff fedc 	bl	2fff58f4 <stm32mp_clk_get_rate>
2fff5b3c:	2dcd      	cmp	r5, #205	; 0xcd
2fff5b3e:	bf97      	itett	ls
2fff5b40:	f8d4 2834 	ldrls.w	r2, [r4, #2100]	; 0x834
2fff5b44:	f8d4 2838 	ldrhi.w	r2, [r4, #2104]	; 0x838
2fff5b48:	f8d4 3828 	ldrls.w	r3, [r4, #2088]	; 0x828
2fff5b4c:	f002 0207 	andls.w	r2, r2, #7
2fff5b50:	bf84      	itt	hi
2fff5b52:	f8d4 382c 	ldrhi.w	r3, [r4, #2092]	; 0x82c
2fff5b56:	f002 0207 	andhi.w	r2, r2, #7
2fff5b5a:	f003 0301 	and.w	r3, r3, #1
2fff5b5e:	b112      	cbz	r2, 2fff5b66 <stm32mp_clk_timer_get_rate+0x3a>
2fff5b60:	fb03 0000 	mla	r0, r3, r0, r0
2fff5b64:	0040      	lsls	r0, r0, #1
2fff5b66:	bd38      	pop	{r3, r4, r5, pc}

2fff5b68 <stm32mp1_rtc_get_read_twice>:
2fff5b68:	b538      	push	{r3, r4, r5, lr}
2fff5b6a:	f7fd fa9d 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5b6e:	4605      	mov	r5, r0
2fff5b70:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
2fff5b74:	f3c0 4001 	ubfx	r0, r0, #16, #2
2fff5b78:	2802      	cmp	r0, #2
2fff5b7a:	d004      	beq.n	2fff5b86 <stm32mp1_rtc_get_read_twice+0x1e>
2fff5b7c:	2803      	cmp	r0, #3
2fff5b7e:	d014      	beq.n	2fff5baa <stm32mp1_rtc_get_read_twice+0x42>
2fff5b80:	2801      	cmp	r0, #1
2fff5b82:	d11c      	bne.n	2fff5bbe <stm32mp1_rtc_get_read_twice+0x56>
2fff5b84:	2003      	movs	r0, #3
2fff5b86:	f7ff feb5 	bl	2fff58f4 <stm32mp_clk_get_rate>
2fff5b8a:	4604      	mov	r4, r0
2fff5b8c:	f8d5 5834 	ldr.w	r5, [r5, #2100]	; 0x834
2fff5b90:	20c4      	movs	r0, #196	; 0xc4
2fff5b92:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
2fff5b96:	f7ff fead 	bl	2fff58f4 <stm32mp_clk_get_rate>
2fff5b9a:	f005 0507 	and.w	r5, r5, #7
2fff5b9e:	40e8      	lsrs	r0, r5
2fff5ba0:	4284      	cmp	r4, r0
2fff5ba2:	bf94      	ite	ls
2fff5ba4:	2000      	movls	r0, #0
2fff5ba6:	2001      	movhi	r0, #1
2fff5ba8:	bd38      	pop	{r3, r4, r5, pc}
2fff5baa:	2000      	movs	r0, #0
2fff5bac:	f7ff fea2 	bl	2fff58f4 <stm32mp_clk_get_rate>
2fff5bb0:	6c6c      	ldr	r4, [r5, #68]	; 0x44
2fff5bb2:	f004 043f 	and.w	r4, r4, #63	; 0x3f
2fff5bb6:	3401      	adds	r4, #1
2fff5bb8:	fbb0 f4f4 	udiv	r4, r0, r4
2fff5bbc:	e7e6      	b.n	2fff5b8c <stm32mp1_rtc_get_read_twice+0x24>
2fff5bbe:	f7fd f951 	bl	2fff2e64 <console_flush>
2fff5bc2:	f003 ea70 	blx	2fff90a4 <do_panic>
	...

2fff5bc8 <stm32mp1_round_opp_khz>:
2fff5bc8:	4a0a      	ldr	r2, [pc, #40]	; (2fff5bf4 <stm32mp1_round_opp_khz+0x2c>)
2fff5bca:	4b0b      	ldr	r3, [pc, #44]	; (2fff5bf8 <stm32mp1_round_opp_khz+0x30>)
2fff5bcc:	6811      	ldr	r1, [r2, #0]
2fff5bce:	4299      	cmp	r1, r3
2fff5bd0:	d10d      	bne.n	2fff5bee <stm32mp1_round_opp_khz+0x26>
2fff5bd2:	6853      	ldr	r3, [r2, #4]
2fff5bd4:	6801      	ldr	r1, [r0, #0]
2fff5bd6:	6892      	ldr	r2, [r2, #8]
2fff5bd8:	428b      	cmp	r3, r1
2fff5bda:	bf88      	it	hi
2fff5bdc:	2300      	movhi	r3, #0
2fff5bde:	4291      	cmp	r1, r2
2fff5be0:	d302      	bcc.n	2fff5be8 <stm32mp1_round_opp_khz+0x20>
2fff5be2:	4293      	cmp	r3, r2
2fff5be4:	bf38      	it	cc
2fff5be6:	4613      	movcc	r3, r2
2fff5be8:	6003      	str	r3, [r0, #0]
2fff5bea:	2000      	movs	r0, #0
2fff5bec:	4770      	bx	lr
2fff5bee:	4b03      	ldr	r3, [pc, #12]	; (2fff5bfc <stm32mp1_round_opp_khz+0x34>)
2fff5bf0:	681b      	ldr	r3, [r3, #0]
2fff5bf2:	e7f9      	b.n	2fff5be8 <stm32mp1_round_opp_khz+0x20>
2fff5bf4:	2fffea50 	.word	0x2fffea50
2fff5bf8:	504c4c31 	.word	0x504c4c31
2fff5bfc:	2fffe98c 	.word	0x2fffe98c

2fff5c00 <stm32mp1_set_opp_khz>:
2fff5c00:	b538      	push	{r3, r4, r5, lr}
2fff5c02:	4604      	mov	r4, r0
2fff5c04:	4d16      	ldr	r5, [pc, #88]	; (2fff5c60 <stm32mp1_set_opp_khz+0x60>)
2fff5c06:	f7fd fa4f 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5c0a:	682b      	ldr	r3, [r5, #0]
2fff5c0c:	42a3      	cmp	r3, r4
2fff5c0e:	d01b      	beq.n	2fff5c48 <stm32mp1_set_opp_khz+0x48>
2fff5c10:	4b14      	ldr	r3, [pc, #80]	; (2fff5c64 <stm32mp1_set_opp_khz+0x64>)
2fff5c12:	681a      	ldr	r2, [r3, #0]
2fff5c14:	4b14      	ldr	r3, [pc, #80]	; (2fff5c68 <stm32mp1_set_opp_khz+0x68>)
2fff5c16:	429a      	cmp	r2, r3
2fff5c18:	d118      	bne.n	2fff5c4c <stm32mp1_set_opp_khz+0x4c>
2fff5c1a:	6a03      	ldr	r3, [r0, #32]
2fff5c1c:	f003 0307 	and.w	r3, r3, #7
2fff5c20:	3b02      	subs	r3, #2
2fff5c22:	2b01      	cmp	r3, #1
2fff5c24:	d815      	bhi.n	2fff5c52 <stm32mp1_set_opp_khz+0x52>
2fff5c26:	4620      	mov	r0, r4
2fff5c28:	f7ff fd6e 	bl	2fff5708 <stm32mp1_pll1_config_from_opp_khz>
2fff5c2c:	b150      	cbz	r0, 2fff5c44 <stm32mp1_set_opp_khz+0x44>
2fff5c2e:	6828      	ldr	r0, [r5, #0]
2fff5c30:	f7ff fd6a 	bl	2fff5708 <stm32mp1_pll1_config_from_opp_khz>
2fff5c34:	b180      	cbz	r0, 2fff5c58 <stm32mp1_set_opp_khz+0x58>
2fff5c36:	480d      	ldr	r0, [pc, #52]	; (2fff5c6c <stm32mp1_set_opp_khz+0x6c>)
2fff5c38:	f7fd f870 	bl	2fff2d1c <tf_log>
2fff5c3c:	f7fd f912 	bl	2fff2e64 <console_flush>
2fff5c40:	f003 ea30 	blx	2fff90a4 <do_panic>
2fff5c44:	602c      	str	r4, [r5, #0]
2fff5c46:	bd38      	pop	{r3, r4, r5, pc}
2fff5c48:	2000      	movs	r0, #0
2fff5c4a:	e7fc      	b.n	2fff5c46 <stm32mp1_set_opp_khz+0x46>
2fff5c4c:	f06f 000c 	mvn.w	r0, #12
2fff5c50:	e7f9      	b.n	2fff5c46 <stm32mp1_set_opp_khz+0x46>
2fff5c52:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff5c56:	e7f6      	b.n	2fff5c46 <stm32mp1_set_opp_khz+0x46>
2fff5c58:	f06f 0004 	mvn.w	r0, #4
2fff5c5c:	e7f3      	b.n	2fff5c46 <stm32mp1_set_opp_khz+0x46>
2fff5c5e:	bf00      	nop
2fff5c60:	2fffe98c 	.word	0x2fffe98c
2fff5c64:	2fffea50 	.word	0x2fffea50
2fff5c68:	504c4c31 	.word	0x504c4c31
2fff5c6c:	2fffbcda 	.word	0x2fffbcda

2fff5c70 <stm32mp1_clk_compute_all_pll1_settings>:
2fff5c70:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
2fff5c74:	2302      	movs	r3, #2
2fff5c76:	4d47      	ldr	r5, [pc, #284]	; (2fff5d94 <stm32mp1_clk_compute_all_pll1_settings+0x124>)
2fff5c78:	4607      	mov	r7, r0
2fff5c7a:	9301      	str	r3, [sp, #4]
2fff5c7c:	a801      	add	r0, sp, #4
2fff5c7e:	f105 020c 	add.w	r2, r5, #12
2fff5c82:	1d29      	adds	r1, r5, #4
2fff5c84:	f002 fde8 	bl	2fff8858 <dt_get_all_opp_freqvolt>
2fff5c88:	1c43      	adds	r3, r0, #1
2fff5c8a:	4604      	mov	r4, r0
2fff5c8c:	d003      	beq.n	2fff5c96 <stm32mp1_clk_compute_all_pll1_settings+0x26>
2fff5c8e:	b120      	cbz	r0, 2fff5c9a <stm32mp1_clk_compute_all_pll1_settings+0x2a>
2fff5c90:	4841      	ldr	r0, [pc, #260]	; (2fff5d98 <stm32mp1_clk_compute_all_pll1_settings+0x128>)
2fff5c92:	f7fd f843 	bl	2fff2d1c <tf_log>
2fff5c96:	2000      	movs	r0, #0
2fff5c98:	e078      	b.n	2fff5d8c <stm32mp1_clk_compute_all_pll1_settings+0x11c>
2fff5c9a:	f7fd fa05 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5c9e:	4606      	mov	r6, r0
2fff5ca0:	20c2      	movs	r0, #194	; 0xc2
2fff5ca2:	f7ff fe27 	bl	2fff58f4 <stm32mp_clk_get_rate>
2fff5ca6:	686b      	ldr	r3, [r5, #4]
2fff5ca8:	f500 72fa 	add.w	r2, r0, #500	; 0x1f4
2fff5cac:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
2fff5cb0:	fbb2 f2f0 	udiv	r2, r2, r0
2fff5cb4:	4293      	cmp	r3, r2
2fff5cb6:	d044      	beq.n	2fff5d42 <stm32mp1_clk_compute_all_pll1_settings+0xd2>
2fff5cb8:	68ab      	ldr	r3, [r5, #8]
2fff5cba:	4293      	cmp	r3, r2
2fff5cbc:	d143      	bne.n	2fff5d46 <stm32mp1_clk_compute_all_pll1_settings+0xd6>
2fff5cbe:	2301      	movs	r3, #1
2fff5cc0:	1c9a      	adds	r2, r3, #2
2fff5cc2:	eb05 0282 	add.w	r2, r5, r2, lsl #2
2fff5cc6:	6852      	ldr	r2, [r2, #4]
2fff5cc8:	4297      	cmp	r7, r2
2fff5cca:	d001      	beq.n	2fff5cd0 <stm32mp1_clk_compute_all_pll1_settings+0x60>
2fff5ccc:	2f00      	cmp	r7, #0
2fff5cce:	d13a      	bne.n	2fff5d46 <stm32mp1_clk_compute_all_pll1_settings+0xd6>
2fff5cd0:	f8d6 0084 	ldr.w	r0, [r6, #132]	; 0x84
2fff5cd4:	2218      	movs	r2, #24
2fff5cd6:	fb02 5103 	mla	r1, r2, r3, r5
2fff5cda:	f3c0 4005 	ubfx	r0, r0, #16, #6
2fff5cde:	461c      	mov	r4, r3
2fff5ce0:	6148      	str	r0, [r1, #20]
2fff5ce2:	f8d6 0084 	ldr.w	r0, [r6, #132]	; 0x84
2fff5ce6:	fb03 2202 	mla	r2, r3, r2, r2
2fff5cea:	f3c0 0008 	ubfx	r0, r0, #0, #9
2fff5cee:	6188      	str	r0, [r1, #24]
2fff5cf0:	f8d6 0088 	ldr.w	r0, [r6, #136]	; 0x88
2fff5cf4:	442a      	add	r2, r5
2fff5cf6:	f000 007f 	and.w	r0, r0, #127	; 0x7f
2fff5cfa:	6050      	str	r0, [r2, #4]
2fff5cfc:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
2fff5d00:	f3c2 2206 	ubfx	r2, r2, #8, #7
2fff5d04:	620a      	str	r2, [r1, #32]
2fff5d06:	f8d6 2088 	ldr.w	r2, [r6, #136]	; 0x88
2fff5d0a:	f3c2 4206 	ubfx	r2, r2, #16, #7
2fff5d0e:	624a      	str	r2, [r1, #36]	; 0x24
2fff5d10:	f8d6 2080 	ldr.w	r2, [r6, #128]	; 0x80
2fff5d14:	0912      	lsrs	r2, r2, #4
2fff5d16:	628a      	str	r2, [r1, #40]	; 0x28
2fff5d18:	f103 0210 	add.w	r2, r3, #16
2fff5d1c:	f8d6 108c 	ldr.w	r1, [r6, #140]	; 0x8c
2fff5d20:	eb05 0282 	add.w	r2, r5, r2, lsl #2
2fff5d24:	f3c1 01cc 	ubfx	r1, r1, #3, #13
2fff5d28:	6051      	str	r1, [r2, #4]
2fff5d2a:	f7fd f9bd 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5d2e:	6a83      	ldr	r3, [r0, #40]	; 0x28
2fff5d30:	f013 0303 	ands.w	r3, r3, #3
2fff5d34:	d00a      	beq.n	2fff5d4c <stm32mp1_clk_compute_all_pll1_settings+0xdc>
2fff5d36:	2b01      	cmp	r3, #1
2fff5d38:	d016      	beq.n	2fff5d68 <stm32mp1_clk_compute_all_pll1_settings+0xf8>
2fff5d3a:	f7fd f893 	bl	2fff2e64 <console_flush>
2fff5d3e:	f003 e9b2 	blx	2fff90a4 <do_panic>
2fff5d42:	4623      	mov	r3, r4
2fff5d44:	e7bc      	b.n	2fff5cc0 <stm32mp1_clk_compute_all_pll1_settings+0x50>
2fff5d46:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff5d4a:	e7ee      	b.n	2fff5d2a <stm32mp1_clk_compute_all_pll1_settings+0xba>
2fff5d4c:	f44f 7820 	mov.w	r8, #640	; 0x280
2fff5d50:	4f10      	ldr	r7, [pc, #64]	; (2fff5d94 <stm32mp1_clk_compute_all_pll1_settings+0x124>)
2fff5d52:	2600      	movs	r6, #0
2fff5d54:	f04f 0918 	mov.w	r9, #24
2fff5d58:	f105 0a14 	add.w	sl, r5, #20
2fff5d5c:	9b01      	ldr	r3, [sp, #4]
2fff5d5e:	42b3      	cmp	r3, r6
2fff5d60:	dc05      	bgt.n	2fff5d6e <stm32mp1_clk_compute_all_pll1_settings+0xfe>
2fff5d62:	4b0e      	ldr	r3, [pc, #56]	; (2fff5d9c <stm32mp1_clk_compute_all_pll1_settings+0x12c>)
2fff5d64:	602b      	str	r3, [r5, #0]
2fff5d66:	e796      	b.n	2fff5c96 <stm32mp1_clk_compute_all_pll1_settings+0x26>
2fff5d68:	f240 2881 	movw	r8, #641	; 0x281
2fff5d6c:	e7f0      	b.n	2fff5d50 <stm32mp1_clk_compute_all_pll1_settings+0xe0>
2fff5d6e:	42a6      	cmp	r6, r4
2fff5d70:	d102      	bne.n	2fff5d78 <stm32mp1_clk_compute_all_pll1_settings+0x108>
2fff5d72:	3601      	adds	r6, #1
2fff5d74:	3704      	adds	r7, #4
2fff5d76:	e7f1      	b.n	2fff5d5c <stm32mp1_clk_compute_all_pll1_settings+0xec>
2fff5d78:	6879      	ldr	r1, [r7, #4]
2fff5d7a:	f107 0344 	add.w	r3, r7, #68	; 0x44
2fff5d7e:	fb09 a206 	mla	r2, r9, r6, sl
2fff5d82:	4640      	mov	r0, r8
2fff5d84:	f7ff fdc4 	bl	2fff5910 <clk_get_pll1_settings.part.0>
2fff5d88:	2800      	cmp	r0, #0
2fff5d8a:	d0f2      	beq.n	2fff5d72 <stm32mp1_clk_compute_all_pll1_settings+0x102>
2fff5d8c:	b002      	add	sp, #8
2fff5d8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff5d92:	bf00      	nop
2fff5d94:	2fffea50 	.word	0x2fffea50
2fff5d98:	2fffbcfe 	.word	0x2fffbcfe
2fff5d9c:	504c4c31 	.word	0x504c4c31

2fff5da0 <stm32mp1_clk_lp_save_opp_pll1_settings>:
2fff5da0:	294c      	cmp	r1, #76	; 0x4c
2fff5da2:	460a      	mov	r2, r1
2fff5da4:	b510      	push	{r4, lr}
2fff5da6:	d104      	bne.n	2fff5db2 <stm32mp1_clk_lp_save_opp_pll1_settings+0x12>
2fff5da8:	4906      	ldr	r1, [pc, #24]	; (2fff5dc4 <stm32mp1_clk_lp_save_opp_pll1_settings+0x24>)
2fff5daa:	4b07      	ldr	r3, [pc, #28]	; (2fff5dc8 <stm32mp1_clk_lp_save_opp_pll1_settings+0x28>)
2fff5dac:	680c      	ldr	r4, [r1, #0]
2fff5dae:	429c      	cmp	r4, r3
2fff5db0:	d003      	beq.n	2fff5dba <stm32mp1_clk_lp_save_opp_pll1_settings+0x1a>
2fff5db2:	f7fd f857 	bl	2fff2e64 <console_flush>
2fff5db6:	f003 e976 	blx	2fff90a4 <do_panic>
2fff5dba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff5dbe:	f004 b9d3 	b.w	2fffa168 <memcpy>
2fff5dc2:	bf00      	nop
2fff5dc4:	2fffea50 	.word	0x2fffea50
2fff5dc8:	504c4c31 	.word	0x504c4c31

2fff5dcc <stm32mp1_clk_lp_load_opp_pll1_settings>:
2fff5dcc:	294c      	cmp	r1, #76	; 0x4c
2fff5dce:	460a      	mov	r2, r1
2fff5dd0:	b508      	push	{r3, lr}
2fff5dd2:	d003      	beq.n	2fff5ddc <stm32mp1_clk_lp_load_opp_pll1_settings+0x10>
2fff5dd4:	f7fd f846 	bl	2fff2e64 <console_flush>
2fff5dd8:	f003 e964 	blx	2fff90a4 <do_panic>
2fff5ddc:	4601      	mov	r1, r0
2fff5dde:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff5de2:	4801      	ldr	r0, [pc, #4]	; (2fff5de8 <stm32mp1_clk_lp_load_opp_pll1_settings+0x1c>)
2fff5de4:	f004 b9c0 	b.w	2fffa168 <memcpy>
2fff5de8:	2fffea50 	.word	0x2fffea50

2fff5dec <stm32mp1_register_clock_parents_secure>:
2fff5dec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff5dee:	4605      	mov	r5, r0
2fff5df0:	f7ff fd36 	bl	2fff5860 <stm32mp1_rcc_is_secure>
2fff5df4:	2800      	cmp	r0, #0
2fff5df6:	d07f      	beq.n	2fff5ef8 <stm32mp1_register_clock_parents_secure+0x10c>
2fff5df8:	2db2      	cmp	r5, #178	; 0xb2
2fff5dfa:	d018      	beq.n	2fff5e2e <stm32mp1_register_clock_parents_secure+0x42>
2fff5dfc:	d80e      	bhi.n	2fff5e1c <stm32mp1_register_clock_parents_secure+0x30>
2fff5dfe:	f1a5 03b0 	sub.w	r3, r5, #176	; 0xb0
2fff5e02:	2b01      	cmp	r3, #1
2fff5e04:	d978      	bls.n	2fff5ef8 <stm32mp1_register_clock_parents_secure+0x10c>
2fff5e06:	4628      	mov	r0, r5
2fff5e08:	f7ff facc 	bl	2fff53a4 <stm32mp1_clk_get_parent>
2fff5e0c:	1e04      	subs	r4, r0, #0
2fff5e0e:	da13      	bge.n	2fff5e38 <stm32mp1_register_clock_parents_secure+0x4c>
2fff5e10:	483e      	ldr	r0, [pc, #248]	; (2fff5f0c <stm32mp1_register_clock_parents_secure+0x120>)
2fff5e12:	4629      	mov	r1, r5
2fff5e14:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2fff5e18:	f7fc bf80 	b.w	2fff2d1c <tf_log>
2fff5e1c:	2db3      	cmp	r5, #179	; 0xb3
2fff5e1e:	d1f2      	bne.n	2fff5e06 <stm32mp1_register_clock_parents_secure+0x1a>
2fff5e20:	483b      	ldr	r0, [pc, #236]	; (2fff5f10 <stm32mp1_register_clock_parents_secure+0x124>)
2fff5e22:	f7fc ff7b 	bl	2fff2d1c <tf_log>
2fff5e26:	f7fd f81d 	bl	2fff2e64 <console_flush>
2fff5e2a:	f003 e93c 	blx	2fff90a4 <do_panic>
2fff5e2e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
2fff5e32:	2013      	movs	r0, #19
2fff5e34:	f7fa be0a 	b.w	2fff0a4c <stm32mp_register_secure_periph>
2fff5e38:	4e36      	ldr	r6, [pc, #216]	; (2fff5f14 <stm32mp1_register_clock_parents_secure+0x128>)
2fff5e3a:	4d37      	ldr	r5, [pc, #220]	; (2fff5f18 <stm32mp1_register_clock_parents_secure+0x12c>)
2fff5e3c:	4f37      	ldr	r7, [pc, #220]	; (2fff5f1c <stm32mp1_register_clock_parents_secure+0x130>)
2fff5e3e:	2c1d      	cmp	r4, #29
2fff5e40:	d8f1      	bhi.n	2fff5e26 <stm32mp1_register_clock_parents_secure+0x3a>
2fff5e42:	2301      	movs	r3, #1
2fff5e44:	40a3      	lsls	r3, r4
2fff5e46:	4233      	tst	r3, r6
2fff5e48:	d105      	bne.n	2fff5e56 <stm32mp1_register_clock_parents_secure+0x6a>
2fff5e4a:	f413 2fe0 	tst.w	r3, #458752	; 0x70000
2fff5e4e:	d0ea      	beq.n	2fff5e26 <stm32mp1_register_clock_parents_secure+0x3a>
2fff5e50:	2013      	movs	r0, #19
2fff5e52:	f7fa fdfb 	bl	2fff0a4c <stm32mp_register_secure_periph>
2fff5e56:	3c0a      	subs	r4, #10
2fff5e58:	2c17      	cmp	r4, #23
2fff5e5a:	d84d      	bhi.n	2fff5ef8 <stm32mp1_register_clock_parents_secure+0x10c>
2fff5e5c:	a301      	add	r3, pc, #4	; (adr r3, 2fff5e64 <stm32mp1_register_clock_parents_secure+0x78>)
2fff5e5e:	f853 f024 	ldr.w	pc, [r3, r4, lsl #2]
2fff5e62:	bf00      	nop
2fff5e64:	2fff5efb 	.word	0x2fff5efb
2fff5e68:	2fff5efb 	.word	0x2fff5efb
2fff5e6c:	2fff5efb 	.word	0x2fff5efb
2fff5e70:	2fff5f07 	.word	0x2fff5f07
2fff5e74:	2fff5f07 	.word	0x2fff5f07
2fff5e78:	2fff5f07 	.word	0x2fff5f07
2fff5e7c:	2fff5ec5 	.word	0x2fff5ec5
2fff5e80:	2fff5ec5 	.word	0x2fff5ec5
2fff5e84:	2fff5ec5 	.word	0x2fff5ec5
2fff5e88:	2fff5f03 	.word	0x2fff5f03
2fff5e8c:	2fff5f03 	.word	0x2fff5f03
2fff5e90:	2fff5f03 	.word	0x2fff5f03
2fff5e94:	2fff5eeb 	.word	0x2fff5eeb
2fff5e98:	2fff5e27 	.word	0x2fff5e27
2fff5e9c:	2fff5e27 	.word	0x2fff5e27
2fff5ea0:	2fff5ef9 	.word	0x2fff5ef9
2fff5ea4:	2fff5eeb 	.word	0x2fff5eeb
2fff5ea8:	2fff5eeb 	.word	0x2fff5eeb
2fff5eac:	2fff5e27 	.word	0x2fff5e27
2fff5eb0:	2fff5e27 	.word	0x2fff5e27
2fff5eb4:	2fff5e27 	.word	0x2fff5e27
2fff5eb8:	2fff5e27 	.word	0x2fff5e27
2fff5ebc:	2fff5e27 	.word	0x2fff5e27
2fff5ec0:	2fff5e27 	.word	0x2fff5e27
2fff5ec4:	2402      	movs	r4, #2
2fff5ec6:	f7fd f8ef 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5eca:	eb05 1344 	add.w	r3, r5, r4, lsl #5
2fff5ece:	889b      	ldrh	r3, [r3, #4]
2fff5ed0:	581b      	ldr	r3, [r3, r0]
2fff5ed2:	f003 0303 	and.w	r3, r3, #3
2fff5ed6:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
2fff5eda:	3304      	adds	r3, #4
2fff5edc:	f855 4023 	ldr.w	r4, [r5, r3, lsl #2]
2fff5ee0:	2cff      	cmp	r4, #255	; 0xff
2fff5ee2:	d009      	beq.n	2fff5ef8 <stm32mp1_register_clock_parents_secure+0x10c>
2fff5ee4:	2c00      	cmp	r4, #0
2fff5ee6:	daaa      	bge.n	2fff5e3e <stm32mp1_register_clock_parents_secure+0x52>
2fff5ee8:	e006      	b.n	2fff5ef8 <stm32mp1_register_clock_parents_secure+0x10c>
2fff5eea:	f7fd f8dd 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5eee:	6a43      	ldr	r3, [r0, #36]	; 0x24
2fff5ef0:	f003 0307 	and.w	r3, r3, #7
2fff5ef4:	2b02      	cmp	r3, #2
2fff5ef6:	d902      	bls.n	2fff5efe <stm32mp1_register_clock_parents_secure+0x112>
2fff5ef8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff5efa:	2400      	movs	r4, #0
2fff5efc:	e7e3      	b.n	2fff5ec6 <stm32mp1_register_clock_parents_secure+0xda>
2fff5efe:	5cfc      	ldrb	r4, [r7, r3]
2fff5f00:	e79d      	b.n	2fff5e3e <stm32mp1_register_clock_parents_secure+0x52>
2fff5f02:	2403      	movs	r4, #3
2fff5f04:	e7df      	b.n	2fff5ec6 <stm32mp1_register_clock_parents_secure+0xda>
2fff5f06:	2401      	movs	r4, #1
2fff5f08:	e7dd      	b.n	2fff5ec6 <stm32mp1_register_clock_parents_secure+0xda>
2fff5f0a:	bf00      	nop
2fff5f0c:	2fffbd49 	.word	0x2fffbd49
2fff5f10:	2fffbd30 	.word	0x2fffbd30
2fff5f14:	3c40ffdf 	.word	0x3c40ffdf
2fff5f18:	2fffbf88 	.word	0x2fffbf88
2fff5f1c:	2fffbdae 	.word	0x2fffbdae

2fff5f20 <save_clock_pm_context>:
2fff5f20:	b508      	push	{r3, lr}
2fff5f22:	2288      	movs	r2, #136	; 0x88
2fff5f24:	490d      	ldr	r1, [pc, #52]	; (2fff5f5c <save_clock_pm_context+0x3c>)
2fff5f26:	2000      	movs	r0, #0
2fff5f28:	f002 fdbd 	bl	2fff8aa6 <stm32mp1_pm_save_clock_cfg>
2fff5f2c:	490c      	ldr	r1, [pc, #48]	; (2fff5f60 <save_clock_pm_context+0x40>)
2fff5f2e:	2204      	movs	r2, #4
2fff5f30:	2088      	movs	r0, #136	; 0x88
2fff5f32:	f002 fdb8 	bl	2fff8aa6 <stm32mp1_pm_save_clock_cfg>
2fff5f36:	490b      	ldr	r1, [pc, #44]	; (2fff5f64 <save_clock_pm_context+0x44>)
2fff5f38:	2258      	movs	r2, #88	; 0x58
2fff5f3a:	208c      	movs	r0, #140	; 0x8c
2fff5f3c:	f002 fdb3 	bl	2fff8aa6 <stm32mp1_pm_save_clock_cfg>
2fff5f40:	4909      	ldr	r1, [pc, #36]	; (2fff5f68 <save_clock_pm_context+0x48>)
2fff5f42:	2238      	movs	r2, #56	; 0x38
2fff5f44:	20e4      	movs	r0, #228	; 0xe4
2fff5f46:	f002 fdae 	bl	2fff8aa6 <stm32mp1_pm_save_clock_cfg>
2fff5f4a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff5f4e:	4907      	ldr	r1, [pc, #28]	; (2fff5f6c <save_clock_pm_context+0x4c>)
2fff5f50:	22b8      	movs	r2, #184	; 0xb8
2fff5f52:	f44f 708e 	mov.w	r0, #284	; 0x11c
2fff5f56:	f002 bda6 	b.w	2fff8aa6 <stm32mp1_pm_save_clock_cfg>
2fff5f5a:	bf00      	nop
2fff5f5c:	2fffd488 	.word	0x2fffd488
2fff5f60:	2fffd510 	.word	0x2fffd510
2fff5f64:	2fffd430 	.word	0x2fffd430
2fff5f68:	2fffd3f8 	.word	0x2fffd3f8
2fff5f6c:	2fffe990 	.word	0x2fffe990

2fff5f70 <restore_clock_pm_context>:
2fff5f70:	b508      	push	{r3, lr}
2fff5f72:	2288      	movs	r2, #136	; 0x88
2fff5f74:	490d      	ldr	r1, [pc, #52]	; (2fff5fac <restore_clock_pm_context+0x3c>)
2fff5f76:	2000      	movs	r0, #0
2fff5f78:	f002 fdb1 	bl	2fff8ade <stm32mp1_pm_restore_clock_cfg>
2fff5f7c:	490c      	ldr	r1, [pc, #48]	; (2fff5fb0 <restore_clock_pm_context+0x40>)
2fff5f7e:	2204      	movs	r2, #4
2fff5f80:	2088      	movs	r0, #136	; 0x88
2fff5f82:	f002 fdac 	bl	2fff8ade <stm32mp1_pm_restore_clock_cfg>
2fff5f86:	490b      	ldr	r1, [pc, #44]	; (2fff5fb4 <restore_clock_pm_context+0x44>)
2fff5f88:	2258      	movs	r2, #88	; 0x58
2fff5f8a:	208c      	movs	r0, #140	; 0x8c
2fff5f8c:	f002 fda7 	bl	2fff8ade <stm32mp1_pm_restore_clock_cfg>
2fff5f90:	4909      	ldr	r1, [pc, #36]	; (2fff5fb8 <restore_clock_pm_context+0x48>)
2fff5f92:	2238      	movs	r2, #56	; 0x38
2fff5f94:	20e4      	movs	r0, #228	; 0xe4
2fff5f96:	f002 fda2 	bl	2fff8ade <stm32mp1_pm_restore_clock_cfg>
2fff5f9a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff5f9e:	4907      	ldr	r1, [pc, #28]	; (2fff5fbc <restore_clock_pm_context+0x4c>)
2fff5fa0:	22b8      	movs	r2, #184	; 0xb8
2fff5fa2:	f44f 708e 	mov.w	r0, #284	; 0x11c
2fff5fa6:	f002 bd9a 	b.w	2fff8ade <stm32mp1_pm_restore_clock_cfg>
2fff5faa:	bf00      	nop
2fff5fac:	2fffd488 	.word	0x2fffd488
2fff5fb0:	2fffd510 	.word	0x2fffd510
2fff5fb4:	2fffd430 	.word	0x2fffd430
2fff5fb8:	2fffd3f8 	.word	0x2fffd3f8
2fff5fbc:	2fffe990 	.word	0x2fffe990

2fff5fc0 <stm32mp1_clock_suspend>:
2fff5fc0:	b538      	push	{r3, r4, r5, lr}
2fff5fc2:	f7fd f871 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5fc6:	4b20      	ldr	r3, [pc, #128]	; (2fff6048 <stm32mp1_clock_suspend+0x88>)
2fff5fc8:	2200      	movs	r2, #0
2fff5fca:	6819      	ldr	r1, [r3, #0]
2fff5fcc:	3201      	adds	r2, #1
2fff5fce:	2a07      	cmp	r2, #7
2fff5fd0:	f103 0308 	add.w	r3, r3, #8
2fff5fd4:	5841      	ldr	r1, [r0, r1]
2fff5fd6:	f843 1c04 	str.w	r1, [r3, #-4]
2fff5fda:	d1f6      	bne.n	2fff5fca <stm32mp1_clock_suspend+0xa>
2fff5fdc:	f7fd f864 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5fe0:	4b1a      	ldr	r3, [pc, #104]	; (2fff604c <stm32mp1_clock_suspend+0x8c>)
2fff5fe2:	2200      	movs	r2, #0
2fff5fe4:	6819      	ldr	r1, [r3, #0]
2fff5fe6:	3201      	adds	r2, #1
2fff5fe8:	2a0b      	cmp	r2, #11
2fff5fea:	f103 0308 	add.w	r3, r3, #8
2fff5fee:	5841      	ldr	r1, [r0, r1]
2fff5ff0:	f843 1c04 	str.w	r1, [r3, #-4]
2fff5ff4:	d1f6      	bne.n	2fff5fe4 <stm32mp1_clock_suspend+0x24>
2fff5ff6:	2400      	movs	r4, #0
2fff5ff8:	f7fd f856 	bl	2fff30a8 <stm32mp_rcc_base>
2fff5ffc:	4914      	ldr	r1, [pc, #80]	; (2fff6050 <stm32mp1_clock_suspend+0x90>)
2fff5ffe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff6002:	880a      	ldrh	r2, [r1, #0]
2fff6004:	3401      	adds	r4, #1
2fff6006:	2c22      	cmp	r4, #34	; 0x22
2fff6008:	f101 0104 	add.w	r1, r1, #4
2fff600c:	5815      	ldr	r5, [r2, r0]
2fff600e:	f811 2c01 	ldrb.w	r2, [r1, #-1]
2fff6012:	f1c2 0220 	rsb	r2, r2, #32
2fff6016:	fa23 f202 	lsr.w	r2, r3, r2
2fff601a:	ea02 0205 	and.w	r2, r2, r5
2fff601e:	f801 2c02 	strb.w	r2, [r1, #-2]
2fff6022:	d1ee      	bne.n	2fff6002 <stm32mp1_clock_suspend+0x42>
2fff6024:	4a0b      	ldr	r2, [pc, #44]	; (2fff6054 <stm32mp1_clock_suspend+0x94>)
2fff6026:	8811      	ldrh	r1, [r2, #0]
2fff6028:	5808      	ldr	r0, [r1, r0]
2fff602a:	78d1      	ldrb	r1, [r2, #3]
2fff602c:	f1c1 011c 	rsb	r1, r1, #28
2fff6030:	40cb      	lsrs	r3, r1
2fff6032:	4003      	ands	r3, r0
2fff6034:	f023 030f 	bic.w	r3, r3, #15
2fff6038:	7093      	strb	r3, [r2, #2]
2fff603a:	f7fd f835 	bl	2fff30a8 <stm32mp_rcc_base>
2fff603e:	2300      	movs	r3, #0
2fff6040:	f8c0 3408 	str.w	r3, [r0, #1032]	; 0x408
2fff6044:	bd38      	pop	{r3, r4, r5, pc}
2fff6046:	bf00      	nop
2fff6048:	2fffd3f8 	.word	0x2fffd3f8
2fff604c:	2fffd430 	.word	0x2fffd430
2fff6050:	2fffd488 	.word	0x2fffd488
2fff6054:	2fffd510 	.word	0x2fffd510

2fff6058 <stm32mp1_clock_resume>:
2fff6058:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff605a:	f7fd f825 	bl	2fff30a8 <stm32mp_rcc_base>
2fff605e:	492d      	ldr	r1, [pc, #180]	; (2fff6114 <stm32mp1_clock_resume+0xbc>)
2fff6060:	2400      	movs	r4, #0
2fff6062:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
2fff6066:	880e      	ldrh	r6, [r1, #0]
2fff6068:	3401      	adds	r4, #1
2fff606a:	78ca      	ldrb	r2, [r1, #3]
2fff606c:	2c22      	cmp	r4, #34	; 0x22
2fff606e:	5837      	ldr	r7, [r6, r0]
2fff6070:	f101 0104 	add.w	r1, r1, #4
2fff6074:	f811 5c02 	ldrb.w	r5, [r1, #-2]
2fff6078:	f1c2 0220 	rsb	r2, r2, #32
2fff607c:	ea85 0507 	eor.w	r5, r5, r7
2fff6080:	fa23 f202 	lsr.w	r2, r3, r2
2fff6084:	ea02 0205 	and.w	r2, r2, r5
2fff6088:	ea82 0207 	eor.w	r2, r2, r7
2fff608c:	5032      	str	r2, [r6, r0]
2fff608e:	d1ea      	bne.n	2fff6066 <stm32mp1_clock_resume+0xe>
2fff6090:	4a21      	ldr	r2, [pc, #132]	; (2fff6118 <stm32mp1_clock_resume+0xc0>)
2fff6092:	8814      	ldrh	r4, [r2, #0]
2fff6094:	78d1      	ldrb	r1, [r2, #3]
2fff6096:	5825      	ldr	r5, [r4, r0]
2fff6098:	7892      	ldrb	r2, [r2, #2]
2fff609a:	f1c1 011c 	rsb	r1, r1, #28
2fff609e:	406a      	eors	r2, r5
2fff60a0:	40cb      	lsrs	r3, r1
2fff60a2:	4013      	ands	r3, r2
2fff60a4:	f023 030f 	bic.w	r3, r3, #15
2fff60a8:	406b      	eors	r3, r5
2fff60aa:	5023      	str	r3, [r4, r0]
2fff60ac:	f7fc fffc 	bl	2fff30a8 <stm32mp_rcc_base>
2fff60b0:	4b1a      	ldr	r3, [pc, #104]	; (2fff611c <stm32mp1_clock_resume+0xc4>)
2fff60b2:	2200      	movs	r2, #0
2fff60b4:	1d05      	adds	r5, r0, #4
2fff60b6:	e9d3 1400 	ldrd	r1, r4, [r3]
2fff60ba:	3201      	adds	r2, #1
2fff60bc:	5044      	str	r4, [r0, r1]
2fff60be:	2a0b      	cmp	r2, #11
2fff60c0:	6859      	ldr	r1, [r3, #4]
2fff60c2:	f853 4b08 	ldr.w	r4, [r3], #8
2fff60c6:	ea6f 0101 	mvn.w	r1, r1
2fff60ca:	5129      	str	r1, [r5, r4]
2fff60cc:	d1f3      	bne.n	2fff60b6 <stm32mp1_clock_resume+0x5e>
2fff60ce:	f7fc ffeb 	bl	2fff30a8 <stm32mp_rcc_base>
2fff60d2:	4a13      	ldr	r2, [pc, #76]	; (2fff6120 <stm32mp1_clock_resume+0xc8>)
2fff60d4:	2300      	movs	r3, #0
2fff60d6:	6854      	ldr	r4, [r2, #4]
2fff60d8:	3301      	adds	r3, #1
2fff60da:	f852 1b08 	ldr.w	r1, [r2], #8
2fff60de:	2b07      	cmp	r3, #7
2fff60e0:	5044      	str	r4, [r0, r1]
2fff60e2:	d1f8      	bne.n	2fff60d6 <stm32mp1_clock_resume+0x7e>
2fff60e4:	4c0f      	ldr	r4, [pc, #60]	; (2fff6124 <stm32mp1_clock_resume+0xcc>)
2fff60e6:	2500      	movs	r5, #0
2fff60e8:	4e0f      	ldr	r6, [pc, #60]	; (2fff6128 <stm32mp1_clock_resume+0xd0>)
2fff60ea:	7963      	ldrb	r3, [r4, #5]
2fff60ec:	b12b      	cbz	r3, 2fff60fa <stm32mp1_clock_resume+0xa2>
2fff60ee:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
2fff60f2:	4620      	mov	r0, r4
2fff60f4:	b15b      	cbz	r3, 2fff610e <stm32mp1_clock_resume+0xb6>
2fff60f6:	f7ff f917 	bl	2fff5328 <__clk_enable>
2fff60fa:	3501      	adds	r5, #1
2fff60fc:	3408      	adds	r4, #8
2fff60fe:	2d2e      	cmp	r5, #46	; 0x2e
2fff6100:	d1f3      	bne.n	2fff60ea <stm32mp1_clock_resume+0x92>
2fff6102:	f7fc ffd1 	bl	2fff30a8 <stm32mp_rcc_base>
2fff6106:	f240 2322 	movw	r3, #546	; 0x222
2fff610a:	6103      	str	r3, [r0, #16]
2fff610c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff610e:	f7ff f91c 	bl	2fff534a <__clk_disable>
2fff6112:	e7f2      	b.n	2fff60fa <stm32mp1_clock_resume+0xa2>
2fff6114:	2fffd488 	.word	0x2fffd488
2fff6118:	2fffd510 	.word	0x2fffd510
2fff611c:	2fffd430 	.word	0x2fffd430
2fff6120:	2fffd3f8 	.word	0x2fffd3f8
2fff6124:	2fffbe16 	.word	0x2fffbe16
2fff6128:	2fffe990 	.word	0x2fffe990

2fff612c <stm32mp1_clock_stopmode_save>:
2fff612c:	b508      	push	{r3, lr}
2fff612e:	f7fc ffbb 	bl	2fff30a8 <stm32mp_rcc_base>
2fff6132:	f8d0 2880 	ldr.w	r2, [r0, #2176]	; 0x880
2fff6136:	4b0c      	ldr	r3, [pc, #48]	; (2fff6168 <stm32mp1_clock_stopmode_save+0x3c>)
2fff6138:	601a      	str	r2, [r3, #0]
2fff613a:	f8d0 2894 	ldr.w	r2, [r0, #2196]	; 0x894
2fff613e:	4b0b      	ldr	r3, [pc, #44]	; (2fff616c <stm32mp1_clock_stopmode_save+0x40>)
2fff6140:	601a      	str	r2, [r3, #0]
2fff6142:	6c82      	ldr	r2, [r0, #72]	; 0x48
2fff6144:	4b0a      	ldr	r3, [pc, #40]	; (2fff6170 <stm32mp1_clock_stopmode_save+0x44>)
2fff6146:	601a      	str	r2, [r3, #0]
2fff6148:	f8d0 3830 	ldr.w	r3, [r0, #2096]	; 0x830
2fff614c:	4a09      	ldr	r2, [pc, #36]	; (2fff6174 <stm32mp1_clock_stopmode_save+0x48>)
2fff614e:	f003 030f 	and.w	r3, r3, #15
2fff6152:	6013      	str	r3, [r2, #0]
2fff6154:	f7fc ffa8 	bl	2fff30a8 <stm32mp_rcc_base>
2fff6158:	68c2      	ldr	r2, [r0, #12]
2fff615a:	f240 2322 	movw	r3, #546	; 0x222
2fff615e:	ea03 0342 	and.w	r3, r3, r2, lsl #1
2fff6162:	60c3      	str	r3, [r0, #12]
2fff6164:	bd08      	pop	{r3, pc}
2fff6166:	bf00      	nop
2fff6168:	2fffea9c 	.word	0x2fffea9c
2fff616c:	2fffeaa0 	.word	0x2fffeaa0
2fff6170:	2fffea4c 	.word	0x2fffea4c
2fff6174:	2fffea48 	.word	0x2fffea48

2fff6178 <stm32mp1_clock_stopmode_resume>:
2fff6178:	b570      	push	{r4, r5, r6, lr}
2fff617a:	f7fc ff95 	bl	2fff30a8 <stm32mp_rcc_base>
2fff617e:	4e20      	ldr	r6, [pc, #128]	; (2fff6200 <stm32mp1_clock_stopmode_resume+0x88>)
2fff6180:	4605      	mov	r5, r0
2fff6182:	6833      	ldr	r3, [r6, #0]
2fff6184:	07dc      	lsls	r4, r3, #31
2fff6186:	d508      	bpl.n	2fff619a <stm32mp1_clock_stopmode_resume+0x22>
2fff6188:	f7fc ff8e 	bl	2fff30a8 <stm32mp_rcc_base>
2fff618c:	f8d0 3894 	ldr.w	r3, [r0, #2196]	; 0x894
2fff6190:	07d8      	lsls	r0, r3, #31
2fff6192:	d402      	bmi.n	2fff619a <stm32mp1_clock_stopmode_resume+0x22>
2fff6194:	2003      	movs	r0, #3
2fff6196:	f7ff f85f 	bl	2fff5258 <stm32mp1_pll_start>
2fff619a:	4c1a      	ldr	r4, [pc, #104]	; (2fff6204 <stm32mp1_clock_stopmode_resume+0x8c>)
2fff619c:	6822      	ldr	r2, [r4, #0]
2fff619e:	07d1      	lsls	r1, r2, #31
2fff61a0:	d413      	bmi.n	2fff61ca <stm32mp1_clock_stopmode_resume+0x52>
2fff61a2:	6831      	ldr	r1, [r6, #0]
2fff61a4:	07ca      	lsls	r2, r1, #31
2fff61a6:	d423      	bmi.n	2fff61f0 <stm32mp1_clock_stopmode_resume+0x78>
2fff61a8:	4b17      	ldr	r3, [pc, #92]	; (2fff6208 <stm32mp1_clock_stopmode_resume+0x90>)
2fff61aa:	f505 6103 	add.w	r1, r5, #2096	; 0x830
2fff61ae:	681b      	ldr	r3, [r3, #0]
2fff61b0:	64ab      	str	r3, [r5, #72]	; 0x48
2fff61b2:	4b16      	ldr	r3, [pc, #88]	; (2fff620c <stm32mp1_clock_stopmode_resume+0x94>)
2fff61b4:	6818      	ldr	r0, [r3, #0]
2fff61b6:	f7ff f9ab 	bl	2fff5510 <stm32mp1_set_clkdiv>
2fff61ba:	4604      	mov	r4, r0
2fff61bc:	b9b0      	cbnz	r0, 2fff61ec <stm32mp1_clock_stopmode_resume+0x74>
2fff61be:	f7fc ff73 	bl	2fff30a8 <stm32mp_rcc_base>
2fff61c2:	f240 2322 	movw	r3, #546	; 0x222
2fff61c6:	6103      	str	r3, [r0, #16]
2fff61c8:	e010      	b.n	2fff61ec <stm32mp1_clock_stopmode_resume+0x74>
2fff61ca:	f7fc ff6d 	bl	2fff30a8 <stm32mp_rcc_base>
2fff61ce:	f8d0 3880 	ldr.w	r3, [r0, #2176]	; 0x880
2fff61d2:	07db      	lsls	r3, r3, #31
2fff61d4:	d402      	bmi.n	2fff61dc <stm32mp1_clock_stopmode_resume+0x64>
2fff61d6:	2002      	movs	r0, #2
2fff61d8:	f7ff f83e 	bl	2fff5258 <stm32mp1_pll_start>
2fff61dc:	6821      	ldr	r1, [r4, #0]
2fff61de:	2002      	movs	r0, #2
2fff61e0:	0909      	lsrs	r1, r1, #4
2fff61e2:	f7ff fa0b 	bl	2fff55fc <stm32mp1_pll_output>
2fff61e6:	4604      	mov	r4, r0
2fff61e8:	2800      	cmp	r0, #0
2fff61ea:	d0da      	beq.n	2fff61a2 <stm32mp1_clock_stopmode_resume+0x2a>
2fff61ec:	4620      	mov	r0, r4
2fff61ee:	bd70      	pop	{r4, r5, r6, pc}
2fff61f0:	0909      	lsrs	r1, r1, #4
2fff61f2:	2003      	movs	r0, #3
2fff61f4:	f7ff fa02 	bl	2fff55fc <stm32mp1_pll_output>
2fff61f8:	4604      	mov	r4, r0
2fff61fa:	2800      	cmp	r0, #0
2fff61fc:	d0d4      	beq.n	2fff61a8 <stm32mp1_clock_stopmode_resume+0x30>
2fff61fe:	e7f5      	b.n	2fff61ec <stm32mp1_clock_stopmode_resume+0x74>
2fff6200:	2fffeaa0 	.word	0x2fffeaa0
2fff6204:	2fffea9c 	.word	0x2fffea9c
2fff6208:	2fffea4c 	.word	0x2fffea4c
2fff620c:	2fffea48 	.word	0x2fffea48

2fff6210 <stm32mp1_dump_clocks_state>:
2fff6210:	4770      	bx	lr
	...

2fff6214 <stm32mp1_clk_probe>:
2fff6214:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff6216:	2400      	movs	r4, #0
2fff6218:	4d29      	ldr	r5, [pc, #164]	; (2fff62c0 <stm32mp1_clk_probe+0xac>)
2fff621a:	4e2a      	ldr	r6, [pc, #168]	; (2fff62c4 <stm32mp1_clk_probe+0xb0>)
2fff621c:	f855 0b04 	ldr.w	r0, [r5], #4
2fff6220:	a901      	add	r1, sp, #4
2fff6222:	f7fe fd89 	bl	2fff4d38 <fdt_osc_read_freq>
2fff6226:	b910      	cbnz	r0, 2fff622e <stm32mp1_clk_probe+0x1a>
2fff6228:	9b01      	ldr	r3, [sp, #4]
2fff622a:	f846 3024 	str.w	r3, [r6, r4, lsl #2]
2fff622e:	3401      	adds	r4, #1
2fff6230:	2c06      	cmp	r4, #6
2fff6232:	d1f3      	bne.n	2fff621c <stm32mp1_clk_probe+0x8>
2fff6234:	4c24      	ldr	r4, [pc, #144]	; (2fff62c8 <stm32mp1_clk_probe+0xb4>)
2fff6236:	2500      	movs	r5, #0
2fff6238:	7963      	ldrb	r3, [r4, #5]
2fff623a:	b113      	cbz	r3, 2fff6242 <stm32mp1_clk_probe+0x2e>
2fff623c:	78e0      	ldrb	r0, [r4, #3]
2fff623e:	f7ff fdd5 	bl	2fff5dec <stm32mp1_register_clock_parents_secure>
2fff6242:	3501      	adds	r5, #1
2fff6244:	3408      	adds	r4, #8
2fff6246:	2d2e      	cmp	r5, #46	; 0x2e
2fff6248:	d1f6      	bne.n	2fff6238 <stm32mp1_clk_probe+0x24>
2fff624a:	20e4      	movs	r0, #228	; 0xe4
2fff624c:	f7ff fb26 	bl	2fff589c <stm32mp_clk_enable>
2fff6250:	20dc      	movs	r0, #220	; 0xdc
2fff6252:	f7ff fb23 	bl	2fff589c <stm32mp_clk_enable>
2fff6256:	20dd      	movs	r0, #221	; 0xdd
2fff6258:	f7ff fb20 	bl	2fff589c <stm32mp_clk_enable>
2fff625c:	20de      	movs	r0, #222	; 0xde
2fff625e:	f7ff fb1d 	bl	2fff589c <stm32mp_clk_enable>
2fff6262:	20df      	movs	r0, #223	; 0xdf
2fff6264:	f7ff fb1a 	bl	2fff589c <stm32mp_clk_enable>
2fff6268:	20e2      	movs	r0, #226	; 0xe2
2fff626a:	f7ff fb17 	bl	2fff589c <stm32mp_clk_enable>
2fff626e:	20e0      	movs	r0, #224	; 0xe0
2fff6270:	f7ff fb14 	bl	2fff589c <stm32mp_clk_enable>
2fff6274:	20e1      	movs	r0, #225	; 0xe1
2fff6276:	f7ff fb11 	bl	2fff589c <stm32mp_clk_enable>
2fff627a:	20e5      	movs	r0, #229	; 0xe5
2fff627c:	f7ff fb0e 	bl	2fff589c <stm32mp_clk_enable>
2fff6280:	20e6      	movs	r0, #230	; 0xe6
2fff6282:	f7ff fb0b 	bl	2fff589c <stm32mp_clk_enable>
2fff6286:	2043      	movs	r0, #67	; 0x43
2fff6288:	f7ff fb08 	bl	2fff589c <stm32mp_clk_enable>
2fff628c:	2042      	movs	r0, #66	; 0x42
2fff628e:	f7ff fb05 	bl	2fff589c <stm32mp_clk_enable>
2fff6292:	2071      	movs	r0, #113	; 0x71
2fff6294:	f7ff fb02 	bl	2fff589c <stm32mp_clk_enable>
2fff6298:	2080      	movs	r0, #128	; 0x80
2fff629a:	f7ff faff 	bl	2fff589c <stm32mp_clk_enable>
2fff629e:	2041      	movs	r0, #65	; 0x41
2fff62a0:	f7ff fafc 	bl	2fff589c <stm32mp_clk_enable>
2fff62a4:	20c2      	movs	r0, #194	; 0xc2
2fff62a6:	f7ff fb25 	bl	2fff58f4 <stm32mp_clk_get_rate>
2fff62aa:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
2fff62ae:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff62b2:	fbb0 f0f3 	udiv	r0, r0, r3
2fff62b6:	4b05      	ldr	r3, [pc, #20]	; (2fff62cc <stm32mp1_clk_probe+0xb8>)
2fff62b8:	6018      	str	r0, [r3, #0]
2fff62ba:	2000      	movs	r0, #0
2fff62bc:	b002      	add	sp, #8
2fff62be:	bd70      	pop	{r4, r5, r6, pc}
2fff62c0:	2fffd514 	.word	0x2fffd514
2fff62c4:	2fffeaac 	.word	0x2fffeaac
2fff62c8:	2fffbe16 	.word	0x2fffbe16
2fff62cc:	2fffe98c 	.word	0x2fffe98c

2fff62d0 <do_sw_handshake>:
2fff62d0:	b508      	push	{r3, lr}
2fff62d2:	f7fc fedd 	bl	2fff3090 <stm32mp_ddrctrl_base>
2fff62d6:	f8d0 3320 	ldr.w	r3, [r0, #800]	; 0x320
2fff62da:	f023 0301 	bic.w	r3, r3, #1
2fff62de:	f8c0 3320 	str.w	r3, [r0, #800]	; 0x320
2fff62e2:	bd08      	pop	{r3, pc}

2fff62e4 <do_sw_ack>:
2fff62e4:	e92d 43d0 	stmdb	sp!, {r4, r6, r7, r8, r9, lr}
2fff62e8:	f7fc fed2 	bl	2fff3090 <stm32mp_ddrctrl_base>
2fff62ec:	f8d0 3320 	ldr.w	r3, [r0, #800]	; 0x320
2fff62f0:	4604      	mov	r4, r0
2fff62f2:	f043 0301 	orr.w	r3, r3, #1
2fff62f6:	f8c0 3320 	str.w	r3, [r0, #800]	; 0x320
2fff62fa:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff62fe:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff6302:	4a0e      	ldr	r2, [pc, #56]	; (2fff633c <do_sw_ack+0x58>)
2fff6304:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff6308:	2300      	movs	r3, #0
2fff630a:	fba0 0101 	umull	r0, r1, r0, r1
2fff630e:	f003 e868 	blx	2fff93e0 <__aeabi_uldivmod>
2fff6312:	eb10 0806 	adds.w	r8, r0, r6
2fff6316:	eb41 0907 	adc.w	r9, r1, r7
2fff631a:	f8d4 3324 	ldr.w	r3, [r4, #804]	; 0x324
2fff631e:	07db      	lsls	r3, r3, #31
2fff6320:	d501      	bpl.n	2fff6326 <do_sw_ack+0x42>
2fff6322:	e8bd 83d0 	ldmia.w	sp!, {r4, r6, r7, r8, r9, pc}
2fff6326:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff632a:	4599      	cmp	r9, r3
2fff632c:	bf08      	it	eq
2fff632e:	4590      	cmpeq	r8, r2
2fff6330:	d2f3      	bcs.n	2fff631a <do_sw_ack+0x36>
2fff6332:	f7fc fd97 	bl	2fff2e64 <console_flush>
2fff6336:	f002 eeb6 	blx	2fff90a4 <do_panic>
2fff633a:	bf00      	nop
2fff633c:	000f4240 	.word	0x000f4240

2fff6340 <ddr_enable_clock>:
2fff6340:	b508      	push	{r3, lr}
2fff6342:	f7ff fa9f 	bl	2fff5884 <stm32mp1_clk_rcc_regs_lock>
2fff6346:	f7fc feaf 	bl	2fff30a8 <stm32mp_rcc_base>
2fff634a:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8
2fff634e:	f443 7315 	orr.w	r3, r3, #596	; 0x254
2fff6352:	f043 0301 	orr.w	r3, r3, #1
2fff6356:	f8c0 30d8 	str.w	r3, [r0, #216]	; 0xd8
2fff635a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff635e:	f7ff ba97 	b.w	2fff5890 <stm32mp1_clk_rcc_regs_unlock>
	...

2fff6364 <ddr_sw_self_refresh_exit>:
2fff6364:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff6368:	f7fc fe9e 	bl	2fff30a8 <stm32mp_rcc_base>
2fff636c:	4682      	mov	sl, r0
2fff636e:	f7fc fe97 	bl	2fff30a0 <stm32mp_pwr_base>
2fff6372:	4683      	mov	fp, r0
2fff6374:	f7fc fe8c 	bl	2fff3090 <stm32mp_ddrctrl_base>
2fff6378:	4605      	mov	r5, r0
2fff637a:	f7fc fe8d 	bl	2fff3098 <stm32mp_ddrphyc_base>
2fff637e:	4604      	mov	r4, r0
2fff6380:	f7ff ffde 	bl	2fff6340 <ddr_enable_clock>
2fff6384:	f7ff ffa4 	bl	2fff62d0 <do_sw_handshake>
2fff6388:	f8d5 31b0 	ldr.w	r3, [r5, #432]	; 0x1b0
2fff638c:	f023 0301 	bic.w	r3, r3, #1
2fff6390:	f8c5 31b0 	str.w	r3, [r5, #432]	; 0x1b0
2fff6394:	f7ff ffa6 	bl	2fff62e4 <do_sw_ack>
2fff6398:	f7ff fa74 	bl	2fff5884 <stm32mp1_clk_rcc_regs_lock>
2fff639c:	f8da 30d8 	ldr.w	r3, [sl, #216]	; 0xd8
2fff63a0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
2fff63a4:	f8ca 30d8 	str.w	r3, [sl, #216]	; 0xd8
2fff63a8:	f7ff fa72 	bl	2fff5890 <stm32mp1_clk_rcc_regs_unlock>
2fff63ac:	6963      	ldr	r3, [r4, #20]
2fff63ae:	2032      	movs	r0, #50	; 0x32
2fff63b0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff63b4:	6163      	str	r3, [r4, #20]
2fff63b6:	f8d4 31cc 	ldr.w	r3, [r4, #460]	; 0x1cc
2fff63ba:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff63be:	f8c4 31cc 	str.w	r3, [r4, #460]	; 0x1cc
2fff63c2:	f8d4 320c 	ldr.w	r3, [r4, #524]	; 0x20c
2fff63c6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff63ca:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
2fff63ce:	f8d4 324c 	ldr.w	r3, [r4, #588]	; 0x24c
2fff63d2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff63d6:	f8c4 324c 	str.w	r3, [r4, #588]	; 0x24c
2fff63da:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
2fff63de:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff63e2:	f8c4 328c 	str.w	r3, [r4, #652]	; 0x28c
2fff63e6:	f7fe f833 	bl	2fff4450 <udelay>
2fff63ea:	f7ff fa4b 	bl	2fff5884 <stm32mp1_clk_rcc_regs_lock>
2fff63ee:	f8da 30d8 	ldr.w	r3, [sl, #216]	; 0xd8
2fff63f2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
2fff63f6:	f8ca 30d8 	str.w	r3, [sl, #216]	; 0xd8
2fff63fa:	f7ff fa49 	bl	2fff5890 <stm32mp1_clk_rcc_regs_unlock>
2fff63fe:	6963      	ldr	r3, [r4, #20]
2fff6400:	200a      	movs	r0, #10
2fff6402:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
2fff6406:	6163      	str	r3, [r4, #20]
2fff6408:	f7fe f822 	bl	2fff4450 <udelay>
2fff640c:	6963      	ldr	r3, [r4, #20]
2fff640e:	2001      	movs	r0, #1
2fff6410:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
2fff6414:	6163      	str	r3, [r4, #20]
2fff6416:	2317      	movs	r3, #23
2fff6418:	6063      	str	r3, [r4, #4]
2fff641a:	f7fe f819 	bl	2fff4450 <udelay>
2fff641e:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff6422:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff6426:	4a4b      	ldr	r2, [pc, #300]	; (2fff6554 <ddr_sw_self_refresh_exit+0x1f0>)
2fff6428:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff642c:	2300      	movs	r3, #0
2fff642e:	fba0 0101 	umull	r0, r1, r0, r1
2fff6432:	f002 efd6 	blx	2fff93e0 <__aeabi_uldivmod>
2fff6436:	eb10 0806 	adds.w	r8, r0, r6
2fff643a:	eb41 0907 	adc.w	r9, r1, r7
2fff643e:	68e3      	ldr	r3, [r4, #12]
2fff6440:	07db      	lsls	r3, r3, #31
2fff6442:	d573      	bpl.n	2fff652c <ddr_sw_self_refresh_exit+0x1c8>
2fff6444:	f7ff ff44 	bl	2fff62d0 <do_sw_handshake>
2fff6448:	f8d5 31b0 	ldr.w	r3, [r5, #432]	; 0x1b0
2fff644c:	f043 0301 	orr.w	r3, r3, #1
2fff6450:	f8c5 31b0 	str.w	r3, [r5, #432]	; 0x1b0
2fff6454:	f7ff ff46 	bl	2fff62e4 <do_sw_ack>
2fff6458:	f7fc fe32 	bl	2fff30c0 <stm32mp_pwr_regs_lock>
2fff645c:	f8db 300c 	ldr.w	r3, [fp, #12]
2fff6460:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
2fff6464:	f8cb 300c 	str.w	r3, [fp, #12]
2fff6468:	f7fc fe36 	bl	2fff30d8 <stm32mp_pwr_regs_unlock>
2fff646c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
2fff6470:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
2fff6474:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
2fff6478:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff647a:	f023 0308 	bic.w	r3, r3, #8
2fff647e:	6263      	str	r3, [r4, #36]	; 0x24
2fff6480:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff6482:	f043 0302 	orr.w	r3, r3, #2
2fff6486:	6263      	str	r3, [r4, #36]	; 0x24
2fff6488:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff648a:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
2fff648e:	6263      	str	r3, [r4, #36]	; 0x24
2fff6490:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff6492:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
2fff6496:	6263      	str	r3, [r4, #36]	; 0x24
2fff6498:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff649a:	f023 0304 	bic.w	r3, r3, #4
2fff649e:	62a3      	str	r3, [r4, #40]	; 0x28
2fff64a0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff64a2:	f023 0308 	bic.w	r3, r3, #8
2fff64a6:	62a3      	str	r3, [r4, #40]	; 0x28
2fff64a8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff64aa:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
2fff64ae:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff64b0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff64b2:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
2fff64b6:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff64b8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff64ba:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
2fff64be:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff64c0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff64c2:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
2fff64c6:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff64c8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff64ca:	f023 0320 	bic.w	r3, r3, #32
2fff64ce:	632b      	str	r3, [r5, #48]	; 0x30
2fff64d0:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff64d4:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff64d8:	4a1e      	ldr	r2, [pc, #120]	; (2fff6554 <ddr_sw_self_refresh_exit+0x1f0>)
2fff64da:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff64de:	2300      	movs	r3, #0
2fff64e0:	fba0 0101 	umull	r0, r1, r0, r1
2fff64e4:	f002 ef7c 	blx	2fff93e0 <__aeabi_uldivmod>
2fff64e8:	1983      	adds	r3, r0, r6
2fff64ea:	9300      	str	r3, [sp, #0]
2fff64ec:	eb41 0307 	adc.w	r3, r1, r7
2fff64f0:	9301      	str	r3, [sp, #4]
2fff64f2:	686b      	ldr	r3, [r5, #4]
2fff64f4:	f003 0307 	and.w	r3, r3, #7
2fff64f8:	2b01      	cmp	r3, #1
2fff64fa:	d122      	bne.n	2fff6542 <ddr_sw_self_refresh_exit+0x1de>
2fff64fc:	f8d5 3490 	ldr.w	r3, [r5, #1168]	; 0x490
2fff6500:	f043 0301 	orr.w	r3, r3, #1
2fff6504:	f8c5 3490 	str.w	r3, [r5, #1168]	; 0x490
2fff6508:	f8d5 3540 	ldr.w	r3, [r5, #1344]	; 0x540
2fff650c:	f043 0301 	orr.w	r3, r3, #1
2fff6510:	f8c5 3540 	str.w	r3, [r5, #1344]	; 0x540
2fff6514:	f7ff f9b6 	bl	2fff5884 <stm32mp1_clk_rcc_regs_lock>
2fff6518:	f8da 30d8 	ldr.w	r3, [sl, #216]	; 0xd8
2fff651c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff6520:	f8ca 30d8 	str.w	r3, [sl, #216]	; 0xd8
2fff6524:	f7ff f9b4 	bl	2fff5890 <stm32mp1_clk_rcc_regs_unlock>
2fff6528:	2000      	movs	r0, #0
2fff652a:	e007      	b.n	2fff653c <ddr_sw_self_refresh_exit+0x1d8>
2fff652c:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff6530:	4599      	cmp	r9, r3
2fff6532:	bf08      	it	eq
2fff6534:	4590      	cmpeq	r8, r2
2fff6536:	d282      	bcs.n	2fff643e <ddr_sw_self_refresh_exit+0xda>
2fff6538:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff653c:	b003      	add	sp, #12
2fff653e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff6542:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff6546:	e9dd 0100 	ldrd	r0, r1, [sp]
2fff654a:	4299      	cmp	r1, r3
2fff654c:	bf08      	it	eq
2fff654e:	4290      	cmpeq	r0, r2
2fff6550:	d2cf      	bcs.n	2fff64f2 <ddr_sw_self_refresh_exit+0x18e>
2fff6552:	e7f1      	b.n	2fff6538 <ddr_sw_self_refresh_exit+0x1d4>
2fff6554:	000f4240 	.word	0x000f4240

2fff6558 <ddr_standby_sr_entry>:
2fff6558:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
2fff655c:	4604      	mov	r4, r0
2fff655e:	f7fc fd9f 	bl	2fff30a0 <stm32mp_pwr_base>
2fff6562:	4607      	mov	r7, r0
2fff6564:	f7fc fd98 	bl	2fff3098 <stm32mp_ddrphyc_base>
2fff6568:	b124      	cbz	r4, 2fff6574 <ddr_standby_sr_entry+0x1c>
2fff656a:	f8d0 3180 	ldr.w	r3, [r0, #384]	; 0x180
2fff656e:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
2fff6572:	6023      	str	r3, [r4, #0]
2fff6574:	f7fc fd98 	bl	2fff30a8 <stm32mp_rcc_base>
2fff6578:	4606      	mov	r6, r0
2fff657a:	f7fc fd91 	bl	2fff30a0 <stm32mp_pwr_base>
2fff657e:	4682      	mov	sl, r0
2fff6580:	f7fc fd86 	bl	2fff3090 <stm32mp_ddrctrl_base>
2fff6584:	4605      	mov	r5, r0
2fff6586:	f7fc fd87 	bl	2fff3098 <stm32mp_ddrphyc_base>
2fff658a:	4604      	mov	r4, r0
2fff658c:	f7ff f97a 	bl	2fff5884 <stm32mp1_clk_rcc_regs_lock>
2fff6590:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff6594:	f423 7380 	bic.w	r3, r3, #256	; 0x100
2fff6598:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff659c:	f7ff f978 	bl	2fff5890 <stm32mp1_clk_rcc_regs_unlock>
2fff65a0:	f8d5 3490 	ldr.w	r3, [r5, #1168]	; 0x490
2fff65a4:	f023 0301 	bic.w	r3, r3, #1
2fff65a8:	f8c5 3490 	str.w	r3, [r5, #1168]	; 0x490
2fff65ac:	f8d5 3540 	ldr.w	r3, [r5, #1344]	; 0x540
2fff65b0:	f023 0301 	bic.w	r3, r3, #1
2fff65b4:	f8c5 3540 	str.w	r3, [r5, #1344]	; 0x540
2fff65b8:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff65bc:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff65c0:	4a72      	ldr	r2, [pc, #456]	; (2fff678c <ddr_standby_sr_entry+0x234>)
2fff65c2:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff65c6:	2300      	movs	r3, #0
2fff65c8:	fba0 0101 	umull	r0, r1, r0, r1
2fff65cc:	f002 ef08 	blx	2fff93e0 <__aeabi_uldivmod>
2fff65d0:	eb10 0308 	adds.w	r3, r0, r8
2fff65d4:	9300      	str	r3, [sp, #0]
2fff65d6:	eb41 0309 	adc.w	r3, r1, r9
2fff65da:	9301      	str	r3, [sp, #4]
2fff65dc:	f8d5 33fc 	ldr.w	r3, [r5, #1020]	; 0x3fc
2fff65e0:	bb13      	cbnz	r3, 2fff6628 <ddr_standby_sr_entry+0xd0>
2fff65e2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff65e4:	f043 0320 	orr.w	r3, r3, #32
2fff65e8:	632b      	str	r3, [r5, #48]	; 0x30
2fff65ea:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff65ee:	ec59 8f0e 	mrrc	15, 0, r8, r9, cr14
2fff65f2:	4a66      	ldr	r2, [pc, #408]	; (2fff678c <ddr_standby_sr_entry+0x234>)
2fff65f4:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
2fff65f8:	2300      	movs	r3, #0
2fff65fa:	fba0 0101 	umull	r0, r1, r0, r1
2fff65fe:	f002 eef0 	blx	2fff93e0 <__aeabi_uldivmod>
2fff6602:	eb10 0308 	adds.w	r3, r0, r8
2fff6606:	9302      	str	r3, [sp, #8]
2fff6608:	eb41 0309 	adc.w	r3, r1, r9
2fff660c:	9303      	str	r3, [sp, #12]
2fff660e:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff6612:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
2fff6616:	4299      	cmp	r1, r3
2fff6618:	bf08      	it	eq
2fff661a:	4290      	cmpeq	r0, r2
2fff661c:	d21d      	bcs.n	2fff665a <ddr_standby_sr_entry+0x102>
2fff661e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff6620:	f023 0320 	bic.w	r3, r3, #32
2fff6624:	632b      	str	r3, [r5, #48]	; 0x30
2fff6626:	e007      	b.n	2fff6638 <ddr_standby_sr_entry+0xe0>
2fff6628:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff662c:	e9dd 0100 	ldrd	r0, r1, [sp]
2fff6630:	4299      	cmp	r1, r3
2fff6632:	bf08      	it	eq
2fff6634:	4290      	cmpeq	r0, r2
2fff6636:	d2d1      	bcs.n	2fff65dc <ddr_standby_sr_entry+0x84>
2fff6638:	f8d5 3490 	ldr.w	r3, [r5, #1168]	; 0x490
2fff663c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff6640:	f043 0301 	orr.w	r3, r3, #1
2fff6644:	f8c5 3490 	str.w	r3, [r5, #1168]	; 0x490
2fff6648:	f8d5 3540 	ldr.w	r3, [r5, #1344]	; 0x540
2fff664c:	f043 0301 	orr.w	r3, r3, #1
2fff6650:	f8c5 3540 	str.w	r3, [r5, #1344]	; 0x540
2fff6654:	b004      	add	sp, #16
2fff6656:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
2fff665a:	686b      	ldr	r3, [r5, #4]
2fff665c:	f003 0207 	and.w	r2, r3, #7
2fff6660:	2a03      	cmp	r2, #3
2fff6662:	d1d4      	bne.n	2fff660e <ddr_standby_sr_entry+0xb6>
2fff6664:	f003 0330 	and.w	r3, r3, #48	; 0x30
2fff6668:	2b20      	cmp	r3, #32
2fff666a:	d1d0      	bne.n	2fff660e <ddr_standby_sr_entry+0xb6>
2fff666c:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff666e:	200a      	movs	r0, #10
2fff6670:	f043 0308 	orr.w	r3, r3, #8
2fff6674:	6263      	str	r3, [r4, #36]	; 0x24
2fff6676:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff6678:	f043 0310 	orr.w	r3, r3, #16
2fff667c:	6263      	str	r3, [r4, #36]	; 0x24
2fff667e:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff6680:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
2fff6684:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff6688:	6263      	str	r3, [r4, #36]	; 0x24
2fff668a:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff668c:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
2fff6690:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
2fff6694:	6263      	str	r3, [r4, #36]	; 0x24
2fff6696:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff6698:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
2fff669c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
2fff66a0:	6263      	str	r3, [r4, #36]	; 0x24
2fff66a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff66a4:	f023 0302 	bic.w	r3, r3, #2
2fff66a8:	6263      	str	r3, [r4, #36]	; 0x24
2fff66aa:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff66ac:	f043 0304 	orr.w	r3, r3, #4
2fff66b0:	62a3      	str	r3, [r4, #40]	; 0x28
2fff66b2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
2fff66b4:	f043 0308 	orr.w	r3, r3, #8
2fff66b8:	62a3      	str	r3, [r4, #40]	; 0x28
2fff66ba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff66bc:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
2fff66c0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2fff66c4:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff66c6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff66c8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
2fff66cc:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff66ce:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff66d0:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
2fff66d4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff66d8:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff66da:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
2fff66de:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff66e2:	f8c4 3180 	str.w	r3, [r4, #384]	; 0x180
2fff66e6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
2fff66e8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
2fff66ec:	62e3      	str	r3, [r4, #44]	; 0x2c
2fff66ee:	f7fd feaf 	bl	2fff4450 <udelay>
2fff66f2:	f7fc fce5 	bl	2fff30c0 <stm32mp_pwr_regs_lock>
2fff66f6:	f8da 300c 	ldr.w	r3, [sl, #12]
2fff66fa:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
2fff66fe:	f8ca 300c 	str.w	r3, [sl, #12]
2fff6702:	f7fc fce9 	bl	2fff30d8 <stm32mp_pwr_regs_unlock>
2fff6706:	f7ff f8bd 	bl	2fff5884 <stm32mp1_clk_rcc_regs_lock>
2fff670a:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff670e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
2fff6712:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff6716:	f7ff f8bb 	bl	2fff5890 <stm32mp1_clk_rcc_regs_unlock>
2fff671a:	6963      	ldr	r3, [r4, #20]
2fff671c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff6720:	6163      	str	r3, [r4, #20]
2fff6722:	f8d4 31cc 	ldr.w	r3, [r4, #460]	; 0x1cc
2fff6726:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff672a:	f8c4 31cc 	str.w	r3, [r4, #460]	; 0x1cc
2fff672e:	f8d4 320c 	ldr.w	r3, [r4, #524]	; 0x20c
2fff6732:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff6736:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
2fff673a:	f8d4 324c 	ldr.w	r3, [r4, #588]	; 0x24c
2fff673e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff6742:	f8c4 324c 	str.w	r3, [r4, #588]	; 0x24c
2fff6746:	f8d4 328c 	ldr.w	r3, [r4, #652]	; 0x28c
2fff674a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
2fff674e:	f8c4 328c 	str.w	r3, [r4, #652]	; 0x28c
2fff6752:	f7ff f897 	bl	2fff5884 <stm32mp1_clk_rcc_regs_lock>
2fff6756:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff675a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
2fff675e:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff6762:	f8d6 30d8 	ldr.w	r3, [r6, #216]	; 0xd8
2fff6766:	f423 7311 	bic.w	r3, r3, #580	; 0x244
2fff676a:	f023 0301 	bic.w	r3, r3, #1
2fff676e:	f8c6 30d8 	str.w	r3, [r6, #216]	; 0xd8
2fff6772:	f7ff f88d 	bl	2fff5890 <stm32mp1_clk_rcc_regs_unlock>
2fff6776:	f7fc fca3 	bl	2fff30c0 <stm32mp_pwr_regs_lock>
2fff677a:	68fb      	ldr	r3, [r7, #12]
2fff677c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
2fff6780:	60fb      	str	r3, [r7, #12]
2fff6782:	f7fc fca9 	bl	2fff30d8 <stm32mp_pwr_regs_unlock>
2fff6786:	2000      	movs	r0, #0
2fff6788:	e764      	b.n	2fff6654 <ddr_standby_sr_entry+0xfc>
2fff678a:	bf00      	nop
2fff678c:	000f4240 	.word	0x000f4240

2fff6790 <ddr_read_sr_mode>:
2fff6790:	b508      	push	{r3, lr}
2fff6792:	f7fc fc7d 	bl	2fff3090 <stm32mp_ddrctrl_base>
2fff6796:	6b03      	ldr	r3, [r0, #48]	; 0x30
2fff6798:	4a02      	ldr	r2, [pc, #8]	; (2fff67a4 <ddr_read_sr_mode+0x14>)
2fff679a:	f003 0309 	and.w	r3, r3, #9
2fff679e:	5cd0      	ldrb	r0, [r2, r3]
2fff67a0:	bd08      	pop	{r3, pc}
2fff67a2:	bf00      	nop
2fff67a4:	2fffc15f 	.word	0x2fffc15f

2fff67a8 <ddr_set_sr_mode>:
2fff67a8:	2802      	cmp	r0, #2
2fff67aa:	b538      	push	{r3, r4, r5, lr}
2fff67ac:	d064      	beq.n	2fff6878 <ddr_set_sr_mode+0xd0>
2fff67ae:	2803      	cmp	r0, #3
2fff67b0:	f000 809a 	beq.w	2fff68e8 <ddr_set_sr_mode+0x140>
2fff67b4:	2801      	cmp	r0, #1
2fff67b6:	f040 80d3 	bne.w	2fff6960 <ddr_set_sr_mode+0x1b8>
2fff67ba:	f7fc fc75 	bl	2fff30a8 <stm32mp_rcc_base>
2fff67be:	4604      	mov	r4, r0
2fff67c0:	f7fc fc66 	bl	2fff3090 <stm32mp_ddrctrl_base>
2fff67c4:	4605      	mov	r5, r0
2fff67c6:	f7ff f85d 	bl	2fff5884 <stm32mp1_clk_rcc_regs_lock>
2fff67ca:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff67ce:	f043 0302 	orr.w	r3, r3, #2
2fff67d2:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff67d6:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff67da:	f043 0308 	orr.w	r3, r3, #8
2fff67de:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff67e2:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff67e6:	f043 0301 	orr.w	r3, r3, #1
2fff67ea:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff67ee:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff67f2:	f043 0304 	orr.w	r3, r3, #4
2fff67f6:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff67fa:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff67fe:	f043 0380 	orr.w	r3, r3, #128	; 0x80
2fff6802:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6806:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff680a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
2fff680e:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6812:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6816:	f043 0340 	orr.w	r3, r3, #64	; 0x40
2fff681a:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff681e:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6822:	f443 7300 	orr.w	r3, r3, #512	; 0x200
2fff6826:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff682a:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff682e:	f043 0310 	orr.w	r3, r3, #16
2fff6832:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6836:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff683a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
2fff683e:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6842:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6846:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2fff684a:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff684e:	f7ff f81f 	bl	2fff5890 <stm32mp1_clk_rcc_regs_unlock>
2fff6852:	6bab      	ldr	r3, [r5, #56]	; 0x38
2fff6854:	f023 0301 	bic.w	r3, r3, #1
2fff6858:	63ab      	str	r3, [r5, #56]	; 0x38
2fff685a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2fff685c:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2fff6860:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff6864:	636b      	str	r3, [r5, #52]	; 0x34
2fff6866:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff6868:	f023 0308 	bic.w	r3, r3, #8
2fff686c:	632b      	str	r3, [r5, #48]	; 0x30
2fff686e:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff6870:	f023 0301 	bic.w	r3, r3, #1
2fff6874:	632b      	str	r3, [r5, #48]	; 0x30
2fff6876:	bd38      	pop	{r3, r4, r5, pc}
2fff6878:	f7fc fc16 	bl	2fff30a8 <stm32mp_rcc_base>
2fff687c:	4604      	mov	r4, r0
2fff687e:	f7fc fc07 	bl	2fff3090 <stm32mp_ddrctrl_base>
2fff6882:	4605      	mov	r5, r0
2fff6884:	f7fe fffe 	bl	2fff5884 <stm32mp1_clk_rcc_regs_lock>
2fff6888:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff688c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff6890:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6894:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6898:	f023 0302 	bic.w	r3, r3, #2
2fff689c:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff68a0:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff68a4:	f023 0308 	bic.w	r3, r3, #8
2fff68a8:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff68ac:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff68b0:	f043 0320 	orr.w	r3, r3, #32
2fff68b4:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff68b8:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff68bc:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2fff68c0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
2fff68c4:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff68c8:	f7fe ffe2 	bl	2fff5890 <stm32mp1_clk_rcc_regs_unlock>
2fff68cc:	6bab      	ldr	r3, [r5, #56]	; 0x38
2fff68ce:	f043 0301 	orr.w	r3, r3, #1
2fff68d2:	63ab      	str	r3, [r5, #56]	; 0x38
2fff68d4:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2fff68d6:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2fff68da:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff68de:	636b      	str	r3, [r5, #52]	; 0x34
2fff68e0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff68e2:	f043 0308 	orr.w	r3, r3, #8
2fff68e6:	e7c5      	b.n	2fff6874 <ddr_set_sr_mode+0xcc>
2fff68e8:	f7fc fbde 	bl	2fff30a8 <stm32mp_rcc_base>
2fff68ec:	4604      	mov	r4, r0
2fff68ee:	f7fc fbcf 	bl	2fff3090 <stm32mp_ddrctrl_base>
2fff68f2:	4605      	mov	r5, r0
2fff68f4:	f7fe ffc6 	bl	2fff5884 <stm32mp1_clk_rcc_regs_lock>
2fff68f8:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff68fc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff6900:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6904:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6908:	f043 0302 	orr.w	r3, r3, #2
2fff690c:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6910:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6914:	f043 0308 	orr.w	r3, r3, #8
2fff6918:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff691c:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff6920:	f043 0320 	orr.w	r3, r3, #32
2fff6924:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6928:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
2fff692c:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
2fff6930:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
2fff6934:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
2fff6938:	f7fe ffaa 	bl	2fff5890 <stm32mp1_clk_rcc_regs_unlock>
2fff693c:	6bab      	ldr	r3, [r5, #56]	; 0x38
2fff693e:	f043 0301 	orr.w	r3, r3, #1
2fff6942:	63ab      	str	r3, [r5, #56]	; 0x38
2fff6944:	6b6b      	ldr	r3, [r5, #52]	; 0x34
2fff6946:	f423 237f 	bic.w	r3, r3, #1044480	; 0xff000
2fff694a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
2fff694e:	636b      	str	r3, [r5, #52]	; 0x34
2fff6950:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff6952:	f043 0308 	orr.w	r3, r3, #8
2fff6956:	632b      	str	r3, [r5, #48]	; 0x30
2fff6958:	6b2b      	ldr	r3, [r5, #48]	; 0x30
2fff695a:	f043 0301 	orr.w	r3, r3, #1
2fff695e:	e789      	b.n	2fff6874 <ddr_set_sr_mode+0xcc>
2fff6960:	4803      	ldr	r0, [pc, #12]	; (2fff6970 <ddr_set_sr_mode+0x1c8>)
2fff6962:	f7fc f9db 	bl	2fff2d1c <tf_log>
2fff6966:	f7fc fa7d 	bl	2fff2e64 <console_flush>
2fff696a:	f002 eb9c 	blx	2fff90a4 <do_panic>
2fff696e:	bf00      	nop
2fff6970:	2fffc143 	.word	0x2fffc143

2fff6974 <ddr_save_sr_mode>:
2fff6974:	b508      	push	{r3, lr}
2fff6976:	f7ff ff0b 	bl	2fff6790 <ddr_read_sr_mode>
2fff697a:	4b01      	ldr	r3, [pc, #4]	; (2fff6980 <ddr_save_sr_mode+0xc>)
2fff697c:	6018      	str	r0, [r3, #0]
2fff697e:	bd08      	pop	{r3, pc}
2fff6980:	2fffeac4 	.word	0x2fffeac4

2fff6984 <ddr_restore_sr_mode>:
2fff6984:	4b01      	ldr	r3, [pc, #4]	; (2fff698c <ddr_restore_sr_mode+0x8>)
2fff6986:	6818      	ldr	r0, [r3, #0]
2fff6988:	f7ff bf0e 	b.w	2fff67a8 <ddr_set_sr_mode>
2fff698c:	2fffeac4 	.word	0x2fffeac4

2fff6990 <ddr_is_nonsecured_area>:
2fff6990:	b5d0      	push	{r4, r6, r7, lr}
2fff6992:	ee07 0f38 	mcr	15, 0, r0, cr7, cr8, {1}
2fff6996:	f3bf 8f6f 	isb	sy
2fff699a:	ec57 6f07 	mrrc	15, 0, r6, r7, cr7
2fff699e:	2400      	movs	r4, #0
2fff69a0:	f406 7200 	and.w	r2, r6, #512	; 0x200
2fff69a4:	4623      	mov	r3, r4
2fff69a6:	4313      	orrs	r3, r2
2fff69a8:	d101      	bne.n	2fff69ae <ddr_is_nonsecured_area+0x1e>
2fff69aa:	2000      	movs	r0, #0
2fff69ac:	bdd0      	pop	{r4, r6, r7, pc}
2fff69ae:	f006 0201 	and.w	r2, r6, #1
2fff69b2:	4623      	mov	r3, r4
2fff69b4:	4313      	orrs	r3, r2
2fff69b6:	d1f8      	bne.n	2fff69aa <ddr_is_nonsecured_area+0x1a>
2fff69b8:	3901      	subs	r1, #1
2fff69ba:	4408      	add	r0, r1
2fff69bc:	ee07 0f38 	mcr	15, 0, r0, cr7, cr8, {1}
2fff69c0:	f3bf 8f6f 	isb	sy
2fff69c4:	ec51 0f07 	mrrc	15, 0, r0, r1, cr7
2fff69c8:	f400 7200 	and.w	r2, r0, #512	; 0x200
2fff69cc:	4623      	mov	r3, r4
2fff69ce:	4313      	orrs	r3, r2
2fff69d0:	d0eb      	beq.n	2fff69aa <ddr_is_nonsecured_area+0x1a>
2fff69d2:	43c0      	mvns	r0, r0
2fff69d4:	f000 0001 	and.w	r0, r0, #1
2fff69d8:	e7e8      	b.n	2fff69ac <ddr_is_nonsecured_area+0x1c>

2fff69da <fdt32_to_cpu>:
2fff69da:	ba00      	rev	r0, r0
2fff69dc:	4770      	bx	lr
	...

2fff69e0 <set_gpio>:
2fff69e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff69e4:	460d      	mov	r5, r1
2fff69e6:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
2fff69ea:	4680      	mov	r8, r0
2fff69ec:	9f0d      	ldr	r7, [sp, #52]	; 0x34
2fff69ee:	4693      	mov	fp, r2
2fff69f0:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
2fff69f4:	461e      	mov	r6, r3
2fff69f6:	f7fc fb7b 	bl	2fff30f0 <stm32_get_gpio_bank_base>
2fff69fa:	4604      	mov	r4, r0
2fff69fc:	4640      	mov	r0, r8
2fff69fe:	f7fc fbf9 	bl	2fff31f4 <stm32_get_gpio_bank_clock>
2fff6a02:	2d0f      	cmp	r5, #15
2fff6a04:	d903      	bls.n	2fff6a0e <set_gpio+0x2e>
2fff6a06:	4835      	ldr	r0, [pc, #212]	; (2fff6adc <set_gpio+0xfc>)
2fff6a08:	21d0      	movs	r1, #208	; 0xd0
2fff6a0a:	f003 fb85 	bl	2fffa118 <__assert>
2fff6a0e:	9001      	str	r0, [sp, #4]
2fff6a10:	f7fe ff44 	bl	2fff589c <stm32mp_clk_enable>
2fff6a14:	006b      	lsls	r3, r5, #1
2fff6a16:	2103      	movs	r1, #3
2fff6a18:	f8d4 c000 	ldr.w	ip, [r4]
2fff6a1c:	f01b 0f10 	tst.w	fp, #16
2fff6a20:	fa01 f103 	lsl.w	r1, r1, r3
2fff6a24:	ea6f 0001 	mvn.w	r0, r1
2fff6a28:	ea2c 0101 	bic.w	r1, ip, r1
2fff6a2c:	6021      	str	r1, [r4, #0]
2fff6a2e:	f02b 0110 	bic.w	r1, fp, #16
2fff6a32:	f8d4 c000 	ldr.w	ip, [r4]
2fff6a36:	fa01 f103 	lsl.w	r1, r1, r3
2fff6a3a:	ea41 010c 	orr.w	r1, r1, ip
2fff6a3e:	6021      	str	r1, [r4, #0]
2fff6a40:	f04f 0101 	mov.w	r1, #1
2fff6a44:	f8d4 c004 	ldr.w	ip, [r4, #4]
2fff6a48:	fa01 f105 	lsl.w	r1, r1, r5
2fff6a4c:	bf14      	ite	ne
2fff6a4e:	ea4c 0101 	orrne.w	r1, ip, r1
2fff6a52:	ea2c 0101 	biceq.w	r1, ip, r1
2fff6a56:	2d07      	cmp	r5, #7
2fff6a58:	9a01      	ldr	r2, [sp, #4]
2fff6a5a:	6061      	str	r1, [r4, #4]
2fff6a5c:	68a1      	ldr	r1, [r4, #8]
2fff6a5e:	fa06 f603 	lsl.w	r6, r6, r3
2fff6a62:	fa0a fa03 	lsl.w	sl, sl, r3
2fff6a66:	ea01 0100 	and.w	r1, r1, r0
2fff6a6a:	60a1      	str	r1, [r4, #8]
2fff6a6c:	f04f 030f 	mov.w	r3, #15
2fff6a70:	68a1      	ldr	r1, [r4, #8]
2fff6a72:	ea46 0601 	orr.w	r6, r6, r1
2fff6a76:	60a6      	str	r6, [r4, #8]
2fff6a78:	68e1      	ldr	r1, [r4, #12]
2fff6a7a:	ea00 0001 	and.w	r0, r0, r1
2fff6a7e:	60e0      	str	r0, [r4, #12]
2fff6a80:	68e1      	ldr	r1, [r4, #12]
2fff6a82:	ea4a 0101 	orr.w	r1, sl, r1
2fff6a86:	60e1      	str	r1, [r4, #12]
2fff6a88:	d816      	bhi.n	2fff6ab8 <set_gpio+0xd8>
2fff6a8a:	00a9      	lsls	r1, r5, #2
2fff6a8c:	6a20      	ldr	r0, [r4, #32]
2fff6a8e:	408b      	lsls	r3, r1
2fff6a90:	ea20 0303 	bic.w	r3, r0, r3
2fff6a94:	6223      	str	r3, [r4, #32]
2fff6a96:	6a23      	ldr	r3, [r4, #32]
2fff6a98:	408f      	lsls	r7, r1
2fff6a9a:	431f      	orrs	r7, r3
2fff6a9c:	6227      	str	r7, [r4, #32]
2fff6a9e:	4610      	mov	r0, r2
2fff6aa0:	f7fe feff 	bl	2fff58a2 <stm32mp_clk_disable>
2fff6aa4:	f1b9 0f02 	cmp.w	r9, #2
2fff6aa8:	4629      	mov	r1, r5
2fff6aaa:	4640      	mov	r0, r8
2fff6aac:	d111      	bne.n	2fff6ad2 <set_gpio+0xf2>
2fff6aae:	b003      	add	sp, #12
2fff6ab0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff6ab4:	f7f9 bfd4 	b.w	2fff0a60 <stm32mp_register_secure_gpio>
2fff6ab8:	6a60      	ldr	r0, [r4, #36]	; 0x24
2fff6aba:	f1a5 0108 	sub.w	r1, r5, #8
2fff6abe:	0089      	lsls	r1, r1, #2
2fff6ac0:	408b      	lsls	r3, r1
2fff6ac2:	ea20 0303 	bic.w	r3, r0, r3
2fff6ac6:	6263      	str	r3, [r4, #36]	; 0x24
2fff6ac8:	6a63      	ldr	r3, [r4, #36]	; 0x24
2fff6aca:	408f      	lsls	r7, r1
2fff6acc:	431f      	orrs	r7, r3
2fff6ace:	6267      	str	r7, [r4, #36]	; 0x24
2fff6ad0:	e7e5      	b.n	2fff6a9e <set_gpio+0xbe>
2fff6ad2:	b003      	add	sp, #12
2fff6ad4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff6ad8:	f7f9 bfd6 	b.w	2fff0a88 <stm32mp_register_non_secure_gpio>
2fff6adc:	2fffc169 	.word	0x2fffc169

2fff6ae0 <dt_set_pinctrl_config>:
2fff6ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff6ae4:	b091      	sub	sp, #68	; 0x44
2fff6ae6:	2700      	movs	r7, #0
2fff6ae8:	4604      	mov	r4, r0
2fff6aea:	970d      	str	r7, [sp, #52]	; 0x34
2fff6aec:	f001 fd8c 	bl	2fff8608 <fdt_get_status>
2fff6af0:	9004      	str	r0, [sp, #16]
2fff6af2:	a80e      	add	r0, sp, #56	; 0x38
2fff6af4:	f001 fd7c 	bl	2fff85f0 <fdt_get_address>
2fff6af8:	b920      	cbnz	r0, 2fff6b04 <dt_set_pinctrl_config+0x24>
2fff6afa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff6afe:	b011      	add	sp, #68	; 0x44
2fff6b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff6b04:	9b04      	ldr	r3, [sp, #16]
2fff6b06:	2b00      	cmp	r3, #0
2fff6b08:	d0f7      	beq.n	2fff6afa <dt_set_pinctrl_config+0x1a>
2fff6b0a:	4a6c      	ldr	r2, [pc, #432]	; (2fff6cbc <dt_set_pinctrl_config+0x1dc>)
2fff6b0c:	ab0d      	add	r3, sp, #52	; 0x34
2fff6b0e:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff6b10:	4621      	mov	r1, r4
2fff6b12:	f003 f964 	bl	2fff9dde <fdt_getprop>
2fff6b16:	9005      	str	r0, [sp, #20]
2fff6b18:	2800      	cmp	r0, #0
2fff6b1a:	d0ee      	beq.n	2fff6afa <dt_set_pinctrl_config+0x1a>
2fff6b1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
2fff6b1e:	ebb7 0f93 	cmp.w	r7, r3, lsr #2
2fff6b22:	d301      	bcc.n	2fff6b28 <dt_set_pinctrl_config+0x48>
2fff6b24:	2000      	movs	r0, #0
2fff6b26:	e7ea      	b.n	2fff6afe <dt_set_pinctrl_config+0x1e>
2fff6b28:	9b05      	ldr	r3, [sp, #20]
2fff6b2a:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
2fff6b2e:	f7ff ff54 	bl	2fff69da <fdt32_to_cpu>
2fff6b32:	4601      	mov	r1, r0
2fff6b34:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff6b36:	f003 fa44 	bl	2fff9fc2 <fdt_node_offset_by_phandle>
2fff6b3a:	1e01      	subs	r1, r0, #0
2fff6b3c:	dbdd      	blt.n	2fff6afa <dt_set_pinctrl_config+0x1a>
2fff6b3e:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff6b40:	f002 ffd1 	bl	2fff9ae6 <fdt_first_subnode>
2fff6b44:	4605      	mov	r5, r0
2fff6b46:	2d00      	cmp	r5, #0
2fff6b48:	da01      	bge.n	2fff6b4e <dt_set_pinctrl_config+0x6e>
2fff6b4a:	3701      	adds	r7, #1
2fff6b4c:	e7e6      	b.n	2fff6b1c <dt_set_pinctrl_config+0x3c>
2fff6b4e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
2fff6b50:	ab0f      	add	r3, sp, #60	; 0x3c
2fff6b52:	4a5b      	ldr	r2, [pc, #364]	; (2fff6cc0 <dt_set_pinctrl_config+0x1e0>)
2fff6b54:	4629      	mov	r1, r5
2fff6b56:	4630      	mov	r0, r6
2fff6b58:	f003 f941 	bl	2fff9dde <fdt_getprop>
2fff6b5c:	9006      	str	r0, [sp, #24]
2fff6b5e:	2800      	cmp	r0, #0
2fff6b60:	d0cb      	beq.n	2fff6afa <dt_set_pinctrl_config+0x1a>
2fff6b62:	4629      	mov	r1, r5
2fff6b64:	4630      	mov	r0, r6
2fff6b66:	f003 fa1c 	bl	2fff9fa2 <fdt_parent_offset>
2fff6b6a:	4601      	mov	r1, r0
2fff6b6c:	4630      	mov	r0, r6
2fff6b6e:	f003 fa18 	bl	2fff9fa2 <fdt_parent_offset>
2fff6b72:	1e03      	subs	r3, r0, #0
2fff6b74:	9309      	str	r3, [sp, #36]	; 0x24
2fff6b76:	dbc0      	blt.n	2fff6afa <dt_set_pinctrl_config+0x1a>
2fff6b78:	4a52      	ldr	r2, [pc, #328]	; (2fff6cc4 <dt_set_pinctrl_config+0x1e4>)
2fff6b7a:	2300      	movs	r3, #0
2fff6b7c:	4629      	mov	r1, r5
2fff6b7e:	4630      	mov	r0, r6
2fff6b80:	f003 f92d 	bl	2fff9dde <fdt_getprop>
2fff6b84:	b110      	cbz	r0, 2fff6b8c <dt_set_pinctrl_config+0xac>
2fff6b86:	6800      	ldr	r0, [r0, #0]
2fff6b88:	f7ff ff27 	bl	2fff69da <fdt32_to_cpu>
2fff6b8c:	9007      	str	r0, [sp, #28]
2fff6b8e:	2300      	movs	r3, #0
2fff6b90:	4a4d      	ldr	r2, [pc, #308]	; (2fff6cc8 <dt_set_pinctrl_config+0x1e8>)
2fff6b92:	4629      	mov	r1, r5
2fff6b94:	4630      	mov	r0, r6
2fff6b96:	f003 f922 	bl	2fff9dde <fdt_getprop>
2fff6b9a:	4603      	mov	r3, r0
2fff6b9c:	b9a0      	cbnz	r0, 2fff6bc8 <dt_set_pinctrl_config+0xe8>
2fff6b9e:	4a4b      	ldr	r2, [pc, #300]	; (2fff6ccc <dt_set_pinctrl_config+0x1ec>)
2fff6ba0:	4629      	mov	r1, r5
2fff6ba2:	4630      	mov	r0, r6
2fff6ba4:	f003 f91b 	bl	2fff9dde <fdt_getprop>
2fff6ba8:	2800      	cmp	r0, #0
2fff6baa:	bf0c      	ite	eq
2fff6bac:	2300      	moveq	r3, #0
2fff6bae:	2302      	movne	r3, #2
2fff6bb0:	9308      	str	r3, [sp, #32]
2fff6bb2:	f04f 0800 	mov.w	r8, #0
2fff6bb6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
2fff6bb8:	ebb8 0f93 	cmp.w	r8, r3, lsr #2
2fff6bbc:	d306      	bcc.n	2fff6bcc <dt_set_pinctrl_config+0xec>
2fff6bbe:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff6bc0:	4629      	mov	r1, r5
2fff6bc2:	f002 ffa3 	bl	2fff9b0c <fdt_next_subnode>
2fff6bc6:	e7bd      	b.n	2fff6b44 <dt_set_pinctrl_config+0x64>
2fff6bc8:	2301      	movs	r3, #1
2fff6bca:	e7f1      	b.n	2fff6bb0 <dt_set_pinctrl_config+0xd0>
2fff6bcc:	9b06      	ldr	r3, [sp, #24]
2fff6bce:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
2fff6bd2:	f7ff ff02 	bl	2fff69da <fdt32_to_cpu>
2fff6bd6:	f3c0 2303 	ubfx	r3, r0, #8, #4
2fff6bda:	b2c4      	uxtb	r4, r0
2fff6bdc:	f3c0 3a04 	ubfx	sl, r0, #12, #5
2fff6be0:	2c10      	cmp	r4, #16
2fff6be2:	930a      	str	r3, [sp, #40]	; 0x28
2fff6be4:	d81c      	bhi.n	2fff6c20 <dt_set_pinctrl_config+0x140>
2fff6be6:	bb0c      	cbnz	r4, 2fff6c2c <dt_set_pinctrl_config+0x14c>
2fff6be8:	46a1      	mov	r9, r4
2fff6bea:	4a39      	ldr	r2, [pc, #228]	; (2fff6cd0 <dt_set_pinctrl_config+0x1f0>)
2fff6bec:	2300      	movs	r3, #0
2fff6bee:	4629      	mov	r1, r5
2fff6bf0:	4630      	mov	r0, r6
2fff6bf2:	f003 f8f4 	bl	2fff9dde <fdt_getprop>
2fff6bf6:	b108      	cbz	r0, 2fff6bfc <dt_set_pinctrl_config+0x11c>
2fff6bf8:	f044 0410 	orr.w	r4, r4, #16
2fff6bfc:	4650      	mov	r0, sl
2fff6bfe:	f7fc fa8b 	bl	2fff3118 <stm32_get_gpio_bank_offset>
2fff6c02:	900b      	str	r0, [sp, #44]	; 0x2c
2fff6c04:	4630      	mov	r0, r6
2fff6c06:	9909      	ldr	r1, [sp, #36]	; 0x24
2fff6c08:	f002 ff6d 	bl	2fff9ae6 <fdt_first_subnode>
2fff6c0c:	2800      	cmp	r0, #0
2fff6c0e:	4683      	mov	fp, r0
2fff6c10:	da12      	bge.n	2fff6c38 <dt_set_pinctrl_config+0x158>
2fff6c12:	4830      	ldr	r0, [pc, #192]	; (2fff6cd4 <dt_set_pinctrl_config+0x1f4>)
2fff6c14:	f7fc f882 	bl	2fff2d1c <tf_log>
2fff6c18:	f7fc f924 	bl	2fff2e64 <console_flush>
2fff6c1c:	f002 ea42 	blx	2fff90a4 <do_panic>
2fff6c20:	2c11      	cmp	r4, #17
2fff6c22:	f04f 0900 	mov.w	r9, #0
2fff6c26:	d105      	bne.n	2fff6c34 <dt_set_pinctrl_config+0x154>
2fff6c28:	2403      	movs	r4, #3
2fff6c2a:	e7de      	b.n	2fff6bea <dt_set_pinctrl_config+0x10a>
2fff6c2c:	f104 39ff 	add.w	r9, r4, #4294967295	; 0xffffffff
2fff6c30:	2402      	movs	r4, #2
2fff6c32:	e7da      	b.n	2fff6bea <dt_set_pinctrl_config+0x10a>
2fff6c34:	2401      	movs	r4, #1
2fff6c36:	e7d8      	b.n	2fff6bea <dt_set_pinctrl_config+0x10a>
2fff6c38:	4a27      	ldr	r2, [pc, #156]	; (2fff6cd8 <dt_set_pinctrl_config+0x1f8>)
2fff6c3a:	2300      	movs	r3, #0
2fff6c3c:	4659      	mov	r1, fp
2fff6c3e:	4630      	mov	r0, r6
2fff6c40:	f003 f8cd 	bl	2fff9dde <fdt_getprop>
2fff6c44:	b920      	cbnz	r0, 2fff6c50 <dt_set_pinctrl_config+0x170>
2fff6c46:	4659      	mov	r1, fp
2fff6c48:	4630      	mov	r0, r6
2fff6c4a:	f002 ff5f 	bl	2fff9b0c <fdt_next_subnode>
2fff6c4e:	e7dd      	b.n	2fff6c0c <dt_set_pinctrl_config+0x12c>
2fff6c50:	4a22      	ldr	r2, [pc, #136]	; (2fff6cdc <dt_set_pinctrl_config+0x1fc>)
2fff6c52:	2300      	movs	r3, #0
2fff6c54:	4659      	mov	r1, fp
2fff6c56:	4630      	mov	r0, r6
2fff6c58:	f003 f8c1 	bl	2fff9dde <fdt_getprop>
2fff6c5c:	2800      	cmp	r0, #0
2fff6c5e:	d0f2      	beq.n	2fff6c46 <dt_set_pinctrl_config+0x166>
2fff6c60:	6800      	ldr	r0, [r0, #0]
2fff6c62:	f7ff feba 	bl	2fff69da <fdt32_to_cpu>
2fff6c66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
2fff6c68:	4283      	cmp	r3, r0
2fff6c6a:	d1ec      	bne.n	2fff6c46 <dt_set_pinctrl_config+0x166>
2fff6c6c:	4658      	mov	r0, fp
2fff6c6e:	f001 fccb 	bl	2fff8608 <fdt_get_status>
2fff6c72:	2800      	cmp	r0, #0
2fff6c74:	d0e7      	beq.n	2fff6c46 <dt_set_pinctrl_config+0x166>
2fff6c76:	f1bb 0f00 	cmp.w	fp, #0
2fff6c7a:	d0ca      	beq.n	2fff6c12 <dt_set_pinctrl_config+0x132>
2fff6c7c:	4658      	mov	r0, fp
2fff6c7e:	f7fe f8e7 	bl	2fff4e50 <fdt_get_clock_id>
2fff6c82:	f1b0 0b00 	subs.w	fp, r0, #0
2fff6c86:	f6ff af38 	blt.w	2fff6afa <dt_set_pinctrl_config+0x1a>
2fff6c8a:	4650      	mov	r0, sl
2fff6c8c:	f7fc fab2 	bl	2fff31f4 <stm32_get_gpio_bank_clock>
2fff6c90:	4558      	cmp	r0, fp
2fff6c92:	d003      	beq.n	2fff6c9c <dt_set_pinctrl_config+0x1bc>
2fff6c94:	4812      	ldr	r0, [pc, #72]	; (2fff6ce0 <dt_set_pinctrl_config+0x200>)
2fff6c96:	2192      	movs	r1, #146	; 0x92
2fff6c98:	f003 fa3e 	bl	2fffa118 <__assert>
2fff6c9c:	9b04      	ldr	r3, [sp, #16]
2fff6c9e:	4622      	mov	r2, r4
2fff6ca0:	990a      	ldr	r1, [sp, #40]	; 0x28
2fff6ca2:	4650      	mov	r0, sl
2fff6ca4:	9302      	str	r3, [sp, #8]
2fff6ca6:	f108 0801 	add.w	r8, r8, #1
2fff6caa:	9b08      	ldr	r3, [sp, #32]
2fff6cac:	f8cd 9004 	str.w	r9, [sp, #4]
2fff6cb0:	9300      	str	r3, [sp, #0]
2fff6cb2:	9b07      	ldr	r3, [sp, #28]
2fff6cb4:	f7ff fe94 	bl	2fff69e0 <set_gpio>
2fff6cb8:	e77d      	b.n	2fff6bb6 <dt_set_pinctrl_config+0xd6>
2fff6cba:	bf00      	nop
2fff6cbc:	2fffc186 	.word	0x2fffc186
2fff6cc0:	2fffc190 	.word	0x2fffc190
2fff6cc4:	2fffc197 	.word	0x2fffc197
2fff6cc8:	2fffc1a1 	.word	0x2fffc1a1
2fff6ccc:	2fffc1ae 	.word	0x2fffc1ae
2fff6cd0:	2fffc1bd 	.word	0x2fffc1bd
2fff6cd4:	2fffc1de 	.word	0x2fffc1de
2fff6cd8:	2fffc1ce 	.word	0x2fffc1ce
2fff6cdc:	2fffae68 	.word	0x2fffae68
2fff6ce0:	2fffc169 	.word	0x2fffc169

2fff6ce4 <set_gpio_secure_cfg>:
2fff6ce4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff6ce8:	460f      	mov	r7, r1
2fff6cea:	4680      	mov	r8, r0
2fff6cec:	4616      	mov	r6, r2
2fff6cee:	f7fc f9ff 	bl	2fff30f0 <stm32_get_gpio_bank_base>
2fff6cf2:	4604      	mov	r4, r0
2fff6cf4:	4640      	mov	r0, r8
2fff6cf6:	f7fc fa7d 	bl	2fff31f4 <stm32_get_gpio_bank_clock>
2fff6cfa:	2f0f      	cmp	r7, #15
2fff6cfc:	4605      	mov	r5, r0
2fff6cfe:	d904      	bls.n	2fff6d0a <set_gpio_secure_cfg+0x26>
2fff6d00:	f44f 7187 	mov.w	r1, #270	; 0x10e
2fff6d04:	480e      	ldr	r0, [pc, #56]	; (2fff6d40 <set_gpio_secure_cfg+0x5c>)
2fff6d06:	f003 fa07 	bl	2fffa118 <__assert>
2fff6d0a:	b136      	cbz	r6, 2fff6d1a <set_gpio_secure_cfg+0x36>
2fff6d0c:	4640      	mov	r0, r8
2fff6d0e:	f7f9 fef5 	bl	2fff0afc <stm32mp_gpio_bank_is_non_secure>
2fff6d12:	b110      	cbz	r0, 2fff6d1a <set_gpio_secure_cfg+0x36>
2fff6d14:	f44f 7188 	mov.w	r1, #272	; 0x110
2fff6d18:	e7f4      	b.n	2fff6d04 <set_gpio_secure_cfg+0x20>
2fff6d1a:	4628      	mov	r0, r5
2fff6d1c:	f7fe fdbe 	bl	2fff589c <stm32mp_clk_enable>
2fff6d20:	2301      	movs	r3, #1
2fff6d22:	fa03 f107 	lsl.w	r1, r3, r7
2fff6d26:	6b23      	ldr	r3, [r4, #48]	; 0x30
2fff6d28:	b136      	cbz	r6, 2fff6d38 <set_gpio_secure_cfg+0x54>
2fff6d2a:	4319      	orrs	r1, r3
2fff6d2c:	6321      	str	r1, [r4, #48]	; 0x30
2fff6d2e:	4628      	mov	r0, r5
2fff6d30:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2fff6d34:	f7fe bdb5 	b.w	2fff58a2 <stm32mp_clk_disable>
2fff6d38:	ea23 0101 	bic.w	r1, r3, r1
2fff6d3c:	e7f6      	b.n	2fff6d2c <set_gpio_secure_cfg+0x48>
2fff6d3e:	bf00      	nop
2fff6d40:	2fffc169 	.word	0x2fffc169

2fff6d44 <i2c_transfer_config.isra.0>:
2fff6d44:	b530      	push	{r4, r5, lr}
2fff6d46:	9d03      	ldr	r5, [sp, #12]
2fff6d48:	f3c1 0109 	ubfx	r1, r1, #0, #10
2fff6d4c:	432b      	orrs	r3, r5
2fff6d4e:	0412      	lsls	r2, r2, #16
2fff6d50:	430b      	orrs	r3, r1
2fff6d52:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
2fff6d56:	4313      	orrs	r3, r2
2fff6d58:	4a04      	ldr	r2, [pc, #16]	; (2fff6d6c <i2c_transfer_config.isra.0+0x28>)
2fff6d5a:	6844      	ldr	r4, [r0, #4]
2fff6d5c:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
2fff6d60:	ea24 0402 	bic.w	r4, r4, r2
2fff6d64:	4323      	orrs	r3, r4
2fff6d66:	6043      	str	r3, [r0, #4]
2fff6d68:	bd30      	pop	{r4, r5, pc}
2fff6d6a:	bf00      	nop
2fff6d6c:	03ff63ff 	.word	0x03ff63ff

2fff6d70 <i2c_wait_flag>:
2fff6d70:	6803      	ldr	r3, [r0, #0]
2fff6d72:	f002 0201 	and.w	r2, r2, #1
2fff6d76:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff6d78:	3318      	adds	r3, #24
2fff6d7a:	e9dd 4505 	ldrd	r4, r5, [sp, #20]
2fff6d7e:	681e      	ldr	r6, [r3, #0]
2fff6d80:	4231      	tst	r1, r6
2fff6d82:	bf14      	ite	ne
2fff6d84:	2601      	movne	r6, #1
2fff6d86:	2600      	moveq	r6, #0
2fff6d88:	4296      	cmp	r6, r2
2fff6d8a:	d111      	bne.n	2fff6db0 <i2c_wait_flag+0x40>
2fff6d8c:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff6d90:	42bd      	cmp	r5, r7
2fff6d92:	bf08      	it	eq
2fff6d94:	42b4      	cmpeq	r4, r6
2fff6d96:	d2f2      	bcs.n	2fff6d7e <i2c_wait_flag+0xe>
2fff6d98:	6983      	ldr	r3, [r0, #24]
2fff6d9a:	2220      	movs	r2, #32
2fff6d9c:	6102      	str	r2, [r0, #16]
2fff6d9e:	f043 0320 	orr.w	r3, r3, #32
2fff6da2:	6183      	str	r3, [r0, #24]
2fff6da4:	2300      	movs	r3, #0
2fff6da6:	6143      	str	r3, [r0, #20]
2fff6da8:	7303      	strb	r3, [r0, #12]
2fff6daa:	f06f 0004 	mvn.w	r0, #4
2fff6dae:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff6db0:	2000      	movs	r0, #0
2fff6db2:	e7fc      	b.n	2fff6dae <i2c_wait_flag+0x3e>

2fff6db4 <i2c_ack_failed>:
2fff6db4:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff6db6:	4614      	mov	r4, r2
2fff6db8:	6802      	ldr	r2, [r0, #0]
2fff6dba:	461d      	mov	r5, r3
2fff6dbc:	6993      	ldr	r3, [r2, #24]
2fff6dbe:	f102 0118 	add.w	r1, r2, #24
2fff6dc2:	f013 0310 	ands.w	r3, r3, #16
2fff6dc6:	d112      	bne.n	2fff6dee <i2c_ack_failed+0x3a>
2fff6dc8:	4618      	mov	r0, r3
2fff6dca:	e00f      	b.n	2fff6dec <i2c_ack_failed+0x38>
2fff6dcc:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff6dd0:	42bd      	cmp	r5, r7
2fff6dd2:	bf08      	it	eq
2fff6dd4:	42b4      	cmpeq	r4, r6
2fff6dd6:	d20a      	bcs.n	2fff6dee <i2c_ack_failed+0x3a>
2fff6dd8:	6982      	ldr	r2, [r0, #24]
2fff6dda:	6143      	str	r3, [r0, #20]
2fff6ddc:	f042 0220 	orr.w	r2, r2, #32
2fff6de0:	6182      	str	r2, [r0, #24]
2fff6de2:	2220      	movs	r2, #32
2fff6de4:	6102      	str	r2, [r0, #16]
2fff6de6:	7303      	strb	r3, [r0, #12]
2fff6de8:	f06f 0004 	mvn.w	r0, #4
2fff6dec:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff6dee:	680b      	ldr	r3, [r1, #0]
2fff6df0:	f013 0320 	ands.w	r3, r3, #32
2fff6df4:	d0ea      	beq.n	2fff6dcc <i2c_ack_failed+0x18>
2fff6df6:	2310      	movs	r3, #16
2fff6df8:	61d3      	str	r3, [r2, #28]
2fff6dfa:	2220      	movs	r2, #32
2fff6dfc:	6803      	ldr	r3, [r0, #0]
2fff6dfe:	61da      	str	r2, [r3, #28]
2fff6e00:	6803      	ldr	r3, [r0, #0]
2fff6e02:	699a      	ldr	r2, [r3, #24]
2fff6e04:	0794      	lsls	r4, r2, #30
2fff6e06:	bf44      	itt	mi
2fff6e08:	2200      	movmi	r2, #0
2fff6e0a:	629a      	strmi	r2, [r3, #40]	; 0x28
2fff6e0c:	6803      	ldr	r3, [r0, #0]
2fff6e0e:	699a      	ldr	r2, [r3, #24]
2fff6e10:	07d1      	lsls	r1, r2, #31
2fff6e12:	bf5e      	ittt	pl
2fff6e14:	699a      	ldrpl	r2, [r3, #24]
2fff6e16:	f042 0201 	orrpl.w	r2, r2, #1
2fff6e1a:	619a      	strpl	r2, [r3, #24]
2fff6e1c:	6802      	ldr	r2, [r0, #0]
2fff6e1e:	6853      	ldr	r3, [r2, #4]
2fff6e20:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2fff6e24:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2fff6e28:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2fff6e2c:	f023 0301 	bic.w	r3, r3, #1
2fff6e30:	6053      	str	r3, [r2, #4]
2fff6e32:	6983      	ldr	r3, [r0, #24]
2fff6e34:	f043 0304 	orr.w	r3, r3, #4
2fff6e38:	6183      	str	r3, [r0, #24]
2fff6e3a:	2320      	movs	r3, #32
2fff6e3c:	6103      	str	r3, [r0, #16]
2fff6e3e:	2300      	movs	r3, #0
2fff6e40:	6143      	str	r3, [r0, #20]
2fff6e42:	e7d0      	b.n	2fff6de6 <i2c_ack_failed+0x32>

2fff6e44 <i2c_wait_txis>:
2fff6e44:	b5d0      	push	{r4, r6, r7, lr}
2fff6e46:	4604      	mov	r4, r0
2fff6e48:	4616      	mov	r6, r2
2fff6e4a:	461f      	mov	r7, r3
2fff6e4c:	6823      	ldr	r3, [r4, #0]
2fff6e4e:	699b      	ldr	r3, [r3, #24]
2fff6e50:	079b      	lsls	r3, r3, #30
2fff6e52:	d501      	bpl.n	2fff6e58 <i2c_wait_txis+0x14>
2fff6e54:	2000      	movs	r0, #0
2fff6e56:	bdd0      	pop	{r4, r6, r7, pc}
2fff6e58:	4632      	mov	r2, r6
2fff6e5a:	463b      	mov	r3, r7
2fff6e5c:	4620      	mov	r0, r4
2fff6e5e:	f7ff ffa9 	bl	2fff6db4 <i2c_ack_failed>
2fff6e62:	b968      	cbnz	r0, 2fff6e80 <i2c_wait_txis+0x3c>
2fff6e64:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff6e68:	429f      	cmp	r7, r3
2fff6e6a:	bf08      	it	eq
2fff6e6c:	4296      	cmpeq	r6, r2
2fff6e6e:	d2ed      	bcs.n	2fff6e4c <i2c_wait_txis+0x8>
2fff6e70:	69a3      	ldr	r3, [r4, #24]
2fff6e72:	6160      	str	r0, [r4, #20]
2fff6e74:	7320      	strb	r0, [r4, #12]
2fff6e76:	f043 0320 	orr.w	r3, r3, #32
2fff6e7a:	61a3      	str	r3, [r4, #24]
2fff6e7c:	2320      	movs	r3, #32
2fff6e7e:	6123      	str	r3, [r4, #16]
2fff6e80:	f06f 0004 	mvn.w	r0, #4
2fff6e84:	e7e7      	b.n	2fff6e56 <i2c_wait_txis+0x12>

2fff6e86 <i2c_wait_stop>:
2fff6e86:	b5d0      	push	{r4, r6, r7, lr}
2fff6e88:	4604      	mov	r4, r0
2fff6e8a:	4616      	mov	r6, r2
2fff6e8c:	461f      	mov	r7, r3
2fff6e8e:	6823      	ldr	r3, [r4, #0]
2fff6e90:	699b      	ldr	r3, [r3, #24]
2fff6e92:	069b      	lsls	r3, r3, #26
2fff6e94:	d501      	bpl.n	2fff6e9a <i2c_wait_stop+0x14>
2fff6e96:	2000      	movs	r0, #0
2fff6e98:	bdd0      	pop	{r4, r6, r7, pc}
2fff6e9a:	4632      	mov	r2, r6
2fff6e9c:	463b      	mov	r3, r7
2fff6e9e:	4620      	mov	r0, r4
2fff6ea0:	f7ff ff88 	bl	2fff6db4 <i2c_ack_failed>
2fff6ea4:	b968      	cbnz	r0, 2fff6ec2 <i2c_wait_stop+0x3c>
2fff6ea6:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff6eaa:	429f      	cmp	r7, r3
2fff6eac:	bf08      	it	eq
2fff6eae:	4296      	cmpeq	r6, r2
2fff6eb0:	d2ed      	bcs.n	2fff6e8e <i2c_wait_stop+0x8>
2fff6eb2:	69a3      	ldr	r3, [r4, #24]
2fff6eb4:	6160      	str	r0, [r4, #20]
2fff6eb6:	7320      	strb	r0, [r4, #12]
2fff6eb8:	f043 0320 	orr.w	r3, r3, #32
2fff6ebc:	61a3      	str	r3, [r4, #24]
2fff6ebe:	2320      	movs	r3, #32
2fff6ec0:	6123      	str	r3, [r4, #16]
2fff6ec2:	f06f 0004 	mvn.w	r0, #4
2fff6ec6:	e7e7      	b.n	2fff6e98 <i2c_wait_stop+0x12>

2fff6ec8 <i2c_write>:
2fff6ec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff6ecc:	b085      	sub	sp, #20
2fff6ece:	469b      	mov	fp, r3
2fff6ed0:	4604      	mov	r4, r0
2fff6ed2:	9b11      	ldr	r3, [sp, #68]	; 0x44
2fff6ed4:	4688      	mov	r8, r1
2fff6ed6:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
2fff6eda:	4691      	mov	r9, r2
2fff6edc:	2b10      	cmp	r3, #16
2fff6ede:	d002      	beq.n	2fff6ee6 <i2c_write+0x1e>
2fff6ee0:	2b40      	cmp	r3, #64	; 0x40
2fff6ee2:	f040 80d6 	bne.w	2fff7092 <i2c_write+0x1ca>
2fff6ee6:	6923      	ldr	r3, [r4, #16]
2fff6ee8:	2b20      	cmp	r3, #32
2fff6eea:	f040 80d5 	bne.w	2fff7098 <i2c_write+0x1d0>
2fff6eee:	7b23      	ldrb	r3, [r4, #12]
2fff6ef0:	2b00      	cmp	r3, #0
2fff6ef2:	f040 80d1 	bne.w	2fff7098 <i2c_write+0x1d0>
2fff6ef6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff6ef8:	2b00      	cmp	r3, #0
2fff6efa:	f000 80d0 	beq.w	2fff709e <i2c_write+0x1d6>
2fff6efe:	2d00      	cmp	r5, #0
2fff6f00:	f000 80cd 	beq.w	2fff709e <i2c_write+0x1d6>
2fff6f04:	68a0      	ldr	r0, [r4, #8]
2fff6f06:	2601      	movs	r6, #1
2fff6f08:	f7fe fcc8 	bl	2fff589c <stm32mp_clk_enable>
2fff6f0c:	7326      	strb	r6, [r4, #12]
2fff6f0e:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff6f12:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff6f16:	f246 11a8 	movw	r1, #25000	; 0x61a8
2fff6f1a:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff6f1e:	fba0 0101 	umull	r0, r1, r0, r1
2fff6f22:	4a6d      	ldr	r2, [pc, #436]	; (2fff70d8 <i2c_write+0x210>)
2fff6f24:	2300      	movs	r3, #0
2fff6f26:	f002 ea5c 	blx	2fff93e0 <__aeabi_uldivmod>
2fff6f2a:	9b02      	ldr	r3, [sp, #8]
2fff6f2c:	4632      	mov	r2, r6
2fff6f2e:	18c0      	adds	r0, r0, r3
2fff6f30:	9b03      	ldr	r3, [sp, #12]
2fff6f32:	eb43 0101 	adc.w	r1, r3, r1
2fff6f36:	e9cd 0100 	strd	r0, r1, [sp]
2fff6f3a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
2fff6f3e:	4620      	mov	r0, r4
2fff6f40:	f7ff ff16 	bl	2fff6d70 <i2c_wait_flag>
2fff6f44:	b150      	cbz	r0, 2fff6f5c <i2c_write+0x94>
2fff6f46:	f06f 0504 	mvn.w	r5, #4
2fff6f4a:	68a0      	ldr	r0, [r4, #8]
2fff6f4c:	2300      	movs	r3, #0
2fff6f4e:	7323      	strb	r3, [r4, #12]
2fff6f50:	f7fe fca7 	bl	2fff58a2 <stm32mp_clk_disable>
2fff6f54:	4628      	mov	r0, r5
2fff6f56:	b005      	add	sp, #20
2fff6f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff6f5c:	61a0      	str	r0, [r4, #24]
2fff6f5e:	2321      	movs	r3, #33	; 0x21
2fff6f60:	6123      	str	r3, [r4, #16]
2fff6f62:	462f      	mov	r7, r5
2fff6f64:	9b11      	ldr	r3, [sp, #68]	; 0x44
2fff6f66:	6163      	str	r3, [r4, #20]
2fff6f68:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff6f6c:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff6f70:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff6f74:	9b10      	ldr	r3, [sp, #64]	; 0x40
2fff6f76:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff6f7a:	4a57      	ldr	r2, [pc, #348]	; (2fff70d8 <i2c_write+0x210>)
2fff6f7c:	4359      	muls	r1, r3
2fff6f7e:	2300      	movs	r3, #0
2fff6f80:	fba1 0100 	umull	r0, r1, r1, r0
2fff6f84:	f002 ea2c 	blx	2fff93e0 <__aeabi_uldivmod>
2fff6f88:	9b02      	ldr	r3, [sp, #8]
2fff6f8a:	18c6      	adds	r6, r0, r3
2fff6f8c:	9b03      	ldr	r3, [sp, #12]
2fff6f8e:	6820      	ldr	r0, [r4, #0]
2fff6f90:	eb41 0a03 	adc.w	sl, r1, r3
2fff6f94:	9b11      	ldr	r3, [sp, #68]	; 0x44
2fff6f96:	2b40      	cmp	r3, #64	; 0x40
2fff6f98:	4b50      	ldr	r3, [pc, #320]	; (2fff70dc <i2c_write+0x214>)
2fff6f9a:	9300      	str	r3, [sp, #0]
2fff6f9c:	d168      	bne.n	2fff7070 <i2c_write+0x1a8>
2fff6f9e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff6fa2:	465a      	mov	r2, fp
2fff6fa4:	4641      	mov	r1, r8
2fff6fa6:	f7ff fecd 	bl	2fff6d44 <i2c_transfer_config.isra.0>
2fff6faa:	4632      	mov	r2, r6
2fff6fac:	4653      	mov	r3, sl
2fff6fae:	4620      	mov	r0, r4
2fff6fb0:	f7ff ff48 	bl	2fff6e44 <i2c_wait_txis>
2fff6fb4:	2800      	cmp	r0, #0
2fff6fb6:	d1c6      	bne.n	2fff6f46 <i2c_write+0x7e>
2fff6fb8:	6823      	ldr	r3, [r4, #0]
2fff6fba:	f1bb 0f01 	cmp.w	fp, #1
2fff6fbe:	d119      	bne.n	2fff6ff4 <i2c_write+0x12c>
2fff6fc0:	fa5f f989 	uxtb.w	r9, r9
2fff6fc4:	f883 9028 	strb.w	r9, [r3, #40]	; 0x28
2fff6fc8:	2200      	movs	r2, #0
2fff6fca:	2180      	movs	r1, #128	; 0x80
2fff6fcc:	4620      	mov	r0, r4
2fff6fce:	e9cd 6a00 	strd	r6, sl, [sp]
2fff6fd2:	f7ff fecd 	bl	2fff6d70 <i2c_wait_flag>
2fff6fd6:	4603      	mov	r3, r0
2fff6fd8:	2800      	cmp	r0, #0
2fff6fda:	d1b4      	bne.n	2fff6f46 <i2c_write+0x7e>
2fff6fdc:	6820      	ldr	r0, [r4, #0]
2fff6fde:	2dff      	cmp	r5, #255	; 0xff
2fff6fe0:	9300      	str	r3, [sp, #0]
2fff6fe2:	d916      	bls.n	2fff7012 <i2c_write+0x14a>
2fff6fe4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff6fe8:	22ff      	movs	r2, #255	; 0xff
2fff6fea:	4641      	mov	r1, r8
2fff6fec:	25ff      	movs	r5, #255	; 0xff
2fff6fee:	f7ff fea9 	bl	2fff6d44 <i2c_transfer_config.isra.0>
2fff6ff2:	e014      	b.n	2fff701e <i2c_write+0x156>
2fff6ff4:	ea4f 2219 	mov.w	r2, r9, lsr #8
2fff6ff8:	4620      	mov	r0, r4
2fff6ffa:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2fff6ffe:	4632      	mov	r2, r6
2fff7000:	4653      	mov	r3, sl
2fff7002:	f7ff ff1f 	bl	2fff6e44 <i2c_wait_txis>
2fff7006:	2800      	cmp	r0, #0
2fff7008:	d19d      	bne.n	2fff6f46 <i2c_write+0x7e>
2fff700a:	6823      	ldr	r3, [r4, #0]
2fff700c:	fa5f f989 	uxtb.w	r9, r9
2fff7010:	e7d8      	b.n	2fff6fc4 <i2c_write+0xfc>
2fff7012:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff7016:	462a      	mov	r2, r5
2fff7018:	4641      	mov	r1, r8
2fff701a:	f7ff fe93 	bl	2fff6d44 <i2c_transfer_config.isra.0>
2fff701e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff7020:	f103 39ff 	add.w	r9, r3, #4294967295	; 0xffffffff
2fff7024:	4632      	mov	r2, r6
2fff7026:	4653      	mov	r3, sl
2fff7028:	4620      	mov	r0, r4
2fff702a:	f7ff ff0b 	bl	2fff6e44 <i2c_wait_txis>
2fff702e:	2800      	cmp	r0, #0
2fff7030:	d189      	bne.n	2fff6f46 <i2c_write+0x7e>
2fff7032:	f819 2f01 	ldrb.w	r2, [r9, #1]!
2fff7036:	3f01      	subs	r7, #1
2fff7038:	6823      	ldr	r3, [r4, #0]
2fff703a:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2fff703e:	d031      	beq.n	2fff70a4 <i2c_write+0x1dc>
2fff7040:	3d01      	subs	r5, #1
2fff7042:	d1ef      	bne.n	2fff7024 <i2c_write+0x15c>
2fff7044:	462a      	mov	r2, r5
2fff7046:	2180      	movs	r1, #128	; 0x80
2fff7048:	4620      	mov	r0, r4
2fff704a:	e9cd 6a00 	strd	r6, sl, [sp]
2fff704e:	f7ff fe8f 	bl	2fff6d70 <i2c_wait_flag>
2fff7052:	2800      	cmp	r0, #0
2fff7054:	f47f af77 	bne.w	2fff6f46 <i2c_write+0x7e>
2fff7058:	6820      	ldr	r0, [r4, #0]
2fff705a:	2fff      	cmp	r7, #255	; 0xff
2fff705c:	9500      	str	r5, [sp, #0]
2fff705e:	d910      	bls.n	2fff7082 <i2c_write+0x1ba>
2fff7060:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff7064:	22ff      	movs	r2, #255	; 0xff
2fff7066:	4641      	mov	r1, r8
2fff7068:	25ff      	movs	r5, #255	; 0xff
2fff706a:	f7ff fe6b 	bl	2fff6d44 <i2c_transfer_config.isra.0>
2fff706e:	e7d9      	b.n	2fff7024 <i2c_write+0x15c>
2fff7070:	2dff      	cmp	r5, #255	; 0xff
2fff7072:	d8b7      	bhi.n	2fff6fe4 <i2c_write+0x11c>
2fff7074:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff7078:	462a      	mov	r2, r5
2fff707a:	4641      	mov	r1, r8
2fff707c:	f7ff fe62 	bl	2fff6d44 <i2c_transfer_config.isra.0>
2fff7080:	e7cd      	b.n	2fff701e <i2c_write+0x156>
2fff7082:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff7086:	b2ba      	uxth	r2, r7
2fff7088:	4641      	mov	r1, r8
2fff708a:	463d      	mov	r5, r7
2fff708c:	f7ff fe5a 	bl	2fff6d44 <i2c_transfer_config.isra.0>
2fff7090:	e7c8      	b.n	2fff7024 <i2c_write+0x15c>
2fff7092:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff7096:	e75d      	b.n	2fff6f54 <i2c_write+0x8c>
2fff7098:	f06f 050f 	mvn.w	r5, #15
2fff709c:	e75a      	b.n	2fff6f54 <i2c_write+0x8c>
2fff709e:	f06f 0515 	mvn.w	r5, #21
2fff70a2:	e757      	b.n	2fff6f54 <i2c_write+0x8c>
2fff70a4:	4632      	mov	r2, r6
2fff70a6:	4653      	mov	r3, sl
2fff70a8:	4620      	mov	r0, r4
2fff70aa:	f7ff feec 	bl	2fff6e86 <i2c_wait_stop>
2fff70ae:	4605      	mov	r5, r0
2fff70b0:	2800      	cmp	r0, #0
2fff70b2:	f47f af48 	bne.w	2fff6f46 <i2c_write+0x7e>
2fff70b6:	6823      	ldr	r3, [r4, #0]
2fff70b8:	2220      	movs	r2, #32
2fff70ba:	61da      	str	r2, [r3, #28]
2fff70bc:	6821      	ldr	r1, [r4, #0]
2fff70be:	684b      	ldr	r3, [r1, #4]
2fff70c0:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2fff70c4:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2fff70c8:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2fff70cc:	f023 0301 	bic.w	r3, r3, #1
2fff70d0:	604b      	str	r3, [r1, #4]
2fff70d2:	6122      	str	r2, [r4, #16]
2fff70d4:	6167      	str	r7, [r4, #20]
2fff70d6:	e738      	b.n	2fff6f4a <i2c_write+0x82>
2fff70d8:	000f4240 	.word	0x000f4240
2fff70dc:	80002000 	.word	0x80002000

2fff70e0 <i2c_read.isra.0>:
2fff70e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff70e4:	b085      	sub	sp, #20
2fff70e6:	4699      	mov	r9, r3
2fff70e8:	4604      	mov	r4, r0
2fff70ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
2fff70ec:	4688      	mov	r8, r1
2fff70ee:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
2fff70f2:	4617      	mov	r7, r2
2fff70f4:	2b10      	cmp	r3, #16
2fff70f6:	d002      	beq.n	2fff70fe <i2c_read.isra.0+0x1e>
2fff70f8:	2b40      	cmp	r3, #64	; 0x40
2fff70fa:	f040 80be 	bne.w	2fff727a <i2c_read.isra.0+0x19a>
2fff70fe:	6923      	ldr	r3, [r4, #16]
2fff7100:	2b20      	cmp	r3, #32
2fff7102:	f040 80bd 	bne.w	2fff7280 <i2c_read.isra.0+0x1a0>
2fff7106:	7b23      	ldrb	r3, [r4, #12]
2fff7108:	2b00      	cmp	r3, #0
2fff710a:	f040 80b9 	bne.w	2fff7280 <i2c_read.isra.0+0x1a0>
2fff710e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff7110:	2b00      	cmp	r3, #0
2fff7112:	f000 80b8 	beq.w	2fff7286 <i2c_read.isra.0+0x1a6>
2fff7116:	f1ba 0f00 	cmp.w	sl, #0
2fff711a:	f000 80b4 	beq.w	2fff7286 <i2c_read.isra.0+0x1a6>
2fff711e:	68a0      	ldr	r0, [r4, #8]
2fff7120:	f04f 0b01 	mov.w	fp, #1
2fff7124:	f7fe fbba 	bl	2fff589c <stm32mp_clk_enable>
2fff7128:	f884 b00c 	strb.w	fp, [r4, #12]
2fff712c:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff7130:	ec56 5f0e 	mrrc	15, 0, r5, r6, cr14
2fff7134:	4a62      	ldr	r2, [pc, #392]	; (2fff72c0 <i2c_read.isra.0+0x1e0>)
2fff7136:	f246 11a8 	movw	r1, #25000	; 0x61a8
2fff713a:	2300      	movs	r3, #0
2fff713c:	fba0 0101 	umull	r0, r1, r0, r1
2fff7140:	f002 e94e 	blx	2fff93e0 <__aeabi_uldivmod>
2fff7144:	1943      	adds	r3, r0, r5
2fff7146:	465a      	mov	r2, fp
2fff7148:	eb41 0606 	adc.w	r6, r1, r6
2fff714c:	4620      	mov	r0, r4
2fff714e:	e9cd 3600 	strd	r3, r6, [sp]
2fff7152:	9303      	str	r3, [sp, #12]
2fff7154:	f44f 4100 	mov.w	r1, #32768	; 0x8000
2fff7158:	f7ff fe0a 	bl	2fff6d70 <i2c_wait_flag>
2fff715c:	4603      	mov	r3, r0
2fff715e:	b150      	cbz	r0, 2fff7176 <i2c_read.isra.0+0x96>
2fff7160:	f06f 0504 	mvn.w	r5, #4
2fff7164:	68a0      	ldr	r0, [r4, #8]
2fff7166:	2300      	movs	r3, #0
2fff7168:	7323      	strb	r3, [r4, #12]
2fff716a:	f7fe fb9a 	bl	2fff58a2 <stm32mp_clk_disable>
2fff716e:	4628      	mov	r0, r5
2fff7170:	b005      	add	sp, #20
2fff7172:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff7176:	61a0      	str	r0, [r4, #24]
2fff7178:	2222      	movs	r2, #34	; 0x22
2fff717a:	6122      	str	r2, [r4, #16]
2fff717c:	9a10      	ldr	r2, [sp, #64]	; 0x40
2fff717e:	6162      	str	r2, [r4, #20]
2fff7180:	2a40      	cmp	r2, #64	; 0x40
2fff7182:	d00d      	beq.n	2fff71a0 <i2c_read.isra.0+0xc0>
2fff7184:	6820      	ldr	r0, [r4, #0]
2fff7186:	4657      	mov	r7, sl
2fff7188:	4b4e      	ldr	r3, [pc, #312]	; (2fff72c4 <i2c_read.isra.0+0x1e4>)
2fff718a:	2fff      	cmp	r7, #255	; 0xff
2fff718c:	d835      	bhi.n	2fff71fa <i2c_read.isra.0+0x11a>
2fff718e:	9300      	str	r3, [sp, #0]
2fff7190:	4652      	mov	r2, sl
2fff7192:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff7196:	4641      	mov	r1, r8
2fff7198:	46d1      	mov	r9, sl
2fff719a:	f7ff fdd3 	bl	2fff6d44 <i2c_transfer_config.isra.0>
2fff719e:	e035      	b.n	2fff720c <i2c_read.isra.0+0x12c>
2fff71a0:	4a49      	ldr	r2, [pc, #292]	; (2fff72c8 <i2c_read.isra.0+0x1e8>)
2fff71a2:	4641      	mov	r1, r8
2fff71a4:	6820      	ldr	r0, [r4, #0]
2fff71a6:	9200      	str	r2, [sp, #0]
2fff71a8:	464a      	mov	r2, r9
2fff71aa:	f7ff fdcb 	bl	2fff6d44 <i2c_transfer_config.isra.0>
2fff71ae:	9a03      	ldr	r2, [sp, #12]
2fff71b0:	4633      	mov	r3, r6
2fff71b2:	4620      	mov	r0, r4
2fff71b4:	f7ff fe46 	bl	2fff6e44 <i2c_wait_txis>
2fff71b8:	2800      	cmp	r0, #0
2fff71ba:	d1d1      	bne.n	2fff7160 <i2c_read.isra.0+0x80>
2fff71bc:	6823      	ldr	r3, [r4, #0]
2fff71be:	f1b9 0f01 	cmp.w	r9, #1
2fff71c2:	d10d      	bne.n	2fff71e0 <i2c_read.isra.0+0x100>
2fff71c4:	b2ff      	uxtb	r7, r7
2fff71c6:	f883 7028 	strb.w	r7, [r3, #40]	; 0x28
2fff71ca:	2200      	movs	r2, #0
2fff71cc:	9b03      	ldr	r3, [sp, #12]
2fff71ce:	2140      	movs	r1, #64	; 0x40
2fff71d0:	4620      	mov	r0, r4
2fff71d2:	e9cd 3600 	strd	r3, r6, [sp]
2fff71d6:	f7ff fdcb 	bl	2fff6d70 <i2c_wait_flag>
2fff71da:	2800      	cmp	r0, #0
2fff71dc:	d0d2      	beq.n	2fff7184 <i2c_read.isra.0+0xa4>
2fff71de:	e7bf      	b.n	2fff7160 <i2c_read.isra.0+0x80>
2fff71e0:	0a3a      	lsrs	r2, r7, #8
2fff71e2:	4620      	mov	r0, r4
2fff71e4:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
2fff71e8:	4633      	mov	r3, r6
2fff71ea:	9a03      	ldr	r2, [sp, #12]
2fff71ec:	f7ff fe2a 	bl	2fff6e44 <i2c_wait_txis>
2fff71f0:	2800      	cmp	r0, #0
2fff71f2:	d1b5      	bne.n	2fff7160 <i2c_read.isra.0+0x80>
2fff71f4:	6823      	ldr	r3, [r4, #0]
2fff71f6:	b2ff      	uxtb	r7, r7
2fff71f8:	e7e5      	b.n	2fff71c6 <i2c_read.isra.0+0xe6>
2fff71fa:	9300      	str	r3, [sp, #0]
2fff71fc:	22ff      	movs	r2, #255	; 0xff
2fff71fe:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff7202:	4641      	mov	r1, r8
2fff7204:	f04f 09ff 	mov.w	r9, #255	; 0xff
2fff7208:	f7ff fd9c 	bl	2fff6d44 <i2c_transfer_config.isra.0>
2fff720c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
2fff720e:	f103 3aff 	add.w	sl, r3, #4294967295	; 0xffffffff
2fff7212:	9b03      	ldr	r3, [sp, #12]
2fff7214:	2200      	movs	r2, #0
2fff7216:	2104      	movs	r1, #4
2fff7218:	4620      	mov	r0, r4
2fff721a:	e9cd 3600 	strd	r3, r6, [sp]
2fff721e:	f7ff fda7 	bl	2fff6d70 <i2c_wait_flag>
2fff7222:	2800      	cmp	r0, #0
2fff7224:	d19c      	bne.n	2fff7160 <i2c_read.isra.0+0x80>
2fff7226:	6823      	ldr	r3, [r4, #0]
2fff7228:	3f01      	subs	r7, #1
2fff722a:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
2fff722e:	f80a 3f01 	strb.w	r3, [sl, #1]!
2fff7232:	d02b      	beq.n	2fff728c <i2c_read.isra.0+0x1ac>
2fff7234:	f1b9 0901 	subs.w	r9, r9, #1
2fff7238:	d1eb      	bne.n	2fff7212 <i2c_read.isra.0+0x132>
2fff723a:	9b03      	ldr	r3, [sp, #12]
2fff723c:	464a      	mov	r2, r9
2fff723e:	2180      	movs	r1, #128	; 0x80
2fff7240:	4620      	mov	r0, r4
2fff7242:	e9cd 3600 	strd	r3, r6, [sp]
2fff7246:	f7ff fd93 	bl	2fff6d70 <i2c_wait_flag>
2fff724a:	2800      	cmp	r0, #0
2fff724c:	d188      	bne.n	2fff7160 <i2c_read.isra.0+0x80>
2fff724e:	6820      	ldr	r0, [r4, #0]
2fff7250:	2fff      	cmp	r7, #255	; 0xff
2fff7252:	f8cd 9000 	str.w	r9, [sp]
2fff7256:	d908      	bls.n	2fff726a <i2c_read.isra.0+0x18a>
2fff7258:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
2fff725c:	22ff      	movs	r2, #255	; 0xff
2fff725e:	4641      	mov	r1, r8
2fff7260:	f04f 09ff 	mov.w	r9, #255	; 0xff
2fff7264:	f7ff fd6e 	bl	2fff6d44 <i2c_transfer_config.isra.0>
2fff7268:	e7d3      	b.n	2fff7212 <i2c_read.isra.0+0x132>
2fff726a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
2fff726e:	b2ba      	uxth	r2, r7
2fff7270:	4641      	mov	r1, r8
2fff7272:	46b9      	mov	r9, r7
2fff7274:	f7ff fd66 	bl	2fff6d44 <i2c_transfer_config.isra.0>
2fff7278:	e7cb      	b.n	2fff7212 <i2c_read.isra.0+0x132>
2fff727a:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff727e:	e776      	b.n	2fff716e <i2c_read.isra.0+0x8e>
2fff7280:	f06f 050f 	mvn.w	r5, #15
2fff7284:	e773      	b.n	2fff716e <i2c_read.isra.0+0x8e>
2fff7286:	f06f 0515 	mvn.w	r5, #21
2fff728a:	e770      	b.n	2fff716e <i2c_read.isra.0+0x8e>
2fff728c:	9a03      	ldr	r2, [sp, #12]
2fff728e:	4633      	mov	r3, r6
2fff7290:	4620      	mov	r0, r4
2fff7292:	f7ff fdf8 	bl	2fff6e86 <i2c_wait_stop>
2fff7296:	4605      	mov	r5, r0
2fff7298:	2800      	cmp	r0, #0
2fff729a:	f47f af61 	bne.w	2fff7160 <i2c_read.isra.0+0x80>
2fff729e:	6823      	ldr	r3, [r4, #0]
2fff72a0:	2220      	movs	r2, #32
2fff72a2:	61da      	str	r2, [r3, #28]
2fff72a4:	6821      	ldr	r1, [r4, #0]
2fff72a6:	684b      	ldr	r3, [r1, #4]
2fff72a8:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
2fff72ac:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
2fff72b0:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
2fff72b4:	f023 0301 	bic.w	r3, r3, #1
2fff72b8:	604b      	str	r3, [r1, #4]
2fff72ba:	6122      	str	r2, [r4, #16]
2fff72bc:	6167      	str	r7, [r4, #20]
2fff72be:	e751      	b.n	2fff7164 <i2c_read.isra.0+0x84>
2fff72c0:	000f4240 	.word	0x000f4240
2fff72c4:	80002400 	.word	0x80002400
2fff72c8:	80002000 	.word	0x80002000

2fff72cc <stm32_i2c_get_setup_from_fdt>:
2fff72cc:	b538      	push	{r3, r4, r5, lr}
2fff72ce:	2219      	movs	r2, #25
2fff72d0:	460d      	mov	r5, r1
2fff72d2:	4604      	mov	r4, r0
2fff72d4:	490f      	ldr	r1, [pc, #60]	; (2fff7314 <stm32_i2c_get_setup_from_fdt+0x48>)
2fff72d6:	f001 f9f7 	bl	2fff86c8 <fdt_read_uint32_default>
2fff72da:	61e8      	str	r0, [r5, #28]
2fff72dc:	220a      	movs	r2, #10
2fff72de:	490e      	ldr	r1, [pc, #56]	; (2fff7318 <stm32_i2c_get_setup_from_fdt+0x4c>)
2fff72e0:	4620      	mov	r0, r4
2fff72e2:	f001 f9f1 	bl	2fff86c8 <fdt_read_uint32_default>
2fff72e6:	6228      	str	r0, [r5, #32]
2fff72e8:	4620      	mov	r0, r4
2fff72ea:	4a0c      	ldr	r2, [pc, #48]	; (2fff731c <stm32_i2c_get_setup_from_fdt+0x50>)
2fff72ec:	490c      	ldr	r1, [pc, #48]	; (2fff7320 <stm32_i2c_get_setup_from_fdt+0x54>)
2fff72ee:	f001 f9eb 	bl	2fff86c8 <fdt_read_uint32_default>
2fff72f2:	4a0c      	ldr	r2, [pc, #48]	; (2fff7324 <stm32_i2c_get_setup_from_fdt+0x58>)
2fff72f4:	4601      	mov	r1, r0
2fff72f6:	4290      	cmp	r0, r2
2fff72f8:	d805      	bhi.n	2fff7306 <stm32_i2c_get_setup_from_fdt+0x3a>
2fff72fa:	6268      	str	r0, [r5, #36]	; 0x24
2fff72fc:	4620      	mov	r0, r4
2fff72fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff7302:	f7ff bbed 	b.w	2fff6ae0 <dt_set_pinctrl_config>
2fff7306:	4808      	ldr	r0, [pc, #32]	; (2fff7328 <stm32_i2c_get_setup_from_fdt+0x5c>)
2fff7308:	f7fb fd08 	bl	2fff2d1c <tf_log>
2fff730c:	f06f 000e 	mvn.w	r0, #14
2fff7310:	bd38      	pop	{r3, r4, r5, pc}
2fff7312:	bf00      	nop
2fff7314:	2fffc1fb 	.word	0x2fffc1fb
2fff7318:	2fffc212 	.word	0x2fffc212
2fff731c:	000186a0 	.word	0x000186a0
2fff7320:	2fffbbc8 	.word	0x2fffbbc8
2fff7324:	000f4240 	.word	0x000f4240
2fff7328:	2fffc22a 	.word	0x2fffc22a

2fff732c <stm32_i2c_init>:
2fff732c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff7330:	460d      	mov	r5, r1
2fff7332:	b0a5      	sub	sp, #148	; 0x94
2fff7334:	4604      	mov	r4, r0
2fff7336:	2800      	cmp	r0, #0
2fff7338:	f000 8213 	beq.w	2fff7762 <stm32_i2c_init+0x436>
2fff733c:	6903      	ldr	r3, [r0, #16]
2fff733e:	b903      	cbnz	r3, 2fff7342 <stm32_i2c_init+0x16>
2fff7340:	7303      	strb	r3, [r0, #12]
2fff7342:	68a0      	ldr	r0, [r4, #8]
2fff7344:	2324      	movs	r3, #36	; 0x24
2fff7346:	6123      	str	r3, [r4, #16]
2fff7348:	f7fe fad4 	bl	2fff58f4 <stm32mp_clk_get_rate>
2fff734c:	4683      	mov	fp, r0
2fff734e:	b940      	cbnz	r0, 2fff7362 <stm32_i2c_init+0x36>
2fff7350:	489a      	ldr	r0, [pc, #616]	; (2fff75bc <stm32_i2c_init+0x290>)
2fff7352:	f06f 0815 	mvn.w	r8, #21
2fff7356:	f7fb fce1 	bl	2fff2d1c <tf_log>
2fff735a:	4640      	mov	r0, r8
2fff735c:	b025      	add	sp, #148	; 0x94
2fff735e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff7362:	6a23      	ldr	r3, [r4, #32]
2fff7364:	4298      	cmp	r0, r3
2fff7366:	d02d      	beq.n	2fff73c4 <stm32_i2c_init+0x98>
2fff7368:	4b95      	ldr	r3, [pc, #596]	; (2fff75c0 <stm32_i2c_init+0x294>)
2fff736a:	eb03 0650 	add.w	r6, r3, r0, lsr #1
2fff736e:	9306      	str	r3, [sp, #24]
2fff7370:	fbb6 f2f0 	udiv	r2, r6, r0
2fff7374:	9203      	str	r2, [sp, #12]
2fff7376:	0052      	lsls	r2, r2, #1
2fff7378:	920b      	str	r2, [sp, #44]	; 0x2c
2fff737a:	6a69      	ldr	r1, [r5, #36]	; 0x24
2fff737c:	4b91      	ldr	r3, [pc, #580]	; (2fff75c4 <stm32_i2c_init+0x298>)
2fff737e:	4299      	cmp	r1, r3
2fff7380:	d97f      	bls.n	2fff7482 <stm32_i2c_init+0x156>
2fff7382:	4b91      	ldr	r3, [pc, #580]	; (2fff75c8 <stm32_i2c_init+0x29c>)
2fff7384:	4299      	cmp	r1, r3
2fff7386:	d97f      	bls.n	2fff7488 <stm32_i2c_init+0x15c>
2fff7388:	4b90      	ldr	r3, [pc, #576]	; (2fff75cc <stm32_i2c_init+0x2a0>)
2fff738a:	4299      	cmp	r1, r3
2fff738c:	d87f      	bhi.n	2fff748e <stm32_i2c_init+0x162>
2fff738e:	f04f 0902 	mov.w	r9, #2
2fff7392:	4a8f      	ldr	r2, [pc, #572]	; (2fff75d0 <stm32_i2c_init+0x2a4>)
2fff7394:	ea4f 1349 	mov.w	r3, r9, lsl #5
2fff7398:	eb02 1049 	add.w	r0, r2, r9, lsl #5
2fff739c:	f852 a003 	ldr.w	sl, [r2, r3]
2fff73a0:	9b06      	ldr	r3, [sp, #24]
2fff73a2:	6882      	ldr	r2, [r0, #8]
2fff73a4:	eb03 035a 	add.w	r3, r3, sl, lsr #1
2fff73a8:	69e9      	ldr	r1, [r5, #28]
2fff73aa:	fbb3 f3fa 	udiv	r3, r3, sl
2fff73ae:	4291      	cmp	r1, r2
2fff73b0:	9309      	str	r3, [sp, #36]	; 0x24
2fff73b2:	6840      	ldr	r0, [r0, #4]
2fff73b4:	6a2b      	ldr	r3, [r5, #32]
2fff73b6:	f240 8083 	bls.w	2fff74c0 <stm32_i2c_init+0x194>
2fff73ba:	9000      	str	r0, [sp, #0]
2fff73bc:	4885      	ldr	r0, [pc, #532]	; (2fff75d4 <stm32_i2c_init+0x2a8>)
2fff73be:	f7fb fcad 	bl	2fff2d1c <tf_log>
2fff73c2:	e067      	b.n	2fff7494 <stm32_i2c_init+0x168>
2fff73c4:	69e6      	ldr	r6, [r4, #28]
2fff73c6:	68a0      	ldr	r0, [r4, #8]
2fff73c8:	f026 6670 	bic.w	r6, r6, #251658240	; 0xf000000
2fff73cc:	f7fe fa66 	bl	2fff589c <stm32mp_clk_enable>
2fff73d0:	6822      	ldr	r2, [r4, #0]
2fff73d2:	2120      	movs	r1, #32
2fff73d4:	6813      	ldr	r3, [r2, #0]
2fff73d6:	f023 0301 	bic.w	r3, r3, #1
2fff73da:	6013      	str	r3, [r2, #0]
2fff73dc:	6823      	ldr	r3, [r4, #0]
2fff73de:	611e      	str	r6, [r3, #16]
2fff73e0:	6822      	ldr	r2, [r4, #0]
2fff73e2:	6893      	ldr	r3, [r2, #8]
2fff73e4:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
2fff73e8:	6093      	str	r3, [r2, #8]
2fff73ea:	686b      	ldr	r3, [r5, #4]
2fff73ec:	6822      	ldr	r2, [r4, #0]
2fff73ee:	2b01      	cmp	r3, #1
2fff73f0:	682b      	ldr	r3, [r5, #0]
2fff73f2:	bf0c      	ite	eq
2fff73f4:	f443 4300 	orreq.w	r3, r3, #32768	; 0x8000
2fff73f8:	f443 4304 	orrne.w	r3, r3, #33792	; 0x8400
2fff73fc:	6093      	str	r3, [r2, #8]
2fff73fe:	2200      	movs	r2, #0
2fff7400:	6823      	ldr	r3, [r4, #0]
2fff7402:	605a      	str	r2, [r3, #4]
2fff7404:	686b      	ldr	r3, [r5, #4]
2fff7406:	2b02      	cmp	r3, #2
2fff7408:	bf01      	itttt	eq
2fff740a:	6822      	ldreq	r2, [r4, #0]
2fff740c:	6853      	ldreq	r3, [r2, #4]
2fff740e:	f443 6300 	orreq.w	r3, r3, #2048	; 0x800
2fff7412:	6053      	streq	r3, [r2, #4]
2fff7414:	6822      	ldr	r2, [r4, #0]
2fff7416:	6853      	ldr	r3, [r2, #4]
2fff7418:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
2fff741c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
2fff7420:	6053      	str	r3, [r2, #4]
2fff7422:	6822      	ldr	r2, [r4, #0]
2fff7424:	68d3      	ldr	r3, [r2, #12]
2fff7426:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
2fff742a:	60d3      	str	r3, [r2, #12]
2fff742c:	68ea      	ldr	r2, [r5, #12]
2fff742e:	68ab      	ldr	r3, [r5, #8]
2fff7430:	4313      	orrs	r3, r2
2fff7432:	692a      	ldr	r2, [r5, #16]
2fff7434:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
2fff7438:	6822      	ldr	r2, [r4, #0]
2fff743a:	60d3      	str	r3, [r2, #12]
2fff743c:	69aa      	ldr	r2, [r5, #24]
2fff743e:	696b      	ldr	r3, [r5, #20]
2fff7440:	4313      	orrs	r3, r2
2fff7442:	6822      	ldr	r2, [r4, #0]
2fff7444:	6013      	str	r3, [r2, #0]
2fff7446:	6822      	ldr	r2, [r4, #0]
2fff7448:	6813      	ldr	r3, [r2, #0]
2fff744a:	f043 0301 	orr.w	r3, r3, #1
2fff744e:	6013      	str	r3, [r2, #0]
2fff7450:	2300      	movs	r3, #0
2fff7452:	61a3      	str	r3, [r4, #24]
2fff7454:	6163      	str	r3, [r4, #20]
2fff7456:	6aab      	ldr	r3, [r5, #40]	; 0x28
2fff7458:	7b25      	ldrb	r5, [r4, #12]
2fff745a:	6121      	str	r1, [r4, #16]
2fff745c:	2b00      	cmp	r3, #0
2fff745e:	bf14      	ite	ne
2fff7460:	2300      	movne	r3, #0
2fff7462:	f44f 5380 	moveq.w	r3, #4096	; 0x1000
2fff7466:	2d00      	cmp	r5, #0
2fff7468:	f000 815d 	beq.w	2fff7726 <stm32_i2c_init+0x3fa>
2fff746c:	485a      	ldr	r0, [pc, #360]	; (2fff75d8 <stm32_i2c_init+0x2ac>)
2fff746e:	f06f 010f 	mvn.w	r1, #15
2fff7472:	f06f 080f 	mvn.w	r8, #15
2fff7476:	f7fb fc51 	bl	2fff2d1c <tf_log>
2fff747a:	68a0      	ldr	r0, [r4, #8]
2fff747c:	f7fe fa11 	bl	2fff58a2 <stm32mp_clk_disable>
2fff7480:	e76b      	b.n	2fff735a <stm32_i2c_init+0x2e>
2fff7482:	f04f 0900 	mov.w	r9, #0
2fff7486:	e784      	b.n	2fff7392 <stm32_i2c_init+0x66>
2fff7488:	f04f 0901 	mov.w	r9, #1
2fff748c:	e781      	b.n	2fff7392 <stm32_i2c_init+0x66>
2fff748e:	4853      	ldr	r0, [pc, #332]	; (2fff75dc <stm32_i2c_init+0x2b0>)
2fff7490:	f7fb fc44 	bl	2fff2d1c <tf_log>
2fff7494:	f06f 0815 	mvn.w	r8, #21
2fff7498:	4851      	ldr	r0, [pc, #324]	; (2fff75e0 <stm32_i2c_init+0x2b4>)
2fff749a:	f7fb fc3f 	bl	2fff2d1c <tf_log>
2fff749e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
2fff74a0:	4a48      	ldr	r2, [pc, #288]	; (2fff75c4 <stm32_i2c_init+0x298>)
2fff74a2:	4293      	cmp	r3, r2
2fff74a4:	f240 8160 	bls.w	2fff7768 <stm32_i2c_init+0x43c>
2fff74a8:	4948      	ldr	r1, [pc, #288]	; (2fff75cc <stm32_i2c_init+0x2a0>)
2fff74aa:	428b      	cmp	r3, r1
2fff74ac:	d803      	bhi.n	2fff74b6 <stm32_i2c_init+0x18a>
2fff74ae:	4946      	ldr	r1, [pc, #280]	; (2fff75c8 <stm32_i2c_init+0x29c>)
2fff74b0:	428b      	cmp	r3, r1
2fff74b2:	bf98      	it	ls
2fff74b4:	4611      	movls	r1, r2
2fff74b6:	484b      	ldr	r0, [pc, #300]	; (2fff75e4 <stm32_i2c_init+0x2b8>)
2fff74b8:	6269      	str	r1, [r5, #36]	; 0x24
2fff74ba:	f7fb fc2f 	bl	2fff2d1c <tf_log>
2fff74be:	e75c      	b.n	2fff737a <stm32_i2c_init+0x4e>
2fff74c0:	4298      	cmp	r0, r3
2fff74c2:	f4ff af7a 	bcc.w	2fff73ba <stm32_i2c_init+0x8e>
2fff74c6:	f895 802c 	ldrb.w	r8, [r5, #44]	; 0x2c
2fff74ca:	f1b8 0f10 	cmp.w	r8, #16
2fff74ce:	d905      	bls.n	2fff74dc <stm32_i2c_init+0x1b0>
2fff74d0:	4845      	ldr	r0, [pc, #276]	; (2fff75e8 <stm32_i2c_init+0x2bc>)
2fff74d2:	2210      	movs	r2, #16
2fff74d4:	4641      	mov	r1, r8
2fff74d6:	f7fb fc21 	bl	2fff2d1c <tf_log>
2fff74da:	e7db      	b.n	2fff7494 <stm32_i2c_init+0x168>
2fff74dc:	6aaf      	ldr	r7, [r5, #40]	; 0x28
2fff74de:	2f00      	cmp	r7, #0
2fff74e0:	d130      	bne.n	2fff7544 <stm32_i2c_init+0x218>
2fff74e2:	46bc      	mov	ip, r7
2fff74e4:	9a03      	ldr	r2, [sp, #12]
2fff74e6:	fb02 f208 	mul.w	r2, r2, r8
2fff74ea:	f108 0803 	add.w	r8, r8, #3
2fff74ee:	9207      	str	r2, [sp, #28]
2fff74f0:	9a03      	ldr	r2, [sp, #12]
2fff74f2:	fb02 f808 	mul.w	r8, r2, r8
2fff74f6:	4a36      	ldr	r2, [pc, #216]	; (2fff75d0 <stm32_i2c_init+0x2a4>)
2fff74f8:	eba3 0308 	sub.w	r3, r3, r8
2fff74fc:	eb02 1049 	add.w	r0, r2, r9, lsl #5
2fff7500:	68c2      	ldr	r2, [r0, #12]
2fff7502:	4413      	add	r3, r2
2fff7504:	1bdb      	subs	r3, r3, r7
2fff7506:	9304      	str	r3, [sp, #16]
2fff7508:	9b03      	ldr	r3, [sp, #12]
2fff750a:	4498      	add	r8, r3
2fff750c:	6903      	ldr	r3, [r0, #16]
2fff750e:	4488      	add	r8, r1
2fff7510:	eba3 0808 	sub.w	r8, r3, r8
2fff7514:	6943      	ldr	r3, [r0, #20]
2fff7516:	a810      	add	r0, sp, #64	; 0x40
2fff7518:	eba8 080c 	sub.w	r8, r8, ip
2fff751c:	18cb      	adds	r3, r1, r3
2fff751e:	2150      	movs	r1, #80	; 0x50
2fff7520:	930a      	str	r3, [sp, #40]	; 0x28
2fff7522:	9b04      	ldr	r3, [sp, #16]
2fff7524:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
2fff7528:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
2fff752c:	9304      	str	r3, [sp, #16]
2fff752e:	f001 ef10 	blx	2fff9350 <zero_normalmem>
2fff7532:	9803      	ldr	r0, [sp, #12]
2fff7534:	2300      	movs	r3, #0
2fff7536:	f04f 0c10 	mov.w	ip, #16
2fff753a:	9005      	str	r0, [sp, #20]
2fff753c:	1c59      	adds	r1, r3, #1
2fff753e:	9108      	str	r1, [sp, #32]
2fff7540:	2200      	movs	r2, #0
2fff7542:	e011      	b.n	2fff7568 <stm32_i2c_init+0x23c>
2fff7544:	2732      	movs	r7, #50	; 0x32
2fff7546:	f44f 7c82 	mov.w	ip, #260	; 0x104
2fff754a:	e7cb      	b.n	2fff74e4 <stm32_i2c_init+0x1b8>
2fff754c:	4486      	add	lr, r0
2fff754e:	3101      	adds	r1, #1
2fff7550:	b289      	uxth	r1, r1
2fff7552:	2910      	cmp	r1, #16
2fff7554:	d110      	bne.n	2fff7578 <stm32_i2c_init+0x24c>
2fff7556:	4563      	cmp	r3, ip
2fff7558:	d022      	beq.n	2fff75a0 <stm32_i2c_init+0x274>
2fff755a:	9905      	ldr	r1, [sp, #20]
2fff755c:	3201      	adds	r2, #1
2fff755e:	b292      	uxth	r2, r2
2fff7560:	4401      	add	r1, r0
2fff7562:	2a10      	cmp	r2, #16
2fff7564:	9105      	str	r1, [sp, #20]
2fff7566:	d01b      	beq.n	2fff75a0 <stm32_i2c_init+0x274>
2fff7568:	990a      	ldr	r1, [sp, #40]	; 0x28
2fff756a:	460e      	mov	r6, r1
2fff756c:	9905      	ldr	r1, [sp, #20]
2fff756e:	428e      	cmp	r6, r1
2fff7570:	d8f3      	bhi.n	2fff755a <stm32_i2c_init+0x22e>
2fff7572:	f8dd e00c 	ldr.w	lr, [sp, #12]
2fff7576:	2100      	movs	r1, #0
2fff7578:	9e04      	ldr	r6, [sp, #16]
2fff757a:	4576      	cmp	r6, lr
2fff757c:	d8e6      	bhi.n	2fff754c <stm32_i2c_init+0x220>
2fff757e:	45f0      	cmp	r8, lr
2fff7580:	d3e4      	bcc.n	2fff754c <stm32_i2c_init+0x220>
2fff7582:	4563      	cmp	r3, ip
2fff7584:	d0e2      	beq.n	2fff754c <stm32_i2c_init+0x220>
2fff7586:	eb03 0c83 	add.w	ip, r3, r3, lsl #2
2fff758a:	ae24      	add	r6, sp, #144	; 0x90
2fff758c:	44b4      	add	ip, r6
2fff758e:	f80c 2c50 	strb.w	r2, [ip, #-80]
2fff7592:	f04f 0201 	mov.w	r2, #1
2fff7596:	f80c 1c4f 	strb.w	r1, [ip, #-79]
2fff759a:	f80c 2c4c 	strb.w	r2, [ip, #-76]
2fff759e:	469c      	mov	ip, r3
2fff75a0:	9b03      	ldr	r3, [sp, #12]
2fff75a2:	4418      	add	r0, r3
2fff75a4:	9b08      	ldr	r3, [sp, #32]
2fff75a6:	2b10      	cmp	r3, #16
2fff75a8:	d1c7      	bne.n	2fff753a <stm32_i2c_init+0x20e>
2fff75aa:	f1bc 0f10 	cmp.w	ip, #16
2fff75ae:	d11f      	bne.n	2fff75f0 <stm32_i2c_init+0x2c4>
2fff75b0:	480e      	ldr	r0, [pc, #56]	; (2fff75ec <stm32_i2c_init+0x2c0>)
2fff75b2:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2fff75b6:	f7fb fbb1 	bl	2fff2d1c <tf_log>
2fff75ba:	e76d      	b.n	2fff7498 <stm32_i2c_init+0x16c>
2fff75bc:	2fffc248 	.word	0x2fffc248
2fff75c0:	3b9aca00 	.word	0x3b9aca00
2fff75c4:	000186a0 	.word	0x000186a0
2fff75c8:	00061a80 	.word	0x00061a80
2fff75cc:	000f4240 	.word	0x000f4240
2fff75d0:	2fffc390 	.word	0x2fffc390
2fff75d4:	2fffc27c 	.word	0x2fffc27c
2fff75d8:	2fffc33f 	.word	0x2fffc33f
2fff75dc:	2fffc25e 	.word	0x2fffc25e
2fff75e0:	2fffc300 	.word	0x2fffc300
2fff75e4:	2fffc320 	.word	0x2fffc320
2fff75e8:	2fffc2b0 	.word	0x2fffc2b0
2fff75ec:	2fffc2c9 	.word	0x2fffc2c9
2fff75f0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
2fff75f2:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
2fff75f6:	9b07      	ldr	r3, [sp, #28]
2fff75f8:	f04f 0e00 	mov.w	lr, #0
2fff75fc:	9903      	ldr	r1, [sp, #12]
2fff75fe:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
2fff7602:	4413      	add	r3, r2
2fff7604:	443b      	add	r3, r7
2fff7606:	9308      	str	r3, [sp, #32]
2fff7608:	2364      	movs	r3, #100	; 0x64
2fff760a:	fbba f2f3 	udiv	r2, sl, r3
2fff760e:	2350      	movs	r3, #80	; 0x50
2fff7610:	4353      	muls	r3, r2
2fff7612:	9a06      	ldr	r2, [sp, #24]
2fff7614:	fbb2 f3f3 	udiv	r3, r2, r3
2fff7618:	930a      	str	r3, [sp, #40]	; 0x28
2fff761a:	fbb2 f3fa 	udiv	r3, r2, sl
2fff761e:	930c      	str	r3, [sp, #48]	; 0x30
2fff7620:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
2fff7624:	9305      	str	r3, [sp, #20]
2fff7626:	4b52      	ldr	r3, [pc, #328]	; (2fff7770 <stm32_i2c_init+0x444>)
2fff7628:	eb03 1a49 	add.w	sl, r3, r9, lsl #5
2fff762c:	9b07      	ldr	r3, [sp, #28]
2fff762e:	443b      	add	r3, r7
2fff7630:	930f      	str	r3, [sp, #60]	; 0x3c
2fff7632:	f89c 3004 	ldrb.w	r3, [ip, #4]
2fff7636:	2b00      	cmp	r3, #0
2fff7638:	d045      	beq.n	2fff76c6 <stm32_i2c_init+0x39a>
2fff763a:	f8da 3018 	ldr.w	r3, [sl, #24]
2fff763e:	930d      	str	r3, [sp, #52]	; 0x34
2fff7640:	9b08      	ldr	r3, [sp, #32]
2fff7642:	440b      	add	r3, r1
2fff7644:	9304      	str	r3, [sp, #16]
2fff7646:	4699      	mov	r9, r3
2fff7648:	2300      	movs	r3, #0
2fff764a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
2fff764c:	4591      	cmp	r9, r2
2fff764e:	d334      	bcc.n	2fff76ba <stm32_i2c_init+0x38e>
2fff7650:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
2fff7652:	9803      	ldr	r0, [sp, #12]
2fff7654:	eba9 0202 	sub.w	r2, r9, r2
2fff7658:	ebb0 0f92 	cmp.w	r0, r2, lsr #2
2fff765c:	d22d      	bcs.n	2fff76ba <stm32_i2c_init+0x38e>
2fff765e:	6a28      	ldr	r0, [r5, #32]
2fff7660:	69ea      	ldr	r2, [r5, #28]
2fff7662:	9e09      	ldr	r6, [sp, #36]	; 0x24
2fff7664:	4402      	add	r2, r0
2fff7666:	444a      	add	r2, r9
2fff7668:	9207      	str	r2, [sp, #28]
2fff766a:	2200      	movs	r2, #0
2fff766c:	9807      	ldr	r0, [sp, #28]
2fff766e:	9f04      	ldr	r7, [sp, #16]
2fff7670:	1b80      	subs	r0, r0, r6
2fff7672:	900e      	str	r0, [sp, #56]	; 0x38
2fff7674:	9807      	ldr	r0, [sp, #28]
2fff7676:	9e0c      	ldr	r6, [sp, #48]	; 0x30
2fff7678:	1838      	adds	r0, r7, r0
2fff767a:	4286      	cmp	r6, r0
2fff767c:	d817      	bhi.n	2fff76ae <stm32_i2c_init+0x382>
2fff767e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
2fff7680:	4286      	cmp	r6, r0
2fff7682:	d314      	bcc.n	2fff76ae <stm32_i2c_init+0x382>
2fff7684:	f8da 001c 	ldr.w	r0, [sl, #28]
2fff7688:	42b8      	cmp	r0, r7
2fff768a:	d810      	bhi.n	2fff76ae <stm32_i2c_init+0x382>
2fff768c:	9803      	ldr	r0, [sp, #12]
2fff768e:	42b8      	cmp	r0, r7
2fff7690:	d20d      	bcs.n	2fff76ae <stm32_i2c_init+0x382>
2fff7692:	980e      	ldr	r0, [sp, #56]	; 0x38
2fff7694:	9e05      	ldr	r6, [sp, #20]
2fff7696:	4438      	add	r0, r7
2fff7698:	2800      	cmp	r0, #0
2fff769a:	bfb8      	it	lt
2fff769c:	4240      	neglt	r0, r0
2fff769e:	42b0      	cmp	r0, r6
2fff76a0:	bfbf      	itttt	lt
2fff76a2:	f88c 3003 	strblt.w	r3, [ip, #3]
2fff76a6:	46f0      	movlt	r8, lr
2fff76a8:	f88c 2002 	strblt.w	r2, [ip, #2]
2fff76ac:	9005      	strlt	r0, [sp, #20]
2fff76ae:	440f      	add	r7, r1
2fff76b0:	3201      	adds	r2, #1
2fff76b2:	b292      	uxth	r2, r2
2fff76b4:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
2fff76b8:	d1dc      	bne.n	2fff7674 <stm32_i2c_init+0x348>
2fff76ba:	4489      	add	r9, r1
2fff76bc:	3301      	adds	r3, #1
2fff76be:	b29b      	uxth	r3, r3
2fff76c0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
2fff76c4:	d1c1      	bne.n	2fff764a <stm32_i2c_init+0x31e>
2fff76c6:	9b03      	ldr	r3, [sp, #12]
2fff76c8:	f10e 0e01 	add.w	lr, lr, #1
2fff76cc:	f1be 0f10 	cmp.w	lr, #16
2fff76d0:	f10c 0c05 	add.w	ip, ip, #5
2fff76d4:	4419      	add	r1, r3
2fff76d6:	d1ac      	bne.n	2fff7632 <stm32_i2c_init+0x306>
2fff76d8:	f1b8 3fff 	cmp.w	r8, #4294967295	; 0xffffffff
2fff76dc:	d103      	bne.n	2fff76e6 <stm32_i2c_init+0x3ba>
2fff76de:	4825      	ldr	r0, [pc, #148]	; (2fff7774 <stm32_i2c_init+0x448>)
2fff76e0:	f7fb fb1c 	bl	2fff2d1c <tf_log>
2fff76e4:	e6d8      	b.n	2fff7498 <stm32_i2c_init+0x16c>
2fff76e6:	eb08 0388 	add.w	r3, r8, r8, lsl #2
2fff76ea:	aa24      	add	r2, sp, #144	; 0x90
2fff76ec:	4413      	add	r3, r2
2fff76ee:	f8c4 b020 	str.w	fp, [r4, #32]
2fff76f2:	f813 6c4d 	ldrb.w	r6, [r3, #-77]
2fff76f6:	ea46 7608 	orr.w	r6, r6, r8, lsl #28
2fff76fa:	f813 8c4e 	ldrb.w	r8, [r3, #-78]
2fff76fe:	ea46 2608 	orr.w	r6, r6, r8, lsl #8
2fff7702:	f813 8c50 	ldrb.w	r8, [r3, #-80]
2fff7706:	ea4f 5808 	mov.w	r8, r8, lsl #20
2fff770a:	f408 0870 	and.w	r8, r8, #15728640	; 0xf00000
2fff770e:	ea46 0608 	orr.w	r6, r6, r8
2fff7712:	f813 8c4f 	ldrb.w	r8, [r3, #-79]
2fff7716:	ea4f 4808 	mov.w	r8, r8, lsl #16
2fff771a:	f408 2870 	and.w	r8, r8, #983040	; 0xf0000
2fff771e:	ea46 0608 	orr.w	r6, r6, r8
2fff7722:	61e6      	str	r6, [r4, #28]
2fff7724:	e64f      	b.n	2fff73c6 <stm32_i2c_init+0x9a>
2fff7726:	6820      	ldr	r0, [r4, #0]
2fff7728:	2201      	movs	r2, #1
2fff772a:	7322      	strb	r2, [r4, #12]
2fff772c:	2224      	movs	r2, #36	; 0x24
2fff772e:	6122      	str	r2, [r4, #16]
2fff7730:	46a8      	mov	r8, r5
2fff7732:	6802      	ldr	r2, [r0, #0]
2fff7734:	f022 0201 	bic.w	r2, r2, #1
2fff7738:	6002      	str	r2, [r0, #0]
2fff773a:	6820      	ldr	r0, [r4, #0]
2fff773c:	6802      	ldr	r2, [r0, #0]
2fff773e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
2fff7742:	6002      	str	r2, [r0, #0]
2fff7744:	6822      	ldr	r2, [r4, #0]
2fff7746:	6810      	ldr	r0, [r2, #0]
2fff7748:	4303      	orrs	r3, r0
2fff774a:	6013      	str	r3, [r2, #0]
2fff774c:	6822      	ldr	r2, [r4, #0]
2fff774e:	6813      	ldr	r3, [r2, #0]
2fff7750:	f043 0301 	orr.w	r3, r3, #1
2fff7754:	6013      	str	r3, [r2, #0]
2fff7756:	6121      	str	r1, [r4, #16]
2fff7758:	68a0      	ldr	r0, [r4, #8]
2fff775a:	7325      	strb	r5, [r4, #12]
2fff775c:	f7fe f8a1 	bl	2fff58a2 <stm32mp_clk_disable>
2fff7760:	e5fb      	b.n	2fff735a <stm32_i2c_init+0x2e>
2fff7762:	f06f 0801 	mvn.w	r8, #1
2fff7766:	e5f8      	b.n	2fff735a <stm32_i2c_init+0x2e>
2fff7768:	4803      	ldr	r0, [pc, #12]	; (2fff7778 <stm32_i2c_init+0x44c>)
2fff776a:	f7fb fad7 	bl	2fff2d1c <tf_log>
2fff776e:	e5f4      	b.n	2fff735a <stm32_i2c_init+0x2e>
2fff7770:	2fffc390 	.word	0x2fffc390
2fff7774:	2fffc2e6 	.word	0x2fffc2e6
2fff7778:	2fffc36a 	.word	0x2fffc36a

2fff777c <stm32_i2c_mem_write>:
2fff777c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff777e:	2440      	movs	r4, #64	; 0x40
2fff7780:	9403      	str	r4, [sp, #12]
2fff7782:	9c08      	ldr	r4, [sp, #32]
2fff7784:	9402      	str	r4, [sp, #8]
2fff7786:	f8bd 401c 	ldrh.w	r4, [sp, #28]
2fff778a:	9401      	str	r4, [sp, #4]
2fff778c:	9c06      	ldr	r4, [sp, #24]
2fff778e:	9400      	str	r4, [sp, #0]
2fff7790:	f7ff fb9a 	bl	2fff6ec8 <i2c_write>
2fff7794:	b004      	add	sp, #16
2fff7796:	bd10      	pop	{r4, pc}

2fff7798 <stm32_i2c_mem_read>:
2fff7798:	b430      	push	{r4, r5}
2fff779a:	2540      	movs	r5, #64	; 0x40
2fff779c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
2fff77a0:	9504      	str	r5, [sp, #16]
2fff77a2:	9403      	str	r4, [sp, #12]
2fff77a4:	bc30      	pop	{r4, r5}
2fff77a6:	f7ff bc9b 	b.w	2fff70e0 <i2c_read.isra.0>
	...

2fff77ac <stm32_i2c_is_device_ready>:
2fff77ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff77b0:	469a      	mov	sl, r3
2fff77b2:	6903      	ldr	r3, [r0, #16]
2fff77b4:	b085      	sub	sp, #20
2fff77b6:	4604      	mov	r4, r0
2fff77b8:	460e      	mov	r6, r1
2fff77ba:	2b20      	cmp	r3, #32
2fff77bc:	4617      	mov	r7, r2
2fff77be:	f040 8094 	bne.w	2fff78ea <stm32_i2c_is_device_ready+0x13e>
2fff77c2:	7b05      	ldrb	r5, [r0, #12]
2fff77c4:	2d00      	cmp	r5, #0
2fff77c6:	f040 8090 	bne.w	2fff78ea <stm32_i2c_is_device_ready+0x13e>
2fff77ca:	6880      	ldr	r0, [r0, #8]
2fff77cc:	f7fe f866 	bl	2fff589c <stm32mp_clk_enable>
2fff77d0:	6165      	str	r5, [r4, #20]
2fff77d2:	2301      	movs	r3, #1
2fff77d4:	7323      	strb	r3, [r4, #12]
2fff77d6:	6823      	ldr	r3, [r4, #0]
2fff77d8:	699d      	ldr	r5, [r3, #24]
2fff77da:	f415 4500 	ands.w	r5, r5, #32768	; 0x8000
2fff77de:	d009      	beq.n	2fff77f4 <stm32_i2c_is_device_ready+0x48>
2fff77e0:	2500      	movs	r5, #0
2fff77e2:	68a0      	ldr	r0, [r4, #8]
2fff77e4:	2300      	movs	r3, #0
2fff77e6:	7323      	strb	r3, [r4, #12]
2fff77e8:	f7fe f85b 	bl	2fff58a2 <stm32mp_clk_disable>
2fff77ec:	4628      	mov	r0, r5
2fff77ee:	b005      	add	sp, #20
2fff77f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff77f4:	f3c6 0609 	ubfx	r6, r6, #0, #10
2fff77f8:	2324      	movs	r3, #36	; 0x24
2fff77fa:	6123      	str	r3, [r4, #16]
2fff77fc:	f046 7b00 	orr.w	fp, r6, #33554432	; 0x2000000
2fff7800:	61a5      	str	r5, [r4, #24]
2fff7802:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff7806:	fb03 fa0a 	mul.w	sl, r3, sl
2fff780a:	f44b 5b00 	orr.w	fp, fp, #8192	; 0x2000
2fff780e:	6823      	ldr	r3, [r4, #0]
2fff7810:	689a      	ldr	r2, [r3, #8]
2fff7812:	0552      	lsls	r2, r2, #21
2fff7814:	bf52      	itee	pl
2fff7816:	f8c3 b004 	strpl.w	fp, [r3, #4]
2fff781a:	f446 5220 	orrmi.w	r2, r6, #10240	; 0x2800
2fff781e:	605a      	strmi	r2, [r3, #4]
2fff7820:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff7824:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff7828:	e9cd 2302 	strd	r2, r3, [sp, #8]
2fff782c:	fbaa 0100 	umull	r0, r1, sl, r0
2fff7830:	4a2f      	ldr	r2, [pc, #188]	; (2fff78f0 <stm32_i2c_is_device_ready+0x144>)
2fff7832:	2300      	movs	r3, #0
2fff7834:	f001 edd4 	blx	2fff93e0 <__aeabi_uldivmod>
2fff7838:	9b02      	ldr	r3, [sp, #8]
2fff783a:	6822      	ldr	r2, [r4, #0]
2fff783c:	eb10 0803 	adds.w	r8, r0, r3
2fff7840:	9b03      	ldr	r3, [sp, #12]
2fff7842:	f102 0c18 	add.w	ip, r2, #24
2fff7846:	eb41 0903 	adc.w	r9, r1, r3
2fff784a:	f8dc 3000 	ldr.w	r3, [ip]
2fff784e:	f013 0330 	ands.w	r3, r3, #48	; 0x30
2fff7852:	d10d      	bne.n	2fff7870 <stm32_i2c_is_device_ready+0xc4>
2fff7854:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff7858:	4589      	cmp	r9, r1
2fff785a:	bf08      	it	eq
2fff785c:	4580      	cmpeq	r8, r0
2fff785e:	d2f4      	bcs.n	2fff784a <stm32_i2c_is_device_ready+0x9e>
2fff7860:	69a2      	ldr	r2, [r4, #24]
2fff7862:	6163      	str	r3, [r4, #20]
2fff7864:	f042 0220 	orr.w	r2, r2, #32
2fff7868:	61a2      	str	r2, [r4, #24]
2fff786a:	2220      	movs	r2, #32
2fff786c:	6122      	str	r2, [r4, #16]
2fff786e:	e7b7      	b.n	2fff77e0 <stm32_i2c_is_device_ready+0x34>
2fff7870:	6992      	ldr	r2, [r2, #24]
2fff7872:	e9cd 8900 	strd	r8, r9, [sp]
2fff7876:	f012 0210 	ands.w	r2, r2, #16
2fff787a:	d10b      	bne.n	2fff7894 <stm32_i2c_is_device_ready+0xe8>
2fff787c:	2120      	movs	r1, #32
2fff787e:	4620      	mov	r0, r4
2fff7880:	f7ff fa76 	bl	2fff6d70 <i2c_wait_flag>
2fff7884:	2800      	cmp	r0, #0
2fff7886:	d1ab      	bne.n	2fff77e0 <stm32_i2c_is_device_ready+0x34>
2fff7888:	6822      	ldr	r2, [r4, #0]
2fff788a:	2320      	movs	r3, #32
2fff788c:	2501      	movs	r5, #1
2fff788e:	61d3      	str	r3, [r2, #28]
2fff7890:	6123      	str	r3, [r4, #16]
2fff7892:	e7a6      	b.n	2fff77e2 <stm32_i2c_is_device_ready+0x36>
2fff7894:	2200      	movs	r2, #0
2fff7896:	2120      	movs	r1, #32
2fff7898:	4620      	mov	r0, r4
2fff789a:	f7ff fa69 	bl	2fff6d70 <i2c_wait_flag>
2fff789e:	4602      	mov	r2, r0
2fff78a0:	2800      	cmp	r0, #0
2fff78a2:	d19d      	bne.n	2fff77e0 <stm32_i2c_is_device_ready+0x34>
2fff78a4:	6823      	ldr	r3, [r4, #0]
2fff78a6:	2110      	movs	r1, #16
2fff78a8:	42bd      	cmp	r5, r7
2fff78aa:	61d9      	str	r1, [r3, #28]
2fff78ac:	f04f 0120 	mov.w	r1, #32
2fff78b0:	6823      	ldr	r3, [r4, #0]
2fff78b2:	61d9      	str	r1, [r3, #28]
2fff78b4:	d10d      	bne.n	2fff78d2 <stm32_i2c_is_device_ready+0x126>
2fff78b6:	6820      	ldr	r0, [r4, #0]
2fff78b8:	6843      	ldr	r3, [r0, #4]
2fff78ba:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
2fff78be:	6043      	str	r3, [r0, #4]
2fff78c0:	4620      	mov	r0, r4
2fff78c2:	e9cd 8900 	strd	r8, r9, [sp]
2fff78c6:	f7ff fa53 	bl	2fff6d70 <i2c_wait_flag>
2fff78ca:	2800      	cmp	r0, #0
2fff78cc:	d188      	bne.n	2fff77e0 <stm32_i2c_is_device_ready+0x34>
2fff78ce:	6823      	ldr	r3, [r4, #0]
2fff78d0:	61d9      	str	r1, [r3, #28]
2fff78d2:	3501      	adds	r5, #1
2fff78d4:	42af      	cmp	r7, r5
2fff78d6:	d89a      	bhi.n	2fff780e <stm32_i2c_is_device_ready+0x62>
2fff78d8:	69a3      	ldr	r3, [r4, #24]
2fff78da:	2500      	movs	r5, #0
2fff78dc:	6165      	str	r5, [r4, #20]
2fff78de:	f043 0320 	orr.w	r3, r3, #32
2fff78e2:	61a3      	str	r3, [r4, #24]
2fff78e4:	2320      	movs	r3, #32
2fff78e6:	6123      	str	r3, [r4, #16]
2fff78e8:	e77b      	b.n	2fff77e2 <stm32_i2c_is_device_ready+0x36>
2fff78ea:	2500      	movs	r5, #0
2fff78ec:	e77e      	b.n	2fff77ec <stm32_i2c_is_device_ready+0x40>
2fff78ee:	bf00      	nop
2fff78f0:	000f4240 	.word	0x000f4240

2fff78f4 <stm32_iwdg_refresh>:
2fff78f4:	b510      	push	{r4, lr}
2fff78f6:	4c0e      	ldr	r4, [pc, #56]	; (2fff7930 <stm32_iwdg_refresh+0x3c>)
2fff78f8:	6823      	ldr	r3, [r4, #0]
2fff78fa:	b14b      	cbz	r3, 2fff7910 <stm32_iwdg_refresh+0x1c>
2fff78fc:	6860      	ldr	r0, [r4, #4]
2fff78fe:	f7fd ffcd 	bl	2fff589c <stm32mp_clk_enable>
2fff7902:	6823      	ldr	r3, [r4, #0]
2fff7904:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
2fff7908:	601a      	str	r2, [r3, #0]
2fff790a:	6860      	ldr	r0, [r4, #4]
2fff790c:	f7fd ffc9 	bl	2fff58a2 <stm32mp_clk_disable>
2fff7910:	6923      	ldr	r3, [r4, #16]
2fff7912:	b15b      	cbz	r3, 2fff792c <stm32_iwdg_refresh+0x38>
2fff7914:	6960      	ldr	r0, [r4, #20]
2fff7916:	f7fd ffc1 	bl	2fff589c <stm32mp_clk_enable>
2fff791a:	6923      	ldr	r3, [r4, #16]
2fff791c:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
2fff7920:	601a      	str	r2, [r3, #0]
2fff7922:	6960      	ldr	r0, [r4, #20]
2fff7924:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff7928:	f7fd bfbb 	b.w	2fff58a2 <stm32mp_clk_disable>
2fff792c:	bd10      	pop	{r4, pc}
2fff792e:	bf00      	nop
2fff7930:	2fffeac8 	.word	0x2fffeac8

2fff7934 <stm32_iwdg_it_handler>:
2fff7934:	b580      	push	{r7, lr}
2fff7936:	4605      	mov	r5, r0
2fff7938:	f001 ef38 	blx	2fff97ac <plat_my_core_pos>
2fff793c:	4b13      	ldr	r3, [pc, #76]	; (2fff798c <stm32_iwdg_it_handler+0x58>)
2fff793e:	4606      	mov	r6, r0
2fff7940:	68da      	ldr	r2, [r3, #12]
2fff7942:	461f      	mov	r7, r3
2fff7944:	4295      	cmp	r5, r2
2fff7946:	d006      	beq.n	2fff7956 <stm32_iwdg_it_handler+0x22>
2fff7948:	69db      	ldr	r3, [r3, #28]
2fff794a:	429d      	cmp	r5, r3
2fff794c:	d01c      	beq.n	2fff7988 <stm32_iwdg_it_handler+0x54>
2fff794e:	f7fb fa89 	bl	2fff2e64 <console_flush>
2fff7952:	f001 eba8 	blx	2fff90a4 <do_panic>
2fff7956:	2400      	movs	r4, #0
2fff7958:	ea4f 1804 	mov.w	r8, r4, lsl #4
2fff795c:	f7ff ffca 	bl	2fff78f4 <stm32_iwdg_refresh>
2fff7960:	eb07 1404 	add.w	r4, r7, r4, lsl #4
2fff7964:	6860      	ldr	r0, [r4, #4]
2fff7966:	f7fd ff99 	bl	2fff589c <stm32mp_clk_enable>
2fff796a:	f857 2008 	ldr.w	r2, [r7, r8]
2fff796e:	6953      	ldr	r3, [r2, #20]
2fff7970:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
2fff7974:	6153      	str	r3, [r2, #20]
2fff7976:	6860      	ldr	r0, [r4, #4]
2fff7978:	f7fd ff93 	bl	2fff58a2 <stm32mp_clk_disable>
2fff797c:	4628      	mov	r0, r5
2fff797e:	f7f9 fc7b 	bl	2fff1278 <gicv2_end_of_interrupt>
2fff7982:	4630      	mov	r0, r6
2fff7984:	f7fb fcf2 	bl	2fff336c <stm32mp_plat_reset>
2fff7988:	2401      	movs	r4, #1
2fff798a:	e7e5      	b.n	2fff7958 <stm32_iwdg_it_handler+0x24>
2fff798c:	2fffeac8 	.word	0x2fffeac8

2fff7990 <stm32_iwdg_init>:
2fff7990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff7994:	b087      	sub	sp, #28
2fff7996:	4668      	mov	r0, sp
2fff7998:	f000 fe2a 	bl	2fff85f0 <fdt_get_address>
2fff799c:	b918      	cbnz	r0, 2fff79a6 <stm32_iwdg_init+0x16>
2fff799e:	f7fb fa61 	bl	2fff2e64 <console_flush>
2fff79a2:	f001 eb80 	blx	2fff90a4 <do_panic>
2fff79a6:	4a70      	ldr	r2, [pc, #448]	; (2fff7b68 <stm32_iwdg_init+0x1d8>)
2fff79a8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff79ac:	4e6f      	ldr	r6, [pc, #444]	; (2fff7b6c <stm32_iwdg_init+0x1dc>)
2fff79ae:	a802      	add	r0, sp, #8
2fff79b0:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 2fff7b84 <stm32_iwdg_init+0x1f4>
2fff79b4:	f000 ff08 	bl	2fff87c8 <dt_get_node>
2fff79b8:	ea40 75e0 	orr.w	r5, r0, r0, asr #31
2fff79bc:	1c6b      	adds	r3, r5, #1
2fff79be:	d101      	bne.n	2fff79c4 <stm32_iwdg_init+0x34>
2fff79c0:	2400      	movs	r4, #0
2fff79c2:	e085      	b.n	2fff7ad0 <stm32_iwdg_init+0x140>
2fff79c4:	9802      	ldr	r0, [sp, #8]
2fff79c6:	f7fb fd27 	bl	2fff3418 <stm32_iwdg_get_instance>
2fff79ca:	0104      	lsls	r4, r0, #4
2fff79cc:	4607      	mov	r7, r0
2fff79ce:	9b02      	ldr	r3, [sp, #8]
2fff79d0:	4642      	mov	r2, r8
2fff79d2:	eb06 1900 	add.w	r9, r6, r0, lsl #4
2fff79d6:	4629      	mov	r1, r5
2fff79d8:	5133      	str	r3, [r6, r4]
2fff79da:	9b03      	ldr	r3, [sp, #12]
2fff79dc:	9800      	ldr	r0, [sp, #0]
2fff79de:	f8c9 3004 	str.w	r3, [r9, #4]
2fff79e2:	2300      	movs	r3, #0
2fff79e4:	f002 f9fb 	bl	2fff9dde <fdt_getprop>
2fff79e8:	b928      	cbnz	r0, 2fff79f6 <stm32_iwdg_init+0x66>
2fff79ea:	f899 3008 	ldrb.w	r3, [r9, #8]
2fff79ee:	f043 0302 	orr.w	r3, r3, #2
2fff79f2:	f889 3008 	strb.w	r3, [r9, #8]
2fff79f6:	4a5e      	ldr	r2, [pc, #376]	; (2fff7b70 <stm32_iwdg_init+0x1e0>)
2fff79f8:	2300      	movs	r3, #0
2fff79fa:	9800      	ldr	r0, [sp, #0]
2fff79fc:	4629      	mov	r1, r5
2fff79fe:	f002 f9ee 	bl	2fff9dde <fdt_getprop>
2fff7a02:	b920      	cbnz	r0, 2fff7a0e <stm32_iwdg_init+0x7e>
2fff7a04:	1932      	adds	r2, r6, r4
2fff7a06:	7a13      	ldrb	r3, [r2, #8]
2fff7a08:	f043 0304 	orr.w	r3, r3, #4
2fff7a0c:	7213      	strb	r3, [r2, #8]
2fff7a0e:	4638      	mov	r0, r7
2fff7a10:	f7fb fd16 	bl	2fff3440 <stm32_iwdg_get_otp_config>
2fff7a14:	9b05      	ldr	r3, [sp, #20]
2fff7a16:	f010 0f01 	tst.w	r0, #1
2fff7a1a:	d00a      	beq.n	2fff7a32 <stm32_iwdg_init+0xa2>
2fff7a1c:	b923      	cbnz	r3, 2fff7a28 <stm32_iwdg_init+0x98>
2fff7a1e:	4855      	ldr	r0, [pc, #340]	; (2fff7b74 <stm32_iwdg_init+0x1e4>)
2fff7a20:	1c79      	adds	r1, r7, #1
2fff7a22:	f7fb f97b 	bl	2fff2d1c <tf_log>
2fff7a26:	e7ba      	b.n	2fff799e <stm32_iwdg_init+0xe>
2fff7a28:	1931      	adds	r1, r6, r4
2fff7a2a:	7a0a      	ldrb	r2, [r1, #8]
2fff7a2c:	f042 0201 	orr.w	r2, r2, #1
2fff7a30:	720a      	strb	r2, [r1, #8]
2fff7a32:	b95b      	cbnz	r3, 2fff7a4c <stm32_iwdg_init+0xbc>
2fff7a34:	1930      	adds	r0, r6, r4
2fff7a36:	2110      	movs	r1, #16
2fff7a38:	f001 ec8a 	blx	2fff9350 <zero_normalmem>
2fff7a3c:	4a4a      	ldr	r2, [pc, #296]	; (2fff7b68 <stm32_iwdg_init+0x1d8>)
2fff7a3e:	4629      	mov	r1, r5
2fff7a40:	a802      	add	r0, sp, #8
2fff7a42:	f000 fec1 	bl	2fff87c8 <dt_get_node>
2fff7a46:	ea40 75e0 	orr.w	r5, r0, r0, asr #31
2fff7a4a:	e7b7      	b.n	2fff79bc <stm32_iwdg_init+0x2c>
2fff7a4c:	0782      	lsls	r2, r0, #30
2fff7a4e:	bf41      	itttt	mi
2fff7a50:	1931      	addmi	r1, r6, r4
2fff7a52:	7a0a      	ldrbmi	r2, [r1, #8]
2fff7a54:	f042 0202 	orrmi.w	r2, r2, #2
2fff7a58:	720a      	strbmi	r2, [r1, #8]
2fff7a5a:	0741      	lsls	r1, r0, #29
2fff7a5c:	bf48      	it	mi
2fff7a5e:	1931      	addmi	r1, r6, r4
2fff7a60:	5930      	ldr	r0, [r6, r4]
2fff7a62:	bf42      	ittt	mi
2fff7a64:	7a0a      	ldrbmi	r2, [r1, #8]
2fff7a66:	f042 0204 	orrmi.w	r2, r2, #4
2fff7a6a:	720a      	strbmi	r2, [r1, #8]
2fff7a6c:	07da      	lsls	r2, r3, #31
2fff7a6e:	d533      	bpl.n	2fff7ad8 <stm32_iwdg_init+0x148>
2fff7a70:	f7f8 fff2 	bl	2fff0a58 <stm32mp_register_non_secure_periph_iomem>
2fff7a74:	eb06 0904 	add.w	r9, r6, r4
2fff7a78:	f8d9 0004 	ldr.w	r0, [r9, #4]
2fff7a7c:	f7fd ff0e 	bl	2fff589c <stm32mp_clk_enable>
2fff7a80:	f8d9 0004 	ldr.w	r0, [r9, #4]
2fff7a84:	f7fd ff0d 	bl	2fff58a2 <stm32mp_clk_disable>
2fff7a88:	a801      	add	r0, sp, #4
2fff7a8a:	f000 fdb1 	bl	2fff85f0 <fdt_get_address>
2fff7a8e:	2800      	cmp	r0, #0
2fff7a90:	d0d4      	beq.n	2fff7a3c <stm32_iwdg_init+0xac>
2fff7a92:	4a39      	ldr	r2, [pc, #228]	; (2fff7b78 <stm32_iwdg_init+0x1e8>)
2fff7a94:	2300      	movs	r3, #0
2fff7a96:	9801      	ldr	r0, [sp, #4]
2fff7a98:	4629      	mov	r1, r5
2fff7a9a:	f002 f9a0 	bl	2fff9dde <fdt_getprop>
2fff7a9e:	2800      	cmp	r0, #0
2fff7aa0:	d0cc      	beq.n	2fff7a3c <stm32_iwdg_init+0xac>
2fff7aa2:	6803      	ldr	r3, [r0, #0]
2fff7aa4:	f3c3 2a07 	ubfx	sl, r3, #8, #8
2fff7aa8:	0e1a      	lsrs	r2, r3, #24
2fff7aaa:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
2fff7aae:	f3c3 4307 	ubfx	r3, r3, #16, #8
2fff7ab2:	ea42 420a 	orr.w	r2, r2, sl, lsl #16
2fff7ab6:	ea42 2a03 	orr.w	sl, r2, r3, lsl #8
2fff7aba:	f1ba 0f00 	cmp.w	sl, #0
2fff7abe:	dbbd      	blt.n	2fff7a3c <stm32_iwdg_init+0xac>
2fff7ac0:	d10d      	bne.n	2fff7ade <stm32_iwdg_init+0x14e>
2fff7ac2:	f06f 0415 	mvn.w	r4, #21
2fff7ac6:	482d      	ldr	r0, [pc, #180]	; (2fff7b7c <stm32_iwdg_init+0x1ec>)
2fff7ac8:	4622      	mov	r2, r4
2fff7aca:	1c79      	adds	r1, r7, #1
2fff7acc:	f7fb f926 	bl	2fff2d1c <tf_log>
2fff7ad0:	4620      	mov	r0, r4
2fff7ad2:	b007      	add	sp, #28
2fff7ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff7ad8:	f7f8 ffbb 	bl	2fff0a52 <stm32mp_register_secure_periph_iomem>
2fff7adc:	e7ca      	b.n	2fff7a74 <stm32_iwdg_init+0xe4>
2fff7ade:	4928      	ldr	r1, [pc, #160]	; (2fff7b80 <stm32_iwdg_init+0x1f0>)
2fff7ae0:	4628      	mov	r0, r5
2fff7ae2:	f7fd f9d9 	bl	2fff4e98 <fdt_get_clock_id_by_name>
2fff7ae6:	2800      	cmp	r0, #0
2fff7ae8:	dbeb      	blt.n	2fff7ac2 <stm32_iwdg_init+0x132>
2fff7aea:	f7fd ff03 	bl	2fff58f4 <stm32mp_clk_get_rate>
2fff7aee:	4683      	mov	fp, r0
2fff7af0:	f8d9 0004 	ldr.w	r0, [r9, #4]
2fff7af4:	f7fd fed2 	bl	2fff589c <stm32mp_clk_enable>
2fff7af8:	5931      	ldr	r1, [r6, r4]
2fff7afa:	f64c 43cc 	movw	r3, #52428	; 0xcccc
2fff7afe:	600b      	str	r3, [r1, #0]
2fff7b00:	f245 5355 	movw	r3, #21845	; 0x5555
2fff7b04:	600b      	str	r3, [r1, #0]
2fff7b06:	2306      	movs	r3, #6
2fff7b08:	604b      	str	r3, [r1, #4]
2fff7b0a:	fbaa 230b 	umull	r2, r3, sl, fp
2fff7b0e:	f04f 0a64 	mov.w	sl, #100	; 0x64
2fff7b12:	0a12      	lsrs	r2, r2, #8
2fff7b14:	f602 72ff 	addw	r2, r2, #4095	; 0xfff
2fff7b18:	f3c2 020b 	ubfx	r2, r2, #0, #12
2fff7b1c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
2fff7b20:	614a      	str	r2, [r1, #20]
2fff7b22:	f8d9 3000 	ldr.w	r3, [r9]
2fff7b26:	2001      	movs	r0, #1
2fff7b28:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
2fff7b2c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
2fff7b30:	f7fc fcbc 	bl	2fff44ac <mdelay>
2fff7b34:	f01b 0f08 	tst.w	fp, #8
2fff7b38:	d002      	beq.n	2fff7b40 <stm32_iwdg_init+0x1b0>
2fff7b3a:	f1ba 0f00 	cmp.w	sl, #0
2fff7b3e:	d1f0      	bne.n	2fff7b22 <stm32_iwdg_init+0x192>
2fff7b40:	2100      	movs	r1, #0
2fff7b42:	4628      	mov	r0, r5
2fff7b44:	f7f9 fda0 	bl	2fff1688 <stm32_gic_enable_spi>
2fff7b48:	1933      	adds	r3, r6, r4
2fff7b4a:	2800      	cmp	r0, #0
2fff7b4c:	60d8      	str	r0, [r3, #12]
2fff7b4e:	f6ff af26 	blt.w	2fff799e <stm32_iwdg_init+0xe>
2fff7b52:	6858      	ldr	r0, [r3, #4]
2fff7b54:	f7fd fea5 	bl	2fff58a2 <stm32mp_clk_disable>
2fff7b58:	f1ba 0f00 	cmp.w	sl, #0
2fff7b5c:	f47f af6e 	bne.w	2fff7a3c <stm32_iwdg_init+0xac>
2fff7b60:	f06f 043b 	mvn.w	r4, #59	; 0x3b
2fff7b64:	e7af      	b.n	2fff7ac6 <stm32_iwdg_init+0x136>
2fff7b66:	bf00      	nop
2fff7b68:	2fffc3f0 	.word	0x2fffc3f0
2fff7b6c:	2fffeac8 	.word	0x2fffeac8
2fff7b70:	2fffc416 	.word	0x2fffc416
2fff7b74:	2fffc42e 	.word	0x2fffc42e
2fff7b78:	2fffc453 	.word	0x2fffc453
2fff7b7c:	2fffc466 	.word	0x2fffc466
2fff7b80:	2fffbd7f 	.word	0x2fffbd7f
2fff7b84:	2fffc401 	.word	0x2fffc401

2fff7b88 <fdt32_to_cpu>:
2fff7b88:	ba00      	rev	r0, r0
2fff7b8a:	4770      	bx	lr

2fff7b8c <dt_get_pmic_node>:
2fff7b8c:	b510      	push	{r4, lr}
2fff7b8e:	4c05      	ldr	r4, [pc, #20]	; (2fff7ba4 <dt_get_pmic_node+0x18>)
2fff7b90:	6823      	ldr	r3, [r4, #0]
2fff7b92:	3304      	adds	r3, #4
2fff7b94:	d103      	bne.n	2fff7b9e <dt_get_pmic_node+0x12>
2fff7b96:	4804      	ldr	r0, [pc, #16]	; (2fff7ba8 <dt_get_pmic_node+0x1c>)
2fff7b98:	f000 fe38 	bl	2fff880c <dt_get_node_by_compatible>
2fff7b9c:	6020      	str	r0, [r4, #0]
2fff7b9e:	6820      	ldr	r0, [r4, #0]
2fff7ba0:	bd10      	pop	{r4, pc}
2fff7ba2:	bf00      	nop
2fff7ba4:	2fffd530 	.word	0x2fffd530
2fff7ba8:	2fffc490 	.word	0x2fffc490

2fff7bac <dt_pmic_get_regulator_voltage>:
2fff7bac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff7bae:	4615      	mov	r5, r2
2fff7bb0:	4a14      	ldr	r2, [pc, #80]	; (2fff7c04 <dt_pmic_get_regulator_voltage+0x58>)
2fff7bb2:	461c      	mov	r4, r3
2fff7bb4:	2300      	movs	r3, #0
2fff7bb6:	4606      	mov	r6, r0
2fff7bb8:	460f      	mov	r7, r1
2fff7bba:	f002 f910 	bl	2fff9dde <fdt_getprop>
2fff7bbe:	b910      	cbnz	r0, 2fff7bc6 <dt_pmic_get_regulator_voltage+0x1a>
2fff7bc0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7bc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff7bc6:	b13d      	cbz	r5, 2fff7bd8 <dt_pmic_get_regulator_voltage+0x2c>
2fff7bc8:	6800      	ldr	r0, [r0, #0]
2fff7bca:	f7ff ffdd 	bl	2fff7b88 <fdt32_to_cpu>
2fff7bce:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff7bd2:	fbb0 f0f3 	udiv	r0, r0, r3
2fff7bd6:	8028      	strh	r0, [r5, #0]
2fff7bd8:	4a0b      	ldr	r2, [pc, #44]	; (2fff7c08 <dt_pmic_get_regulator_voltage+0x5c>)
2fff7bda:	2300      	movs	r3, #0
2fff7bdc:	4639      	mov	r1, r7
2fff7bde:	4630      	mov	r0, r6
2fff7be0:	f002 f8fd 	bl	2fff9dde <fdt_getprop>
2fff7be4:	2800      	cmp	r0, #0
2fff7be6:	d0eb      	beq.n	2fff7bc0 <dt_pmic_get_regulator_voltage+0x14>
2fff7be8:	b14c      	cbz	r4, 2fff7bfe <dt_pmic_get_regulator_voltage+0x52>
2fff7bea:	6800      	ldr	r0, [r0, #0]
2fff7bec:	f7ff ffcc 	bl	2fff7b88 <fdt32_to_cpu>
2fff7bf0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff7bf4:	fbb0 f0f3 	udiv	r0, r0, r3
2fff7bf8:	8020      	strh	r0, [r4, #0]
2fff7bfa:	2000      	movs	r0, #0
2fff7bfc:	e7e2      	b.n	2fff7bc4 <dt_pmic_get_regulator_voltage+0x18>
2fff7bfe:	4620      	mov	r0, r4
2fff7c00:	e7e0      	b.n	2fff7bc4 <dt_pmic_get_regulator_voltage+0x18>
2fff7c02:	bf00      	nop
2fff7c04:	2fffc49b 	.word	0x2fffc49b
2fff7c08:	2fffc4b3 	.word	0x2fffc4b3

2fff7c0c <pmic_operate>:
2fff7c0c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff7c10:	4681      	mov	r9, r0
2fff7c12:	a801      	add	r0, sp, #4
2fff7c14:	460f      	mov	r7, r1
2fff7c16:	4692      	mov	sl, r2
2fff7c18:	f000 fcea 	bl	2fff85f0 <fdt_get_address>
2fff7c1c:	b928      	cbnz	r0, 2fff7c2a <pmic_operate+0x1e>
2fff7c1e:	f06f 0b01 	mvn.w	fp, #1
2fff7c22:	4658      	mov	r0, fp
2fff7c24:	b003      	add	sp, #12
2fff7c26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff7c2a:	f7ff ffaf 	bl	2fff7b8c <dt_get_pmic_node>
2fff7c2e:	1e01      	subs	r1, r0, #0
2fff7c30:	dbf5      	blt.n	2fff7c1e <pmic_operate+0x12>
2fff7c32:	4a7d      	ldr	r2, [pc, #500]	; (2fff7e28 <pmic_operate+0x21c>)
2fff7c34:	9801      	ldr	r0, [sp, #4]
2fff7c36:	f002 f850 	bl	2fff9cda <fdt_subnode_offset>
2fff7c3a:	1e01      	subs	r1, r0, #0
2fff7c3c:	dbef      	blt.n	2fff7c1e <pmic_operate+0x12>
2fff7c3e:	9801      	ldr	r0, [sp, #4]
2fff7c40:	f06f 0b04 	mvn.w	fp, #4
2fff7c44:	f001 ff4f 	bl	2fff9ae6 <fdt_first_subnode>
2fff7c48:	4604      	mov	r4, r0
2fff7c4a:	2c00      	cmp	r4, #0
2fff7c4c:	dbe9      	blt.n	2fff7c22 <pmic_operate+0x16>
2fff7c4e:	9801      	ldr	r0, [sp, #4]
2fff7c50:	2200      	movs	r2, #0
2fff7c52:	4621      	mov	r1, r4
2fff7c54:	f001 ffd2 	bl	2fff9bfc <fdt_get_name>
2fff7c58:	f1b9 0f01 	cmp.w	r9, #1
2fff7c5c:	4605      	mov	r5, r0
2fff7c5e:	d01e      	beq.n	2fff7c9e <pmic_operate+0x92>
2fff7c60:	f1b9 0f02 	cmp.w	r9, #2
2fff7c64:	d07d      	beq.n	2fff7d62 <pmic_operate+0x156>
2fff7c66:	b927      	cbnz	r7, 2fff7c72 <pmic_operate+0x66>
2fff7c68:	f240 110d 	movw	r1, #269	; 0x10d
2fff7c6c:	486f      	ldr	r0, [pc, #444]	; (2fff7e2c <pmic_operate+0x220>)
2fff7c6e:	f002 fa53 	bl	2fffa118 <__assert>
2fff7c72:	f1ba 0f00 	cmp.w	sl, #0
2fff7c76:	d102      	bne.n	2fff7c7e <pmic_operate+0x72>
2fff7c78:	f44f 7187 	mov.w	r1, #270	; 0x10e
2fff7c7c:	e7f6      	b.n	2fff7c6c <pmic_operate+0x60>
2fff7c7e:	4639      	mov	r1, r7
2fff7c80:	f002 fbcf 	bl	2fffa422 <strcmp>
2fff7c84:	4603      	mov	r3, r0
2fff7c86:	b9d8      	cbnz	r0, 2fff7cc0 <pmic_operate+0xb4>
2fff7c88:	9801      	ldr	r0, [sp, #4]
2fff7c8a:	4652      	mov	r2, sl
2fff7c8c:	4621      	mov	r1, r4
2fff7c8e:	f7ff ff8d 	bl	2fff7bac <dt_pmic_get_regulator_voltage>
2fff7c92:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7c96:	bfb8      	it	lt
2fff7c98:	f06f 0b05 	mvnlt.w	fp, #5
2fff7c9c:	e7c1      	b.n	2fff7c22 <pmic_operate+0x16>
2fff7c9e:	9e01      	ldr	r6, [sp, #4]
2fff7ca0:	2300      	movs	r3, #0
2fff7ca2:	4a63      	ldr	r2, [pc, #396]	; (2fff7e30 <pmic_operate+0x224>)
2fff7ca4:	4621      	mov	r1, r4
2fff7ca6:	4630      	mov	r0, r6
2fff7ca8:	f002 f899 	bl	2fff9dde <fdt_getprop>
2fff7cac:	4603      	mov	r3, r0
2fff7cae:	b968      	cbnz	r0, 2fff7ccc <pmic_operate+0xc0>
2fff7cb0:	4a60      	ldr	r2, [pc, #384]	; (2fff7e34 <pmic_operate+0x228>)
2fff7cb2:	4621      	mov	r1, r4
2fff7cb4:	4630      	mov	r0, r6
2fff7cb6:	f002 f892 	bl	2fff9dde <fdt_getprop>
2fff7cba:	b938      	cbnz	r0, 2fff7ccc <pmic_operate+0xc0>
2fff7cbc:	f04f 0b00 	mov.w	fp, #0
2fff7cc0:	9801      	ldr	r0, [sp, #4]
2fff7cc2:	4621      	mov	r1, r4
2fff7cc4:	f001 ff22 	bl	2fff9b0c <fdt_next_subnode>
2fff7cc8:	4604      	mov	r4, r0
2fff7cca:	e7be      	b.n	2fff7c4a <pmic_operate+0x3e>
2fff7ccc:	4a5a      	ldr	r2, [pc, #360]	; (2fff7e38 <pmic_operate+0x22c>)
2fff7cce:	2300      	movs	r3, #0
2fff7cd0:	4621      	mov	r1, r4
2fff7cd2:	4630      	mov	r0, r6
2fff7cd4:	f002 f883 	bl	2fff9dde <fdt_getprop>
2fff7cd8:	bb70      	cbnz	r0, 2fff7d38 <pmic_operate+0x12c>
2fff7cda:	4a58      	ldr	r2, [pc, #352]	; (2fff7e3c <pmic_operate+0x230>)
2fff7cdc:	2300      	movs	r3, #0
2fff7cde:	4621      	mov	r1, r4
2fff7ce0:	4630      	mov	r0, r6
2fff7ce2:	f002 f87c 	bl	2fff9dde <fdt_getprop>
2fff7ce6:	bb70      	cbnz	r0, 2fff7d46 <pmic_operate+0x13a>
2fff7ce8:	f10d 0302 	add.w	r3, sp, #2
2fff7cec:	466a      	mov	r2, sp
2fff7cee:	4621      	mov	r1, r4
2fff7cf0:	4630      	mov	r0, r6
2fff7cf2:	f7ff ff5b 	bl	2fff7bac <dt_pmic_get_regulator_voltage>
2fff7cf6:	2800      	cmp	r0, #0
2fff7cf8:	dbe0      	blt.n	2fff7cbc <pmic_operate+0xb0>
2fff7cfa:	4628      	mov	r0, r5
2fff7cfc:	f000 f9fe 	bl	2fff80fc <stpmic1_regulator_voltage_get>
2fff7d00:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7d04:	db8d      	blt.n	2fff7c22 <pmic_operate+0x16>
2fff7d06:	f8bd 1000 	ldrh.w	r1, [sp]
2fff7d0a:	fa1f f08b 	uxth.w	r0, fp
2fff7d0e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
2fff7d12:	4288      	cmp	r0, r1
2fff7d14:	bf28      	it	cs
2fff7d16:	2100      	movcs	r1, #0
2fff7d18:	4290      	cmp	r0, r2
2fff7d1a:	bf88      	it	hi
2fff7d1c:	4611      	movhi	r1, r2
2fff7d1e:	b9c9      	cbnz	r1, 2fff7d54 <pmic_operate+0x148>
2fff7d20:	4628      	mov	r0, r5
2fff7d22:	f000 f9d7 	bl	2fff80d4 <stpmic1_is_regulator_enabled>
2fff7d26:	2800      	cmp	r0, #0
2fff7d28:	d1c8      	bne.n	2fff7cbc <pmic_operate+0xb0>
2fff7d2a:	4628      	mov	r0, r5
2fff7d2c:	f000 fa80 	bl	2fff8230 <stpmic1_regulator_enable>
2fff7d30:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7d34:	dac2      	bge.n	2fff7cbc <pmic_operate+0xb0>
2fff7d36:	e774      	b.n	2fff7c22 <pmic_operate+0x16>
2fff7d38:	4628      	mov	r0, r5
2fff7d3a:	f000 fab1 	bl	2fff82a0 <stpmic1_regulator_pull_down_set>
2fff7d3e:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7d42:	daca      	bge.n	2fff7cda <pmic_operate+0xce>
2fff7d44:	e76d      	b.n	2fff7c22 <pmic_operate+0x16>
2fff7d46:	4628      	mov	r0, r5
2fff7d48:	f000 fabc 	bl	2fff82c4 <stpmic1_regulator_mask_reset_set>
2fff7d4c:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7d50:	daca      	bge.n	2fff7ce8 <pmic_operate+0xdc>
2fff7d52:	e766      	b.n	2fff7c22 <pmic_operate+0x16>
2fff7d54:	4628      	mov	r0, r5
2fff7d56:	f000 fa75 	bl	2fff8244 <stpmic1_regulator_voltage_set>
2fff7d5a:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7d5e:	dadf      	bge.n	2fff7d20 <pmic_operate+0x114>
2fff7d60:	e75f      	b.n	2fff7c22 <pmic_operate+0x16>
2fff7d62:	b917      	cbnz	r7, 2fff7d6a <pmic_operate+0x15e>
2fff7d64:	f240 1125 	movw	r1, #293	; 0x125
2fff7d68:	e780      	b.n	2fff7c6c <pmic_operate+0x60>
2fff7d6a:	f8dd 8004 	ldr.w	r8, [sp, #4]
2fff7d6e:	f000 fa55 	bl	2fff821c <stpmic1_powerctrl_on>
2fff7d72:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7d76:	f6ff af54 	blt.w	2fff7c22 <pmic_operate+0x16>
2fff7d7a:	4628      	mov	r0, r5
2fff7d7c:	f000 fa24 	bl	2fff81c8 <stpmic1_lp_copy_reg>
2fff7d80:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7d84:	f6ff af4d 	blt.w	2fff7c22 <pmic_operate+0x16>
2fff7d88:	463a      	mov	r2, r7
2fff7d8a:	4621      	mov	r1, r4
2fff7d8c:	4640      	mov	r0, r8
2fff7d8e:	f001 ffa4 	bl	2fff9cda <fdt_subnode_offset>
2fff7d92:	1e06      	subs	r6, r0, #0
2fff7d94:	dd92      	ble.n	2fff7cbc <pmic_operate+0xb0>
2fff7d96:	4a2a      	ldr	r2, [pc, #168]	; (2fff7e40 <pmic_operate+0x234>)
2fff7d98:	2300      	movs	r3, #0
2fff7d9a:	4631      	mov	r1, r6
2fff7d9c:	4640      	mov	r0, r8
2fff7d9e:	f002 f81e 	bl	2fff9dde <fdt_getprop>
2fff7da2:	bb08      	cbnz	r0, 2fff7de8 <pmic_operate+0x1dc>
2fff7da4:	4a27      	ldr	r2, [pc, #156]	; (2fff7e44 <pmic_operate+0x238>)
2fff7da6:	2300      	movs	r3, #0
2fff7da8:	4631      	mov	r1, r6
2fff7daa:	4640      	mov	r0, r8
2fff7dac:	f002 f817 	bl	2fff9dde <fdt_getprop>
2fff7db0:	bb10      	cbnz	r0, 2fff7df8 <pmic_operate+0x1ec>
2fff7db2:	4a25      	ldr	r2, [pc, #148]	; (2fff7e48 <pmic_operate+0x23c>)
2fff7db4:	2300      	movs	r3, #0
2fff7db6:	4631      	mov	r1, r6
2fff7db8:	4640      	mov	r0, r8
2fff7dba:	f002 f810 	bl	2fff9dde <fdt_getprop>
2fff7dbe:	bb18      	cbnz	r0, 2fff7e08 <pmic_operate+0x1fc>
2fff7dc0:	4a22      	ldr	r2, [pc, #136]	; (2fff7e4c <pmic_operate+0x240>)
2fff7dc2:	2300      	movs	r3, #0
2fff7dc4:	4631      	mov	r1, r6
2fff7dc6:	4640      	mov	r0, r8
2fff7dc8:	f002 f809 	bl	2fff9dde <fdt_getprop>
2fff7dcc:	2800      	cmp	r0, #0
2fff7dce:	f43f af75 	beq.w	2fff7cbc <pmic_operate+0xb0>
2fff7dd2:	6800      	ldr	r0, [r0, #0]
2fff7dd4:	f7ff fed8 	bl	2fff7b88 <fdt32_to_cpu>
2fff7dd8:	2808      	cmp	r0, #8
2fff7dda:	f47f af6f 	bne.w	2fff7cbc <pmic_operate+0xb0>
2fff7dde:	2101      	movs	r1, #1
2fff7de0:	4628      	mov	r0, r5
2fff7de2:	f000 fa87 	bl	2fff82f4 <stpmic1_lp_set_mode>
2fff7de6:	e7a3      	b.n	2fff7d30 <pmic_operate+0x124>
2fff7de8:	2101      	movs	r1, #1
2fff7dea:	4628      	mov	r0, r5
2fff7dec:	f000 fa77 	bl	2fff82de <stpmic1_lp_reg_on_off>
2fff7df0:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7df4:	dad6      	bge.n	2fff7da4 <pmic_operate+0x198>
2fff7df6:	e714      	b.n	2fff7c22 <pmic_operate+0x16>
2fff7df8:	2100      	movs	r1, #0
2fff7dfa:	4628      	mov	r0, r5
2fff7dfc:	f000 fa6f 	bl	2fff82de <stpmic1_lp_reg_on_off>
2fff7e00:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7e04:	dad5      	bge.n	2fff7db2 <pmic_operate+0x1a6>
2fff7e06:	e70c      	b.n	2fff7c22 <pmic_operate+0x16>
2fff7e08:	6800      	ldr	r0, [r0, #0]
2fff7e0a:	f7ff febd 	bl	2fff7b88 <fdt32_to_cpu>
2fff7e0e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
2fff7e12:	fbb0 f1f1 	udiv	r1, r0, r1
2fff7e16:	4628      	mov	r0, r5
2fff7e18:	b289      	uxth	r1, r1
2fff7e1a:	f000 fa79 	bl	2fff8310 <stpmic1_lp_set_voltage>
2fff7e1e:	f1b0 0b00 	subs.w	fp, r0, #0
2fff7e22:	dacd      	bge.n	2fff7dc0 <pmic_operate+0x1b4>
2fff7e24:	e6fd      	b.n	2fff7c22 <pmic_operate+0x16>
2fff7e26:	bf00      	nop
2fff7e28:	2fffc4cb 	.word	0x2fffc4cb
2fff7e2c:	2fffc4d6 	.word	0x2fffc4d6
2fff7e30:	2fffc4f5 	.word	0x2fffc4f5
2fff7e34:	2fffc507 	.word	0x2fffc507
2fff7e38:	2fffc51b 	.word	0x2fffc51b
2fff7e3c:	2fffc52f 	.word	0x2fffc52f
2fff7e40:	2fffc53d 	.word	0x2fffc53d
2fff7e44:	2fffc555 	.word	0x2fffc555
2fff7e48:	2fffc56e 	.word	0x2fffc56e
2fff7e4c:	2fffc58a 	.word	0x2fffc58a

2fff7e50 <dt_pmic_status>:
2fff7e50:	b510      	push	{r4, lr}
2fff7e52:	4c08      	ldr	r4, [pc, #32]	; (2fff7e74 <dt_pmic_status+0x24>)
2fff7e54:	6820      	ldr	r0, [r4, #0]
2fff7e56:	f110 0f0f 	cmn.w	r0, #15
2fff7e5a:	d106      	bne.n	2fff7e6a <dt_pmic_status+0x1a>
2fff7e5c:	f7ff fe96 	bl	2fff7b8c <dt_get_pmic_node>
2fff7e60:	2800      	cmp	r0, #0
2fff7e62:	dc03      	bgt.n	2fff7e6c <dt_pmic_status+0x1c>
2fff7e64:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff7e68:	6020      	str	r0, [r4, #0]
2fff7e6a:	bd10      	pop	{r4, pc}
2fff7e6c:	f000 fbcc 	bl	2fff8608 <fdt_get_status>
2fff7e70:	e7fa      	b.n	2fff7e68 <dt_pmic_status+0x18>
2fff7e72:	bf00      	nop
2fff7e74:	2fffd534 	.word	0x2fffd534

2fff7e78 <pmic_configure_boot_on_regulators>:
2fff7e78:	2200      	movs	r2, #0
2fff7e7a:	2001      	movs	r0, #1
2fff7e7c:	4611      	mov	r1, r2
2fff7e7e:	f7ff bec5 	b.w	2fff7c0c <pmic_operate>

2fff7e82 <pmic_set_lp_config>:
2fff7e82:	4601      	mov	r1, r0
2fff7e84:	2200      	movs	r2, #0
2fff7e86:	2002      	movs	r0, #2
2fff7e88:	f7ff bec0 	b.w	2fff7c0c <pmic_operate>

2fff7e8c <dt_pmic_find_supply>:
2fff7e8c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff7e90:	4606      	mov	r6, r0
2fff7e92:	a801      	add	r0, sp, #4
2fff7e94:	460f      	mov	r7, r1
2fff7e96:	f000 fbab 	bl	2fff85f0 <fdt_get_address>
2fff7e9a:	b928      	cbnz	r0, 2fff7ea8 <dt_pmic_find_supply+0x1c>
2fff7e9c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fff7ea0:	4628      	mov	r0, r5
2fff7ea2:	b002      	add	sp, #8
2fff7ea4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff7ea8:	f7ff fe70 	bl	2fff7b8c <dt_get_pmic_node>
2fff7eac:	1e01      	subs	r1, r0, #0
2fff7eae:	dbf5      	blt.n	2fff7e9c <dt_pmic_find_supply+0x10>
2fff7eb0:	4a13      	ldr	r2, [pc, #76]	; (2fff7f00 <dt_pmic_find_supply+0x74>)
2fff7eb2:	9801      	ldr	r0, [sp, #4]
2fff7eb4:	f001 ff11 	bl	2fff9cda <fdt_subnode_offset>
2fff7eb8:	1e01      	subs	r1, r0, #0
2fff7eba:	dbef      	blt.n	2fff7e9c <dt_pmic_find_supply+0x10>
2fff7ebc:	9801      	ldr	r0, [sp, #4]
2fff7ebe:	f8df 8044 	ldr.w	r8, [pc, #68]	; 2fff7f04 <dt_pmic_find_supply+0x78>
2fff7ec2:	f001 fe10 	bl	2fff9ae6 <fdt_first_subnode>
2fff7ec6:	4604      	mov	r4, r0
2fff7ec8:	2c00      	cmp	r4, #0
2fff7eca:	dbe7      	blt.n	2fff7e9c <dt_pmic_find_supply+0x10>
2fff7ecc:	9801      	ldr	r0, [sp, #4]
2fff7ece:	2300      	movs	r3, #0
2fff7ed0:	4642      	mov	r2, r8
2fff7ed2:	4621      	mov	r1, r4
2fff7ed4:	f001 ff83 	bl	2fff9dde <fdt_getprop>
2fff7ed8:	b158      	cbz	r0, 2fff7ef2 <dt_pmic_find_supply+0x66>
2fff7eda:	4639      	mov	r1, r7
2fff7edc:	f002 faa1 	bl	2fffa422 <strcmp>
2fff7ee0:	4605      	mov	r5, r0
2fff7ee2:	b930      	cbnz	r0, 2fff7ef2 <dt_pmic_find_supply+0x66>
2fff7ee4:	4602      	mov	r2, r0
2fff7ee6:	4621      	mov	r1, r4
2fff7ee8:	9801      	ldr	r0, [sp, #4]
2fff7eea:	f001 fe87 	bl	2fff9bfc <fdt_get_name>
2fff7eee:	6030      	str	r0, [r6, #0]
2fff7ef0:	e7d6      	b.n	2fff7ea0 <dt_pmic_find_supply+0x14>
2fff7ef2:	9801      	ldr	r0, [sp, #4]
2fff7ef4:	4621      	mov	r1, r4
2fff7ef6:	f001 fe09 	bl	2fff9b0c <fdt_next_subnode>
2fff7efa:	4604      	mov	r4, r0
2fff7efc:	e7e4      	b.n	2fff7ec8 <dt_pmic_find_supply+0x3c>
2fff7efe:	bf00      	nop
2fff7f00:	2fffc4cb 	.word	0x2fffc4cb
2fff7f04:	2fffc599 	.word	0x2fffc599

2fff7f08 <initialize_pmic_i2c>:
2fff7f08:	b5f0      	push	{r4, r5, r6, r7, lr}
2fff7f0a:	b091      	sub	sp, #68	; 0x44
2fff7f0c:	4d39      	ldr	r5, [pc, #228]	; (2fff7ff4 <initialize_pmic_i2c+0xec>)
2fff7f0e:	682c      	ldr	r4, [r5, #0]
2fff7f10:	1c63      	adds	r3, r4, #1
2fff7f12:	d129      	bne.n	2fff7f68 <initialize_pmic_i2c+0x60>
2fff7f14:	a804      	add	r0, sp, #16
2fff7f16:	f000 fb6b 	bl	2fff85f0 <fdt_get_address>
2fff7f1a:	b1d0      	cbz	r0, 2fff7f52 <initialize_pmic_i2c+0x4a>
2fff7f1c:	f7ff fe36 	bl	2fff7b8c <dt_get_pmic_node>
2fff7f20:	1e06      	subs	r6, r0, #0
2fff7f22:	db64      	blt.n	2fff7fee <initialize_pmic_i2c+0xe6>
2fff7f24:	4a34      	ldr	r2, [pc, #208]	; (2fff7ff8 <initialize_pmic_i2c+0xf0>)
2fff7f26:	2300      	movs	r3, #0
2fff7f28:	9804      	ldr	r0, [sp, #16]
2fff7f2a:	4631      	mov	r1, r6
2fff7f2c:	f001 ff57 	bl	2fff9dde <fdt_getprop>
2fff7f30:	b178      	cbz	r0, 2fff7f52 <initialize_pmic_i2c+0x4a>
2fff7f32:	6800      	ldr	r0, [r0, #0]
2fff7f34:	f7ff fe28 	bl	2fff7b88 <fdt32_to_cpu>
2fff7f38:	0040      	lsls	r0, r0, #1
2fff7f3a:	4b30      	ldr	r3, [pc, #192]	; (2fff7ffc <initialize_pmic_i2c+0xf4>)
2fff7f3c:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
2fff7f40:	6018      	str	r0, [r3, #0]
2fff7f42:	d20e      	bcs.n	2fff7f62 <initialize_pmic_i2c+0x5a>
2fff7f44:	9804      	ldr	r0, [sp, #16]
2fff7f46:	4631      	mov	r1, r6
2fff7f48:	f002 f82b 	bl	2fff9fa2 <fdt_parent_offset>
2fff7f4c:	6028      	str	r0, [r5, #0]
2fff7f4e:	2800      	cmp	r0, #0
2fff7f50:	da0a      	bge.n	2fff7f68 <initialize_pmic_i2c+0x60>
2fff7f52:	482b      	ldr	r0, [pc, #172]	; (2fff8000 <initialize_pmic_i2c+0xf8>)
2fff7f54:	4621      	mov	r1, r4
2fff7f56:	f7fa fee1 	bl	2fff2d1c <tf_log>
2fff7f5a:	f7fa ff83 	bl	2fff2e64 <console_flush>
2fff7f5e:	f001 e8a2 	blx	2fff90a4 <do_panic>
2fff7f62:	f06f 040e 	mvn.w	r4, #14
2fff7f66:	e7f4      	b.n	2fff7f52 <initialize_pmic_i2c+0x4a>
2fff7f68:	6829      	ldr	r1, [r5, #0]
2fff7f6a:	4668      	mov	r0, sp
2fff7f6c:	f000 fbe8 	bl	2fff8740 <dt_fill_device_info>
2fff7f70:	9b00      	ldr	r3, [sp, #0]
2fff7f72:	b333      	cbz	r3, 2fff7fc2 <initialize_pmic_i2c+0xba>
2fff7f74:	6828      	ldr	r0, [r5, #0]
2fff7f76:	a904      	add	r1, sp, #16
2fff7f78:	f7ff f9a8 	bl	2fff72cc <stm32_i2c_get_setup_from_fdt>
2fff7f7c:	1e04      	subs	r4, r0, #0
2fff7f7e:	dbe8      	blt.n	2fff7f52 <initialize_pmic_i2c+0x4a>
2fff7f80:	d135      	bne.n	2fff7fee <initialize_pmic_i2c+0xe6>
2fff7f82:	4d20      	ldr	r5, [pc, #128]	; (2fff8004 <initialize_pmic_i2c+0xfc>)
2fff7f84:	2701      	movs	r7, #1
2fff7f86:	9b00      	ldr	r3, [sp, #0]
2fff7f88:	a904      	add	r1, sp, #16
2fff7f8a:	4e1c      	ldr	r6, [pc, #112]	; (2fff7ffc <initialize_pmic_i2c+0xf4>)
2fff7f8c:	4628      	mov	r0, r5
2fff7f8e:	602b      	str	r3, [r5, #0]
2fff7f90:	9b03      	ldr	r3, [sp, #12]
2fff7f92:	612c      	str	r4, [r5, #16]
2fff7f94:	606b      	str	r3, [r5, #4]
2fff7f96:	9b01      	ldr	r3, [sp, #4]
2fff7f98:	9705      	str	r7, [sp, #20]
2fff7f9a:	60ab      	str	r3, [r5, #8]
2fff7f9c:	6833      	ldr	r3, [r6, #0]
2fff7f9e:	e9cd 4406 	strd	r4, r4, [sp, #24]
2fff7fa2:	9304      	str	r3, [sp, #16]
2fff7fa4:	e9cd 4408 	strd	r4, r4, [sp, #32]
2fff7fa8:	940a      	str	r4, [sp, #40]	; 0x28
2fff7faa:	970e      	str	r7, [sp, #56]	; 0x38
2fff7fac:	f88d 403c 	strb.w	r4, [sp, #60]	; 0x3c
2fff7fb0:	f7ff f9bc 	bl	2fff732c <stm32_i2c_init>
2fff7fb4:	4602      	mov	r2, r0
2fff7fb6:	b138      	cbz	r0, 2fff7fc8 <initialize_pmic_i2c+0xc0>
2fff7fb8:	6829      	ldr	r1, [r5, #0]
2fff7fba:	4813      	ldr	r0, [pc, #76]	; (2fff8008 <initialize_pmic_i2c+0x100>)
2fff7fbc:	f7fa feae 	bl	2fff2d1c <tf_log>
2fff7fc0:	e7cb      	b.n	2fff7f5a <initialize_pmic_i2c+0x52>
2fff7fc2:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff7fc6:	e7c4      	b.n	2fff7f52 <initialize_pmic_i2c+0x4a>
2fff7fc8:	8831      	ldrh	r1, [r6, #0]
2fff7fca:	2319      	movs	r3, #25
2fff7fcc:	463a      	mov	r2, r7
2fff7fce:	4628      	mov	r0, r5
2fff7fd0:	f7ff fbec 	bl	2fff77ac <stm32_i2c_is_device_ready>
2fff7fd4:	4604      	mov	r4, r0
2fff7fd6:	b918      	cbnz	r0, 2fff7fe0 <initialize_pmic_i2c+0xd8>
2fff7fd8:	480c      	ldr	r0, [pc, #48]	; (2fff800c <initialize_pmic_i2c+0x104>)
2fff7fda:	f7fa fe9f 	bl	2fff2d1c <tf_log>
2fff7fde:	e7bc      	b.n	2fff7f5a <initialize_pmic_i2c+0x52>
2fff7fe0:	8831      	ldrh	r1, [r6, #0]
2fff7fe2:	4628      	mov	r0, r5
2fff7fe4:	f000 f9c2 	bl	2fff836c <stpmic1_bind_i2c>
2fff7fe8:	4620      	mov	r0, r4
2fff7fea:	b011      	add	sp, #68	; 0x44
2fff7fec:	bdf0      	pop	{r4, r5, r6, r7, pc}
2fff7fee:	2400      	movs	r4, #0
2fff7ff0:	e7fa      	b.n	2fff7fe8 <initialize_pmic_i2c+0xe0>
2fff7ff2:	bf00      	nop
2fff7ff4:	2fffd52c 	.word	0x2fffd52c
2fff7ff8:	2fffae68 	.word	0x2fffae68
2fff7ffc:	2fffeb0c 	.word	0x2fffeb0c
2fff8000:	2fffc5a8 	.word	0x2fffc5a8
2fff8004:	2fffeae8 	.word	0x2fffeae8
2fff8008:	2fffc5c6 	.word	0x2fffc5c6
2fff800c:	2fffc5e6 	.word	0x2fffc5e6

2fff8010 <initialize_pmic>:
2fff8010:	b510      	push	{r4, lr}
2fff8012:	f7ff ff79 	bl	2fff7f08 <initialize_pmic_i2c>
2fff8016:	4c0a      	ldr	r4, [pc, #40]	; (2fff8040 <initialize_pmic+0x30>)
2fff8018:	b928      	cbnz	r0, 2fff8026 <initialize_pmic+0x16>
2fff801a:	6820      	ldr	r0, [r4, #0]
2fff801c:	b178      	cbz	r0, 2fff803e <initialize_pmic+0x2e>
2fff801e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff8022:	f7f8 bd19 	b.w	2fff0a58 <stm32mp_register_non_secure_periph_iomem>
2fff8026:	f7ff ff13 	bl	2fff7e50 <dt_pmic_status>
2fff802a:	2802      	cmp	r0, #2
2fff802c:	d1f5      	bne.n	2fff801a <initialize_pmic+0xa>
2fff802e:	e9d4 0300 	ldrd	r0, r3, [r4]
2fff8032:	2b02      	cmp	r3, #2
2fff8034:	d1f1      	bne.n	2fff801a <initialize_pmic+0xa>
2fff8036:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff803a:	f7f8 bd0a 	b.w	2fff0a52 <stm32mp_register_secure_periph_iomem>
2fff803e:	bd10      	pop	{r4, pc}
2fff8040:	2fffeae8 	.word	0x2fffeae8

2fff8044 <get_regulator_data>:
2fff8044:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff8048:	4606      	mov	r6, r0
2fff804a:	4c0c      	ldr	r4, [pc, #48]	; (2fff807c <get_regulator_data+0x38>)
2fff804c:	2500      	movs	r5, #0
2fff804e:	012f      	lsls	r7, r5, #4
2fff8050:	f857 8004 	ldr.w	r8, [r7, r4]
2fff8054:	4640      	mov	r0, r8
2fff8056:	f002 fa0c 	bl	2fffa472 <strlen>
2fff805a:	4602      	mov	r2, r0
2fff805c:	4641      	mov	r1, r8
2fff805e:	4630      	mov	r0, r6
2fff8060:	f002 fa0f 	bl	2fffa482 <strncmp>
2fff8064:	b910      	cbnz	r0, 2fff806c <get_regulator_data+0x28>
2fff8066:	19e0      	adds	r0, r4, r7
2fff8068:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff806c:	3501      	adds	r5, #1
2fff806e:	2d0e      	cmp	r5, #14
2fff8070:	d1ed      	bne.n	2fff804e <get_regulator_data+0xa>
2fff8072:	f7fa fef7 	bl	2fff2e64 <console_flush>
2fff8076:	f001 e816 	blx	2fff90a4 <do_panic>
2fff807a:	bf00      	nop
2fff807c:	2fffc92c 	.word	0x2fffc92c

2fff8080 <voltage_to_index>:
2fff8080:	b538      	push	{r3, r4, r5, lr}
2fff8082:	460c      	mov	r4, r1
2fff8084:	f7ff ffde 	bl	2fff8044 <get_regulator_data>
2fff8088:	7a01      	ldrb	r1, [r0, #8]
2fff808a:	4602      	mov	r2, r0
2fff808c:	2300      	movs	r3, #0
2fff808e:	b2d8      	uxtb	r0, r3
2fff8090:	4281      	cmp	r1, r0
2fff8092:	d803      	bhi.n	2fff809c <voltage_to_index+0x1c>
2fff8094:	f7fa fee6 	bl	2fff2e64 <console_flush>
2fff8098:	f001 e804 	blx	2fff90a4 <do_panic>
2fff809c:	6855      	ldr	r5, [r2, #4]
2fff809e:	f835 5013 	ldrh.w	r5, [r5, r3, lsl #1]
2fff80a2:	3301      	adds	r3, #1
2fff80a4:	42a5      	cmp	r5, r4
2fff80a6:	d1f2      	bne.n	2fff808e <voltage_to_index+0xe>
2fff80a8:	bd38      	pop	{r3, r4, r5, pc}
	...

2fff80ac <stpmic1_register_read>:
2fff80ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff80ae:	2319      	movs	r3, #25
2fff80b0:	9302      	str	r3, [sp, #8]
2fff80b2:	2301      	movs	r3, #1
2fff80b4:	e9cd 1300 	strd	r1, r3, [sp]
2fff80b8:	4904      	ldr	r1, [pc, #16]	; (2fff80cc <stpmic1_register_read+0x20>)
2fff80ba:	4602      	mov	r2, r0
2fff80bc:	4804      	ldr	r0, [pc, #16]	; (2fff80d0 <stpmic1_register_read+0x24>)
2fff80be:	8809      	ldrh	r1, [r1, #0]
2fff80c0:	6800      	ldr	r0, [r0, #0]
2fff80c2:	f7ff fb69 	bl	2fff7798 <stm32_i2c_mem_read>
2fff80c6:	b005      	add	sp, #20
2fff80c8:	f85d fb04 	ldr.w	pc, [sp], #4
2fff80cc:	2fffeb10 	.word	0x2fffeb10
2fff80d0:	2fffeb14 	.word	0x2fffeb14

2fff80d4 <stpmic1_is_regulator_enabled>:
2fff80d4:	b507      	push	{r0, r1, r2, lr}
2fff80d6:	f7ff ffb5 	bl	2fff8044 <get_regulator_data>
2fff80da:	7a40      	ldrb	r0, [r0, #9]
2fff80dc:	f10d 0107 	add.w	r1, sp, #7
2fff80e0:	f7ff ffe4 	bl	2fff80ac <stpmic1_register_read>
2fff80e4:	b118      	cbz	r0, 2fff80ee <stpmic1_is_regulator_enabled+0x1a>
2fff80e6:	f7fa febd 	bl	2fff2e64 <console_flush>
2fff80ea:	f000 efdc 	blx	2fff90a4 <do_panic>
2fff80ee:	f89d 0007 	ldrb.w	r0, [sp, #7]
2fff80f2:	f000 0001 	and.w	r0, r0, #1
2fff80f6:	b003      	add	sp, #12
2fff80f8:	f85d fb04 	ldr.w	pc, [sp], #4

2fff80fc <stpmic1_regulator_voltage_get>:
2fff80fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff80fe:	4605      	mov	r5, r0
2fff8100:	f7ff ffa0 	bl	2fff8044 <get_regulator_data>
2fff8104:	4917      	ldr	r1, [pc, #92]	; (2fff8164 <stpmic1_regulator_voltage_get+0x68>)
2fff8106:	4604      	mov	r4, r0
2fff8108:	2204      	movs	r2, #4
2fff810a:	4628      	mov	r0, r5
2fff810c:	f002 f9b9 	bl	2fffa482 <strncmp>
2fff8110:	b328      	cbz	r0, 2fff815e <stpmic1_regulator_voltage_get+0x62>
2fff8112:	4915      	ldr	r1, [pc, #84]	; (2fff8168 <stpmic1_regulator_voltage_get+0x6c>)
2fff8114:	2203      	movs	r2, #3
2fff8116:	4628      	mov	r0, r5
2fff8118:	f002 f9b3 	bl	2fffa482 <strncmp>
2fff811c:	b110      	cbz	r0, 2fff8124 <stpmic1_regulator_voltage_get+0x28>
2fff811e:	2000      	movs	r0, #0
2fff8120:	b003      	add	sp, #12
2fff8122:	bd30      	pop	{r4, r5, pc}
2fff8124:	4911      	ldr	r1, [pc, #68]	; (2fff816c <stpmic1_regulator_voltage_get+0x70>)
2fff8126:	2204      	movs	r2, #4
2fff8128:	4628      	mov	r0, r5
2fff812a:	f002 f9aa 	bl	2fffa482 <strncmp>
2fff812e:	2800      	cmp	r0, #0
2fff8130:	d0f5      	beq.n	2fff811e <stpmic1_regulator_voltage_get+0x22>
2fff8132:	257c      	movs	r5, #124	; 0x7c
2fff8134:	7a60      	ldrb	r0, [r4, #9]
2fff8136:	f10d 0107 	add.w	r1, sp, #7
2fff813a:	f7ff ffb7 	bl	2fff80ac <stpmic1_register_read>
2fff813e:	2800      	cmp	r0, #0
2fff8140:	dbee      	blt.n	2fff8120 <stpmic1_regulator_voltage_get+0x24>
2fff8142:	f89d 3007 	ldrb.w	r3, [sp, #7]
2fff8146:	401d      	ands	r5, r3
2fff8148:	7a23      	ldrb	r3, [r4, #8]
2fff814a:	08aa      	lsrs	r2, r5, #2
2fff814c:	ebb3 0f95 	cmp.w	r3, r5, lsr #2
2fff8150:	bf32      	itee	cc
2fff8152:	f06f 0021 	mvncc.w	r0, #33	; 0x21
2fff8156:	6863      	ldrcs	r3, [r4, #4]
2fff8158:	f833 0012 	ldrhcs.w	r0, [r3, r2, lsl #1]
2fff815c:	e7e0      	b.n	2fff8120 <stpmic1_regulator_voltage_get+0x24>
2fff815e:	25fc      	movs	r5, #252	; 0xfc
2fff8160:	e7e8      	b.n	2fff8134 <stpmic1_regulator_voltage_get+0x38>
2fff8162:	bf00      	nop
2fff8164:	2fffc5fd 	.word	0x2fffc5fd
2fff8168:	2fffc602 	.word	0x2fffc602
2fff816c:	2fffc606 	.word	0x2fffc606

2fff8170 <stpmic1_register_write>:
2fff8170:	b510      	push	{r4, lr}
2fff8172:	b088      	sub	sp, #32
2fff8174:	f10d 0217 	add.w	r2, sp, #23
2fff8178:	2319      	movs	r3, #25
2fff817a:	9200      	str	r2, [sp, #0]
2fff817c:	4604      	mov	r4, r0
2fff817e:	f88d 1017 	strb.w	r1, [sp, #23]
2fff8182:	4602      	mov	r2, r0
2fff8184:	490e      	ldr	r1, [pc, #56]	; (2fff81c0 <stpmic1_register_write+0x50>)
2fff8186:	480f      	ldr	r0, [pc, #60]	; (2fff81c4 <stpmic1_register_write+0x54>)
2fff8188:	9302      	str	r3, [sp, #8]
2fff818a:	2301      	movs	r3, #1
2fff818c:	9301      	str	r3, [sp, #4]
2fff818e:	8809      	ldrh	r1, [r1, #0]
2fff8190:	6800      	ldr	r0, [r0, #0]
2fff8192:	f7ff faf3 	bl	2fff777c <stm32_i2c_mem_write>
2fff8196:	b988      	cbnz	r0, 2fff81bc <stpmic1_register_write+0x4c>
2fff8198:	2c1b      	cmp	r4, #27
2fff819a:	d00f      	beq.n	2fff81bc <stpmic1_register_write+0x4c>
2fff819c:	2c40      	cmp	r4, #64	; 0x40
2fff819e:	d80d      	bhi.n	2fff81bc <stpmic1_register_write+0x4c>
2fff81a0:	f10d 011f 	add.w	r1, sp, #31
2fff81a4:	4620      	mov	r0, r4
2fff81a6:	f7ff ff81 	bl	2fff80ac <stpmic1_register_read>
2fff81aa:	b938      	cbnz	r0, 2fff81bc <stpmic1_register_write+0x4c>
2fff81ac:	f89d 201f 	ldrb.w	r2, [sp, #31]
2fff81b0:	f89d 3017 	ldrb.w	r3, [sp, #23]
2fff81b4:	429a      	cmp	r2, r3
2fff81b6:	bf18      	it	ne
2fff81b8:	f06f 0004 	mvnne.w	r0, #4
2fff81bc:	b008      	add	sp, #32
2fff81be:	bd10      	pop	{r4, pc}
2fff81c0:	2fffeb10 	.word	0x2fffeb10
2fff81c4:	2fffeb14 	.word	0x2fffeb14

2fff81c8 <stpmic1_lp_copy_reg>:
2fff81c8:	b513      	push	{r0, r1, r4, lr}
2fff81ca:	f7ff ff3b 	bl	2fff8044 <get_regulator_data>
2fff81ce:	4604      	mov	r4, r0
2fff81d0:	7a80      	ldrb	r0, [r0, #10]
2fff81d2:	b150      	cbz	r0, 2fff81ea <stpmic1_lp_copy_reg+0x22>
2fff81d4:	7a60      	ldrb	r0, [r4, #9]
2fff81d6:	f10d 0107 	add.w	r1, sp, #7
2fff81da:	f7ff ff67 	bl	2fff80ac <stpmic1_register_read>
2fff81de:	b920      	cbnz	r0, 2fff81ea <stpmic1_lp_copy_reg+0x22>
2fff81e0:	f89d 1007 	ldrb.w	r1, [sp, #7]
2fff81e4:	7aa0      	ldrb	r0, [r4, #10]
2fff81e6:	f7ff ffc3 	bl	2fff8170 <stpmic1_register_write>
2fff81ea:	b002      	add	sp, #8
2fff81ec:	bd10      	pop	{r4, pc}

2fff81ee <stpmic1_register_update>:
2fff81ee:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff81f0:	460e      	mov	r6, r1
2fff81f2:	f10d 0107 	add.w	r1, sp, #7
2fff81f6:	4605      	mov	r5, r0
2fff81f8:	4614      	mov	r4, r2
2fff81fa:	f7ff ff57 	bl	2fff80ac <stpmic1_register_read>
2fff81fe:	b958      	cbnz	r0, 2fff8218 <stpmic1_register_update+0x2a>
2fff8200:	f89d 3007 	ldrb.w	r3, [sp, #7]
2fff8204:	4628      	mov	r0, r5
2fff8206:	ea04 0106 	and.w	r1, r4, r6
2fff820a:	ea23 0304 	bic.w	r3, r3, r4
2fff820e:	4319      	orrs	r1, r3
2fff8210:	f88d 1007 	strb.w	r1, [sp, #7]
2fff8214:	f7ff ffac 	bl	2fff8170 <stpmic1_register_write>
2fff8218:	b002      	add	sp, #8
2fff821a:	bd70      	pop	{r4, r5, r6, pc}

2fff821c <stpmic1_powerctrl_on>:
2fff821c:	2204      	movs	r2, #4
2fff821e:	2010      	movs	r0, #16
2fff8220:	4611      	mov	r1, r2
2fff8222:	f7ff bfe4 	b.w	2fff81ee <stpmic1_register_update>

2fff8226 <stpmic1_switch_off>:
2fff8226:	2201      	movs	r2, #1
2fff8228:	2010      	movs	r0, #16
2fff822a:	4611      	mov	r1, r2
2fff822c:	f7ff bfdf 	b.w	2fff81ee <stpmic1_register_update>

2fff8230 <stpmic1_regulator_enable>:
2fff8230:	b508      	push	{r3, lr}
2fff8232:	f7ff ff07 	bl	2fff8044 <get_regulator_data>
2fff8236:	7a40      	ldrb	r0, [r0, #9]
2fff8238:	2201      	movs	r2, #1
2fff823a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff823e:	4611      	mov	r1, r2
2fff8240:	f7ff bfd5 	b.w	2fff81ee <stpmic1_register_update>

2fff8244 <stpmic1_regulator_voltage_set>:
2fff8244:	b570      	push	{r4, r5, r6, lr}
2fff8246:	4604      	mov	r4, r0
2fff8248:	f7ff ff1a 	bl	2fff8080 <voltage_to_index>
2fff824c:	4605      	mov	r5, r0
2fff824e:	4620      	mov	r0, r4
2fff8250:	f7ff fef8 	bl	2fff8044 <get_regulator_data>
2fff8254:	490f      	ldr	r1, [pc, #60]	; (2fff8294 <stpmic1_regulator_voltage_set+0x50>)
2fff8256:	4606      	mov	r6, r0
2fff8258:	2204      	movs	r2, #4
2fff825a:	4620      	mov	r0, r4
2fff825c:	f002 f911 	bl	2fffa482 <strncmp>
2fff8260:	b1a0      	cbz	r0, 2fff828c <stpmic1_regulator_voltage_set+0x48>
2fff8262:	490d      	ldr	r1, [pc, #52]	; (2fff8298 <stpmic1_regulator_voltage_set+0x54>)
2fff8264:	2203      	movs	r2, #3
2fff8266:	4620      	mov	r0, r4
2fff8268:	f002 f90b 	bl	2fffa482 <strncmp>
2fff826c:	b980      	cbnz	r0, 2fff8290 <stpmic1_regulator_voltage_set+0x4c>
2fff826e:	490b      	ldr	r1, [pc, #44]	; (2fff829c <stpmic1_regulator_voltage_set+0x58>)
2fff8270:	2204      	movs	r2, #4
2fff8272:	4620      	mov	r0, r4
2fff8274:	f002 f905 	bl	2fffa482 <strncmp>
2fff8278:	b150      	cbz	r0, 2fff8290 <stpmic1_regulator_voltage_set+0x4c>
2fff827a:	227c      	movs	r2, #124	; 0x7c
2fff827c:	00a9      	lsls	r1, r5, #2
2fff827e:	7a70      	ldrb	r0, [r6, #9]
2fff8280:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
2fff8284:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff8288:	f7ff bfb1 	b.w	2fff81ee <stpmic1_register_update>
2fff828c:	22fc      	movs	r2, #252	; 0xfc
2fff828e:	e7f5      	b.n	2fff827c <stpmic1_regulator_voltage_set+0x38>
2fff8290:	2000      	movs	r0, #0
2fff8292:	bd70      	pop	{r4, r5, r6, pc}
2fff8294:	2fffc5fd 	.word	0x2fffc5fd
2fff8298:	2fffc602 	.word	0x2fffc602
2fff829c:	2fffc606 	.word	0x2fffc606

2fff82a0 <stpmic1_regulator_pull_down_set>:
2fff82a0:	b508      	push	{r3, lr}
2fff82a2:	f7ff fecf 	bl	2fff8044 <get_regulator_data>
2fff82a6:	4603      	mov	r3, r0
2fff82a8:	7ac0      	ldrb	r0, [r0, #11]
2fff82aa:	b150      	cbz	r0, 2fff82c2 <stpmic1_regulator_pull_down_set+0x22>
2fff82ac:	7b1b      	ldrb	r3, [r3, #12]
2fff82ae:	2203      	movs	r2, #3
2fff82b0:	2101      	movs	r1, #1
2fff82b2:	409a      	lsls	r2, r3
2fff82b4:	4099      	lsls	r1, r3
2fff82b6:	b2d2      	uxtb	r2, r2
2fff82b8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff82bc:	b2c9      	uxtb	r1, r1
2fff82be:	f7ff bf96 	b.w	2fff81ee <stpmic1_register_update>
2fff82c2:	bd08      	pop	{r3, pc}

2fff82c4 <stpmic1_regulator_mask_reset_set>:
2fff82c4:	b508      	push	{r3, lr}
2fff82c6:	f7ff febd 	bl	2fff8044 <get_regulator_data>
2fff82ca:	7b83      	ldrb	r3, [r0, #14]
2fff82cc:	2201      	movs	r2, #1
2fff82ce:	7b40      	ldrb	r0, [r0, #13]
2fff82d0:	409a      	lsls	r2, r3
2fff82d2:	b2d2      	uxtb	r2, r2
2fff82d4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff82d8:	4611      	mov	r1, r2
2fff82da:	f7ff bf88 	b.w	2fff81ee <stpmic1_register_update>

2fff82de <stpmic1_lp_reg_on_off>:
2fff82de:	b510      	push	{r4, lr}
2fff82e0:	460c      	mov	r4, r1
2fff82e2:	f7ff feaf 	bl	2fff8044 <get_regulator_data>
2fff82e6:	7a80      	ldrb	r0, [r0, #10]
2fff82e8:	4621      	mov	r1, r4
2fff82ea:	2201      	movs	r2, #1
2fff82ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff82f0:	f7ff bf7d 	b.w	2fff81ee <stpmic1_register_update>

2fff82f4 <stpmic1_lp_set_mode>:
2fff82f4:	b510      	push	{r4, lr}
2fff82f6:	460c      	mov	r4, r1
2fff82f8:	f7ff fea4 	bl	2fff8044 <get_regulator_data>
2fff82fc:	0061      	lsls	r1, r4, #1
2fff82fe:	2202      	movs	r2, #2
2fff8300:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff8304:	7a80      	ldrb	r0, [r0, #10]
2fff8306:	f001 01fe 	and.w	r1, r1, #254	; 0xfe
2fff830a:	f7ff bf70 	b.w	2fff81ee <stpmic1_register_update>
	...

2fff8310 <stpmic1_lp_set_voltage>:
2fff8310:	b570      	push	{r4, r5, r6, lr}
2fff8312:	4604      	mov	r4, r0
2fff8314:	f7ff feb4 	bl	2fff8080 <voltage_to_index>
2fff8318:	4605      	mov	r5, r0
2fff831a:	4620      	mov	r0, r4
2fff831c:	f7ff fe92 	bl	2fff8044 <get_regulator_data>
2fff8320:	490f      	ldr	r1, [pc, #60]	; (2fff8360 <stpmic1_lp_set_voltage+0x50>)
2fff8322:	4606      	mov	r6, r0
2fff8324:	2204      	movs	r2, #4
2fff8326:	4620      	mov	r0, r4
2fff8328:	f002 f8ab 	bl	2fffa482 <strncmp>
2fff832c:	b1a0      	cbz	r0, 2fff8358 <stpmic1_lp_set_voltage+0x48>
2fff832e:	490d      	ldr	r1, [pc, #52]	; (2fff8364 <stpmic1_lp_set_voltage+0x54>)
2fff8330:	2203      	movs	r2, #3
2fff8332:	4620      	mov	r0, r4
2fff8334:	f002 f8a5 	bl	2fffa482 <strncmp>
2fff8338:	b980      	cbnz	r0, 2fff835c <stpmic1_lp_set_voltage+0x4c>
2fff833a:	490b      	ldr	r1, [pc, #44]	; (2fff8368 <stpmic1_lp_set_voltage+0x58>)
2fff833c:	2204      	movs	r2, #4
2fff833e:	4620      	mov	r0, r4
2fff8340:	f002 f89f 	bl	2fffa482 <strncmp>
2fff8344:	b150      	cbz	r0, 2fff835c <stpmic1_lp_set_voltage+0x4c>
2fff8346:	227c      	movs	r2, #124	; 0x7c
2fff8348:	00a9      	lsls	r1, r5, #2
2fff834a:	7ab0      	ldrb	r0, [r6, #10]
2fff834c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
2fff8350:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff8354:	f7ff bf4b 	b.w	2fff81ee <stpmic1_register_update>
2fff8358:	22fc      	movs	r2, #252	; 0xfc
2fff835a:	e7f5      	b.n	2fff8348 <stpmic1_lp_set_voltage+0x38>
2fff835c:	2000      	movs	r0, #0
2fff835e:	bd70      	pop	{r4, r5, r6, pc}
2fff8360:	2fffc5fd 	.word	0x2fffc5fd
2fff8364:	2fffc602 	.word	0x2fffc602
2fff8368:	2fffc606 	.word	0x2fffc606

2fff836c <stpmic1_bind_i2c>:
2fff836c:	4b02      	ldr	r3, [pc, #8]	; (2fff8378 <stpmic1_bind_i2c+0xc>)
2fff836e:	6018      	str	r0, [r3, #0]
2fff8370:	4b02      	ldr	r3, [pc, #8]	; (2fff837c <stpmic1_bind_i2c+0x10>)
2fff8372:	8019      	strh	r1, [r3, #0]
2fff8374:	4770      	bx	lr
2fff8376:	bf00      	nop
2fff8378:	2fffeb14 	.word	0x2fffeb14
2fff837c:	2fffeb10 	.word	0x2fffeb10

2fff8380 <stm32mp_reset_assert_to>:
2fff8380:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff8384:	f000 031f 	and.w	r3, r0, #31
2fff8388:	9101      	str	r1, [sp, #4]
2fff838a:	4604      	mov	r4, r0
2fff838c:	2501      	movs	r5, #1
2fff838e:	0964      	lsrs	r4, r4, #5
2fff8390:	409d      	lsls	r5, r3
2fff8392:	f7fa fe89 	bl	2fff30a8 <stm32mp_rcc_base>
2fff8396:	9901      	ldr	r1, [sp, #4]
2fff8398:	4682      	mov	sl, r0
2fff839a:	eb00 0b84 	add.w	fp, r0, r4, lsl #2
2fff839e:	f840 5024 	str.w	r5, [r0, r4, lsl #2]
2fff83a2:	b309      	cbz	r1, 2fff83e8 <stm32mp_reset_assert_to+0x68>
2fff83a4:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff83a8:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff83ac:	4a0f      	ldr	r2, [pc, #60]	; (2fff83ec <stm32mp_reset_assert_to+0x6c>)
2fff83ae:	2300      	movs	r3, #0
2fff83b0:	fba1 0100 	umull	r0, r1, r1, r0
2fff83b4:	f001 e814 	blx	2fff93e0 <__aeabi_uldivmod>
2fff83b8:	eb10 0806 	adds.w	r8, r0, r6
2fff83bc:	eb41 0907 	adc.w	r9, r1, r7
2fff83c0:	f8db 3000 	ldr.w	r3, [fp]
2fff83c4:	421d      	tst	r5, r3
2fff83c6:	d105      	bne.n	2fff83d4 <stm32mp_reset_assert_to+0x54>
2fff83c8:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff83cc:	4599      	cmp	r9, r3
2fff83ce:	bf08      	it	eq
2fff83d0:	4590      	cmpeq	r8, r2
2fff83d2:	d2f5      	bcs.n	2fff83c0 <stm32mp_reset_assert_to+0x40>
2fff83d4:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
2fff83d8:	421d      	tst	r5, r3
2fff83da:	bf14      	ite	ne
2fff83dc:	2000      	movne	r0, #0
2fff83de:	f06f 003b 	mvneq.w	r0, #59	; 0x3b
2fff83e2:	b003      	add	sp, #12
2fff83e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff83e8:	4608      	mov	r0, r1
2fff83ea:	e7fa      	b.n	2fff83e2 <stm32mp_reset_assert_to+0x62>
2fff83ec:	000f4240 	.word	0x000f4240

2fff83f0 <stm32mp_reset_deassert_to>:
2fff83f0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff83f4:	4604      	mov	r4, r0
2fff83f6:	9101      	str	r1, [sp, #4]
2fff83f8:	f000 031f 	and.w	r3, r0, #31
2fff83fc:	0964      	lsrs	r4, r4, #5
2fff83fe:	2501      	movs	r5, #1
2fff8400:	3401      	adds	r4, #1
2fff8402:	409d      	lsls	r5, r3
2fff8404:	f7fa fe50 	bl	2fff30a8 <stm32mp_rcc_base>
2fff8408:	9901      	ldr	r1, [sp, #4]
2fff840a:	4682      	mov	sl, r0
2fff840c:	eb00 0b84 	add.w	fp, r0, r4, lsl #2
2fff8410:	f840 5024 	str.w	r5, [r0, r4, lsl #2]
2fff8414:	b309      	cbz	r1, 2fff845a <stm32mp_reset_deassert_to+0x6a>
2fff8416:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff841a:	ec57 6f0e 	mrrc	15, 0, r6, r7, cr14
2fff841e:	4a10      	ldr	r2, [pc, #64]	; (2fff8460 <stm32mp_reset_deassert_to+0x70>)
2fff8420:	2300      	movs	r3, #0
2fff8422:	fba1 0100 	umull	r0, r1, r1, r0
2fff8426:	f000 efdc 	blx	2fff93e0 <__aeabi_uldivmod>
2fff842a:	eb10 0806 	adds.w	r8, r0, r6
2fff842e:	eb41 0907 	adc.w	r9, r1, r7
2fff8432:	f8db 3000 	ldr.w	r3, [fp]
2fff8436:	421d      	tst	r5, r3
2fff8438:	d005      	beq.n	2fff8446 <stm32mp_reset_deassert_to+0x56>
2fff843a:	ec53 2f0e 	mrrc	15, 0, r2, r3, cr14
2fff843e:	4599      	cmp	r9, r3
2fff8440:	bf08      	it	eq
2fff8442:	4590      	cmpeq	r8, r2
2fff8444:	d2f5      	bcs.n	2fff8432 <stm32mp_reset_deassert_to+0x42>
2fff8446:	f85a 3024 	ldr.w	r3, [sl, r4, lsl #2]
2fff844a:	421d      	tst	r5, r3
2fff844c:	bf0c      	ite	eq
2fff844e:	2000      	moveq	r0, #0
2fff8450:	f06f 003b 	mvnne.w	r0, #59	; 0x3b
2fff8454:	b003      	add	sp, #12
2fff8456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff845a:	4608      	mov	r0, r1
2fff845c:	e7fa      	b.n	2fff8454 <stm32mp_reset_deassert_to+0x64>
2fff845e:	bf00      	nop
2fff8460:	000f4240 	.word	0x000f4240

2fff8464 <fdt32_to_cpu>:
2fff8464:	ba00      	rev	r0, r0
2fff8466:	4770      	bx	lr

2fff8468 <fdt_get_node_parent_address_cells>:
2fff8468:	4601      	mov	r1, r0
2fff846a:	b508      	push	{r3, lr}
2fff846c:	4806      	ldr	r0, [pc, #24]	; (2fff8488 <fdt_get_node_parent_address_cells+0x20>)
2fff846e:	f001 fd98 	bl	2fff9fa2 <fdt_parent_offset>
2fff8472:	1e01      	subs	r1, r0, #0
2fff8474:	db04      	blt.n	2fff8480 <fdt_get_node_parent_address_cells+0x18>
2fff8476:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff847a:	4803      	ldr	r0, [pc, #12]	; (2fff8488 <fdt_get_node_parent_address_cells+0x20>)
2fff847c:	f001 bb5c 	b.w	2fff9b38 <fdt_address_cells>
2fff8480:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff8484:	bd08      	pop	{r3, pc}
2fff8486:	bf00      	nop
2fff8488:	2ffcb000 	.word	0x2ffcb000

2fff848c <dt_get_stdout_node_offset>:
2fff848c:	4919      	ldr	r1, [pc, #100]	; (2fff84f4 <dt_get_stdout_node_offset+0x68>)
2fff848e:	481a      	ldr	r0, [pc, #104]	; (2fff84f8 <dt_get_stdout_node_offset+0x6c>)
2fff8490:	b570      	push	{r4, r5, r6, lr}
2fff8492:	f001 fd36 	bl	2fff9f02 <fdt_path_offset>
2fff8496:	1e01      	subs	r1, r0, #0
2fff8498:	da05      	bge.n	2fff84a6 <dt_get_stdout_node_offset+0x1a>
2fff849a:	4918      	ldr	r1, [pc, #96]	; (2fff84fc <dt_get_stdout_node_offset+0x70>)
2fff849c:	4816      	ldr	r0, [pc, #88]	; (2fff84f8 <dt_get_stdout_node_offset+0x6c>)
2fff849e:	f001 fd30 	bl	2fff9f02 <fdt_path_offset>
2fff84a2:	1e01      	subs	r1, r0, #0
2fff84a4:	db23      	blt.n	2fff84ee <dt_get_stdout_node_offset+0x62>
2fff84a6:	4a16      	ldr	r2, [pc, #88]	; (2fff8500 <dt_get_stdout_node_offset+0x74>)
2fff84a8:	2300      	movs	r3, #0
2fff84aa:	4813      	ldr	r0, [pc, #76]	; (2fff84f8 <dt_get_stdout_node_offset+0x6c>)
2fff84ac:	f001 fc97 	bl	2fff9dde <fdt_getprop>
2fff84b0:	4604      	mov	r4, r0
2fff84b2:	b1e0      	cbz	r0, 2fff84ee <dt_get_stdout_node_offset+0x62>
2fff84b4:	213a      	movs	r1, #58	; 0x3a
2fff84b6:	f001 ffa9 	bl	2fffa40c <strchr>
2fff84ba:	b9a8      	cbnz	r0, 2fff84e8 <dt_get_stdout_node_offset+0x5c>
2fff84bc:	4621      	mov	r1, r4
2fff84be:	e00e      	b.n	2fff84de <dt_get_stdout_node_offset+0x52>
2fff84c0:	3501      	adds	r5, #1
2fff84c2:	1961      	adds	r1, r4, r5
2fff84c4:	2201      	movs	r2, #1
2fff84c6:	4630      	mov	r0, r6
2fff84c8:	f001 ffdb 	bl	2fffa482 <strncmp>
2fff84cc:	2800      	cmp	r0, #0
2fff84ce:	d1f7      	bne.n	2fff84c0 <dt_get_stdout_node_offset+0x34>
2fff84d0:	4809      	ldr	r0, [pc, #36]	; (2fff84f8 <dt_get_stdout_node_offset+0x6c>)
2fff84d2:	4621      	mov	r1, r4
2fff84d4:	462a      	mov	r2, r5
2fff84d6:	f001 fcb5 	bl	2fff9e44 <fdt_get_alias_namelen>
2fff84da:	4601      	mov	r1, r0
2fff84dc:	b138      	cbz	r0, 2fff84ee <dt_get_stdout_node_offset+0x62>
2fff84de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff84e2:	4805      	ldr	r0, [pc, #20]	; (2fff84f8 <dt_get_stdout_node_offset+0x6c>)
2fff84e4:	f001 bd0d 	b.w	2fff9f02 <fdt_path_offset>
2fff84e8:	4e06      	ldr	r6, [pc, #24]	; (2fff8504 <dt_get_stdout_node_offset+0x78>)
2fff84ea:	2500      	movs	r5, #0
2fff84ec:	e7e9      	b.n	2fff84c2 <dt_get_stdout_node_offset+0x36>
2fff84ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff84f2:	bd70      	pop	{r4, r5, r6, pc}
2fff84f4:	2fffca0e 	.word	0x2fffca0e
2fff84f8:	2ffcb000 	.word	0x2ffcb000
2fff84fc:	2fffca1d 	.word	0x2fffca1d
2fff8500:	2fffca25 	.word	0x2fffca25
2fff8504:	2fffca31 	.word	0x2fffca31

2fff8508 <dt_get_opp_freqvolt_from_subnode>:
2fff8508:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
2fff850c:	4604      	mov	r4, r0
2fff850e:	4688      	mov	r8, r1
2fff8510:	4615      	mov	r5, r2
2fff8512:	4a2c      	ldr	r2, [pc, #176]	; (2fff85c4 <dt_get_opp_freqvolt_from_subnode+0xbc>)
2fff8514:	4601      	mov	r1, r0
2fff8516:	482c      	ldr	r0, [pc, #176]	; (2fff85c8 <dt_get_opp_freqvolt_from_subnode+0xc0>)
2fff8518:	2300      	movs	r3, #0
2fff851a:	f001 fc60 	bl	2fff9dde <fdt_getprop>
2fff851e:	b948      	cbnz	r0, 2fff8534 <dt_get_opp_freqvolt_from_subnode+0x2c>
2fff8520:	4a2a      	ldr	r2, [pc, #168]	; (2fff85cc <dt_get_opp_freqvolt_from_subnode+0xc4>)
2fff8522:	2300      	movs	r3, #0
2fff8524:	4828      	ldr	r0, [pc, #160]	; (2fff85c8 <dt_get_opp_freqvolt_from_subnode+0xc0>)
2fff8526:	4621      	mov	r1, r4
2fff8528:	f001 fc59 	bl	2fff9dde <fdt_getprop>
2fff852c:	b968      	cbnz	r0, 2fff854a <dt_get_opp_freqvolt_from_subnode+0x42>
2fff852e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff8532:	e008      	b.n	2fff8546 <dt_get_opp_freqvolt_from_subnode+0x3e>
2fff8534:	6800      	ldr	r0, [r0, #0]
2fff8536:	f7ff ff95 	bl	2fff8464 <fdt32_to_cpu>
2fff853a:	f7fa fee1 	bl	2fff3300 <stm32mp_supports_cpu_opp>
2fff853e:	2800      	cmp	r0, #0
2fff8540:	d1ee      	bne.n	2fff8520 <dt_get_opp_freqvolt_from_subnode+0x18>
2fff8542:	f06f 000e 	mvn.w	r0, #14
2fff8546:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
2fff854a:	e9d0 0300 	ldrd	r0, r3, [r0]
2fff854e:	0202      	lsls	r2, r0, #8
2fff8550:	0a06      	lsrs	r6, r0, #8
2fff8552:	f402 027f 	and.w	r2, r2, #16711680	; 0xff0000
2fff8556:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
2fff855a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
2fff855e:	4332      	orrs	r2, r6
2fff8560:	0e19      	lsrs	r1, r3, #24
2fff8562:	021e      	lsls	r6, r3, #8
2fff8564:	ea41 6103 	orr.w	r1, r1, r3, lsl #24
2fff8568:	f406 067f 	and.w	r6, r6, #16711680	; 0xff0000
2fff856c:	0a1b      	lsrs	r3, r3, #8
2fff856e:	4331      	orrs	r1, r6
2fff8570:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
2fff8574:	ea41 0603 	orr.w	r6, r1, r3
2fff8578:	2300      	movs	r3, #0
2fff857a:	ea42 6710 	orr.w	r7, r2, r0, lsr #24
2fff857e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
2fff8582:	4630      	mov	r0, r6
2fff8584:	4639      	mov	r1, r7
2fff8586:	f000 ef2c 	blx	2fff93e0 <__aeabi_uldivmod>
2fff858a:	f5b7 7f7a 	cmp.w	r7, #1000	; 0x3e8
2fff858e:	4681      	mov	r9, r0
2fff8590:	bf08      	it	eq
2fff8592:	2e00      	cmpeq	r6, #0
2fff8594:	d2d5      	bcs.n	2fff8542 <dt_get_opp_freqvolt_from_subnode+0x3a>
2fff8596:	4a0e      	ldr	r2, [pc, #56]	; (2fff85d0 <dt_get_opp_freqvolt_from_subnode+0xc8>)
2fff8598:	2300      	movs	r3, #0
2fff859a:	480b      	ldr	r0, [pc, #44]	; (2fff85c8 <dt_get_opp_freqvolt_from_subnode+0xc0>)
2fff859c:	4621      	mov	r1, r4
2fff859e:	f001 fc1e 	bl	2fff9dde <fdt_getprop>
2fff85a2:	2800      	cmp	r0, #0
2fff85a4:	d0c3      	beq.n	2fff852e <dt_get_opp_freqvolt_from_subnode+0x26>
2fff85a6:	6800      	ldr	r0, [r0, #0]
2fff85a8:	f7ff ff5c 	bl	2fff8464 <fdt32_to_cpu>
2fff85ac:	f1b0 7f7a 	cmp.w	r0, #65536000	; 0x3e80000
2fff85b0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
2fff85b4:	fbb0 f3f3 	udiv	r3, r0, r3
2fff85b8:	d2c3      	bcs.n	2fff8542 <dt_get_opp_freqvolt_from_subnode+0x3a>
2fff85ba:	f8c8 9000 	str.w	r9, [r8]
2fff85be:	2000      	movs	r0, #0
2fff85c0:	602b      	str	r3, [r5, #0]
2fff85c2:	e7c0      	b.n	2fff8546 <dt_get_opp_freqvolt_from_subnode+0x3e>
2fff85c4:	2fffca33 	.word	0x2fffca33
2fff85c8:	2ffcb000 	.word	0x2ffcb000
2fff85cc:	2fffca44 	.word	0x2fffca44
2fff85d0:	2fffca4b 	.word	0x2fffca4b

2fff85d4 <dt_open_and_check>:
2fff85d4:	b508      	push	{r3, lr}
2fff85d6:	4804      	ldr	r0, [pc, #16]	; (2fff85e8 <dt_open_and_check+0x14>)
2fff85d8:	f001 f97c 	bl	2fff98d4 <fdt_check_header>
2fff85dc:	b910      	cbnz	r0, 2fff85e4 <dt_open_and_check+0x10>
2fff85de:	4b03      	ldr	r3, [pc, #12]	; (2fff85ec <dt_open_and_check+0x18>)
2fff85e0:	2201      	movs	r2, #1
2fff85e2:	601a      	str	r2, [r3, #0]
2fff85e4:	bd08      	pop	{r3, pc}
2fff85e6:	bf00      	nop
2fff85e8:	2ffcb000 	.word	0x2ffcb000
2fff85ec:	2fffeb18 	.word	0x2fffeb18

2fff85f0 <fdt_get_address>:
2fff85f0:	4a03      	ldr	r2, [pc, #12]	; (2fff8600 <fdt_get_address+0x10>)
2fff85f2:	4603      	mov	r3, r0
2fff85f4:	6810      	ldr	r0, [r2, #0]
2fff85f6:	2801      	cmp	r0, #1
2fff85f8:	bf04      	itt	eq
2fff85fa:	4a02      	ldreq	r2, [pc, #8]	; (2fff8604 <fdt_get_address+0x14>)
2fff85fc:	601a      	streq	r2, [r3, #0]
2fff85fe:	4770      	bx	lr
2fff8600:	2fffeb18 	.word	0x2fffeb18
2fff8604:	2ffcb000 	.word	0x2ffcb000

2fff8608 <fdt_get_status>:
2fff8608:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff860a:	4605      	mov	r5, r0
2fff860c:	4a13      	ldr	r2, [pc, #76]	; (2fff865c <fdt_get_status+0x54>)
2fff860e:	4601      	mov	r1, r0
2fff8610:	4813      	ldr	r0, [pc, #76]	; (2fff8660 <fdt_get_status+0x58>)
2fff8612:	ab01      	add	r3, sp, #4
2fff8614:	f001 fbe3 	bl	2fff9dde <fdt_getprop>
2fff8618:	b198      	cbz	r0, 2fff8642 <fdt_get_status+0x3a>
2fff861a:	9a01      	ldr	r2, [sp, #4]
2fff861c:	4911      	ldr	r1, [pc, #68]	; (2fff8664 <fdt_get_status+0x5c>)
2fff861e:	f001 ff30 	bl	2fffa482 <strncmp>
2fff8622:	fab0 f480 	clz	r4, r0
2fff8626:	0964      	lsrs	r4, r4, #5
2fff8628:	4a0f      	ldr	r2, [pc, #60]	; (2fff8668 <fdt_get_status+0x60>)
2fff862a:	ab01      	add	r3, sp, #4
2fff862c:	480c      	ldr	r0, [pc, #48]	; (2fff8660 <fdt_get_status+0x58>)
2fff862e:	4629      	mov	r1, r5
2fff8630:	f001 fbd5 	bl	2fff9dde <fdt_getprop>
2fff8634:	b938      	cbnz	r0, 2fff8646 <fdt_get_status+0x3e>
2fff8636:	2c01      	cmp	r4, #1
2fff8638:	bf08      	it	eq
2fff863a:	2403      	moveq	r4, #3
2fff863c:	4620      	mov	r0, r4
2fff863e:	b003      	add	sp, #12
2fff8640:	bd30      	pop	{r4, r5, pc}
2fff8642:	2401      	movs	r4, #1
2fff8644:	e7f0      	b.n	2fff8628 <fdt_get_status+0x20>
2fff8646:	9a01      	ldr	r2, [sp, #4]
2fff8648:	4906      	ldr	r1, [pc, #24]	; (2fff8664 <fdt_get_status+0x5c>)
2fff864a:	f001 ff1a 	bl	2fffa482 <strncmp>
2fff864e:	2800      	cmp	r0, #0
2fff8650:	d1f4      	bne.n	2fff863c <fdt_get_status+0x34>
2fff8652:	f044 0402 	orr.w	r4, r4, #2
2fff8656:	b2e4      	uxtb	r4, r4
2fff8658:	e7f0      	b.n	2fff863c <fdt_get_status+0x34>
2fff865a:	bf00      	nop
2fff865c:	2fffca65 	.word	0x2fffca65
2fff8660:	2ffcb000 	.word	0x2ffcb000
2fff8664:	2fffca59 	.word	0x2fffca59
2fff8668:	2fffca5e 	.word	0x2fffca5e

2fff866c <fdt_get_interrupt>:
2fff866c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff866e:	461f      	mov	r7, r3
2fff8670:	4616      	mov	r6, r2
2fff8672:	4605      	mov	r5, r0
2fff8674:	460c      	mov	r4, r1
2fff8676:	f7ff ffc7 	bl	2fff8608 <fdt_get_status>
2fff867a:	2802      	cmp	r0, #2
2fff867c:	f04f 0300 	mov.w	r3, #0
2fff8680:	703b      	strb	r3, [r7, #0]
2fff8682:	4633      	mov	r3, r6
2fff8684:	d116      	bne.n	2fff86b4 <fdt_get_interrupt+0x48>
2fff8686:	4a0c      	ldr	r2, [pc, #48]	; (2fff86b8 <fdt_get_interrupt+0x4c>)
2fff8688:	4629      	mov	r1, r5
2fff868a:	480c      	ldr	r0, [pc, #48]	; (2fff86bc <fdt_get_interrupt+0x50>)
2fff868c:	f001 fba7 	bl	2fff9dde <fdt_getprop>
2fff8690:	6020      	str	r0, [r4, #0]
2fff8692:	b938      	cbnz	r0, 2fff86a4 <fdt_get_interrupt+0x38>
2fff8694:	4a0a      	ldr	r2, [pc, #40]	; (2fff86c0 <fdt_get_interrupt+0x54>)
2fff8696:	4633      	mov	r3, r6
2fff8698:	4808      	ldr	r0, [pc, #32]	; (2fff86bc <fdt_get_interrupt+0x50>)
2fff869a:	4629      	mov	r1, r5
2fff869c:	f001 fb9f 	bl	2fff9dde <fdt_getprop>
2fff86a0:	6020      	str	r0, [r4, #0]
2fff86a2:	e001      	b.n	2fff86a8 <fdt_get_interrupt+0x3c>
2fff86a4:	2301      	movs	r3, #1
2fff86a6:	703b      	strb	r3, [r7, #0]
2fff86a8:	6820      	ldr	r0, [r4, #0]
2fff86aa:	fab0 f080 	clz	r0, r0
2fff86ae:	0940      	lsrs	r0, r0, #5
2fff86b0:	4240      	negs	r0, r0
2fff86b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff86b4:	4a03      	ldr	r2, [pc, #12]	; (2fff86c4 <fdt_get_interrupt+0x58>)
2fff86b6:	e7ef      	b.n	2fff8698 <fdt_get_interrupt+0x2c>
2fff86b8:	2fffca6c 	.word	0x2fffca6c
2fff86bc:	2ffcb000 	.word	0x2ffcb000
2fff86c0:	2fffca87 	.word	0x2fffca87
2fff86c4:	2fffca80 	.word	0x2fffca80

2fff86c8 <fdt_read_uint32_default>:
2fff86c8:	b513      	push	{r0, r1, r4, lr}
2fff86ca:	4614      	mov	r4, r2
2fff86cc:	ab01      	add	r3, sp, #4
2fff86ce:	460a      	mov	r2, r1
2fff86d0:	4601      	mov	r1, r0
2fff86d2:	4806      	ldr	r0, [pc, #24]	; (2fff86ec <fdt_read_uint32_default+0x24>)
2fff86d4:	f001 fb83 	bl	2fff9dde <fdt_getprop>
2fff86d8:	b128      	cbz	r0, 2fff86e6 <fdt_read_uint32_default+0x1e>
2fff86da:	6800      	ldr	r0, [r0, #0]
2fff86dc:	b002      	add	sp, #8
2fff86de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff86e2:	f7ff bebf 	b.w	2fff8464 <fdt32_to_cpu>
2fff86e6:	4620      	mov	r0, r4
2fff86e8:	b002      	add	sp, #8
2fff86ea:	bd10      	pop	{r4, pc}
2fff86ec:	2ffcb000 	.word	0x2ffcb000

2fff86f0 <fdt_read_uint32_array>:
2fff86f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff86f2:	4615      	mov	r5, r2
2fff86f4:	461c      	mov	r4, r3
2fff86f6:	460a      	mov	r2, r1
2fff86f8:	ab01      	add	r3, sp, #4
2fff86fa:	4601      	mov	r1, r0
2fff86fc:	480f      	ldr	r0, [pc, #60]	; (2fff873c <fdt_read_uint32_array+0x4c>)
2fff86fe:	f001 fb6e 	bl	2fff9dde <fdt_getprop>
2fff8702:	4601      	mov	r1, r0
2fff8704:	b198      	cbz	r0, 2fff872e <fdt_read_uint32_array+0x3e>
2fff8706:	9a01      	ldr	r2, [sp, #4]
2fff8708:	00a3      	lsls	r3, r4, #2
2fff870a:	ebb2 0f84 	cmp.w	r2, r4, lsl #2
2fff870e:	d111      	bne.n	2fff8734 <fdt_read_uint32_array+0x44>
2fff8710:	089c      	lsrs	r4, r3, #2
2fff8712:	2300      	movs	r3, #0
2fff8714:	429c      	cmp	r4, r3
2fff8716:	d102      	bne.n	2fff871e <fdt_read_uint32_array+0x2e>
2fff8718:	2000      	movs	r0, #0
2fff871a:	b003      	add	sp, #12
2fff871c:	bd30      	pop	{r4, r5, pc}
2fff871e:	f851 0023 	ldr.w	r0, [r1, r3, lsl #2]
2fff8722:	f7ff fe9f 	bl	2fff8464 <fdt32_to_cpu>
2fff8726:	f845 0023 	str.w	r0, [r5, r3, lsl #2]
2fff872a:	3301      	adds	r3, #1
2fff872c:	e7f2      	b.n	2fff8714 <fdt_read_uint32_array+0x24>
2fff872e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff8732:	e7f2      	b.n	2fff871a <fdt_read_uint32_array+0x2a>
2fff8734:	f06f 000b 	mvn.w	r0, #11
2fff8738:	e7ef      	b.n	2fff871a <fdt_read_uint32_array+0x2a>
2fff873a:	bf00      	nop
2fff873c:	2ffcb000 	.word	0x2ffcb000

2fff8740 <dt_fill_device_info>:
2fff8740:	b538      	push	{r3, r4, r5, lr}
2fff8742:	4605      	mov	r5, r0
2fff8744:	4608      	mov	r0, r1
2fff8746:	460c      	mov	r4, r1
2fff8748:	f7ff fe8e 	bl	2fff8468 <fdt_get_node_parent_address_cells>
2fff874c:	2801      	cmp	r0, #1
2fff874e:	d004      	beq.n	2fff875a <dt_fill_device_info+0x1a>
2fff8750:	4818      	ldr	r0, [pc, #96]	; (2fff87b4 <dt_fill_device_info+0x74>)
2fff8752:	f240 1149 	movw	r1, #329	; 0x149
2fff8756:	f001 fcdf 	bl	2fffa118 <__assert>
2fff875a:	4a17      	ldr	r2, [pc, #92]	; (2fff87b8 <dt_fill_device_info+0x78>)
2fff875c:	2300      	movs	r3, #0
2fff875e:	4817      	ldr	r0, [pc, #92]	; (2fff87bc <dt_fill_device_info+0x7c>)
2fff8760:	4621      	mov	r1, r4
2fff8762:	f001 fb3c 	bl	2fff9dde <fdt_getprop>
2fff8766:	b110      	cbz	r0, 2fff876e <dt_fill_device_info+0x2e>
2fff8768:	6800      	ldr	r0, [r0, #0]
2fff876a:	f7ff fe7b 	bl	2fff8464 <fdt32_to_cpu>
2fff876e:	6028      	str	r0, [r5, #0]
2fff8770:	2300      	movs	r3, #0
2fff8772:	4a13      	ldr	r2, [pc, #76]	; (2fff87c0 <dt_fill_device_info+0x80>)
2fff8774:	4621      	mov	r1, r4
2fff8776:	4811      	ldr	r0, [pc, #68]	; (2fff87bc <dt_fill_device_info+0x7c>)
2fff8778:	f001 fb31 	bl	2fff9dde <fdt_getprop>
2fff877c:	b198      	cbz	r0, 2fff87a6 <dt_fill_device_info+0x66>
2fff877e:	6840      	ldr	r0, [r0, #4]
2fff8780:	f7ff fe70 	bl	2fff8464 <fdt32_to_cpu>
2fff8784:	6068      	str	r0, [r5, #4]
2fff8786:	2300      	movs	r3, #0
2fff8788:	4a0e      	ldr	r2, [pc, #56]	; (2fff87c4 <dt_fill_device_info+0x84>)
2fff878a:	4621      	mov	r1, r4
2fff878c:	480b      	ldr	r0, [pc, #44]	; (2fff87bc <dt_fill_device_info+0x7c>)
2fff878e:	f001 fb26 	bl	2fff9dde <fdt_getprop>
2fff8792:	b158      	cbz	r0, 2fff87ac <dt_fill_device_info+0x6c>
2fff8794:	6840      	ldr	r0, [r0, #4]
2fff8796:	f7ff fe65 	bl	2fff8464 <fdt32_to_cpu>
2fff879a:	60a8      	str	r0, [r5, #8]
2fff879c:	4620      	mov	r0, r4
2fff879e:	f7ff ff33 	bl	2fff8608 <fdt_get_status>
2fff87a2:	60e8      	str	r0, [r5, #12]
2fff87a4:	bd38      	pop	{r3, r4, r5, pc}
2fff87a6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff87aa:	e7eb      	b.n	2fff8784 <dt_fill_device_info+0x44>
2fff87ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff87b0:	e7f3      	b.n	2fff879a <dt_fill_device_info+0x5a>
2fff87b2:	bf00      	nop
2fff87b4:	2fffca92 	.word	0x2fffca92
2fff87b8:	2fffae68 	.word	0x2fffae68
2fff87bc:	2ffcb000 	.word	0x2ffcb000
2fff87c0:	2fffbbc1 	.word	0x2fffbbc1
2fff87c4:	2fffcab8 	.word	0x2fffcab8

2fff87c8 <dt_get_node>:
2fff87c8:	b538      	push	{r3, r4, r5, lr}
2fff87ca:	4605      	mov	r5, r0
2fff87cc:	4806      	ldr	r0, [pc, #24]	; (2fff87e8 <dt_get_node+0x20>)
2fff87ce:	f001 fc83 	bl	2fffa0d8 <fdt_node_offset_by_compatible>
2fff87d2:	1e04      	subs	r4, r0, #0
2fff87d4:	db05      	blt.n	2fff87e2 <dt_get_node+0x1a>
2fff87d6:	4621      	mov	r1, r4
2fff87d8:	4628      	mov	r0, r5
2fff87da:	f7ff ffb1 	bl	2fff8740 <dt_fill_device_info>
2fff87de:	4620      	mov	r0, r4
2fff87e0:	bd38      	pop	{r3, r4, r5, pc}
2fff87e2:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff87e6:	e7fa      	b.n	2fff87de <dt_get_node+0x16>
2fff87e8:	2ffcb000 	.word	0x2ffcb000

2fff87ec <dt_get_stdout_uart_info>:
2fff87ec:	b538      	push	{r3, r4, r5, lr}
2fff87ee:	4605      	mov	r5, r0
2fff87f0:	f7ff fe4c 	bl	2fff848c <dt_get_stdout_node_offset>
2fff87f4:	1e04      	subs	r4, r0, #0
2fff87f6:	db05      	blt.n	2fff8804 <dt_get_stdout_uart_info+0x18>
2fff87f8:	4621      	mov	r1, r4
2fff87fa:	4628      	mov	r0, r5
2fff87fc:	f7ff ffa0 	bl	2fff8740 <dt_fill_device_info>
2fff8800:	4620      	mov	r0, r4
2fff8802:	bd38      	pop	{r3, r4, r5, pc}
2fff8804:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff8808:	e7fa      	b.n	2fff8800 <dt_get_stdout_uart_info+0x14>
	...

2fff880c <dt_get_node_by_compatible>:
2fff880c:	b538      	push	{r3, r4, r5, lr}
2fff880e:	4602      	mov	r2, r0
2fff8810:	4605      	mov	r5, r0
2fff8812:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff8816:	4805      	ldr	r0, [pc, #20]	; (2fff882c <dt_get_node_by_compatible+0x20>)
2fff8818:	f001 fc5e 	bl	2fffa0d8 <fdt_node_offset_by_compatible>
2fff881c:	1e04      	subs	r4, r0, #0
2fff881e:	da03      	bge.n	2fff8828 <dt_get_node_by_compatible+0x1c>
2fff8820:	4803      	ldr	r0, [pc, #12]	; (2fff8830 <dt_get_node_by_compatible+0x24>)
2fff8822:	4629      	mov	r1, r5
2fff8824:	f7fa fa7a 	bl	2fff2d1c <tf_log>
2fff8828:	4620      	mov	r0, r4
2fff882a:	bd38      	pop	{r3, r4, r5, pc}
2fff882c:	2ffcb000 	.word	0x2ffcb000
2fff8830:	2fffcabf 	.word	0x2fffcabf

2fff8834 <dt_get_ddr_size>:
2fff8834:	4806      	ldr	r0, [pc, #24]	; (2fff8850 <dt_get_ddr_size+0x1c>)
2fff8836:	b508      	push	{r3, lr}
2fff8838:	f7ff ffe8 	bl	2fff880c <dt_get_node_by_compatible>
2fff883c:	2800      	cmp	r0, #0
2fff883e:	db05      	blt.n	2fff884c <dt_get_ddr_size+0x18>
2fff8840:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff8844:	4903      	ldr	r1, [pc, #12]	; (2fff8854 <dt_get_ddr_size+0x20>)
2fff8846:	2200      	movs	r2, #0
2fff8848:	f7ff bf3e 	b.w	2fff86c8 <fdt_read_uint32_default>
2fff884c:	2000      	movs	r0, #0
2fff884e:	bd08      	pop	{r3, pc}
2fff8850:	2fffcadb 	.word	0x2fffcadb
2fff8854:	2fffcaeb 	.word	0x2fffcaeb

2fff8858 <dt_get_all_opp_freqvolt>:
2fff8858:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
2fff885c:	460f      	mov	r7, r1
2fff885e:	4690      	mov	r8, r2
2fff8860:	4606      	mov	r6, r0
2fff8862:	b920      	cbnz	r0, 2fff886e <dt_get_all_opp_freqvolt+0x16>
2fff8864:	f240 2149 	movw	r1, #585	; 0x249
2fff8868:	481d      	ldr	r0, [pc, #116]	; (2fff88e0 <dt_get_all_opp_freqvolt+0x88>)
2fff886a:	f001 fc55 	bl	2fffa118 <__assert>
2fff886e:	b911      	cbnz	r1, 2fff8876 <dt_get_all_opp_freqvolt+0x1e>
2fff8870:	f240 214a 	movw	r1, #586	; 0x24a
2fff8874:	e7f8      	b.n	2fff8868 <dt_get_all_opp_freqvolt+0x10>
2fff8876:	b912      	cbnz	r2, 2fff887e <dt_get_all_opp_freqvolt+0x26>
2fff8878:	f240 214b 	movw	r1, #587	; 0x24b
2fff887c:	e7f4      	b.n	2fff8868 <dt_get_all_opp_freqvolt+0x10>
2fff887e:	4819      	ldr	r0, [pc, #100]	; (2fff88e4 <dt_get_all_opp_freqvolt+0x8c>)
2fff8880:	f7ff ffc4 	bl	2fff880c <dt_get_node_by_compatible>
2fff8884:	2800      	cmp	r0, #0
2fff8886:	db18      	blt.n	2fff88ba <dt_get_all_opp_freqvolt+0x62>
2fff8888:	f8df 905c 	ldr.w	r9, [pc, #92]	; 2fff88e8 <dt_get_all_opp_freqvolt+0x90>
2fff888c:	4601      	mov	r1, r0
2fff888e:	4816      	ldr	r0, [pc, #88]	; (2fff88e8 <dt_get_all_opp_freqvolt+0x90>)
2fff8890:	2500      	movs	r5, #0
2fff8892:	f001 f928 	bl	2fff9ae6 <fdt_first_subnode>
2fff8896:	4604      	mov	r4, r0
2fff8898:	2c00      	cmp	r4, #0
2fff889a:	da03      	bge.n	2fff88a4 <dt_get_all_opp_freqvolt+0x4c>
2fff889c:	b1ed      	cbz	r5, 2fff88da <dt_get_all_opp_freqvolt+0x82>
2fff889e:	6035      	str	r5, [r6, #0]
2fff88a0:	2000      	movs	r0, #0
2fff88a2:	e00a      	b.n	2fff88ba <dt_get_all_opp_freqvolt+0x62>
2fff88a4:	aa01      	add	r2, sp, #4
2fff88a6:	4669      	mov	r1, sp
2fff88a8:	4620      	mov	r0, r4
2fff88aa:	f7ff fe2d 	bl	2fff8508 <dt_get_opp_freqvolt_from_subnode>
2fff88ae:	b970      	cbnz	r0, 2fff88ce <dt_get_all_opp_freqvolt+0x76>
2fff88b0:	6833      	ldr	r3, [r6, #0]
2fff88b2:	42ab      	cmp	r3, r5
2fff88b4:	d804      	bhi.n	2fff88c0 <dt_get_all_opp_freqvolt+0x68>
2fff88b6:	f06f 0002 	mvn.w	r0, #2
2fff88ba:	b003      	add	sp, #12
2fff88bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
2fff88c0:	9b00      	ldr	r3, [sp, #0]
2fff88c2:	f847 3025 	str.w	r3, [r7, r5, lsl #2]
2fff88c6:	9b01      	ldr	r3, [sp, #4]
2fff88c8:	f848 3025 	str.w	r3, [r8, r5, lsl #2]
2fff88cc:	3501      	adds	r5, #1
2fff88ce:	4621      	mov	r1, r4
2fff88d0:	4648      	mov	r0, r9
2fff88d2:	f001 f91b 	bl	2fff9b0c <fdt_next_subnode>
2fff88d6:	4604      	mov	r4, r0
2fff88d8:	e7de      	b.n	2fff8898 <dt_get_all_opp_freqvolt+0x40>
2fff88da:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff88de:	e7ec      	b.n	2fff88ba <dt_get_all_opp_freqvolt+0x62>
2fff88e0:	2fffca92 	.word	0x2fffca92
2fff88e4:	2fffcaf7 	.word	0x2fffcaf7
2fff88e8:	2ffcb000 	.word	0x2ffcb000

2fff88ec <dt_get_cpu_regulator_name>:
2fff88ec:	490f      	ldr	r1, [pc, #60]	; (2fff892c <dt_get_cpu_regulator_name+0x40>)
2fff88ee:	4810      	ldr	r0, [pc, #64]	; (2fff8930 <dt_get_cpu_regulator_name+0x44>)
2fff88f0:	b510      	push	{r4, lr}
2fff88f2:	f001 fb06 	bl	2fff9f02 <fdt_path_offset>
2fff88f6:	1e01      	subs	r1, r0, #0
2fff88f8:	db15      	blt.n	2fff8926 <dt_get_cpu_regulator_name+0x3a>
2fff88fa:	4a0e      	ldr	r2, [pc, #56]	; (2fff8934 <dt_get_cpu_regulator_name+0x48>)
2fff88fc:	2300      	movs	r3, #0
2fff88fe:	480c      	ldr	r0, [pc, #48]	; (2fff8930 <dt_get_cpu_regulator_name+0x44>)
2fff8900:	f001 fa6d 	bl	2fff9dde <fdt_getprop>
2fff8904:	b178      	cbz	r0, 2fff8926 <dt_get_cpu_regulator_name+0x3a>
2fff8906:	6800      	ldr	r0, [r0, #0]
2fff8908:	f7ff fdac 	bl	2fff8464 <fdt32_to_cpu>
2fff890c:	4601      	mov	r1, r0
2fff890e:	4808      	ldr	r0, [pc, #32]	; (2fff8930 <dt_get_cpu_regulator_name+0x44>)
2fff8910:	f001 fb57 	bl	2fff9fc2 <fdt_node_offset_by_phandle>
2fff8914:	1e01      	subs	r1, r0, #0
2fff8916:	db06      	blt.n	2fff8926 <dt_get_cpu_regulator_name+0x3a>
2fff8918:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff891c:	4a06      	ldr	r2, [pc, #24]	; (2fff8938 <dt_get_cpu_regulator_name+0x4c>)
2fff891e:	2300      	movs	r3, #0
2fff8920:	4803      	ldr	r0, [pc, #12]	; (2fff8930 <dt_get_cpu_regulator_name+0x44>)
2fff8922:	f001 ba5c 	b.w	2fff9dde <fdt_getprop>
2fff8926:	2000      	movs	r0, #0
2fff8928:	bd10      	pop	{r4, pc}
2fff892a:	bf00      	nop
2fff892c:	2fffcb0b 	.word	0x2fffcb0b
2fff8930:	2ffcb000 	.word	0x2ffcb000
2fff8934:	2fffcb17 	.word	0x2fffcb17
2fff8938:	2fffc599 	.word	0x2fffc599

2fff893c <fdt_get_gpio_bank_pinctrl_node>:
2fff893c:	280a      	cmp	r0, #10
2fff893e:	b508      	push	{r3, lr}
2fff8940:	d905      	bls.n	2fff894e <fdt_get_gpio_bank_pinctrl_node+0x12>
2fff8942:	2819      	cmp	r0, #25
2fff8944:	d009      	beq.n	2fff895a <fdt_get_gpio_bank_pinctrl_node+0x1e>
2fff8946:	f7fa fa8d 	bl	2fff2e64 <console_flush>
2fff894a:	f000 ebac 	blx	2fff90a4 <do_panic>
2fff894e:	4904      	ldr	r1, [pc, #16]	; (2fff8960 <fdt_get_gpio_bank_pinctrl_node+0x24>)
2fff8950:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff8954:	4803      	ldr	r0, [pc, #12]	; (2fff8964 <fdt_get_gpio_bank_pinctrl_node+0x28>)
2fff8956:	f001 bad4 	b.w	2fff9f02 <fdt_path_offset>
2fff895a:	4903      	ldr	r1, [pc, #12]	; (2fff8968 <fdt_get_gpio_bank_pinctrl_node+0x2c>)
2fff895c:	e7f8      	b.n	2fff8950 <fdt_get_gpio_bank_pinctrl_node+0x14>
2fff895e:	bf00      	nop
2fff8960:	2fffcb22 	.word	0x2fffcb22
2fff8964:	2ffcb000 	.word	0x2ffcb000
2fff8968:	2fffcb36 	.word	0x2fffcb36

2fff896c <fdt_get_gpioz_nbpins_from_dt>:
2fff896c:	2019      	movs	r0, #25
2fff896e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff8972:	f7ff ffe3 	bl	2fff893c <fdt_get_gpio_bank_pinctrl_node>
2fff8976:	1e01      	subs	r1, r0, #0
2fff8978:	da03      	bge.n	2fff8982 <fdt_get_gpioz_nbpins_from_dt+0x16>
2fff897a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff897e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff8982:	481d      	ldr	r0, [pc, #116]	; (2fff89f8 <fdt_get_gpioz_nbpins_from_dt+0x8c>)
2fff8984:	4f1d      	ldr	r7, [pc, #116]	; (2fff89fc <fdt_get_gpioz_nbpins_from_dt+0x90>)
2fff8986:	f001 f8ae 	bl	2fff9ae6 <fdt_first_subnode>
2fff898a:	4e1b      	ldr	r6, [pc, #108]	; (2fff89f8 <fdt_get_gpioz_nbpins_from_dt+0x8c>)
2fff898c:	4604      	mov	r4, r0
2fff898e:	f8df 8074 	ldr.w	r8, [pc, #116]	; 2fff8a04 <fdt_get_gpioz_nbpins_from_dt+0x98>
2fff8992:	2c00      	cmp	r4, #0
2fff8994:	db1b      	blt.n	2fff89ce <fdt_get_gpioz_nbpins_from_dt+0x62>
2fff8996:	2300      	movs	r3, #0
2fff8998:	463a      	mov	r2, r7
2fff899a:	4621      	mov	r1, r4
2fff899c:	4630      	mov	r0, r6
2fff899e:	f001 fa1e 	bl	2fff9dde <fdt_getprop>
2fff89a2:	b318      	cbz	r0, 2fff89ec <fdt_get_gpioz_nbpins_from_dt+0x80>
2fff89a4:	2300      	movs	r3, #0
2fff89a6:	4642      	mov	r2, r8
2fff89a8:	4621      	mov	r1, r4
2fff89aa:	4630      	mov	r0, r6
2fff89ac:	f001 fa17 	bl	2fff9dde <fdt_getprop>
2fff89b0:	4605      	mov	r5, r0
2fff89b2:	b1d8      	cbz	r0, 2fff89ec <fdt_get_gpioz_nbpins_from_dt+0x80>
2fff89b4:	2019      	movs	r0, #25
2fff89b6:	f7fa fbaf 	bl	2fff3118 <stm32_get_gpio_bank_offset>
2fff89ba:	4603      	mov	r3, r0
2fff89bc:	6828      	ldr	r0, [r5, #0]
2fff89be:	f7ff fd51 	bl	2fff8464 <fdt32_to_cpu>
2fff89c2:	4298      	cmp	r0, r3
2fff89c4:	d112      	bne.n	2fff89ec <fdt_get_gpioz_nbpins_from_dt+0x80>
2fff89c6:	4620      	mov	r0, r4
2fff89c8:	f7ff fe1e 	bl	2fff8608 <fdt_get_status>
2fff89cc:	b908      	cbnz	r0, 2fff89d2 <fdt_get_gpioz_nbpins_from_dt+0x66>
2fff89ce:	2000      	movs	r0, #0
2fff89d0:	e7d5      	b.n	2fff897e <fdt_get_gpioz_nbpins_from_dt+0x12>
2fff89d2:	4a0b      	ldr	r2, [pc, #44]	; (2fff8a00 <fdt_get_gpioz_nbpins_from_dt+0x94>)
2fff89d4:	2300      	movs	r3, #0
2fff89d6:	4808      	ldr	r0, [pc, #32]	; (2fff89f8 <fdt_get_gpioz_nbpins_from_dt+0x8c>)
2fff89d8:	4621      	mov	r1, r4
2fff89da:	f001 fa00 	bl	2fff9dde <fdt_getprop>
2fff89de:	2800      	cmp	r0, #0
2fff89e0:	d0cb      	beq.n	2fff897a <fdt_get_gpioz_nbpins_from_dt+0xe>
2fff89e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
2fff89e6:	6800      	ldr	r0, [r0, #0]
2fff89e8:	f7ff bd3c 	b.w	2fff8464 <fdt32_to_cpu>
2fff89ec:	4621      	mov	r1, r4
2fff89ee:	4630      	mov	r0, r6
2fff89f0:	f001 f88c 	bl	2fff9b0c <fdt_next_subnode>
2fff89f4:	4604      	mov	r4, r0
2fff89f6:	e7cc      	b.n	2fff8992 <fdt_get_gpioz_nbpins_from_dt+0x26>
2fff89f8:	2ffcb000 	.word	0x2ffcb000
2fff89fc:	2fffc1ce 	.word	0x2fffc1ce
2fff8a00:	2fffcb4c 	.word	0x2fffcb4c
2fff8a04:	2fffae68 	.word	0x2fffae68

2fff8a08 <stm32mp_lock_shregs>:
2fff8a08:	b508      	push	{r3, lr}
2fff8a0a:	f7fa fb50 	bl	2fff30ae <stm32mp_lock_available>
2fff8a0e:	b120      	cbz	r0, 2fff8a1a <stm32mp_lock_shregs+0x12>
2fff8a10:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff8a14:	4801      	ldr	r0, [pc, #4]	; (2fff8a1c <stm32mp_lock_shregs+0x14>)
2fff8a16:	f004 ba03 	b.w	2fffce20 <__spin_lock_from_thumb>
2fff8a1a:	bd08      	pop	{r3, pc}
2fff8a1c:	2fffeb1c 	.word	0x2fffeb1c

2fff8a20 <stm32mp_unlock_shregs>:
2fff8a20:	b508      	push	{r3, lr}
2fff8a22:	f7fa fb44 	bl	2fff30ae <stm32mp_lock_available>
2fff8a26:	b120      	cbz	r0, 2fff8a32 <stm32mp_unlock_shregs+0x12>
2fff8a28:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff8a2c:	4801      	ldr	r0, [pc, #4]	; (2fff8a34 <stm32mp_unlock_shregs+0x14>)
2fff8a2e:	f004 ba03 	b.w	2fffce38 <__spin_unlock_from_thumb>
2fff8a32:	bd08      	pop	{r3, pc}
2fff8a34:	2fffeb1c 	.word	0x2fffeb1c

2fff8a38 <stm32mp_mmio_clrsetbits_32_shregs>:
2fff8a38:	b570      	push	{r4, r5, r6, lr}
2fff8a3a:	4604      	mov	r4, r0
2fff8a3c:	460e      	mov	r6, r1
2fff8a3e:	4615      	mov	r5, r2
2fff8a40:	f7ff ffe2 	bl	2fff8a08 <stm32mp_lock_shregs>
2fff8a44:	6821      	ldr	r1, [r4, #0]
2fff8a46:	ea21 0106 	bic.w	r1, r1, r6
2fff8a4a:	4329      	orrs	r1, r5
2fff8a4c:	6021      	str	r1, [r4, #0]
2fff8a4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff8a52:	f7ff bfe5 	b.w	2fff8a20 <stm32mp_unlock_shregs>

2fff8a56 <stm32mp_mmio_clrbits_32_shregs>:
2fff8a56:	b538      	push	{r3, r4, r5, lr}
2fff8a58:	4604      	mov	r4, r0
2fff8a5a:	460d      	mov	r5, r1
2fff8a5c:	f7ff ffd4 	bl	2fff8a08 <stm32mp_lock_shregs>
2fff8a60:	6823      	ldr	r3, [r4, #0]
2fff8a62:	ea23 0305 	bic.w	r3, r3, r5
2fff8a66:	6023      	str	r3, [r4, #0]
2fff8a68:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff8a6c:	f7ff bfd8 	b.w	2fff8a20 <stm32mp_unlock_shregs>

2fff8a70 <stm32mp_mmio_setbits_32_shregs>:
2fff8a70:	b538      	push	{r3, r4, r5, lr}
2fff8a72:	4605      	mov	r5, r0
2fff8a74:	460c      	mov	r4, r1
2fff8a76:	f7ff ffc7 	bl	2fff8a08 <stm32mp_lock_shregs>
2fff8a7a:	6829      	ldr	r1, [r5, #0]
2fff8a7c:	430c      	orrs	r4, r1
2fff8a7e:	602c      	str	r4, [r5, #0]
2fff8a80:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff8a84:	f7ff bfcc 	b.w	2fff8a20 <stm32mp_unlock_shregs>

2fff8a88 <stm32_clean_context>:
2fff8a88:	b508      	push	{r3, lr}
2fff8a8a:	2063      	movs	r0, #99	; 0x63
2fff8a8c:	f7fc ff06 	bl	2fff589c <stm32mp_clk_enable>
2fff8a90:	f04f 40a8 	mov.w	r0, #1409286144	; 0x54000000
2fff8a94:	f44f 618d 	mov.w	r1, #1128	; 0x468
2fff8a98:	f000 ec5a 	blx	2fff9350 <zero_normalmem>
2fff8a9c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
2fff8aa0:	2063      	movs	r0, #99	; 0x63
2fff8aa2:	f7fc befe 	b.w	2fff58a2 <stm32mp_clk_disable>

2fff8aa6 <stm32mp1_pm_save_clock_cfg>:
2fff8aa6:	1883      	adds	r3, r0, r2
2fff8aa8:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
2fff8aac:	b570      	push	{r4, r5, r6, lr}
2fff8aae:	4604      	mov	r4, r0
2fff8ab0:	460e      	mov	r6, r1
2fff8ab2:	4615      	mov	r5, r2
2fff8ab4:	d903      	bls.n	2fff8abe <stm32mp1_pm_save_clock_cfg+0x18>
2fff8ab6:	f7fa f9d5 	bl	2fff2e64 <console_flush>
2fff8aba:	f000 eaf4 	blx	2fff90a4 <do_panic>
2fff8abe:	2063      	movs	r0, #99	; 0x63
2fff8ac0:	f7fc feec 	bl	2fff589c <stm32mp_clk_enable>
2fff8ac4:	f104 40a8 	add.w	r0, r4, #1409286144	; 0x54000000
2fff8ac8:	462a      	mov	r2, r5
2fff8aca:	4631      	mov	r1, r6
2fff8acc:	f500 7002 	add.w	r0, r0, #520	; 0x208
2fff8ad0:	f001 fb4a 	bl	2fffa168 <memcpy>
2fff8ad4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff8ad8:	2063      	movs	r0, #99	; 0x63
2fff8ada:	f7fc bee2 	b.w	2fff58a2 <stm32mp_clk_disable>

2fff8ade <stm32mp1_pm_restore_clock_cfg>:
2fff8ade:	1883      	adds	r3, r0, r2
2fff8ae0:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
2fff8ae4:	b570      	push	{r4, r5, r6, lr}
2fff8ae6:	4604      	mov	r4, r0
2fff8ae8:	460e      	mov	r6, r1
2fff8aea:	4615      	mov	r5, r2
2fff8aec:	d903      	bls.n	2fff8af6 <stm32mp1_pm_restore_clock_cfg+0x18>
2fff8aee:	f7fa f9b9 	bl	2fff2e64 <console_flush>
2fff8af2:	f000 ead8 	blx	2fff90a4 <do_panic>
2fff8af6:	2063      	movs	r0, #99	; 0x63
2fff8af8:	f7fc fed0 	bl	2fff589c <stm32mp_clk_enable>
2fff8afc:	f104 41a8 	add.w	r1, r4, #1409286144	; 0x54000000
2fff8b00:	462a      	mov	r2, r5
2fff8b02:	4630      	mov	r0, r6
2fff8b04:	f501 7102 	add.w	r1, r1, #520	; 0x208
2fff8b08:	f001 fb2e 	bl	2fffa168 <memcpy>
2fff8b0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff8b10:	2063      	movs	r0, #99	; 0x63
2fff8b12:	f7fc bec6 	b.w	2fff58a2 <stm32mp_clk_disable>
	...

2fff8b18 <stm32_save_context>:
2fff8b18:	b570      	push	{r4, r5, r6, lr}
2fff8b1a:	4604      	mov	r4, r0
2fff8b1c:	f7fd fa50 	bl	2fff5fc0 <stm32mp1_clock_suspend>
2fff8b20:	2063      	movs	r0, #99	; 0x63
2fff8b22:	f7fc febb 	bl	2fff589c <stm32mp_clk_enable>
2fff8b26:	2001      	movs	r0, #1
2fff8b28:	f7f4 fc8c 	bl	2ffed444 <smc_get_ctx>
2fff8b2c:	4606      	mov	r6, r0
2fff8b2e:	2001      	movs	r0, #1
2fff8b30:	f7f4 fca4 	bl	2ffed47c <cm_get_context>
2fff8b34:	4605      	mov	r5, r0
2fff8b36:	4631      	mov	r1, r6
2fff8b38:	f44f 7290 	mov.w	r2, #288	; 0x120
2fff8b3c:	f04f 40a8 	mov.w	r0, #1409286144	; 0x54000000
2fff8b40:	f001 fb12 	bl	2fffa168 <memcpy>
2fff8b44:	480f      	ldr	r0, [pc, #60]	; (2fff8b84 <stm32_save_context+0x6c>)
2fff8b46:	4629      	mov	r1, r5
2fff8b48:	f04f 45a8 	mov.w	r5, #1409286144	; 0x54000000
2fff8b4c:	2240      	movs	r2, #64	; 0x40
2fff8b4e:	f001 fb0b 	bl	2fffa168 <memcpy>
2fff8b52:	480d      	ldr	r0, [pc, #52]	; (2fff8b88 <stm32_save_context+0x70>)
2fff8b54:	f8c5 4160 	str.w	r4, [r5, #352]	; 0x160
2fff8b58:	f7f6 fd08 	bl	2ffef56c <stm32_rtc_get_calendar>
2fff8b5c:	f7fc f9d4 	bl	2fff4f08 <stm32mp_stgen_get_counter>
2fff8b60:	e9c5 0180 	strd	r0, r1, [r5, #512]	; 0x200
2fff8b64:	4809      	ldr	r0, [pc, #36]	; (2fff8b8c <stm32_save_context+0x74>)
2fff8b66:	214c      	movs	r1, #76	; 0x4c
2fff8b68:	f7fd f91a 	bl	2fff5da0 <stm32mp1_clk_lp_save_opp_pll1_settings>
2fff8b6c:	4808      	ldr	r0, [pc, #32]	; (2fff8b90 <stm32_save_context+0x78>)
2fff8b6e:	2104      	movs	r1, #4
2fff8b70:	f7fa f85c 	bl	2fff2c2c <stm32mp1_pm_save_scmi_state>
2fff8b74:	f7fd f9d4 	bl	2fff5f20 <save_clock_pm_context>
2fff8b78:	2063      	movs	r0, #99	; 0x63
2fff8b7a:	f7fc fe92 	bl	2fff58a2 <stm32mp_clk_disable>
2fff8b7e:	2000      	movs	r0, #0
2fff8b80:	bd70      	pop	{r4, r5, r6, pc}
2fff8b82:	bf00      	nop
2fff8b84:	54000120 	.word	0x54000120
2fff8b88:	54000164 	.word	0x54000164
2fff8b8c:	540001b0 	.word	0x540001b0
2fff8b90:	54000460 	.word	0x54000460

2fff8b94 <stm32_restore_context>:
2fff8b94:	b530      	push	{r4, r5, lr}
2fff8b96:	2001      	movs	r0, #1
2fff8b98:	b085      	sub	sp, #20
2fff8b9a:	f7f4 fc53 	bl	2ffed444 <smc_get_ctx>
2fff8b9e:	4605      	mov	r5, r0
2fff8ba0:	2001      	movs	r0, #1
2fff8ba2:	f7f4 fc6b 	bl	2ffed47c <cm_get_context>
2fff8ba6:	4604      	mov	r4, r0
2fff8ba8:	2063      	movs	r0, #99	; 0x63
2fff8baa:	f7fc fe77 	bl	2fff589c <stm32mp_clk_enable>
2fff8bae:	f7fd f9df 	bl	2fff5f70 <restore_clock_pm_context>
2fff8bb2:	4815      	ldr	r0, [pc, #84]	; (2fff8c08 <stm32_restore_context+0x74>)
2fff8bb4:	2104      	movs	r1, #4
2fff8bb6:	f7fa f875 	bl	2fff2ca4 <stm32mp1_pm_restore_scmi_state>
2fff8bba:	f44f 7290 	mov.w	r2, #288	; 0x120
2fff8bbe:	f04f 41a8 	mov.w	r1, #1409286144	; 0x54000000
2fff8bc2:	4628      	mov	r0, r5
2fff8bc4:	f001 fad0 	bl	2fffa168 <memcpy>
2fff8bc8:	4910      	ldr	r1, [pc, #64]	; (2fff8c0c <stm32_restore_context+0x78>)
2fff8bca:	2240      	movs	r2, #64	; 0x40
2fff8bcc:	4620      	mov	r0, r4
2fff8bce:	f001 facb 	bl	2fffa168 <memcpy>
2fff8bd2:	a801      	add	r0, sp, #4
2fff8bd4:	f7f6 fcca 	bl	2ffef56c <stm32_rtc_get_calendar>
2fff8bd8:	490d      	ldr	r1, [pc, #52]	; (2fff8c10 <stm32_restore_context+0x7c>)
2fff8bda:	a801      	add	r0, sp, #4
2fff8bdc:	f7f6 fce6 	bl	2ffef5ac <stm32_rtc_diff_calendar>
2fff8be0:	460b      	mov	r3, r1
2fff8be2:	f04f 41a8 	mov.w	r1, #1409286144	; 0x54000000
2fff8be6:	4602      	mov	r2, r0
2fff8be8:	e9d1 0180 	ldrd	r0, r1, [r1, #512]	; 0x200
2fff8bec:	f7fc f994 	bl	2fff4f18 <stm32mp_stgen_restore_counter>
2fff8bf0:	4808      	ldr	r0, [pc, #32]	; (2fff8c14 <stm32_restore_context+0x80>)
2fff8bf2:	214c      	movs	r1, #76	; 0x4c
2fff8bf4:	f7fd f8ea 	bl	2fff5dcc <stm32mp1_clk_lp_load_opp_pll1_settings>
2fff8bf8:	2063      	movs	r0, #99	; 0x63
2fff8bfa:	f7fc fe52 	bl	2fff58a2 <stm32mp_clk_disable>
2fff8bfe:	f7fd fa2b 	bl	2fff6058 <stm32mp1_clock_resume>
2fff8c02:	2000      	movs	r0, #0
2fff8c04:	b005      	add	sp, #20
2fff8c06:	bd30      	pop	{r4, r5, pc}
2fff8c08:	54000460 	.word	0x54000460
2fff8c0c:	54000120 	.word	0x54000120
2fff8c10:	54000164 	.word	0x54000164
2fff8c14:	540001b0 	.word	0x540001b0

2fff8c18 <stm32_get_stgen_from_context>:
2fff8c18:	b538      	push	{r3, r4, r5, lr}
2fff8c1a:	2063      	movs	r0, #99	; 0x63
2fff8c1c:	f7fc fe3e 	bl	2fff589c <stm32mp_clk_enable>
2fff8c20:	f04f 43a8 	mov.w	r3, #1409286144	; 0x54000000
2fff8c24:	2063      	movs	r0, #99	; 0x63
2fff8c26:	e9d3 4580 	ldrd	r4, r5, [r3, #512]	; 0x200
2fff8c2a:	f7fc fe3a 	bl	2fff58a2 <stm32mp_clk_disable>
2fff8c2e:	4620      	mov	r0, r4
2fff8c30:	4629      	mov	r1, r5
2fff8c32:	bd38      	pop	{r3, r4, r5, pc}

2fff8c34 <stm32_are_pll1_settings_valid_in_context>:
2fff8c34:	b510      	push	{r4, lr}
2fff8c36:	2063      	movs	r0, #99	; 0x63
2fff8c38:	f7fc fe30 	bl	2fff589c <stm32mp_clk_enable>
2fff8c3c:	f04f 43a8 	mov.w	r3, #1409286144	; 0x54000000
2fff8c40:	2063      	movs	r0, #99	; 0x63
2fff8c42:	f8d3 41b0 	ldr.w	r4, [r3, #432]	; 0x1b0
2fff8c46:	f1a3 736c 	sub.w	r3, r3, #61865984	; 0x3b00000
2fff8c4a:	f5a3 336c 	sub.w	r3, r3, #241664	; 0x3b000
2fff8c4e:	f2a3 33cf 	subw	r3, r3, #975	; 0x3cf
2fff8c52:	1ae3      	subs	r3, r4, r3
2fff8c54:	425c      	negs	r4, r3
2fff8c56:	415c      	adcs	r4, r3
2fff8c58:	f7fc fe23 	bl	2fff58a2 <stm32mp_clk_disable>
2fff8c5c:	4620      	mov	r0, r4
2fff8c5e:	bd10      	pop	{r4, pc}

2fff8c60 <stm32_get_boot_interface>:
2fff8c60:	b570      	push	{r4, r5, r6, lr}
2fff8c62:	4606      	mov	r6, r0
2fff8c64:	2041      	movs	r0, #65	; 0x41
2fff8c66:	460d      	mov	r5, r1
2fff8c68:	f7fc fe18 	bl	2fff589c <stm32mp_clk_enable>
2fff8c6c:	4b06      	ldr	r3, [pc, #24]	; (2fff8c88 <stm32_get_boot_interface+0x28>)
2fff8c6e:	2041      	movs	r0, #65	; 0x41
2fff8c70:	681c      	ldr	r4, [r3, #0]
2fff8c72:	f7fc fe16 	bl	2fff58a2 <stm32mp_clk_disable>
2fff8c76:	2000      	movs	r0, #0
2fff8c78:	f3c4 3303 	ubfx	r3, r4, #12, #4
2fff8c7c:	f3c4 2403 	ubfx	r4, r4, #8, #4
2fff8c80:	6033      	str	r3, [r6, #0]
2fff8c82:	602c      	str	r4, [r5, #0]
2fff8c84:	bd70      	pop	{r4, r5, r6, pc}
2fff8c86:	bf00      	nop
2fff8c88:	5c00a150 	.word	0x5c00a150

2fff8c8c <stm32_save_ddr_training_area>:
2fff8c8c:	b507      	push	{r0, r1, r2, lr}
2fff8c8e:	2063      	movs	r0, #99	; 0x63
2fff8c90:	f7fc fe04 	bl	2fff589c <stm32mp_clk_enable>
2fff8c94:	231a      	movs	r3, #26
2fff8c96:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
2fff8c9a:	9300      	str	r3, [sp, #0]
2fff8c9c:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
2fff8ca0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
2fff8ca4:	2100      	movs	r1, #0
2fff8ca6:	f7fa fcf3 	bl	2fff3690 <mmap_add_dynamic_region>
2fff8caa:	b120      	cbz	r0, 2fff8cb6 <stm32_save_ddr_training_area+0x2a>
2fff8cac:	f44f 71c6 	mov.w	r1, #396	; 0x18c
2fff8cb0:	480d      	ldr	r0, [pc, #52]	; (2fff8ce8 <stm32_save_ddr_training_area+0x5c>)
2fff8cb2:	f001 fa31 	bl	2fffa118 <__assert>
2fff8cb6:	480d      	ldr	r0, [pc, #52]	; (2fff8cec <stm32_save_ddr_training_area+0x60>)
2fff8cb8:	2240      	movs	r2, #64	; 0x40
2fff8cba:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
2fff8cbe:	f001 fa53 	bl	2fffa168 <memcpy>
2fff8cc2:	f3bf 8f4f 	dsb	sy
2fff8cc6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
2fff8cca:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
2fff8cce:	f7fa fcf3 	bl	2fff36b8 <mmap_remove_dynamic_region>
2fff8cd2:	b110      	cbz	r0, 2fff8cda <stm32_save_ddr_training_area+0x4e>
2fff8cd4:	f44f 71ca 	mov.w	r1, #404	; 0x194
2fff8cd8:	e7ea      	b.n	2fff8cb0 <stm32_save_ddr_training_area+0x24>
2fff8cda:	2063      	movs	r0, #99	; 0x63
2fff8cdc:	b003      	add	sp, #12
2fff8cde:	f85d eb04 	ldr.w	lr, [sp], #4
2fff8ce2:	f7fc bdde 	b.w	2fff58a2 <stm32mp_clk_disable>
2fff8ce6:	bf00      	nop
2fff8ce8:	2fffcb53 	.word	0x2fffcb53
2fff8cec:	54000170 	.word	0x54000170

2fff8cf0 <stm32mp1_dbgmcu_init>:
2fff8cf0:	b508      	push	{r3, lr}
2fff8cf2:	f7fb fd19 	bl	2fff4728 <bsec_read_debug_conf>
2fff8cf6:	0543      	lsls	r3, r0, #21
2fff8cf8:	d405      	bmi.n	2fff8d06 <stm32mp1_dbgmcu_init+0x16>
2fff8cfa:	4806      	ldr	r0, [pc, #24]	; (2fff8d14 <stm32mp1_dbgmcu_init+0x24>)
2fff8cfc:	f7fa f80e 	bl	2fff2d1c <tf_log>
2fff8d00:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff8d04:	bd08      	pop	{r3, pc}
2fff8d06:	4a04      	ldr	r2, [pc, #16]	; (2fff8d18 <stm32mp1_dbgmcu_init+0x28>)
2fff8d08:	2000      	movs	r0, #0
2fff8d0a:	6813      	ldr	r3, [r2, #0]
2fff8d0c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
2fff8d10:	6013      	str	r3, [r2, #0]
2fff8d12:	e7f7      	b.n	2fff8d04 <stm32mp1_dbgmcu_init+0x14>
2fff8d14:	2fffcb77 	.word	0x2fffcb77
2fff8d18:	5000080c 	.word	0x5000080c

2fff8d1c <stm32mp1_dbgmcu_get_chip_dev_id>:
2fff8d1c:	b510      	push	{r4, lr}
2fff8d1e:	4604      	mov	r4, r0
2fff8d20:	b918      	cbnz	r0, 2fff8d2a <stm32mp1_dbgmcu_get_chip_dev_id+0xe>
2fff8d22:	4808      	ldr	r0, [pc, #32]	; (2fff8d44 <stm32mp1_dbgmcu_get_chip_dev_id+0x28>)
2fff8d24:	214c      	movs	r1, #76	; 0x4c
2fff8d26:	f001 f9f7 	bl	2fffa118 <__assert>
2fff8d2a:	f7ff ffe1 	bl	2fff8cf0 <stm32mp1_dbgmcu_init>
2fff8d2e:	b928      	cbnz	r0, 2fff8d3c <stm32mp1_dbgmcu_get_chip_dev_id+0x20>
2fff8d30:	4b05      	ldr	r3, [pc, #20]	; (2fff8d48 <stm32mp1_dbgmcu_get_chip_dev_id+0x2c>)
2fff8d32:	681b      	ldr	r3, [r3, #0]
2fff8d34:	f3c3 030b 	ubfx	r3, r3, #0, #12
2fff8d38:	6023      	str	r3, [r4, #0]
2fff8d3a:	bd10      	pop	{r4, pc}
2fff8d3c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff8d40:	e7fb      	b.n	2fff8d3a <stm32mp1_dbgmcu_get_chip_dev_id+0x1e>
2fff8d42:	bf00      	nop
2fff8d44:	2fffcbad 	.word	0x2fffcbad
2fff8d48:	50081000 	.word	0x50081000

2fff8d4c <stm32mp1_security_setup>:
2fff8d4c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
2fff8d4e:	f7ff fd71 	bl	2fff8834 <dt_get_ddr_size>
2fff8d52:	4604      	mov	r4, r0
2fff8d54:	4811      	ldr	r0, [pc, #68]	; (2fff8d9c <stm32mp1_security_setup+0x50>)
2fff8d56:	f7fb fa19 	bl	2fff418c <tzc400_init>
2fff8d5a:	f7fb fad7 	bl	2fff430c <tzc400_disable_filters>
2fff8d5e:	4b10      	ldr	r3, [pc, #64]	; (2fff8da0 <stm32mp1_security_setup+0x54>)
2fff8d60:	f06f 4280 	mvn.w	r2, #1073741824	; 0x40000000
2fff8d64:	1912      	adds	r2, r2, r4
2fff8d66:	f04f 0101 	mov.w	r1, #1
2fff8d6a:	9303      	str	r3, [sp, #12]
2fff8d6c:	f04f 0300 	mov.w	r3, #0
2fff8d70:	9302      	str	r3, [sp, #8]
2fff8d72:	f04f 0300 	mov.w	r3, #0
2fff8d76:	f143 0300 	adc.w	r3, r3, #0
2fff8d7a:	2003      	movs	r0, #3
2fff8d7c:	e9cd 2300 	strd	r2, r3, [sp]
2fff8d80:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
2fff8d84:	2300      	movs	r3, #0
2fff8d86:	f7fb fa2f 	bl	2fff41e8 <tzc400_configure_region>
2fff8d8a:	2002      	movs	r0, #2
2fff8d8c:	f7fb f9ec 	bl	2fff4168 <tzc400_set_action>
2fff8d90:	b004      	add	sp, #16
2fff8d92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff8d96:	f7fb ba85 	b.w	2fff42a4 <tzc400_enable_filters>
2fff8d9a:	bf00      	nop
2fff8d9c:	5c006000 	.word	0x5c006000
2fff8da0:	87fb87fb 	.word	0x87fb87fb

2fff8da4 <stm32mp1_syscfg_enable_io_compensation>:
2fff8da4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff8da6:	2033      	movs	r0, #51	; 0x33
2fff8da8:	f7fc fd7e 	bl	2fff58a8 <stm32mp1_clk_force_enable>
2fff8dac:	4a13      	ldr	r2, [pc, #76]	; (2fff8dfc <stm32mp1_syscfg_enable_io_compensation+0x58>)
2fff8dae:	6813      	ldr	r3, [r2, #0]
2fff8db0:	f043 0301 	orr.w	r3, r3, #1
2fff8db4:	6013      	str	r3, [r2, #0]
2fff8db6:	ee1e 0f10 	mrc	15, 0, r0, cr14, cr0, {0}
2fff8dba:	ec55 4f0e 	mrrc	15, 0, r4, r5, cr14
2fff8dbe:	4a10      	ldr	r2, [pc, #64]	; (2fff8e00 <stm32mp1_syscfg_enable_io_compensation+0x5c>)
2fff8dc0:	f242 7110 	movw	r1, #10000	; 0x2710
2fff8dc4:	2300      	movs	r3, #0
2fff8dc6:	fba0 0101 	umull	r0, r1, r0, r1
2fff8dca:	f000 eb0a 	blx	2fff93e0 <__aeabi_uldivmod>
2fff8dce:	4b0d      	ldr	r3, [pc, #52]	; (2fff8e04 <stm32mp1_syscfg_enable_io_compensation+0x60>)
2fff8dd0:	1906      	adds	r6, r0, r4
2fff8dd2:	eb41 0705 	adc.w	r7, r1, r5
2fff8dd6:	461c      	mov	r4, r3
2fff8dd8:	681a      	ldr	r2, [r3, #0]
2fff8dda:	05d2      	lsls	r2, r2, #23
2fff8ddc:	d408      	bmi.n	2fff8df0 <stm32mp1_syscfg_enable_io_compensation+0x4c>
2fff8dde:	ec51 0f0e 	mrrc	15, 0, r0, r1, cr14
2fff8de2:	428f      	cmp	r7, r1
2fff8de4:	bf08      	it	eq
2fff8de6:	4286      	cmpeq	r6, r0
2fff8de8:	d2f6      	bcs.n	2fff8dd8 <stm32mp1_syscfg_enable_io_compensation+0x34>
2fff8dea:	4807      	ldr	r0, [pc, #28]	; (2fff8e08 <stm32mp1_syscfg_enable_io_compensation+0x64>)
2fff8dec:	f7f9 ff96 	bl	2fff2d1c <tf_log>
2fff8df0:	6823      	ldr	r3, [r4, #0]
2fff8df2:	f023 0302 	bic.w	r3, r3, #2
2fff8df6:	6023      	str	r3, [r4, #0]
2fff8df8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff8dfa:	bf00      	nop
2fff8dfc:	50020024 	.word	0x50020024
2fff8e00:	000f4240 	.word	0x000f4240
2fff8e04:	50020020 	.word	0x50020020
2fff8e08:	2fffcbd0 	.word	0x2fffcbd0

2fff8e0c <stm32mp1_syscfg_disable_io_compensation>:
2fff8e0c:	4b0a      	ldr	r3, [pc, #40]	; (2fff8e38 <stm32mp1_syscfg_disable_io_compensation+0x2c>)
2fff8e0e:	2033      	movs	r0, #51	; 0x33
2fff8e10:	6819      	ldr	r1, [r3, #0]
2fff8e12:	681a      	ldr	r2, [r3, #0]
2fff8e14:	0e09      	lsrs	r1, r1, #24
2fff8e16:	f422 027f 	bic.w	r2, r2, #16711680	; 0xff0000
2fff8e1a:	601a      	str	r2, [r3, #0]
2fff8e1c:	681a      	ldr	r2, [r3, #0]
2fff8e1e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
2fff8e22:	f042 0202 	orr.w	r2, r2, #2
2fff8e26:	601a      	str	r2, [r3, #0]
2fff8e28:	4a04      	ldr	r2, [pc, #16]	; (2fff8e3c <stm32mp1_syscfg_disable_io_compensation+0x30>)
2fff8e2a:	6813      	ldr	r3, [r2, #0]
2fff8e2c:	f023 0301 	bic.w	r3, r3, #1
2fff8e30:	6013      	str	r3, [r2, #0]
2fff8e32:	f7fc bd3c 	b.w	2fff58ae <stm32mp1_clk_force_disable>
2fff8e36:	bf00      	nop
2fff8e38:	50020020 	.word	0x50020020
2fff8e3c:	50020024 	.word	0x50020024

2fff8e40 <_cpu_data>:
2fff8e40:	e92d5000 	push	{ip, lr}
2fff8e44:	eb000258 	bl	2fff97ac <plat_my_core_pos>
2fff8e48:	e8bd5000 	pop	{ip, lr}
2fff8e4c:	eaffffff 	b	2fff8e50 <_cpu_data_by_index>

2fff8e50 <_cpu_data_by_index>:
2fff8e50:	e3a01040 	mov	r1, #64	; 0x40
2fff8e54:	e0000190 	mul	r0, r0, r1
2fff8e58:	e59f1004 	ldr	r1, [pc, #4]	; 2fff8e64 <_cpu_data_by_index+0x14>
2fff8e5c:	e0800001 	add	r0, r0, r1
2fff8e60:	e12fff1e 	bx	lr
2fff8e64:	2fffebc0 	.word	0x2fffebc0

2fff8e68 <reset_handler>:
2fff8e68:	e1a0800e 	mov	r8, lr
2fff8e6c:	eb000249 	bl	2fff9798 <plat_reset_handler>
2fff8e70:	eb00002a 	bl	2fff8f20 <get_cpu_ops_ptr>
2fff8e74:	e3500000 	cmp	r0, #0
2fff8e78:	1a000002 	bne	2fff8e88 <reset_handler+0x20>
2fff8e7c:	e59f0018 	ldr	r0, [pc, #24]	; 2fff8e9c <reset_handler+0x34>
2fff8e80:	e3a01023 	mov	r1, #35	; 0x23
2fff8e84:	ea0000a1 	b	2fff9110 <asm_assert>
2fff8e88:	e5901004 	ldr	r1, [r0, #4]
2fff8e8c:	e3510000 	cmp	r1, #0
2fff8e90:	e1a0e008 	mov	lr, r8
2fff8e94:	112fff11 	bxne	r1
2fff8e98:	e12fff1e 	bx	lr
2fff8e9c:	2fffcc1a 	.word	0x2fffcc1a

2fff8ea0 <prepare_cpu_pwr_dwn>:
2fff8ea0:	e3a02001 	mov	r2, #1
2fff8ea4:	e1500002 	cmp	r0, r2
2fff8ea8:	81a00002 	movhi	r0, r2
2fff8eac:	e92d4001 	push	{r0, lr}
2fff8eb0:	ebffffe2 	bl	2fff8e40 <_cpu_data>
2fff8eb4:	e8bd4004 	pop	{r2, lr}
2fff8eb8:	e5900000 	ldr	r0, [r0]
2fff8ebc:	e3500000 	cmp	r0, #0
2fff8ec0:	1a000002 	bne	2fff8ed0 <prepare_cpu_pwr_dwn+0x30>
2fff8ec4:	e59f0014 	ldr	r0, [pc, #20]	; 2fff8ee0 <prepare_cpu_pwr_dwn+0x40>
2fff8ec8:	e3a0104a 	mov	r1, #74	; 0x4a
2fff8ecc:	ea00008f 	b	2fff9110 <asm_assert>
2fff8ed0:	e3a01008 	mov	r1, #8
2fff8ed4:	e0811102 	add	r1, r1, r2, lsl #2
2fff8ed8:	e7901001 	ldr	r1, [r0, r1]
2fff8edc:	e12fff11 	bx	r1
2fff8ee0:	2fffcc1a 	.word	0x2fffcc1a

2fff8ee4 <init_cpu_ops>:
2fff8ee4:	e92d4070 	push	{r4, r5, r6, lr}
2fff8ee8:	ebffffd4 	bl	2fff8e40 <_cpu_data>
2fff8eec:	e1a06000 	mov	r6, r0
2fff8ef0:	e5901000 	ldr	r1, [r0]
2fff8ef4:	e3510000 	cmp	r1, #0
2fff8ef8:	1a000006 	bne	2fff8f18 <init_cpu_ops+0x34>
2fff8efc:	eb000007 	bl	2fff8f20 <get_cpu_ops_ptr>
2fff8f00:	e3500000 	cmp	r0, #0
2fff8f04:	1a000002 	bne	2fff8f14 <init_cpu_ops+0x30>
2fff8f08:	e59f000c 	ldr	r0, [pc, #12]	; 2fff8f1c <init_cpu_ops+0x38>
2fff8f0c:	e3a01064 	mov	r1, #100	; 0x64
2fff8f10:	ea00007e 	b	2fff9110 <asm_assert>
2fff8f14:	e5a60000 	str	r0, [r6, #0]!
2fff8f18:	e8bd8070 	pop	{r4, r5, r6, pc}
2fff8f1c:	2fffcc1a 	.word	0x2fffcc1a

2fff8f20 <get_cpu_ops_ptr>:
2fff8f20:	e59f4030 	ldr	r4, [pc, #48]	; 2fff8f58 <error_exit+0x4>
2fff8f24:	e59f5030 	ldr	r5, [pc, #48]	; 2fff8f5c <error_exit+0x8>
2fff8f28:	e3a00000 	mov	r0, #0
2fff8f2c:	ee102f10 	mrc	15, 0, r2, cr0, cr0, {0}
2fff8f30:	e59f3028 	ldr	r3, [pc, #40]	; 2fff8f60 <error_exit+0xc>
2fff8f34:	e0022003 	and	r2, r2, r3
2fff8f38:	e1540005 	cmp	r4, r5
2fff8f3c:	2a000004 	bcs	2fff8f54 <error_exit>
2fff8f40:	e494101c 	ldr	r1, [r4], #28
2fff8f44:	e0011003 	and	r1, r1, r3
2fff8f48:	e1510002 	cmp	r1, r2
2fff8f4c:	1afffff9 	bne	2fff8f38 <get_cpu_ops_ptr+0x18>
2fff8f50:	e244001c 	sub	r0, r4, #28

2fff8f54 <error_exit>:
2fff8f54:	e12fff1e 	bx	lr
2fff8f58:	2fffcde4 	.word	0x2fffcde4
2fff8f5c:	2fffce00 	.word	0x2fffce00
2fff8f60:	ff00fff0 	.word	0xff00fff0

2fff8f64 <print_errata_status>:
2fff8f64:	e92d5030 	push	{r4, r5, ip, lr}
2fff8f68:	ebffffb4 	bl	2fff8e40 <_cpu_data>
2fff8f6c:	e5901000 	ldr	r1, [r0]
2fff8f70:	e5910010 	ldr	r0, [r1, #16]
2fff8f74:	e3500000 	cmp	r0, #0
2fff8f78:	0a000005 	beq	2fff8f94 <print_errata_status+0x30>
2fff8f7c:	e1a04000 	mov	r4, r0
2fff8f80:	e5910014 	ldr	r0, [r1, #20]
2fff8f84:	e5911018 	ldr	r1, [r1, #24]
2fff8f88:	faffd287 	blx	2ffed9ac <errata_needs_reporting>
2fff8f8c:	e3500000 	cmp	r0, #0
2fff8f90:	112fff34 	blxne	r4
2fff8f94:	e8bd9030 	pop	{r4, r5, ip, pc}

2fff8f98 <spin_lock>:
2fff8f98:	e3a02001 	mov	r2, #1
2fff8f9c:	e1901f9f 	ldrex	r1, [r0]
2fff8fa0:	e3510000 	cmp	r1, #0
2fff8fa4:	1320f002 	wfene
2fff8fa8:	01801f92 	strexeq	r1, r2, [r0]
2fff8fac:	03510000 	cmpeq	r1, #0
2fff8fb0:	1afffff9 	bne	2fff8f9c <spin_lock+0x4>
2fff8fb4:	f57ff05f 	dmb	sy
2fff8fb8:	e12fff1e 	bx	lr

2fff8fbc <spin_unlock>:
2fff8fbc:	e3a01000 	mov	r1, #0
2fff8fc0:	f57ff05f 	dmb	sy
2fff8fc4:	e5801000 	str	r1, [r0]
2fff8fc8:	f57ff04f 	dsb	sy
2fff8fcc:	e320f004 	sev
2fff8fd0:	e12fff1e 	bx	lr

2fff8fd4 <psci_do_pwrdown_cache_maintenance>:
2fff8fd4:	e92d4010 	push	{r4, lr}
2fff8fd8:	e1a04000 	mov	r4, r0
2fff8fdc:	eb00000e 	bl	2fff901c <do_stack_maintenance>
2fff8fe0:	e1a00004 	mov	r0, r4
2fff8fe4:	e8bd4010 	pop	{r4, lr}
2fff8fe8:	eaffffac 	b	2fff8ea0 <prepare_cpu_pwr_dwn>

2fff8fec <psci_do_pwrup_cache_maintenance>:
2fff8fec:	e92d5000 	push	{ip, lr}
2fff8ff0:	f57ff05e 	dmb	st
2fff8ff4:	eb00001b 	bl	2fff9068 <plat_get_my_stack>
2fff8ff8:	e1a0100d 	mov	r1, sp
2fff8ffc:	e0401001 	sub	r1, r0, r1
2fff9000:	e1a0000d 	mov	r0, sp
2fff9004:	eb000092 	bl	2fff9254 <inv_dcache_range>
2fff9008:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff900c:	e3800004 	orr	r0, r0, #4
2fff9010:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2fff9014:	f57ff06f 	isb	sy
2fff9018:	e8bd9000 	pop	{ip, pc}

2fff901c <do_stack_maintenance>:
2fff901c:	e92d4010 	push	{r4, lr}
2fff9020:	eb000010 	bl	2fff9068 <plat_get_my_stack>
2fff9024:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2fff9028:	e3c11004 	bic	r1, r1, #4
2fff902c:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
2fff9030:	f57ff06f 	isb	sy
2fff9034:	e1a04000 	mov	r4, r0
2fff9038:	e1a0100d 	mov	r1, sp
2fff903c:	e0401001 	sub	r1, r0, r1
2fff9040:	e1a0000d 	mov	r0, sp
2fff9044:	eb000064 	bl	2fff91dc <flush_dcache_range>
2fff9048:	e2440c06 	sub	r0, r4, #1536	; 0x600
2fff904c:	e04d1000 	sub	r1, sp, r0
2fff9050:	eb00007f 	bl	2fff9254 <inv_dcache_range>
2fff9054:	e8bd8010 	pop	{r4, pc}

2fff9058 <psci_power_down_wfi>:
2fff9058:	f57ff04f 	dsb	sy
2fff905c:	e320f003 	wfi
2fff9060:	eb000204 	bl	2fff9878 <plat_panic_handler>
2fff9064:	e320f000 	nop	{0}

2fff9068 <plat_get_my_stack>:
2fff9068:	e92d4010 	push	{r4, lr}
2fff906c:	eb0001ce 	bl	2fff97ac <plat_my_core_pos>
2fff9070:	e59f2008 	ldr	r2, [pc, #8]	; 2fff9080 <plat_get_my_stack+0x18>
2fff9074:	e3a01c06 	mov	r1, #1536	; 0x600
2fff9078:	e0202190 	mla	r0, r0, r1, r2
2fff907c:	e8bd8010 	pop	{r4, pc}
2fff9080:	2fffdb40 	.word	0x2fffdb40

2fff9084 <plat_set_my_stack>:
2fff9084:	e1a0400e 	mov	r4, lr
2fff9088:	eb0001c7 	bl	2fff97ac <plat_my_core_pos>
2fff908c:	e59f200c 	ldr	r2, [pc, #12]	; 2fff90a0 <plat_set_my_stack+0x1c>
2fff9090:	e3a01c06 	mov	r1, #1536	; 0x600
2fff9094:	e0202190 	mla	r0, r0, r1, r2
2fff9098:	e1a0d000 	mov	sp, r0
2fff909c:	e12fff14 	bx	r4
2fff90a0:	2fffdb40 	.word	0x2fffdb40

2fff90a4 <do_panic>:
2fff90a4:	e24e6004 	sub	r6, lr, #4
2fff90a8:	eb0001c1 	bl	2fff97b4 <plat_crash_console_init>
2fff90ac:	e3500000 	cmp	r0, #0
2fff90b0:	0a000006 	beq	2fff90d0 <do_panic+0x2c>
2fff90b4:	e59f401c 	ldr	r4, [pc, #28]	; 2fff90d8 <do_panic+0x34>
2fff90b8:	eb000033 	bl	2fff918c <asm_print_str>
2fff90bc:	e1a04006 	mov	r4, r6
2fff90c0:	eb000038 	bl	2fff91a8 <asm_print_hex>
2fff90c4:	e59f4010 	ldr	r4, [pc, #16]	; 2fff90dc <do_panic+0x38>
2fff90c8:	eb00002f 	bl	2fff918c <asm_print_str>
2fff90cc:	eb0001e3 	bl	2fff9860 <plat_crash_console_flush>
2fff90d0:	e1a0e006 	mov	lr, r6
2fff90d4:	ea0001e7 	b	2fff9878 <plat_panic_handler>
2fff90d8:	2fffcc39 	.word	0x2fffcc39
2fff90dc:	2fffcc4a 	.word	0x2fffcc4a

2fff90e0 <report_undef_inst>:
2fff90e0:	e1060300 	mrs	r0, LR_und
2fff90e4:	eb000173 	bl	2fff96b8 <plat_report_undef_inst>
2fff90e8:	eb0001e2 	bl	2fff9878 <plat_panic_handler>
2fff90ec:	e320f000 	nop	{0}

2fff90f0 <report_prefetch_abort>:
2fff90f0:	e1040300 	mrs	r0, LR_abt
2fff90f4:	eb00017b 	bl	2fff96e8 <plat_report_prefetch_abort>
2fff90f8:	eb0001de 	bl	2fff9878 <plat_panic_handler>
2fff90fc:	e320f000 	nop	{0}

2fff9100 <report_data_abort>:
2fff9100:	e1040300 	mrs	r0, LR_abt
2fff9104:	eb00018d 	bl	2fff9740 <plat_report_data_abort>
2fff9108:	eb0001da 	bl	2fff9878 <plat_panic_handler>
2fff910c:	e320f000 	nop	{0}

2fff9110 <asm_assert>:
2fff9110:	e1a05000 	mov	r5, r0
2fff9114:	e1a06001 	mov	r6, r1
2fff9118:	eb0001a5 	bl	2fff97b4 <plat_crash_console_init>
2fff911c:	e3500000 	cmp	r0, #0
2fff9120:	0a000013 	beq	2fff9174 <dec_print_loop+0x20>
2fff9124:	e59f4050 	ldr	r4, [pc, #80]	; 2fff917c <dec_print_loop+0x28>
2fff9128:	eb000017 	bl	2fff918c <asm_print_str>
2fff912c:	e1a04005 	mov	r4, r5
2fff9130:	eb000015 	bl	2fff918c <asm_print_str>
2fff9134:	e59f4044 	ldr	r4, [pc, #68]	; 2fff9180 <dec_print_loop+0x2c>
2fff9138:	eb000013 	bl	2fff918c <asm_print_str>
2fff913c:	e59f4040 	ldr	r4, [pc, #64]	; 2fff9184 <dec_print_loop+0x30>
2fff9140:	e1160004 	tst	r6, r4
2fff9144:	1a00000a 	bne	2fff9174 <dec_print_loop+0x20>
2fff9148:	e1a04006 	mov	r4, r6
2fff914c:	e3a0600a 	mov	r6, #10
2fff9150:	e59f5030 	ldr	r5, [pc, #48]	; 2fff9188 <dec_print_loop+0x34>

2fff9154 <dec_print_loop>:
2fff9154:	e730f514 	udiv	r0, r4, r5
2fff9158:	e0644590 	mls	r4, r0, r5, r4
2fff915c:	e2800030 	add	r0, r0, #48	; 0x30
2fff9160:	eb0001c1 	bl	2fff986c <plat_crash_console_putc>
2fff9164:	e735f615 	udiv	r5, r5, r6
2fff9168:	e3550000 	cmp	r5, #0
2fff916c:	1afffff8 	bne	2fff9154 <dec_print_loop>
2fff9170:	eb0001ba 	bl	2fff9860 <plat_crash_console_flush>
2fff9174:	eb0001bf 	bl	2fff9878 <plat_panic_handler>
2fff9178:	e320f000 	nop	{0}
2fff917c:	2fffcc4d 	.word	0x2fffcc4d
2fff9180:	2fffcc5b 	.word	0x2fffcc5b
2fff9184:	ffff0000 	.word	0xffff0000
2fff9188:	00002710 	.word	0x00002710

2fff918c <asm_print_str>:
2fff918c:	e1a0700e 	mov	r7, lr
2fff9190:	e4d40001 	ldrb	r0, [r4], #1
2fff9194:	e3500000 	cmp	r0, #0
2fff9198:	0a000001 	beq	2fff91a4 <asm_print_str+0x18>
2fff919c:	eb0001b2 	bl	2fff986c <plat_crash_console_putc>
2fff91a0:	eafffffa 	b	2fff9190 <asm_print_str+0x4>
2fff91a4:	e12fff17 	bx	r7

2fff91a8 <asm_print_hex>:
2fff91a8:	e1a0700e 	mov	r7, lr
2fff91ac:	e3a05020 	mov	r5, #32
2fff91b0:	e2455004 	sub	r5, r5, #4
2fff91b4:	e1a00534 	lsr	r0, r4, r5
2fff91b8:	e200000f 	and	r0, r0, #15
2fff91bc:	e350000a 	cmp	r0, #10
2fff91c0:	3a000000 	bcc	2fff91c8 <asm_print_hex+0x20>
2fff91c4:	e2800027 	add	r0, r0, #39	; 0x27
2fff91c8:	e2800030 	add	r0, r0, #48	; 0x30
2fff91cc:	eb0001a6 	bl	2fff986c <plat_crash_console_putc>
2fff91d0:	e3550000 	cmp	r5, #0
2fff91d4:	1afffff5 	bne	2fff91b0 <asm_print_hex+0x8>
2fff91d8:	e12fff17 	bx	r7

2fff91dc <flush_dcache_range>:
2fff91dc:	e3510000 	cmp	r1, #0
2fff91e0:	0a00000b 	beq	2fff9214 <exit_loop_cimvac>
2fff91e4:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2fff91e8:	e7e33853 	ubfx	r3, r3, #16, #4
2fff91ec:	e3a02004 	mov	r2, #4
2fff91f0:	e1a02312 	lsl	r2, r2, r3
2fff91f4:	e0801001 	add	r1, r0, r1
2fff91f8:	e2423001 	sub	r3, r2, #1
2fff91fc:	e1c00003 	bic	r0, r0, r3

2fff9200 <loop_cimvac>:
2fff9200:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
2fff9204:	e0800002 	add	r0, r0, r2
2fff9208:	e1500001 	cmp	r0, r1
2fff920c:	3afffffb 	bcc	2fff9200 <loop_cimvac>
2fff9210:	f57ff04f 	dsb	sy

2fff9214 <exit_loop_cimvac>:
2fff9214:	e12fff1e 	bx	lr

2fff9218 <clean_dcache_range>:
2fff9218:	e3510000 	cmp	r1, #0
2fff921c:	0a00000b 	beq	2fff9250 <exit_loop_cmvac>
2fff9220:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2fff9224:	e7e33853 	ubfx	r3, r3, #16, #4
2fff9228:	e3a02004 	mov	r2, #4
2fff922c:	e1a02312 	lsl	r2, r2, r3
2fff9230:	e0801001 	add	r1, r0, r1
2fff9234:	e2423001 	sub	r3, r2, #1
2fff9238:	e1c00003 	bic	r0, r0, r3

2fff923c <loop_cmvac>:
2fff923c:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
2fff9240:	e0800002 	add	r0, r0, r2
2fff9244:	e1500001 	cmp	r0, r1
2fff9248:	3afffffb 	bcc	2fff923c <loop_cmvac>
2fff924c:	f57ff04f 	dsb	sy

2fff9250 <exit_loop_cmvac>:
2fff9250:	e12fff1e 	bx	lr

2fff9254 <inv_dcache_range>:
2fff9254:	e3510000 	cmp	r1, #0
2fff9258:	0a00000b 	beq	2fff928c <exit_loop_imvac>
2fff925c:	ee103f30 	mrc	15, 0, r3, cr0, cr0, {1}
2fff9260:	e7e33853 	ubfx	r3, r3, #16, #4
2fff9264:	e3a02004 	mov	r2, #4
2fff9268:	e1a02312 	lsl	r2, r2, r3
2fff926c:	e0801001 	add	r1, r0, r1
2fff9270:	e2423001 	sub	r3, r2, #1
2fff9274:	e1c00003 	bic	r0, r0, r3

2fff9278 <loop_imvac>:
2fff9278:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
2fff927c:	e0800002 	add	r0, r0, r2
2fff9280:	e1500001 	cmp	r0, r1
2fff9284:	3afffffb 	bcc	2fff9278 <loop_imvac>
2fff9288:	f57ff04f 	dsb	sy

2fff928c <exit_loop_imvac>:
2fff928c:	e12fff1e 	bx	lr

2fff9290 <do_dcsw_op>:
2fff9290:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
2fff9294:	e28fb078 	add	fp, pc, #120	; 0x78
2fff9298:	e08b6180 	add	r6, fp, r0, lsl #3

2fff929c <loop1>:
2fff929c:	e081a0a1 	add	sl, r1, r1, lsr #1
2fff92a0:	e1a0ca32 	lsr	ip, r2, sl
2fff92a4:	e20cc007 	and	ip, ip, #7
2fff92a8:	e35c0002 	cmp	ip, #2
2fff92ac:	3a00000f 	bcc	2fff92f0 <level_done>
2fff92b0:	ee401f10 	mcr	15, 2, r1, cr0, cr0, {0}
2fff92b4:	f57ff06f 	isb	sy
2fff92b8:	ee30cf10 	mrc	15, 1, ip, cr0, cr0, {0}
2fff92bc:	e20ca007 	and	sl, ip, #7
2fff92c0:	e28aa004 	add	sl, sl, #4
2fff92c4:	e7e941dc 	ubfx	r4, ip, #3, #10
2fff92c8:	e16f5f14 	clz	r5, r4
2fff92cc:	e1a09004 	mov	r9, r4

2fff92d0 <loop2>:
2fff92d0:	e7ee76dc 	ubfx	r7, ip, #13, #15

2fff92d4 <loop3>:
2fff92d4:	e1810519 	orr	r0, r1, r9, lsl r5
2fff92d8:	e1800a17 	orr	r0, r0, r7, lsl sl
2fff92dc:	e12fff36 	blx	r6
2fff92e0:	e2577001 	subs	r7, r7, #1
2fff92e4:	2afffffa 	bcs	2fff92d4 <loop3>
2fff92e8:	e2599001 	subs	r9, r9, #1
2fff92ec:	2afffff7 	bcs	2fff92d0 <loop2>

2fff92f0 <level_done>:
2fff92f0:	e2811002 	add	r1, r1, #2
2fff92f4:	e1530001 	cmp	r3, r1
2fff92f8:	f57ff04f 	dsb	sy
2fff92fc:	8affffe6 	bhi	2fff929c <loop1>
2fff9300:	e3a06000 	mov	r6, #0
2fff9304:	ee406f10 	mcr	15, 2, r6, cr0, cr0, {0}
2fff9308:	f57ff04f 	dsb	sy
2fff930c:	f57ff06f 	isb	sy
2fff9310:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}

2fff9314 <dcsw_loop_table>:
2fff9314:	ee070f56 	mcr	15, 0, r0, cr7, cr6, {2}
2fff9318:	e12fff1e 	bx	lr
2fff931c:	ee070f5e 	mcr	15, 0, r0, cr7, cr14, {2}
2fff9320:	e12fff1e 	bx	lr
2fff9324:	ee070f5a 	mcr	15, 0, r0, cr7, cr10, {2}
2fff9328:	e12fff1e 	bx	lr

2fff932c <dcsw_op_all>:
2fff932c:	ee302f30 	mrc	15, 1, r2, cr0, cr0, {1}
2fff9330:	e7e23c52 	ubfx	r3, r2, #24, #3
2fff9334:	e1a03083 	lsl	r3, r3, #1
2fff9338:	e3a01000 	mov	r1, #0
2fff933c:	eaffffd3 	b	2fff9290 <do_dcsw_op>

2fff9340 <dcsw_op_level1>:
2fff9340:	ee302f30 	mrc	15, 1, r2, cr0, cr0, {1}
2fff9344:	e3a03002 	mov	r3, #2
2fff9348:	e2431002 	sub	r1, r3, #2
2fff934c:	eaffffcf 	b	2fff9290 <do_dcsw_op>

2fff9350 <zero_normalmem>:
2fff9350:	e3a02000 	mov	r2, #0
2fff9354:	e0801001 	add	r1, r0, r1
2fff9358:	e3100007 	tst	r0, #7
2fff935c:	0a000007 	beq	2fff9380 <zero_normalmem+0x30>
2fff9360:	e380c007 	orr	ip, r0, #7
2fff9364:	e29cc001 	adds	ip, ip, #1
2fff9368:	0a00000b 	beq	2fff939c <zero_normalmem+0x4c>
2fff936c:	e15c0001 	cmp	ip, r1
2fff9370:	2a000009 	bcs	2fff939c <zero_normalmem+0x4c>
2fff9374:	e4c02001 	strb	r2, [r0], #1
2fff9378:	e150000c 	cmp	r0, ip
2fff937c:	1afffffc 	bne	2fff9374 <zero_normalmem+0x24>
2fff9380:	e3c1c007 	bic	ip, r1, #7
2fff9384:	e150000c 	cmp	r0, ip
2fff9388:	2a000003 	bcs	2fff939c <zero_normalmem+0x4c>
2fff938c:	e3a03000 	mov	r3, #0
2fff9390:	e8a0000c 	stmia	r0!, {r2, r3}
2fff9394:	e150000c 	cmp	r0, ip
2fff9398:	3afffffc 	bcc	2fff9390 <zero_normalmem+0x40>
2fff939c:	e1500001 	cmp	r0, r1
2fff93a0:	0a000002 	beq	2fff93b0 <zero_normalmem+0x60>
2fff93a4:	e4c02001 	strb	r2, [r0], #1
2fff93a8:	e1500001 	cmp	r0, r1
2fff93ac:	1afffffc 	bne	2fff93a4 <zero_normalmem+0x54>
2fff93b0:	e12fff1e 	bx	lr

2fff93b4 <disable_mmu_secure>:
2fff93b4:	e3a01005 	mov	r1, #5

2fff93b8 <do_disable_mmu>:
2fff93b8:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff93bc:	e1c00001 	bic	r0, r0, r1
2fff93c0:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
2fff93c4:	f57ff06f 	isb	sy
2fff93c8:	f57ff04f 	dsb	sy
2fff93cc:	e12fff1e 	bx	lr

2fff93d0 <disable_mmu_icache_secure>:
2fff93d0:	e51f1000 	ldr	r1, [pc, #-0]	; 2fff93d8 <disable_mmu_icache_secure+0x8>
2fff93d4:	eafffff7 	b	2fff93b8 <do_disable_mmu>
2fff93d8:	00001005 	.word	0x00001005

2fff93dc <plat_disable_acp>:
2fff93dc:	e12fff1e 	bx	lr

2fff93e0 <__aeabi_uldivmod>:
2fff93e0:	e92d4040 	push	{r6, lr}
2fff93e4:	e24dd010 	sub	sp, sp, #16
2fff93e8:	e28d6008 	add	r6, sp, #8
2fff93ec:	e58d6000 	str	r6, [sp]
2fff93f0:	faffe6bd 	blx	2fff2eec <__udivmoddi4>
2fff93f4:	e59d2008 	ldr	r2, [sp, #8]
2fff93f8:	e59d300c 	ldr	r3, [sp, #12]
2fff93fc:	e28dd010 	add	sp, sp, #16
2fff9400:	e8bd8040 	pop	{r6, pc}

2fff9404 <console_stm32_core_init>:
2fff9404:	e3500000 	cmp	r0, #0
2fff9408:	0a000001 	beq	2fff9414 <core_init_fail>
2fff940c:	e3a00001 	mov	r0, #1
2fff9410:	e12fff1e 	bx	lr

2fff9414 <core_init_fail>:
2fff9414:	e3a00000 	mov	r0, #0
2fff9418:	e12fff1e 	bx	lr

2fff941c <console_stm32_register>:
2fff941c:	e92d4010 	push	{r4, lr}
2fff9420:	e1a04003 	mov	r4, r3
2fff9424:	e3540000 	cmp	r4, #0
2fff9428:	0a00000e 	beq	2fff9468 <register_fail>
2fff942c:	e5840014 	str	r0, [r4, #20]
2fff9430:	ebfffff3 	bl	2fff9404 <console_stm32_core_init>
2fff9434:	e3500000 	cmp	r0, #0
2fff9438:	0a00000a 	beq	2fff9468 <register_fail>
2fff943c:	e1a00004 	mov	r0, r4
2fff9440:	e8bd4010 	pop	{r4, lr}
2fff9444:	e59f1020 	ldr	r1, [pc, #32]	; 2fff946c <register_fail+0x4>
2fff9448:	e5801008 	str	r1, [r0, #8]
2fff944c:	e3a01000 	mov	r1, #0
2fff9450:	e580100c 	str	r1, [r0, #12]
2fff9454:	e59f1014 	ldr	r1, [pc, #20]	; 2fff9470 <register_fail+0x8>
2fff9458:	e5801010 	str	r1, [r0, #16]
2fff945c:	e3a01005 	mov	r1, #5
2fff9460:	e5801004 	str	r1, [r0, #4]
2fff9464:	ea000e7b 	b	2fffce58 <__console_register_from_arm>

2fff9468 <register_fail>:
2fff9468:	e8bd8010 	pop	{r4, pc}
2fff946c:	2fff94bc 	.word	0x2fff94bc
2fff9470:	2fff950c 	.word	0x2fff950c

2fff9474 <console_stm32_core_putc>:
2fff9474:	e3510000 	cmp	r1, #0
2fff9478:	0a00000d 	beq	2fff94b4 <putc_error>
2fff947c:	e3a03a01 	mov	r3, #4096	; 0x1000

2fff9480 <txe_loop>:
2fff9480:	e2533001 	subs	r3, r3, #1
2fff9484:	0a00000a 	beq	2fff94b4 <putc_error>
2fff9488:	e591201c 	ldr	r2, [r1, #28]
2fff948c:	e3120080 	tst	r2, #128	; 0x80
2fff9490:	0afffffa 	beq	2fff9480 <txe_loop>
2fff9494:	e5810028 	str	r0, [r1, #40]	; 0x28
2fff9498:	e3a03a01 	mov	r3, #4096	; 0x1000

2fff949c <tc_loop>:
2fff949c:	e2533001 	subs	r3, r3, #1
2fff94a0:	0a000003 	beq	2fff94b4 <putc_error>
2fff94a4:	e591201c 	ldr	r2, [r1, #28]
2fff94a8:	e3120040 	tst	r2, #64	; 0x40
2fff94ac:	0afffffa 	beq	2fff949c <tc_loop>
2fff94b0:	e12fff1e 	bx	lr

2fff94b4 <putc_error>:
2fff94b4:	e3e00000 	mvn	r0, #0
2fff94b8:	e12fff1e 	bx	lr

2fff94bc <console_stm32_putc>:
2fff94bc:	e3510000 	cmp	r1, #0
2fff94c0:	1a000002 	bne	2fff94d0 <console_stm32_putc+0x14>
2fff94c4:	e59f000c 	ldr	r0, [pc, #12]	; 2fff94d8 <console_stm32_putc+0x1c>
2fff94c8:	e3a010b0 	mov	r1, #176	; 0xb0
2fff94cc:	eaffff0f 	b	2fff9110 <asm_assert>
2fff94d0:	e5911014 	ldr	r1, [r1, #20]
2fff94d4:	eaffffe6 	b	2fff9474 <console_stm32_core_putc>
2fff94d8:	2fffcc62 	.word	0x2fffcc62

2fff94dc <console_stm32_core_flush>:
2fff94dc:	e3500000 	cmp	r0, #0
2fff94e0:	0a000007 	beq	2fff9504 <flush_error>
2fff94e4:	e3a02a01 	mov	r2, #4096	; 0x1000

2fff94e8 <txe_loop_3>:
2fff94e8:	e2522001 	subs	r2, r2, #1
2fff94ec:	0a000004 	beq	2fff9504 <flush_error>
2fff94f0:	e590101c 	ldr	r1, [r0, #28]
2fff94f4:	e3110080 	tst	r1, #128	; 0x80
2fff94f8:	0afffffa 	beq	2fff94e8 <txe_loop_3>
2fff94fc:	e3a00000 	mov	r0, #0
2fff9500:	e12fff1e 	bx	lr

2fff9504 <flush_error>:
2fff9504:	e3e00000 	mvn	r0, #0
2fff9508:	e12fff1e 	bx	lr

2fff950c <console_stm32_flush>:
2fff950c:	e3500000 	cmp	r0, #0
2fff9510:	1a000002 	bne	2fff9520 <console_stm32_flush+0x14>
2fff9514:	e59f000c 	ldr	r0, [pc, #12]	; 2fff9528 <console_stm32_flush+0x1c>
2fff9518:	e3a010f0 	mov	r1, #240	; 0xf0
2fff951c:	eafffefb 	b	2fff9110 <asm_assert>
2fff9520:	e5900014 	ldr	r0, [r0, #20]
2fff9524:	eaffffec 	b	2fff94dc <console_stm32_core_flush>
2fff9528:	2fffcc62 	.word	0x2fffcc62

2fff952c <enable_mmu_direct_svc_mon>:
2fff952c:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2fff9530:	e3110001 	tst	r1, #1
2fff9534:	0a000002 	beq	2fff9544 <enable_mmu_direct_svc_mon+0x18>
2fff9538:	e59f0060 	ldr	r0, [pc, #96]	; 2fff95a0 <enable_mmu_direct_svc_mon+0x74>
2fff953c:	e3a01014 	mov	r1, #20
2fff9540:	eafffef2 	b	2fff9110 <asm_assert>
2fff9544:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
2fff9548:	e1a03000 	mov	r3, r0
2fff954c:	e59f0050 	ldr	r0, [pc, #80]	; 2fff95a4 <enable_mmu_direct_svc_mon+0x78>
2fff9550:	e5901000 	ldr	r1, [r0]
2fff9554:	ee0a1f12 	mcr	15, 0, r1, cr10, cr2, {0}
2fff9558:	e5902008 	ldr	r2, [r0, #8]
2fff955c:	ee022f50 	mcr	15, 0, r2, cr2, cr0, {2}
2fff9560:	e5901010 	ldr	r1, [r0, #16]
2fff9564:	e5902014 	ldr	r2, [r0, #20]
2fff9568:	ec421f02 	mcrr	15, 0, r1, r2, cr2
2fff956c:	e3a01000 	mov	r1, #0
2fff9570:	e3a02000 	mov	r2, #0
2fff9574:	ec421f12 	mcrr	15, 1, r1, r2, cr2
2fff9578:	f57ff04b 	dsb	ish
2fff957c:	f57ff06f 	isb	sy
2fff9580:	ee111f10 	mrc	15, 0, r1, cr1, cr0, {0}
2fff9584:	e59f201c 	ldr	r2, [pc, #28]	; 2fff95a8 <enable_mmu_direct_svc_mon+0x7c>
2fff9588:	e1811002 	orr	r1, r1, r2
2fff958c:	e3130001 	tst	r3, #1
2fff9590:	13c11004 	bicne	r1, r1, #4
2fff9594:	ee011f10 	mcr	15, 0, r1, cr1, cr0, {0}
2fff9598:	f57ff06f 	isb	sy
2fff959c:	e12fff1e 	bx	lr
2fff95a0:	2fffcc8a 	.word	0x2fffcc8a
2fff95a4:	2fffec88 	.word	0x2fffec88
2fff95a8:	00080005 	.word	0x00080005

2fff95ac <cortex_a7_disable_smp>:
2fff95ac:	ee110f30 	mrc	15, 0, r0, cr1, cr0, {1}
2fff95b0:	e3c00040 	bic	r0, r0, #64	; 0x40
2fff95b4:	ee010f30 	mcr	15, 0, r0, cr1, cr0, {1}
2fff95b8:	f57ff06f 	isb	sy
2fff95bc:	f57ff04f 	dsb	sy
2fff95c0:	e12fff1e 	bx	lr

2fff95c4 <cortex_a7_enable_smp>:
2fff95c4:	ee110f30 	mrc	15, 0, r0, cr1, cr0, {1}
2fff95c8:	e3800040 	orr	r0, r0, #64	; 0x40
2fff95cc:	ee010f30 	mcr	15, 0, r0, cr1, cr0, {1}
2fff95d0:	f57ff06f 	isb	sy
2fff95d4:	e12fff1e 	bx	lr

2fff95d8 <cortex_a7_reset_func>:
2fff95d8:	eafffff9 	b	2fff95c4 <cortex_a7_enable_smp>

2fff95dc <cortex_a7_core_pwr_dwn>:
2fff95dc:	e92d5000 	push	{ip, lr}
2fff95e0:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff95e4:	e3100004 	tst	r0, #4
2fff95e8:	0a000002 	beq	2fff95f8 <cortex_a7_core_pwr_dwn+0x1c>
2fff95ec:	e59f0014 	ldr	r0, [pc, #20]	; 2fff9608 <cortex_a7_core_pwr_dwn+0x2c>
2fff95f0:	e3a01011 	mov	r1, #17
2fff95f4:	eafffec5 	b	2fff9110 <asm_assert>
2fff95f8:	e3a00001 	mov	r0, #1
2fff95fc:	ebffff4f 	bl	2fff9340 <dcsw_op_level1>
2fff9600:	e8bd5000 	pop	{ip, lr}
2fff9604:	eaffffe8 	b	2fff95ac <cortex_a7_disable_smp>
2fff9608:	2fffccb2 	.word	0x2fffccb2

2fff960c <cortex_a7_cluster_pwr_dwn>:
2fff960c:	e92d5000 	push	{ip, lr}
2fff9610:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
2fff9614:	e3100004 	tst	r0, #4
2fff9618:	0a000002 	beq	2fff9628 <cortex_a7_cluster_pwr_dwn+0x1c>
2fff961c:	e59f0018 	ldr	r0, [pc, #24]	; 2fff963c <cortex_a7_cluster_pwr_dwn+0x30>
2fff9620:	e3a01011 	mov	r1, #17
2fff9624:	eafffeb9 	b	2fff9110 <asm_assert>
2fff9628:	e3a00001 	mov	r0, #1
2fff962c:	ebffff43 	bl	2fff9340 <dcsw_op_level1>
2fff9630:	ebffff69 	bl	2fff93dc <plat_disable_acp>
2fff9634:	e8bd5000 	pop	{ip, lr}
2fff9638:	eaffffdb 	b	2fff95ac <cortex_a7_disable_smp>
2fff963c:	2fffccb2 	.word	0x2fffccb2

2fff9640 <cortex_a7_errata_report>:
2fff9640:	e12fff1e 	bx	lr

2fff9644 <plat_report_exception>:
2fff9644:	e1a0800e 	mov	r8, lr
2fff9648:	e3500017 	cmp	r0, #23
2fff964c:	1a000002 	bne	2fff965c <undef_inst_lbl>
2fff9650:	e59f404c 	ldr	r4, [pc, #76]	; 2fff96a4 <print_excpetion_info+0x18>
2fff9654:	ebfffecc 	bl	2fff918c <asm_print_str>
2fff9658:	ea00000b 	b	2fff968c <print_excpetion_info>

2fff965c <undef_inst_lbl>:
2fff965c:	e350001b 	cmp	r0, #27
2fff9660:	1a000002 	bne	2fff9670 <other_excpetion_lbl>
2fff9664:	e59f403c 	ldr	r4, [pc, #60]	; 2fff96a8 <print_excpetion_info+0x1c>
2fff9668:	ebfffec7 	bl	2fff918c <asm_print_str>
2fff966c:	ea000006 	b	2fff968c <print_excpetion_info>

2fff9670 <other_excpetion_lbl>:
2fff9670:	e1a09000 	mov	r9, r0
2fff9674:	e59f4030 	ldr	r4, [pc, #48]	; 2fff96ac <print_excpetion_info+0x20>
2fff9678:	ebfffec3 	bl	2fff918c <asm_print_str>
2fff967c:	e1a04009 	mov	r4, r9
2fff9680:	ebfffec8 	bl	2fff91a8 <asm_print_hex>
2fff9684:	e59f4024 	ldr	r4, [pc, #36]	; 2fff96b0 <print_excpetion_info+0x24>
2fff9688:	ebfffebf 	bl	2fff918c <asm_print_str>

2fff968c <print_excpetion_info>:
2fff968c:	e1024300 	mrs	r4, LR_svc
2fff9690:	e2444004 	sub	r4, r4, #4
2fff9694:	ebfffec3 	bl	2fff91a8 <asm_print_hex>
2fff9698:	e59f4014 	ldr	r4, [pc, #20]	; 2fff96b4 <print_excpetion_info+0x28>
2fff969c:	ebfffeba 	bl	2fff918c <asm_print_str>
2fff96a0:	e12fff18 	bx	r8
2fff96a4:	2fffcccf 	.word	0x2fffcccf
2fff96a8:	2fffcd07 	.word	0x2fffcd07
2fff96ac:	2fffcd25 	.word	0x2fffcd25
2fff96b0:	2fffcd38 	.word	0x2fffcd38
2fff96b4:	2fffcd6c 	.word	0x2fffcd6c

2fff96b8 <plat_report_undef_inst>:
2fff96b8:	e1a0800e 	mov	r8, lr
2fff96bc:	e1a09000 	mov	r9, r0
2fff96c0:	e59f4018 	ldr	r4, [pc, #24]	; 2fff96e0 <plat_report_undef_inst+0x28>
2fff96c4:	ebfffeb0 	bl	2fff918c <asm_print_str>
2fff96c8:	e1a04009 	mov	r4, r9
2fff96cc:	e2444004 	sub	r4, r4, #4
2fff96d0:	ebfffeb4 	bl	2fff91a8 <asm_print_hex>
2fff96d4:	e59f4008 	ldr	r4, [pc, #8]	; 2fff96e4 <plat_report_undef_inst+0x2c>
2fff96d8:	ebfffeab 	bl	2fff918c <asm_print_str>
2fff96dc:	e12fff18 	bx	r8
2fff96e0:	2fffcd07 	.word	0x2fffcd07
2fff96e4:	2fffcd6c 	.word	0x2fffcd6c

2fff96e8 <plat_report_prefetch_abort>:
2fff96e8:	e1a0800e 	mov	r8, lr
2fff96ec:	e1a09000 	mov	r9, r0
2fff96f0:	e59f4038 	ldr	r4, [pc, #56]	; 2fff9730 <plat_report_prefetch_abort+0x48>
2fff96f4:	ebfffea4 	bl	2fff918c <asm_print_str>
2fff96f8:	e1a04009 	mov	r4, r9
2fff96fc:	e2444004 	sub	r4, r4, #4
2fff9700:	ebfffea8 	bl	2fff91a8 <asm_print_hex>
2fff9704:	e59f4028 	ldr	r4, [pc, #40]	; 2fff9734 <plat_report_prefetch_abort+0x4c>
2fff9708:	ebfffe9f 	bl	2fff918c <asm_print_str>
2fff970c:	ee154f30 	mrc	15, 0, r4, cr5, cr0, {1}
2fff9710:	ebfffea4 	bl	2fff91a8 <asm_print_hex>
2fff9714:	e59f401c 	ldr	r4, [pc, #28]	; 2fff9738 <plat_report_prefetch_abort+0x50>
2fff9718:	ebfffe9b 	bl	2fff918c <asm_print_str>
2fff971c:	ee164f50 	mrc	15, 0, r4, cr6, cr0, {2}
2fff9720:	ebfffea0 	bl	2fff91a8 <asm_print_hex>
2fff9724:	e59f4010 	ldr	r4, [pc, #16]	; 2fff973c <plat_report_prefetch_abort+0x54>
2fff9728:	ebfffe97 	bl	2fff918c <asm_print_str>
2fff972c:	e12fff18 	bx	r8
2fff9730:	2fffccdd 	.word	0x2fffccdd
2fff9734:	2fffcd56 	.word	0x2fffcd56
2fff9738:	2fffcd61 	.word	0x2fffcd61
2fff973c:	2fffcd6c 	.word	0x2fffcd6c

2fff9740 <plat_report_data_abort>:
2fff9740:	e1a0800e 	mov	r8, lr
2fff9744:	e1a09000 	mov	r9, r0
2fff9748:	e59f4038 	ldr	r4, [pc, #56]	; 2fff9788 <plat_report_data_abort+0x48>
2fff974c:	ebfffe8e 	bl	2fff918c <asm_print_str>
2fff9750:	e1a04009 	mov	r4, r9
2fff9754:	e2444008 	sub	r4, r4, #8
2fff9758:	ebfffe92 	bl	2fff91a8 <asm_print_hex>
2fff975c:	e59f4028 	ldr	r4, [pc, #40]	; 2fff978c <plat_report_data_abort+0x4c>
2fff9760:	ebfffe89 	bl	2fff918c <asm_print_str>
2fff9764:	ee154f10 	mrc	15, 0, r4, cr5, cr0, {0}
2fff9768:	ebfffe8e 	bl	2fff91a8 <asm_print_hex>
2fff976c:	e59f401c 	ldr	r4, [pc, #28]	; 2fff9790 <plat_report_data_abort+0x50>
2fff9770:	ebfffe85 	bl	2fff918c <asm_print_str>
2fff9774:	ee164f10 	mrc	15, 0, r4, cr6, cr0, {0}
2fff9778:	ebfffe8a 	bl	2fff91a8 <asm_print_hex>
2fff977c:	e59f4010 	ldr	r4, [pc, #16]	; 2fff9794 <plat_report_data_abort+0x54>
2fff9780:	ebfffe81 	bl	2fff918c <asm_print_str>
2fff9784:	e12fff18 	bx	r8
2fff9788:	2fffccf4 	.word	0x2fffccf4
2fff978c:	2fffcd40 	.word	0x2fffcd40
2fff9790:	2fffcd4b 	.word	0x2fffcd4b
2fff9794:	2fffcd6c 	.word	0x2fffcd6c

2fff9798 <plat_reset_handler>:
2fff9798:	e12fff1e 	bx	lr

2fff979c <plat_stm32mp1_get_core_pos>:
2fff979c:	e20010ff 	and	r1, r0, #255	; 0xff
2fff97a0:	e2000cff 	and	r0, r0, #65280	; 0xff00
2fff97a4:	e0810320 	add	r0, r1, r0, lsr #6
2fff97a8:	e12fff1e 	bx	lr

2fff97ac <plat_my_core_pos>:
2fff97ac:	ee100fb0 	mrc	15, 0, r0, cr0, cr0, {5}
2fff97b0:	eafffff9 	b	2fff979c <plat_stm32mp1_get_core_pos>

2fff97b4 <plat_crash_console_init>:
2fff97b4:	e59f1088 	ldr	r1, [pc, #136]	; 2fff9844 <plat_crash_console_init+0x90>
2fff97b8:	e5912000 	ldr	r2, [r1]
2fff97bc:	e3822040 	orr	r2, r2, #64	; 0x40
2fff97c0:	e5812000 	str	r2, [r1]
2fff97c4:	e59f107c 	ldr	r1, [pc, #124]	; 2fff9848 <plat_crash_console_init+0x94>
2fff97c8:	e5912000 	ldr	r2, [r1]
2fff97cc:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2fff97d0:	e3822502 	orr	r2, r2, #8388608	; 0x800000
2fff97d4:	e5812000 	str	r2, [r1]
2fff97d8:	e5912008 	ldr	r2, [r1, #8]
2fff97dc:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2fff97e0:	e5812008 	str	r2, [r1, #8]
2fff97e4:	e591200c 	ldr	r2, [r1, #12]
2fff97e8:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
2fff97ec:	e581200c 	str	r2, [r1, #12]
2fff97f0:	e3a0200b 	mov	r2, #11
2fff97f4:	e3520008 	cmp	r2, #8
2fff97f8:	a5912024 	ldrge	r2, [r1, #36]	; 0x24
2fff97fc:	a3c22a0f 	bicge	r2, r2, #61440	; 0xf000
2fff9800:	a3822a06 	orrge	r2, r2, #24576	; 0x6000
2fff9804:	a5812024 	strge	r2, [r1, #36]	; 0x24
2fff9808:	b5912020 	ldrlt	r2, [r1, #32]
2fff980c:	b3c22000 	biclt	r2, r2, #0
2fff9810:	b3822000 	orrlt	r2, r2, #0
2fff9814:	b5812020 	strlt	r2, [r1, #32]
2fff9818:	e59f102c 	ldr	r1, [pc, #44]	; 2fff984c <plat_crash_console_init+0x98>
2fff981c:	e3a02002 	mov	r2, #2
2fff9820:	e5812000 	str	r2, [r1]
2fff9824:	e59f1024 	ldr	r1, [pc, #36]	; 2fff9850 <plat_crash_console_init+0x9c>
2fff9828:	e5912000 	ldr	r2, [r1]
2fff982c:	e3822801 	orr	r2, r2, #65536	; 0x10000
2fff9830:	e5812000 	str	r2, [r1]
2fff9834:	e59f0018 	ldr	r0, [pc, #24]	; 2fff9854 <plat_crash_console_init+0xa0>
2fff9838:	e59f1018 	ldr	r1, [pc, #24]	; 2fff9858 <plat_crash_console_init+0xa4>
2fff983c:	e59f2018 	ldr	r2, [pc, #24]	; 2fff985c <plat_crash_console_init+0xa8>
2fff9840:	eafffeef 	b	2fff9404 <console_stm32_core_init>
2fff9844:	50000a28 	.word	0x50000a28
2fff9848:	50008000 	.word	0x50008000
2fff984c:	500008e8 	.word	0x500008e8
2fff9850:	50000a00 	.word	0x50000a00
2fff9854:	40010000 	.word	0x40010000
2fff9858:	03d09000 	.word	0x03d09000
2fff985c:	0001c200 	.word	0x0001c200

2fff9860 <plat_crash_console_flush>:
2fff9860:	e51f1000 	ldr	r1, [pc, #-0]	; 2fff9868 <plat_crash_console_flush+0x8>
2fff9864:	eaffff1c 	b	2fff94dc <console_stm32_core_flush>
2fff9868:	40010000 	.word	0x40010000

2fff986c <plat_crash_console_putc>:
2fff986c:	e51f1000 	ldr	r1, [pc, #-0]	; 2fff9874 <plat_crash_console_putc+0x8>
2fff9870:	eafffeff 	b	2fff9474 <console_stm32_core_putc>
2fff9874:	40010000 	.word	0x40010000

2fff9878 <plat_panic_handler>:
2fff9878:	e10f0000 	mrs	r0, CPSR
2fff987c:	e200001f 	and	r0, r0, #31
2fff9880:	ebffff6f 	bl	2fff9644 <plat_report_exception>
2fff9884:	e1a0e006 	mov	lr, r6
2fff9888:	eafffffe 	b	2fff9888 <plat_panic_handler+0x10>

2fff988c <wfi_svc_int_enable>:
2fff988c:	e92d4110 	push	{r4, r8, lr}
2fff9890:	ee114f11 	mrc	15, 0, r4, cr1, cr1, {0}
2fff9894:	e1a0800d 	mov	r8, sp
2fff9898:	e1a0d000 	mov	sp, r0
2fff989c:	e2800c01 	add	r0, r0, #256	; 0x100
2fff98a0:	e58d007c 	str	r0, [sp, #124]	; 0x7c
2fff98a4:	e58d4084 	str	r4, [sp, #132]	; 0x84
2fff98a8:	f1020013 	cps	#19
2fff98ac:	f1080140 	cpsie	af
2fff98b0:	f57ff04f 	dsb	sy
2fff98b4:	f57ff06f 	isb	sy
2fff98b8:	e320f003 	wfi
2fff98bc:	f10c0140 	cpsid	af
2fff98c0:	f1020016 	cps	#22
2fff98c4:	e1a0d008 	mov	sp, r8
2fff98c8:	e8bd4110 	pop	{r4, r8, lr}
2fff98cc:	e12fff1e 	bx	lr

2fff98d0 <fdt32_to_cpu>:
2fff98d0:	ba00      	rev	r0, r0
2fff98d2:	4770      	bx	lr

2fff98d4 <fdt_check_header>:
2fff98d4:	b508      	push	{r3, lr}
2fff98d6:	4603      	mov	r3, r0
2fff98d8:	6800      	ldr	r0, [r0, #0]
2fff98da:	f7ff fff9 	bl	2fff98d0 <fdt32_to_cpu>
2fff98de:	4a11      	ldr	r2, [pc, #68]	; (2fff9924 <fdt_check_header+0x50>)
2fff98e0:	4290      	cmp	r0, r2
2fff98e2:	d10d      	bne.n	2fff9900 <fdt_check_header+0x2c>
2fff98e4:	6958      	ldr	r0, [r3, #20]
2fff98e6:	f7ff fff3 	bl	2fff98d0 <fdt32_to_cpu>
2fff98ea:	2801      	cmp	r0, #1
2fff98ec:	d914      	bls.n	2fff9918 <fdt_check_header+0x44>
2fff98ee:	6998      	ldr	r0, [r3, #24]
2fff98f0:	f7ff ffee 	bl	2fff98d0 <fdt32_to_cpu>
2fff98f4:	2811      	cmp	r0, #17
2fff98f6:	bf94      	ite	ls
2fff98f8:	2000      	movls	r0, #0
2fff98fa:	f06f 0009 	mvnhi.w	r0, #9
2fff98fe:	bd08      	pop	{r3, pc}
2fff9900:	4a09      	ldr	r2, [pc, #36]	; (2fff9928 <fdt_check_header+0x54>)
2fff9902:	4290      	cmp	r0, r2
2fff9904:	d10b      	bne.n	2fff991e <fdt_check_header+0x4a>
2fff9906:	6a58      	ldr	r0, [r3, #36]	; 0x24
2fff9908:	f7ff ffe2 	bl	2fff98d0 <fdt32_to_cpu>
2fff990c:	2800      	cmp	r0, #0
2fff990e:	bf14      	ite	ne
2fff9910:	2000      	movne	r0, #0
2fff9912:	f06f 0006 	mvneq.w	r0, #6
2fff9916:	e7f2      	b.n	2fff98fe <fdt_check_header+0x2a>
2fff9918:	f06f 0009 	mvn.w	r0, #9
2fff991c:	e7ef      	b.n	2fff98fe <fdt_check_header+0x2a>
2fff991e:	f06f 0008 	mvn.w	r0, #8
2fff9922:	e7ec      	b.n	2fff98fe <fdt_check_header+0x2a>
2fff9924:	d00dfeed 	.word	0xd00dfeed
2fff9928:	2ff20112 	.word	0x2ff20112

2fff992c <fdt_offset_ptr>:
2fff992c:	b538      	push	{r3, r4, r5, lr}
2fff992e:	4603      	mov	r3, r0
2fff9930:	6880      	ldr	r0, [r0, #8]
2fff9932:	f7ff ffcd 	bl	2fff98d0 <fdt32_to_cpu>
2fff9936:	1844      	adds	r4, r0, r1
2fff9938:	d201      	bcs.n	2fff993e <fdt_offset_ptr+0x12>
2fff993a:	18a5      	adds	r5, r4, r2
2fff993c:	d301      	bcc.n	2fff9942 <fdt_offset_ptr+0x16>
2fff993e:	2000      	movs	r0, #0
2fff9940:	e011      	b.n	2fff9966 <fdt_offset_ptr+0x3a>
2fff9942:	6858      	ldr	r0, [r3, #4]
2fff9944:	f7ff ffc4 	bl	2fff98d0 <fdt32_to_cpu>
2fff9948:	4285      	cmp	r5, r0
2fff994a:	d8f8      	bhi.n	2fff993e <fdt_offset_ptr+0x12>
2fff994c:	6958      	ldr	r0, [r3, #20]
2fff994e:	f7ff ffbf 	bl	2fff98d0 <fdt32_to_cpu>
2fff9952:	2810      	cmp	r0, #16
2fff9954:	d906      	bls.n	2fff9964 <fdt_offset_ptr+0x38>
2fff9956:	1889      	adds	r1, r1, r2
2fff9958:	d2f1      	bcs.n	2fff993e <fdt_offset_ptr+0x12>
2fff995a:	6a58      	ldr	r0, [r3, #36]	; 0x24
2fff995c:	f7ff ffb8 	bl	2fff98d0 <fdt32_to_cpu>
2fff9960:	4281      	cmp	r1, r0
2fff9962:	d8ec      	bhi.n	2fff993e <fdt_offset_ptr+0x12>
2fff9964:	1918      	adds	r0, r3, r4
2fff9966:	bd38      	pop	{r3, r4, r5, pc}

2fff9968 <fdt_next_tag>:
2fff9968:	f06f 0307 	mvn.w	r3, #7
2fff996c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff9970:	4690      	mov	r8, r2
2fff9972:	6013      	str	r3, [r2, #0]
2fff9974:	2204      	movs	r2, #4
2fff9976:	4606      	mov	r6, r0
2fff9978:	460f      	mov	r7, r1
2fff997a:	f7ff ffd7 	bl	2fff992c <fdt_offset_ptr>
2fff997e:	b908      	cbnz	r0, 2fff9984 <fdt_next_tag+0x1c>
2fff9980:	2509      	movs	r5, #9
2fff9982:	e038      	b.n	2fff99f6 <fdt_next_tag+0x8e>
2fff9984:	6800      	ldr	r0, [r0, #0]
2fff9986:	1d3c      	adds	r4, r7, #4
2fff9988:	f7ff ffa2 	bl	2fff98d0 <fdt32_to_cpu>
2fff998c:	f06f 030a 	mvn.w	r3, #10
2fff9990:	4605      	mov	r5, r0
2fff9992:	f8c8 3000 	str.w	r3, [r8]
2fff9996:	1e43      	subs	r3, r0, #1
2fff9998:	2b08      	cmp	r3, #8
2fff999a:	d8f1      	bhi.n	2fff9980 <fdt_next_tag+0x18>
2fff999c:	a201      	add	r2, pc, #4	; (adr r2, 2fff99a4 <fdt_next_tag+0x3c>)
2fff999e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
2fff99a2:	bf00      	nop
2fff99a4:	2fff99c9 	.word	0x2fff99c9
2fff99a8:	2fff99df 	.word	0x2fff99df
2fff99ac:	2fff99fd 	.word	0x2fff99fd
2fff99b0:	2fff99df 	.word	0x2fff99df
2fff99b4:	2fff9981 	.word	0x2fff9981
2fff99b8:	2fff9981 	.word	0x2fff9981
2fff99bc:	2fff9981 	.word	0x2fff9981
2fff99c0:	2fff9981 	.word	0x2fff9981
2fff99c4:	2fff99df 	.word	0x2fff99df
2fff99c8:	4621      	mov	r1, r4
2fff99ca:	2201      	movs	r2, #1
2fff99cc:	4414      	add	r4, r2
2fff99ce:	4630      	mov	r0, r6
2fff99d0:	f7ff ffac 	bl	2fff992c <fdt_offset_ptr>
2fff99d4:	2800      	cmp	r0, #0
2fff99d6:	d0d3      	beq.n	2fff9980 <fdt_next_tag+0x18>
2fff99d8:	7803      	ldrb	r3, [r0, #0]
2fff99da:	2b00      	cmp	r3, #0
2fff99dc:	d1f4      	bne.n	2fff99c8 <fdt_next_tag+0x60>
2fff99de:	1be2      	subs	r2, r4, r7
2fff99e0:	4639      	mov	r1, r7
2fff99e2:	4630      	mov	r0, r6
2fff99e4:	f7ff ffa2 	bl	2fff992c <fdt_offset_ptr>
2fff99e8:	2800      	cmp	r0, #0
2fff99ea:	d0c9      	beq.n	2fff9980 <fdt_next_tag+0x18>
2fff99ec:	3403      	adds	r4, #3
2fff99ee:	f024 0403 	bic.w	r4, r4, #3
2fff99f2:	f8c8 4000 	str.w	r4, [r8]
2fff99f6:	4628      	mov	r0, r5
2fff99f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff99fc:	2204      	movs	r2, #4
2fff99fe:	4621      	mov	r1, r4
2fff9a00:	4630      	mov	r0, r6
2fff9a02:	f7ff ff93 	bl	2fff992c <fdt_offset_ptr>
2fff9a06:	2800      	cmp	r0, #0
2fff9a08:	d0ba      	beq.n	2fff9980 <fdt_next_tag+0x18>
2fff9a0a:	6800      	ldr	r0, [r0, #0]
2fff9a0c:	f7ff ff60 	bl	2fff98d0 <fdt32_to_cpu>
2fff9a10:	f107 020c 	add.w	r2, r7, #12
2fff9a14:	4603      	mov	r3, r0
2fff9a16:	1884      	adds	r4, r0, r2
2fff9a18:	6970      	ldr	r0, [r6, #20]
2fff9a1a:	f7ff ff59 	bl	2fff98d0 <fdt32_to_cpu>
2fff9a1e:	280f      	cmp	r0, #15
2fff9a20:	d8dd      	bhi.n	2fff99de <fdt_next_tag+0x76>
2fff9a22:	2b07      	cmp	r3, #7
2fff9a24:	d9db      	bls.n	2fff99de <fdt_next_tag+0x76>
2fff9a26:	0753      	lsls	r3, r2, #29
2fff9a28:	bf18      	it	ne
2fff9a2a:	3404      	addne	r4, #4
2fff9a2c:	e7d7      	b.n	2fff99de <fdt_next_tag+0x76>
2fff9a2e:	bf00      	nop

2fff9a30 <fdt_check_node_offset_>:
2fff9a30:	1e0b      	subs	r3, r1, #0
2fff9a32:	b507      	push	{r0, r1, r2, lr}
2fff9a34:	9101      	str	r1, [sp, #4]
2fff9a36:	da04      	bge.n	2fff9a42 <fdt_check_node_offset_+0x12>
2fff9a38:	f06f 0003 	mvn.w	r0, #3
2fff9a3c:	b003      	add	sp, #12
2fff9a3e:	f85d fb04 	ldr.w	pc, [sp], #4
2fff9a42:	079b      	lsls	r3, r3, #30
2fff9a44:	d1f8      	bne.n	2fff9a38 <fdt_check_node_offset_+0x8>
2fff9a46:	aa01      	add	r2, sp, #4
2fff9a48:	f7ff ff8e 	bl	2fff9968 <fdt_next_tag>
2fff9a4c:	2801      	cmp	r0, #1
2fff9a4e:	d1f3      	bne.n	2fff9a38 <fdt_check_node_offset_+0x8>
2fff9a50:	9801      	ldr	r0, [sp, #4]
2fff9a52:	e7f3      	b.n	2fff9a3c <fdt_check_node_offset_+0xc>

2fff9a54 <fdt_check_prop_offset_>:
2fff9a54:	1e0b      	subs	r3, r1, #0
2fff9a56:	b507      	push	{r0, r1, r2, lr}
2fff9a58:	9101      	str	r1, [sp, #4]
2fff9a5a:	da04      	bge.n	2fff9a66 <fdt_check_prop_offset_+0x12>
2fff9a5c:	f06f 0003 	mvn.w	r0, #3
2fff9a60:	b003      	add	sp, #12
2fff9a62:	f85d fb04 	ldr.w	pc, [sp], #4
2fff9a66:	079b      	lsls	r3, r3, #30
2fff9a68:	d1f8      	bne.n	2fff9a5c <fdt_check_prop_offset_+0x8>
2fff9a6a:	aa01      	add	r2, sp, #4
2fff9a6c:	f7ff ff7c 	bl	2fff9968 <fdt_next_tag>
2fff9a70:	2803      	cmp	r0, #3
2fff9a72:	d1f3      	bne.n	2fff9a5c <fdt_check_prop_offset_+0x8>
2fff9a74:	9801      	ldr	r0, [sp, #4]
2fff9a76:	e7f3      	b.n	2fff9a60 <fdt_check_prop_offset_+0xc>

2fff9a78 <fdt_next_node>:
2fff9a78:	2300      	movs	r3, #0
2fff9a7a:	4299      	cmp	r1, r3
2fff9a7c:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff9a7e:	4606      	mov	r6, r0
2fff9a80:	9301      	str	r3, [sp, #4]
2fff9a82:	4615      	mov	r5, r2
2fff9a84:	db05      	blt.n	2fff9a92 <fdt_next_node+0x1a>
2fff9a86:	f7ff ffd3 	bl	2fff9a30 <fdt_check_node_offset_>
2fff9a8a:	9001      	str	r0, [sp, #4]
2fff9a8c:	2800      	cmp	r0, #0
2fff9a8e:	4604      	mov	r4, r0
2fff9a90:	db0f      	blt.n	2fff9ab2 <fdt_next_node+0x3a>
2fff9a92:	9c01      	ldr	r4, [sp, #4]
2fff9a94:	aa01      	add	r2, sp, #4
2fff9a96:	4630      	mov	r0, r6
2fff9a98:	4621      	mov	r1, r4
2fff9a9a:	f7ff ff65 	bl	2fff9968 <fdt_next_tag>
2fff9a9e:	2802      	cmp	r0, #2
2fff9aa0:	d00a      	beq.n	2fff9ab8 <fdt_next_node+0x40>
2fff9aa2:	2809      	cmp	r0, #9
2fff9aa4:	d011      	beq.n	2fff9aca <fdt_next_node+0x52>
2fff9aa6:	2801      	cmp	r0, #1
2fff9aa8:	d1f3      	bne.n	2fff9a92 <fdt_next_node+0x1a>
2fff9aaa:	b115      	cbz	r5, 2fff9ab2 <fdt_next_node+0x3a>
2fff9aac:	682b      	ldr	r3, [r5, #0]
2fff9aae:	3301      	adds	r3, #1
2fff9ab0:	602b      	str	r3, [r5, #0]
2fff9ab2:	4620      	mov	r0, r4
2fff9ab4:	b002      	add	sp, #8
2fff9ab6:	bd70      	pop	{r4, r5, r6, pc}
2fff9ab8:	2d00      	cmp	r5, #0
2fff9aba:	d0ea      	beq.n	2fff9a92 <fdt_next_node+0x1a>
2fff9abc:	682b      	ldr	r3, [r5, #0]
2fff9abe:	3b01      	subs	r3, #1
2fff9ac0:	602b      	str	r3, [r5, #0]
2fff9ac2:	2b00      	cmp	r3, #0
2fff9ac4:	dae5      	bge.n	2fff9a92 <fdt_next_node+0x1a>
2fff9ac6:	9c01      	ldr	r4, [sp, #4]
2fff9ac8:	e7f3      	b.n	2fff9ab2 <fdt_next_node+0x3a>
2fff9aca:	9c01      	ldr	r4, [sp, #4]
2fff9acc:	2c00      	cmp	r4, #0
2fff9ace:	da07      	bge.n	2fff9ae0 <fdt_next_node+0x68>
2fff9ad0:	f114 0f08 	cmn.w	r4, #8
2fff9ad4:	d1ed      	bne.n	2fff9ab2 <fdt_next_node+0x3a>
2fff9ad6:	2d00      	cmp	r5, #0
2fff9ad8:	bf08      	it	eq
2fff9ada:	f04f 34ff 	moveq.w	r4, #4294967295	; 0xffffffff
2fff9ade:	e7e8      	b.n	2fff9ab2 <fdt_next_node+0x3a>
2fff9ae0:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff9ae4:	e7e5      	b.n	2fff9ab2 <fdt_next_node+0x3a>

2fff9ae6 <fdt_first_subnode>:
2fff9ae6:	b507      	push	{r0, r1, r2, lr}
2fff9ae8:	2300      	movs	r3, #0
2fff9aea:	9301      	str	r3, [sp, #4]
2fff9aec:	aa01      	add	r2, sp, #4
2fff9aee:	f7ff ffc3 	bl	2fff9a78 <fdt_next_node>
2fff9af2:	2800      	cmp	r0, #0
2fff9af4:	db07      	blt.n	2fff9b06 <fdt_first_subnode+0x20>
2fff9af6:	9b01      	ldr	r3, [sp, #4]
2fff9af8:	2b01      	cmp	r3, #1
2fff9afa:	bf18      	it	ne
2fff9afc:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
2fff9b00:	b003      	add	sp, #12
2fff9b02:	f85d fb04 	ldr.w	pc, [sp], #4
2fff9b06:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff9b0a:	e7f9      	b.n	2fff9b00 <fdt_first_subnode+0x1a>

2fff9b0c <fdt_next_subnode>:
2fff9b0c:	b513      	push	{r0, r1, r4, lr}
2fff9b0e:	4604      	mov	r4, r0
2fff9b10:	2301      	movs	r3, #1
2fff9b12:	9301      	str	r3, [sp, #4]
2fff9b14:	aa01      	add	r2, sp, #4
2fff9b16:	4620      	mov	r0, r4
2fff9b18:	f7ff ffae 	bl	2fff9a78 <fdt_next_node>
2fff9b1c:	1e01      	subs	r1, r0, #0
2fff9b1e:	db07      	blt.n	2fff9b30 <fdt_next_subnode+0x24>
2fff9b20:	9b01      	ldr	r3, [sp, #4]
2fff9b22:	2b00      	cmp	r3, #0
2fff9b24:	dd04      	ble.n	2fff9b30 <fdt_next_subnode+0x24>
2fff9b26:	2b01      	cmp	r3, #1
2fff9b28:	d1f4      	bne.n	2fff9b14 <fdt_next_subnode+0x8>
2fff9b2a:	4608      	mov	r0, r1
2fff9b2c:	b002      	add	sp, #8
2fff9b2e:	bd10      	pop	{r4, pc}
2fff9b30:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff9b34:	e7f9      	b.n	2fff9b2a <fdt_next_subnode+0x1e>
	...

2fff9b38 <fdt_address_cells>:
2fff9b38:	b507      	push	{r0, r1, r2, lr}
2fff9b3a:	ab01      	add	r3, sp, #4
2fff9b3c:	4a0f      	ldr	r2, [pc, #60]	; (2fff9b7c <fdt_address_cells+0x44>)
2fff9b3e:	f000 f94e 	bl	2fff9dde <fdt_getprop>
2fff9b42:	b1b0      	cbz	r0, 2fff9b72 <fdt_address_cells+0x3a>
2fff9b44:	9b01      	ldr	r3, [sp, #4]
2fff9b46:	2b04      	cmp	r3, #4
2fff9b48:	d115      	bne.n	2fff9b76 <fdt_address_cells+0x3e>
2fff9b4a:	6803      	ldr	r3, [r0, #0]
2fff9b4c:	0e18      	lsrs	r0, r3, #24
2fff9b4e:	f3c3 2207 	ubfx	r2, r3, #8, #8
2fff9b52:	ea40 6003 	orr.w	r0, r0, r3, lsl #24
2fff9b56:	f3c3 4307 	ubfx	r3, r3, #16, #8
2fff9b5a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
2fff9b5e:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
2fff9b62:	1e43      	subs	r3, r0, #1
2fff9b64:	2b04      	cmp	r3, #4
2fff9b66:	bf28      	it	cs
2fff9b68:	f06f 000d 	mvncs.w	r0, #13
2fff9b6c:	b003      	add	sp, #12
2fff9b6e:	f85d fb04 	ldr.w	pc, [sp], #4
2fff9b72:	2002      	movs	r0, #2
2fff9b74:	e7fa      	b.n	2fff9b6c <fdt_address_cells+0x34>
2fff9b76:	f06f 000d 	mvn.w	r0, #13
2fff9b7a:	e7f7      	b.n	2fff9b6c <fdt_address_cells+0x34>
2fff9b7c:	2fffcd6f 	.word	0x2fffcd6f

2fff9b80 <fdt32_to_cpu>:
2fff9b80:	ba00      	rev	r0, r0
2fff9b82:	4770      	bx	lr

2fff9b84 <nextprop_>:
2fff9b84:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff9b86:	4605      	mov	r5, r0
2fff9b88:	460c      	mov	r4, r1
2fff9b8a:	aa01      	add	r2, sp, #4
2fff9b8c:	4621      	mov	r1, r4
2fff9b8e:	4628      	mov	r0, r5
2fff9b90:	f7ff feea 	bl	2fff9968 <fdt_next_tag>
2fff9b94:	2803      	cmp	r0, #3
2fff9b96:	d006      	beq.n	2fff9ba6 <nextprop_+0x22>
2fff9b98:	9c01      	ldr	r4, [sp, #4]
2fff9b9a:	2809      	cmp	r0, #9
2fff9b9c:	d106      	bne.n	2fff9bac <nextprop_+0x28>
2fff9b9e:	2c00      	cmp	r4, #0
2fff9ba0:	bfa8      	it	ge
2fff9ba2:	f06f 040a 	mvnge.w	r4, #10
2fff9ba6:	4620      	mov	r0, r4
2fff9ba8:	b003      	add	sp, #12
2fff9baa:	bd30      	pop	{r4, r5, pc}
2fff9bac:	2804      	cmp	r0, #4
2fff9bae:	d0ec      	beq.n	2fff9b8a <nextprop_+0x6>
2fff9bb0:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff9bb4:	e7f7      	b.n	2fff9ba6 <nextprop_+0x22>

2fff9bb6 <fdt_get_property_by_offset_>:
2fff9bb6:	b570      	push	{r4, r5, r6, lr}
2fff9bb8:	4604      	mov	r4, r0
2fff9bba:	460e      	mov	r6, r1
2fff9bbc:	4615      	mov	r5, r2
2fff9bbe:	f7ff ff49 	bl	2fff9a54 <fdt_check_prop_offset_>
2fff9bc2:	2800      	cmp	r0, #0
2fff9bc4:	da04      	bge.n	2fff9bd0 <fdt_get_property_by_offset_+0x1a>
2fff9bc6:	b17d      	cbz	r5, 2fff9be8 <fdt_get_property_by_offset_+0x32>
2fff9bc8:	6028      	str	r0, [r5, #0]
2fff9bca:	2100      	movs	r1, #0
2fff9bcc:	4608      	mov	r0, r1
2fff9bce:	bd70      	pop	{r4, r5, r6, pc}
2fff9bd0:	68a0      	ldr	r0, [r4, #8]
2fff9bd2:	f7ff ffd5 	bl	2fff9b80 <fdt32_to_cpu>
2fff9bd6:	1831      	adds	r1, r6, r0
2fff9bd8:	4421      	add	r1, r4
2fff9bda:	2d00      	cmp	r5, #0
2fff9bdc:	d0f6      	beq.n	2fff9bcc <fdt_get_property_by_offset_+0x16>
2fff9bde:	6848      	ldr	r0, [r1, #4]
2fff9be0:	f7ff ffce 	bl	2fff9b80 <fdt32_to_cpu>
2fff9be4:	6028      	str	r0, [r5, #0]
2fff9be6:	e7f1      	b.n	2fff9bcc <fdt_get_property_by_offset_+0x16>
2fff9be8:	4629      	mov	r1, r5
2fff9bea:	e7ef      	b.n	2fff9bcc <fdt_get_property_by_offset_+0x16>

2fff9bec <fdt_string>:
2fff9bec:	b508      	push	{r3, lr}
2fff9bee:	4603      	mov	r3, r0
2fff9bf0:	68c0      	ldr	r0, [r0, #12]
2fff9bf2:	f7ff ffc5 	bl	2fff9b80 <fdt32_to_cpu>
2fff9bf6:	4408      	add	r0, r1
2fff9bf8:	4418      	add	r0, r3
2fff9bfa:	bd08      	pop	{r3, pc}

2fff9bfc <fdt_get_name>:
2fff9bfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fff9bfe:	4606      	mov	r6, r0
2fff9c00:	6887      	ldr	r7, [r0, #8]
2fff9c02:	460c      	mov	r4, r1
2fff9c04:	4615      	mov	r5, r2
2fff9c06:	f7ff fe65 	bl	2fff98d4 <fdt_check_header>
2fff9c0a:	bb00      	cbnz	r0, 2fff9c4e <fdt_get_name+0x52>
2fff9c0c:	4621      	mov	r1, r4
2fff9c0e:	4630      	mov	r0, r6
2fff9c10:	f7ff ff0e 	bl	2fff9a30 <fdt_check_node_offset_>
2fff9c14:	2800      	cmp	r0, #0
2fff9c16:	db1a      	blt.n	2fff9c4e <fdt_get_name+0x52>
2fff9c18:	4638      	mov	r0, r7
2fff9c1a:	f7ff ffb1 	bl	2fff9b80 <fdt32_to_cpu>
2fff9c1e:	4404      	add	r4, r0
2fff9c20:	6970      	ldr	r0, [r6, #20]
2fff9c22:	4434      	add	r4, r6
2fff9c24:	f7ff ffac 	bl	2fff9b80 <fdt32_to_cpu>
2fff9c28:	280f      	cmp	r0, #15
2fff9c2a:	f104 0404 	add.w	r4, r4, #4
2fff9c2e:	d805      	bhi.n	2fff9c3c <fdt_get_name+0x40>
2fff9c30:	212f      	movs	r1, #47	; 0x2f
2fff9c32:	4620      	mov	r0, r4
2fff9c34:	f000 fc43 	bl	2fffa4be <strrchr>
2fff9c38:	b138      	cbz	r0, 2fff9c4a <fdt_get_name+0x4e>
2fff9c3a:	1c44      	adds	r4, r0, #1
2fff9c3c:	b11d      	cbz	r5, 2fff9c46 <fdt_get_name+0x4a>
2fff9c3e:	4620      	mov	r0, r4
2fff9c40:	f000 fc17 	bl	2fffa472 <strlen>
2fff9c44:	6028      	str	r0, [r5, #0]
2fff9c46:	4620      	mov	r0, r4
2fff9c48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fff9c4a:	f06f 000a 	mvn.w	r0, #10
2fff9c4e:	b115      	cbz	r5, 2fff9c56 <fdt_get_name+0x5a>
2fff9c50:	6028      	str	r0, [r5, #0]
2fff9c52:	2400      	movs	r4, #0
2fff9c54:	e7f7      	b.n	2fff9c46 <fdt_get_name+0x4a>
2fff9c56:	462c      	mov	r4, r5
2fff9c58:	e7f5      	b.n	2fff9c46 <fdt_get_name+0x4a>

2fff9c5a <fdt_subnode_offset_namelen>:
2fff9c5a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff9c5e:	4607      	mov	r7, r0
2fff9c60:	460e      	mov	r6, r1
2fff9c62:	4690      	mov	r8, r2
2fff9c64:	461d      	mov	r5, r3
2fff9c66:	f7ff fe35 	bl	2fff98d4 <fdt_check_header>
2fff9c6a:	4604      	mov	r4, r0
2fff9c6c:	b940      	cbnz	r0, 2fff9c80 <fdt_subnode_offset_namelen+0x26>
2fff9c6e:	9000      	str	r0, [sp, #0]
2fff9c70:	4634      	mov	r4, r6
2fff9c72:	9b00      	ldr	r3, [sp, #0]
2fff9c74:	2c00      	cmp	r4, #0
2fff9c76:	db2b      	blt.n	2fff9cd0 <fdt_subnode_offset_namelen+0x76>
2fff9c78:	2b00      	cmp	r3, #0
2fff9c7a:	da05      	bge.n	2fff9c88 <fdt_subnode_offset_namelen+0x2e>
2fff9c7c:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
2fff9c80:	4620      	mov	r0, r4
2fff9c82:	b002      	add	sp, #8
2fff9c84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff9c88:	2b01      	cmp	r3, #1
2fff9c8a:	d11a      	bne.n	2fff9cc2 <fdt_subnode_offset_namelen+0x68>
2fff9c8c:	aa01      	add	r2, sp, #4
2fff9c8e:	4621      	mov	r1, r4
2fff9c90:	4638      	mov	r0, r7
2fff9c92:	f7ff ffb3 	bl	2fff9bfc <fdt_get_name>
2fff9c96:	4606      	mov	r6, r0
2fff9c98:	b198      	cbz	r0, 2fff9cc2 <fdt_subnode_offset_namelen+0x68>
2fff9c9a:	9b01      	ldr	r3, [sp, #4]
2fff9c9c:	429d      	cmp	r5, r3
2fff9c9e:	dc10      	bgt.n	2fff9cc2 <fdt_subnode_offset_namelen+0x68>
2fff9ca0:	462a      	mov	r2, r5
2fff9ca2:	4641      	mov	r1, r8
2fff9ca4:	f000 fa52 	bl	2fffa14c <memcmp>
2fff9ca8:	b958      	cbnz	r0, 2fff9cc2 <fdt_subnode_offset_namelen+0x68>
2fff9caa:	5d73      	ldrb	r3, [r6, r5]
2fff9cac:	2b00      	cmp	r3, #0
2fff9cae:	d0e7      	beq.n	2fff9c80 <fdt_subnode_offset_namelen+0x26>
2fff9cb0:	462a      	mov	r2, r5
2fff9cb2:	2140      	movs	r1, #64	; 0x40
2fff9cb4:	4640      	mov	r0, r8
2fff9cb6:	f000 fa3b 	bl	2fffa130 <memchr>
2fff9cba:	b910      	cbnz	r0, 2fff9cc2 <fdt_subnode_offset_namelen+0x68>
2fff9cbc:	5d73      	ldrb	r3, [r6, r5]
2fff9cbe:	2b40      	cmp	r3, #64	; 0x40
2fff9cc0:	d0de      	beq.n	2fff9c80 <fdt_subnode_offset_namelen+0x26>
2fff9cc2:	4621      	mov	r1, r4
2fff9cc4:	466a      	mov	r2, sp
2fff9cc6:	4638      	mov	r0, r7
2fff9cc8:	f7ff fed6 	bl	2fff9a78 <fdt_next_node>
2fff9ccc:	4604      	mov	r4, r0
2fff9cce:	e7d0      	b.n	2fff9c72 <fdt_subnode_offset_namelen+0x18>
2fff9cd0:	2b00      	cmp	r3, #0
2fff9cd2:	bfb8      	it	lt
2fff9cd4:	f04f 34ff 	movlt.w	r4, #4294967295	; 0xffffffff
2fff9cd8:	e7d2      	b.n	2fff9c80 <fdt_subnode_offset_namelen+0x26>

2fff9cda <fdt_subnode_offset>:
2fff9cda:	b570      	push	{r4, r5, r6, lr}
2fff9cdc:	4605      	mov	r5, r0
2fff9cde:	4610      	mov	r0, r2
2fff9ce0:	460e      	mov	r6, r1
2fff9ce2:	4614      	mov	r4, r2
2fff9ce4:	f000 fbc5 	bl	2fffa472 <strlen>
2fff9ce8:	4603      	mov	r3, r0
2fff9cea:	4622      	mov	r2, r4
2fff9cec:	4631      	mov	r1, r6
2fff9cee:	4628      	mov	r0, r5
2fff9cf0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff9cf4:	f7ff bfb1 	b.w	2fff9c5a <fdt_subnode_offset_namelen>

2fff9cf8 <fdt_first_property_offset>:
2fff9cf8:	b510      	push	{r4, lr}
2fff9cfa:	4604      	mov	r4, r0
2fff9cfc:	f7ff fe98 	bl	2fff9a30 <fdt_check_node_offset_>
2fff9d00:	1e01      	subs	r1, r0, #0
2fff9d02:	db04      	blt.n	2fff9d0e <fdt_first_property_offset+0x16>
2fff9d04:	4620      	mov	r0, r4
2fff9d06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff9d0a:	f7ff bf3b 	b.w	2fff9b84 <nextprop_>
2fff9d0e:	bd10      	pop	{r4, pc}

2fff9d10 <fdt_next_property_offset>:
2fff9d10:	b510      	push	{r4, lr}
2fff9d12:	4604      	mov	r4, r0
2fff9d14:	f7ff fe9e 	bl	2fff9a54 <fdt_check_prop_offset_>
2fff9d18:	1e01      	subs	r1, r0, #0
2fff9d1a:	db04      	blt.n	2fff9d26 <fdt_next_property_offset+0x16>
2fff9d1c:	4620      	mov	r0, r4
2fff9d1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
2fff9d22:	f7ff bf2f 	b.w	2fff9b84 <nextprop_>
2fff9d26:	bd10      	pop	{r4, pc}

2fff9d28 <fdt_get_property_namelen_>:
2fff9d28:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fff9d2c:	4606      	mov	r6, r0
2fff9d2e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
2fff9d30:	4691      	mov	r9, r2
2fff9d32:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
2fff9d36:	4698      	mov	r8, r3
2fff9d38:	f7ff ffde 	bl	2fff9cf8 <fdt_first_property_offset>
2fff9d3c:	2800      	cmp	r0, #0
2fff9d3e:	4604      	mov	r4, r0
2fff9d40:	da03      	bge.n	2fff9d4a <fdt_get_property_namelen_+0x22>
2fff9d42:	b35f      	cbz	r7, 2fff9d9c <fdt_get_property_namelen_+0x74>
2fff9d44:	603c      	str	r4, [r7, #0]
2fff9d46:	2500      	movs	r5, #0
2fff9d48:	e01d      	b.n	2fff9d86 <fdt_get_property_namelen_+0x5e>
2fff9d4a:	463a      	mov	r2, r7
2fff9d4c:	4621      	mov	r1, r4
2fff9d4e:	4630      	mov	r0, r6
2fff9d50:	f7ff ff31 	bl	2fff9bb6 <fdt_get_property_by_offset_>
2fff9d54:	4605      	mov	r5, r0
2fff9d56:	b1f0      	cbz	r0, 2fff9d96 <fdt_get_property_namelen_+0x6e>
2fff9d58:	6880      	ldr	r0, [r0, #8]
2fff9d5a:	f7ff ff11 	bl	2fff9b80 <fdt32_to_cpu>
2fff9d5e:	4601      	mov	r1, r0
2fff9d60:	4630      	mov	r0, r6
2fff9d62:	f7ff ff43 	bl	2fff9bec <fdt_string>
2fff9d66:	4682      	mov	sl, r0
2fff9d68:	f000 fb83 	bl	2fffa472 <strlen>
2fff9d6c:	4540      	cmp	r0, r8
2fff9d6e:	d10d      	bne.n	2fff9d8c <fdt_get_property_namelen_+0x64>
2fff9d70:	4642      	mov	r2, r8
2fff9d72:	4649      	mov	r1, r9
2fff9d74:	4650      	mov	r0, sl
2fff9d76:	f000 f9e9 	bl	2fffa14c <memcmp>
2fff9d7a:	b938      	cbnz	r0, 2fff9d8c <fdt_get_property_namelen_+0x64>
2fff9d7c:	f1bb 0f00 	cmp.w	fp, #0
2fff9d80:	d001      	beq.n	2fff9d86 <fdt_get_property_namelen_+0x5e>
2fff9d82:	f8cb 4000 	str.w	r4, [fp]
2fff9d86:	4628      	mov	r0, r5
2fff9d88:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fff9d8c:	4621      	mov	r1, r4
2fff9d8e:	4630      	mov	r0, r6
2fff9d90:	f7ff ffbe 	bl	2fff9d10 <fdt_next_property_offset>
2fff9d94:	e7d2      	b.n	2fff9d3c <fdt_get_property_namelen_+0x14>
2fff9d96:	f06f 040c 	mvn.w	r4, #12
2fff9d9a:	e7d2      	b.n	2fff9d42 <fdt_get_property_namelen_+0x1a>
2fff9d9c:	463d      	mov	r5, r7
2fff9d9e:	e7f2      	b.n	2fff9d86 <fdt_get_property_namelen_+0x5e>

2fff9da0 <fdt_getprop_namelen>:
2fff9da0:	b530      	push	{r4, r5, lr}
2fff9da2:	b085      	sub	sp, #20
2fff9da4:	ad03      	add	r5, sp, #12
2fff9da6:	4604      	mov	r4, r0
2fff9da8:	9501      	str	r5, [sp, #4]
2fff9daa:	9d08      	ldr	r5, [sp, #32]
2fff9dac:	9500      	str	r5, [sp, #0]
2fff9dae:	f7ff ffbb 	bl	2fff9d28 <fdt_get_property_namelen_>
2fff9db2:	4603      	mov	r3, r0
2fff9db4:	b170      	cbz	r0, 2fff9dd4 <fdt_getprop_namelen+0x34>
2fff9db6:	6960      	ldr	r0, [r4, #20]
2fff9db8:	f7ff fee2 	bl	2fff9b80 <fdt32_to_cpu>
2fff9dbc:	280f      	cmp	r0, #15
2fff9dbe:	d80c      	bhi.n	2fff9dda <fdt_getprop_namelen+0x3a>
2fff9dc0:	9a03      	ldr	r2, [sp, #12]
2fff9dc2:	320c      	adds	r2, #12
2fff9dc4:	0752      	lsls	r2, r2, #29
2fff9dc6:	d008      	beq.n	2fff9dda <fdt_getprop_namelen+0x3a>
2fff9dc8:	6858      	ldr	r0, [r3, #4]
2fff9dca:	f7ff fed9 	bl	2fff9b80 <fdt32_to_cpu>
2fff9dce:	2807      	cmp	r0, #7
2fff9dd0:	d903      	bls.n	2fff9dda <fdt_getprop_namelen+0x3a>
2fff9dd2:	3310      	adds	r3, #16
2fff9dd4:	4618      	mov	r0, r3
2fff9dd6:	b005      	add	sp, #20
2fff9dd8:	bd30      	pop	{r4, r5, pc}
2fff9dda:	330c      	adds	r3, #12
2fff9ddc:	e7fa      	b.n	2fff9dd4 <fdt_getprop_namelen+0x34>

2fff9dde <fdt_getprop>:
2fff9dde:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
2fff9de0:	4605      	mov	r5, r0
2fff9de2:	4610      	mov	r0, r2
2fff9de4:	461f      	mov	r7, r3
2fff9de6:	460e      	mov	r6, r1
2fff9de8:	4614      	mov	r4, r2
2fff9dea:	f000 fb42 	bl	2fffa472 <strlen>
2fff9dee:	9700      	str	r7, [sp, #0]
2fff9df0:	4603      	mov	r3, r0
2fff9df2:	4622      	mov	r2, r4
2fff9df4:	4631      	mov	r1, r6
2fff9df6:	4628      	mov	r0, r5
2fff9df8:	f7ff ffd2 	bl	2fff9da0 <fdt_getprop_namelen>
2fff9dfc:	b003      	add	sp, #12
2fff9dfe:	bdf0      	pop	{r4, r5, r6, r7, pc}

2fff9e00 <fdt_get_phandle>:
2fff9e00:	b537      	push	{r0, r1, r2, r4, r5, lr}
2fff9e02:	ab01      	add	r3, sp, #4
2fff9e04:	4a0d      	ldr	r2, [pc, #52]	; (2fff9e3c <fdt_get_phandle+0x3c>)
2fff9e06:	4604      	mov	r4, r0
2fff9e08:	460d      	mov	r5, r1
2fff9e0a:	f7ff ffe8 	bl	2fff9dde <fdt_getprop>
2fff9e0e:	b110      	cbz	r0, 2fff9e16 <fdt_get_phandle+0x16>
2fff9e10:	9b01      	ldr	r3, [sp, #4]
2fff9e12:	2b04      	cmp	r3, #4
2fff9e14:	d009      	beq.n	2fff9e2a <fdt_get_phandle+0x2a>
2fff9e16:	4a0a      	ldr	r2, [pc, #40]	; (2fff9e40 <fdt_get_phandle+0x40>)
2fff9e18:	ab01      	add	r3, sp, #4
2fff9e1a:	4629      	mov	r1, r5
2fff9e1c:	4620      	mov	r0, r4
2fff9e1e:	f7ff ffde 	bl	2fff9dde <fdt_getprop>
2fff9e22:	b140      	cbz	r0, 2fff9e36 <fdt_get_phandle+0x36>
2fff9e24:	9b01      	ldr	r3, [sp, #4]
2fff9e26:	2b04      	cmp	r3, #4
2fff9e28:	d105      	bne.n	2fff9e36 <fdt_get_phandle+0x36>
2fff9e2a:	6800      	ldr	r0, [r0, #0]
2fff9e2c:	b003      	add	sp, #12
2fff9e2e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
2fff9e32:	f7ff bea5 	b.w	2fff9b80 <fdt32_to_cpu>
2fff9e36:	2000      	movs	r0, #0
2fff9e38:	b003      	add	sp, #12
2fff9e3a:	bd30      	pop	{r4, r5, pc}
2fff9e3c:	2fffcd84 	.word	0x2fffcd84
2fff9e40:	2fffcd7e 	.word	0x2fffcd7e

2fff9e44 <fdt_get_alias_namelen>:
2fff9e44:	b573      	push	{r0, r1, r4, r5, r6, lr}
2fff9e46:	460d      	mov	r5, r1
2fff9e48:	4908      	ldr	r1, [pc, #32]	; (2fff9e6c <fdt_get_alias_namelen+0x28>)
2fff9e4a:	4604      	mov	r4, r0
2fff9e4c:	4616      	mov	r6, r2
2fff9e4e:	f000 f858 	bl	2fff9f02 <fdt_path_offset>
2fff9e52:	1e01      	subs	r1, r0, #0
2fff9e54:	f04f 0000 	mov.w	r0, #0
2fff9e58:	db05      	blt.n	2fff9e66 <fdt_get_alias_namelen+0x22>
2fff9e5a:	9000      	str	r0, [sp, #0]
2fff9e5c:	4633      	mov	r3, r6
2fff9e5e:	462a      	mov	r2, r5
2fff9e60:	4620      	mov	r0, r4
2fff9e62:	f7ff ff9d 	bl	2fff9da0 <fdt_getprop_namelen>
2fff9e66:	b002      	add	sp, #8
2fff9e68:	bd70      	pop	{r4, r5, r6, pc}
2fff9e6a:	bf00      	nop
2fff9e6c:	2fffcd8c 	.word	0x2fffcd8c

2fff9e70 <fdt_path_offset_namelen>:
2fff9e70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fff9e74:	4607      	mov	r7, r0
2fff9e76:	460c      	mov	r4, r1
2fff9e78:	4690      	mov	r8, r2
2fff9e7a:	f7ff fd2b 	bl	2fff98d4 <fdt_check_header>
2fff9e7e:	4605      	mov	r5, r0
2fff9e80:	2800      	cmp	r0, #0
2fff9e82:	d138      	bne.n	2fff9ef6 <fdt_path_offset_namelen+0x86>
2fff9e84:	7823      	ldrb	r3, [r4, #0]
2fff9e86:	eb04 0608 	add.w	r6, r4, r8
2fff9e8a:	2b2f      	cmp	r3, #47	; 0x2f
2fff9e8c:	d015      	beq.n	2fff9eba <fdt_path_offset_namelen+0x4a>
2fff9e8e:	4642      	mov	r2, r8
2fff9e90:	212f      	movs	r1, #47	; 0x2f
2fff9e92:	4620      	mov	r0, r4
2fff9e94:	f000 f94c 	bl	2fffa130 <memchr>
2fff9e98:	2800      	cmp	r0, #0
2fff9e9a:	bf14      	ite	ne
2fff9e9c:	4680      	movne	r8, r0
2fff9e9e:	46b0      	moveq	r8, r6
2fff9ea0:	4621      	mov	r1, r4
2fff9ea2:	eba8 0204 	sub.w	r2, r8, r4
2fff9ea6:	4638      	mov	r0, r7
2fff9ea8:	f7ff ffcc 	bl	2fff9e44 <fdt_get_alias_namelen>
2fff9eac:	4601      	mov	r1, r0
2fff9eae:	b328      	cbz	r0, 2fff9efc <fdt_path_offset_namelen+0x8c>
2fff9eb0:	4638      	mov	r0, r7
2fff9eb2:	4644      	mov	r4, r8
2fff9eb4:	f000 f825 	bl	2fff9f02 <fdt_path_offset>
2fff9eb8:	4605      	mov	r5, r0
2fff9eba:	42b4      	cmp	r4, r6
2fff9ebc:	d302      	bcc.n	2fff9ec4 <fdt_path_offset_namelen+0x54>
2fff9ebe:	e01a      	b.n	2fff9ef6 <fdt_path_offset_namelen+0x86>
2fff9ec0:	42a6      	cmp	r6, r4
2fff9ec2:	d018      	beq.n	2fff9ef6 <fdt_path_offset_namelen+0x86>
2fff9ec4:	46a0      	mov	r8, r4
2fff9ec6:	3401      	adds	r4, #1
2fff9ec8:	f898 3000 	ldrb.w	r3, [r8]
2fff9ecc:	2b2f      	cmp	r3, #47	; 0x2f
2fff9ece:	d0f7      	beq.n	2fff9ec0 <fdt_path_offset_namelen+0x50>
2fff9ed0:	eba6 0208 	sub.w	r2, r6, r8
2fff9ed4:	212f      	movs	r1, #47	; 0x2f
2fff9ed6:	4640      	mov	r0, r8
2fff9ed8:	f000 f92a 	bl	2fffa130 <memchr>
2fff9edc:	2800      	cmp	r0, #0
2fff9ede:	bf14      	ite	ne
2fff9ee0:	4604      	movne	r4, r0
2fff9ee2:	4634      	moveq	r4, r6
2fff9ee4:	4629      	mov	r1, r5
2fff9ee6:	eba4 0308 	sub.w	r3, r4, r8
2fff9eea:	4642      	mov	r2, r8
2fff9eec:	4638      	mov	r0, r7
2fff9eee:	f7ff feb4 	bl	2fff9c5a <fdt_subnode_offset_namelen>
2fff9ef2:	1e05      	subs	r5, r0, #0
2fff9ef4:	dae1      	bge.n	2fff9eba <fdt_path_offset_namelen+0x4a>
2fff9ef6:	4628      	mov	r0, r5
2fff9ef8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff9efc:	f06f 0504 	mvn.w	r5, #4
2fff9f00:	e7f9      	b.n	2fff9ef6 <fdt_path_offset_namelen+0x86>

2fff9f02 <fdt_path_offset>:
2fff9f02:	b538      	push	{r3, r4, r5, lr}
2fff9f04:	4605      	mov	r5, r0
2fff9f06:	4608      	mov	r0, r1
2fff9f08:	460c      	mov	r4, r1
2fff9f0a:	f000 fab2 	bl	2fffa472 <strlen>
2fff9f0e:	4602      	mov	r2, r0
2fff9f10:	4621      	mov	r1, r4
2fff9f12:	4628      	mov	r0, r5
2fff9f14:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
2fff9f18:	f7ff bfaa 	b.w	2fff9e70 <fdt_path_offset_namelen>

2fff9f1c <fdt_supernode_atdepth_offset>:
2fff9f1c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fff9f20:	4680      	mov	r8, r0
2fff9f22:	460d      	mov	r5, r1
2fff9f24:	4614      	mov	r4, r2
2fff9f26:	461e      	mov	r6, r3
2fff9f28:	f7ff fcd4 	bl	2fff98d4 <fdt_check_header>
2fff9f2c:	b9b0      	cbnz	r0, 2fff9f5c <fdt_supernode_atdepth_offset+0x40>
2fff9f2e:	2c00      	cmp	r4, #0
2fff9f30:	db25      	blt.n	2fff9f7e <fdt_supernode_atdepth_offset+0x62>
2fff9f32:	9001      	str	r0, [sp, #4]
2fff9f34:	f06f 070c 	mvn.w	r7, #12
2fff9f38:	4285      	cmp	r5, r0
2fff9f3a:	da02      	bge.n	2fff9f42 <fdt_supernode_atdepth_offset+0x26>
2fff9f3c:	f06f 0003 	mvn.w	r0, #3
2fff9f40:	e00c      	b.n	2fff9f5c <fdt_supernode_atdepth_offset+0x40>
2fff9f42:	9b01      	ldr	r3, [sp, #4]
2fff9f44:	429c      	cmp	r4, r3
2fff9f46:	bf08      	it	eq
2fff9f48:	4607      	moveq	r7, r0
2fff9f4a:	4285      	cmp	r5, r0
2fff9f4c:	d109      	bne.n	2fff9f62 <fdt_supernode_atdepth_offset+0x46>
2fff9f4e:	b106      	cbz	r6, 2fff9f52 <fdt_supernode_atdepth_offset+0x36>
2fff9f50:	6033      	str	r3, [r6, #0]
2fff9f52:	429c      	cmp	r4, r3
2fff9f54:	bfd4      	ite	le
2fff9f56:	4638      	movle	r0, r7
2fff9f58:	f04f 30ff 	movgt.w	r0, #4294967295	; 0xffffffff
2fff9f5c:	b002      	add	sp, #8
2fff9f5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fff9f62:	4601      	mov	r1, r0
2fff9f64:	aa01      	add	r2, sp, #4
2fff9f66:	4640      	mov	r0, r8
2fff9f68:	f7ff fd86 	bl	2fff9a78 <fdt_next_node>
2fff9f6c:	2800      	cmp	r0, #0
2fff9f6e:	dae3      	bge.n	2fff9f38 <fdt_supernode_atdepth_offset+0x1c>
2fff9f70:	1c42      	adds	r2, r0, #1
2fff9f72:	d0e3      	beq.n	2fff9f3c <fdt_supernode_atdepth_offset+0x20>
2fff9f74:	1d03      	adds	r3, r0, #4
2fff9f76:	bf08      	it	eq
2fff9f78:	f06f 000a 	mvneq.w	r0, #10
2fff9f7c:	e7ee      	b.n	2fff9f5c <fdt_supernode_atdepth_offset+0x40>
2fff9f7e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
2fff9f82:	e7eb      	b.n	2fff9f5c <fdt_supernode_atdepth_offset+0x40>

2fff9f84 <fdt_node_depth>:
2fff9f84:	b507      	push	{r0, r1, r2, lr}
2fff9f86:	2200      	movs	r2, #0
2fff9f88:	ab01      	add	r3, sp, #4
2fff9f8a:	f7ff ffc7 	bl	2fff9f1c <fdt_supernode_atdepth_offset>
2fff9f8e:	2800      	cmp	r0, #0
2fff9f90:	d005      	beq.n	2fff9f9e <fdt_node_depth+0x1a>
2fff9f92:	db01      	blt.n	2fff9f98 <fdt_node_depth+0x14>
2fff9f94:	f06f 000c 	mvn.w	r0, #12
2fff9f98:	b003      	add	sp, #12
2fff9f9a:	f85d fb04 	ldr.w	pc, [sp], #4
2fff9f9e:	9801      	ldr	r0, [sp, #4]
2fff9fa0:	e7fa      	b.n	2fff9f98 <fdt_node_depth+0x14>

2fff9fa2 <fdt_parent_offset>:
2fff9fa2:	b570      	push	{r4, r5, r6, lr}
2fff9fa4:	4604      	mov	r4, r0
2fff9fa6:	460d      	mov	r5, r1
2fff9fa8:	f7ff ffec 	bl	2fff9f84 <fdt_node_depth>
2fff9fac:	1e02      	subs	r2, r0, #0
2fff9fae:	db07      	blt.n	2fff9fc0 <fdt_parent_offset+0x1e>
2fff9fb0:	4629      	mov	r1, r5
2fff9fb2:	4620      	mov	r0, r4
2fff9fb4:	2300      	movs	r3, #0
2fff9fb6:	3a01      	subs	r2, #1
2fff9fb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
2fff9fbc:	f7ff bfae 	b.w	2fff9f1c <fdt_supernode_atdepth_offset>
2fff9fc0:	bd70      	pop	{r4, r5, r6, pc}

2fff9fc2 <fdt_node_offset_by_phandle>:
2fff9fc2:	1e4b      	subs	r3, r1, #1
2fff9fc4:	3303      	adds	r3, #3
2fff9fc6:	b570      	push	{r4, r5, r6, lr}
2fff9fc8:	4605      	mov	r5, r0
2fff9fca:	460e      	mov	r6, r1
2fff9fcc:	d817      	bhi.n	2fff9ffe <fdt_node_offset_by_phandle+0x3c>
2fff9fce:	f7ff fc81 	bl	2fff98d4 <fdt_check_header>
2fff9fd2:	4604      	mov	r4, r0
2fff9fd4:	b940      	cbnz	r0, 2fff9fe8 <fdt_node_offset_by_phandle+0x26>
2fff9fd6:	4602      	mov	r2, r0
2fff9fd8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
2fff9fdc:	4628      	mov	r0, r5
2fff9fde:	f7ff fd4b 	bl	2fff9a78 <fdt_next_node>
2fff9fe2:	2800      	cmp	r0, #0
2fff9fe4:	4604      	mov	r4, r0
2fff9fe6:	da01      	bge.n	2fff9fec <fdt_node_offset_by_phandle+0x2a>
2fff9fe8:	4620      	mov	r0, r4
2fff9fea:	bd70      	pop	{r4, r5, r6, pc}
2fff9fec:	4621      	mov	r1, r4
2fff9fee:	4628      	mov	r0, r5
2fff9ff0:	f7ff ff06 	bl	2fff9e00 <fdt_get_phandle>
2fff9ff4:	42b0      	cmp	r0, r6
2fff9ff6:	d0f7      	beq.n	2fff9fe8 <fdt_node_offset_by_phandle+0x26>
2fff9ff8:	2200      	movs	r2, #0
2fff9ffa:	4621      	mov	r1, r4
2fff9ffc:	e7ee      	b.n	2fff9fdc <fdt_node_offset_by_phandle+0x1a>
2fff9ffe:	f06f 0405 	mvn.w	r4, #5
2fffa002:	e7f1      	b.n	2fff9fe8 <fdt_node_offset_by_phandle+0x26>

2fffa004 <fdt_stringlist_contains>:
2fffa004:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
2fffa008:	4604      	mov	r4, r0
2fffa00a:	4610      	mov	r0, r2
2fffa00c:	460d      	mov	r5, r1
2fffa00e:	4617      	mov	r7, r2
2fffa010:	f000 fa2f 	bl	2fffa472 <strlen>
2fffa014:	4606      	mov	r6, r0
2fffa016:	f100 0801 	add.w	r8, r0, #1
2fffa01a:	42b5      	cmp	r5, r6
2fffa01c:	db0b      	blt.n	2fffa036 <fdt_stringlist_contains+0x32>
2fffa01e:	4642      	mov	r2, r8
2fffa020:	4621      	mov	r1, r4
2fffa022:	4638      	mov	r0, r7
2fffa024:	f000 f892 	bl	2fffa14c <memcmp>
2fffa028:	b168      	cbz	r0, 2fffa046 <fdt_stringlist_contains+0x42>
2fffa02a:	462a      	mov	r2, r5
2fffa02c:	2100      	movs	r1, #0
2fffa02e:	4620      	mov	r0, r4
2fffa030:	f000 f87e 	bl	2fffa130 <memchr>
2fffa034:	b910      	cbnz	r0, 2fffa03c <fdt_stringlist_contains+0x38>
2fffa036:	2000      	movs	r0, #0
2fffa038:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fffa03c:	1b04      	subs	r4, r0, r4
2fffa03e:	3401      	adds	r4, #1
2fffa040:	1b2d      	subs	r5, r5, r4
2fffa042:	1c44      	adds	r4, r0, #1
2fffa044:	e7e9      	b.n	2fffa01a <fdt_stringlist_contains+0x16>
2fffa046:	2001      	movs	r0, #1
2fffa048:	e7f6      	b.n	2fffa038 <fdt_stringlist_contains+0x34>

2fffa04a <fdt_stringlist_search>:
2fffa04a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
2fffa04e:	4698      	mov	r8, r3
2fffa050:	ab01      	add	r3, sp, #4
2fffa052:	f7ff fec4 	bl	2fff9dde <fdt_getprop>
2fffa056:	4604      	mov	r4, r0
2fffa058:	b920      	cbnz	r0, 2fffa064 <fdt_stringlist_search+0x1a>
2fffa05a:	9d01      	ldr	r5, [sp, #4]
2fffa05c:	4628      	mov	r0, r5
2fffa05e:	b002      	add	sp, #8
2fffa060:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
2fffa064:	4640      	mov	r0, r8
2fffa066:	2500      	movs	r5, #0
2fffa068:	f000 fa03 	bl	2fffa472 <strlen>
2fffa06c:	9e01      	ldr	r6, [sp, #4]
2fffa06e:	1c47      	adds	r7, r0, #1
2fffa070:	4426      	add	r6, r4
2fffa072:	42b4      	cmp	r4, r6
2fffa074:	d302      	bcc.n	2fffa07c <fdt_stringlist_search+0x32>
2fffa076:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fffa07a:	e7ef      	b.n	2fffa05c <fdt_stringlist_search+0x12>
2fffa07c:	1b31      	subs	r1, r6, r4
2fffa07e:	4620      	mov	r0, r4
2fffa080:	f000 fa13 	bl	2fffa4aa <strnlen>
2fffa084:	3001      	adds	r0, #1
2fffa086:	1823      	adds	r3, r4, r0
2fffa088:	429e      	cmp	r6, r3
2fffa08a:	9001      	str	r0, [sp, #4]
2fffa08c:	d30d      	bcc.n	2fffa0aa <fdt_stringlist_search+0x60>
2fffa08e:	42b8      	cmp	r0, r7
2fffa090:	d003      	beq.n	2fffa09a <fdt_stringlist_search+0x50>
2fffa092:	9b01      	ldr	r3, [sp, #4]
2fffa094:	3501      	adds	r5, #1
2fffa096:	441c      	add	r4, r3
2fffa098:	e7eb      	b.n	2fffa072 <fdt_stringlist_search+0x28>
2fffa09a:	463a      	mov	r2, r7
2fffa09c:	4641      	mov	r1, r8
2fffa09e:	4620      	mov	r0, r4
2fffa0a0:	f000 f854 	bl	2fffa14c <memcmp>
2fffa0a4:	2800      	cmp	r0, #0
2fffa0a6:	d1f4      	bne.n	2fffa092 <fdt_stringlist_search+0x48>
2fffa0a8:	e7d8      	b.n	2fffa05c <fdt_stringlist_search+0x12>
2fffa0aa:	f06f 050e 	mvn.w	r5, #14
2fffa0ae:	e7d5      	b.n	2fffa05c <fdt_stringlist_search+0x12>

2fffa0b0 <fdt_node_check_compatible>:
2fffa0b0:	b513      	push	{r0, r1, r4, lr}
2fffa0b2:	4614      	mov	r4, r2
2fffa0b4:	4a07      	ldr	r2, [pc, #28]	; (2fffa0d4 <fdt_node_check_compatible+0x24>)
2fffa0b6:	ab01      	add	r3, sp, #4
2fffa0b8:	f7ff fe91 	bl	2fff9dde <fdt_getprop>
2fffa0bc:	b910      	cbnz	r0, 2fffa0c4 <fdt_node_check_compatible+0x14>
2fffa0be:	9801      	ldr	r0, [sp, #4]
2fffa0c0:	b002      	add	sp, #8
2fffa0c2:	bd10      	pop	{r4, pc}
2fffa0c4:	9901      	ldr	r1, [sp, #4]
2fffa0c6:	4622      	mov	r2, r4
2fffa0c8:	f7ff ff9c 	bl	2fffa004 <fdt_stringlist_contains>
2fffa0cc:	fab0 f080 	clz	r0, r0
2fffa0d0:	0940      	lsrs	r0, r0, #5
2fffa0d2:	e7f5      	b.n	2fffa0c0 <fdt_node_check_compatible+0x10>
2fffa0d4:	2fffcd95 	.word	0x2fffcd95

2fffa0d8 <fdt_node_offset_by_compatible>:
2fffa0d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
2fffa0da:	4605      	mov	r5, r0
2fffa0dc:	460f      	mov	r7, r1
2fffa0de:	4616      	mov	r6, r2
2fffa0e0:	f7ff fbf8 	bl	2fff98d4 <fdt_check_header>
2fffa0e4:	4604      	mov	r4, r0
2fffa0e6:	b938      	cbnz	r0, 2fffa0f8 <fdt_node_offset_by_compatible+0x20>
2fffa0e8:	4602      	mov	r2, r0
2fffa0ea:	4639      	mov	r1, r7
2fffa0ec:	4628      	mov	r0, r5
2fffa0ee:	f7ff fcc3 	bl	2fff9a78 <fdt_next_node>
2fffa0f2:	2800      	cmp	r0, #0
2fffa0f4:	4604      	mov	r4, r0
2fffa0f6:	da01      	bge.n	2fffa0fc <fdt_node_offset_by_compatible+0x24>
2fffa0f8:	4620      	mov	r0, r4
2fffa0fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
2fffa0fc:	4632      	mov	r2, r6
2fffa0fe:	4621      	mov	r1, r4
2fffa100:	4628      	mov	r0, r5
2fffa102:	f7ff ffd5 	bl	2fffa0b0 <fdt_node_check_compatible>
2fffa106:	1c43      	adds	r3, r0, #1
2fffa108:	db04      	blt.n	2fffa114 <fdt_node_offset_by_compatible+0x3c>
2fffa10a:	2800      	cmp	r0, #0
2fffa10c:	d0f4      	beq.n	2fffa0f8 <fdt_node_offset_by_compatible+0x20>
2fffa10e:	2200      	movs	r2, #0
2fffa110:	4621      	mov	r1, r4
2fffa112:	e7eb      	b.n	2fffa0ec <fdt_node_offset_by_compatible+0x14>
2fffa114:	4604      	mov	r4, r0
2fffa116:	e7ef      	b.n	2fffa0f8 <fdt_node_offset_by_compatible+0x20>

2fffa118 <__assert>:
2fffa118:	460a      	mov	r2, r1
2fffa11a:	4601      	mov	r1, r0
2fffa11c:	b508      	push	{r3, lr}
2fffa11e:	4803      	ldr	r0, [pc, #12]	; (2fffa12c <__assert+0x14>)
2fffa120:	f000 f95c 	bl	2fffa3dc <printf>
2fffa124:	f7f8 fe9e 	bl	2fff2e64 <console_flush>
2fffa128:	f7ff eba6 	blx	2fff9878 <plat_panic_handler>
2fffa12c:	2fffcda0 	.word	0x2fffcda0

2fffa130 <memchr>:
2fffa130:	4402      	add	r2, r0
2fffa132:	4603      	mov	r3, r0
2fffa134:	b2c9      	uxtb	r1, r1
2fffa136:	b510      	push	{r4, lr}
2fffa138:	4618      	mov	r0, r3
2fffa13a:	4293      	cmp	r3, r2
2fffa13c:	d101      	bne.n	2fffa142 <memchr+0x12>
2fffa13e:	2000      	movs	r0, #0
2fffa140:	e003      	b.n	2fffa14a <memchr+0x1a>
2fffa142:	7804      	ldrb	r4, [r0, #0]
2fffa144:	3301      	adds	r3, #1
2fffa146:	428c      	cmp	r4, r1
2fffa148:	d1f6      	bne.n	2fffa138 <memchr+0x8>
2fffa14a:	bd10      	pop	{r4, pc}

2fffa14c <memcmp>:
2fffa14c:	4402      	add	r2, r0
2fffa14e:	b510      	push	{r4, lr}
2fffa150:	4290      	cmp	r0, r2
2fffa152:	d101      	bne.n	2fffa158 <memcmp+0xc>
2fffa154:	2000      	movs	r0, #0
2fffa156:	e006      	b.n	2fffa166 <memcmp+0x1a>
2fffa158:	f810 3b01 	ldrb.w	r3, [r0], #1
2fffa15c:	f811 4b01 	ldrb.w	r4, [r1], #1
2fffa160:	42a3      	cmp	r3, r4
2fffa162:	d0f5      	beq.n	2fffa150 <memcmp+0x4>
2fffa164:	1b18      	subs	r0, r3, r4
2fffa166:	bd10      	pop	{r4, pc}

2fffa168 <memcpy>:
2fffa168:	440a      	add	r2, r1
2fffa16a:	1e43      	subs	r3, r0, #1
2fffa16c:	b510      	push	{r4, lr}
2fffa16e:	4291      	cmp	r1, r2
2fffa170:	d100      	bne.n	2fffa174 <memcpy+0xc>
2fffa172:	bd10      	pop	{r4, pc}
2fffa174:	f811 4b01 	ldrb.w	r4, [r1], #1
2fffa178:	f803 4f01 	strb.w	r4, [r3, #1]!
2fffa17c:	e7f7      	b.n	2fffa16e <memcpy+0x6>

2fffa17e <memmove>:
2fffa17e:	b470      	push	{r4, r5, r6}
2fffa180:	4613      	mov	r3, r2
2fffa182:	1a46      	subs	r6, r0, r1
2fffa184:	4605      	mov	r5, r0
2fffa186:	4296      	cmp	r6, r2
2fffa188:	460c      	mov	r4, r1
2fffa18a:	d302      	bcc.n	2fffa192 <memmove+0x14>
2fffa18c:	bc70      	pop	{r4, r5, r6}
2fffa18e:	f7ff bfeb 	b.w	2fffa168 <memcpy>
2fffa192:	4414      	add	r4, r2
2fffa194:	4403      	add	r3, r0
2fffa196:	429d      	cmp	r5, r3
2fffa198:	d102      	bne.n	2fffa1a0 <memmove+0x22>
2fffa19a:	4628      	mov	r0, r5
2fffa19c:	bc70      	pop	{r4, r5, r6}
2fffa19e:	4770      	bx	lr
2fffa1a0:	f814 2d01 	ldrb.w	r2, [r4, #-1]!
2fffa1a4:	f803 2d01 	strb.w	r2, [r3, #-1]!
2fffa1a8:	e7f5      	b.n	2fffa196 <memmove+0x18>

2fffa1aa <memset>:
2fffa1aa:	4402      	add	r2, r0
2fffa1ac:	4603      	mov	r3, r0
2fffa1ae:	4293      	cmp	r3, r2
2fffa1b0:	d100      	bne.n	2fffa1b4 <memset+0xa>
2fffa1b2:	4770      	bx	lr
2fffa1b4:	f803 1b01 	strb.w	r1, [r3], #1
2fffa1b8:	e7f9      	b.n	2fffa1ae <memset+0x4>

2fffa1ba <unsigned_num_print>:
2fffa1ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fffa1be:	b087      	sub	sp, #28
2fffa1c0:	4606      	mov	r6, r0
2fffa1c2:	460f      	mov	r7, r1
2fffa1c4:	9d10      	ldr	r5, [sp, #64]	; 0x40
2fffa1c6:	469a      	mov	sl, r3
2fffa1c8:	f10d 0b04 	add.w	fp, sp, #4
2fffa1cc:	2400      	movs	r4, #0
2fffa1ce:	4690      	mov	r8, r2
2fffa1d0:	f04f 0900 	mov.w	r9, #0
2fffa1d4:	4642      	mov	r2, r8
2fffa1d6:	464b      	mov	r3, r9
2fffa1d8:	4630      	mov	r0, r6
2fffa1da:	4639      	mov	r1, r7
2fffa1dc:	3401      	adds	r4, #1
2fffa1de:	f7ff e900 	blx	2fff93e0 <__aeabi_uldivmod>
2fffa1e2:	b2d3      	uxtb	r3, r2
2fffa1e4:	2a09      	cmp	r2, #9
2fffa1e6:	bf94      	ite	ls
2fffa1e8:	3330      	addls	r3, #48	; 0x30
2fffa1ea:	3357      	addhi	r3, #87	; 0x57
2fffa1ec:	454f      	cmp	r7, r9
2fffa1ee:	b2db      	uxtb	r3, r3
2fffa1f0:	bf08      	it	eq
2fffa1f2:	4546      	cmpeq	r6, r8
2fffa1f4:	f80b 3b01 	strb.w	r3, [fp], #1
2fffa1f8:	d20a      	bcs.n	2fffa210 <unsigned_num_print+0x56>
2fffa1fa:	2d00      	cmp	r5, #0
2fffa1fc:	dc17      	bgt.n	2fffa22e <unsigned_num_print+0x74>
2fffa1fe:	2500      	movs	r5, #0
2fffa200:	4626      	mov	r6, r4
2fffa202:	af01      	add	r7, sp, #4
2fffa204:	3e01      	subs	r6, #1
2fffa206:	d214      	bcs.n	2fffa232 <unsigned_num_print+0x78>
2fffa208:	1960      	adds	r0, r4, r5
2fffa20a:	b007      	add	sp, #28
2fffa20c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fffa210:	4606      	mov	r6, r0
2fffa212:	460f      	mov	r7, r1
2fffa214:	e7de      	b.n	2fffa1d4 <unsigned_num_print+0x1a>
2fffa216:	4650      	mov	r0, sl
2fffa218:	3e01      	subs	r6, #1
2fffa21a:	f000 f8ec 	bl	2fffa3f6 <putchar>
2fffa21e:	42a6      	cmp	r6, r4
2fffa220:	dcf9      	bgt.n	2fffa216 <unsigned_num_print+0x5c>
2fffa222:	1b2b      	subs	r3, r5, r4
2fffa224:	42ac      	cmp	r4, r5
2fffa226:	bfd4      	ite	le
2fffa228:	461d      	movle	r5, r3
2fffa22a:	2500      	movgt	r5, #0
2fffa22c:	e7e8      	b.n	2fffa200 <unsigned_num_print+0x46>
2fffa22e:	462e      	mov	r6, r5
2fffa230:	e7f5      	b.n	2fffa21e <unsigned_num_print+0x64>
2fffa232:	5db8      	ldrb	r0, [r7, r6]
2fffa234:	f000 f8df 	bl	2fffa3f6 <putchar>
2fffa238:	e7e4      	b.n	2fffa204 <unsigned_num_print+0x4a>
	...

2fffa23c <vprintf>:
2fffa23c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
2fffa240:	2500      	movs	r5, #0
2fffa242:	4606      	mov	r6, r0
2fffa244:	460c      	mov	r4, r1
2fffa246:	462f      	mov	r7, r5
2fffa248:	7830      	ldrb	r0, [r6, #0]
2fffa24a:	b918      	cbnz	r0, 2fffa254 <vprintf+0x18>
2fffa24c:	4628      	mov	r0, r5
2fffa24e:	b003      	add	sp, #12
2fffa250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
2fffa254:	2825      	cmp	r0, #37	; 0x25
2fffa256:	f106 0601 	add.w	r6, r6, #1
2fffa25a:	f040 80b4 	bne.w	2fffa3c6 <vprintf+0x18a>
2fffa25e:	f04f 0b00 	mov.w	fp, #0
2fffa262:	4659      	mov	r1, fp
2fffa264:	e000      	b.n	2fffa268 <vprintf+0x2c>
2fffa266:	2730      	movs	r7, #48	; 0x30
2fffa268:	7832      	ldrb	r2, [r6, #0]
2fffa26a:	2a30      	cmp	r2, #48	; 0x30
2fffa26c:	f000 809c 	beq.w	2fffa3a8 <vprintf+0x16c>
2fffa270:	3a64      	subs	r2, #100	; 0x64
2fffa272:	b2d0      	uxtb	r0, r2
2fffa274:	2816      	cmp	r0, #22
2fffa276:	f200 80aa 	bhi.w	2fffa3ce <vprintf+0x192>
2fffa27a:	2a16      	cmp	r2, #22
2fffa27c:	f200 80a7 	bhi.w	2fffa3ce <vprintf+0x192>
2fffa280:	e8df f002 	tbb	[pc, r2]
2fffa284:	a5a5a50c 	.word	0xa5a5a50c
2fffa288:	a5a50ca5 	.word	0xa5a50ca5
2fffa28c:	a5a5a57c 	.word	0xa5a5a57c
2fffa290:	35a5a54b 	.word	0x35a5a54b
2fffa294:	a5a57fa5 	.word	0xa5a57fa5
2fffa298:	a569      	.short	0xa569
2fffa29a:	7d          	.byte	0x7d
2fffa29b:	00          	.byte	0x00
2fffa29c:	2901      	cmp	r1, #1
2fffa29e:	dd1c      	ble.n	2fffa2da <vprintf+0x9e>
2fffa2a0:	3407      	adds	r4, #7
2fffa2a2:	f024 0a07 	bic.w	sl, r4, #7
2fffa2a6:	e8fa 8902 	ldrd	r8, r9, [sl], #8
2fffa2aa:	f1b8 0f00 	cmp.w	r8, #0
2fffa2ae:	f179 0300 	sbcs.w	r3, r9, #0
2fffa2b2:	da19      	bge.n	2fffa2e8 <vprintf+0xac>
2fffa2b4:	202d      	movs	r0, #45	; 0x2d
2fffa2b6:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
2fffa2ba:	f000 f89c 	bl	2fffa3f6 <putchar>
2fffa2be:	f1d8 0000 	rsbs	r0, r8, #0
2fffa2c2:	eb69 0149 	sbc.w	r1, r9, r9, lsl #1
2fffa2c6:	f8cd b000 	str.w	fp, [sp]
2fffa2ca:	463b      	mov	r3, r7
2fffa2cc:	220a      	movs	r2, #10
2fffa2ce:	4654      	mov	r4, sl
2fffa2d0:	f7ff ff73 	bl	2fffa1ba <unsigned_num_print>
2fffa2d4:	4405      	add	r5, r0
2fffa2d6:	3601      	adds	r6, #1
2fffa2d8:	e7b6      	b.n	2fffa248 <vprintf+0xc>
2fffa2da:	6820      	ldr	r0, [r4, #0]
2fffa2dc:	f104 0a04 	add.w	sl, r4, #4
2fffa2e0:	ea4f 79e0 	mov.w	r9, r0, asr #31
2fffa2e4:	4680      	mov	r8, r0
2fffa2e6:	e7e0      	b.n	2fffa2aa <vprintf+0x6e>
2fffa2e8:	4640      	mov	r0, r8
2fffa2ea:	4649      	mov	r1, r9
2fffa2ec:	e7eb      	b.n	2fffa2c6 <vprintf+0x8a>
2fffa2ee:	f854 9b04 	ldr.w	r9, [r4], #4
2fffa2f2:	f1b9 0f00 	cmp.w	r9, #0
2fffa2f6:	d10d      	bne.n	2fffa314 <vprintf+0xd8>
2fffa2f8:	4836      	ldr	r0, [pc, #216]	; (2fffa3d4 <vprintf+0x198>)
2fffa2fa:	211c      	movs	r1, #28
2fffa2fc:	f7ff ff0c 	bl	2fffa118 <__assert>
2fffa300:	f108 0801 	add.w	r8, r8, #1
2fffa304:	f000 f877 	bl	2fffa3f6 <putchar>
2fffa308:	f819 0008 	ldrb.w	r0, [r9, r8]
2fffa30c:	2800      	cmp	r0, #0
2fffa30e:	d1f7      	bne.n	2fffa300 <vprintf+0xc4>
2fffa310:	4445      	add	r5, r8
2fffa312:	e7e0      	b.n	2fffa2d6 <vprintf+0x9a>
2fffa314:	f04f 0800 	mov.w	r8, #0
2fffa318:	e7f6      	b.n	2fffa308 <vprintf+0xcc>
2fffa31a:	f854 9b04 	ldr.w	r9, [r4], #4
2fffa31e:	f1b9 0f00 	cmp.w	r9, #0
2fffa322:	d009      	beq.n	2fffa338 <vprintf+0xfc>
2fffa324:	f8df a0b0 	ldr.w	sl, [pc, #176]	; 2fffa3d8 <vprintf+0x19c>
2fffa328:	f04f 0800 	mov.w	r8, #0
2fffa32c:	f81a 0b01 	ldrb.w	r0, [sl], #1
2fffa330:	b960      	cbnz	r0, 2fffa34c <vprintf+0x110>
2fffa332:	4445      	add	r5, r8
2fffa334:	f1ab 0b02 	sub.w	fp, fp, #2
2fffa338:	f8cd b000 	str.w	fp, [sp]
2fffa33c:	463b      	mov	r3, r7
2fffa33e:	2210      	movs	r2, #16
2fffa340:	4648      	mov	r0, r9
2fffa342:	2100      	movs	r1, #0
2fffa344:	f7ff ff39 	bl	2fffa1ba <unsigned_num_print>
2fffa348:	4405      	add	r5, r0
2fffa34a:	e7c4      	b.n	2fffa2d6 <vprintf+0x9a>
2fffa34c:	f108 0801 	add.w	r8, r8, #1
2fffa350:	f000 f851 	bl	2fffa3f6 <putchar>
2fffa354:	e7ea      	b.n	2fffa32c <vprintf+0xf0>
2fffa356:	2901      	cmp	r1, #1
2fffa358:	463b      	mov	r3, r7
2fffa35a:	bfca      	itet	gt
2fffa35c:	1de1      	addgt	r1, r4, #7
2fffa35e:	2100      	movle	r1, #0
2fffa360:	f021 0107 	bicgt.w	r1, r1, #7
2fffa364:	f04f 0210 	mov.w	r2, #16
2fffa368:	bfd1      	iteee	le
2fffa36a:	f854 0b04 	ldrle.w	r0, [r4], #4
2fffa36e:	460c      	movgt	r4, r1
2fffa370:	6849      	ldrgt	r1, [r1, #4]
2fffa372:	f854 0b08 	ldrgt.w	r0, [r4], #8
2fffa376:	f8cd b000 	str.w	fp, [sp]
2fffa37a:	e7e3      	b.n	2fffa344 <vprintf+0x108>
2fffa37c:	3101      	adds	r1, #1
2fffa37e:	3601      	adds	r6, #1
2fffa380:	e772      	b.n	2fffa268 <vprintf+0x2c>
2fffa382:	2901      	cmp	r1, #1
2fffa384:	463b      	mov	r3, r7
2fffa386:	bfca      	itet	gt
2fffa388:	1de1      	addgt	r1, r4, #7
2fffa38a:	2100      	movle	r1, #0
2fffa38c:	f021 0107 	bicgt.w	r1, r1, #7
2fffa390:	f04f 020a 	mov.w	r2, #10
2fffa394:	bfd1      	iteee	le
2fffa396:	f854 0b04 	ldrle.w	r0, [r4], #4
2fffa39a:	460c      	movgt	r4, r1
2fffa39c:	6849      	ldrgt	r1, [r1, #4]
2fffa39e:	f854 0b08 	ldrgt.w	r0, [r4], #8
2fffa3a2:	f8cd b000 	str.w	fp, [sp]
2fffa3a6:	e7cd      	b.n	2fffa344 <vprintf+0x108>
2fffa3a8:	1c70      	adds	r0, r6, #1
2fffa3aa:	f04f 0b00 	mov.w	fp, #0
2fffa3ae:	4606      	mov	r6, r0
2fffa3b0:	f810 2b01 	ldrb.w	r2, [r0], #1
2fffa3b4:	3a30      	subs	r2, #48	; 0x30
2fffa3b6:	b2d7      	uxtb	r7, r2
2fffa3b8:	2f09      	cmp	r7, #9
2fffa3ba:	f63f af54 	bhi.w	2fffa266 <vprintf+0x2a>
2fffa3be:	230a      	movs	r3, #10
2fffa3c0:	fb03 2b0b 	mla	fp, r3, fp, r2
2fffa3c4:	e7f3      	b.n	2fffa3ae <vprintf+0x172>
2fffa3c6:	3501      	adds	r5, #1
2fffa3c8:	f000 f815 	bl	2fffa3f6 <putchar>
2fffa3cc:	e73c      	b.n	2fffa248 <vprintf+0xc>
2fffa3ce:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
2fffa3d2:	e73b      	b.n	2fffa24c <vprintf+0x10>
2fffa3d4:	2fffcdaf 	.word	0x2fffcdaf
2fffa3d8:	2fffcdc1 	.word	0x2fffcdc1

2fffa3dc <printf>:
2fffa3dc:	b40f      	push	{r0, r1, r2, r3}
2fffa3de:	b507      	push	{r0, r1, r2, lr}
2fffa3e0:	a904      	add	r1, sp, #16
2fffa3e2:	f851 0b04 	ldr.w	r0, [r1], #4
2fffa3e6:	9101      	str	r1, [sp, #4]
2fffa3e8:	f7ff ff28 	bl	2fffa23c <vprintf>
2fffa3ec:	b003      	add	sp, #12
2fffa3ee:	f85d eb04 	ldr.w	lr, [sp], #4
2fffa3f2:	b004      	add	sp, #16
2fffa3f4:	4770      	bx	lr

2fffa3f6 <putchar>:
2fffa3f6:	b510      	push	{r4, lr}
2fffa3f8:	4604      	mov	r4, r0
2fffa3fa:	b2c0      	uxtb	r0, r0
2fffa3fc:	f7f8 fd06 	bl	2fff2e0c <console_putc>
2fffa400:	2800      	cmp	r0, #0
2fffa402:	bfac      	ite	ge
2fffa404:	4620      	movge	r0, r4
2fffa406:	f04f 30ff 	movlt.w	r0, #4294967295	; 0xffffffff
2fffa40a:	bd10      	pop	{r4, pc}

2fffa40c <strchr>:
2fffa40c:	b2c9      	uxtb	r1, r1
2fffa40e:	4603      	mov	r3, r0
2fffa410:	781a      	ldrb	r2, [r3, #0]
2fffa412:	4618      	mov	r0, r3
2fffa414:	3301      	adds	r3, #1
2fffa416:	428a      	cmp	r2, r1
2fffa418:	d002      	beq.n	2fffa420 <strchr+0x14>
2fffa41a:	2a00      	cmp	r2, #0
2fffa41c:	d1f8      	bne.n	2fffa410 <strchr+0x4>
2fffa41e:	4610      	mov	r0, r2
2fffa420:	4770      	bx	lr

2fffa422 <strcmp>:
2fffa422:	1e43      	subs	r3, r0, #1
2fffa424:	f813 0f01 	ldrb.w	r0, [r3, #1]!
2fffa428:	f811 2b01 	ldrb.w	r2, [r1], #1
2fffa42c:	4290      	cmp	r0, r2
2fffa42e:	d001      	beq.n	2fffa434 <strcmp+0x12>
2fffa430:	1a80      	subs	r0, r0, r2
2fffa432:	e001      	b.n	2fffa438 <strcmp+0x16>
2fffa434:	2800      	cmp	r0, #0
2fffa436:	d1f5      	bne.n	2fffa424 <strcmp+0x2>
2fffa438:	4770      	bx	lr

2fffa43a <strlcpy>:
2fffa43a:	b510      	push	{r4, lr}
2fffa43c:	4604      	mov	r4, r0
2fffa43e:	b192      	cbz	r2, 2fffa466 <strlcpy+0x2c>
2fffa440:	440a      	add	r2, r1
2fffa442:	460b      	mov	r3, r1
2fffa444:	4618      	mov	r0, r3
2fffa446:	3301      	adds	r3, #1
2fffa448:	4293      	cmp	r3, r2
2fffa44a:	d103      	bne.n	2fffa454 <strlcpy+0x1a>
2fffa44c:	2300      	movs	r3, #0
2fffa44e:	7023      	strb	r3, [r4, #0]
2fffa450:	4603      	mov	r3, r0
2fffa452:	e009      	b.n	2fffa468 <strlcpy+0x2e>
2fffa454:	f813 0c01 	ldrb.w	r0, [r3, #-1]
2fffa458:	f804 0b01 	strb.w	r0, [r4], #1
2fffa45c:	2800      	cmp	r0, #0
2fffa45e:	d1f1      	bne.n	2fffa444 <strlcpy+0xa>
2fffa460:	1a58      	subs	r0, r3, r1
2fffa462:	3801      	subs	r0, #1
2fffa464:	bd10      	pop	{r4, pc}
2fffa466:	460b      	mov	r3, r1
2fffa468:	f813 2b01 	ldrb.w	r2, [r3], #1
2fffa46c:	2a00      	cmp	r2, #0
2fffa46e:	d1fb      	bne.n	2fffa468 <strlcpy+0x2e>
2fffa470:	e7f6      	b.n	2fffa460 <strlcpy+0x26>

2fffa472 <strlen>:
2fffa472:	4603      	mov	r3, r0
2fffa474:	461a      	mov	r2, r3
2fffa476:	3301      	adds	r3, #1
2fffa478:	7811      	ldrb	r1, [r2, #0]
2fffa47a:	2900      	cmp	r1, #0
2fffa47c:	d1fa      	bne.n	2fffa474 <strlen+0x2>
2fffa47e:	1a10      	subs	r0, r2, r0
2fffa480:	4770      	bx	lr

2fffa482 <strncmp>:
2fffa482:	4603      	mov	r3, r0
2fffa484:	4610      	mov	r0, r2
2fffa486:	b510      	push	{r4, lr}
2fffa488:	b142      	cbz	r2, 2fffa49c <strncmp+0x1a>
2fffa48a:	188c      	adds	r4, r1, r2
2fffa48c:	3b01      	subs	r3, #1
2fffa48e:	f813 0f01 	ldrb.w	r0, [r3, #1]!
2fffa492:	f811 2b01 	ldrb.w	r2, [r1], #1
2fffa496:	4290      	cmp	r0, r2
2fffa498:	d001      	beq.n	2fffa49e <strncmp+0x1c>
2fffa49a:	1a80      	subs	r0, r0, r2
2fffa49c:	bd10      	pop	{r4, pc}
2fffa49e:	2800      	cmp	r0, #0
2fffa4a0:	d0fc      	beq.n	2fffa49c <strncmp+0x1a>
2fffa4a2:	428c      	cmp	r4, r1
2fffa4a4:	d1f3      	bne.n	2fffa48e <strncmp+0xc>
2fffa4a6:	2000      	movs	r0, #0
2fffa4a8:	e7f8      	b.n	2fffa49c <strncmp+0x1a>

2fffa4aa <strnlen>:
2fffa4aa:	4603      	mov	r3, r0
2fffa4ac:	2000      	movs	r0, #0
2fffa4ae:	4288      	cmp	r0, r1
2fffa4b0:	d100      	bne.n	2fffa4b4 <strnlen+0xa>
2fffa4b2:	4770      	bx	lr
2fffa4b4:	5c1a      	ldrb	r2, [r3, r0]
2fffa4b6:	2a00      	cmp	r2, #0
2fffa4b8:	d0fb      	beq.n	2fffa4b2 <strnlen+0x8>
2fffa4ba:	3001      	adds	r0, #1
2fffa4bc:	e7f7      	b.n	2fffa4ae <strnlen+0x4>

2fffa4be <strrchr>:
2fffa4be:	4603      	mov	r3, r0
2fffa4c0:	b2c9      	uxtb	r1, r1
2fffa4c2:	2000      	movs	r0, #0
2fffa4c4:	b510      	push	{r4, lr}
2fffa4c6:	461c      	mov	r4, r3
2fffa4c8:	f813 2b01 	ldrb.w	r2, [r3], #1
2fffa4cc:	428a      	cmp	r2, r1
2fffa4ce:	bf08      	it	eq
2fffa4d0:	4620      	moveq	r0, r4
2fffa4d2:	2a00      	cmp	r2, #0
2fffa4d4:	d1f7      	bne.n	2fffa4c6 <strrchr+0x8>
2fffa4d6:	bd10      	pop	{r4, pc}

2fffa4d8 <build_message>:
2fffa4d8:	7542 6c69 2074 203a 3332 313a 3a33 3232     Built : 23:13:22
2fffa4e8:	202c 614d 2079 3731 3220 3230 0033          , May 17 2023.

2fffa4f6 <version_string>:
2fffa4f6:	3276 322e 722d 2e31 2830 6564 7562 2967     v2.2-r1.0(debug)
2fffa506:	333a 3836 6461 6136 6332 642d 7269 7974     :368ad6a2c-dirty
2fffa516:	6200 336c 2f32 7073 6d5f 6e69 732f 5f70     .bl32/sp_min/sp_
2fffa526:	696d 5f6e 616d 6e69 632e 1400 5053 4d5f     min_main.c..SP_M
2fffa536:	4e49 203a 7325 000a 5328 5f50 494d 3a4e     IN: %s..(SP_MIN:
2fffa546:	4920 696e 6974 6c61 7a69 6e69 2067 7572      Initializing ru
2fffa556:	746e 6d69 2065 6573 7672 6369 7365 000a     ntime services..
2fffa566:	5328 5f50 494d 3a4e 5020 6572 6170 6972     (SP_MIN: Prepari
2fffa576:	676e 6520 6978 2074 6f74 6e20 726f 616d     ng exit to norma
2fffa586:	206c 6f77 6c72 0a64 0000                    l world...

2fffa590 <psci_args.7162>:
2fffa590:	0106 000c 0000 0000 d2e0 2ffe 6f63 6d6d     .........../comm
2fffa5a0:	6e6f 722f 6e75 6974 656d 735f 6376 632e     on/runtime_svc.c
2fffa5b0:	0a00 6e49 6176 696c 2064 7572 746e 6d69     ..Invalid runtim
2fffa5c0:	2065 6573 7672 6369 2065 6564 6373 6972     e service descri
2fffa5d0:	7470 726f 2520 0a70 0a00 7245 6f72 2072     ptor %p...Error 
2fffa5e0:	6e69 7469 6169 696c 697a 676e 7220 6e75     initializing run
2fffa5f0:	6974 656d 7320 7265 6976 6563 2520 0a73     time service %s.
2fffa600:	1e00 6e55 6d69 6c70 6d65 6e65 6574 2064     ..Unimplemented 
2fffa610:	7453 6e61 6164 6472 5320 7265 6976 6563     Standard Service
2fffa620:	4320 6c61 3a6c 3020 2578 2078 000a 6573      Call: 0x%x ..se
2fffa630:	7672 6369 7365 732f 6474 735f 6376 732f     rvices/std_svc/s
2fffa640:	6474 735f 6376 735f 7465 7075 632e 7300     td_svc_setup.c.s
2fffa650:	6474 735f 6376 6c00 6269 652f 336c 725f     td_svc.lib/el3_r
2fffa660:	6e75 6974 656d 612f 7261 6863 3233 632f     untime/aarch32/c
2fffa670:	6e6f 6574 7478 6d5f 6d67 2e74 0063 696c     ontext_mgmt.c.li
2fffa680:	2f62 7370 6963 702f 6373 5f69 666f 2e66     b/psci/psci_off.
2fffa690:	0063 696c 2f62 7370 6963 702f 6373 5f69     c.lib/psci/psci_
2fffa6a0:	6e6f 632e 6c00 6269 702f 6373 2f69 7370     on.c.lib/psci/ps
2fffa6b0:	6963 735f 7375 6570 646e 632e 6c00 6269     ci_suspend.c.lib
2fffa6c0:	702f 6373 2f69 7370 6963 635f 6d6f 6f6d     /psci/psci_commo
2fffa6d0:	2e6e 0063 550a 656e 7078 6365 6574 2064     n.c..Unexpected 
2fffa6e0:	6661 6966 696e 7974 6920 666e 206f 7473     affinity info st
2fffa6f0:	7461 0065 5028 4353 2049 6f50 6577 2072     ate.(PSCI Power 
2fffa700:	6f44 616d 6e69 4d20 7061 0a3a 2800 2020     Domain Map:..(  
2fffa710:	6f44 616d 6e69 4e20 646f 2065 203a 654c     Domain Node : Le
2fffa720:	6576 206c 7525 202c 6170 6572 746e 6e5f     vel %u, parent_n
2fffa730:	646f 2065 6425 202c 7453 7461 2065 7325     ode %d, State %s
2fffa740:	2820 7830 7825 0a29 2800 2020 5043 2055      (0x%x)..(  CPU 
2fffa750:	6f4e 6564 3a20 4d20 4950 2044 7830 6c25     Node : MPID 0x%l
2fffa760:	786c 202c 6170 6572 746e 6e5f 646f 2065     lx, parent_node 
2fffa770:	6425 202c 7453 7461 2065 7325 2820 7830     %d, State %s (0x
2fffa780:	7825 0a29 5200 5445 4e45 4954 4e4f 4f00     %x)..RETENTION.O
2fffa790:	4646 0000 0000 0000                         FF......

2fffa798 <psci_state_type_str.7419>:
2fffa798:	a78c 2fff a785 2fff a78f 2fff 696c 2f62     .../.../.../lib/
2fffa7a8:	7370 6963 702f 6373 5f69 616d 6e69 632e     psci/psci_main.c
2fffa7b8:	0a00 6e49 6176 696c 2064 6174 6772 7465     ..Invalid target
2fffa7c8:	7020 776f 7265 6c20 7665 6c65 6620 726f      power level for
2fffa7d8:	7320 7375 6570 646e 6f20 6570 6172 6974      suspend operati
2fffa7e8:	6e6f 000a 551e 696e 706d 656c 656d 746e     on...Unimplement
2fffa7f8:	6465 5020 4353 2049 6143 6c6c 203a 7830     ed PSCI Call: 0x
2fffa808:	7825 000a 0000 696c 2f62 7370 6963 702f     %x....lib/psci/p
2fffa818:	6373 5f69 6573 7574 2e70 0063 696c 2f62     sci_setup.c.lib/
2fffa828:	7370 6963 702f 6373 5f69 7973 7473 6d65     psci/psci_system
2fffa838:	6f5f 6666 632e 6c00 6269 702f 6373 2f69     _off.c.lib/psci/
2fffa848:	7370 6963 6d5f 6d65 705f 6f72 6574 7463     psci_mem_protect
2fffa858:	632e 6c00 6269 6c2f 636f 736b 622f 6b61     .c.lib/locks/bak
2fffa868:	7265 2f79 6162 656b 7972 6c5f 636f 5f6b     ery/bakery_lock_
2fffa878:	6f6e 6d72 6c61 632e 4800 4953 4300 4953     normal.c.HSI.CSI
2fffa888:	0a00 7325 4320 6c61 6269 6172 6974 6e6f     ..%s Calibration
2fffa898:	3a20 4620 6572 2071 6c25 2c75 7420 6972      : Freq %lu, tri
2fffa8a8:	206d 6925 000a 7473 682c 6973 632d 6c61     m %i..st,hsi-cal
2fffa8b8:	7300 2c74 7363 2d69 6163 006c 7473 632c     .st,csi-cal.st,c
2fffa8c8:	6c61 732d 6365 6d00 7563 735f 7665 6400     al-sec.mcu_sev.d
2fffa8d8:	6972 6576 7372 732f 2f74 7465 707a 2f63     rivers/st/etzpc/
2fffa8e8:	7465 707a 2e63 0063 7473 732c 6d74 3233     etzpc.c.st,stm32
2fffa8f8:	652d 7a74 6370 7300 2c74 6564 7063 6f72     -etzpc.st,decpro
2fffa908:	0074 4e28 206f 5445 505a 2043 6f63 666e     t.(No ETZPC conf
2fffa918:	6769 7275 7461 6f69 206e 6e69 4420 2c54     iguration in DT,
2fffa928:	7520 6573 6420 6665 7561 746c 000a 490a      use default...I
2fffa938:	766e 6c61 6469 4420 4345 5250 544f 2520     nvalid DECPROT %
2fffa948:	0064 520a 474e 6e20 696f 6573 000a 7473     d..RNG noise..st
2fffa958:	732c 6d74 3233 722d 676e 6400 6972 6576     ,stm32-rng.drive
2fffa968:	7372 732f 2f74 6e72 2f67 7473 336d 5f32     rs/st/rng/stm32_
2fffa978:	6e72 2e67 0063 7264 7669 7265 2f73 7473     rng.c.drivers/st
2fffa988:	722f 6374 732f 6d74 3233 725f 6374 632e     /rtc/stm32_rtc.c
2fffa998:	7300 2c74 7473 336d 6d32 3170 722d 6374     .st,stm32mp1-rtc
	...

2fffa9a9 <month_len.6671>:
2fffa9a9:	1c1f 1e1f 1e1f 1f1f 1f1e 1f1e 7264 7669     ............driv
2fffa9b9:	7265 2f73 7473 742f 6d61 6570 2f72 7473     ers/st/tamper/st
2fffa9c9:	336d 5f32 6174 706d 632e 0a00 6341 6974     m32_tamp.c..Acti
2fffa9d9:	6576 7420 6d61 6570 3a72 5320 4545 2044     ve tamper: SEED 
2fffa9e9:	6f6e 2074 6e69 7469 6169 696c 657a 0a64     not initialized.
2fffa9f9:	2800 6154 706d 7265 4520 6576 746e 4f20     .(Tamper Event O
2fffaa09:	6363 7275 6572 0a64 2800 6144 6574 3a20     ccurred..(Date :
2fffaa19:	2520 2f75 7525 200a 2009 6954 656d 3a20      %u/%u. . Time :
2fffaa29:	2520 3a75 7525 253a 0a75 7300 2c74 7473      %u:%u:%u..st,st
2fffaa39:	336d 2d32 6174 706d 0a00 6154 706d 7265     m32-tamp..Tamper
2fffaa49:	4920 2050 6f64 7365 276e 2074 7573 7070      IP doesn't supp
2fffaa59:	726f 2074 7274 7375 7a74 6e6f 0065 7473     ort trustzone.st
2fffaa69:	6f2c 7475 2d33 6370 3331 7700 6b61 7565     ,out3-pc13.wakeu
2fffaa79:	2d70 6f73 7275 6563 1e00 6954 656d 2072     p-source..Timer 
2fffaa89:	7369 6e20 746f 6120 6363 7275 7461 2065     is not accurate 
2fffaa99:	6e65 756f 6867 6620 726f 6320 6c61 6269     enough for calib
2fffaaa9:	6172 6974 6e6f 000a 7473 732c 6d74 3233     ration..st,stm32
2fffaab9:	742d 6d69 7265 0073 251e 3a73 4e20 206f     -timers..%s: No 
2fffaac9:	4954 454d 2052 6f66 6e75 0a64 7300 2c74     TIMER found..st,
2fffaad9:	7368 2d69 6163 2d6c 6e69 7570 0074 7473     hsi-cal-input.st
2fffaae9:	632c 6973 632d 6c61 692d 706e 7475           ,csi-cal-input.

2fffaaf8 <__func__.6536>:
2fffaaf8:	7473 336d 5f32 6974 656d 5f72 6567 5f74     stm32_timer_get_
2fffab08:	7464 6e5f 646f 0065 540a 6d61 6570 2072     dt_node..Tamper 
2fffab18:	7325 6f20 6363 7275 0a73 0a00 5453 334d     %s occurs...STM3
2fffab28:	4d32 3150 495f 5152 415f 4958 5245 4952     2MP1_IRQ_AXIERRI
2fffab38:	5152 6720 6e65 7265 7461 6465 000a 490a     RQ generated...I
2fffab48:	5152 415f 4958 5245 4952 5152 6820 6e61     RQ_AXIERRIRQ han
2fffab58:	6c64 2065 6163 6c6c 7720 6f2f 6120 796e     dle call w/o any
2fffab68:	6620 616c 2067 6573 2174 0a21 0a00 6f4e      flag set!!...No
2fffab78:	4920 2054 6168 646e 656c 2072 6e69 4120      IT handler in A
2fffab88:	4d52 7420 637a 3034 2030 7264 7669 7265     RM tzc400 driver
2fffab98:	000a 490a 5152 415f 4958 5245 4952 5152     ...IRQ_AXIERRIRQ
2fffaba8:	6320 7561 6573 6320 6e61 7427 6220 2065      cause can't be 
2fffabb8:	6564 6574 7463 6465 0a00 4553 5543 4552     detected..SECURE
2fffabc8:	4920 2054 6168 646e 656c 2072 6f6e 2074      IT handler not 
2fffabd8:	6564 6966 656e 6620 726f 6920 2074 203a     define for it : 
2fffabe8:	7525 000a 6c70 7461 732f 2f74 7473 336d     %u..plat/st/stm3
2fffabf8:	6d32 3170 732f 5f70 696d 2f6e 7073 6d5f     2mp1/sp_min/sp_m
2fffac08:	6e69 735f 7465 7075 632e 1e00 5452 2043     in_setup.c..RTC 
2fffac18:	7264 7669 7265 6920 696e 2074 7265 6f72     driver init erro
2fffac28:	2072 6925 000a 521e 474e 6420 6972 6576     r %i...RNG drive
2fffac38:	2072 6e69 7469 6520 7272 726f 2520 0a69     r init error %i.
2fffac48:	7700 6b61 7565 0070 690a 7172 6e5f 6d75     .wakeup..irq_num
2fffac58:	3d20 2520 0a64 5200 4354 7020 776f 7265      = %d..RTC power
2fffac68:	6420 6d6f 6961 006e 6554 706d 7265 7461      domain.Temperat
2fffac78:	7275 2065 6f6d 696e 6f74 6972 676e 4c00     ure monitoring.L
2fffac88:	4553 6d20 6e6f 7469 726f 6e69 0067 5348     SE monitoring.HS
2fffac98:	2045 6f6d 696e 6f74 6972 676e 5200 4354     E monitoring.RTC
2fffaca8:	6320 6c61 6e65 6164 2072 766f 7265 6c66      calendar overfl
2fffacb8:	776f 4d00 6e6f 746f 6e6f 6369 6320 756f     ow.Monotonic cou
2fffacc8:	746e 7265 0000 0000                         nter....

2fffacd0 <tamper_name>:
2fffacd0:	ac5f 2fff ac70 2fff ac87 2fff ac96 2fff     _../p../.../.../
2ffface0:	aca5 2fff acbb 2fff 6c70 7461 732f 2f74     .../.../plat/st/
2fffacf0:	7473 336d 6d32 3170 732f 6d74 3233 706d     stm32mp1/stm32mp
2fffad00:	5f31 6f6c 5f77 6f70 6577 2e72 0063 441e     1_low_power.c..D
2fffad10:	5244 6320 6e61 7427 6220 2065 6573 2074     DR can't be set 
2fffad20:	6e69 5320 6c65 2d66 6572 7266 7365 2068     in Self-refresh 
2fffad30:	6f6d 6564 000a 706c 732d 6f74 0070 706c     mode..lp-stop.lp
2fffad40:	766c 732d 6f74 0070 7473 6e61 6264 2d79     lv-stop.standby-
2fffad50:	6464 2d72 7273 7300 6174 646e 7962 642d     ddr-sr.standby-d
2fffad60:	7264 6f2d 6666 0000                         dr-off..

2fffad68 <config_pwr>:
2fffad68:	0000 0000 0200 0000 0000 0000 0000 0000     ................
2fffad78:	0208 0000 0000 0000 0001 0000 0208 0000     ................
2fffad88:	ad36 2fff 0007 0000 0208 0000 ad3e 2fff     6../........>../
2fffad98:	0000 0000 0209 0000 ad48 2fff 0000 0000     ........H../....
2fffada8:	0209 0000 ad57 2fff 0000 0000 0000 0000     ....W../........
2fffadb8:	ad57 2fff 6c70 7461 732f 2f74 7473 336d     W../plat/st/stm3
2fffadc8:	6d32 3170 732f 6d74 3233 706d 5f31 6d70     2mp1/stm32mp1_pm
2fffadd8:	632e 0000                                   .c..

2fffaddc <stm32_psci_ops>:
2fffaddc:	059d 2fff 0519 2fff 0411 2fff 0000 0000     .../.../.../....
2fffadec:	0471 2fff 0505 2fff 0000 0000 05d9 2fff     q../.../......./
2fffadfc:	04c5 2fff 0489 2fff 045d 2fff 0413 2fff     .../.../]../.../
2fffae0c:	0431 2fff 0455 2fff 0000 0000 0000 0000     1../U../........
2fffae1c:	0449 2fff 0000 0000 0000 0000 0000 0000     I../............
2fffae2c:	0000 0000 7973 7473 6d65 6f5f 6666 735f     ....system_off_s
2fffae3c:	636f 6d5f 646f 0065 4e0a 646f 2065 7325     oc_mode..Node %s
2fffae4c:	6e20 746f 6620 756f 646e 000a 7473 732c      not found..st,s
2fffae5c:	6d74 3233 706d 2c31 7770 2d72 6572 0067     tm32mp1,pwr-reg.
2fffae6c:	7973 7473 6d65 735f 7375 6570 646e 735f     system_suspend_s
2fffae7c:	7075 6f70 7472 6465 735f 636f 6d5f 646f     upported_soc_mod
2fffae8c:	7365 0a00 5750 2052 5444 000a 490a 766e     es..PWR DT...Inv
2fffae9c:	6c61 6469 6d20 646f 0a65 7000 616c 2f74     alid mode..plat/
2fffaeac:	7473 732f 6d74 3233 706d 2f31 7473 336d     st/stm32mp1/stm3
2fffaebc:	6d32 3170 705f 776f 7265 635f 6e6f 6966     2mp1_power_confi
2fffaecc:	2e67 0063 490a 766e 6c61 6469 4920 2044     g.c..Invalid ID 
2fffaedc:	7525 7000 616c 2f74 7473 732f 6d74 3233     %u.plat/st/stm32
2fffaeec:	706d 2f31 7473 336d 6d32 3170 735f 6168     mp1/stm32mp1_sha
2fffaefc:	6572 5f64 6572 6f73 7275 6563 2e73 0063     red_resources.c.
2fffaf0c:	490a 766e 6c61 6469 4720 4950 204f 6970     .Invalid GPIO pi
2fffaf1c:	206e 7525 202c 7525 7020 6e69 7328 2029     n %u, %u pin(s) 
2fffaf2c:	7661 6961 616c 6c62 0a65 2800 5445 505a     available..(ETZP
2fffaf3c:	3a43 2520 2073 2528 2964 6320 756f 646c     C: %s (%d) could
2fffaf4c:	6220 2065 6f6e 206e 6573 7563 6572 000a      be non secure..
2fffaf5c:	450a 5a54 4350 203a 7325 2820 6425 2029     .ETZPC: %s (%d) 
2fffaf6c:	7865 6570 7463 6465 7320 6365 7275 2065     expected secure 
2fffaf7c:	7562 2074 4544 5043 4f52 2054 203d 6425     but DECPROT = %d
2fffaf8c:	000a 470a 4950 204f 6162 6b6e 2520 2075     ...GPIO bank %u 
2fffaf9c:	6163 6e6e 746f 6220 2065 6573 7563 6572     cannot be secure
2fffafac:	0a64 6e00 6e6f 7320 6365 7275 0065 6f6e     d..non secure.no
2fffafbc:	2074 6573 0074 6553 7563 6572 2800 7473     t set.Secure.(st
2fffafcc:	336d 6d32 2070 7325 2820 7525 3a29 2520     m32mp %s (%u): %
2fffafdc:	0a73 0a00 4352 2043 7325 4d20 4b43 5250     s...RCC %s MCKPR
2fffafec:	544f 2520 2073 6e61 2064 7325 2820 7525     OT %s and %s (%u
2fffaffc:	2029 6573 7563 6572 000a 5749 4744 0031     ) secure..IWDG1.
2fffb00c:	4155 5452 0031 5053 3649 4900 4332 0034     UART1.SPI6.I2C4.
2fffb01c:	4e52 3147 4800 5341 3148 4300 5952 3150     RNG1.HASH1.CRYP1
2fffb02c:	4900 4332 0036 5453 4547 004e 4b42 5350     .I2C6.STGEN.BKPS
2fffb03c:	4152 004d 4444 4352 5254 004c 4444 5052     RAM.DDRCTRL.DDRP
2fffb04c:	5948 4700 4950 5a4f 0030 5047 4f49 315a     HY.GPIOZ0.GPIOZ1
2fffb05c:	4700 4950 5a4f 0032 5047 4f49 335a 4700     .GPIOZ2.GPIOZ3.G
2fffb06c:	4950 5a4f 0034 5047 4f49 355a 4700 4950     PIOZ4.GPIOZ5.GPI
2fffb07c:	5a4f 0036 5047 4f49 375a 4d00 5543 4d00     OZ6.GPIOZ7.MCU.M
2fffb08c:	4d44 0041 5452 0043 5355 5241 3154 5000     DMA.RTC.USART1.P
2fffb09c:	4c4c 0033                                   LL3.

2fffb0a0 <shres2decprot_tbl>:
2fffb0a0:	000c 0000 0002 0000 b006 2fff 0012 0000     .........../....
2fffb0b0:	0003 0000 b00c 2fff 0011 0000 0004 0000     ......./........
2fffb0c0:	b012 2fff 000a 0000 0005 0000 b017 2fff     .../.........../
2fffb0d0:	000f 0000 0007 0000 b01c 2fff 0009 0000     .........../....
2fffb0e0:	0008 0000 b021 2fff 0000 0000 0009 0000     ....!../........
2fffb0f0:	b027 2fff 000b 0000 000c 0000 b02d 2fff     '../........-../
2fffb100:	ffff ffff 0000 0000 b032 2fff ffff ffff     ........2../....
2fffb110:	0001 0000 b038 2fff ffff ffff 000a 0000     ....8../........
2fffb120:	b040 2fff ffff ffff 000b 0000 b048 2fff     @../........H../

2fffb130 <shres2str_id_tbl>:
2fffb130:	b027 2fff b04f 2fff b056 2fff b05d 2fff     '../O../V../]../
2fffb140:	b064 2fff b06b 2fff b072 2fff b079 2fff     d../k../r../y../
2fffb150:	b080 2fff b021 2fff b017 2fff b02d 2fff     .../!../.../-../
2fffb160:	b006 2fff b087 2fff b08b 2fff b01c 2fff     .../.../.../.../
2fffb170:	b090 2fff b012 2fff b094 2fff b09b 2fff     .../.../.../.../

2fffb180 <stm32mp1_power_domain_tree_desc>:
2fffb180:	0201 7264 7669 7265 2f73 7261 2f6d 6967     ..drivers/arm/gi
2fffb190:	2f63 3276 672f 6369 3276 685f 6c65 6570     c/v2/gicv2_helpe
2fffb1a0:	7372 632e 6400 6972 6576 7372 612f 6d72     rs.c.drivers/arm
2fffb1b0:	672f 6369 762f 2f32 6967 7663 5f32 616d     /gic/v2/gicv2_ma
2fffb1c0:	6e69 632e 2800 5241 204d 4947 7643 2032     in.c.(ARM GICv2 
2fffb1d0:	7264 7669 7265 6920 696e 6974 6c61 7a69     driver initializ
2fffb1e0:	6465 000a 7261 2c6d 6f63 7472 7865 612d     ed..arm,cortex-a
2fffb1f0:	2d37 6967 0063 6923 746e 7265 7572 7470     7-gic.#interrupt
2fffb200:	632d 6c65 736c 6900 746e 7265 7572 7470     -cells.interrupt
2fffb210:	702d 7261 6e65 0074 6573 7563 6572 692d     -parent.secure-i
2fffb220:	746e 7265 7572 7470 6e2d 6d61 7365 0000     nterrupt-names..

2fffb230 <stm32_interrupt_props>:
2fffb230:	001d 0000 00f4 0000 0024 0000 0009 0020     ........$..... .
2fffb240:	000a 0020 000b 0020 000c 0020 000d 0020     .. ... ... ... .
2fffb250:	000f 0020 0008 0020 000e 0020 6c70 7461     .. ... ... .plat
2fffb260:	632f 6d6f 6f6d 2f6e 6c70 7461 705f 6373     /common/plat_psc
2fffb270:	5f69 6f63 6d6d 6e6f 632e 7000 616c 2f74     i_common.c.plat/
2fffb280:	7473 732f 6d74 3233 706d 2f31 6573 7672     st/stm32mp1/serv
2fffb290:	6369 7365 622f 6573 5f63 7673 2e63 0063     ices/bsec_svc.c.
2fffb2a0:	7728 6972 6574 6120 6c6c 6f20 7074 7320     (write all otp s
2fffb2b0:	6375 6563 6465 000a 551e 696e 706d 656c     ucceed...Unimple
2fffb2c0:	656d 746e 6465 5320 4d54 3233 504d 2031     mented STM32MP1 
2fffb2d0:	6553 7672 6369 2065 6143 6c6c 203a 7830     Service Call: 0x
2fffb2e0:	7825 000a 7473 336d 6d32 3170 735f 7069     %x..stm32mp1_sip
2fffb2f0:	735f 6376 6400 6972 6576 7372 732f 2f74     _svc.drivers/st/
2fffb300:	6373 696d 6d2d 6773 622f 7361 2e65 0063     scmi-msg/base.c.

2fffb310 <scmi_base_handler_table>:
2fffb310:	20ad 2fff 20d5 2fff 2069 2fff 2159 2fff     . ./. ./i ./Y!./
2fffb320:	2105 2fff 2045 2fff 1fb9 2fff 7264 7669     .!./E ./.../driv
2fffb330:	7265 2f73 7473 732f 6d63 2d69 736d 2f67     ers/st/scmi-msg/
2fffb340:	6c63 636f 2e6b 0063                         clock.c.

2fffb348 <scmi_clock_handler_table>:
2fffb348:	2221 2fff 2279 2fff 21dd 2fff 2455 2fff     !"./y"./.!./U$./
2fffb358:	22ad 2fff 2409 2fff 23a9 2fff 24e5 2fff     ."./.$./.#./.$./
2fffb368:	7264 7669 7265 2f73 7473 732f 6d63 2d69     drivers/st/scmi-
2fffb378:	736d 2f67 6e65 7274 2e79 0063 410a 6567     msg/entry.c..Age
2fffb388:	746e 2520 2075 7250 746f 636f 6c6f 3020     nt %u Protocol 0
2fffb398:	2578 2078 654d 7373 6761 2065 7830 7825     x%x Message 0x%x
2fffb3a8:	203a 6f6e 2074 7573 7070 726f 6574 0064     : not supported.
2fffb3b8:	7264 7669 7265 2f73 7473 732f 6d63 2d69     drivers/st/scmi-
2fffb3c8:	736d 2f67 6572 6573 5f74 6f64 616d 6e69     msg/reset_domain
2fffb3d8:	632e 0000                                   .c..

2fffb3dc <scmi_rd_handler_table>:
2fffb3dc:	2641 2fff 2669 2fff 25fd 2fff 2699 2fff     A&./i&./.%./.&./
2fffb3ec:	272d 2fff 7264 7669 7265 2f73 7473 732f     -'./drivers/st/s
2fffb3fc:	6d63 2d69 736d 2f67 6d73 2e74 0063 6c70     cmi-msg/smt.c.pl
2fffb40c:	7461 732f 2f74 7473 336d 6d32 3170 732f     at/st/stm32mp1/s
2fffb41c:	6d74 3233 706d 5f31 6373 696d 632e 0a00     tm32mp1_scmi.c..
2fffb42c:	6e49 6176 696c 2064 4353 494d 6320 6f6c     Invalid SCMI clo
2fffb43c:	6b63 6e20 6d61 0a65 0a00 6e49 6176 696c     ck name...Invali
2fffb44c:	2064 4353 494d 7220 7365 7465 6420 6d6f     d SCMI reset dom
2fffb45c:	6961 206e 616e 656d 000a 7073 3669 6900     ain name..spi6.i
2fffb46c:	6332 0034 3269 3663 7500 6173 7472 0031     2c4.i2c6.usart1.
2fffb47c:	7473 6567 006e 7067 6f69 007a 7263 7079     stgen.gpioz.cryp
2fffb48c:	0031 6168 6873 0031 6e72 3167 6d00 6d64     1.hash1.rng1.mdm
2fffb49c:	0061 6c70 336c 715f 7000 6c6c 5f33 0072     a.pll3_q.pll3_r.
2fffb4ac:	6b63 6d5f 7563 6300 5f6b 7368 0065 6b63     ck_mcu.ck_hse.ck
2fffb4bc:	685f 6973 6300 5f6b 7363 0069 6b63 6c5f     _hsi.ck_csi.ck_l
2fffb4cc:	6573 6300 5f6b 736c 0069 6c70 326c 715f     se.ck_lsi.pll2_q
2fffb4dc:	7000 6c6c 5f32 0072 6b63 6d5f 7570 6300     .pll2_r.ck_mpu.c
2fffb4ec:	5f6b 7861 0069 3269 3463 6b5f 6900 6332     k_axi.i2c4_k.i2c
2fffb4fc:	5f36 006b 7769 6764 0031 6e72 3167 6b5f     6_k.iwdg1.rng1_k
2fffb50c:	6300 5f6b 7472 0063 7472 6163 6270 7300     .ck_rtc.rtcapb.s
2fffb51c:	6970 5f36 006b 7375 7261 3174 6b5f 0000     pi6_k.usart1_k..

2fffb52c <agent_resources>:
2fffb52c:	d22c 2fff 0015 0000 d328 2fff 000b 0000     ,../....(../....
2fffb53c:	d380 2fff 0003 0000 0000 0000 0000 0000     .../............

2fffb54c <plat_protocol_list>:
2fffb54c:	1614                                         ...

2fffb54f <sub_vendor>:
	...

2fffb550 <vendor>:
2fffb550:	5453 6300 6d6f 6f6d 2f6e 6674 6c5f 676f     ST.common/tf_log
2fffb560:	632e 6400 6972 6576 7372 632f 6e6f 6f73     .c.drivers/conso
2fffb570:	656c 6d2f 6c75 6974 635f 6e6f 6f73 656c     le/multi_console
2fffb580:	632e 4500 5252 524f 203a 2020 4e00 544f     .c.ERROR:   .NOT
2fffb590:	4349 3a45 2020 5700 5241 494e 474e 203a     ICE:  .WARNING: 
2fffb5a0:	4900 464e 3a4f 2020 2020 5600 5245 4f42     .INFO:    .VERBO
2fffb5b0:	4553 203a 0000 0000                         SE: ....

2fffb5b8 <plat_prefix_str>:
2fffb5b8:	b583 2fff b58d 2fff b597 2fff b5a1 2fff     .../.../.../.../
2fffb5c8:	b5ab 2fff 6c70 7461 732f 2f74 6f63 6d6d     .../plat/st/comm
2fffb5d8:	6e6f 732f 6d74 3233 706d 635f 6d6f 6f6d     on/stm32mp_commo
2fffb5e8:	2e6e 0063 6c70 7461 732f 2f74 7473 336d     n.c.plat/st/stm3
2fffb5f8:	6d32 3170 732f 6d74 3233 706d 5f31 7270     2mp1/stm32mp1_pr
2fffb608:	7669 7461 2e65 0063 420a 4553 3a43 6920     ivate.c..BSEC: i
2fffb618:	7864 253d 2064 6552 6461 4520 7272 726f     dx=%d Read Error
2fffb628:	000a 420a 4553 3a43 2520 2073 6552 6461     ...BSEC: %s Read
2fffb638:	4520 7272 726f 000a 5528 6573 6420 6665      Error..(Use def
2fffb648:	7561 746c 6320 6968 2070 4449 202c 6564     ault chip ID, de
2fffb658:	7562 2067 6964 6173 6c62 6465 000a 6170     bug disabled..pa
2fffb668:	7472 6e5f 6d75 6562 5f72 746f 0070 7768     rt_number_otp.hw
2fffb678:	5f32 746f 0070 0000                         2_otp...

2fffb680 <stm32mp1_mmap>:
2fffb680:	0000 2ffc 0000 0000 0000 2ffc f000 0003     .../......./....
2fffb690:	002a 0000 0000 4000 f000 2fff 0000 0000     *......@.../....
2fffb6a0:	f000 2fff 1000 0000 0038 0000 0000 4000     .../....8......@
2fffb6b0:	0000 4000 0000 0000 0000 4000 0000 4000     ...@.......@...@
2fffb6c0:	0028 0000 0000 4000 0000 8000 0000 0000     (......@........
2fffb6d0:	0000 8000 0000 4000 0028 0000 0000 4000     .......@(......@
	...

2fffb6f8 <stm32mp1_uart_addresses>:
2fffb6f8:	0000 5c00 e000 4000 f000 4000 0000 4001     ...\...@...@...@
2fffb708:	1000 4001 3000 4400 8000 4001 9000 4001     ...@.0.D...@...@

2fffb718 <tzc_source_ip>:
2fffb718:	0c00 0000 00a7 0000 0060 0000 0cc5 0000     ........`.......
2fffb728:	0065 0000 0060 0000 0cd8 0000 006f 0000     e...`.......o...
2fffb738:	0060 0000 0cd0 0000 0076 0000 0060 0000     `.......v...`...
2fffb748:	0cd1 0000 0077 0000 0060 0000 0d00 0000     ....w...`.......
2fffb758:	0064 0000 0060 0000 4cc8 0000 00a6 0000     d...`....L......
2fffb768:	0055 0000 4cd0 0000 0078 0000 0056 0000     U....L..x...V...
2fffb778:	0cca 0000 0069 0000 005e 0000 4cc0 0000     ....i...^....L..
2fffb788:	0047 0000 0058 0000 4cc1 0000 0048 0000     G...X....L..H...
2fffb798:	0059 0000 696c 2f62 6c78 7461 745f 6261     Y...lib/xlat_tab
2fffb7a8:	656c 5f73 3276 612f 7261 6863 3233 782f     les_v2/aarch32/x
2fffb7b8:	616c 5f74 6174 6c62 7365 615f 6372 2e68     lat_tables_arch.
2fffb7c8:	0063 696c 2f62 6c78 7461 745f 6261 656c     c.lib/xlat_table
2fffb7d8:	5f73 3276 782f 616c 5f74 6174 6c62 7365     s_v2/xlat_tables
2fffb7e8:	635f 6e6f 6574 7478 632e 6c00 6269 782f     _context.c.lib/x
2fffb7f8:	616c 5f74 6174 6c62 7365 765f 2f32 6c78     lat_tables_v2/xl
2fffb808:	7461 745f 6261 656c 5f73 6f63 6572 632e     at_tables_core.c
2fffb818:	0a00 6d6d 7061 615f 6464 725f 6765 6f69     ..mmap_add_regio
2fffb828:	5f6e 6863 6365 286b 2029 6166 6c69 6465     n_check() failed
2fffb838:	202e 7265 6f72 2072 6425 000a 4e0a 746f     . error %d...Not
2fffb848:	6520 6f6e 6775 2068 656d 6f6d 7972 7420      enough memory t
2fffb858:	206f 616d 2070 6572 6967 6e6f 0a3a 5620     o map region:. V
2fffb868:	3a41 7830 6c25 2078 5020 3a41 7830 6c25     A:0x%lx  PA:0x%l
2fffb878:	786c 2020 6973 657a 303a 2578 787a 2020     lx  size:0x%zx  
2fffb888:	7461 7274 303a 2578 0a78 6400 6972 6576     attr:0x%x..drive
2fffb898:	7372 612f 6d72 742f 637a 742f 637a 3034     rs/arm/tzc/tzc40
2fffb8a8:	2e30 0063 540a 435a 342d 3030 3a20 5720     0.c..TZC-400 : W
2fffb8b8:	6f72 676e 6420 7665 6369 2065 4449 2820     rong device ID (
2fffb8c8:	7830 7825 2e29 000a 540a 435a 342d 3030     0x%x)....TZC-400
2fffb8d8:	203a 6946 746c 7265 2520 2064 6147 6574     : Filter %d Gate
2fffb8e8:	656b 7065 7265 6120 726c 6165 7964 6520     keeper already e
2fffb8f8:	616e 6c62 6465 000a 450a 7272 726f 6e20     nabled...Error n
2fffb908:	206f 5449 7020 6e65 6964 676e 0021 490a     o IT pending!..I
2fffb918:	6c6c 6765 6c61 6120 6363 7365 2073 6f74     llegal access to
2fffb928:	3020 2578 786c 6920 206e 0a3a 0a00 4e09      0x%lx in :....N
2fffb938:	6e6f 532d 6365 7275 0a65 0a00 5309 6365     on-Secure....Sec
2fffb948:	7275 0a65 0a00 5009 6972 6976 656c 6567     ure....Privilege
2fffb958:	000a 090a 6e55 7270 7669 6c69 6765 0a65     ....Unprivilege.
2fffb968:	0a00 5209 6165 0a64 0a00 5709 6972 6574     ...Read....Write
2fffb978:	000a 7264 7669 7265 2f73 6564 616c 5f79     ..drivers/delay_
2fffb988:	6974 656d 2f72 6564 616c 5f79 6974 656d     timer/delay_time
2fffb998:	2e72 0063 7264 7669 7265 2f73 6564 616c     r.c.drivers/dela
2fffb9a8:	5f79 6974 656d 2f72 6567 656e 6972 5f63     y_timer/generic_
2fffb9b8:	6564 616c 5f79 6974 656d 2e72 0063 7264     delay_timer.c.dr
2fffb9c8:	7669 7265 2f73 7473 622f 6573 2f63 7362     ivers/st/bsec/bs
2fffb9d8:	6365 2e32 0063 7473 732c 6d74 3233 6e2d     ec2.c.st,stm32-n
2fffb9e8:	6d76 6d65 6c2d 7961 756f 0074 766e 656d     vmem-layout.nvme
2fffb9f8:	2d6d 6563 6c6c 6e2d 6d61 7365 6e00 6d76     m-cell-names.nvm
2fffba08:	6d65 632d 6c65 736c 0a00 614d 666c 726f     em-cells..Malfor
2fffba18:	656d 2064 766e 656d 5f6d 616c 6f79 7475     med nvmem_layout
2fffba28:	6e20 646f 3a65 6920 6e67 726f 6465 000a      node: ignored..
2fffba38:	4d0a 7369 6c61 6769 656e 2064 766e 656d     .Misaligned nvme
2fffba48:	5f6d 616c 6f79 7475 6520 656c 656d 746e     m_layout element
2fffba58:	203a 6769 6f6e 6572 0a64 0a00 5342 4345     : ignored...BSEC
2fffba68:	203a 7525 5320 6974 6b63 2d79 6572 6461     : %u Sticky-read
2fffba78:	6220 7469 7220 6165 2064 7245 6f72 2072      bit read Error 
2fffba88:	6925 000a 7473 732c 6d74 3233 706d 3531     %i..st,stm32mp15
2fffba98:	622d 6573 0063 4f1e 5054 6320 6f72 7373     -bsec..OTP cross
2fffbaa8:	7365 4c20 776f 7265 552f 7070 7265 6220     es Lower/Upper b
2fffbab8:	756f 646e 7261 0a79 7300 2c74 6f6e 2d6e     oundary..st,non-
2fffbac8:	6573 7563 6572 6f2d 7074 0a00 6e55 6c61     secure-otp..Unal
2fffbad8:	6769 656e 2064 6f6e 2d6e 6573 7563 6572     igned non-secure
2fffbae8:	4f20 5054 000a 420a 4553 3a43 2520 2075      OTP...BSEC: %u 
2fffbaf8:	7453 6369 796b 772d 6972 6574 6220 7469     Sticky-write bit
2fffbb08:	7220 6165 2064 7245 6f72 2072 6925 000a      read Error %i..
2fffbb18:	420a 4553 3a43 2520 2075 7453 6369 796b     .BSEC: %u Sticky
2fffbb28:	702d 6f72 2067 6962 2074 6572 6461 4520     -prog bit read E
2fffbb38:	7272 726f 2520 0a69 0a00 5342 4345 203a     rror %i...BSEC: 
2fffbb48:	7525 7020 7265 616d 656e 746e 6220 7469     %u permanent bit
2fffbb58:	7220 6165 2064 7245 6f72 2072 6925 000a      read Error %i..
2fffbb68:	421e 4553 3a43 4f20 5054 6c20 636f 656b     .BSEC: OTP locke
2fffbb78:	2c64 7020 6f72 2067 6977 6c6c 6220 2065     d, prog will be 
2fffbb88:	6769 6f6e 6572 0a64 1e00 5342 4345 203a     ignored...BSEC: 
2fffbb98:	5047 4f4c 4b43 6120 7463 7669 7461 6465     GPLOCK activated
2fffbba8:	202c 7270 676f 7720 6c69 206c 6562 6920     , prog will be i
2fffbbb8:	6e67 726f 6465 000a 632f 6f6c 6b63 0073     gnored../clocks.
2fffbbc8:	6c63 636f 2d6b 7266 7165 6575 636e 0079     clock-frequency.
2fffbbd8:	7473 732c 6d74 3233 706d 2d31 6372 0063     st,stm32mp1-rcc.
2fffbbe8:	6c63 636f 2d6b 616e 656d 0073 500a 4c4c     clock-names..PLL
2fffbbf8:	6425 7320 6f74 2070 6166 6c69 6465 4020     %d stop failed @
2fffbc08:	3020 2578 786c 203a 7830 7825 000a 250a      0x%lx: 0x%x...%
2fffbc18:	3a73 6320 6b6c 6920 2064 6425 6e20 746f     s: clk id %d not
2fffbc28:	6620 756f 646e 000a 430a 6f6c 6b63 2520      found...Clock %
2fffbc38:	2064 6163 276e 2074 6562 6520 616e 6c62     d can't be enabl
2fffbc48:	6465 000a 430a 6f6c 6b63 2520 2064 6163     ed...Clock %d ca
2fffbc58:	276e 2074 6562 6420 7369 6261 656c 0a64     n't be disabled.
2fffbc68:	0a00 4c43 444b 5649 2520 2078 7473 7261     ..CLKDIV %x star
2fffbc78:	2074 6166 6c69 6465 4020 3020 2578 786c     t failed @ 0x%lx
2fffbc88:	203a 7830 7825 000a 430a 4b4c 5253 2043     : 0x%x...CLKSRC 
2fffbc98:	7825 7320 6174 7472 6620 6961 656c 2064     %x start failed 
2fffbca8:	2040 7830 6c25 3a78 3020 2578 0a78 0a00     @ 0x%lx: 0x%x...
2fffbcb8:	4c50 254c 2064 7473 7261 2074 6166 6c69     PLL%d start fail
2fffbcc8:	6465 4020 3020 2578 786c 203a 7830 7825     ed @ 0x%lx: 0x%x
2fffbcd8:	000a 4e0a 206f 5043 2055 706f 7265 7461     ...No CPU operat
2fffbce8:	6e69 2067 6f70 6e69 2074 6163 206e 6562     ing point can be
2fffbcf8:	7320 7465 000a 490a 636e 6e6f 6973 7473      set...Inconsist
2fffbd08:	6e65 2074 504f 2050 6573 7474 6e69 7367     ent OPP settings
2fffbd18:	6620 756f 646e 6920 206e 5444 202c 6769      found in DT, ig
2fffbd28:	6f6e 6572 2e64 000a 500a 4c4c 2034 6163     nored....PLL4 ca
2fffbd38:	6e6e 746f 6220 2065 6573 7563 6572 0a64     nnot be secured.
2fffbd48:	2800 6f4e 7020 7261 6e65 2074 6f66 2072     .(No parent for 
2fffbd58:	6c63 636f 206b 6c25 0a75 6300 6b6c 682d     clock %lu..clk-h
2fffbd68:	6973 6300 6b6c 682d 6573 6300 6b6c 632d     si.clk-hse.clk-c
2fffbd78:	6973 6300 6b6c 6c2d 6973 6300 6b6c 6c2d     si.clk-lsi.clk-l
2fffbd88:	6573 6900 7332 635f 696b 006e               se.i2s_ckin.

2fffbd94 <__func__.7241>:
2fffbd94:	7473 336d 6d32 3170 635f 6b6c 675f 7465     stm32mp1_clk_get
2fffbda4:	675f 7461 6465 695f 0064                    _gated_id.

2fffbdae <axiss_parents>:
2fffbdae:	0100                                         ...

2fffbdb1 <fmc_parents>:
2fffbdb1:	1216 1e13                                   ....

2fffbdb5 <i2c12_parents>:
2fffbdb5:	1517 0906                                   ....

2fffbdb9 <i2c35_parents>:
2fffbdb9:	1517 0906                                   ....

2fffbdbd <i2c46_parents>:
2fffbdbd:	111b 0906                                   ....

2fffbdc1 <mcuss_parents>:
2fffbdc1:	0100 1002                                   ....

2fffbdc5 <mpu_parents>:
2fffbdc5:	0100 0a0a                                   ....

2fffbdc9 <parent_id_clock_id>:
2fffbdc9:	0004 0201 ff03 0004 0105 b5b4 b7b6 b9b8     ................
2fffbdd9:	bbba bdbc bfbe c3c3 c3c3 c3c3 0000 c2c1     ................
2fffbde9:	ffc4                                        ..

2fffbdeb <per_parents>:
2fffbdeb:	0100                                         ...

2fffbdee <pllncfgr2>:
2fffbdee:	0800                                         ...

2fffbdf1 <qspi_parents>:
2fffbdf1:	1216 1e13                                   ....

2fffbdf5 <rng1_parents>:
2fffbdf5:	1502 0304                                   ....

2fffbdf9 <rtc_parents>:
2fffbdf9:	04ff 0103                                   ....

2fffbdfd <sdmmc12_parents>:
2fffbdfd:	121c 0613                                   ....

2fffbe01 <sdmmc3_parents>:
2fffbe01:	121d 0613                                   ....

2fffbe05 <spi6_parents>:
2fffbe05:	141b 0906 1107                              ......

2fffbe0b <stgen_parents>:
2fffbe0b:	0706                                        ..

2fffbe0d <stm32mp1_axi_div>:
2fffbe0d:	0201 0403 0404 0404                          .........

2fffbe16 <stm32mp1_clk_gate>:
2fffbe16:	00d8 dc00 0100 16ff 00d8 dd01 0100 16ff     ................
2fffbe26:	00d8 de02 0100 16ff 00d8 df03 0100 16ff     ................
2fffbe36:	00d8 e004 0100 0fff 00d8 e105 0100 0fff     ................
2fffbe46:	00d8 e206 0100 1aff 00d8 e307 0100 1aff     ................
2fffbe56:	00d8 e408 0100 16ff 00d8 e509 0100 1aff     ................
2fffbe66:	00d8 e60a 0100 1aff 0a00 cb06 0001 17ff     ................
2fffbe76:	0a08 d002 0001 18ff 0a10 330b 0001 ffff     ...........3....
2fffbe86:	0200 a700 0001 ffff 0200 e708 0001 ffff     ................
2fffbe96:	0200 3a0f 0001 ffff 0200 7f10 0001 ff11     ...:............
2fffbea6:	0208 8700 0101 ff04 0208 8c02 0101 ff03     ................
2fffbeb6:	0208 8e03 0101 ff03 0208 9404 0101 ff05     ................
2fffbec6:	0208 4108 0101 1bff 0208 420b 0101 1bff     ...A.......B....
2fffbed6:	0208 710c 0101 1bff 0208 430d 0101 1bff     ...q.......C....
2fffbee6:	0208 440f 0101 1bff 0208 4510 0101 1bff     ...D.......E....
2fffbef6:	0208 8014 0101 ff02 0140 c014 0100 ff13     ........@.......
2fffbf06:	0a18 4700 0001 ffff 0a18 4801 0001 ffff     ...G.......H....
2fffbf16:	0a18 a608 0001 ff12 0a18 7810 0001 ff0c     ...........x....
2fffbf26:	0210 5f00 0101 1bff 0210 6004 0101 1bff     ..._.......`....
2fffbf36:	0210 6105 0101 1bff 0210 7c06 0101 ff06     ...a.......|....
2fffbf46:	0210 6308 0101 1bff 0220 6400 0101 16ff     ...c.... ..d....
2fffbf56:	0218 6505 0001 ffff 0218 690a 0001 16ff     ...e.......i....
2fffbf66:	0218 7610 0001 ff0b 0218 7711 0001 ff0b     ...v.......w....
2fffbf76:	0218 6f18 0001 ffff 080c d608 0000 ffff     ...o............
	...

2fffbf88 <stm32mp1_clk_pll>:
2fffbf88:	0001 0000 0028 0084 0088 008c 0080 0090     ....(...........
2fffbf98:	0000 0000 0001 0000 00ff 0000 00ff 0000     ................
2fffbfa8:	0001 0000 0028 0098 009c 00a0 0094 00a4     ....(...........
2fffbfb8:	0000 0000 0001 0000 00ff 0000 00ff 0000     ................
2fffbfc8:	0000 0000 0820 0884 0888 088c 0880 0890     .... ...........
2fffbfd8:	0000 0000 0001 0000 0002 0000 00ff 0000     ................
2fffbfe8:	0000 0000 0824 0898 089c 08a0 0894 08a4     ....$...........
2fffbff8:	0000 0000 0001 0000 0002 0000 0005 0000     ................

2fffc008 <stm32mp1_clk_sel>:
2fffc008:	08c0 0700 0004 0000 bdb5 2fff 08c4 0700     .........../....
2fffc018:	0004 0000 bdb9 2fff 00d4 0300 0002 0000     ......./........
2fffc028:	be0b 2fff 00c0 0700 0004 0000 bdbd 2fff     .../.........../
2fffc038:	00c4 0700 0006 0000 be05 2fff 00c8 0700     .........../....
2fffc048:	0006 0000 c138 2fff 00cc 0300 0004 0000     ....8../........
2fffc058:	bdf5 2fff 08e4 0700 0005 0000 c133 2fff     .../........3../
2fffc068:	08e8 0700 0005 0000 c12e 2fff 08ec 0700     .........../....
2fffc078:	0005 0000 c12e 2fff 08f0 0700 0005 0000     ......./........
2fffc088:	c12e 2fff 08f4 0700 0004 0000 bdfd 2fff     .../.........../
2fffc098:	08f8 0700 0004 0000 be01 2fff 0900 0300     .........../....
2fffc0a8:	0004 0000 bdf1 2fff 0904 0300 0004 0000     ......./........
2fffc0b8:	bdb1 2fff 0024 0700 0003 0000 bdae 2fff     .../$........../
2fffc0c8:	0048 0300 0004 0000 bdc1 2fff 091c 0300     H........../....
2fffc0d8:	0003 0000 c140 2fff 091c 0104 0002 0000     ....@../........
2fffc0e8:	c13e 2fff 0140 0310 0004 0000 bdf9 2fff     >../@........../
2fffc0f8:	0020 0300 0004 0000 bdc5 2fff 00d0 0300      ........../....
2fffc108:	0003 0000 bdeb 2fff                         ......./

2fffc110 <stm32mp1_mcu_div>:
2fffc110:	0100 0302 0604 0807 0909 0909 0909 0909     ................

2fffc120 <stm32mp1_mpu_apbx_div>:
2fffc120:	0100 0302 0404 0404                         ........

2fffc128 <stm32mp1_pll>:
2fffc128:	1004 0863 c710                              ..c...

2fffc12e <uart234578_parents>:
2fffc12e:	1417 0906                                    .....

2fffc133 <uart6_parents>:
2fffc133:	1418 0906                                    .....

2fffc138 <usart1_parents>:
2fffc138:	111b 0906 0714                              ......

2fffc13e <usbo_parents>:
2fffc13e:	2115                                        .!

2fffc140 <usbphy_parents>:
2fffc140:	1507 0a08 6e55 6e6b 776f 206e 6553 666c     ....Unknown Self
2fffc150:	5220 6665 6572 6873 6d20 646f 0a65            Refresh mode..

2fffc15f <CSWTCH.26>:
2fffc15f:	0001 0000 0000 0000 0302 7264 7669 7265     ..........driver
2fffc16f:	2f73 7473 672f 6970 2f6f 7473 336d 5f32     s/st/gpio/stm32_
2fffc17f:	7067 6f69 632e 7000 6e69 7463 6c72 302d     gpio.c.pinctrl-0
2fffc18f:	7000 6e69 756d 0078 6c73 7765 722d 7461     .pinmux.slew-rat
2fffc19f:	0065 6962 7361 702d 6c75 2d6c 7075 6200     e.bias-pull-up.b
2fffc1af:	6169 2d73 7570 6c6c 642d 776f 006e 7264     ias-pull-down.dr
2fffc1bf:	7669 2d65 706f 6e65 642d 6172 6e69 6700     ive-open-drain.g
2fffc1cf:	6970 2d6f 6f63 746e 6f72 6c6c 7265 0a00     pio-controller..
2fffc1df:	4950 434e 5254 204c 6e69 6f63 736e 7369     PINCTRL inconsis
2fffc1ef:	6574 746e 6920 206e 5444 000a 3269 2d63     tent in DT..i2c-
2fffc1ff:	6373 2d6c 6972 6973 676e 742d 6d69 2d65     scl-rising-time-
2fffc20f:	736e 6900 6332 732d 6c63 662d 6c61 696c     ns.i2c-scl-falli
2fffc21f:	676e 742d 6d69 2d65 736e 0a00 6e49 6176     ng-time-ns..Inva
2fffc22f:	696c 2064 7562 2073 7073 6565 2064 2528     lid bus speed (%
2fffc23f:	2069 203e 6925 0a29 0a00 3249 2043 6c63     i > %i)...I2C cl
2fffc24f:	636f 206b 6172 6574 6920 2073 0a30 0a00     ock rate is 0...
2fffc25f:	3249 2043 7073 6565 2064 756f 2074 666f     I2C speed out of
2fffc26f:	6220 756f 646e 7b20 6425 0a7d 0a00 4920      bound {%d}... I
2fffc27f:	4332 7420 6d69 6e69 7367 6f20 7475 6f20     2C timings out o
2fffc28f:	2066 6f62 6e75 2064 6952 6573 257b 3e64     f bound Rise{%d>
2fffc29f:	6425 2f7d 6146 6c6c 257b 3e64 6425 0a7d     %d}/Fall{%d>%d}.
2fffc2af:	0a00 4e44 2046 756f 2074 666f 6220 756f     ..DNF out of bou
2fffc2bf:	646e 2520 2f64 6425 000a 200a 3249 2043     nd %d/%d... I2C 
2fffc2cf:	6f6e 5020 6572 6373 6c61 7265 7320 6c6f     no Prescaler sol
2fffc2df:	7475 6f69 0a6e 0a00 4920 4332 6e20 206f     ution... I2C no 
2fffc2ef:	6f73 756c 6974 6e6f 6120 2074 6c61 0a6c     solution at all.
2fffc2ff:	0a00 6146 6c69 6465 7420 206f 6f63 706d     ..Failed to comp
2fffc30f:	7475 2065 3249 2043 6974 696d 676e 0a73     ute I2C timings.
2fffc31f:	1e00 6f44 6e77 7267 6461 2065 3249 2043     ..Downgrade I2C 
2fffc32f:	7073 6565 2064 6f74 2520 4875 297a 000a     speed to %uHz)..
2fffc33f:	430a 6e61 6f6e 2074 6e69 7469 6169 696c     .Cannot initiali
2fffc34f:	657a 4920 4332 6120 616e 6f6c 2067 6966     ze I2C analog fi
2fffc35f:	746c 7265 2820 6425 0a29 0a00 6d49 6f70     lter (%d)...Impo
2fffc36f:	7373 6269 656c 7420 206f 6f63 706d 7475     ssible to comput
2fffc37f:	2065 3249 2043 6974 696d 676e 0a73 0000     e I2C timings...
	...

2fffc390 <i2c_specs>:
2fffc390:	86a0 0001 012c 0000 03e8 0000 0000 0000     ....,...........
2fffc3a0:	0d7a 0000 00fa 0000 125c 0000 0fa0 0000     z.......\.......
2fffc3b0:	1a80 0006 012c 0000 012c 0000 0000 0000     ....,...,.......
2fffc3c0:	0384 0000 0064 0000 0514 0000 0258 0000     ....d.......X...
2fffc3d0:	4240 000f 0064 0000 0078 0000 0000 0000     @B..d...x.......
2fffc3e0:	01c2 0000 0032 0000 01f4 0000 0104 0000     ....2...........
2fffc3f0:	7473 732c 6d74 3233 706d 2d31 7769 6764     st,stm32mp1-iwdg
2fffc400:	7300 6d74 3233 652c 616e 6c62 2d65 6e6f     .stm32,enable-on
2fffc410:	732d 6f74 0070 7473 336d 2c32 6e65 6261     -stop.stm32,enab
2fffc420:	656c 6f2d 2d6e 7473 6e61 6264 0079 4f0a     le-on-standby..O
2fffc430:	5054 6520 616e 6c62 6465 6220 7475 6920     TP enabled but i
2fffc440:	6477 2567 2075 5444 642d 7369 6261 656c     wdg%u DT-disable
2fffc450:	0a64 7300 6365 7275 2d65 6974 656d 756f     d..secure-timeou
2fffc460:	2d74 6573 0063 490a 4457 2547 2078 6165     t-sec..IWDG%x ea
2fffc470:	6c72 2079 6974 656d 756f 2074 6f63 666e     rly timeout conf
2fffc480:	6769 6620 6961 656c 2064 2528 2964 000a     ig failed (%d)..
2fffc490:	7473 732c 7074 696d 3163 7200 6765 6c75     st,stpmic1.regul
2fffc4a0:	7461 726f 6d2d 6e69 6d2d 6369 6f72 6f76     ator-min-microvo
2fffc4b0:	746c 7200 6765 6c75 7461 726f 6d2d 7861     lt.regulator-max
2fffc4c0:	6d2d 6369 6f72 6f76 746c 7200 6765 6c75     -microvolt.regul
2fffc4d0:	7461 726f 0073 7264 7669 7265 2f73 7473     ators.drivers/st
2fffc4e0:	702f 696d 2f63 7473 336d 6d32 5f70 6d70     /pmic/stm32mp_pm
2fffc4f0:	6369 632e 7200 6765 6c75 7461 726f 622d     ic.c.regulator-b
2fffc500:	6f6f 2d74 6e6f 7200 6765 6c75 7461 726f     oot-on.regulator
2fffc510:	612d 776c 7961 2d73 6e6f 7200 6765 6c75     -always-on.regul
2fffc520:	7461 726f 702d 6c75 2d6c 6f64 6e77 7300     ator-pull-down.s
2fffc530:	2c74 616d 6b73 722d 7365 7465 7200 6765     t,mask-reset.reg
2fffc540:	6c75 7461 726f 6f2d 2d6e 6e69 732d 7375     ulator-on-in-sus
2fffc550:	6570 646e 7200 6765 6c75 7461 726f 6f2d     pend.regulator-o
2fffc560:	6666 692d 2d6e 7573 7073 6e65 0064 6572     ff-in-suspend.re
2fffc570:	7567 616c 6f74 2d72 7573 7073 6e65 2d64     gulator-suspend-
2fffc580:	696d 7263 766f 6c6f 0074 6572 7567 616c     microvolt.regula
2fffc590:	6f74 2d72 6f6d 6564 7200 6765 6c75 7461     tor-mode.regulat
2fffc5a0:	726f 6e2d 6d61 0065 490a 4332 6320 6e6f     or-name..I2C con
2fffc5b0:	6966 7567 6172 6974 6e6f 6620 6961 656c     figuration faile
2fffc5c0:	2064 6425 000a 430a 6e61 6f6e 2074 6e69     d %d...Cannot in
2fffc5d0:	7469 6169 696c 657a 4920 4332 2520 2078     itialize I2C %x 
2fffc5e0:	2528 2964 000a 490a 4332 6420 7665 6369     (%d)...I2C devic
2fffc5f0:	2065 6f6e 2074 6572 6461 0a79 6200 6375     e not ready..buc
2fffc600:	006b 646c 006f 646c 346f 6200 6375 316b     k.ldo.ldo4.buck1
2fffc610:	6200 6375 326b 6200 6375 336b 6200 6375     .buck2.buck3.buc
2fffc620:	346b 6c00 6f64 0031 646c 326f 6c00 6f64     k4.ldo1.ldo2.ldo
2fffc630:	0033 646c 356f 6c00 6f64 0036 7276 6665     3.ldo5.ldo6.vref
2fffc640:	645f 7264 6200 6f6f 7473 7000 7277 735f     _ddr.boost.pwr_s
2fffc650:	3177 7000 7277 735f 3277 0000               w1.pwr_sw2..

2fffc65c <buck1_voltage_table>:
2fffc65c:	02d5 02d5 02d5 02d5 02d5 02d5 02ee 0307     ................
2fffc66c:	0320 0339 0352 036b 0384 039d 03b6 03cf      .9.R.k.........
2fffc67c:	03e8 0401 041a 0433 044c 0465 047e 0497     ......3.L.e.~...
2fffc68c:	04b0 04c9 04e2 04fb 0514 052d 0546 055f     ..........-.F._.
2fffc69c:	0578 0591 05aa 05c3 05dc 05dc 05dc 05dc     x...............
2fffc6ac:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................
2fffc6bc:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................
2fffc6cc:	05dc 05dc 05dc 05dc 05dc 05dc 05dc 05dc     ................

2fffc6dc <buck2_voltage_table>:
2fffc6dc:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffc6ec:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffc6fc:	03e8 03e8 041a 041a 044c 044c 047e 047e     ........L.L.~.~.
2fffc70c:	04b0 04b0 04e2 04e2 0514 0514 0546 0546     ............F.F.
2fffc71c:	0578 0578 05aa 05aa 05dc                    x.x.......

2fffc726 <buck3_voltage_table>:
2fffc726:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffc736:	03e8 03e8 03e8 03e8 03e8 03e8 03e8 03e8     ................
2fffc746:	03e8 03e8 03e8 03e8 044c 044c 044c 044c     ........L.L.L.L.
2fffc756:	04b0 04b0 04b0 04b0 0514 0514 0514 0514     ................
2fffc766:	0578 0578 0578 0578 05dc 0640 06a4 0708     x.x.x.x...@.....
2fffc776:	076c 07d0 0834 0898 08fc 0960 09c4 0a28     l...4.....`...(.
2fffc786:	0a8c 0af0 0b54 0bb8 0c1c 0c80 0ce4 0d48     ....T.........H.

2fffc796 <buck4_voltage_table>:
2fffc796:	0258 0271 028a 02a3 02bc 02d5 02ee 0307     X.q.............
2fffc7a6:	0320 0339 0352 036b 0384 039d 03b6 03cf      .9.R.k.........
2fffc7b6:	03e8 0401 041a 0433 044c 0465 047e 0497     ......3.L.e.~...
2fffc7c6:	04b0 04c9 04e2 04fb 0514 0514 0546 0546     ............F.F.
2fffc7d6:	0578 0578 05aa 05aa 05dc 0640 06a4 0708     x.x.......@.....
2fffc7e6:	076c 07d0 0834 0898 08fc 0960 09c4 0a28     l...4.....`...(.
2fffc7f6:	0a8c 0af0 0b54 0bb8 0c1c 0c80 0ce4 0d48     ....T.........H.
2fffc806:	0dac 0e10 0e74 0ed8 0f3c                    ....t...<.

2fffc810 <fixed_5v_voltage_table>:
2fffc810:	1388                                        ..

2fffc812 <ldo1_voltage_table>:
2fffc812:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffc822:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffc832:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffc842:	0ce4                                        ..

2fffc844 <ldo2_voltage_table>:
2fffc844:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffc854:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffc864:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffc874:	0ce4                                        ..

2fffc876 <ldo3_voltage_table>:
2fffc876:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffc886:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffc896:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffc8a6:	0ce4 0ce4 0ce4 0ce4 0ce4 0ce4 0ce4 01f4     ................
2fffc8b6:	ffff                                        ..

2fffc8b8 <ldo4_voltage_table>:
2fffc8b8:	0ce4                                        ..

2fffc8ba <ldo5_voltage_table>:
2fffc8ba:	06a4 06a4 06a4 06a4 06a4 06a4 06a4 06a4     ................
2fffc8ca:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffc8da:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffc8ea:	0ce4 0d48 0dac 0e10 0e74 0ed8 0f3c          ..H.....t...<.

2fffc8f8 <ldo6_voltage_table>:
2fffc8f8:	0384 03e8 044c 04b0 0514 0578 05dc 0640     ....L.....x...@.
2fffc908:	06a4 0708 076c 07d0 0834 0898 08fc 0960     ....l...4.....`.
2fffc918:	09c4 0a28 0a8c 0af0 0b54 0bb8 0c1c 0c80     ..(.....T.......
2fffc928:	0ce4 0000                                   ....

2fffc92c <regulators_table>:
2fffc92c:	c60b 2fff c65c 2fff 2040 1230 1800 0000     .../\../@ 0.....
2fffc93c:	c611 2fff c6dc 2fff 2125 1231 1802 0001     .../.../%!1.....
2fffc94c:	c617 2fff c726 2fff 2238 1232 1804 0002     .../&../8"2.....
2fffc95c:	c61d 2fff c796 2fff 233d 1233 1806 0003     .../.../=#3.....
2fffc96c:	c623 2fff c812 2fff 2519 0035 1a00 0000     #../.../.%5.....
2fffc97c:	c628 2fff c844 2fff 2619 0036 1a00 0001     (../D../.&6.....
2fffc98c:	c62d 2fff c876 2fff 2721 0037 1a00 0002     -../v../!'7.....
2fffc99c:	c606 2fff c8b8 2fff 2801 0038 1a00 0003     .../.../.(8.....
2fffc9ac:	c632 2fff c8ba 2fff 291f 0039 1a00 0004     2../.../.)9.....
2fffc9bc:	c637 2fff c8f8 2fff 2a19 003a 1a00 0005     7../.../.*:.....
2fffc9cc:	c63c 2fff ca0c 2fff 2401 0034 1a00 0006     <../.../.$4.....
2fffc9dc:	c645 2fff c810 2fff 4001 0000 0000 0001     E../.../.@......
2fffc9ec:	c64b 2fff c810 2fff 4001 0000 0000 0002     K../.../.@......
2fffc9fc:	c653 2fff c810 2fff 4001 0000 0000 0004     S../.../.@......

2fffca0c <vref_ddr_voltage_table>:
2fffca0c:	0ce4 732f 6365 7275 2d65 6863 736f 6e65     ../secure-chosen
2fffca1c:	2f00 6863 736f 6e65 7300 6474 756f 2d74     ./chosen.stdout-
2fffca2c:	6170 6874 3a00 6f00 7070 732d 7075 6f70     path.:.opp-suppo
2fffca3c:	7472 6465 682d 0077 706f 2d70 7a68 6f00     rted-hw.opp-hz.o
2fffca4c:	7070 6d2d 6369 6f72 6f76 746c 6f00 616b     pp-microvolt.oka
2fffca5c:	0079 6573 7563 6572 732d 6174 7574 0073     y.secure-status.
2fffca6c:	6e69 6574 7272 7075 7374 652d 7478 6e65     interrupts-exten
2fffca7c:	6564 0064 6573 7563 6572 692d 746e 7265     ded.secure-inter
2fffca8c:	7572 7470 0073 6c70 7461 732f 2f74 6f63     rupts.plat/st/co
2fffca9c:	6d6d 6e6f 732f 6d74 3233 706d 645f 2e74     mmon/stm32mp_dt.
2fffcaac:	0063 6572 2d67 616e 656d 0073 6572 6573     c.reg-names.rese
2fffcabc:	7374 2800 6143 6e6e 746f 6620 6e69 2064     ts.(Cannot find 
2fffcacc:	7325 6e20 646f 2065 6e69 4420 0a54 7300     %s node in DT..s
2fffcadc:	2c74 7473 336d 6d32 3170 642d 7264 7300     t,stm32mp1-ddr.s
2fffcaec:	2c74 656d 2d6d 6973 657a 6f00 6570 6172     t,mem-size.opera
2fffcafc:	6974 676e 702d 696f 746e 2d73 3276 2f00     ting-points-v2./
2fffcb0c:	7063 7375 632f 7570 3040 6300 7570 732d     cpus/cpu@0.cpu-s
2fffcb1c:	7075 6c70 0079 732f 636f 702f 6e69 632d     upply./soc/pin-c
2fffcb2c:	6e6f 7274 6c6f 656c 0072 732f 636f 702f     ontroller./soc/p
2fffcb3c:	6e69 632d 6e6f 7274 6c6f 656c 2d72 007a     in-controller-z.
2fffcb4c:	676e 6970 736f 7000 616c 2f74 7473 732f     ngpios.plat/st/s
2fffcb5c:	6d74 3233 706d 2f31 7473 336d 6d32 3170     tm32mp1/stm32mp1
2fffcb6c:	635f 6e6f 6574 7478 632e 2800 6f53 7466     _context.c.(Soft
2fffcb7c:	6177 6572 6120 6363 7365 2073 6f74 6120     ware access to a
2fffcb8c:	6c6c 6420 6265 6775 6320 6d6f 6f70 656e     ll debug compone
2fffcb9c:	746e 2073 7369 6420 7369 6261 656c 0a64     nts is disabled.
2fffcbac:	7000 616c 2f74 7473 732f 6d74 3233 706d     .plat/st/stm32mp
2fffcbbc:	2f31 7473 336d 6d32 3170 645f 6762 636d     1/stm32mp1_dbgmc
2fffcbcc:	2e75 0063 491e 204f 6f63 706d 6e65 6173     u.c..IO compensa
2fffcbdc:	6974 6e6f 6320 6c65 206c 6f6e 2074 6572     tion cell not re
2fffcbec:	6461 0a79 6900 636e 756c 6564 612f 6372     ady..include/arc
2fffcbfc:	2f68 6161 6372 3368 2f32 6c65 5f33 6f63     h/aarch32/el3_co
2fffcc0c:	6d6d 6e6f 6d5f 6361 6f72 2e73 0053 696c     mmon_macros.S.li
2fffcc1c:	2f62 7063 7375 612f 7261 6863 3233 632f     b/cpus/aarch32/c
2fffcc2c:	7570 685f 6c65 6570 7372 532e                pu_helpers.S.

2fffcc39 <panic_msg>:
2fffcc39:	50          	.byte	0x50
2fffcc3a:	4e41      	.short	0x4e41
2fffcc3c:	61204349 	.word	0x61204349
2fffcc40:	43502074 	.word	0x43502074
2fffcc44:	30203a20 	.word	0x30203a20
2fffcc48:	0078      	.short	0x0078

2fffcc4a <panic_end>:
2fffcc4a:	0a0d      	.short	0x0a0d
	...

2fffcc4d <assert_msg1>:
2fffcc4d:	41          	.byte	0x41
2fffcc4e:	5353      	.short	0x5353
2fffcc50:	3a545245 	.word	0x3a545245
2fffcc54:	6c694620 	.word	0x6c694620
2fffcc58:	2065      	.short	0x2065
	...

2fffcc5b <assert_msg2>:
2fffcc5b:	20          	.byte	0x20
2fffcc5c:	656e694c 	.word	0x656e694c
2fffcc60:	0020      	.short	0x0020
2fffcc62:	7264      	.short	0x7264
2fffcc64:	72657669 	.word	0x72657669
2fffcc68:	74732f73 	.word	0x74732f73
2fffcc6c:	7261752f 	.word	0x7261752f
2fffcc70:	61612f74 	.word	0x61612f74
2fffcc74:	33686372 	.word	0x33686372
2fffcc78:	74732f32 	.word	0x74732f32
2fffcc7c:	5f32336d 	.word	0x5f32336d
2fffcc80:	736e6f63 	.word	0x736e6f63
2fffcc84:	2e656c6f 	.word	0x2e656c6f
2fffcc88:	0053      	.short	0x0053
2fffcc8a:	696c      	.short	0x696c
2fffcc8c:	6c782f62 	.word	0x6c782f62
2fffcc90:	745f7461 	.word	0x745f7461
2fffcc94:	656c6261 	.word	0x656c6261
2fffcc98:	32765f73 	.word	0x32765f73
2fffcc9c:	7261612f 	.word	0x7261612f
2fffcca0:	32336863 	.word	0x32336863
2fffcca4:	616e652f 	.word	0x616e652f
2fffcca8:	5f656c62 	.word	0x5f656c62
2fffccac:	2e756d6d 	.word	0x2e756d6d
2fffccb0:	0053      	.short	0x0053
2fffccb2:	696c      	.short	0x696c
2fffccb4:	70632f62 	.word	0x70632f62
2fffccb8:	612f7375 	.word	0x612f7375
2fffccbc:	68637261 	.word	0x68637261
2fffccc0:	632f3233 	.word	0x632f3233
2fffccc4:	6574726f 	.word	0x6574726f
2fffccc8:	37615f78 	.word	0x37615f78
2fffcccc:	532e      	.short	0x532e
	...

2fffcccf <abort_str>:
2fffcccf:	0a          	.byte	0x0a
2fffccd0:	726f6241 	.word	0x726f6241
2fffccd4:	74612074 	.word	0x74612074
2fffccd8:	7830203a 	.word	0x7830203a
	...

2fffccdd <prefetch_abort_str>:
2fffccdd:	0a          	.byte	0x0a
2fffccde:	7250      	.short	0x7250
2fffcce0:	74656665 	.word	0x74656665
2fffcce4:	41206863 	.word	0x41206863
2fffcce8:	74726f62 	.word	0x74726f62
2fffccec:	3a746120 	.word	0x3a746120
2fffccf0:	00783020 	.word	0x00783020

2fffccf4 <data_abort_str>:
2fffccf4:	7461440a 	.word	0x7461440a
2fffccf8:	62412061 	.word	0x62412061
2fffccfc:	2074726f 	.word	0x2074726f
2fffcd00:	203a7461 	.word	0x203a7461
2fffcd04:	7830      	.short	0x7830
	...

2fffcd07 <undefined_str>:
2fffcd07:	0a          	.byte	0x0a
2fffcd08:	65646e55 	.word	0x65646e55
2fffcd0c:	656e6966 	.word	0x656e6966
2fffcd10:	6e692064 	.word	0x6e692064
2fffcd14:	75727473 	.word	0x75727473
2fffcd18:	6f697463 	.word	0x6f697463
2fffcd1c:	7461206e 	.word	0x7461206e
2fffcd20:	7830203a 	.word	0x7830203a
	...

2fffcd25 <exception_start_str>:
2fffcd25:	0a          	.byte	0x0a
2fffcd26:	7845      	.short	0x7845
2fffcd28:	74706563 	.word	0x74706563
2fffcd2c:	206e6f69 	.word	0x206e6f69
2fffcd30:	65646f6d 	.word	0x65646f6d
2fffcd34:	0078303d 	.word	0x0078303d

2fffcd38 <exception_end_str>:
2fffcd38:	3a746120 	.word	0x3a746120
2fffcd3c:	00783020 	.word	0x00783020

2fffcd40 <dfsr_str>:
2fffcd40:	53464420 	.word	0x53464420
2fffcd44:	203d2052 	.word	0x203d2052
2fffcd48:	7830      	.short	0x7830
	...

2fffcd4b <dfar_str>:
2fffcd4b:	20          	.byte	0x20
2fffcd4c:	52414644 	.word	0x52414644
2fffcd50:	30203d20 	.word	0x30203d20
2fffcd54:	0078      	.short	0x0078

2fffcd56 <ifsr_str>:
2fffcd56:	4920      	.short	0x4920
2fffcd58:	20525346 	.word	0x20525346
2fffcd5c:	7830203d 	.word	0x7830203d
	...

2fffcd61 <ifar_str>:
2fffcd61:	20          	.byte	0x20
2fffcd62:	4649      	.short	0x4649
2fffcd64:	3d205241 	.word	0x3d205241
2fffcd68:	00783020 	.word	0x00783020

2fffcd6c <end_error_str>:
2fffcd6c:	0d0a      	.short	0x0d0a
2fffcd6e:	00          	.byte	0x00
2fffcd6f:	23          	.byte	0x23
2fffcd70:	72646461 	.word	0x72646461
2fffcd74:	2d737365 	.word	0x2d737365
2fffcd78:	6c6c6563 	.word	0x6c6c6563
2fffcd7c:	0073      	.short	0x0073
2fffcd7e:	696c      	.short	0x696c
2fffcd80:	2c78756e 	.word	0x2c78756e
2fffcd84:	6e616870 	.word	0x6e616870
2fffcd88:	00656c64 	.word	0x00656c64
2fffcd8c:	696c612f 	.word	0x696c612f
2fffcd90:	73657361 	.word	0x73657361
2fffcd94:	00          	.byte	0x00
2fffcd95:	63          	.byte	0x63
2fffcd96:	6d6f      	.short	0x6d6f
2fffcd98:	69746170 	.word	0x69746170
2fffcd9c:	00656c62 	.word	0x00656c62
2fffcda0:	45535341 	.word	0x45535341
2fffcda4:	203a5452 	.word	0x203a5452
2fffcda8:	253a7325 	.word	0x253a7325
2fffcdac:	0a64      	.short	0x0a64
2fffcdae:	00          	.byte	0x00
2fffcdaf:	6c          	.byte	0x6c
2fffcdb0:	6c2f6269 	.word	0x6c2f6269
2fffcdb4:	2f636269 	.word	0x2f636269
2fffcdb8:	6e697270 	.word	0x6e697270
2fffcdbc:	632e6674 	.word	0x632e6674
2fffcdc0:	00783000 	.word	0x00783000

2fffcdc4 <__RT_SVC_DESCS_START__>:
2fffcdc4:	00010404 	.word	0x00010404
2fffcdc8:	2fffa64f 	.word	0x2fffa64f
2fffcdcc:	2ffed82d 	.word	0x2ffed82d
2fffcdd0:	2ffed7b1 	.word	0x2ffed7b1

2fffcdd4 <__svc_desc_stm32mp1_sip_svc>:
2fffcdd4:	00010202 2fffb2e4 2fff1ec5 2fff1ec9     ......./.../.../

2fffcde4 <__CPU_OPS_START__>:
2fffcde4:	410fc070 	.word	0x410fc070
2fffcde8:	2fff95d8 	.word	0x2fff95d8
2fffcdec:	2fff95dc 	.word	0x2fff95dc
2fffcdf0:	2fff960c 	.word	0x2fff960c
2fffcdf4:	2fff9640 	.word	0x2fff9640
2fffcdf8:	2fffd538 	.word	0x2fffd538
2fffcdfc:	2fffd53c 	.word	0x2fffd53c

2fffce00 <__CPU_OPS_END__>:
2fffce00:	eaffc07e 	b	2ffed000 <sp_min_entrypoint>
2fffce04:	eafff0b5 	b	2fff90e0 <report_undef_inst>
2fffce08:	eaffc0d4 	b	2ffed160 <sp_min_handle_smc>
2fffce0c:	eafff0b7 	b	2fff90f0 <report_prefetch_abort>
2fffce10:	eafff0ba 	b	2fff9100 <report_data_abort>
2fffce14:	eafff297 	b	2fff9878 <plat_panic_handler>
2fffce18:	eafff296 	b	2fff9878 <plat_panic_handler>
2fffce1c:	eaffc102 	b	2ffed22c <sp_min_handle_fiq>

2fffce20 <__spin_lock_from_thumb>:
2fffce20:	4778      	bx	pc
2fffce22:	e7fd      	b.n	2fffce20 <__spin_lock_from_thumb>
2fffce24:	eafff05b 	b	2fff8f98 <spin_lock>

2fffce28 <__psci_do_pwrdown_cache_maintenance_from_thumb>:
2fffce28:	4778      	bx	pc
2fffce2a:	e7fd      	b.n	2fffce28 <__psci_do_pwrdown_cache_maintenance_from_thumb>
2fffce2c:	eafff068 	b	2fff8fd4 <psci_do_pwrdown_cache_maintenance>

2fffce30 <__print_errata_status_from_thumb>:
2fffce30:	4778      	bx	pc
2fffce32:	e7fd      	b.n	2fffce30 <__print_errata_status_from_thumb>
2fffce34:	eafff04a 	b	2fff8f64 <print_errata_status>

2fffce38 <__spin_unlock_from_thumb>:
2fffce38:	4778      	bx	pc
2fffce3a:	e7fd      	b.n	2fffce38 <__spin_unlock_from_thumb>
2fffce3c:	eafff05e 	b	2fff8fbc <spin_unlock>

2fffce40 <__clean_dcache_range_from_thumb>:
2fffce40:	4778      	bx	pc
2fffce42:	e7fd      	b.n	2fffce40 <__clean_dcache_range_from_thumb>
2fffce44:	eafff0f3 	b	2fff9218 <clean_dcache_range>

2fffce48 <__flush_dcache_range_from_thumb>:
2fffce48:	4778      	bx	pc
2fffce4a:	e7fd      	b.n	2fffce48 <__flush_dcache_range_from_thumb>
2fffce4c:	eafff0e2 	b	2fff91dc <flush_dcache_range>

2fffce50 <__enable_mmu_direct_svc_mon_from_thumb>:
2fffce50:	4778      	bx	pc
2fffce52:	e7fd      	b.n	2fffce50 <__enable_mmu_direct_svc_mon_from_thumb>
2fffce54:	eafff1b4 	b	2fff952c <enable_mmu_direct_svc_mon>

2fffce58 <__console_register_from_arm>:
2fffce58:	e51ff004 	ldr	pc, [pc, #-4]	; 2fffce5c <__console_register_from_arm+0x4>
2fffce5c:	2fff2da5 	.word	0x2fff2da5

2fffce60 <__RO_END_UNALIGNED__>:
	...
